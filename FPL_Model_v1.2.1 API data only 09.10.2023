{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "authorship_tag": "ABX9TyONdlPs9jKG9gxho3+aRjrX",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/huricane85/FPL-API-Fixture-modeler/blob/main/FPL_Model_v1.2.1%20API%20data%20only%2009.10.2023\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 1,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "b6S0KMo-gSGQ",
        "outputId": "016be1e7-1533-4fe4-91be-58dc55d6d6bc"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Cloning into 'UnderstatScraper'...\n",
            "remote: Enumerating objects: 34, done.\u001b[K\n",
            "remote: Counting objects: 100% (34/34), done.\u001b[K\n",
            "remote: Compressing objects: 100% (31/31), done.\u001b[K\n",
            "remote: Total 34 (delta 11), reused 25 (delta 2), pack-reused 0\u001b[K\n",
            "Receiving objects: 100% (34/34), 268.30 KiB | 3.35 MiB/s, done.\n",
            "Resolving deltas: 100% (11/11), done.\n"
          ]
        }
      ],
      "source": [
        "!git clone https://github.com/doughagey/UnderstatScraper"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#!/usr/bin/env python3\n",
        "# -*- coding: utf-8 -*-\n",
        "\"\"\"\n",
        "Created on Mar 1 17:50:36 2020\n",
        "@author: doug hagey\n",
        "\"\"\"\n",
        "\n",
        "import pandas as pd\n",
        "import requests\n",
        "\n",
        "def scrape_understat(payload):\n",
        "    #Build request using url, headers (mimicking what Firefox does normally)\n",
        "    #Works best with verify=True as you won't get the ssl errors. Payload is\n",
        "    #taylored for each request\n",
        "    url = 'https://understat.com/main/getPlayersStats/'\n",
        "    headers = {'content-type':'application/json; charset=utf-8',\n",
        "    'Host': 'understat.com',\n",
        "    'User-Agent': 'Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:73.0) Gecko/20100101 Firefox/73.0',\n",
        "    'Accept': 'application/json, text/javascript, */*; q=0.01',\n",
        "    'Accept-Encoding': 'gzip, deflate, br',\n",
        "    'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8',\n",
        "    'X-Requested-With': 'XMLHttpRequest',\n",
        "    'Content-Length': '310',\n",
        "    'Origin': 'https: // understat.com',\n",
        "    'Connection': 'keep - alive',\n",
        "    'Referer': 'https: // understat.com / league / EPL'\n",
        "    }\n",
        "    response = requests.post(url, data=payload, headers = headers, verify=True)\n",
        "    response_json = response.json()\n",
        "    inner_wrapper = response_json['response']\n",
        "    json_player_data = inner_wrapper['players']\n",
        "    return json_player_data\n",
        "\n",
        "def clean_df(player_df, weeks):\n",
        "    # Get rid of the columns that we don't care about\n",
        "    #player_df.drop(['yellow_cards','red_cards', 'xGChain','xGBuildup','games','time'], axis=1, inplace=True)\n",
        "    player_df  = player_df.rename(columns={'goals':'goals_'+weeks,'xG':'xG_'+weeks,'assists':'assists_'+weeks, 'xA':'xA_'+weeks, 'shots':'shots_'+weeks, 'key_passes':\n",
        "        'key_passes_'+weeks,'npg':'npg_'+weeks,'npxG':'npxG_'+weeks})\n",
        "    if weeks != '1wks':\n",
        "        player_df.drop(['position','team_title'], axis=1, inplace=True)\n",
        "    return(player_df)\n",
        "\n",
        "#Creprint('Getting data for last 1 matches')\n",
        "json_player_data = scrape_understat({'league':'EPL', 'season':'2023', 'n_last_matches': '8'})\n",
        "one_game_table = pd.DataFrame(json_player_data)\n",
        "one_game_df = clean_df(one_game_table,'6wks')\n",
        "\n",
        "\n",
        "print('Getting data for the whole season')\n",
        "json_player_data = scrape_understat({'league':'EPL', 'season':'2023'})\n",
        "season_table = pd.DataFrame(json_player_data)\n",
        "season_df = clean_df(season_table, 'season')\n",
        "\n",
        "print('Getting data for last 1 matches')\n",
        "json_player_data = scrape_understat({'league':'EPL', 'season':'2023', 'n_last_matches': '8'})\n",
        "one_game_table = pd.DataFrame(json_player_data)\n",
        "one_game_df = clean_df(one_game_table, '1wks')\n",
        "\n",
        "print('Merging Tables')\n",
        "EPL_player_df = pd.merge(one_game_df, season_df, on=['id','player_name'])\n",
        "EPL_player_df = pd.merge(EPL_player_df, one_game_df, on=['id','player_name'])\n",
        "\n",
        "\n",
        "print('Writing CSV File')\n",
        "EPL_player_df.to_csv('Understat_EPL_Player_Data_Combined 2021.csv', encoding='utf-8', index=False)\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "D7aK55NHgZOt",
        "outputId": "b09f6eae-8c11-4c21-e770-37ae873855c7"
      },
      "execution_count": 2,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Getting data for the whole season\n",
            "Getting data for last 1 matches\n",
            "Merging Tables\n",
            "Writing CSV File\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "EPL_player_df"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 548
        },
        "id": "n__CYp9pmkGz",
        "outputId": "8f38c012-fb46-448f-8f63-e463b0dcc2b7"
      },
      "execution_count": 3,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "        id     player_name games_x time_x goals_1wks_x            xG_1wks_x  \\\n",
              "0     8260  Erling Haaland       8    715            8    8.660618394613266   \n",
              "1      453   Son Heung-Min       8    665            6   3.7278890162706375   \n",
              "2     5232  Alexander Isak       7    492            6    6.077839493751526   \n",
              "3     1250   Mohamed Salah       8    705            5    5.663195997476578   \n",
              "4     1776    Jarrod Bowen       8    720            5   3.9032531157135963   \n",
              "..     ...             ...     ...    ...          ...                  ...   \n",
              "437  12073     Teden Mengi       3    145            0  0.01999759115278721   \n",
              "438  12086      Alex Matos       1      1            0                    0   \n",
              "439  12094     Mike Trésor       3    147            0     0.52695382386446   \n",
              "440  12105     Alejo Véliz       2      2            0                    0   \n",
              "441  12123         Murillo       2    180            0   0.5254862606525421   \n",
              "\n",
              "    assists_1wks_x            xA_1wks_x shots_1wks_x key_passes_1wks_x  ...  \\\n",
              "0                1    1.668504299595952           32                10  ...   \n",
              "1                0   2.3566972352564335           23                14  ...   \n",
              "2                0  0.16576022654771805           18                 3  ...   \n",
              "3                4    4.713720690459013           26                17  ...   \n",
              "4                1   1.2558341771364212           23                 5  ...   \n",
              "..             ...                  ...          ...               ...  ...   \n",
              "437              0                    0            1                 0  ...   \n",
              "438              0                    0            0                 0  ...   \n",
              "439              0   0.4080401435494423            2                 2  ...   \n",
              "440              0                    0            0                 0  ...   \n",
              "441              0  0.29608601331710815            3                 2  ...   \n",
              "\n",
              "    shots_1wks_y key_passes_1wks_y yellow_cards red_cards position_y  \\\n",
              "0             32                10            0         0          F   \n",
              "1             23                14            0         0        F M   \n",
              "2             18                 3            0         0        F S   \n",
              "3             26                17            1         0          F   \n",
              "4             23                 5            1         0          M   \n",
              "..           ...               ...          ...       ...        ...   \n",
              "437            1                 0            0         0        D S   \n",
              "438            0                 0            0         0          S   \n",
              "439            2                 2            0         0        F S   \n",
              "440            0                 0            1         0          S   \n",
              "441            3                 2            0         0          D   \n",
              "\n",
              "          team_title_y npg_1wks_y          npxG_1wks_y              xGChain  \\\n",
              "0      Manchester City          7    7.138280659914017    7.895254008471966   \n",
              "1            Tottenham          6   3.7278890162706375   7.8562997579574585   \n",
              "2     Newcastle United          5    5.316670656204224    5.515889436006546   \n",
              "3            Liverpool          3   3.3796895295381546    7.709213137626648   \n",
              "4             West Ham          5   3.9032531157135963    4.298343725502491   \n",
              "..                 ...        ...                  ...                  ...   \n",
              "437              Luton          0  0.01999759115278721  0.11997372843325138   \n",
              "438            Chelsea          0                    0                    0   \n",
              "439            Burnley          0     0.52695382386446   0.6905197724699974   \n",
              "440          Tottenham          0                    0                    0   \n",
              "441  Nottingham Forest          0   0.5254862606525421   0.8675576522946358   \n",
              "\n",
              "               xGBuildup  \n",
              "0     0.8118664845824242  \n",
              "1     2.9085745438933372  \n",
              "2      1.147395420819521  \n",
              "3     2.3846318386495113  \n",
              "4     1.2324372678995132  \n",
              "..                   ...  \n",
              "437  0.09997613728046417  \n",
              "438                    0  \n",
              "439  0.16356592625379562  \n",
              "440                    0  \n",
              "441   0.7223030999302864  \n",
              "\n",
              "[442 rows x 48 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-bb76e675-e52a-4125-8f95-627ac5783a45\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>player_name</th>\n",
              "      <th>games_x</th>\n",
              "      <th>time_x</th>\n",
              "      <th>goals_1wks_x</th>\n",
              "      <th>xG_1wks_x</th>\n",
              "      <th>assists_1wks_x</th>\n",
              "      <th>xA_1wks_x</th>\n",
              "      <th>shots_1wks_x</th>\n",
              "      <th>key_passes_1wks_x</th>\n",
              "      <th>...</th>\n",
              "      <th>shots_1wks_y</th>\n",
              "      <th>key_passes_1wks_y</th>\n",
              "      <th>yellow_cards</th>\n",
              "      <th>red_cards</th>\n",
              "      <th>position_y</th>\n",
              "      <th>team_title_y</th>\n",
              "      <th>npg_1wks_y</th>\n",
              "      <th>npxG_1wks_y</th>\n",
              "      <th>xGChain</th>\n",
              "      <th>xGBuildup</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>8260</td>\n",
              "      <td>Erling Haaland</td>\n",
              "      <td>8</td>\n",
              "      <td>715</td>\n",
              "      <td>8</td>\n",
              "      <td>8.660618394613266</td>\n",
              "      <td>1</td>\n",
              "      <td>1.668504299595952</td>\n",
              "      <td>32</td>\n",
              "      <td>10</td>\n",
              "      <td>...</td>\n",
              "      <td>32</td>\n",
              "      <td>10</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>F</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>7</td>\n",
              "      <td>7.138280659914017</td>\n",
              "      <td>7.895254008471966</td>\n",
              "      <td>0.8118664845824242</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>453</td>\n",
              "      <td>Son Heung-Min</td>\n",
              "      <td>8</td>\n",
              "      <td>665</td>\n",
              "      <td>6</td>\n",
              "      <td>3.7278890162706375</td>\n",
              "      <td>0</td>\n",
              "      <td>2.3566972352564335</td>\n",
              "      <td>23</td>\n",
              "      <td>14</td>\n",
              "      <td>...</td>\n",
              "      <td>23</td>\n",
              "      <td>14</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>F M</td>\n",
              "      <td>Tottenham</td>\n",
              "      <td>6</td>\n",
              "      <td>3.7278890162706375</td>\n",
              "      <td>7.8562997579574585</td>\n",
              "      <td>2.9085745438933372</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>5232</td>\n",
              "      <td>Alexander Isak</td>\n",
              "      <td>7</td>\n",
              "      <td>492</td>\n",
              "      <td>6</td>\n",
              "      <td>6.077839493751526</td>\n",
              "      <td>0</td>\n",
              "      <td>0.16576022654771805</td>\n",
              "      <td>18</td>\n",
              "      <td>3</td>\n",
              "      <td>...</td>\n",
              "      <td>18</td>\n",
              "      <td>3</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>F S</td>\n",
              "      <td>Newcastle United</td>\n",
              "      <td>5</td>\n",
              "      <td>5.316670656204224</td>\n",
              "      <td>5.515889436006546</td>\n",
              "      <td>1.147395420819521</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>1250</td>\n",
              "      <td>Mohamed Salah</td>\n",
              "      <td>8</td>\n",
              "      <td>705</td>\n",
              "      <td>5</td>\n",
              "      <td>5.663195997476578</td>\n",
              "      <td>4</td>\n",
              "      <td>4.713720690459013</td>\n",
              "      <td>26</td>\n",
              "      <td>17</td>\n",
              "      <td>...</td>\n",
              "      <td>26</td>\n",
              "      <td>17</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>F</td>\n",
              "      <td>Liverpool</td>\n",
              "      <td>3</td>\n",
              "      <td>3.3796895295381546</td>\n",
              "      <td>7.709213137626648</td>\n",
              "      <td>2.3846318386495113</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>1776</td>\n",
              "      <td>Jarrod Bowen</td>\n",
              "      <td>8</td>\n",
              "      <td>720</td>\n",
              "      <td>5</td>\n",
              "      <td>3.9032531157135963</td>\n",
              "      <td>1</td>\n",
              "      <td>1.2558341771364212</td>\n",
              "      <td>23</td>\n",
              "      <td>5</td>\n",
              "      <td>...</td>\n",
              "      <td>23</td>\n",
              "      <td>5</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>M</td>\n",
              "      <td>West Ham</td>\n",
              "      <td>5</td>\n",
              "      <td>3.9032531157135963</td>\n",
              "      <td>4.298343725502491</td>\n",
              "      <td>1.2324372678995132</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>437</th>\n",
              "      <td>12073</td>\n",
              "      <td>Teden Mengi</td>\n",
              "      <td>3</td>\n",
              "      <td>145</td>\n",
              "      <td>0</td>\n",
              "      <td>0.01999759115278721</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>D S</td>\n",
              "      <td>Luton</td>\n",
              "      <td>0</td>\n",
              "      <td>0.01999759115278721</td>\n",
              "      <td>0.11997372843325138</td>\n",
              "      <td>0.09997613728046417</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>438</th>\n",
              "      <td>12086</td>\n",
              "      <td>Alex Matos</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>S</td>\n",
              "      <td>Chelsea</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>439</th>\n",
              "      <td>12094</td>\n",
              "      <td>Mike Trésor</td>\n",
              "      <td>3</td>\n",
              "      <td>147</td>\n",
              "      <td>0</td>\n",
              "      <td>0.52695382386446</td>\n",
              "      <td>0</td>\n",
              "      <td>0.4080401435494423</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>...</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>F S</td>\n",
              "      <td>Burnley</td>\n",
              "      <td>0</td>\n",
              "      <td>0.52695382386446</td>\n",
              "      <td>0.6905197724699974</td>\n",
              "      <td>0.16356592625379562</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>440</th>\n",
              "      <td>12105</td>\n",
              "      <td>Alejo Véliz</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>S</td>\n",
              "      <td>Tottenham</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>441</th>\n",
              "      <td>12123</td>\n",
              "      <td>Murillo</td>\n",
              "      <td>2</td>\n",
              "      <td>180</td>\n",
              "      <td>0</td>\n",
              "      <td>0.5254862606525421</td>\n",
              "      <td>0</td>\n",
              "      <td>0.29608601331710815</td>\n",
              "      <td>3</td>\n",
              "      <td>2</td>\n",
              "      <td>...</td>\n",
              "      <td>3</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>D</td>\n",
              "      <td>Nottingham Forest</td>\n",
              "      <td>0</td>\n",
              "      <td>0.5254862606525421</td>\n",
              "      <td>0.8675576522946358</td>\n",
              "      <td>0.7223030999302864</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>442 rows × 48 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-bb76e675-e52a-4125-8f95-627ac5783a45')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-bb76e675-e52a-4125-8f95-627ac5783a45 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-bb76e675-e52a-4125-8f95-627ac5783a45');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-1b35aac3-78ca-4ea6-ad5e-9c86145dfa9a\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-1b35aac3-78ca-4ea6-ad5e-9c86145dfa9a')\"\n",
              "            title=\"Suggest charts.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-1b35aac3-78ca-4ea6-ad5e-9c86145dfa9a button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 3
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "one_game_df.to_csv('one_game_df.csv', encoding='utf-8', index=False)\n",
        "one_game_df['time'] = one_game_df['time'].astype(int)\n",
        "one_game_df = one_game_df[one_game_df['time'] > 40]\n",
        "one_game_df['goals_1wks'] = one_game_df['goals_1wks'].astype(int)\n",
        "one_game_df['xG_1wks'] = one_game_df['xG_1wks'].astype(float)\n",
        "one_game_df['xgdifference'] = one_game_df.goals_1wks - one_game_df.xG_1wks\n",
        "one_game_df['assists_1wks'] = one_game_df['assists_1wks'].astype(int)\n",
        "one_game_df['xA_1wks'] = one_game_df['xA_1wks'].astype(float)\n",
        "one_game_df['xAdifference'] = one_game_df.assists_1wks - one_game_df.xA_1wks\n",
        "seasonedit = one_game_df.drop(columns=[ 'yellow_cards','red_cards','time'])\n",
        "sortXgDifference = seasonedit.sort_values('xgdifference')\n",
        "sortXgDifference.head(10)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "id": "IrXPzyJNg3ui",
        "outputId": "dba5bd35-d227-4890-d258-9732a972f3a8"
      },
      "execution_count": 4,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "<ipython-input-4-30b8c2331977>:4: SettingWithCopyWarning: \n",
            "A value is trying to be set on a copy of a slice from a DataFrame.\n",
            "Try using .loc[row_indexer,col_indexer] = value instead\n",
            "\n",
            "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
            "  one_game_df['goals_1wks'] = one_game_df['goals_1wks'].astype(int)\n",
            "<ipython-input-4-30b8c2331977>:5: SettingWithCopyWarning: \n",
            "A value is trying to be set on a copy of a slice from a DataFrame.\n",
            "Try using .loc[row_indexer,col_indexer] = value instead\n",
            "\n",
            "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
            "  one_game_df['xG_1wks'] = one_game_df['xG_1wks'].astype(float)\n",
            "<ipython-input-4-30b8c2331977>:6: SettingWithCopyWarning: \n",
            "A value is trying to be set on a copy of a slice from a DataFrame.\n",
            "Try using .loc[row_indexer,col_indexer] = value instead\n",
            "\n",
            "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
            "  one_game_df['xgdifference'] = one_game_df.goals_1wks - one_game_df.xG_1wks\n",
            "<ipython-input-4-30b8c2331977>:7: SettingWithCopyWarning: \n",
            "A value is trying to be set on a copy of a slice from a DataFrame.\n",
            "Try using .loc[row_indexer,col_indexer] = value instead\n",
            "\n",
            "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
            "  one_game_df['assists_1wks'] = one_game_df['assists_1wks'].astype(int)\n",
            "<ipython-input-4-30b8c2331977>:8: SettingWithCopyWarning: \n",
            "A value is trying to be set on a copy of a slice from a DataFrame.\n",
            "Try using .loc[row_indexer,col_indexer] = value instead\n",
            "\n",
            "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
            "  one_game_df['xA_1wks'] = one_game_df['xA_1wks'].astype(float)\n",
            "<ipython-input-4-30b8c2331977>:9: SettingWithCopyWarning: \n",
            "A value is trying to be set on a copy of a slice from a DataFrame.\n",
            "Try using .loc[row_indexer,col_indexer] = value instead\n",
            "\n",
            "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
            "  one_game_df['xAdifference'] = one_game_df.assists_1wks - one_game_df.xA_1wks\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "        id         player_name games  goals_1wks   xG_1wks  assists_1wks  \\\n",
              "47   10048     Nicolas Jackson     7           2  4.758097             0   \n",
              "405  11356      Enzo Fernández     8           0  2.381943             0   \n",
              "54     556     Marcus Rashford     8           1  3.028798             1   \n",
              "14    1726  Abdoulaye Doucouré     8           3  4.871711             0   \n",
              "154    672         Jordan Ayew     8           0  1.757310             2   \n",
              "356   9983                Beto     5           0  1.745203             0   \n",
              "71    6026         Richarlison     8           1  2.698485             2   \n",
              "389  10809  Keane Lewis-Potter     6           0  1.697718             0   \n",
              "211   3621         Neal Maupay     5           0  1.668722             0   \n",
              "422  11720         Jacob Brown     8           0  1.542797             0   \n",
              "\n",
              "      xA_1wks shots_1wks key_passes_1wks position         team_title npg_1wks  \\\n",
              "47   0.655716         20               5      F S            Chelsea        2   \n",
              "405  1.529664         16              12        M            Chelsea        0   \n",
              "54   1.006406         31               9      F M  Manchester United        1   \n",
              "14   1.529557         16              15        M            Everton        3   \n",
              "154  1.123944         15               8      F M     Crystal Palace        0   \n",
              "356  0.518616         13               4      F S            Everton        0   \n",
              "71   0.727732         18               5    F M S          Tottenham        1   \n",
              "389  0.047711          6               1      F S          Brentford        0   \n",
              "211  0.133534         10               1      F S  Brentford,Everton        0   \n",
              "422  0.733442         13               5    F M S              Luton        0   \n",
              "\n",
              "              npxG_1wks             xGChain             xGBuildup  \\\n",
              "47    4.758096531033516   6.010585479438305    1.1195539757609367   \n",
              "405  1.6207737792283297   5.880240574479103        4.048225261271   \n",
              "54    3.028798498213291   5.490900009870529    1.9868867583572865   \n",
              "14    4.871711313724518   5.110526032745838    1.2972822897136211   \n",
              "154  1.7573104947805405  3.3236232548952103    1.9643894284963608   \n",
              "356   1.745202660560608  2.8913275841623545    0.7313991468399763   \n",
              "71   2.6984850391745567  3.5352008268237114    0.5210381969809532   \n",
              "389   1.697718370705843  1.2090465873479843                     0   \n",
              "211  1.6687223128974438  1.8567488826811314    0.2925838902592659   \n",
              "422  1.5427965596318245   2.143226258456707  0.029953235760331154   \n",
              "\n",
              "     xgdifference  xAdifference  \n",
              "47      -2.758097     -0.655716  \n",
              "405     -2.381943     -1.529664  \n",
              "54      -2.028798     -0.006406  \n",
              "14      -1.871711     -1.529557  \n",
              "154     -1.757310      0.876056  \n",
              "356     -1.745203     -0.518616  \n",
              "71      -1.698485      1.272268  \n",
              "389     -1.697718     -0.047711  \n",
              "211     -1.668722     -0.133534  \n",
              "422     -1.542797     -0.733442  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-13fe483e-ce5e-40e5-9869-dd505ad87776\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>player_name</th>\n",
              "      <th>games</th>\n",
              "      <th>goals_1wks</th>\n",
              "      <th>xG_1wks</th>\n",
              "      <th>assists_1wks</th>\n",
              "      <th>xA_1wks</th>\n",
              "      <th>shots_1wks</th>\n",
              "      <th>key_passes_1wks</th>\n",
              "      <th>position</th>\n",
              "      <th>team_title</th>\n",
              "      <th>npg_1wks</th>\n",
              "      <th>npxG_1wks</th>\n",
              "      <th>xGChain</th>\n",
              "      <th>xGBuildup</th>\n",
              "      <th>xgdifference</th>\n",
              "      <th>xAdifference</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>47</th>\n",
              "      <td>10048</td>\n",
              "      <td>Nicolas Jackson</td>\n",
              "      <td>7</td>\n",
              "      <td>2</td>\n",
              "      <td>4.758097</td>\n",
              "      <td>0</td>\n",
              "      <td>0.655716</td>\n",
              "      <td>20</td>\n",
              "      <td>5</td>\n",
              "      <td>F S</td>\n",
              "      <td>Chelsea</td>\n",
              "      <td>2</td>\n",
              "      <td>4.758096531033516</td>\n",
              "      <td>6.010585479438305</td>\n",
              "      <td>1.1195539757609367</td>\n",
              "      <td>-2.758097</td>\n",
              "      <td>-0.655716</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>405</th>\n",
              "      <td>11356</td>\n",
              "      <td>Enzo Fernández</td>\n",
              "      <td>8</td>\n",
              "      <td>0</td>\n",
              "      <td>2.381943</td>\n",
              "      <td>0</td>\n",
              "      <td>1.529664</td>\n",
              "      <td>16</td>\n",
              "      <td>12</td>\n",
              "      <td>M</td>\n",
              "      <td>Chelsea</td>\n",
              "      <td>0</td>\n",
              "      <td>1.6207737792283297</td>\n",
              "      <td>5.880240574479103</td>\n",
              "      <td>4.048225261271</td>\n",
              "      <td>-2.381943</td>\n",
              "      <td>-1.529664</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>54</th>\n",
              "      <td>556</td>\n",
              "      <td>Marcus Rashford</td>\n",
              "      <td>8</td>\n",
              "      <td>1</td>\n",
              "      <td>3.028798</td>\n",
              "      <td>1</td>\n",
              "      <td>1.006406</td>\n",
              "      <td>31</td>\n",
              "      <td>9</td>\n",
              "      <td>F M</td>\n",
              "      <td>Manchester United</td>\n",
              "      <td>1</td>\n",
              "      <td>3.028798498213291</td>\n",
              "      <td>5.490900009870529</td>\n",
              "      <td>1.9868867583572865</td>\n",
              "      <td>-2.028798</td>\n",
              "      <td>-0.006406</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>14</th>\n",
              "      <td>1726</td>\n",
              "      <td>Abdoulaye Doucouré</td>\n",
              "      <td>8</td>\n",
              "      <td>3</td>\n",
              "      <td>4.871711</td>\n",
              "      <td>0</td>\n",
              "      <td>1.529557</td>\n",
              "      <td>16</td>\n",
              "      <td>15</td>\n",
              "      <td>M</td>\n",
              "      <td>Everton</td>\n",
              "      <td>3</td>\n",
              "      <td>4.871711313724518</td>\n",
              "      <td>5.110526032745838</td>\n",
              "      <td>1.2972822897136211</td>\n",
              "      <td>-1.871711</td>\n",
              "      <td>-1.529557</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>154</th>\n",
              "      <td>672</td>\n",
              "      <td>Jordan Ayew</td>\n",
              "      <td>8</td>\n",
              "      <td>0</td>\n",
              "      <td>1.757310</td>\n",
              "      <td>2</td>\n",
              "      <td>1.123944</td>\n",
              "      <td>15</td>\n",
              "      <td>8</td>\n",
              "      <td>F M</td>\n",
              "      <td>Crystal Palace</td>\n",
              "      <td>0</td>\n",
              "      <td>1.7573104947805405</td>\n",
              "      <td>3.3236232548952103</td>\n",
              "      <td>1.9643894284963608</td>\n",
              "      <td>-1.757310</td>\n",
              "      <td>0.876056</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>356</th>\n",
              "      <td>9983</td>\n",
              "      <td>Beto</td>\n",
              "      <td>5</td>\n",
              "      <td>0</td>\n",
              "      <td>1.745203</td>\n",
              "      <td>0</td>\n",
              "      <td>0.518616</td>\n",
              "      <td>13</td>\n",
              "      <td>4</td>\n",
              "      <td>F S</td>\n",
              "      <td>Everton</td>\n",
              "      <td>0</td>\n",
              "      <td>1.745202660560608</td>\n",
              "      <td>2.8913275841623545</td>\n",
              "      <td>0.7313991468399763</td>\n",
              "      <td>-1.745203</td>\n",
              "      <td>-0.518616</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>71</th>\n",
              "      <td>6026</td>\n",
              "      <td>Richarlison</td>\n",
              "      <td>8</td>\n",
              "      <td>1</td>\n",
              "      <td>2.698485</td>\n",
              "      <td>2</td>\n",
              "      <td>0.727732</td>\n",
              "      <td>18</td>\n",
              "      <td>5</td>\n",
              "      <td>F M S</td>\n",
              "      <td>Tottenham</td>\n",
              "      <td>1</td>\n",
              "      <td>2.6984850391745567</td>\n",
              "      <td>3.5352008268237114</td>\n",
              "      <td>0.5210381969809532</td>\n",
              "      <td>-1.698485</td>\n",
              "      <td>1.272268</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>389</th>\n",
              "      <td>10809</td>\n",
              "      <td>Keane Lewis-Potter</td>\n",
              "      <td>6</td>\n",
              "      <td>0</td>\n",
              "      <td>1.697718</td>\n",
              "      <td>0</td>\n",
              "      <td>0.047711</td>\n",
              "      <td>6</td>\n",
              "      <td>1</td>\n",
              "      <td>F S</td>\n",
              "      <td>Brentford</td>\n",
              "      <td>0</td>\n",
              "      <td>1.697718370705843</td>\n",
              "      <td>1.2090465873479843</td>\n",
              "      <td>0</td>\n",
              "      <td>-1.697718</td>\n",
              "      <td>-0.047711</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>211</th>\n",
              "      <td>3621</td>\n",
              "      <td>Neal Maupay</td>\n",
              "      <td>5</td>\n",
              "      <td>0</td>\n",
              "      <td>1.668722</td>\n",
              "      <td>0</td>\n",
              "      <td>0.133534</td>\n",
              "      <td>10</td>\n",
              "      <td>1</td>\n",
              "      <td>F S</td>\n",
              "      <td>Brentford,Everton</td>\n",
              "      <td>0</td>\n",
              "      <td>1.6687223128974438</td>\n",
              "      <td>1.8567488826811314</td>\n",
              "      <td>0.2925838902592659</td>\n",
              "      <td>-1.668722</td>\n",
              "      <td>-0.133534</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>422</th>\n",
              "      <td>11720</td>\n",
              "      <td>Jacob Brown</td>\n",
              "      <td>8</td>\n",
              "      <td>0</td>\n",
              "      <td>1.542797</td>\n",
              "      <td>0</td>\n",
              "      <td>0.733442</td>\n",
              "      <td>13</td>\n",
              "      <td>5</td>\n",
              "      <td>F M S</td>\n",
              "      <td>Luton</td>\n",
              "      <td>0</td>\n",
              "      <td>1.5427965596318245</td>\n",
              "      <td>2.143226258456707</td>\n",
              "      <td>0.029953235760331154</td>\n",
              "      <td>-1.542797</td>\n",
              "      <td>-0.733442</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-13fe483e-ce5e-40e5-9869-dd505ad87776')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-13fe483e-ce5e-40e5-9869-dd505ad87776 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-13fe483e-ce5e-40e5-9869-dd505ad87776');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-b5b1270c-1b62-45e1-932c-85860fd15e61\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-b5b1270c-1b62-45e1-932c-85860fd15e61')\"\n",
              "            title=\"Suggest charts.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-b5b1270c-1b62-45e1-932c-85860fd15e61 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 4
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "sortXgDifference.tail(10)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 484
        },
        "id": "UxuLfRINhwx7",
        "outputId": "08f07258-998e-4f12-ff34-974335006587"
      },
      "execution_count": 5,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "       id      player_name games  goals_1wks   xG_1wks  assists_1wks  \\\n",
              "4    1776     Jarrod Bowen     8           5  3.903253             1   \n",
              "41   7218  Cristian Romero     8           2  0.833813             0   \n",
              "25    239      Pascal Groß     6           2  0.785485             0   \n",
              "32   5560  Scott McTominay     5           2  0.552161             0   \n",
              "50  11366       Jhon Durán     6           2  0.526433             0   \n",
              "52  11839    Gustavo Hamer     7           2  0.487842             0   \n",
              "11  10177    Evan Ferguson     8           4  2.390436             0   \n",
              "1     453    Son Heung-Min     8           6  3.727889             0   \n",
              "18   7166   Mathias Jensen     8           3  0.301825             1   \n",
              "5    8845   Hee-Chan Hwang     8           5  1.765585             0   \n",
              "\n",
              "     xA_1wks shots_1wks key_passes_1wks position               team_title  \\\n",
              "4   1.255834         23               5        M                 West Ham   \n",
              "41  0.091147          7               3        D                Tottenham   \n",
              "25  1.194409         12              16        M                 Brighton   \n",
              "32  0.036888          3               1      M S        Manchester United   \n",
              "50  0.011847          5               1        S              Aston Villa   \n",
              "52  0.859728         10              11        M         Sheffield United   \n",
              "11  0.501098         16               3      F S                 Brighton   \n",
              "1   2.356697         23              14      F M                Tottenham   \n",
              "18  1.565029          5              15        M                Brentford   \n",
              "5   0.712832         12               2    F M S  Wolverhampton Wanderers   \n",
              "\n",
              "   npg_1wks            npxG_1wks              xGChain            xGBuildup  \\\n",
              "4         5   3.9032531157135963    4.298343725502491   1.2324372678995132   \n",
              "41        2   0.8338131532073021   5.6753027737140656    5.610930919647217   \n",
              "25        2   0.7854854911565781   5.8733073472976685    4.939647197723389   \n",
              "32        2   0.5521611720323563  0.26488203927874565   0.0972980484366417   \n",
              "50        2   0.5264330320060253   0.6481995396316051  0.10991916060447693   \n",
              "52        2   0.4878420364111662   1.0168709671124816   0.4073978019878268   \n",
              "11        4    2.390436490997672    4.455868896096945    1.684309009462595   \n",
              "1         6   3.7278890162706375   7.8562997579574585   2.9085745438933372   \n",
              "18        3  0.30182472988963127    3.146622933447361   2.5787000339478254   \n",
              "5         5   1.7655854746699333   2.9349683532491326   1.1753057623282075   \n",
              "\n",
              "    xgdifference  xAdifference  \n",
              "4       1.096747     -0.255834  \n",
              "41      1.166187     -0.091147  \n",
              "25      1.214515     -1.194409  \n",
              "32      1.447839     -0.036888  \n",
              "50      1.473567     -0.011847  \n",
              "52      1.512158     -0.859728  \n",
              "11      1.609564     -0.501098  \n",
              "1       2.272111     -2.356697  \n",
              "18      2.698175     -0.565029  \n",
              "5       3.234415     -0.712832  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-0bbf3d95-916b-4e32-9d0a-bbcd976ba319\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>player_name</th>\n",
              "      <th>games</th>\n",
              "      <th>goals_1wks</th>\n",
              "      <th>xG_1wks</th>\n",
              "      <th>assists_1wks</th>\n",
              "      <th>xA_1wks</th>\n",
              "      <th>shots_1wks</th>\n",
              "      <th>key_passes_1wks</th>\n",
              "      <th>position</th>\n",
              "      <th>team_title</th>\n",
              "      <th>npg_1wks</th>\n",
              "      <th>npxG_1wks</th>\n",
              "      <th>xGChain</th>\n",
              "      <th>xGBuildup</th>\n",
              "      <th>xgdifference</th>\n",
              "      <th>xAdifference</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>1776</td>\n",
              "      <td>Jarrod Bowen</td>\n",
              "      <td>8</td>\n",
              "      <td>5</td>\n",
              "      <td>3.903253</td>\n",
              "      <td>1</td>\n",
              "      <td>1.255834</td>\n",
              "      <td>23</td>\n",
              "      <td>5</td>\n",
              "      <td>M</td>\n",
              "      <td>West Ham</td>\n",
              "      <td>5</td>\n",
              "      <td>3.9032531157135963</td>\n",
              "      <td>4.298343725502491</td>\n",
              "      <td>1.2324372678995132</td>\n",
              "      <td>1.096747</td>\n",
              "      <td>-0.255834</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>41</th>\n",
              "      <td>7218</td>\n",
              "      <td>Cristian Romero</td>\n",
              "      <td>8</td>\n",
              "      <td>2</td>\n",
              "      <td>0.833813</td>\n",
              "      <td>0</td>\n",
              "      <td>0.091147</td>\n",
              "      <td>7</td>\n",
              "      <td>3</td>\n",
              "      <td>D</td>\n",
              "      <td>Tottenham</td>\n",
              "      <td>2</td>\n",
              "      <td>0.8338131532073021</td>\n",
              "      <td>5.6753027737140656</td>\n",
              "      <td>5.610930919647217</td>\n",
              "      <td>1.166187</td>\n",
              "      <td>-0.091147</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>25</th>\n",
              "      <td>239</td>\n",
              "      <td>Pascal Groß</td>\n",
              "      <td>6</td>\n",
              "      <td>2</td>\n",
              "      <td>0.785485</td>\n",
              "      <td>0</td>\n",
              "      <td>1.194409</td>\n",
              "      <td>12</td>\n",
              "      <td>16</td>\n",
              "      <td>M</td>\n",
              "      <td>Brighton</td>\n",
              "      <td>2</td>\n",
              "      <td>0.7854854911565781</td>\n",
              "      <td>5.8733073472976685</td>\n",
              "      <td>4.939647197723389</td>\n",
              "      <td>1.214515</td>\n",
              "      <td>-1.194409</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>32</th>\n",
              "      <td>5560</td>\n",
              "      <td>Scott McTominay</td>\n",
              "      <td>5</td>\n",
              "      <td>2</td>\n",
              "      <td>0.552161</td>\n",
              "      <td>0</td>\n",
              "      <td>0.036888</td>\n",
              "      <td>3</td>\n",
              "      <td>1</td>\n",
              "      <td>M S</td>\n",
              "      <td>Manchester United</td>\n",
              "      <td>2</td>\n",
              "      <td>0.5521611720323563</td>\n",
              "      <td>0.26488203927874565</td>\n",
              "      <td>0.0972980484366417</td>\n",
              "      <td>1.447839</td>\n",
              "      <td>-0.036888</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>50</th>\n",
              "      <td>11366</td>\n",
              "      <td>Jhon Durán</td>\n",
              "      <td>6</td>\n",
              "      <td>2</td>\n",
              "      <td>0.526433</td>\n",
              "      <td>0</td>\n",
              "      <td>0.011847</td>\n",
              "      <td>5</td>\n",
              "      <td>1</td>\n",
              "      <td>S</td>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>2</td>\n",
              "      <td>0.5264330320060253</td>\n",
              "      <td>0.6481995396316051</td>\n",
              "      <td>0.10991916060447693</td>\n",
              "      <td>1.473567</td>\n",
              "      <td>-0.011847</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>52</th>\n",
              "      <td>11839</td>\n",
              "      <td>Gustavo Hamer</td>\n",
              "      <td>7</td>\n",
              "      <td>2</td>\n",
              "      <td>0.487842</td>\n",
              "      <td>0</td>\n",
              "      <td>0.859728</td>\n",
              "      <td>10</td>\n",
              "      <td>11</td>\n",
              "      <td>M</td>\n",
              "      <td>Sheffield United</td>\n",
              "      <td>2</td>\n",
              "      <td>0.4878420364111662</td>\n",
              "      <td>1.0168709671124816</td>\n",
              "      <td>0.4073978019878268</td>\n",
              "      <td>1.512158</td>\n",
              "      <td>-0.859728</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>11</th>\n",
              "      <td>10177</td>\n",
              "      <td>Evan Ferguson</td>\n",
              "      <td>8</td>\n",
              "      <td>4</td>\n",
              "      <td>2.390436</td>\n",
              "      <td>0</td>\n",
              "      <td>0.501098</td>\n",
              "      <td>16</td>\n",
              "      <td>3</td>\n",
              "      <td>F S</td>\n",
              "      <td>Brighton</td>\n",
              "      <td>4</td>\n",
              "      <td>2.390436490997672</td>\n",
              "      <td>4.455868896096945</td>\n",
              "      <td>1.684309009462595</td>\n",
              "      <td>1.609564</td>\n",
              "      <td>-0.501098</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>453</td>\n",
              "      <td>Son Heung-Min</td>\n",
              "      <td>8</td>\n",
              "      <td>6</td>\n",
              "      <td>3.727889</td>\n",
              "      <td>0</td>\n",
              "      <td>2.356697</td>\n",
              "      <td>23</td>\n",
              "      <td>14</td>\n",
              "      <td>F M</td>\n",
              "      <td>Tottenham</td>\n",
              "      <td>6</td>\n",
              "      <td>3.7278890162706375</td>\n",
              "      <td>7.8562997579574585</td>\n",
              "      <td>2.9085745438933372</td>\n",
              "      <td>2.272111</td>\n",
              "      <td>-2.356697</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>18</th>\n",
              "      <td>7166</td>\n",
              "      <td>Mathias Jensen</td>\n",
              "      <td>8</td>\n",
              "      <td>3</td>\n",
              "      <td>0.301825</td>\n",
              "      <td>1</td>\n",
              "      <td>1.565029</td>\n",
              "      <td>5</td>\n",
              "      <td>15</td>\n",
              "      <td>M</td>\n",
              "      <td>Brentford</td>\n",
              "      <td>3</td>\n",
              "      <td>0.30182472988963127</td>\n",
              "      <td>3.146622933447361</td>\n",
              "      <td>2.5787000339478254</td>\n",
              "      <td>2.698175</td>\n",
              "      <td>-0.565029</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>8845</td>\n",
              "      <td>Hee-Chan Hwang</td>\n",
              "      <td>8</td>\n",
              "      <td>5</td>\n",
              "      <td>1.765585</td>\n",
              "      <td>0</td>\n",
              "      <td>0.712832</td>\n",
              "      <td>12</td>\n",
              "      <td>2</td>\n",
              "      <td>F M S</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>5</td>\n",
              "      <td>1.7655854746699333</td>\n",
              "      <td>2.9349683532491326</td>\n",
              "      <td>1.1753057623282075</td>\n",
              "      <td>3.234415</td>\n",
              "      <td>-0.712832</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-0bbf3d95-916b-4e32-9d0a-bbcd976ba319')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-0bbf3d95-916b-4e32-9d0a-bbcd976ba319 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-0bbf3d95-916b-4e32-9d0a-bbcd976ba319');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-9c78d21d-e766-49e9-9c67-3af884a0763d\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-9c78d21d-e766-49e9-9c67-3af884a0763d')\"\n",
              "            title=\"Suggest charts.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-9c78d21d-e766-49e9-9c67-3af884a0763d button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 5
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "one_game_df"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 583
        },
        "id": "NDPdgpJUVBBZ",
        "outputId": "c6c38a4b-20ad-4562-f754-ee8681bf2f31"
      },
      "execution_count": 6,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "        id      player_name games  time  goals_1wks   xG_1wks  assists_1wks  \\\n",
              "0     8260   Erling Haaland     8   715           8  8.660618             1   \n",
              "1      453    Son Heung-Min     8   665           6  3.727889             0   \n",
              "2     5232   Alexander Isak     7   492           6  6.077839             0   \n",
              "3     1250    Mohamed Salah     8   705           5  5.663196             4   \n",
              "4     1776     Jarrod Bowen     8   720           5  3.903253             1   \n",
              "..     ...              ...   ...   ...         ...       ...           ...   \n",
              "434  11926    Edson Álvarez     7   504           0  0.150769             0   \n",
              "436  11998  Hannes Delcroix     5   221           0  0.232794             0   \n",
              "437  12073      Teden Mengi     3   145           0  0.019998             0   \n",
              "439  12094      Mike Trésor     3   147           0  0.526954             0   \n",
              "441  12123          Murillo     2   180           0  0.525486             0   \n",
              "\n",
              "      xA_1wks shots_1wks key_passes_1wks yellow_cards red_cards position  \\\n",
              "0    1.668504         32              10            0         0        F   \n",
              "1    2.356697         23              14            0         0      F M   \n",
              "2    0.165760         18               3            0         0      F S   \n",
              "3    4.713721         26              17            1         0        F   \n",
              "4    1.255834         23               5            1         0        M   \n",
              "..        ...        ...             ...          ...       ...      ...   \n",
              "434  0.053036          3               1            4         0      M S   \n",
              "436  0.083017          4               2            1         0      D S   \n",
              "437  0.000000          1               0            0         0      D S   \n",
              "439  0.408040          2               2            0         0      F S   \n",
              "441  0.296086          3               2            0         0        D   \n",
              "\n",
              "            team_title npg_1wks            npxG_1wks              xGChain  \\\n",
              "0      Manchester City        7    7.138280659914017    7.895254008471966   \n",
              "1            Tottenham        6   3.7278890162706375   7.8562997579574585   \n",
              "2     Newcastle United        5    5.316670656204224    5.515889436006546   \n",
              "3            Liverpool        3   3.3796895295381546    7.709213137626648   \n",
              "4             West Ham        5   3.9032531157135963    4.298343725502491   \n",
              "..                 ...      ...                  ...                  ...   \n",
              "434           West Ham        0  0.15076857153326273    2.293940383940935   \n",
              "436            Burnley        0  0.23279432207345963   0.7400502115488052   \n",
              "437              Luton        0  0.01999759115278721  0.11997372843325138   \n",
              "439            Burnley        0     0.52695382386446   0.6905197724699974   \n",
              "441  Nottingham Forest        0   0.5254862606525421   0.8675576522946358   \n",
              "\n",
              "               xGBuildup  xgdifference  xAdifference  \n",
              "0     0.8118664845824242     -0.660618     -0.668504  \n",
              "1     2.9085745438933372      2.272111     -2.356697  \n",
              "2      1.147395420819521     -0.077839     -0.165760  \n",
              "3     2.3846318386495113     -0.663196     -0.713721  \n",
              "4     1.2324372678995132      1.096747     -0.255834  \n",
              "..                   ...           ...           ...  \n",
              "434   2.1616540737450123     -0.150769     -0.053036  \n",
              "436   0.6570334546267986     -0.232794     -0.083017  \n",
              "437  0.09997613728046417     -0.019998      0.000000  \n",
              "439  0.16356592625379562     -0.526954     -0.408040  \n",
              "441   0.7223030999302864     -0.525486     -0.296086  \n",
              "\n",
              "[387 rows x 20 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-580aa646-6e75-415a-82b1-0c63ca93ae54\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>player_name</th>\n",
              "      <th>games</th>\n",
              "      <th>time</th>\n",
              "      <th>goals_1wks</th>\n",
              "      <th>xG_1wks</th>\n",
              "      <th>assists_1wks</th>\n",
              "      <th>xA_1wks</th>\n",
              "      <th>shots_1wks</th>\n",
              "      <th>key_passes_1wks</th>\n",
              "      <th>yellow_cards</th>\n",
              "      <th>red_cards</th>\n",
              "      <th>position</th>\n",
              "      <th>team_title</th>\n",
              "      <th>npg_1wks</th>\n",
              "      <th>npxG_1wks</th>\n",
              "      <th>xGChain</th>\n",
              "      <th>xGBuildup</th>\n",
              "      <th>xgdifference</th>\n",
              "      <th>xAdifference</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>8260</td>\n",
              "      <td>Erling Haaland</td>\n",
              "      <td>8</td>\n",
              "      <td>715</td>\n",
              "      <td>8</td>\n",
              "      <td>8.660618</td>\n",
              "      <td>1</td>\n",
              "      <td>1.668504</td>\n",
              "      <td>32</td>\n",
              "      <td>10</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>F</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>7</td>\n",
              "      <td>7.138280659914017</td>\n",
              "      <td>7.895254008471966</td>\n",
              "      <td>0.8118664845824242</td>\n",
              "      <td>-0.660618</td>\n",
              "      <td>-0.668504</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>453</td>\n",
              "      <td>Son Heung-Min</td>\n",
              "      <td>8</td>\n",
              "      <td>665</td>\n",
              "      <td>6</td>\n",
              "      <td>3.727889</td>\n",
              "      <td>0</td>\n",
              "      <td>2.356697</td>\n",
              "      <td>23</td>\n",
              "      <td>14</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>F M</td>\n",
              "      <td>Tottenham</td>\n",
              "      <td>6</td>\n",
              "      <td>3.7278890162706375</td>\n",
              "      <td>7.8562997579574585</td>\n",
              "      <td>2.9085745438933372</td>\n",
              "      <td>2.272111</td>\n",
              "      <td>-2.356697</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>5232</td>\n",
              "      <td>Alexander Isak</td>\n",
              "      <td>7</td>\n",
              "      <td>492</td>\n",
              "      <td>6</td>\n",
              "      <td>6.077839</td>\n",
              "      <td>0</td>\n",
              "      <td>0.165760</td>\n",
              "      <td>18</td>\n",
              "      <td>3</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>F S</td>\n",
              "      <td>Newcastle United</td>\n",
              "      <td>5</td>\n",
              "      <td>5.316670656204224</td>\n",
              "      <td>5.515889436006546</td>\n",
              "      <td>1.147395420819521</td>\n",
              "      <td>-0.077839</td>\n",
              "      <td>-0.165760</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>1250</td>\n",
              "      <td>Mohamed Salah</td>\n",
              "      <td>8</td>\n",
              "      <td>705</td>\n",
              "      <td>5</td>\n",
              "      <td>5.663196</td>\n",
              "      <td>4</td>\n",
              "      <td>4.713721</td>\n",
              "      <td>26</td>\n",
              "      <td>17</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>F</td>\n",
              "      <td>Liverpool</td>\n",
              "      <td>3</td>\n",
              "      <td>3.3796895295381546</td>\n",
              "      <td>7.709213137626648</td>\n",
              "      <td>2.3846318386495113</td>\n",
              "      <td>-0.663196</td>\n",
              "      <td>-0.713721</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>1776</td>\n",
              "      <td>Jarrod Bowen</td>\n",
              "      <td>8</td>\n",
              "      <td>720</td>\n",
              "      <td>5</td>\n",
              "      <td>3.903253</td>\n",
              "      <td>1</td>\n",
              "      <td>1.255834</td>\n",
              "      <td>23</td>\n",
              "      <td>5</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>M</td>\n",
              "      <td>West Ham</td>\n",
              "      <td>5</td>\n",
              "      <td>3.9032531157135963</td>\n",
              "      <td>4.298343725502491</td>\n",
              "      <td>1.2324372678995132</td>\n",
              "      <td>1.096747</td>\n",
              "      <td>-0.255834</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>434</th>\n",
              "      <td>11926</td>\n",
              "      <td>Edson Álvarez</td>\n",
              "      <td>7</td>\n",
              "      <td>504</td>\n",
              "      <td>0</td>\n",
              "      <td>0.150769</td>\n",
              "      <td>0</td>\n",
              "      <td>0.053036</td>\n",
              "      <td>3</td>\n",
              "      <td>1</td>\n",
              "      <td>4</td>\n",
              "      <td>0</td>\n",
              "      <td>M S</td>\n",
              "      <td>West Ham</td>\n",
              "      <td>0</td>\n",
              "      <td>0.15076857153326273</td>\n",
              "      <td>2.293940383940935</td>\n",
              "      <td>2.1616540737450123</td>\n",
              "      <td>-0.150769</td>\n",
              "      <td>-0.053036</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>436</th>\n",
              "      <td>11998</td>\n",
              "      <td>Hannes Delcroix</td>\n",
              "      <td>5</td>\n",
              "      <td>221</td>\n",
              "      <td>0</td>\n",
              "      <td>0.232794</td>\n",
              "      <td>0</td>\n",
              "      <td>0.083017</td>\n",
              "      <td>4</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>D S</td>\n",
              "      <td>Burnley</td>\n",
              "      <td>0</td>\n",
              "      <td>0.23279432207345963</td>\n",
              "      <td>0.7400502115488052</td>\n",
              "      <td>0.6570334546267986</td>\n",
              "      <td>-0.232794</td>\n",
              "      <td>-0.083017</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>437</th>\n",
              "      <td>12073</td>\n",
              "      <td>Teden Mengi</td>\n",
              "      <td>3</td>\n",
              "      <td>145</td>\n",
              "      <td>0</td>\n",
              "      <td>0.019998</td>\n",
              "      <td>0</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>D S</td>\n",
              "      <td>Luton</td>\n",
              "      <td>0</td>\n",
              "      <td>0.01999759115278721</td>\n",
              "      <td>0.11997372843325138</td>\n",
              "      <td>0.09997613728046417</td>\n",
              "      <td>-0.019998</td>\n",
              "      <td>0.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>439</th>\n",
              "      <td>12094</td>\n",
              "      <td>Mike Trésor</td>\n",
              "      <td>3</td>\n",
              "      <td>147</td>\n",
              "      <td>0</td>\n",
              "      <td>0.526954</td>\n",
              "      <td>0</td>\n",
              "      <td>0.408040</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>F S</td>\n",
              "      <td>Burnley</td>\n",
              "      <td>0</td>\n",
              "      <td>0.52695382386446</td>\n",
              "      <td>0.6905197724699974</td>\n",
              "      <td>0.16356592625379562</td>\n",
              "      <td>-0.526954</td>\n",
              "      <td>-0.408040</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>441</th>\n",
              "      <td>12123</td>\n",
              "      <td>Murillo</td>\n",
              "      <td>2</td>\n",
              "      <td>180</td>\n",
              "      <td>0</td>\n",
              "      <td>0.525486</td>\n",
              "      <td>0</td>\n",
              "      <td>0.296086</td>\n",
              "      <td>3</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>D</td>\n",
              "      <td>Nottingham Forest</td>\n",
              "      <td>0</td>\n",
              "      <td>0.5254862606525421</td>\n",
              "      <td>0.8675576522946358</td>\n",
              "      <td>0.7223030999302864</td>\n",
              "      <td>-0.525486</td>\n",
              "      <td>-0.296086</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>387 rows × 20 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-580aa646-6e75-415a-82b1-0c63ca93ae54')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-580aa646-6e75-415a-82b1-0c63ca93ae54 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-580aa646-6e75-415a-82b1-0c63ca93ae54');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-80305064-9a59-40c4-8930-a9da43c0f6bd\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-80305064-9a59-40c4-8930-a9da43c0f6bd')\"\n",
              "            title=\"Suggest charts.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-80305064-9a59-40c4-8930-a9da43c0f6bd button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 6
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "onegamedftidy = one_game_df.drop(columns=[\n",
        " 'time',\n",
        " 'goals_1wks',\n",
        " 'assists_1wks',\n",
        " 'shots_1wks',\n",
        " 'key_passes_1wks',\n",
        " 'yellow_cards',\n",
        " 'red_cards',\n",
        " 'npg_1wks',\n",
        " 'npxG_1wks',\n",
        " 'xGChain',\n",
        " 'xGBuildup',\n",
        " 'xgdifference',\n",
        " 'xAdifference'])\n",
        "onegamedftidy"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 424
        },
        "id": "RKf0tUGEh8FV",
        "outputId": "7cebb703-9e74-4ece-af64-28831efb8c9c"
      },
      "execution_count": 7,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "        id      player_name games   xG_1wks   xA_1wks position  \\\n",
              "0     8260   Erling Haaland     8  8.660618  1.668504        F   \n",
              "1      453    Son Heung-Min     8  3.727889  2.356697      F M   \n",
              "2     5232   Alexander Isak     7  6.077839  0.165760      F S   \n",
              "3     1250    Mohamed Salah     8  5.663196  4.713721        F   \n",
              "4     1776     Jarrod Bowen     8  3.903253  1.255834        M   \n",
              "..     ...              ...   ...       ...       ...      ...   \n",
              "434  11926    Edson Álvarez     7  0.150769  0.053036      M S   \n",
              "436  11998  Hannes Delcroix     5  0.232794  0.083017      D S   \n",
              "437  12073      Teden Mengi     3  0.019998  0.000000      D S   \n",
              "439  12094      Mike Trésor     3  0.526954  0.408040      F S   \n",
              "441  12123          Murillo     2  0.525486  0.296086        D   \n",
              "\n",
              "            team_title  \n",
              "0      Manchester City  \n",
              "1            Tottenham  \n",
              "2     Newcastle United  \n",
              "3            Liverpool  \n",
              "4             West Ham  \n",
              "..                 ...  \n",
              "434           West Ham  \n",
              "436            Burnley  \n",
              "437              Luton  \n",
              "439            Burnley  \n",
              "441  Nottingham Forest  \n",
              "\n",
              "[387 rows x 7 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-60ad6d74-392f-48d8-836c-68c7f16fdba4\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>player_name</th>\n",
              "      <th>games</th>\n",
              "      <th>xG_1wks</th>\n",
              "      <th>xA_1wks</th>\n",
              "      <th>position</th>\n",
              "      <th>team_title</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>8260</td>\n",
              "      <td>Erling Haaland</td>\n",
              "      <td>8</td>\n",
              "      <td>8.660618</td>\n",
              "      <td>1.668504</td>\n",
              "      <td>F</td>\n",
              "      <td>Manchester City</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>453</td>\n",
              "      <td>Son Heung-Min</td>\n",
              "      <td>8</td>\n",
              "      <td>3.727889</td>\n",
              "      <td>2.356697</td>\n",
              "      <td>F M</td>\n",
              "      <td>Tottenham</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>5232</td>\n",
              "      <td>Alexander Isak</td>\n",
              "      <td>7</td>\n",
              "      <td>6.077839</td>\n",
              "      <td>0.165760</td>\n",
              "      <td>F S</td>\n",
              "      <td>Newcastle United</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>1250</td>\n",
              "      <td>Mohamed Salah</td>\n",
              "      <td>8</td>\n",
              "      <td>5.663196</td>\n",
              "      <td>4.713721</td>\n",
              "      <td>F</td>\n",
              "      <td>Liverpool</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>1776</td>\n",
              "      <td>Jarrod Bowen</td>\n",
              "      <td>8</td>\n",
              "      <td>3.903253</td>\n",
              "      <td>1.255834</td>\n",
              "      <td>M</td>\n",
              "      <td>West Ham</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>434</th>\n",
              "      <td>11926</td>\n",
              "      <td>Edson Álvarez</td>\n",
              "      <td>7</td>\n",
              "      <td>0.150769</td>\n",
              "      <td>0.053036</td>\n",
              "      <td>M S</td>\n",
              "      <td>West Ham</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>436</th>\n",
              "      <td>11998</td>\n",
              "      <td>Hannes Delcroix</td>\n",
              "      <td>5</td>\n",
              "      <td>0.232794</td>\n",
              "      <td>0.083017</td>\n",
              "      <td>D S</td>\n",
              "      <td>Burnley</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>437</th>\n",
              "      <td>12073</td>\n",
              "      <td>Teden Mengi</td>\n",
              "      <td>3</td>\n",
              "      <td>0.019998</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>D S</td>\n",
              "      <td>Luton</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>439</th>\n",
              "      <td>12094</td>\n",
              "      <td>Mike Trésor</td>\n",
              "      <td>3</td>\n",
              "      <td>0.526954</td>\n",
              "      <td>0.408040</td>\n",
              "      <td>F S</td>\n",
              "      <td>Burnley</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>441</th>\n",
              "      <td>12123</td>\n",
              "      <td>Murillo</td>\n",
              "      <td>2</td>\n",
              "      <td>0.525486</td>\n",
              "      <td>0.296086</td>\n",
              "      <td>D</td>\n",
              "      <td>Nottingham Forest</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>387 rows × 7 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-60ad6d74-392f-48d8-836c-68c7f16fdba4')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-60ad6d74-392f-48d8-836c-68c7f16fdba4 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-60ad6d74-392f-48d8-836c-68c7f16fdba4');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-a49c96ce-5657-4c2b-be0e-ad30009c5147\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-a49c96ce-5657-4c2b-be0e-ad30009c5147')\"\n",
              "            title=\"Suggest charts.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-a49c96ce-5657-4c2b-be0e-ad30009c5147 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 7
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "!git clone https://github.com/pratos/fpl-mappers\n",
        "!git clone https://github.com/ChrisMusson/FPL-ID-Map\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "B9kCj8OeiKGn",
        "outputId": "0b37ece0-f5b8-40fc-9a90-12d810764ef0"
      },
      "execution_count": 8,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Cloning into 'fpl-mappers'...\n",
            "remote: Enumerating objects: 94, done.\u001b[K\n",
            "remote: Counting objects: 100% (94/94), done.\u001b[K\n",
            "remote: Compressing objects: 100% (56/56), done.\u001b[K\n",
            "remote: Total 94 (delta 32), reused 89 (delta 30), pack-reused 0\u001b[K\n",
            "Receiving objects: 100% (94/94), 217.69 KiB | 2.69 MiB/s, done.\n",
            "Resolving deltas: 100% (32/32), done.\n",
            "Cloning into 'FPL-ID-Map'...\n",
            "remote: Enumerating objects: 242, done.\u001b[K\n",
            "remote: Counting objects: 100% (242/242), done.\u001b[K\n",
            "remote: Compressing objects: 100% (120/120), done.\u001b[K\n",
            "remote: Total 242 (delta 176), reused 188 (delta 122), pack-reused 0\u001b[K\n",
            "Receiving objects: 100% (242/242), 273.05 KiB | 3.25 MiB/s, done.\n",
            "Resolving deltas: 100% (176/176), done.\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "data1 = pd.read_csv('/content/FPL-ID-Map/Understat.csv', on_bad_lines='skip')\n",
        "data2 = pd.read_csv('/content/FPL-ID-Map/FPL/22-23.csv', on_bad_lines='skip')\n",
        "understatwithfplid1 = pd.merge(data2,\n",
        "                     data1,\n",
        "                     on ='code',\n",
        "                     how ='left')\n",
        "understatid = understatwithfplid1.drop(columns=[\n",
        "'code',\n",
        " 'first_name_x',\n",
        " 'second_name_x',\n",
        " 'web_name_x',\n",
        " 'first_name_y',\n",
        " 'second_name_y',\n",
        " 'web_name_y',])\n",
        "one_game_df.rename(columns={'id': 'understat'}, inplace=True)\n",
        "one_game_df"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 583
        },
        "id": "SaX7692EiQA7",
        "outputId": "21eca4e3-7177-40bf-a9d8-6e0f6154f587"
      },
      "execution_count": 9,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "    understat      player_name games  time  goals_1wks   xG_1wks  \\\n",
              "0        8260   Erling Haaland     8   715           8  8.660618   \n",
              "1         453    Son Heung-Min     8   665           6  3.727889   \n",
              "2        5232   Alexander Isak     7   492           6  6.077839   \n",
              "3        1250    Mohamed Salah     8   705           5  5.663196   \n",
              "4        1776     Jarrod Bowen     8   720           5  3.903253   \n",
              "..        ...              ...   ...   ...         ...       ...   \n",
              "434     11926    Edson Álvarez     7   504           0  0.150769   \n",
              "436     11998  Hannes Delcroix     5   221           0  0.232794   \n",
              "437     12073      Teden Mengi     3   145           0  0.019998   \n",
              "439     12094      Mike Trésor     3   147           0  0.526954   \n",
              "441     12123          Murillo     2   180           0  0.525486   \n",
              "\n",
              "     assists_1wks   xA_1wks shots_1wks key_passes_1wks yellow_cards red_cards  \\\n",
              "0               1  1.668504         32              10            0         0   \n",
              "1               0  2.356697         23              14            0         0   \n",
              "2               0  0.165760         18               3            0         0   \n",
              "3               4  4.713721         26              17            1         0   \n",
              "4               1  1.255834         23               5            1         0   \n",
              "..            ...       ...        ...             ...          ...       ...   \n",
              "434             0  0.053036          3               1            4         0   \n",
              "436             0  0.083017          4               2            1         0   \n",
              "437             0  0.000000          1               0            0         0   \n",
              "439             0  0.408040          2               2            0         0   \n",
              "441             0  0.296086          3               2            0         0   \n",
              "\n",
              "    position         team_title npg_1wks            npxG_1wks  \\\n",
              "0          F    Manchester City        7    7.138280659914017   \n",
              "1        F M          Tottenham        6   3.7278890162706375   \n",
              "2        F S   Newcastle United        5    5.316670656204224   \n",
              "3          F          Liverpool        3   3.3796895295381546   \n",
              "4          M           West Ham        5   3.9032531157135963   \n",
              "..       ...                ...      ...                  ...   \n",
              "434      M S           West Ham        0  0.15076857153326273   \n",
              "436      D S            Burnley        0  0.23279432207345963   \n",
              "437      D S              Luton        0  0.01999759115278721   \n",
              "439      F S            Burnley        0     0.52695382386446   \n",
              "441        D  Nottingham Forest        0   0.5254862606525421   \n",
              "\n",
              "                 xGChain            xGBuildup  xgdifference  xAdifference  \n",
              "0      7.895254008471966   0.8118664845824242     -0.660618     -0.668504  \n",
              "1     7.8562997579574585   2.9085745438933372      2.272111     -2.356697  \n",
              "2      5.515889436006546    1.147395420819521     -0.077839     -0.165760  \n",
              "3      7.709213137626648   2.3846318386495113     -0.663196     -0.713721  \n",
              "4      4.298343725502491   1.2324372678995132      1.096747     -0.255834  \n",
              "..                   ...                  ...           ...           ...  \n",
              "434    2.293940383940935   2.1616540737450123     -0.150769     -0.053036  \n",
              "436   0.7400502115488052   0.6570334546267986     -0.232794     -0.083017  \n",
              "437  0.11997372843325138  0.09997613728046417     -0.019998      0.000000  \n",
              "439   0.6905197724699974  0.16356592625379562     -0.526954     -0.408040  \n",
              "441   0.8675576522946358   0.7223030999302864     -0.525486     -0.296086  \n",
              "\n",
              "[387 rows x 20 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-85ad0e8a-54d3-4a91-be40-a3aeb4d519e9\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>understat</th>\n",
              "      <th>player_name</th>\n",
              "      <th>games</th>\n",
              "      <th>time</th>\n",
              "      <th>goals_1wks</th>\n",
              "      <th>xG_1wks</th>\n",
              "      <th>assists_1wks</th>\n",
              "      <th>xA_1wks</th>\n",
              "      <th>shots_1wks</th>\n",
              "      <th>key_passes_1wks</th>\n",
              "      <th>yellow_cards</th>\n",
              "      <th>red_cards</th>\n",
              "      <th>position</th>\n",
              "      <th>team_title</th>\n",
              "      <th>npg_1wks</th>\n",
              "      <th>npxG_1wks</th>\n",
              "      <th>xGChain</th>\n",
              "      <th>xGBuildup</th>\n",
              "      <th>xgdifference</th>\n",
              "      <th>xAdifference</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>8260</td>\n",
              "      <td>Erling Haaland</td>\n",
              "      <td>8</td>\n",
              "      <td>715</td>\n",
              "      <td>8</td>\n",
              "      <td>8.660618</td>\n",
              "      <td>1</td>\n",
              "      <td>1.668504</td>\n",
              "      <td>32</td>\n",
              "      <td>10</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>F</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>7</td>\n",
              "      <td>7.138280659914017</td>\n",
              "      <td>7.895254008471966</td>\n",
              "      <td>0.8118664845824242</td>\n",
              "      <td>-0.660618</td>\n",
              "      <td>-0.668504</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>453</td>\n",
              "      <td>Son Heung-Min</td>\n",
              "      <td>8</td>\n",
              "      <td>665</td>\n",
              "      <td>6</td>\n",
              "      <td>3.727889</td>\n",
              "      <td>0</td>\n",
              "      <td>2.356697</td>\n",
              "      <td>23</td>\n",
              "      <td>14</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>F M</td>\n",
              "      <td>Tottenham</td>\n",
              "      <td>6</td>\n",
              "      <td>3.7278890162706375</td>\n",
              "      <td>7.8562997579574585</td>\n",
              "      <td>2.9085745438933372</td>\n",
              "      <td>2.272111</td>\n",
              "      <td>-2.356697</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>5232</td>\n",
              "      <td>Alexander Isak</td>\n",
              "      <td>7</td>\n",
              "      <td>492</td>\n",
              "      <td>6</td>\n",
              "      <td>6.077839</td>\n",
              "      <td>0</td>\n",
              "      <td>0.165760</td>\n",
              "      <td>18</td>\n",
              "      <td>3</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>F S</td>\n",
              "      <td>Newcastle United</td>\n",
              "      <td>5</td>\n",
              "      <td>5.316670656204224</td>\n",
              "      <td>5.515889436006546</td>\n",
              "      <td>1.147395420819521</td>\n",
              "      <td>-0.077839</td>\n",
              "      <td>-0.165760</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>1250</td>\n",
              "      <td>Mohamed Salah</td>\n",
              "      <td>8</td>\n",
              "      <td>705</td>\n",
              "      <td>5</td>\n",
              "      <td>5.663196</td>\n",
              "      <td>4</td>\n",
              "      <td>4.713721</td>\n",
              "      <td>26</td>\n",
              "      <td>17</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>F</td>\n",
              "      <td>Liverpool</td>\n",
              "      <td>3</td>\n",
              "      <td>3.3796895295381546</td>\n",
              "      <td>7.709213137626648</td>\n",
              "      <td>2.3846318386495113</td>\n",
              "      <td>-0.663196</td>\n",
              "      <td>-0.713721</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>1776</td>\n",
              "      <td>Jarrod Bowen</td>\n",
              "      <td>8</td>\n",
              "      <td>720</td>\n",
              "      <td>5</td>\n",
              "      <td>3.903253</td>\n",
              "      <td>1</td>\n",
              "      <td>1.255834</td>\n",
              "      <td>23</td>\n",
              "      <td>5</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>M</td>\n",
              "      <td>West Ham</td>\n",
              "      <td>5</td>\n",
              "      <td>3.9032531157135963</td>\n",
              "      <td>4.298343725502491</td>\n",
              "      <td>1.2324372678995132</td>\n",
              "      <td>1.096747</td>\n",
              "      <td>-0.255834</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>434</th>\n",
              "      <td>11926</td>\n",
              "      <td>Edson Álvarez</td>\n",
              "      <td>7</td>\n",
              "      <td>504</td>\n",
              "      <td>0</td>\n",
              "      <td>0.150769</td>\n",
              "      <td>0</td>\n",
              "      <td>0.053036</td>\n",
              "      <td>3</td>\n",
              "      <td>1</td>\n",
              "      <td>4</td>\n",
              "      <td>0</td>\n",
              "      <td>M S</td>\n",
              "      <td>West Ham</td>\n",
              "      <td>0</td>\n",
              "      <td>0.15076857153326273</td>\n",
              "      <td>2.293940383940935</td>\n",
              "      <td>2.1616540737450123</td>\n",
              "      <td>-0.150769</td>\n",
              "      <td>-0.053036</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>436</th>\n",
              "      <td>11998</td>\n",
              "      <td>Hannes Delcroix</td>\n",
              "      <td>5</td>\n",
              "      <td>221</td>\n",
              "      <td>0</td>\n",
              "      <td>0.232794</td>\n",
              "      <td>0</td>\n",
              "      <td>0.083017</td>\n",
              "      <td>4</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>D S</td>\n",
              "      <td>Burnley</td>\n",
              "      <td>0</td>\n",
              "      <td>0.23279432207345963</td>\n",
              "      <td>0.7400502115488052</td>\n",
              "      <td>0.6570334546267986</td>\n",
              "      <td>-0.232794</td>\n",
              "      <td>-0.083017</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>437</th>\n",
              "      <td>12073</td>\n",
              "      <td>Teden Mengi</td>\n",
              "      <td>3</td>\n",
              "      <td>145</td>\n",
              "      <td>0</td>\n",
              "      <td>0.019998</td>\n",
              "      <td>0</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>D S</td>\n",
              "      <td>Luton</td>\n",
              "      <td>0</td>\n",
              "      <td>0.01999759115278721</td>\n",
              "      <td>0.11997372843325138</td>\n",
              "      <td>0.09997613728046417</td>\n",
              "      <td>-0.019998</td>\n",
              "      <td>0.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>439</th>\n",
              "      <td>12094</td>\n",
              "      <td>Mike Trésor</td>\n",
              "      <td>3</td>\n",
              "      <td>147</td>\n",
              "      <td>0</td>\n",
              "      <td>0.526954</td>\n",
              "      <td>0</td>\n",
              "      <td>0.408040</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>F S</td>\n",
              "      <td>Burnley</td>\n",
              "      <td>0</td>\n",
              "      <td>0.52695382386446</td>\n",
              "      <td>0.6905197724699974</td>\n",
              "      <td>0.16356592625379562</td>\n",
              "      <td>-0.526954</td>\n",
              "      <td>-0.408040</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>441</th>\n",
              "      <td>12123</td>\n",
              "      <td>Murillo</td>\n",
              "      <td>2</td>\n",
              "      <td>180</td>\n",
              "      <td>0</td>\n",
              "      <td>0.525486</td>\n",
              "      <td>0</td>\n",
              "      <td>0.296086</td>\n",
              "      <td>3</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>D</td>\n",
              "      <td>Nottingham Forest</td>\n",
              "      <td>0</td>\n",
              "      <td>0.5254862606525421</td>\n",
              "      <td>0.8675576522946358</td>\n",
              "      <td>0.7223030999302864</td>\n",
              "      <td>-0.525486</td>\n",
              "      <td>-0.296086</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>387 rows × 20 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-85ad0e8a-54d3-4a91-be40-a3aeb4d519e9')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-85ad0e8a-54d3-4a91-be40-a3aeb4d519e9 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-85ad0e8a-54d3-4a91-be40-a3aeb4d519e9');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-83bdc5bb-181e-4630-ad7f-c39cdbed5700\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-83bdc5bb-181e-4630-ad7f-c39cdbed5700')\"\n",
              "            title=\"Suggest charts.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-83bdc5bb-181e-4630-ad7f-c39cdbed5700 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 9
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "!git clone https://github.com/huricane85/FPL-API-Fixture-modeler"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "dU1giLdZir3J",
        "outputId": "8c8d0bf0-a14f-4343-8455-631ba591291d"
      },
      "execution_count": 10,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Cloning into 'FPL-API-Fixture-modeler'...\n",
            "remote: Enumerating objects: 78, done.\u001b[K\n",
            "remote: Counting objects: 100% (78/78), done.\u001b[K\n",
            "remote: Compressing objects: 100% (78/78), done.\u001b[K\n",
            "remote: Total 78 (delta 39), reused 0 (delta 0), pack-reused 0\u001b[K\n",
            "Receiving objects: 100% (78/78), 3.41 MiB | 6.08 MiB/s, done.\n",
            "Resolving deltas: 100% (39/39), done.\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import pandas as pd\n",
        "\n",
        "# read the CSV file from GitHub into a DataFrame\n",
        "url = \"https://raw.githubusercontent.com/ChrisMusson/FPL-ID-Map/main/Master.csv\"\n",
        "df = pd.read_csv(url)\n",
        "\n",
        "# rename the \"22-23\" column to \"id\"\n",
        "df.rename(columns={'22-23': 'id'}, inplace=True)\n",
        "\n",
        "# convert \"id\" and \"understat\" columns to int64 and float64 respectively\n",
        "df['id'] = pd.to_numeric(df['id'], errors='coerce', downcast='integer').astype('Int64')\n",
        "df['understat'] = pd.to_numeric(df['understat'], errors='coerce', downcast='integer').astype('Int64')\n",
        "\n",
        "# filter out rows where \"understat\" is null\n",
        "df = df.dropna(subset=['understat'])\n",
        "\n",
        "# change data type of \"id\" column to float64\n",
        "df['id'] = df['id'].astype('float64')\n",
        "\n",
        "# create a new DataFrame with only the \"understat\" and \"id\" columns\n",
        "new_df = df[['understat', 'id']].dropna(subset=['id']).copy()\n",
        "\n",
        "# display the new DataFrame\n",
        "\n",
        "new_df\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 424
        },
        "id": "WRijWphEVPuN",
        "outputId": "1257b0ae-3795-4c27-e1f5-0fbec3ebd0c2"
      },
      "execution_count": 11,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "      understat     id\n",
              "37         7821  760.0\n",
              "38         1697  627.0\n",
              "55         2371  326.0\n",
              "62          489  274.0\n",
              "77         8158  502.0\n",
              "...         ...    ...\n",
              "1933      11301  695.0\n",
              "1934      11146  632.0\n",
              "1935      11189  646.0\n",
              "1936      11302  696.0\n",
              "1937      11195  650.0\n",
              "\n",
              "[763 rows x 2 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-00414b21-32ca-47e7-a8d4-281df1b3b0a1\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>understat</th>\n",
              "      <th>id</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>37</th>\n",
              "      <td>7821</td>\n",
              "      <td>760.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>38</th>\n",
              "      <td>1697</td>\n",
              "      <td>627.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>55</th>\n",
              "      <td>2371</td>\n",
              "      <td>326.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>62</th>\n",
              "      <td>489</td>\n",
              "      <td>274.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>77</th>\n",
              "      <td>8158</td>\n",
              "      <td>502.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1933</th>\n",
              "      <td>11301</td>\n",
              "      <td>695.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1934</th>\n",
              "      <td>11146</td>\n",
              "      <td>632.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1935</th>\n",
              "      <td>11189</td>\n",
              "      <td>646.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1936</th>\n",
              "      <td>11302</td>\n",
              "      <td>696.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1937</th>\n",
              "      <td>11195</td>\n",
              "      <td>650.0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>763 rows × 2 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-00414b21-32ca-47e7-a8d4-281df1b3b0a1')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-00414b21-32ca-47e7-a8d4-281df1b3b0a1 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-00414b21-32ca-47e7-a8d4-281df1b3b0a1');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-35912f68-3b5c-44bc-bf82-d7eb4f37cfcd\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-35912f68-3b5c-44bc-bf82-d7eb4f37cfcd')\"\n",
              "            title=\"Suggest charts.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-35912f68-3b5c-44bc-bf82-d7eb4f37cfcd button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 11
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "new_df"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 424
        },
        "id": "NhQ4dZKdUv36",
        "outputId": "9ab71e12-1e51-4c4d-dd21-a1689709e092"
      },
      "execution_count": 12,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "      understat     id\n",
              "37         7821  760.0\n",
              "38         1697  627.0\n",
              "55         2371  326.0\n",
              "62          489  274.0\n",
              "77         8158  502.0\n",
              "...         ...    ...\n",
              "1933      11301  695.0\n",
              "1934      11146  632.0\n",
              "1935      11189  646.0\n",
              "1936      11302  696.0\n",
              "1937      11195  650.0\n",
              "\n",
              "[763 rows x 2 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-40a39c6b-c7ec-48b7-9418-a9533c58e5af\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>understat</th>\n",
              "      <th>id</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>37</th>\n",
              "      <td>7821</td>\n",
              "      <td>760.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>38</th>\n",
              "      <td>1697</td>\n",
              "      <td>627.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>55</th>\n",
              "      <td>2371</td>\n",
              "      <td>326.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>62</th>\n",
              "      <td>489</td>\n",
              "      <td>274.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>77</th>\n",
              "      <td>8158</td>\n",
              "      <td>502.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1933</th>\n",
              "      <td>11301</td>\n",
              "      <td>695.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1934</th>\n",
              "      <td>11146</td>\n",
              "      <td>632.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1935</th>\n",
              "      <td>11189</td>\n",
              "      <td>646.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1936</th>\n",
              "      <td>11302</td>\n",
              "      <td>696.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1937</th>\n",
              "      <td>11195</td>\n",
              "      <td>650.0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>763 rows × 2 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-40a39c6b-c7ec-48b7-9418-a9533c58e5af')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-40a39c6b-c7ec-48b7-9418-a9533c58e5af button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-40a39c6b-c7ec-48b7-9418-a9533c58e5af');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-bf64f768-2b1f-4e0f-a3ac-cd0b43c022f0\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-bf64f768-2b1f-4e0f-a3ac-cd0b43c022f0')\"\n",
              "            title=\"Suggest charts.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-bf64f768-2b1f-4e0f-a3ac-cd0b43c022f0 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 12
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "one_game_df[\"understat\"] = one_game_df[\"understat\"].astype(str).astype(int)\n",
        "understatid2 = new_df\n",
        "understatwithfplid = pd.merge(one_game_df,\n",
        "                     understatid2,\n",
        "                     on ='understat',\n",
        "                     how ='left')\n",
        "understatwithfplid"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 583
        },
        "id": "KmDbXEnfi2v1",
        "outputId": "f71f2c0a-0fe3-4bb9-dcf2-40f19765adbf"
      },
      "execution_count": 13,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "     understat      player_name games  time  goals_1wks   xG_1wks  \\\n",
              "0         8260   Erling Haaland     8   715           8  8.660618   \n",
              "1          453    Son Heung-Min     8   665           6  3.727889   \n",
              "2         5232   Alexander Isak     7   492           6  6.077839   \n",
              "3         1250    Mohamed Salah     8   705           5  5.663196   \n",
              "4         1776     Jarrod Bowen     8   720           5  3.903253   \n",
              "..         ...              ...   ...   ...         ...       ...   \n",
              "382      11926    Edson Álvarez     7   504           0  0.150769   \n",
              "383      11998  Hannes Delcroix     5   221           0  0.232794   \n",
              "384      12073      Teden Mengi     3   145           0  0.019998   \n",
              "385      12094      Mike Trésor     3   147           0  0.526954   \n",
              "386      12123          Murillo     2   180           0  0.525486   \n",
              "\n",
              "     assists_1wks   xA_1wks shots_1wks key_passes_1wks  ... red_cards  \\\n",
              "0               1  1.668504         32              10  ...         0   \n",
              "1               0  2.356697         23              14  ...         0   \n",
              "2               0  0.165760         18               3  ...         0   \n",
              "3               4  4.713721         26              17  ...         0   \n",
              "4               1  1.255834         23               5  ...         0   \n",
              "..            ...       ...        ...             ...  ...       ...   \n",
              "382             0  0.053036          3               1  ...         0   \n",
              "383             0  0.083017          4               2  ...         0   \n",
              "384             0  0.000000          1               0  ...         0   \n",
              "385             0  0.408040          2               2  ...         0   \n",
              "386             0  0.296086          3               2  ...         0   \n",
              "\n",
              "    position         team_title npg_1wks            npxG_1wks  \\\n",
              "0          F    Manchester City        7    7.138280659914017   \n",
              "1        F M          Tottenham        6   3.7278890162706375   \n",
              "2        F S   Newcastle United        5    5.316670656204224   \n",
              "3          F          Liverpool        3   3.3796895295381546   \n",
              "4          M           West Ham        5   3.9032531157135963   \n",
              "..       ...                ...      ...                  ...   \n",
              "382      M S           West Ham        0  0.15076857153326273   \n",
              "383      D S            Burnley        0  0.23279432207345963   \n",
              "384      D S              Luton        0  0.01999759115278721   \n",
              "385      F S            Burnley        0     0.52695382386446   \n",
              "386        D  Nottingham Forest        0   0.5254862606525421   \n",
              "\n",
              "                 xGChain            xGBuildup xgdifference  xAdifference  \\\n",
              "0      7.895254008471966   0.8118664845824242    -0.660618     -0.668504   \n",
              "1     7.8562997579574585   2.9085745438933372     2.272111     -2.356697   \n",
              "2      5.515889436006546    1.147395420819521    -0.077839     -0.165760   \n",
              "3      7.709213137626648   2.3846318386495113    -0.663196     -0.713721   \n",
              "4      4.298343725502491   1.2324372678995132     1.096747     -0.255834   \n",
              "..                   ...                  ...          ...           ...   \n",
              "382    2.293940383940935   2.1616540737450123    -0.150769     -0.053036   \n",
              "383   0.7400502115488052   0.6570334546267986    -0.232794     -0.083017   \n",
              "384  0.11997372843325138  0.09997613728046417    -0.019998      0.000000   \n",
              "385   0.6905197724699974  0.16356592625379562    -0.526954     -0.408040   \n",
              "386   0.8675576522946358   0.7223030999302864    -0.525486     -0.296086   \n",
              "\n",
              "        id  \n",
              "0    318.0  \n",
              "1    428.0  \n",
              "2    594.0  \n",
              "3    283.0  \n",
              "4    465.0  \n",
              "..     ...  \n",
              "382    NaN  \n",
              "383    NaN  \n",
              "384    NaN  \n",
              "385    NaN  \n",
              "386    NaN  \n",
              "\n",
              "[387 rows x 21 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-03db0393-608e-4aab-85d7-ca151567a589\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>understat</th>\n",
              "      <th>player_name</th>\n",
              "      <th>games</th>\n",
              "      <th>time</th>\n",
              "      <th>goals_1wks</th>\n",
              "      <th>xG_1wks</th>\n",
              "      <th>assists_1wks</th>\n",
              "      <th>xA_1wks</th>\n",
              "      <th>shots_1wks</th>\n",
              "      <th>key_passes_1wks</th>\n",
              "      <th>...</th>\n",
              "      <th>red_cards</th>\n",
              "      <th>position</th>\n",
              "      <th>team_title</th>\n",
              "      <th>npg_1wks</th>\n",
              "      <th>npxG_1wks</th>\n",
              "      <th>xGChain</th>\n",
              "      <th>xGBuildup</th>\n",
              "      <th>xgdifference</th>\n",
              "      <th>xAdifference</th>\n",
              "      <th>id</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>8260</td>\n",
              "      <td>Erling Haaland</td>\n",
              "      <td>8</td>\n",
              "      <td>715</td>\n",
              "      <td>8</td>\n",
              "      <td>8.660618</td>\n",
              "      <td>1</td>\n",
              "      <td>1.668504</td>\n",
              "      <td>32</td>\n",
              "      <td>10</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>F</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>7</td>\n",
              "      <td>7.138280659914017</td>\n",
              "      <td>7.895254008471966</td>\n",
              "      <td>0.8118664845824242</td>\n",
              "      <td>-0.660618</td>\n",
              "      <td>-0.668504</td>\n",
              "      <td>318.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>453</td>\n",
              "      <td>Son Heung-Min</td>\n",
              "      <td>8</td>\n",
              "      <td>665</td>\n",
              "      <td>6</td>\n",
              "      <td>3.727889</td>\n",
              "      <td>0</td>\n",
              "      <td>2.356697</td>\n",
              "      <td>23</td>\n",
              "      <td>14</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>F M</td>\n",
              "      <td>Tottenham</td>\n",
              "      <td>6</td>\n",
              "      <td>3.7278890162706375</td>\n",
              "      <td>7.8562997579574585</td>\n",
              "      <td>2.9085745438933372</td>\n",
              "      <td>2.272111</td>\n",
              "      <td>-2.356697</td>\n",
              "      <td>428.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>5232</td>\n",
              "      <td>Alexander Isak</td>\n",
              "      <td>7</td>\n",
              "      <td>492</td>\n",
              "      <td>6</td>\n",
              "      <td>6.077839</td>\n",
              "      <td>0</td>\n",
              "      <td>0.165760</td>\n",
              "      <td>18</td>\n",
              "      <td>3</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>F S</td>\n",
              "      <td>Newcastle United</td>\n",
              "      <td>5</td>\n",
              "      <td>5.316670656204224</td>\n",
              "      <td>5.515889436006546</td>\n",
              "      <td>1.147395420819521</td>\n",
              "      <td>-0.077839</td>\n",
              "      <td>-0.165760</td>\n",
              "      <td>594.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>1250</td>\n",
              "      <td>Mohamed Salah</td>\n",
              "      <td>8</td>\n",
              "      <td>705</td>\n",
              "      <td>5</td>\n",
              "      <td>5.663196</td>\n",
              "      <td>4</td>\n",
              "      <td>4.713721</td>\n",
              "      <td>26</td>\n",
              "      <td>17</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>F</td>\n",
              "      <td>Liverpool</td>\n",
              "      <td>3</td>\n",
              "      <td>3.3796895295381546</td>\n",
              "      <td>7.709213137626648</td>\n",
              "      <td>2.3846318386495113</td>\n",
              "      <td>-0.663196</td>\n",
              "      <td>-0.713721</td>\n",
              "      <td>283.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>1776</td>\n",
              "      <td>Jarrod Bowen</td>\n",
              "      <td>8</td>\n",
              "      <td>720</td>\n",
              "      <td>5</td>\n",
              "      <td>3.903253</td>\n",
              "      <td>1</td>\n",
              "      <td>1.255834</td>\n",
              "      <td>23</td>\n",
              "      <td>5</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>M</td>\n",
              "      <td>West Ham</td>\n",
              "      <td>5</td>\n",
              "      <td>3.9032531157135963</td>\n",
              "      <td>4.298343725502491</td>\n",
              "      <td>1.2324372678995132</td>\n",
              "      <td>1.096747</td>\n",
              "      <td>-0.255834</td>\n",
              "      <td>465.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>382</th>\n",
              "      <td>11926</td>\n",
              "      <td>Edson Álvarez</td>\n",
              "      <td>7</td>\n",
              "      <td>504</td>\n",
              "      <td>0</td>\n",
              "      <td>0.150769</td>\n",
              "      <td>0</td>\n",
              "      <td>0.053036</td>\n",
              "      <td>3</td>\n",
              "      <td>1</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>M S</td>\n",
              "      <td>West Ham</td>\n",
              "      <td>0</td>\n",
              "      <td>0.15076857153326273</td>\n",
              "      <td>2.293940383940935</td>\n",
              "      <td>2.1616540737450123</td>\n",
              "      <td>-0.150769</td>\n",
              "      <td>-0.053036</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>383</th>\n",
              "      <td>11998</td>\n",
              "      <td>Hannes Delcroix</td>\n",
              "      <td>5</td>\n",
              "      <td>221</td>\n",
              "      <td>0</td>\n",
              "      <td>0.232794</td>\n",
              "      <td>0</td>\n",
              "      <td>0.083017</td>\n",
              "      <td>4</td>\n",
              "      <td>2</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>D S</td>\n",
              "      <td>Burnley</td>\n",
              "      <td>0</td>\n",
              "      <td>0.23279432207345963</td>\n",
              "      <td>0.7400502115488052</td>\n",
              "      <td>0.6570334546267986</td>\n",
              "      <td>-0.232794</td>\n",
              "      <td>-0.083017</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>384</th>\n",
              "      <td>12073</td>\n",
              "      <td>Teden Mengi</td>\n",
              "      <td>3</td>\n",
              "      <td>145</td>\n",
              "      <td>0</td>\n",
              "      <td>0.019998</td>\n",
              "      <td>0</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>D S</td>\n",
              "      <td>Luton</td>\n",
              "      <td>0</td>\n",
              "      <td>0.01999759115278721</td>\n",
              "      <td>0.11997372843325138</td>\n",
              "      <td>0.09997613728046417</td>\n",
              "      <td>-0.019998</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>385</th>\n",
              "      <td>12094</td>\n",
              "      <td>Mike Trésor</td>\n",
              "      <td>3</td>\n",
              "      <td>147</td>\n",
              "      <td>0</td>\n",
              "      <td>0.526954</td>\n",
              "      <td>0</td>\n",
              "      <td>0.408040</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>F S</td>\n",
              "      <td>Burnley</td>\n",
              "      <td>0</td>\n",
              "      <td>0.52695382386446</td>\n",
              "      <td>0.6905197724699974</td>\n",
              "      <td>0.16356592625379562</td>\n",
              "      <td>-0.526954</td>\n",
              "      <td>-0.408040</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>386</th>\n",
              "      <td>12123</td>\n",
              "      <td>Murillo</td>\n",
              "      <td>2</td>\n",
              "      <td>180</td>\n",
              "      <td>0</td>\n",
              "      <td>0.525486</td>\n",
              "      <td>0</td>\n",
              "      <td>0.296086</td>\n",
              "      <td>3</td>\n",
              "      <td>2</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>D</td>\n",
              "      <td>Nottingham Forest</td>\n",
              "      <td>0</td>\n",
              "      <td>0.5254862606525421</td>\n",
              "      <td>0.8675576522946358</td>\n",
              "      <td>0.7223030999302864</td>\n",
              "      <td>-0.525486</td>\n",
              "      <td>-0.296086</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>387 rows × 21 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-03db0393-608e-4aab-85d7-ca151567a589')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-03db0393-608e-4aab-85d7-ca151567a589 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-03db0393-608e-4aab-85d7-ca151567a589');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-5e2f5f5c-abf0-43fb-a605-51d54c810810\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-5e2f5f5c-abf0-43fb-a605-51d54c810810')\"\n",
              "            title=\"Suggest charts.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-5e2f5f5c-abf0-43fb-a605-51d54c810810 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 13
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "from urllib.request import urlopen\n",
        "from json import loads\n",
        "from csv import writer\n",
        "\n",
        "\n",
        "def team_converter(team_id):\n",
        "    '''Converts a team's ID to their actual name'''\n",
        "    team_map = {\n",
        "        1: \"Arsenal\",\n",
        "        2: \"Aston Villa\",\n",
        "        3: \"Bournemouth\",\n",
        "        4: \"Brentford\",\n",
        "        5: \"Brighton\",\n",
        "        6: \"Burnley\",\n",
        "        7: \"Chelsea\",\n",
        "        8: \"Crystal Palace\",\n",
        "        9: \"Everton\",\n",
        "        10: \"Fulham\",\n",
        "        11: \"Liverpool\",\n",
        "        12: \"Luton Town\",\n",
        "        13: \"Manchester City\",\n",
        "        14: \"Manchester United\",\n",
        "        15: \"Newcastle United\",\n",
        "        16: \"Nottingham Forest\",\n",
        "        17: \"Sheffield United\",\n",
        "        18: \"Tottenham\",\n",
        "        19: \"West Ham\",\n",
        "        20: \"Wolverhampton Wanderers\",\n",
        "        None: None\n",
        "    }\n",
        "    return team_map[team_id]\n",
        "\n",
        "\n",
        "def position_converter(position):\n",
        "    '''Converts a player's element_type to their actual position'''\n",
        "    position_map = {\n",
        "        1: \"Goalkeeper\",\n",
        "        2: \"Defender\",\n",
        "        3: \"Midfielder\",\n",
        "        4: \"Forward\"\n",
        "    }\n",
        "    return position_map[position]\n",
        "\n",
        "\n",
        "def main():\n",
        "    all_data = loads(urlopen(\"https://fantasy.premierleague.com/api/fixtures/\").read())\n",
        "    fixtures = all_data\n",
        "\n",
        "    important_data = [\n",
        "        [\n",
        "            x[\"event\"],\n",
        "            team_converter(x[\"team_h\"]),\n",
        "            team_converter(x[\"team_a\"]),\n",
        "            x[\"kickoff_time\"],\n",
        "\n",
        "        ]\n",
        "        for x in fixtures\n",
        "    ]\n",
        "\n",
        "    with open(\"/fixtures_data.csv\", \"w\", encoding=\"utf-8\", newline=\"\") as out:\n",
        "        headers = [\"event\",\"team_h\",\"team_a\",\"kickoff_time\"]\n",
        "        w = writer(out)\n",
        "        w.writerow(headers)\n",
        "        w.writerows(important_data)\n",
        "\n",
        "if __name__ == \"__main__\":\n",
        "    main()"
      ],
      "metadata": {
        "id": "Y_cV1kyak7XX"
      },
      "execution_count": 14,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "import pandas as pd\n",
        "import scipy\n",
        "import numpy as np\n",
        "from numpy import random\n",
        "import matplotlib.pyplot as plt\n",
        "import seaborn as sns\n",
        "import matplotlib"
      ],
      "metadata": {
        "id": "DXejj-4jjUI-"
      },
      "execution_count": 15,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "from urllib.request import urlopen\n",
        "from json import loads\n",
        "from csv import writer\n",
        "\n",
        "\n",
        "def team_converter(team_id):\n",
        "    '''Converts a team's ID to their actual name'''\n",
        "    team_map = {\n",
        "        1: \"Arsenal\",\n",
        "        2: \"Aston Villa\",\n",
        "        3: \"Bournemouth\",\n",
        "        4: \"Brentford\",\n",
        "        5: \"Brighton\",\n",
        "        6: \"Burnley\",\n",
        "        7: \"Chelsea\",\n",
        "        8: \"Crystal Palace\",\n",
        "        9: \"Everton\",\n",
        "        10: \"Fulham\",\n",
        "        11: \"Liverpool\",\n",
        "        12: \"Luton Town\",\n",
        "        13: \"Manchester City\",\n",
        "        14: \"Manchester United\",\n",
        "        15: \"Newcastle United\",\n",
        "        16: \"Nottingham Forest\",\n",
        "        17: \"Sheffield United\",\n",
        "        18: \"Tottenham\",\n",
        "        19: \"West Ham\",\n",
        "        20: \"Wolverhampton Wanderers\",\n",
        "        None: None\n",
        "    }\n",
        "    return team_map[team_id]\n",
        "\n",
        "\n",
        "def position_converter(position):\n",
        "    '''Converts a player's element_type to their actual position'''\n",
        "    position_map = {\n",
        "        1: \"Goalkeeper\",\n",
        "        2: \"Defender\",\n",
        "        3: \"Midfielder\",\n",
        "        4: \"Forward\"\n",
        "    }\n",
        "    return position_map[position]\n",
        "\n",
        "\n",
        "def main():\n",
        "    all_data = loads(urlopen(\"https://fantasy.premierleague.com/api/bootstrap-static/\").read())\n",
        "    players = all_data[\"elements\"]\n",
        "\n",
        "    important_data = [\n",
        "        [\n",
        "            x[\"id\"],\n",
        "            team_converter(x[\"team\"]),\n",
        "            position_converter(x[\"element_type\"])[0],\n",
        "            x[\"web_name\"],\n",
        "            x[\"now_cost\"] / 10,\n",
        "            x[\"selected_by_percent\"],\n",
        "            float(x[\"expected_goals\"]),  # Convert to float\n",
        "            float(x[\"expected_assists\"]),  # Convert to float\n",
        "            x[\"goals_scored\"],\n",
        "            x[\"assists\"],\n",
        "            x[\"bps\"],\n",
        "            x[\"ict_index\"],\n",
        "            x[\"total_points\"],\n",
        "            x[\"points_per_game\"],\n",
        "            x[\"minutes\"]\n",
        "        ]\n",
        "        for x in players\n",
        "    ]\n",
        "\n",
        "    with open(\"players_data.csv\", \"w\", encoding=\"utf-8\", newline=\"\") as out:\n",
        "        headers = [\"id\",\"team\", \"pos\", \"name\", \"cost\", \"selected_by_percent\", \"expected_goals\", \"expected_assists\", \"goals_scored\", \"assists\", \"bps\", \"ict_index\",\"points\", \"points_per_game\", \"minutes\"]\n",
        "        w = writer(out)\n",
        "        w.writerow(headers)\n",
        "        w.writerows(important_data)\n",
        "\n",
        "if __name__ == \"__main__\":\n",
        "    main()"
      ],
      "metadata": {
        "id": "CKZZPD0xQGLu"
      },
      "execution_count": 16,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "import pandas as pd\n",
        "playerdata = pd.read_csv(\"/content/players_data.csv\")\n",
        "master = playerdata\n",
        "#master = master.dropna()\n",
        "master['apppoint'] = 2\n",
        "master['assistvalue'] = 3\n",
        "#master['BPS90'] = master.bps/(master.minutes/90)\n",
        "master"
      ],
      "metadata": {
        "id": "VOx8tP0bjttO",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 424
        },
        "outputId": "01942583-5750-4f11-e6e6-e1264e20d38a"
      },
      "execution_count": 17,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "      id                     team pos          name  cost  \\\n",
              "0      1                  Arsenal   F       Balogun   4.4   \n",
              "1      2                  Arsenal   D        Cédric   3.9   \n",
              "2      3                  Arsenal   M      M.Elneny   4.4   \n",
              "3      4                  Arsenal   M  Fábio Vieira   5.4   \n",
              "4      5                  Arsenal   D       Gabriel   4.7   \n",
              "..   ...                      ...  ..           ...   ...   \n",
              "720  598  Wolverhampton Wanderers   D       Doherty   4.3   \n",
              "721  697  Wolverhampton Wanderers   D       S.Bueno   4.5   \n",
              "722  698  Wolverhampton Wanderers   M      González   5.0   \n",
              "723  704  Wolverhampton Wanderers   F        Fraser   4.5   \n",
              "724  715  Wolverhampton Wanderers   M    Bellegarde   5.0   \n",
              "\n",
              "     selected_by_percent  expected_goals  expected_assists  goals_scored  \\\n",
              "0                    0.3            0.00              0.00             0   \n",
              "1                    0.4            0.00              0.00             0   \n",
              "2                    0.1            0.00              0.00             0   \n",
              "3                    0.1            0.41              0.32             0   \n",
              "4                   12.3            0.07              0.04             0   \n",
              "..                   ...             ...               ...           ...   \n",
              "720                  0.2            0.12              0.05             0   \n",
              "721                  0.0            0.00              0.00             0   \n",
              "722                  0.0            0.00              0.00             0   \n",
              "723                  0.1            0.00              0.00             0   \n",
              "724                  0.0            0.04              0.02             0   \n",
              "\n",
              "     assists  bps  ict_index  points  points_per_game  minutes  apppoint  \\\n",
              "0          0    0        0.0       0              0.0        0         2   \n",
              "1          0    0        0.0       0              0.0        0         2   \n",
              "2          0    0        0.0       0              0.0        0         2   \n",
              "3          3   45       15.9      16              3.2      185         2   \n",
              "4          0  109       11.6      24              3.4      474         2   \n",
              "..       ...  ...        ...     ...              ...      ...       ...   \n",
              "720        0   14        4.7       3              0.8      136         2   \n",
              "721        0    0        0.0       0              0.0        0         2   \n",
              "722        0    0        0.0       0              0.0        0         2   \n",
              "723        0    0        0.0       0              0.0        0         2   \n",
              "724        0    0        3.2       0              0.0      114         2   \n",
              "\n",
              "     assistvalue  \n",
              "0              3  \n",
              "1              3  \n",
              "2              3  \n",
              "3              3  \n",
              "4              3  \n",
              "..           ...  \n",
              "720            3  \n",
              "721            3  \n",
              "722            3  \n",
              "723            3  \n",
              "724            3  \n",
              "\n",
              "[725 rows x 17 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-ef293a43-32dc-4a1b-8bad-ab845dab124b\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>team</th>\n",
              "      <th>pos</th>\n",
              "      <th>name</th>\n",
              "      <th>cost</th>\n",
              "      <th>selected_by_percent</th>\n",
              "      <th>expected_goals</th>\n",
              "      <th>expected_assists</th>\n",
              "      <th>goals_scored</th>\n",
              "      <th>assists</th>\n",
              "      <th>bps</th>\n",
              "      <th>ict_index</th>\n",
              "      <th>points</th>\n",
              "      <th>points_per_game</th>\n",
              "      <th>minutes</th>\n",
              "      <th>apppoint</th>\n",
              "      <th>assistvalue</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>1</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>F</td>\n",
              "      <td>Balogun</td>\n",
              "      <td>4.4</td>\n",
              "      <td>0.3</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>2</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>D</td>\n",
              "      <td>Cédric</td>\n",
              "      <td>3.9</td>\n",
              "      <td>0.4</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>3</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>M</td>\n",
              "      <td>M.Elneny</td>\n",
              "      <td>4.4</td>\n",
              "      <td>0.1</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>4</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>M</td>\n",
              "      <td>Fábio Vieira</td>\n",
              "      <td>5.4</td>\n",
              "      <td>0.1</td>\n",
              "      <td>0.41</td>\n",
              "      <td>0.32</td>\n",
              "      <td>0</td>\n",
              "      <td>3</td>\n",
              "      <td>45</td>\n",
              "      <td>15.9</td>\n",
              "      <td>16</td>\n",
              "      <td>3.2</td>\n",
              "      <td>185</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>5</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>D</td>\n",
              "      <td>Gabriel</td>\n",
              "      <td>4.7</td>\n",
              "      <td>12.3</td>\n",
              "      <td>0.07</td>\n",
              "      <td>0.04</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>109</td>\n",
              "      <td>11.6</td>\n",
              "      <td>24</td>\n",
              "      <td>3.4</td>\n",
              "      <td>474</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>720</th>\n",
              "      <td>598</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>D</td>\n",
              "      <td>Doherty</td>\n",
              "      <td>4.3</td>\n",
              "      <td>0.2</td>\n",
              "      <td>0.12</td>\n",
              "      <td>0.05</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>14</td>\n",
              "      <td>4.7</td>\n",
              "      <td>3</td>\n",
              "      <td>0.8</td>\n",
              "      <td>136</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>721</th>\n",
              "      <td>697</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>D</td>\n",
              "      <td>S.Bueno</td>\n",
              "      <td>4.5</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>722</th>\n",
              "      <td>698</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>M</td>\n",
              "      <td>González</td>\n",
              "      <td>5.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>723</th>\n",
              "      <td>704</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>F</td>\n",
              "      <td>Fraser</td>\n",
              "      <td>4.5</td>\n",
              "      <td>0.1</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>724</th>\n",
              "      <td>715</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>M</td>\n",
              "      <td>Bellegarde</td>\n",
              "      <td>5.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.04</td>\n",
              "      <td>0.02</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>3.2</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>114</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>725 rows × 17 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-ef293a43-32dc-4a1b-8bad-ab845dab124b')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-ef293a43-32dc-4a1b-8bad-ab845dab124b button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-ef293a43-32dc-4a1b-8bad-ab845dab124b');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-2e25c846-222c-4a41-b315-21871964514d\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-2e25c846-222c-4a41-b315-21871964514d')\"\n",
              "            title=\"Suggest charts.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-2e25c846-222c-4a41-b315-21871964514d button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 17
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import pandas as pd\n",
        "gwfixtures = pd.read_csv(\"/fixtures_data.csv\")\n",
        "import requests\n",
        "import pandas as pd\n",
        "url = 'https://projects.fivethirtyeight.com/soccer-api/club/spi_global_rankings.csv'\n",
        "r = requests.get(url)\n",
        "open('temp.csv', 'wb').write(r.content)\n",
        "spi = pd.read_csv('temp.csv')\n",
        "spi['team_h'] = spi['name']\n",
        "spi['team_a'] = spi['name']\n",
        "spi= spi.replace('Newcastle', 'Newcastle United')\n",
        "spi= spi.replace('Wolverhampton','Wolverhampton Wanderers')\n",
        "spi= spi.replace('Tottenham Hotspur','Tottenham')\n",
        "spi= spi.replace('Leeds United','Leeds')\n",
        "spi= spi.replace('Leicester City','Leicester')\n",
        "spi= spi.replace('West Ham United','West Ham')\n",
        "spi= spi.replace('Brighton and Hove Albion','Brighton')\n",
        "spi= spi.replace('Norwich City','Norwich')\n",
        "spi= spi.replace('AFC Bournemouth','Bournemouth')\n",
        "Left_join = pd.merge(gwfixtures,\n",
        "                     spi,\n",
        "                     on ='team_h',\n",
        "                     how ='left')\n",
        "homespi = Left_join.drop(columns=[\n",
        " 'rank',\n",
        " 'prev_rank',\n",
        " 'league',\n",
        "  'off',\n",
        " 'def',\n",
        " 'name',\n",
        " 'team_a_y',])\n",
        "homespi.rename(columns = {'team_a_x':'team_a', 'spi':'Home SPI'}, inplace = True)\n",
        "away_join = pd.merge(homespi,\n",
        "                     spi,\n",
        "                     on ='team_a',\n",
        "                     how ='left')\n",
        "homesawayspi = away_join.drop(columns=[\n",
        " 'rank',\n",
        " 'prev_rank',\n",
        " 'name',\n",
        " 'league',\n",
        " 'off',\n",
        " 'def',\n",
        " 'team_h_y'])\n",
        "homesawayspi.rename(columns = {'team_h_x':'team_h', 'spi':'Away SPI'}, inplace = True)\n",
        "homesawayspi['Event'] = homesawayspi['event'].astype(str)\n",
        "gw9 = homesawayspi.query('Event==\"9.0\"')\n",
        "PLSPI = spi.query('league==\"Barclays Premier League\"')\n",
        "PLSPI['League Average']  = PLSPI[\"spi\"].mean()\n",
        "laverage = PLSPI[\"spi\"].mean()\n",
        "PLSPI['League Average'].astype(int)\n",
        "gw9['League_Average']  = laverage\n",
        "gw9.rename(columns = {'Home SPI':'HomeSPI', 'Away SPI':'AwaySPI'}, inplace = True)\n",
        "gw9['home_difference'] = gw9.HomeSPI - gw9.League_Average\n",
        "gw9['away_difference'] = gw9.AwaySPI - gw9.League_Average\n",
        "gw9['home_adjustment'] = (gw9.home_difference + gw9.League_Average)/gw9.League_Average\n",
        "gw9['away_adjustment'] = (gw9.away_difference + gw9.League_Average)/gw9.League_Average\n",
        "gw9adjustments = gw9[['team_h', 'home_adjustment']].append(gw9[['team_a','away_adjustment']].set_axis(['team_h', 'home_adjustment'], axis=1)).reset_index(drop=True)\n",
        "gw9adjustments.rename(columns = {'team_h':'team'}, inplace = True)\n",
        "gw9adjustments"
      ],
      "metadata": {
        "id": "0oqPsFQJjyR0",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "outputId": "8e4dd0c8-673f-4320-a6b8-8332e42bb38c"
      },
      "execution_count": 18,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "<ipython-input-18-7b1d3f1a9b2c>:49: SettingWithCopyWarning: \n",
            "A value is trying to be set on a copy of a slice from a DataFrame.\n",
            "Try using .loc[row_indexer,col_indexer] = value instead\n",
            "\n",
            "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
            "  PLSPI['League Average']  = PLSPI[\"spi\"].mean()\n",
            "<ipython-input-18-7b1d3f1a9b2c>:52: SettingWithCopyWarning: \n",
            "A value is trying to be set on a copy of a slice from a DataFrame.\n",
            "Try using .loc[row_indexer,col_indexer] = value instead\n",
            "\n",
            "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
            "  gw9['League_Average']  = laverage\n",
            "<ipython-input-18-7b1d3f1a9b2c>:53: SettingWithCopyWarning: \n",
            "A value is trying to be set on a copy of a slice from a DataFrame\n",
            "\n",
            "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
            "  gw9.rename(columns = {'Home SPI':'HomeSPI', 'Away SPI':'AwaySPI'}, inplace = True)\n",
            "<ipython-input-18-7b1d3f1a9b2c>:54: SettingWithCopyWarning: \n",
            "A value is trying to be set on a copy of a slice from a DataFrame.\n",
            "Try using .loc[row_indexer,col_indexer] = value instead\n",
            "\n",
            "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
            "  gw9['home_difference'] = gw9.HomeSPI - gw9.League_Average\n",
            "<ipython-input-18-7b1d3f1a9b2c>:55: SettingWithCopyWarning: \n",
            "A value is trying to be set on a copy of a slice from a DataFrame.\n",
            "Try using .loc[row_indexer,col_indexer] = value instead\n",
            "\n",
            "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
            "  gw9['away_difference'] = gw9.AwaySPI - gw9.League_Average\n",
            "<ipython-input-18-7b1d3f1a9b2c>:56: SettingWithCopyWarning: \n",
            "A value is trying to be set on a copy of a slice from a DataFrame.\n",
            "Try using .loc[row_indexer,col_indexer] = value instead\n",
            "\n",
            "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
            "  gw9['home_adjustment'] = (gw9.home_difference + gw9.League_Average)/gw9.League_Average\n",
            "<ipython-input-18-7b1d3f1a9b2c>:57: SettingWithCopyWarning: \n",
            "A value is trying to be set on a copy of a slice from a DataFrame.\n",
            "Try using .loc[row_indexer,col_indexer] = value instead\n",
            "\n",
            "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
            "  gw9['away_adjustment'] = (gw9.away_difference + gw9.League_Average)/gw9.League_Average\n",
            "<ipython-input-18-7b1d3f1a9b2c>:58: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  gw9adjustments = gw9[['team_h', 'home_adjustment']].append(gw9[['team_a','away_adjustment']].set_axis(['team_h', 'home_adjustment'], axis=1)).reset_index(drop=True)\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                       team  home_adjustment\n",
              "0                 Liverpool         1.166318\n",
              "1               Bournemouth         0.827943\n",
              "2                 Brentford         1.071962\n",
              "3           Manchester City         1.278461\n",
              "4          Newcastle United         1.163122\n",
              "5         Nottingham Forest         0.780000\n",
              "6                   Chelsea         1.053063\n",
              "7          Sheffield United         0.786115\n",
              "8               Aston Villa         1.101978\n",
              "9                 Tottenham         1.002480\n",
              "10                  Everton         0.884223\n",
              "11  Wolverhampton Wanderers         0.820717\n",
              "12                  Burnley         0.874634\n",
              "13                 Brighton         1.123934\n",
              "14           Crystal Palace         1.020824\n",
              "15               Luton Town         0.770968\n",
              "16                  Arsenal         1.166179\n",
              "17        Manchester United         1.098921\n",
              "18                 West Ham         0.988306\n",
              "19                   Fulham         0.948007"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-6ebfeb66-b43b-4c45-b9ec-9583d7cc7e8c\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>team</th>\n",
              "      <th>home_adjustment</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>Liverpool</td>\n",
              "      <td>1.166318</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Bournemouth</td>\n",
              "      <td>0.827943</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>Brentford</td>\n",
              "      <td>1.071962</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>Manchester City</td>\n",
              "      <td>1.278461</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>Newcastle United</td>\n",
              "      <td>1.163122</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>Nottingham Forest</td>\n",
              "      <td>0.780000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>Chelsea</td>\n",
              "      <td>1.053063</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>Sheffield United</td>\n",
              "      <td>0.786115</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>1.101978</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>Tottenham</td>\n",
              "      <td>1.002480</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10</th>\n",
              "      <td>Everton</td>\n",
              "      <td>0.884223</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>11</th>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>0.820717</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>12</th>\n",
              "      <td>Burnley</td>\n",
              "      <td>0.874634</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>13</th>\n",
              "      <td>Brighton</td>\n",
              "      <td>1.123934</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>14</th>\n",
              "      <td>Crystal Palace</td>\n",
              "      <td>1.020824</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>15</th>\n",
              "      <td>Luton Town</td>\n",
              "      <td>0.770968</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>16</th>\n",
              "      <td>Arsenal</td>\n",
              "      <td>1.166179</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>17</th>\n",
              "      <td>Manchester United</td>\n",
              "      <td>1.098921</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>18</th>\n",
              "      <td>West Ham</td>\n",
              "      <td>0.988306</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>19</th>\n",
              "      <td>Fulham</td>\n",
              "      <td>0.948007</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-6ebfeb66-b43b-4c45-b9ec-9583d7cc7e8c')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-6ebfeb66-b43b-4c45-b9ec-9583d7cc7e8c button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-6ebfeb66-b43b-4c45-b9ec-9583d7cc7e8c');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-1a4493fa-2c81-48cc-b5bc-45c5ea0d732e\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-1a4493fa-2c81-48cc-b5bc-45c5ea0d732e')\"\n",
              "            title=\"Suggest charts.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-1a4493fa-2c81-48cc-b5bc-45c5ea0d732e button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 18
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "rawdf = pd.merge(master,\n",
        "                     gw9adjustments,\n",
        "                     on ='team',\n",
        "                     how ='left')\n",
        "rawfwd = rawdf.query('pos==\"F\"')\n",
        "rawfwd['xP'] = ((rawfwd.expected_goals * 4/8)+(rawfwd.expected_assists * 3/8) + (rawfwd.apppoint)) * rawfwd.home_adjustment\n",
        "rawfwd = rawfwd.drop(columns=[\n",
        " 'expected_goals',\n",
        " 'team',\n",
        " 'expected_assists',\n",
        " 'apppoint',\n",
        " 'assistvalue',\n",
        "'home_adjustment'])\n",
        "rawmd = rawdf.query('pos==\"M\"')\n",
        "rawmd['xP'] = ((rawmd.expected_goals * 5/8)+(rawmd.expected_assists * 3/8) + (rawmd.apppoint)) * rawmd.home_adjustment\n",
        "rawmd = rawmd.drop(columns=[\n",
        " 'expected_goals',\n",
        " 'team',\n",
        " 'expected_assists',\n",
        " 'apppoint',\n",
        " 'assistvalue',\n",
        "'home_adjustment'])\n",
        "fbref = pd.read_html('https://fbref.com/en/comps/9/Premier-League-Stats')\n",
        "epltable = fbref[0]\n",
        "epltabledef = epltable.drop(columns=[ 'Rk',\n",
        " 'MP',\n",
        " 'W',\n",
        " 'D',\n",
        " 'L',\n",
        " 'GF',\n",
        " 'GA',\n",
        " 'GD',\n",
        " 'xG',\n",
        " 'xGD',\n",
        " 'xGD/90',\n",
        " 'Pts',\n",
        " 'Pts/MP',\n",
        " 'Last 5',\n",
        " 'Attendance',\n",
        " 'Top Team Scorer',\n",
        " 'Goalkeeper',\n",
        " 'Notes'])\n",
        "epltabledef= epltabledef.replace('Newcastle Utd', 'Newcastle United')\n",
        "epltabledef= epltabledef.replace('Wolves','Wolverhampton Wanderers')\n",
        "epltabledef= epltabledef.replace('Leeds United','Leeds')\n",
        "epltabledef= epltabledef.replace('Leicester City','Leicester')\n",
        "epltabledef= epltabledef.replace('Manchester Utd','Manchester United')\n",
        "epltabledef['Squad'] = epltabledef['Squad'].str.replace(r\"[\\\"\\',]\", '')\n",
        "epltabledef= epltabledef.replace('Nottham Forest','Nottingham Forest')\n",
        "epltabledef['xCSP'] = (4 - (epltabledef.xGA * 4/8))\n",
        "epltabledef.rename(columns={'Squad': 'team'}, inplace=True)\n",
        "rawdfcs = pd.merge(rawdf,\n",
        "                     epltabledef,\n",
        "                     on ='team',\n",
        "                     how ='left')\n",
        "rawgk= rawdfcs.query('pos==\"G\"')\n",
        "rawgk['xP'] = ((rawgk.xCSP)+ (rawgk.apppoint)) * rawgk.home_adjustment\n",
        "#rawgk['xP'] = rawgk.apppoint * rawgk.home_adjustment\n",
        "rawgk = rawgk.drop(columns=[\n",
        " 'expected_goals',\n",
        " 'team',\n",
        " 'expected_assists',\n",
        " 'apppoint',\n",
        " 'assistvalue',\n",
        "  'xGA',\n",
        "'home_adjustment'])\n",
        "rawdef= rawdfcs.query('pos==\"D\"')\n",
        "rawdef['xP'] = ((rawdef.expected_goals * 6/8)+(rawdef.expected_assists * 3/8) +(rawdef.xCSP)+ (rawdef.apppoint) * rawdef.home_adjustment)\n",
        "#rawdef['xP'] = ((rawdef.expected_goals * 6/3)+(rawdef.expected_assists * 3/3) + (rawdef.apppoint) * rawdef.home_adjustment)\n",
        "rawdef = rawdef.drop(columns=[\n",
        " 'expected_goals',\n",
        " 'team',\n",
        " 'expected_assists',\n",
        " 'apppoint',\n",
        " 'assistvalue',\n",
        "  'xGA',\n",
        " 'home_adjustment'])\n",
        "rawallplayers = pd.concat([rawfwd, rawmd, rawdef, rawgk], ignore_index=True)\n",
        "rawallplayers\n",
        "\n",
        "\n",
        "\n"
      ],
      "metadata": {
        "id": "AWnYpVh5kDzO",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 875
        },
        "outputId": "449663f7-ad68-4261-f0bf-2110e9cbd988"
      },
      "execution_count": 19,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "<ipython-input-19-afb7a9525f0a>:6: SettingWithCopyWarning: \n",
            "A value is trying to be set on a copy of a slice from a DataFrame.\n",
            "Try using .loc[row_indexer,col_indexer] = value instead\n",
            "\n",
            "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
            "  rawfwd['xP'] = ((rawfwd.expected_goals * 4/8)+(rawfwd.expected_assists * 3/8) + (rawfwd.apppoint)) * rawfwd.home_adjustment\n",
            "<ipython-input-19-afb7a9525f0a>:15: SettingWithCopyWarning: \n",
            "A value is trying to be set on a copy of a slice from a DataFrame.\n",
            "Try using .loc[row_indexer,col_indexer] = value instead\n",
            "\n",
            "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
            "  rawmd['xP'] = ((rawmd.expected_goals * 5/8)+(rawmd.expected_assists * 3/8) + (rawmd.apppoint)) * rawmd.home_adjustment\n",
            "<ipython-input-19-afb7a9525f0a>:48: FutureWarning: The default value of regex will change from True to False in a future version.\n",
            "  epltabledef['Squad'] = epltabledef['Squad'].str.replace(r\"[\\\"\\',]\", '')\n",
            "<ipython-input-19-afb7a9525f0a>:57: SettingWithCopyWarning: \n",
            "A value is trying to be set on a copy of a slice from a DataFrame.\n",
            "Try using .loc[row_indexer,col_indexer] = value instead\n",
            "\n",
            "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
            "  rawgk['xP'] = ((rawgk.xCSP)+ (rawgk.apppoint)) * rawgk.home_adjustment\n",
            "<ipython-input-19-afb7a9525f0a>:68: SettingWithCopyWarning: \n",
            "A value is trying to be set on a copy of a slice from a DataFrame.\n",
            "Try using .loc[row_indexer,col_indexer] = value instead\n",
            "\n",
            "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
            "  rawdef['xP'] = ((rawdef.expected_goals * 6/8)+(rawdef.expected_assists * 3/8) +(rawdef.xCSP)+ (rawdef.apppoint) * rawdef.home_adjustment)\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "      id pos     name  cost  selected_by_percent  goals_scored  assists  bps  \\\n",
              "0      1   F  Balogun   4.4                  0.3             0        0    0   \n",
              "1      8   F  G.Jesus   8.0                  3.5             1        1   45   \n",
              "2     13   F  Nketiah   5.5                  5.2             2        2   82   \n",
              "3     39   F    Davis   4.9                  0.1             0        0    0   \n",
              "4     44   F    Duran   5.0                  0.3             2        0   55   \n",
              "..   ...  ..      ...   ...                  ...           ...      ...  ...   \n",
              "720  647   G    Anang   4.0                  0.1             0        0    0   \n",
              "721  546   G  Bentley   4.0                  0.4             0        0    0   \n",
              "722  564   G     King   4.0                  0.8             0        0    0   \n",
              "723  569   G  José Sá   5.0                  1.5             0        0  161   \n",
              "724  571   G   Šarkić   4.0                  0.4             0        0    0   \n",
              "\n",
              "     ict_index  points  points_per_game  minutes        xP  xCSP  \n",
              "0          0.0       0              0.0        0  2.332358   NaN  \n",
              "1         25.4      16              2.7      295  3.303202   NaN  \n",
              "2         31.3      30              3.8      567  3.603494   NaN  \n",
              "3          0.0       0              0.0        0  2.203956   NaN  \n",
              "4         13.7      15              2.5       68  2.610311   NaN  \n",
              "..         ...     ...              ...      ...       ...   ...  \n",
              "720        0.0       0              0.0        0 -2.124858 -4.15  \n",
              "721        0.0       0              0.0        0 -1.190039 -3.45  \n",
              "722        0.0       0              0.0        0 -1.190039 -3.45  \n",
              "723       27.5      29              3.6      720 -1.190039 -3.45  \n",
              "724        0.0       0              0.0        0 -1.190039 -3.45  \n",
              "\n",
              "[725 rows x 14 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-880b7ed1-5acd-4b90-bd6c-83f7dbe96bd0\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>pos</th>\n",
              "      <th>name</th>\n",
              "      <th>cost</th>\n",
              "      <th>selected_by_percent</th>\n",
              "      <th>goals_scored</th>\n",
              "      <th>assists</th>\n",
              "      <th>bps</th>\n",
              "      <th>ict_index</th>\n",
              "      <th>points</th>\n",
              "      <th>points_per_game</th>\n",
              "      <th>minutes</th>\n",
              "      <th>xP</th>\n",
              "      <th>xCSP</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>1</td>\n",
              "      <td>F</td>\n",
              "      <td>Balogun</td>\n",
              "      <td>4.4</td>\n",
              "      <td>0.3</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>2.332358</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>8</td>\n",
              "      <td>F</td>\n",
              "      <td>G.Jesus</td>\n",
              "      <td>8.0</td>\n",
              "      <td>3.5</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>45</td>\n",
              "      <td>25.4</td>\n",
              "      <td>16</td>\n",
              "      <td>2.7</td>\n",
              "      <td>295</td>\n",
              "      <td>3.303202</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>13</td>\n",
              "      <td>F</td>\n",
              "      <td>Nketiah</td>\n",
              "      <td>5.5</td>\n",
              "      <td>5.2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>82</td>\n",
              "      <td>31.3</td>\n",
              "      <td>30</td>\n",
              "      <td>3.8</td>\n",
              "      <td>567</td>\n",
              "      <td>3.603494</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>39</td>\n",
              "      <td>F</td>\n",
              "      <td>Davis</td>\n",
              "      <td>4.9</td>\n",
              "      <td>0.1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>2.203956</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>44</td>\n",
              "      <td>F</td>\n",
              "      <td>Duran</td>\n",
              "      <td>5.0</td>\n",
              "      <td>0.3</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>55</td>\n",
              "      <td>13.7</td>\n",
              "      <td>15</td>\n",
              "      <td>2.5</td>\n",
              "      <td>68</td>\n",
              "      <td>2.610311</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>720</th>\n",
              "      <td>647</td>\n",
              "      <td>G</td>\n",
              "      <td>Anang</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>-2.124858</td>\n",
              "      <td>-4.15</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>721</th>\n",
              "      <td>546</td>\n",
              "      <td>G</td>\n",
              "      <td>Bentley</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.4</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>-1.190039</td>\n",
              "      <td>-3.45</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>722</th>\n",
              "      <td>564</td>\n",
              "      <td>G</td>\n",
              "      <td>King</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.8</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>-1.190039</td>\n",
              "      <td>-3.45</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>723</th>\n",
              "      <td>569</td>\n",
              "      <td>G</td>\n",
              "      <td>José Sá</td>\n",
              "      <td>5.0</td>\n",
              "      <td>1.5</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>161</td>\n",
              "      <td>27.5</td>\n",
              "      <td>29</td>\n",
              "      <td>3.6</td>\n",
              "      <td>720</td>\n",
              "      <td>-1.190039</td>\n",
              "      <td>-3.45</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>724</th>\n",
              "      <td>571</td>\n",
              "      <td>G</td>\n",
              "      <td>Šarkić</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.4</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>-1.190039</td>\n",
              "      <td>-3.45</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>725 rows × 14 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-880b7ed1-5acd-4b90-bd6c-83f7dbe96bd0')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-880b7ed1-5acd-4b90-bd6c-83f7dbe96bd0 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-880b7ed1-5acd-4b90-bd6c-83f7dbe96bd0');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-3aea10d1-1aa7-4a67-95d9-2d940bf4f4ff\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-3aea10d1-1aa7-4a67-95d9-2d940bf4f4ff')\"\n",
              "            title=\"Suggest charts.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-3aea10d1-1aa7-4a67-95d9-2d940bf4f4ff button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 19
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "rawgk1= rawdfcs.query('pos==\"G\"')\n",
        "rawgk1"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 493
        },
        "id": "z3FgmhoCb3GG",
        "outputId": "666bce57-b659-4fd8-e56e-cb81e57a988c"
      },
      "execution_count": 20,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "      id                     team pos       name  cost  selected_by_percent  \\\n",
              "15    17                  Arsenal   G   Ramsdale   4.8                 10.5   \n",
              "16    18                  Arsenal   G  Rúnarsson   4.0                  0.1   \n",
              "26   113                  Arsenal   G       Raya   4.8                  3.4   \n",
              "30   646                  Arsenal   G       Hein   4.0                  0.0   \n",
              "47    49              Aston Villa   G   Martinez   4.9                  6.8   \n",
              "..   ...                      ...  ..        ...   ...                  ...   \n",
              "687  647                 West Ham   G      Anang   4.0                  0.1   \n",
              "693  546  Wolverhampton Wanderers   G    Bentley   4.0                  0.4   \n",
              "709  564  Wolverhampton Wanderers   G       King   4.0                  0.8   \n",
              "713  569  Wolverhampton Wanderers   G    José Sá   5.0                  1.5   \n",
              "715  571  Wolverhampton Wanderers   G     Šarkić   4.0                  0.4   \n",
              "\n",
              "     expected_goals  expected_assists  goals_scored  assists  bps  ict_index  \\\n",
              "15              0.0              0.01             0        0   55        5.1   \n",
              "16              0.0              0.00             0        0    0        0.0   \n",
              "26              0.0              0.00             0        0   91        5.6   \n",
              "30              0.0              0.00             0        0    0        0.0   \n",
              "47              0.0              0.00             0        0  133       17.5   \n",
              "..              ...               ...           ...      ...  ...        ...   \n",
              "687             0.0              0.00             0        0    0        0.0   \n",
              "693             0.0              0.00             0        0    0        0.0   \n",
              "709             0.0              0.00             0        0    0        0.0   \n",
              "713             0.0              0.00             0        0  161       27.5   \n",
              "715             0.0              0.00             0        0    0        0.0   \n",
              "\n",
              "     points  points_per_game  minutes  apppoint  assistvalue  home_adjustment  \\\n",
              "15       11              2.8      360         2            3         1.166179   \n",
              "16        0              0.0        0         2            3         1.166179   \n",
              "26       22              5.5      360         2            3         1.166179   \n",
              "30        0              0.0        0         2            3         1.166179   \n",
              "47       23              3.3      630         2            3         1.101978   \n",
              "..      ...              ...      ...       ...          ...              ...   \n",
              "687       0              0.0        0         2            3         0.988306   \n",
              "693       0              0.0        0         2            3         0.820717   \n",
              "709       0              0.0        0         2            3         0.820717   \n",
              "713      29              3.6      720         2            3         0.820717   \n",
              "715       0              0.0        0         2            3         0.820717   \n",
              "\n",
              "      xGA  xCSP  \n",
              "15    6.6  0.70  \n",
              "16    6.6  0.70  \n",
              "26    6.6  0.70  \n",
              "30    6.6  0.70  \n",
              "47   13.0 -2.50  \n",
              "..    ...   ...  \n",
              "687  16.3 -4.15  \n",
              "693  14.9 -3.45  \n",
              "709  14.9 -3.45  \n",
              "713  14.9 -3.45  \n",
              "715  14.9 -3.45  \n",
              "\n",
              "[85 rows x 20 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-e47e1e23-b574-4c07-9a4b-ea7c7155033f\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>team</th>\n",
              "      <th>pos</th>\n",
              "      <th>name</th>\n",
              "      <th>cost</th>\n",
              "      <th>selected_by_percent</th>\n",
              "      <th>expected_goals</th>\n",
              "      <th>expected_assists</th>\n",
              "      <th>goals_scored</th>\n",
              "      <th>assists</th>\n",
              "      <th>bps</th>\n",
              "      <th>ict_index</th>\n",
              "      <th>points</th>\n",
              "      <th>points_per_game</th>\n",
              "      <th>minutes</th>\n",
              "      <th>apppoint</th>\n",
              "      <th>assistvalue</th>\n",
              "      <th>home_adjustment</th>\n",
              "      <th>xGA</th>\n",
              "      <th>xCSP</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>15</th>\n",
              "      <td>17</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>G</td>\n",
              "      <td>Ramsdale</td>\n",
              "      <td>4.8</td>\n",
              "      <td>10.5</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.01</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>55</td>\n",
              "      <td>5.1</td>\n",
              "      <td>11</td>\n",
              "      <td>2.8</td>\n",
              "      <td>360</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "      <td>1.166179</td>\n",
              "      <td>6.6</td>\n",
              "      <td>0.70</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>16</th>\n",
              "      <td>18</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>G</td>\n",
              "      <td>Rúnarsson</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.1</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "      <td>1.166179</td>\n",
              "      <td>6.6</td>\n",
              "      <td>0.70</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>26</th>\n",
              "      <td>113</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>G</td>\n",
              "      <td>Raya</td>\n",
              "      <td>4.8</td>\n",
              "      <td>3.4</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>91</td>\n",
              "      <td>5.6</td>\n",
              "      <td>22</td>\n",
              "      <td>5.5</td>\n",
              "      <td>360</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "      <td>1.166179</td>\n",
              "      <td>6.6</td>\n",
              "      <td>0.70</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>30</th>\n",
              "      <td>646</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>G</td>\n",
              "      <td>Hein</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "      <td>1.166179</td>\n",
              "      <td>6.6</td>\n",
              "      <td>0.70</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>47</th>\n",
              "      <td>49</td>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>G</td>\n",
              "      <td>Martinez</td>\n",
              "      <td>4.9</td>\n",
              "      <td>6.8</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>133</td>\n",
              "      <td>17.5</td>\n",
              "      <td>23</td>\n",
              "      <td>3.3</td>\n",
              "      <td>630</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "      <td>1.101978</td>\n",
              "      <td>13.0</td>\n",
              "      <td>-2.50</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>687</th>\n",
              "      <td>647</td>\n",
              "      <td>West Ham</td>\n",
              "      <td>G</td>\n",
              "      <td>Anang</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.1</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "      <td>0.988306</td>\n",
              "      <td>16.3</td>\n",
              "      <td>-4.15</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>693</th>\n",
              "      <td>546</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>G</td>\n",
              "      <td>Bentley</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.4</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "      <td>0.820717</td>\n",
              "      <td>14.9</td>\n",
              "      <td>-3.45</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>709</th>\n",
              "      <td>564</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>G</td>\n",
              "      <td>King</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.8</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "      <td>0.820717</td>\n",
              "      <td>14.9</td>\n",
              "      <td>-3.45</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>713</th>\n",
              "      <td>569</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>G</td>\n",
              "      <td>José Sá</td>\n",
              "      <td>5.0</td>\n",
              "      <td>1.5</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>161</td>\n",
              "      <td>27.5</td>\n",
              "      <td>29</td>\n",
              "      <td>3.6</td>\n",
              "      <td>720</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "      <td>0.820717</td>\n",
              "      <td>14.9</td>\n",
              "      <td>-3.45</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>715</th>\n",
              "      <td>571</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>G</td>\n",
              "      <td>Šarkić</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.4</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "      <td>0.820717</td>\n",
              "      <td>14.9</td>\n",
              "      <td>-3.45</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>85 rows × 20 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-e47e1e23-b574-4c07-9a4b-ea7c7155033f')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-e47e1e23-b574-4c07-9a4b-ea7c7155033f button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-e47e1e23-b574-4c07-9a4b-ea7c7155033f');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-64d062ef-cd2c-4607-bb24-1c25d4ce678f\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-64d062ef-cd2c-4607-bb24-1c25d4ce678f')\"\n",
              "            title=\"Suggest charts.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-64d062ef-cd2c-4607-bb24-1c25d4ce678f button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 20
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "from pandas import ExcelWriter"
      ],
      "metadata": {
        "id": "ONZy1SvCDu6y"
      },
      "execution_count": 21,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "writer = ExcelWriter('notes.xlsx')"
      ],
      "metadata": {
        "id": "iubZBRlVEhiz"
      },
      "execution_count": 22,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "rawallplayers.to_excel(writer, sheet_name='Sheet1')\n",
        "gw9adjustments.to_excel(writer, sheet_name='Sheet2')\n",
        "#fplwithunderstat.to_excel(writer, sheet_name='Sheet3')\n",
        "\n",
        "# Close the Pandas Excel writer and output the Excel file.\n",
        "writer.save()"
      ],
      "metadata": {
        "id": "slYEIma_E0uP",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "ab37e416-3f46-4799-84b9-79db4099ec63"
      },
      "execution_count": 23,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "<ipython-input-23-6a42ded00662>:6: FutureWarning: save is not part of the public API, usage can give unexpected results and will be removed in a future version\n",
            "  writer.save()\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "gwfixtures"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 424
        },
        "id": "3udskoGrT73A",
        "outputId": "a546397f-2662-402e-d664-43143217afec"
      },
      "execution_count": 24,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "     event            team_h                   team_a          kickoff_time\n",
              "0      NaN   Manchester City                Brentford                   NaN\n",
              "1      1.0           Burnley          Manchester City  2023-08-11T19:00:00Z\n",
              "2      1.0           Arsenal        Nottingham Forest  2023-08-12T12:00:00Z\n",
              "3      1.0       Bournemouth                 West Ham  2023-08-12T14:00:00Z\n",
              "4      1.0          Brighton               Luton Town  2023-08-12T14:00:00Z\n",
              "..     ...               ...                      ...                   ...\n",
              "375   38.0    Crystal Palace              Aston Villa  2024-05-19T15:00:00Z\n",
              "376   38.0         Liverpool  Wolverhampton Wanderers  2024-05-19T15:00:00Z\n",
              "377   38.0        Luton Town                   Fulham  2024-05-19T15:00:00Z\n",
              "378   38.0   Manchester City                 West Ham  2024-05-19T15:00:00Z\n",
              "379   38.0  Sheffield United                Tottenham  2024-05-19T15:00:00Z\n",
              "\n",
              "[380 rows x 4 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-a8a8e6e9-571c-46e6-a779-ab9ac01dc3ba\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>event</th>\n",
              "      <th>team_h</th>\n",
              "      <th>team_a</th>\n",
              "      <th>kickoff_time</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>NaN</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>Brentford</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>1.0</td>\n",
              "      <td>Burnley</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>2023-08-11T19:00:00Z</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>1.0</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>Nottingham Forest</td>\n",
              "      <td>2023-08-12T12:00:00Z</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>1.0</td>\n",
              "      <td>Bournemouth</td>\n",
              "      <td>West Ham</td>\n",
              "      <td>2023-08-12T14:00:00Z</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>1.0</td>\n",
              "      <td>Brighton</td>\n",
              "      <td>Luton Town</td>\n",
              "      <td>2023-08-12T14:00:00Z</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>375</th>\n",
              "      <td>38.0</td>\n",
              "      <td>Crystal Palace</td>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>2024-05-19T15:00:00Z</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>376</th>\n",
              "      <td>38.0</td>\n",
              "      <td>Liverpool</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>2024-05-19T15:00:00Z</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>377</th>\n",
              "      <td>38.0</td>\n",
              "      <td>Luton Town</td>\n",
              "      <td>Fulham</td>\n",
              "      <td>2024-05-19T15:00:00Z</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>378</th>\n",
              "      <td>38.0</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>West Ham</td>\n",
              "      <td>2024-05-19T15:00:00Z</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>379</th>\n",
              "      <td>38.0</td>\n",
              "      <td>Sheffield United</td>\n",
              "      <td>Tottenham</td>\n",
              "      <td>2024-05-19T15:00:00Z</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>380 rows × 4 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-a8a8e6e9-571c-46e6-a779-ab9ac01dc3ba')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-a8a8e6e9-571c-46e6-a779-ab9ac01dc3ba button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-a8a8e6e9-571c-46e6-a779-ab9ac01dc3ba');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-81968a5d-79dd-41f5-bf1c-69dc96bd457b\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-81968a5d-79dd-41f5-bf1c-69dc96bd457b')\"\n",
              "            title=\"Suggest charts.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-81968a5d-79dd-41f5-bf1c-69dc96bd457b button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 24
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "rawdfallgw = pd.merge(master,\n",
        "                     gw9adjustments,\n",
        "                     on ='team',\n",
        "                     how ='left')\n",
        "rawfwdallgw = rawdfallgw.query('pos==\"F\"')\n",
        "rawfwdallgw['xPallgw'] = ((rawfwdallgw.expected_goals * 4/8)+(rawfwdallgw.expected_assists * 3/8) + (rawfwdallgw.apppoint))\n",
        "rawfwdallgw = rawfwdallgw.drop(columns=[\n",
        " 'expected_goals',\n",
        " 'expected_assists',\n",
        " 'apppoint',\n",
        " 'assistvalue',\n",
        "])\n",
        "rawmdallgw = rawdfallgw.query('pos==\"M\"')\n",
        "rawmdallgw['xPallgw'] = ((rawmdallgw.expected_goals * 5/8)+(rawmdallgw.expected_assists * 3/8) + (rawmdallgw.apppoint))\n",
        "rawmdallgw = rawmdallgw.drop(columns=[\n",
        " 'expected_goals',\n",
        " 'expected_assists',\n",
        " 'apppoint',\n",
        " 'assistvalue',\n",
        "])\n",
        "fbref = pd.read_html('https://fbref.com/en/comps/9/Premier-League-Stats')\n",
        "epltable = fbref[0]\n",
        "epltabledef = epltable.drop(columns=[ 'Rk',\n",
        " 'MP',\n",
        " 'W',\n",
        " 'D',\n",
        " 'L',\n",
        " 'GF',\n",
        " 'GA',\n",
        " 'GD',\n",
        " 'xG',\n",
        " 'xGD',\n",
        " 'xGD/90',\n",
        " 'Pts',\n",
        " 'Pts/MP',\n",
        " 'Last 5',\n",
        " 'Attendance',\n",
        " 'Top Team Scorer',\n",
        " 'Goalkeeper',\n",
        " 'Notes'])\n",
        "epltabledef= epltabledef.replace('Newcastle Utd', 'Newcastle United')\n",
        "epltabledef= epltabledef.replace('Wolves','Wolverhampton Wanderers')\n",
        "epltabledef= epltabledef.replace('Leeds United','Leeds')\n",
        "epltabledef= epltabledef.replace('Leicester City','Leicester')\n",
        "epltabledef= epltabledef.replace('Manchester Utd','Manchester United')\n",
        "epltabledef['Squad'] = epltabledef['Squad'].str.replace(r\"[\\\"\\',]\", '')\n",
        "epltabledef= epltabledef.replace('Nottham Forest','Nottingham Forest')\n",
        "epltabledef['xCSP'] = (4 - (epltabledef.xGA * 4/8))\n",
        "epltabledef.rename(columns={'Squad': 'team'}, inplace=True)\n",
        "rawdfcs = pd.merge(rawdf,\n",
        "                     epltabledef,\n",
        "                     on ='team',\n",
        "                     how ='left')\n",
        "rawgkallgw= rawdfcs.query('pos==\"G\"')\n",
        "#rawgkallgw['xPallgw'] = (rawgkallgw.apppoint)\n",
        "rawgkallgw['xPallgw'] = ((rawgkallgw.xCSP)+ (rawgkallgw.apppoint))\n",
        "rawgkallgw = rawgkallgw.drop(columns=[\n",
        " 'expected_goals',\n",
        "  'expected_assists',\n",
        " 'apppoint',\n",
        " 'assistvalue',\n",
        "  'xGA',\n",
        "])\n",
        "rawdefallgw= rawdfcs.query('pos==\"D\"')\n",
        "rawdefallgw['xPallgw'] = (rawdefallgw.expected_goals * 6/8)+(rawdefallgw.expected_assists * 3/8) +(rawdefallgw.xCSP)+ (rawdefallgw.apppoint)\n",
        "#rawdefallgw['xPallgw'] = (rawdefallgw.expected_goals * 6/3)+(rawdefallgw.expected_assists * 3/3) + (rawdefallgw.apppoint)\n",
        "rawdefallgw = rawdefallgw.drop(columns=[\n",
        " 'expected_goals',\n",
        " 'expected_assists',\n",
        " 'apppoint',\n",
        " 'assistvalue',\n",
        "  'xGA',])\n",
        "rawallplayersallgw = pd.concat([rawfwdallgw, rawmdallgw, rawdefallgw, rawgkallgw], ignore_index=True)\n",
        "rawallplayersallgw\n",
        "\n",
        "\n",
        "\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 875
        },
        "id": "xxPTwE3TZZC0",
        "outputId": "f91f396d-b439-40ea-9dc0-38c829b1d417"
      },
      "execution_count": 25,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "<ipython-input-25-455774f2086a>:6: SettingWithCopyWarning: \n",
            "A value is trying to be set on a copy of a slice from a DataFrame.\n",
            "Try using .loc[row_indexer,col_indexer] = value instead\n",
            "\n",
            "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
            "  rawfwdallgw['xPallgw'] = ((rawfwdallgw.expected_goals * 4/8)+(rawfwdallgw.expected_assists * 3/8) + (rawfwdallgw.apppoint))\n",
            "<ipython-input-25-455774f2086a>:14: SettingWithCopyWarning: \n",
            "A value is trying to be set on a copy of a slice from a DataFrame.\n",
            "Try using .loc[row_indexer,col_indexer] = value instead\n",
            "\n",
            "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
            "  rawmdallgw['xPallgw'] = ((rawmdallgw.expected_goals * 5/8)+(rawmdallgw.expected_assists * 3/8) + (rawmdallgw.apppoint))\n",
            "<ipython-input-25-455774f2086a>:46: FutureWarning: The default value of regex will change from True to False in a future version.\n",
            "  epltabledef['Squad'] = epltabledef['Squad'].str.replace(r\"[\\\"\\',]\", '')\n",
            "<ipython-input-25-455774f2086a>:56: SettingWithCopyWarning: \n",
            "A value is trying to be set on a copy of a slice from a DataFrame.\n",
            "Try using .loc[row_indexer,col_indexer] = value instead\n",
            "\n",
            "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
            "  rawgkallgw['xPallgw'] = ((rawgkallgw.xCSP)+ (rawgkallgw.apppoint))\n",
            "<ipython-input-25-455774f2086a>:65: SettingWithCopyWarning: \n",
            "A value is trying to be set on a copy of a slice from a DataFrame.\n",
            "Try using .loc[row_indexer,col_indexer] = value instead\n",
            "\n",
            "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
            "  rawdefallgw['xPallgw'] = (rawdefallgw.expected_goals * 6/8)+(rawdefallgw.expected_assists * 3/8) +(rawdefallgw.xCSP)+ (rawdefallgw.apppoint)\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "      id                     team pos     name  cost  selected_by_percent  \\\n",
              "0      1                  Arsenal   F  Balogun   4.4                  0.3   \n",
              "1      8                  Arsenal   F  G.Jesus   8.0                  3.5   \n",
              "2     13                  Arsenal   F  Nketiah   5.5                  5.2   \n",
              "3     39              Aston Villa   F    Davis   4.9                  0.1   \n",
              "4     44              Aston Villa   F    Duran   5.0                  0.3   \n",
              "..   ...                      ...  ..      ...   ...                  ...   \n",
              "720  647                 West Ham   G    Anang   4.0                  0.1   \n",
              "721  546  Wolverhampton Wanderers   G  Bentley   4.0                  0.4   \n",
              "722  564  Wolverhampton Wanderers   G     King   4.0                  0.8   \n",
              "723  569  Wolverhampton Wanderers   G  José Sá   5.0                  1.5   \n",
              "724  571  Wolverhampton Wanderers   G   Šarkić   4.0                  0.4   \n",
              "\n",
              "     goals_scored  assists  bps  ict_index  points  points_per_game  minutes  \\\n",
              "0               0        0    0        0.0       0              0.0        0   \n",
              "1               1        1   45       25.4      16              2.7      295   \n",
              "2               2        2   82       31.3      30              3.8      567   \n",
              "3               0        0    0        0.0       0              0.0        0   \n",
              "4               2        0   55       13.7      15              2.5       68   \n",
              "..            ...      ...  ...        ...     ...              ...      ...   \n",
              "720             0        0    0        0.0       0              0.0        0   \n",
              "721             0        0    0        0.0       0              0.0        0   \n",
              "722             0        0    0        0.0       0              0.0        0   \n",
              "723             0        0  161       27.5      29              3.6      720   \n",
              "724             0        0    0        0.0       0              0.0        0   \n",
              "\n",
              "     home_adjustment  xPallgw  xCSP  \n",
              "0           1.166179  2.00000   NaN  \n",
              "1           1.166179  2.83250   NaN  \n",
              "2           1.166179  3.09000   NaN  \n",
              "3           1.101978  2.00000   NaN  \n",
              "4           1.101978  2.36875   NaN  \n",
              "..               ...      ...   ...  \n",
              "720         0.988306 -2.15000 -4.15  \n",
              "721         0.820717 -1.45000 -3.45  \n",
              "722         0.820717 -1.45000 -3.45  \n",
              "723         0.820717 -1.45000 -3.45  \n",
              "724         0.820717 -1.45000 -3.45  \n",
              "\n",
              "[725 rows x 16 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-efaf2926-ba74-4c58-8313-551bc4d91567\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>team</th>\n",
              "      <th>pos</th>\n",
              "      <th>name</th>\n",
              "      <th>cost</th>\n",
              "      <th>selected_by_percent</th>\n",
              "      <th>goals_scored</th>\n",
              "      <th>assists</th>\n",
              "      <th>bps</th>\n",
              "      <th>ict_index</th>\n",
              "      <th>points</th>\n",
              "      <th>points_per_game</th>\n",
              "      <th>minutes</th>\n",
              "      <th>home_adjustment</th>\n",
              "      <th>xPallgw</th>\n",
              "      <th>xCSP</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>1</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>F</td>\n",
              "      <td>Balogun</td>\n",
              "      <td>4.4</td>\n",
              "      <td>0.3</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>1.166179</td>\n",
              "      <td>2.00000</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>8</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>F</td>\n",
              "      <td>G.Jesus</td>\n",
              "      <td>8.0</td>\n",
              "      <td>3.5</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>45</td>\n",
              "      <td>25.4</td>\n",
              "      <td>16</td>\n",
              "      <td>2.7</td>\n",
              "      <td>295</td>\n",
              "      <td>1.166179</td>\n",
              "      <td>2.83250</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>13</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>F</td>\n",
              "      <td>Nketiah</td>\n",
              "      <td>5.5</td>\n",
              "      <td>5.2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>82</td>\n",
              "      <td>31.3</td>\n",
              "      <td>30</td>\n",
              "      <td>3.8</td>\n",
              "      <td>567</td>\n",
              "      <td>1.166179</td>\n",
              "      <td>3.09000</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>39</td>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>F</td>\n",
              "      <td>Davis</td>\n",
              "      <td>4.9</td>\n",
              "      <td>0.1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>1.101978</td>\n",
              "      <td>2.00000</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>44</td>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>F</td>\n",
              "      <td>Duran</td>\n",
              "      <td>5.0</td>\n",
              "      <td>0.3</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>55</td>\n",
              "      <td>13.7</td>\n",
              "      <td>15</td>\n",
              "      <td>2.5</td>\n",
              "      <td>68</td>\n",
              "      <td>1.101978</td>\n",
              "      <td>2.36875</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>720</th>\n",
              "      <td>647</td>\n",
              "      <td>West Ham</td>\n",
              "      <td>G</td>\n",
              "      <td>Anang</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.988306</td>\n",
              "      <td>-2.15000</td>\n",
              "      <td>-4.15</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>721</th>\n",
              "      <td>546</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>G</td>\n",
              "      <td>Bentley</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.4</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.820717</td>\n",
              "      <td>-1.45000</td>\n",
              "      <td>-3.45</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>722</th>\n",
              "      <td>564</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>G</td>\n",
              "      <td>King</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.8</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.820717</td>\n",
              "      <td>-1.45000</td>\n",
              "      <td>-3.45</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>723</th>\n",
              "      <td>569</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>G</td>\n",
              "      <td>José Sá</td>\n",
              "      <td>5.0</td>\n",
              "      <td>1.5</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>161</td>\n",
              "      <td>27.5</td>\n",
              "      <td>29</td>\n",
              "      <td>3.6</td>\n",
              "      <td>720</td>\n",
              "      <td>0.820717</td>\n",
              "      <td>-1.45000</td>\n",
              "      <td>-3.45</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>724</th>\n",
              "      <td>571</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>G</td>\n",
              "      <td>Šarkić</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.4</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.820717</td>\n",
              "      <td>-1.45000</td>\n",
              "      <td>-3.45</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>725 rows × 16 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-efaf2926-ba74-4c58-8313-551bc4d91567')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-efaf2926-ba74-4c58-8313-551bc4d91567 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-efaf2926-ba74-4c58-8313-551bc4d91567');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-4cb19374-8ada-457a-939d-3f7b96e48d53\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-4cb19374-8ada-457a-939d-3f7b96e48d53')\"\n",
              "            title=\"Suggest charts.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-4cb19374-8ada-457a-939d-3f7b96e48d53 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 25
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "rawmdallgw"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 424
        },
        "id": "ZtNrmQMhefCc",
        "outputId": "4dc4d6cd-03f1-475c-c3c1-63e5506fbfcf"
      },
      "execution_count": 26,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "      id                     team pos             name  cost  \\\n",
              "2      3                  Arsenal   M         M.Elneny   4.4   \n",
              "3      4                  Arsenal   M     Fábio Vieira   5.4   \n",
              "5      6                  Arsenal   M          Havertz   7.1   \n",
              "7      9                  Arsenal   M         Jorginho   5.4   \n",
              "9     11                  Arsenal   M       Marquinhos   4.5   \n",
              "..   ...                      ...  ..              ...   ...   \n",
              "712  568  Wolverhampton Wanderers   M          Podence   5.3   \n",
              "714  570  Wolverhampton Wanderers   M          Sarabia   4.9   \n",
              "718  574  Wolverhampton Wanderers   M  Boubacar Traore   4.4   \n",
              "722  698  Wolverhampton Wanderers   M         González   5.0   \n",
              "724  715  Wolverhampton Wanderers   M       Bellegarde   5.0   \n",
              "\n",
              "     selected_by_percent  goals_scored  assists  bps  ict_index  points  \\\n",
              "2                    0.1             0        0    0        0.0       0   \n",
              "3                    0.1             0        3   45       15.9      16   \n",
              "5                    1.7             1        1   50       27.6      19   \n",
              "7                    0.2             0        0   23        3.9       7   \n",
              "9                    0.1             0        0    0        0.0       0   \n",
              "..                   ...           ...      ...  ...        ...     ...   \n",
              "712                  0.1             0        0    0        0.0       0   \n",
              "714                  0.1             0        1   33       19.1       9   \n",
              "718                  0.5             0        0   12        3.1       5   \n",
              "722                  0.0             0        0    0        0.0       0   \n",
              "724                  0.0             0        0    0        3.2       0   \n",
              "\n",
              "     points_per_game  minutes  home_adjustment  xPallgw  \n",
              "2                0.0        0         1.166179  2.00000  \n",
              "3                3.2      185         1.166179  2.37625  \n",
              "5                2.4      461         1.166179  3.18625  \n",
              "7                1.2      146         1.166179  2.03750  \n",
              "9                0.0        0         1.166179  2.00000  \n",
              "..               ...      ...              ...      ...  \n",
              "712              0.0        0         0.820717  2.00000  \n",
              "714              2.2      172         0.820717  2.50750  \n",
              "718              1.0       91         0.820717  2.00750  \n",
              "722              0.0        0         0.820717  2.00000  \n",
              "724              0.0      114         0.820717  2.03250  \n",
              "\n",
              "[311 rows x 15 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-f0f12af6-61d4-47b0-820c-8ae8a408c292\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>team</th>\n",
              "      <th>pos</th>\n",
              "      <th>name</th>\n",
              "      <th>cost</th>\n",
              "      <th>selected_by_percent</th>\n",
              "      <th>goals_scored</th>\n",
              "      <th>assists</th>\n",
              "      <th>bps</th>\n",
              "      <th>ict_index</th>\n",
              "      <th>points</th>\n",
              "      <th>points_per_game</th>\n",
              "      <th>minutes</th>\n",
              "      <th>home_adjustment</th>\n",
              "      <th>xPallgw</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>3</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>M</td>\n",
              "      <td>M.Elneny</td>\n",
              "      <td>4.4</td>\n",
              "      <td>0.1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>1.166179</td>\n",
              "      <td>2.00000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>4</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>M</td>\n",
              "      <td>Fábio Vieira</td>\n",
              "      <td>5.4</td>\n",
              "      <td>0.1</td>\n",
              "      <td>0</td>\n",
              "      <td>3</td>\n",
              "      <td>45</td>\n",
              "      <td>15.9</td>\n",
              "      <td>16</td>\n",
              "      <td>3.2</td>\n",
              "      <td>185</td>\n",
              "      <td>1.166179</td>\n",
              "      <td>2.37625</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>6</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>M</td>\n",
              "      <td>Havertz</td>\n",
              "      <td>7.1</td>\n",
              "      <td>1.7</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>50</td>\n",
              "      <td>27.6</td>\n",
              "      <td>19</td>\n",
              "      <td>2.4</td>\n",
              "      <td>461</td>\n",
              "      <td>1.166179</td>\n",
              "      <td>3.18625</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>9</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>M</td>\n",
              "      <td>Jorginho</td>\n",
              "      <td>5.4</td>\n",
              "      <td>0.2</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>23</td>\n",
              "      <td>3.9</td>\n",
              "      <td>7</td>\n",
              "      <td>1.2</td>\n",
              "      <td>146</td>\n",
              "      <td>1.166179</td>\n",
              "      <td>2.03750</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>11</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>M</td>\n",
              "      <td>Marquinhos</td>\n",
              "      <td>4.5</td>\n",
              "      <td>0.1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>1.166179</td>\n",
              "      <td>2.00000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>712</th>\n",
              "      <td>568</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>M</td>\n",
              "      <td>Podence</td>\n",
              "      <td>5.3</td>\n",
              "      <td>0.1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.820717</td>\n",
              "      <td>2.00000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>714</th>\n",
              "      <td>570</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>M</td>\n",
              "      <td>Sarabia</td>\n",
              "      <td>4.9</td>\n",
              "      <td>0.1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>33</td>\n",
              "      <td>19.1</td>\n",
              "      <td>9</td>\n",
              "      <td>2.2</td>\n",
              "      <td>172</td>\n",
              "      <td>0.820717</td>\n",
              "      <td>2.50750</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>718</th>\n",
              "      <td>574</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>M</td>\n",
              "      <td>Boubacar Traore</td>\n",
              "      <td>4.4</td>\n",
              "      <td>0.5</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>12</td>\n",
              "      <td>3.1</td>\n",
              "      <td>5</td>\n",
              "      <td>1.0</td>\n",
              "      <td>91</td>\n",
              "      <td>0.820717</td>\n",
              "      <td>2.00750</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>722</th>\n",
              "      <td>698</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>M</td>\n",
              "      <td>González</td>\n",
              "      <td>5.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.820717</td>\n",
              "      <td>2.00000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>724</th>\n",
              "      <td>715</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>M</td>\n",
              "      <td>Bellegarde</td>\n",
              "      <td>5.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>3.2</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>114</td>\n",
              "      <td>0.820717</td>\n",
              "      <td>2.03250</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>311 rows × 15 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-f0f12af6-61d4-47b0-820c-8ae8a408c292')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-f0f12af6-61d4-47b0-820c-8ae8a408c292 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-f0f12af6-61d4-47b0-820c-8ae8a408c292');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-740a4054-b3a8-43f2-af73-9356ac193fa6\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-740a4054-b3a8-43f2-af73-9356ac193fa6')\"\n",
              "            title=\"Suggest charts.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-740a4054-b3a8-43f2-af73-9356ac193fa6 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 26
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "gw2blanks = [['Burnley', 0], ['Luton Town', 0]]\n",
        "\n",
        "# Create the pandas DataFrame\n",
        "blanks2 = pd.DataFrame(gw2blanks, columns=['team', 'gw2adjustment'])\n",
        "blanks2"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 112
        },
        "id": "xkGffHD0iXWI",
        "outputId": "448beb78-13d9-4758-f157-ceda2edf839f"
      },
      "execution_count": 27,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "         team  gw2adjustment\n",
              "0     Burnley              0\n",
              "1  Luton Town              0"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-e5fe21a6-9ada-4a7f-98b3-59ded8005d34\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>team</th>\n",
              "      <th>gw2adjustment</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>Burnley</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Luton Town</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-e5fe21a6-9ada-4a7f-98b3-59ded8005d34')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-e5fe21a6-9ada-4a7f-98b3-59ded8005d34 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-e5fe21a6-9ada-4a7f-98b3-59ded8005d34');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-347e4456-dcd0-4291-9752-f0bb28c11288\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-347e4456-dcd0-4291-9752-f0bb28c11288')\"\n",
              "            title=\"Suggest charts.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-347e4456-dcd0-4291-9752-f0bb28c11288 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 27
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#gw2adjustments = pd.concat([gw2adjustments, blanks2])\n",
        "#gw2adjustments = gw2adjustments.reset_index(drop=True)\n",
        "#gw2adjustments"
      ],
      "metadata": {
        "id": "JNr3eV5Rir58"
      },
      "execution_count": 28,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "##gw3blanks = [['Newcastle United', 0], ['Manchester United', 0], ['Brentford', 0], ['Brighton', 0]]\n",
        "\n",
        "# Create the pandas DataFrame\n",
        "##blanks = pd.DataFrame(gw3blanks, columns=['team', 'gw3adjustment'])\n",
        "##blanks"
      ],
      "metadata": {
        "id": "iCizQgwMD84B"
      },
      "execution_count": 29,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "gw9 = homesawayspi.query('Event==\"9.0\"')\n",
        "pd.options.mode.chained_assignment = None  # default='warn'\n",
        "PLSPI = spi.query('league==\"Barclays Premier League\"')\n",
        "PLSPI['League Average']  = PLSPI[\"spi\"].mean()\n",
        "laverage = PLSPI[\"spi\"].mean()\n",
        "PLSPI['League Average'].astype(int)\n",
        "gw9['League_Average']  = laverage\n",
        "gw9.rename(columns = {'Home SPI':'HomeSPI', 'Away SPI':'AwaySPI'}, inplace = True)\n",
        "gw9['home_difference'] = gw9.HomeSPI - gw9.League_Average\n",
        "gw9['away_difference'] = gw9.AwaySPI - gw9.League_Average\n",
        "gw9['home_adjustment'] = (gw9.home_difference - gw9.away_difference + gw9.League_Average)/gw9.League_Average\n",
        "gw9['away_adjustment'] = (gw9.away_difference - gw9.home_difference+ gw9.League_Average)/gw9.League_Average\n",
        "gw9adjustments = gw9[['team_h', 'home_adjustment']].append(gw9[['team_a','away_adjustment']].set_axis(['team_h', 'home_adjustment'], axis=1)).reset_index(drop=True)\n",
        "gw9adjustments.rename(columns = {'team_h':'team'}, inplace = True)\n",
        "gw9adjustments.rename(columns = {'home_adjustment':'gw9adjustment'}, inplace = True)\n",
        "gw9adjustments"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 711
        },
        "id": "pzyah3Z-kgct",
        "outputId": "58279f79-1192-4843-a59d-16d96c9cfdc0"
      },
      "execution_count": 30,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "<ipython-input-30-5b7600c0bba0>:13: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  gw9adjustments = gw9[['team_h', 'home_adjustment']].append(gw9[['team_a','away_adjustment']].set_axis(['team_h', 'home_adjustment'], axis=1)).reset_index(drop=True)\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                       team  gw9adjustment\n",
              "0                 Liverpool       1.282095\n",
              "1               Bournemouth       1.007226\n",
              "2                 Brentford       1.197328\n",
              "3           Manchester City       1.154527\n",
              "4          Newcastle United       1.142298\n",
              "5         Nottingham Forest       1.009033\n",
              "6                   Chelsea       0.886884\n",
              "7          Sheffield United       0.687194\n",
              "8               Aston Villa       1.113672\n",
              "9                 Tottenham       1.054474\n",
              "10                  Everton       0.717905\n",
              "11  Wolverhampton Wanderers       0.992774\n",
              "12                  Burnley       0.802672\n",
              "13                 Brighton       0.845473\n",
              "14           Crystal Palace       0.857702\n",
              "15               Luton Town       0.990967\n",
              "16                  Arsenal       1.113116\n",
              "17        Manchester United       1.312806\n",
              "18                 West Ham       0.886328\n",
              "19                   Fulham       0.945526"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-7690b83d-e8ca-4d88-b72e-0788437d29ee\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>team</th>\n",
              "      <th>gw9adjustment</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>Liverpool</td>\n",
              "      <td>1.282095</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Bournemouth</td>\n",
              "      <td>1.007226</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>Brentford</td>\n",
              "      <td>1.197328</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>Manchester City</td>\n",
              "      <td>1.154527</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>Newcastle United</td>\n",
              "      <td>1.142298</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>Nottingham Forest</td>\n",
              "      <td>1.009033</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>Chelsea</td>\n",
              "      <td>0.886884</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>Sheffield United</td>\n",
              "      <td>0.687194</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>1.113672</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>Tottenham</td>\n",
              "      <td>1.054474</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10</th>\n",
              "      <td>Everton</td>\n",
              "      <td>0.717905</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>11</th>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>0.992774</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>12</th>\n",
              "      <td>Burnley</td>\n",
              "      <td>0.802672</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>13</th>\n",
              "      <td>Brighton</td>\n",
              "      <td>0.845473</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>14</th>\n",
              "      <td>Crystal Palace</td>\n",
              "      <td>0.857702</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>15</th>\n",
              "      <td>Luton Town</td>\n",
              "      <td>0.990967</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>16</th>\n",
              "      <td>Arsenal</td>\n",
              "      <td>1.113116</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>17</th>\n",
              "      <td>Manchester United</td>\n",
              "      <td>1.312806</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>18</th>\n",
              "      <td>West Ham</td>\n",
              "      <td>0.886328</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>19</th>\n",
              "      <td>Fulham</td>\n",
              "      <td>0.945526</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-7690b83d-e8ca-4d88-b72e-0788437d29ee')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-7690b83d-e8ca-4d88-b72e-0788437d29ee button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-7690b83d-e8ca-4d88-b72e-0788437d29ee');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-2d8c2824-b274-4fb5-a3de-7f3ca1aac9cc\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-2d8c2824-b274-4fb5-a3de-7f3ca1aac9cc')\"\n",
              "            title=\"Suggest charts.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-2d8c2824-b274-4fb5-a3de-7f3ca1aac9cc button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 30
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "gw10 = homesawayspi.query('Event==\"10.0\"')\n",
        "pd.options.mode.chained_assignment = None  # default='warn'\n",
        "PLSPI = spi.query('league==\"Barclays Premier League\"')\n",
        "PLSPI['League Average']  = PLSPI[\"spi\"].mean()\n",
        "laverage = PLSPI[\"spi\"].mean()\n",
        "PLSPI['League Average'].astype(int)\n",
        "gw10['League_Average']  = laverage\n",
        "gw10.rename(columns = {'Home SPI':'HomeSPI', 'Away SPI':'AwaySPI'}, inplace = True)\n",
        "gw10['home_difference'] = gw10.HomeSPI - gw10.League_Average\n",
        "gw10['away_difference'] = gw10.AwaySPI - gw10.League_Average\n",
        "gw10['home_adjustment'] = (gw10.home_difference - gw10.away_difference + gw10.League_Average)/gw10.League_Average\n",
        "gw10['away_adjustment'] = (gw10.away_difference - gw10.home_difference+ gw10.League_Average)/gw10.League_Average\n",
        "gw10adjustments = gw10[['team_h', 'home_adjustment']].append(gw10[['team_a','away_adjustment']].set_axis(['team_h', 'home_adjustment'], axis=1)).reset_index(drop=True)\n",
        "gw10adjustments.rename(columns = {'team_h':'team'}, inplace = True)\n",
        "gw10adjustments.rename(columns = {'home_adjustment':'gw10adjustment'}, inplace = True)\n",
        "gw10adjustments"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 711
        },
        "id": "7uE1H7R4Gems",
        "outputId": "5b56e549-6928-4eeb-8a67-6fe7bb993f28"
      },
      "execution_count": 31,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "<ipython-input-31-6a37dd411c1c>:13: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  gw10adjustments = gw10[['team_h', 'home_adjustment']].append(gw10[['team_a','away_adjustment']].set_axis(['team_h', 'home_adjustment'], axis=1)).reset_index(drop=True)\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                       team  gw10adjustment\n",
              "0            Crystal Palace        1.018343\n",
              "1                   Chelsea        0.981101\n",
              "2                   Arsenal        1.380064\n",
              "3               Bournemouth        0.953308\n",
              "4   Wolverhampton Wanderers        0.657595\n",
              "5                  West Ham        1.104083\n",
              "6               Aston Villa        1.331010\n",
              "7                  Brighton        1.175927\n",
              "8                 Liverpool        1.386318\n",
              "9         Manchester United        0.820460\n",
              "10                Tottenham        0.981657\n",
              "11                Brentford        1.018899\n",
              "12         Sheffield United        0.619936\n",
              "13                  Burnley        1.046692\n",
              "14         Newcastle United        1.342405\n",
              "15                  Everton        0.895917\n",
              "16               Luton Town        0.668990\n",
              "17                   Fulham        0.824073\n",
              "18        Nottingham Forest        0.613682\n",
              "19          Manchester City        1.179540"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-89117b04-bc76-468c-b632-793da7c7604d\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>team</th>\n",
              "      <th>gw10adjustment</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>Crystal Palace</td>\n",
              "      <td>1.018343</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Chelsea</td>\n",
              "      <td>0.981101</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>Arsenal</td>\n",
              "      <td>1.380064</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>Bournemouth</td>\n",
              "      <td>0.953308</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>0.657595</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>West Ham</td>\n",
              "      <td>1.104083</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>1.331010</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>Brighton</td>\n",
              "      <td>1.175927</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>Liverpool</td>\n",
              "      <td>1.386318</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>Manchester United</td>\n",
              "      <td>0.820460</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10</th>\n",
              "      <td>Tottenham</td>\n",
              "      <td>0.981657</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>11</th>\n",
              "      <td>Brentford</td>\n",
              "      <td>1.018899</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>12</th>\n",
              "      <td>Sheffield United</td>\n",
              "      <td>0.619936</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>13</th>\n",
              "      <td>Burnley</td>\n",
              "      <td>1.046692</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>14</th>\n",
              "      <td>Newcastle United</td>\n",
              "      <td>1.342405</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>15</th>\n",
              "      <td>Everton</td>\n",
              "      <td>0.895917</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>16</th>\n",
              "      <td>Luton Town</td>\n",
              "      <td>0.668990</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>17</th>\n",
              "      <td>Fulham</td>\n",
              "      <td>0.824073</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>18</th>\n",
              "      <td>Nottingham Forest</td>\n",
              "      <td>0.613682</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>19</th>\n",
              "      <td>Manchester City</td>\n",
              "      <td>1.179540</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-89117b04-bc76-468c-b632-793da7c7604d')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-89117b04-bc76-468c-b632-793da7c7604d button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-89117b04-bc76-468c-b632-793da7c7604d');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-7629edb1-08c8-40b4-a35d-3c2826d25a31\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-7629edb1-08c8-40b4-a35d-3c2826d25a31')\"\n",
              "            title=\"Suggest charts.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-7629edb1-08c8-40b4-a35d-3c2826d25a31 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 31
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#gw5blanks = [['Chelsea', 0], ['Manchester United', 0], ['Manchester City', 0], ['Brighton', 0]]\n",
        "\n",
        "# Create the pandas DataFrame\n",
        "#blanks32 = pd.DataFrame(gw5blanks, columns=['team', 'gw5adjustment'])\n",
        "#blanks32"
      ],
      "metadata": {
        "id": "p00QYlZ7UbAu"
      },
      "execution_count": 32,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "#gw5adjustments = pd.concat([gw5adjustments, blanks32])\n",
        "#gw5adjustments = gw5adjustments.reset_index(drop=True)\n",
        "#gw5adjustments"
      ],
      "metadata": {
        "id": "xh_AhxKJU0VW"
      },
      "execution_count": 33,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "gw11= homesawayspi.query('Event==\"11.0\"')\n",
        "pd.options.mode.chained_assignment = None  # default='warn'\n",
        "PLSPI = spi.query('league==\"Barclays Premier League\"')\n",
        "PLSPI['League Average']  = PLSPI[\"spi\"].mean()\n",
        "laverage = PLSPI[\"spi\"].mean()\n",
        "PLSPI['League Average'].astype(int)\n",
        "gw11['League_Average']  = laverage\n",
        "gw11.rename(columns = {'Home SPI':'HomeSPI', 'Away SPI':'AwaySPI'}, inplace = True)\n",
        "gw11['home_difference'] = gw11.HomeSPI - gw11.League_Average\n",
        "gw11['away_difference'] = gw11.AwaySPI - gw11.League_Average\n",
        "gw11['home_adjustment'] = (gw11.home_difference - gw11.away_difference + gw11.League_Average)/gw11.League_Average\n",
        "gw11['away_adjustment'] = (gw11.away_difference - gw11.home_difference+ gw11.League_Average)/gw11.League_Average\n",
        "gw11adjustments = gw11[['team_h', 'home_adjustment']].append(gw11[['team_a','away_adjustment']].set_axis(['team_h', 'home_adjustment'], axis=1)).reset_index(drop=True)\n",
        "gw11adjustments.rename(columns = {'team_h':'team'}, inplace = True)\n",
        "gw11adjustments.rename(columns = {'home_adjustment':'gw11adjustment'}, inplace = True)\n",
        "gw11adjustments"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 711
        },
        "id": "OPB6Pz8sGZNe",
        "outputId": "47e09b7f-de03-47f2-dd22-8590ce92f006"
      },
      "execution_count": 34,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "<ipython-input-34-2c677dd1fce9>:13: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  gw11adjustments = gw11[['team_h', 'home_adjustment']].append(gw11[['team_a','away_adjustment']].set_axis(['team_h', 'home_adjustment'], axis=1)).reset_index(drop=True)\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                       team  gw11adjustment\n",
              "0                    Fulham        0.849086\n",
              "1                 Brentford        1.083656\n",
              "2                   Burnley        0.853811\n",
              "3                   Everton        0.760288\n",
              "4           Manchester City        1.450519\n",
              "5          Sheffield United        0.965398\n",
              "6          Newcastle United        0.996943\n",
              "7         Nottingham Forest        0.678022\n",
              "8                Luton Town        0.604650\n",
              "9                 Tottenham        0.949417\n",
              "10        Manchester United        1.150914\n",
              "11                 West Ham        0.916344\n",
              "12           Crystal Palace        1.146189\n",
              "13                 Brighton        1.239712\n",
              "14              Bournemouth        0.549481\n",
              "15  Wolverhampton Wanderers        1.034602\n",
              "16                  Arsenal        1.003057\n",
              "17              Aston Villa        1.321978\n",
              "18                Liverpool        1.395350\n",
              "19                  Chelsea        1.050583"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-5b5bacfe-fa5d-4f54-901d-1966024830b3\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>team</th>\n",
              "      <th>gw11adjustment</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>Fulham</td>\n",
              "      <td>0.849086</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Brentford</td>\n",
              "      <td>1.083656</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>Burnley</td>\n",
              "      <td>0.853811</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>Everton</td>\n",
              "      <td>0.760288</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>Manchester City</td>\n",
              "      <td>1.450519</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>Sheffield United</td>\n",
              "      <td>0.965398</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>Newcastle United</td>\n",
              "      <td>0.996943</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>Nottingham Forest</td>\n",
              "      <td>0.678022</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>Luton Town</td>\n",
              "      <td>0.604650</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>Tottenham</td>\n",
              "      <td>0.949417</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10</th>\n",
              "      <td>Manchester United</td>\n",
              "      <td>1.150914</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>11</th>\n",
              "      <td>West Ham</td>\n",
              "      <td>0.916344</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>12</th>\n",
              "      <td>Crystal Palace</td>\n",
              "      <td>1.146189</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>13</th>\n",
              "      <td>Brighton</td>\n",
              "      <td>1.239712</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>14</th>\n",
              "      <td>Bournemouth</td>\n",
              "      <td>0.549481</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>15</th>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>1.034602</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>16</th>\n",
              "      <td>Arsenal</td>\n",
              "      <td>1.003057</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>17</th>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>1.321978</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>18</th>\n",
              "      <td>Liverpool</td>\n",
              "      <td>1.395350</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>19</th>\n",
              "      <td>Chelsea</td>\n",
              "      <td>1.050583</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-5b5bacfe-fa5d-4f54-901d-1966024830b3')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-5b5bacfe-fa5d-4f54-901d-1966024830b3 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-5b5bacfe-fa5d-4f54-901d-1966024830b3');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-be6c4954-3300-4f0f-a5e8-cc23d8379354\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-be6c4954-3300-4f0f-a5e8-cc23d8379354')\"\n",
              "            title=\"Suggest charts.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-be6c4954-3300-4f0f-a5e8-cc23d8379354 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 34
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "gw12= homesawayspi.query('Event==\"12.0\"')\n",
        "pd.options.mode.chained_assignment = None  # default='warn'\n",
        "PLSPI = spi.query('league==\"Barclays Premier League\"')\n",
        "PLSPI['League Average']  = PLSPI[\"spi\"].mean()\n",
        "laverage = PLSPI[\"spi\"].mean()\n",
        "PLSPI['League Average'].astype(int)\n",
        "gw12['League_Average']  = laverage\n",
        "gw12.rename(columns = {'Home SPI':'HomeSPI', 'Away SPI':'AwaySPI'}, inplace = True)\n",
        "gw12['home_difference'] = gw12.HomeSPI - gw12.League_Average\n",
        "gw12['away_difference'] = gw12.AwaySPI - gw12.League_Average\n",
        "gw12['home_adjustment'] = (gw12.home_difference - gw12.away_difference + gw12.League_Average)/gw12.League_Average\n",
        "gw12['away_adjustment'] = (gw12.away_difference - gw12.home_difference+ gw12.League_Average)/gw12.League_Average\n",
        "gw12adjustments = gw12[['team_h', 'home_adjustment']].append(gw12[['team_a','away_adjustment']].set_axis(['team_h', 'home_adjustment'], axis=1)).reset_index(drop=True)\n",
        "gw12adjustments.rename(columns = {'team_h':'team'}, inplace = True)\n",
        "gw12adjustments.rename(columns = {'home_adjustment':'gw12adjustment'}, inplace = True)\n",
        "gw12adjustments = gw12adjustments.groupby('team', as_index=False)['gw12adjustment'].aggregate('sum')\n",
        "gw12adjustments"
      ],
      "metadata": {
        "id": "Ns7V93Gobs3z",
        "outputId": "63d53d97-8064-4b1c-9b0b-36b4e2915243",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 711
        }
      },
      "execution_count": 35,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "<ipython-input-35-5536e8b69ad9>:13: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  gw12adjustments = gw12[['team_h', 'home_adjustment']].append(gw12[['team_a','away_adjustment']].set_axis(['team_h', 'home_adjustment'], axis=1)).reset_index(drop=True)\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                       team  gw12adjustment\n",
              "0                   Arsenal        1.291545\n",
              "1               Aston Villa        1.153971\n",
              "2               Bournemouth        0.664821\n",
              "3                 Brentford        0.905644\n",
              "4                  Brighton        1.337820\n",
              "5                   Burnley        0.708455\n",
              "6                   Chelsea        0.774602\n",
              "7            Crystal Palace        1.136601\n",
              "8                   Everton        0.863399\n",
              "9                    Fulham        0.846029\n",
              "10                Liverpool        1.094356\n",
              "11               Luton Town        0.672047\n",
              "12          Manchester City        1.225398\n",
              "13        Manchester United        1.327953\n",
              "14         Newcastle United        1.335179\n",
              "15        Nottingham Forest        0.791694\n",
              "16         Sheffield United        0.662180\n",
              "17                Tottenham        1.181764\n",
              "18                 West Ham        1.208306\n",
              "19  Wolverhampton Wanderers        0.818236"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-cc85b72b-ff7d-48e3-bb4a-fc6502d3e8ab\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>team</th>\n",
              "      <th>gw12adjustment</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>Arsenal</td>\n",
              "      <td>1.291545</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>1.153971</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>Bournemouth</td>\n",
              "      <td>0.664821</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>Brentford</td>\n",
              "      <td>0.905644</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>Brighton</td>\n",
              "      <td>1.337820</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>Burnley</td>\n",
              "      <td>0.708455</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>Chelsea</td>\n",
              "      <td>0.774602</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>Crystal Palace</td>\n",
              "      <td>1.136601</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>Everton</td>\n",
              "      <td>0.863399</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>Fulham</td>\n",
              "      <td>0.846029</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10</th>\n",
              "      <td>Liverpool</td>\n",
              "      <td>1.094356</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>11</th>\n",
              "      <td>Luton Town</td>\n",
              "      <td>0.672047</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>12</th>\n",
              "      <td>Manchester City</td>\n",
              "      <td>1.225398</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>13</th>\n",
              "      <td>Manchester United</td>\n",
              "      <td>1.327953</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>14</th>\n",
              "      <td>Newcastle United</td>\n",
              "      <td>1.335179</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>15</th>\n",
              "      <td>Nottingham Forest</td>\n",
              "      <td>0.791694</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>16</th>\n",
              "      <td>Sheffield United</td>\n",
              "      <td>0.662180</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>17</th>\n",
              "      <td>Tottenham</td>\n",
              "      <td>1.181764</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>18</th>\n",
              "      <td>West Ham</td>\n",
              "      <td>1.208306</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>19</th>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>0.818236</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-cc85b72b-ff7d-48e3-bb4a-fc6502d3e8ab')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-cc85b72b-ff7d-48e3-bb4a-fc6502d3e8ab button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-cc85b72b-ff7d-48e3-bb4a-fc6502d3e8ab');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-2cbbacae-9f14-4416-8fc4-ccd9593de573\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-2cbbacae-9f14-4416-8fc4-ccd9593de573')\"\n",
              "            title=\"Suggest charts.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-2cbbacae-9f14-4416-8fc4-ccd9593de573 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 35
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "gw13= homesawayspi.query('Event==\"13.0\"')\n",
        "pd.options.mode.chained_assignment = None  # default='warn'\n",
        "PLSPI = spi.query('league==\"Barclays Premier League\"')\n",
        "PLSPI['League Average']  = PLSPI[\"spi\"].mean()\n",
        "laverage = PLSPI[\"spi\"].mean()\n",
        "PLSPI['League Average'].astype(int)\n",
        "gw13['League_Average']  = laverage\n",
        "gw13.rename(columns = {'Home SPI':'HomeSPI', 'Away SPI':'AwaySPI'}, inplace = True)\n",
        "gw13['home_difference'] = gw13.HomeSPI - gw13.League_Average\n",
        "gw13['away_difference'] = gw13.AwaySPI - gw13.League_Average\n",
        "gw13['home_adjustment'] = (gw13.home_difference - gw13.away_difference + gw13.League_Average)/gw13.League_Average\n",
        "gw13['away_adjustment'] = (gw13.away_difference - gw13.home_difference+ gw13.League_Average)/gw13.League_Average\n",
        "gw13adjustments = gw13[['team_h', 'home_adjustment']].append(gw13[['team_a','away_adjustment']].set_axis(['team_h', 'home_adjustment'], axis=1)).reset_index(drop=True)\n",
        "gw13adjustments.rename(columns = {'team_h':'team'}, inplace = True)\n",
        "gw13adjustments.rename(columns = {'home_adjustment':'gw13adjustment'}, inplace = True)\n",
        "gw13adjustments"
      ],
      "metadata": {
        "id": "wlvV4OeQb34Z",
        "outputId": "7c477430-d9e8-4a22-f2bb-df8d4f1abe58",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 711
        }
      },
      "execution_count": 36,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "<ipython-input-36-838c34b652d9>:13: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  gw13adjustments = gw13[['team_h', 'home_adjustment']].append(gw13[['team_a','away_adjustment']].set_axis(['team_h', 'home_adjustment'], axis=1)).reset_index(drop=True)\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                       team  gw13adjustment\n",
              "0                 Brentford        0.905783\n",
              "1                   Burnley        0.886328\n",
              "2                   Everton        0.785302\n",
              "3                    Fulham        1.127290\n",
              "4                Luton Town        0.750144\n",
              "5           Manchester City        1.112143\n",
              "6          Newcastle United        1.110059\n",
              "7         Nottingham Forest        0.656066\n",
              "8          Sheffield United        0.958172\n",
              "9                 Tottenham        0.900502\n",
              "10                  Arsenal        1.094217\n",
              "11                 West Ham        1.113672\n",
              "12        Manchester United        1.214698\n",
              "13  Wolverhampton Wanderers        0.872710\n",
              "14           Crystal Palace        1.249856\n",
              "15                Liverpool        0.887857\n",
              "16                  Chelsea        0.889941\n",
              "17                 Brighton        1.343934\n",
              "18              Bournemouth        1.041828\n",
              "19              Aston Villa        1.099498"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-a16ffa22-f80f-4c04-9186-250980ce836d\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>team</th>\n",
              "      <th>gw13adjustment</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>Brentford</td>\n",
              "      <td>0.905783</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Burnley</td>\n",
              "      <td>0.886328</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>Everton</td>\n",
              "      <td>0.785302</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>Fulham</td>\n",
              "      <td>1.127290</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>Luton Town</td>\n",
              "      <td>0.750144</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>Manchester City</td>\n",
              "      <td>1.112143</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>Newcastle United</td>\n",
              "      <td>1.110059</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>Nottingham Forest</td>\n",
              "      <td>0.656066</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>Sheffield United</td>\n",
              "      <td>0.958172</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>Tottenham</td>\n",
              "      <td>0.900502</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10</th>\n",
              "      <td>Arsenal</td>\n",
              "      <td>1.094217</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>11</th>\n",
              "      <td>West Ham</td>\n",
              "      <td>1.113672</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>12</th>\n",
              "      <td>Manchester United</td>\n",
              "      <td>1.214698</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>13</th>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>0.872710</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>14</th>\n",
              "      <td>Crystal Palace</td>\n",
              "      <td>1.249856</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>15</th>\n",
              "      <td>Liverpool</td>\n",
              "      <td>0.887857</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>16</th>\n",
              "      <td>Chelsea</td>\n",
              "      <td>0.889941</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>17</th>\n",
              "      <td>Brighton</td>\n",
              "      <td>1.343934</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>18</th>\n",
              "      <td>Bournemouth</td>\n",
              "      <td>1.041828</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>19</th>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>1.099498</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-a16ffa22-f80f-4c04-9186-250980ce836d')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-a16ffa22-f80f-4c04-9186-250980ce836d button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-a16ffa22-f80f-4c04-9186-250980ce836d');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-4713fe43-5f3a-4a1c-9deb-471f12812924\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-4713fe43-5f3a-4a1c-9deb-471f12812924')\"\n",
              "            title=\"Suggest charts.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-4713fe43-5f3a-4a1c-9deb-471f12812924 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 36
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "gwadjustments913 = pd.merge(gw9adjustments,gw10adjustments, on ='team')\n",
        "gwadjustments913 = pd.merge(gwadjustments913,gw11adjustments, on ='team')\n",
        "gwadjustments913 = pd.merge(gwadjustments913,gw12adjustments, on ='team')\n",
        "gwadjustments913 = pd.merge(gwadjustments913,gw13adjustments, on ='team')\n",
        "gwadjustments913"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 677
        },
        "id": "P6_WVsnNkztJ",
        "outputId": "bda4f4ad-caf5-4edc-9163-db4c42929f2b"
      },
      "execution_count": 37,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                       team  gw9adjustment  gw10adjustment  gw11adjustment  \\\n",
              "0                 Liverpool       1.282095        1.386318        1.395350   \n",
              "1               Bournemouth       1.007226        0.953308        0.549481   \n",
              "2                 Brentford       1.197328        1.018899        1.083656   \n",
              "3           Manchester City       1.154527        1.179540        1.450519   \n",
              "4          Newcastle United       1.142298        1.342405        0.996943   \n",
              "5         Nottingham Forest       1.009033        0.613682        0.678022   \n",
              "6                   Chelsea       0.886884        0.981101        1.050583   \n",
              "7          Sheffield United       0.687194        0.619936        0.965398   \n",
              "8               Aston Villa       1.113672        1.331010        1.321978   \n",
              "9                 Tottenham       1.054474        0.981657        0.949417   \n",
              "10                  Everton       0.717905        0.895917        0.760288   \n",
              "11  Wolverhampton Wanderers       0.992774        0.657595        1.034602   \n",
              "12                  Burnley       0.802672        1.046692        0.853811   \n",
              "13                 Brighton       0.845473        1.175927        1.239712   \n",
              "14           Crystal Palace       0.857702        1.018343        1.146189   \n",
              "15               Luton Town       0.990967        0.668990        0.604650   \n",
              "16                  Arsenal       1.113116        1.380064        1.003057   \n",
              "17        Manchester United       1.312806        0.820460        1.150914   \n",
              "18                 West Ham       0.886328        1.104083        0.916344   \n",
              "19                   Fulham       0.945526        0.824073        0.849086   \n",
              "\n",
              "    gw12adjustment  gw13adjustment  \n",
              "0         1.094356        0.887857  \n",
              "1         0.664821        1.041828  \n",
              "2         0.905644        0.905783  \n",
              "3         1.225398        1.112143  \n",
              "4         1.335179        1.110059  \n",
              "5         0.791694        0.656066  \n",
              "6         0.774602        0.889941  \n",
              "7         0.662180        0.958172  \n",
              "8         1.153971        1.099498  \n",
              "9         1.181764        0.900502  \n",
              "10        0.863399        0.785302  \n",
              "11        0.818236        0.872710  \n",
              "12        0.708455        0.886328  \n",
              "13        1.337820        1.343934  \n",
              "14        1.136601        1.249856  \n",
              "15        0.672047        0.750144  \n",
              "16        1.291545        1.094217  \n",
              "17        1.327953        1.214698  \n",
              "18        1.208306        1.113672  \n",
              "19        0.846029        1.127290  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-77cbd2c5-7379-43ca-8440-ab5d0fe5baba\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>team</th>\n",
              "      <th>gw9adjustment</th>\n",
              "      <th>gw10adjustment</th>\n",
              "      <th>gw11adjustment</th>\n",
              "      <th>gw12adjustment</th>\n",
              "      <th>gw13adjustment</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>Liverpool</td>\n",
              "      <td>1.282095</td>\n",
              "      <td>1.386318</td>\n",
              "      <td>1.395350</td>\n",
              "      <td>1.094356</td>\n",
              "      <td>0.887857</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Bournemouth</td>\n",
              "      <td>1.007226</td>\n",
              "      <td>0.953308</td>\n",
              "      <td>0.549481</td>\n",
              "      <td>0.664821</td>\n",
              "      <td>1.041828</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>Brentford</td>\n",
              "      <td>1.197328</td>\n",
              "      <td>1.018899</td>\n",
              "      <td>1.083656</td>\n",
              "      <td>0.905644</td>\n",
              "      <td>0.905783</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>Manchester City</td>\n",
              "      <td>1.154527</td>\n",
              "      <td>1.179540</td>\n",
              "      <td>1.450519</td>\n",
              "      <td>1.225398</td>\n",
              "      <td>1.112143</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>Newcastle United</td>\n",
              "      <td>1.142298</td>\n",
              "      <td>1.342405</td>\n",
              "      <td>0.996943</td>\n",
              "      <td>1.335179</td>\n",
              "      <td>1.110059</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>Nottingham Forest</td>\n",
              "      <td>1.009033</td>\n",
              "      <td>0.613682</td>\n",
              "      <td>0.678022</td>\n",
              "      <td>0.791694</td>\n",
              "      <td>0.656066</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>Chelsea</td>\n",
              "      <td>0.886884</td>\n",
              "      <td>0.981101</td>\n",
              "      <td>1.050583</td>\n",
              "      <td>0.774602</td>\n",
              "      <td>0.889941</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>Sheffield United</td>\n",
              "      <td>0.687194</td>\n",
              "      <td>0.619936</td>\n",
              "      <td>0.965398</td>\n",
              "      <td>0.662180</td>\n",
              "      <td>0.958172</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>1.113672</td>\n",
              "      <td>1.331010</td>\n",
              "      <td>1.321978</td>\n",
              "      <td>1.153971</td>\n",
              "      <td>1.099498</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>Tottenham</td>\n",
              "      <td>1.054474</td>\n",
              "      <td>0.981657</td>\n",
              "      <td>0.949417</td>\n",
              "      <td>1.181764</td>\n",
              "      <td>0.900502</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10</th>\n",
              "      <td>Everton</td>\n",
              "      <td>0.717905</td>\n",
              "      <td>0.895917</td>\n",
              "      <td>0.760288</td>\n",
              "      <td>0.863399</td>\n",
              "      <td>0.785302</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>11</th>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>0.992774</td>\n",
              "      <td>0.657595</td>\n",
              "      <td>1.034602</td>\n",
              "      <td>0.818236</td>\n",
              "      <td>0.872710</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>12</th>\n",
              "      <td>Burnley</td>\n",
              "      <td>0.802672</td>\n",
              "      <td>1.046692</td>\n",
              "      <td>0.853811</td>\n",
              "      <td>0.708455</td>\n",
              "      <td>0.886328</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>13</th>\n",
              "      <td>Brighton</td>\n",
              "      <td>0.845473</td>\n",
              "      <td>1.175927</td>\n",
              "      <td>1.239712</td>\n",
              "      <td>1.337820</td>\n",
              "      <td>1.343934</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>14</th>\n",
              "      <td>Crystal Palace</td>\n",
              "      <td>0.857702</td>\n",
              "      <td>1.018343</td>\n",
              "      <td>1.146189</td>\n",
              "      <td>1.136601</td>\n",
              "      <td>1.249856</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>15</th>\n",
              "      <td>Luton Town</td>\n",
              "      <td>0.990967</td>\n",
              "      <td>0.668990</td>\n",
              "      <td>0.604650</td>\n",
              "      <td>0.672047</td>\n",
              "      <td>0.750144</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>16</th>\n",
              "      <td>Arsenal</td>\n",
              "      <td>1.113116</td>\n",
              "      <td>1.380064</td>\n",
              "      <td>1.003057</td>\n",
              "      <td>1.291545</td>\n",
              "      <td>1.094217</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>17</th>\n",
              "      <td>Manchester United</td>\n",
              "      <td>1.312806</td>\n",
              "      <td>0.820460</td>\n",
              "      <td>1.150914</td>\n",
              "      <td>1.327953</td>\n",
              "      <td>1.214698</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>18</th>\n",
              "      <td>West Ham</td>\n",
              "      <td>0.886328</td>\n",
              "      <td>1.104083</td>\n",
              "      <td>0.916344</td>\n",
              "      <td>1.208306</td>\n",
              "      <td>1.113672</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>19</th>\n",
              "      <td>Fulham</td>\n",
              "      <td>0.945526</td>\n",
              "      <td>0.824073</td>\n",
              "      <td>0.849086</td>\n",
              "      <td>0.846029</td>\n",
              "      <td>1.127290</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-77cbd2c5-7379-43ca-8440-ab5d0fe5baba')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-77cbd2c5-7379-43ca-8440-ab5d0fe5baba button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-77cbd2c5-7379-43ca-8440-ab5d0fe5baba');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-10b8c732-1f85-45cd-81ec-1c69e92fc683\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-10b8c732-1f85-45cd-81ec-1c69e92fc683')\"\n",
              "            title=\"Suggest charts.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-10b8c732-1f85-45cd-81ec-1c69e92fc683 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 37
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "rawdfgw228x = pd.merge(rawallplayersallgw,\n",
        "                     gwadjustments913,\n",
        "                     on ='team',\n",
        "                     how ='left')\n",
        "#rawdfgw228x.rename(columns = {'gw3adjustment_y':'gw3adjustment'}, inplace = True)\n",
        "rawdfgw228x = rawdfgw228x.round(1)\n",
        "rawdfgw228x"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 513
        },
        "id": "-b-0jux2PKIX",
        "outputId": "16ea80c4-8d91-44c6-b65d-39b355d9736c"
      },
      "execution_count": 38,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "      id                     team pos     name  cost  selected_by_percent  \\\n",
              "0      1                  Arsenal   F  Balogun   4.4                  0.3   \n",
              "1      8                  Arsenal   F  G.Jesus   8.0                  3.5   \n",
              "2     13                  Arsenal   F  Nketiah   5.5                  5.2   \n",
              "3     39              Aston Villa   F    Davis   4.9                  0.1   \n",
              "4     44              Aston Villa   F    Duran   5.0                  0.3   \n",
              "..   ...                      ...  ..      ...   ...                  ...   \n",
              "720  647                 West Ham   G    Anang   4.0                  0.1   \n",
              "721  546  Wolverhampton Wanderers   G  Bentley   4.0                  0.4   \n",
              "722  564  Wolverhampton Wanderers   G     King   4.0                  0.8   \n",
              "723  569  Wolverhampton Wanderers   G  José Sá   5.0                  1.5   \n",
              "724  571  Wolverhampton Wanderers   G   Šarkić   4.0                  0.4   \n",
              "\n",
              "     goals_scored  assists  bps  ict_index  ...  points_per_game  minutes  \\\n",
              "0               0        0    0        0.0  ...              0.0        0   \n",
              "1               1        1   45       25.4  ...              2.7      295   \n",
              "2               2        2   82       31.3  ...              3.8      567   \n",
              "3               0        0    0        0.0  ...              0.0        0   \n",
              "4               2        0   55       13.7  ...              2.5       68   \n",
              "..            ...      ...  ...        ...  ...              ...      ...   \n",
              "720             0        0    0        0.0  ...              0.0        0   \n",
              "721             0        0    0        0.0  ...              0.0        0   \n",
              "722             0        0    0        0.0  ...              0.0        0   \n",
              "723             0        0  161       27.5  ...              3.6      720   \n",
              "724             0        0    0        0.0  ...              0.0        0   \n",
              "\n",
              "     home_adjustment  xPallgw  xCSP  gw9adjustment  gw10adjustment  \\\n",
              "0                1.2      2.0   NaN            1.1             1.4   \n",
              "1                1.2      2.8   NaN            1.1             1.4   \n",
              "2                1.2      3.1   NaN            1.1             1.4   \n",
              "3                1.1      2.0   NaN            1.1             1.3   \n",
              "4                1.1      2.4   NaN            1.1             1.3   \n",
              "..               ...      ...   ...            ...             ...   \n",
              "720              1.0     -2.2  -4.2            0.9             1.1   \n",
              "721              0.8     -1.5  -3.4            1.0             0.7   \n",
              "722              0.8     -1.5  -3.4            1.0             0.7   \n",
              "723              0.8     -1.5  -3.4            1.0             0.7   \n",
              "724              0.8     -1.5  -3.4            1.0             0.7   \n",
              "\n",
              "     gw11adjustment  gw12adjustment  gw13adjustment  \n",
              "0               1.0             1.3             1.1  \n",
              "1               1.0             1.3             1.1  \n",
              "2               1.0             1.3             1.1  \n",
              "3               1.3             1.2             1.1  \n",
              "4               1.3             1.2             1.1  \n",
              "..              ...             ...             ...  \n",
              "720             0.9             1.2             1.1  \n",
              "721             1.0             0.8             0.9  \n",
              "722             1.0             0.8             0.9  \n",
              "723             1.0             0.8             0.9  \n",
              "724             1.0             0.8             0.9  \n",
              "\n",
              "[725 rows x 21 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-c4d70d71-6102-4ad5-b334-06018d295e7e\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>team</th>\n",
              "      <th>pos</th>\n",
              "      <th>name</th>\n",
              "      <th>cost</th>\n",
              "      <th>selected_by_percent</th>\n",
              "      <th>goals_scored</th>\n",
              "      <th>assists</th>\n",
              "      <th>bps</th>\n",
              "      <th>ict_index</th>\n",
              "      <th>...</th>\n",
              "      <th>points_per_game</th>\n",
              "      <th>minutes</th>\n",
              "      <th>home_adjustment</th>\n",
              "      <th>xPallgw</th>\n",
              "      <th>xCSP</th>\n",
              "      <th>gw9adjustment</th>\n",
              "      <th>gw10adjustment</th>\n",
              "      <th>gw11adjustment</th>\n",
              "      <th>gw12adjustment</th>\n",
              "      <th>gw13adjustment</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>1</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>F</td>\n",
              "      <td>Balogun</td>\n",
              "      <td>4.4</td>\n",
              "      <td>0.3</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>1.2</td>\n",
              "      <td>2.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1.1</td>\n",
              "      <td>1.4</td>\n",
              "      <td>1.0</td>\n",
              "      <td>1.3</td>\n",
              "      <td>1.1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>8</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>F</td>\n",
              "      <td>G.Jesus</td>\n",
              "      <td>8.0</td>\n",
              "      <td>3.5</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>45</td>\n",
              "      <td>25.4</td>\n",
              "      <td>...</td>\n",
              "      <td>2.7</td>\n",
              "      <td>295</td>\n",
              "      <td>1.2</td>\n",
              "      <td>2.8</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1.1</td>\n",
              "      <td>1.4</td>\n",
              "      <td>1.0</td>\n",
              "      <td>1.3</td>\n",
              "      <td>1.1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>13</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>F</td>\n",
              "      <td>Nketiah</td>\n",
              "      <td>5.5</td>\n",
              "      <td>5.2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>82</td>\n",
              "      <td>31.3</td>\n",
              "      <td>...</td>\n",
              "      <td>3.8</td>\n",
              "      <td>567</td>\n",
              "      <td>1.2</td>\n",
              "      <td>3.1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1.1</td>\n",
              "      <td>1.4</td>\n",
              "      <td>1.0</td>\n",
              "      <td>1.3</td>\n",
              "      <td>1.1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>39</td>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>F</td>\n",
              "      <td>Davis</td>\n",
              "      <td>4.9</td>\n",
              "      <td>0.1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>1.1</td>\n",
              "      <td>2.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1.1</td>\n",
              "      <td>1.3</td>\n",
              "      <td>1.3</td>\n",
              "      <td>1.2</td>\n",
              "      <td>1.1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>44</td>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>F</td>\n",
              "      <td>Duran</td>\n",
              "      <td>5.0</td>\n",
              "      <td>0.3</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>55</td>\n",
              "      <td>13.7</td>\n",
              "      <td>...</td>\n",
              "      <td>2.5</td>\n",
              "      <td>68</td>\n",
              "      <td>1.1</td>\n",
              "      <td>2.4</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1.1</td>\n",
              "      <td>1.3</td>\n",
              "      <td>1.3</td>\n",
              "      <td>1.2</td>\n",
              "      <td>1.1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>720</th>\n",
              "      <td>647</td>\n",
              "      <td>West Ham</td>\n",
              "      <td>G</td>\n",
              "      <td>Anang</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>-2.2</td>\n",
              "      <td>-4.2</td>\n",
              "      <td>0.9</td>\n",
              "      <td>1.1</td>\n",
              "      <td>0.9</td>\n",
              "      <td>1.2</td>\n",
              "      <td>1.1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>721</th>\n",
              "      <td>546</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>G</td>\n",
              "      <td>Bentley</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.4</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.8</td>\n",
              "      <td>-1.5</td>\n",
              "      <td>-3.4</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.7</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.8</td>\n",
              "      <td>0.9</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>722</th>\n",
              "      <td>564</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>G</td>\n",
              "      <td>King</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.8</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.8</td>\n",
              "      <td>-1.5</td>\n",
              "      <td>-3.4</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.7</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.8</td>\n",
              "      <td>0.9</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>723</th>\n",
              "      <td>569</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>G</td>\n",
              "      <td>José Sá</td>\n",
              "      <td>5.0</td>\n",
              "      <td>1.5</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>161</td>\n",
              "      <td>27.5</td>\n",
              "      <td>...</td>\n",
              "      <td>3.6</td>\n",
              "      <td>720</td>\n",
              "      <td>0.8</td>\n",
              "      <td>-1.5</td>\n",
              "      <td>-3.4</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.7</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.8</td>\n",
              "      <td>0.9</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>724</th>\n",
              "      <td>571</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>G</td>\n",
              "      <td>Šarkić</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.4</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.8</td>\n",
              "      <td>-1.5</td>\n",
              "      <td>-3.4</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.7</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.8</td>\n",
              "      <td>0.9</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>725 rows × 21 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-c4d70d71-6102-4ad5-b334-06018d295e7e')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-c4d70d71-6102-4ad5-b334-06018d295e7e button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-c4d70d71-6102-4ad5-b334-06018d295e7e');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-8f040a35-257c-42c3-89ba-47d76dd1bc79\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-8f040a35-257c-42c3-89ba-47d76dd1bc79')\"\n",
              "            title=\"Suggest charts.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-8f040a35-257c-42c3-89ba-47d76dd1bc79 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 38
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#gw3adjustments = gw3adjustments.groupby('team', as_index=False)['gw3adjustment'].aggregate('sum')\n",
        "#gw3adjustments"
      ],
      "metadata": {
        "id": "6x3Lj7jPTCVC"
      },
      "execution_count": 40,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "rawdfgw228x['gw9'] = (((rawdfgw228x.xPallgw - 2)*rawdfgw228x.gw9adjustment)+2)\n",
        "rawdfgw228x['gw10'] = (((rawdfgw228x.xPallgw - 2)*rawdfgw228x.gw10adjustment)+2)\n",
        "rawdfgw228x['gw11'] = (((rawdfgw228x.xPallgw - 2)*rawdfgw228x.gw11adjustment)+2)\n",
        "rawdfgw228x['gw12'] = (((rawdfgw228x.xPallgw - 2)*rawdfgw228x.gw12adjustment)+2)\n",
        "rawdfgw228x['gw13'] = (((rawdfgw228x.xPallgw - 2)*rawdfgw228x.gw13adjustment)+2)\n",
        "rawdfgw228x['5GW Total'] = rawdfgw228x.gw9 + rawdfgw228x.gw10 + rawdfgw228x.gw11 + rawdfgw228x.gw12 + rawdfgw228x.gw13\n",
        "rawdfgw228x = rawdfgw228x.drop(columns=[\n",
        "  'gw9adjustment',\n",
        "  'gw10adjustment',\n",
        "  'gw11adjustment',\n",
        "  'gw12adjustment',\n",
        "  'gw13adjustment'\n",
        "  ])\n",
        "rawdfgw228x"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 424
        },
        "id": "Dgw1xB0YUN9D",
        "outputId": "00a1ab36-ada0-47e8-f313-b4b8e4f60f1a"
      },
      "execution_count": 42,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "      id                     team pos     name  cost  selected_by_percent  \\\n",
              "0      1                  Arsenal   F  Balogun   4.4                  0.3   \n",
              "1      8                  Arsenal   F  G.Jesus   8.0                  3.5   \n",
              "2     13                  Arsenal   F  Nketiah   5.5                  5.2   \n",
              "3     39              Aston Villa   F    Davis   4.9                  0.1   \n",
              "4     44              Aston Villa   F    Duran   5.0                  0.3   \n",
              "..   ...                      ...  ..      ...   ...                  ...   \n",
              "720  647                 West Ham   G    Anang   4.0                  0.1   \n",
              "721  546  Wolverhampton Wanderers   G  Bentley   4.0                  0.4   \n",
              "722  564  Wolverhampton Wanderers   G     King   4.0                  0.8   \n",
              "723  569  Wolverhampton Wanderers   G  José Sá   5.0                  1.5   \n",
              "724  571  Wolverhampton Wanderers   G   Šarkić   4.0                  0.4   \n",
              "\n",
              "     goals_scored  assists  bps  ict_index  ...  minutes  home_adjustment  \\\n",
              "0               0        0    0        0.0  ...        0              1.2   \n",
              "1               1        1   45       25.4  ...      295              1.2   \n",
              "2               2        2   82       31.3  ...      567              1.2   \n",
              "3               0        0    0        0.0  ...        0              1.1   \n",
              "4               2        0   55       13.7  ...       68              1.1   \n",
              "..            ...      ...  ...        ...  ...      ...              ...   \n",
              "720             0        0    0        0.0  ...        0              1.0   \n",
              "721             0        0    0        0.0  ...        0              0.8   \n",
              "722             0        0    0        0.0  ...        0              0.8   \n",
              "723             0        0  161       27.5  ...      720              0.8   \n",
              "724             0        0    0        0.0  ...        0              0.8   \n",
              "\n",
              "     xPallgw  xCSP   gw9  gw10  gw11  gw12  gw13  5GW Total  \n",
              "0        2.0   NaN  2.00  2.00  2.00  2.00  2.00      10.00  \n",
              "1        2.8   NaN  2.88  3.12  2.80  3.04  2.88      14.72  \n",
              "2        3.1   NaN  3.21  3.54  3.10  3.43  3.21      16.49  \n",
              "3        2.0   NaN  2.00  2.00  2.00  2.00  2.00      10.00  \n",
              "4        2.4   NaN  2.44  2.52  2.52  2.48  2.44      12.40  \n",
              "..       ...   ...   ...   ...   ...   ...   ...        ...  \n",
              "720     -2.2  -4.2 -1.78 -2.62 -1.78 -3.04 -2.62     -11.84  \n",
              "721     -1.5  -3.4 -1.50 -0.45 -1.50 -0.80 -1.15      -5.40  \n",
              "722     -1.5  -3.4 -1.50 -0.45 -1.50 -0.80 -1.15      -5.40  \n",
              "723     -1.5  -3.4 -1.50 -0.45 -1.50 -0.80 -1.15      -5.40  \n",
              "724     -1.5  -3.4 -1.50 -0.45 -1.50 -0.80 -1.15      -5.40  \n",
              "\n",
              "[725 rows x 22 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-eef61da6-1244-4fe6-b9db-987cbd69f38f\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>team</th>\n",
              "      <th>pos</th>\n",
              "      <th>name</th>\n",
              "      <th>cost</th>\n",
              "      <th>selected_by_percent</th>\n",
              "      <th>goals_scored</th>\n",
              "      <th>assists</th>\n",
              "      <th>bps</th>\n",
              "      <th>ict_index</th>\n",
              "      <th>...</th>\n",
              "      <th>minutes</th>\n",
              "      <th>home_adjustment</th>\n",
              "      <th>xPallgw</th>\n",
              "      <th>xCSP</th>\n",
              "      <th>gw9</th>\n",
              "      <th>gw10</th>\n",
              "      <th>gw11</th>\n",
              "      <th>gw12</th>\n",
              "      <th>gw13</th>\n",
              "      <th>5GW Total</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>1</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>F</td>\n",
              "      <td>Balogun</td>\n",
              "      <td>4.4</td>\n",
              "      <td>0.3</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>1.2</td>\n",
              "      <td>2.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>10.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>8</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>F</td>\n",
              "      <td>G.Jesus</td>\n",
              "      <td>8.0</td>\n",
              "      <td>3.5</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>45</td>\n",
              "      <td>25.4</td>\n",
              "      <td>...</td>\n",
              "      <td>295</td>\n",
              "      <td>1.2</td>\n",
              "      <td>2.8</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2.88</td>\n",
              "      <td>3.12</td>\n",
              "      <td>2.80</td>\n",
              "      <td>3.04</td>\n",
              "      <td>2.88</td>\n",
              "      <td>14.72</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>13</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>F</td>\n",
              "      <td>Nketiah</td>\n",
              "      <td>5.5</td>\n",
              "      <td>5.2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>82</td>\n",
              "      <td>31.3</td>\n",
              "      <td>...</td>\n",
              "      <td>567</td>\n",
              "      <td>1.2</td>\n",
              "      <td>3.1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.21</td>\n",
              "      <td>3.54</td>\n",
              "      <td>3.10</td>\n",
              "      <td>3.43</td>\n",
              "      <td>3.21</td>\n",
              "      <td>16.49</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>39</td>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>F</td>\n",
              "      <td>Davis</td>\n",
              "      <td>4.9</td>\n",
              "      <td>0.1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>1.1</td>\n",
              "      <td>2.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>10.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>44</td>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>F</td>\n",
              "      <td>Duran</td>\n",
              "      <td>5.0</td>\n",
              "      <td>0.3</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>55</td>\n",
              "      <td>13.7</td>\n",
              "      <td>...</td>\n",
              "      <td>68</td>\n",
              "      <td>1.1</td>\n",
              "      <td>2.4</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2.44</td>\n",
              "      <td>2.52</td>\n",
              "      <td>2.52</td>\n",
              "      <td>2.48</td>\n",
              "      <td>2.44</td>\n",
              "      <td>12.40</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>720</th>\n",
              "      <td>647</td>\n",
              "      <td>West Ham</td>\n",
              "      <td>G</td>\n",
              "      <td>Anang</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>-2.2</td>\n",
              "      <td>-4.2</td>\n",
              "      <td>-1.78</td>\n",
              "      <td>-2.62</td>\n",
              "      <td>-1.78</td>\n",
              "      <td>-3.04</td>\n",
              "      <td>-2.62</td>\n",
              "      <td>-11.84</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>721</th>\n",
              "      <td>546</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>G</td>\n",
              "      <td>Bentley</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.4</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0.8</td>\n",
              "      <td>-1.5</td>\n",
              "      <td>-3.4</td>\n",
              "      <td>-1.50</td>\n",
              "      <td>-0.45</td>\n",
              "      <td>-1.50</td>\n",
              "      <td>-0.80</td>\n",
              "      <td>-1.15</td>\n",
              "      <td>-5.40</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>722</th>\n",
              "      <td>564</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>G</td>\n",
              "      <td>King</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.8</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0.8</td>\n",
              "      <td>-1.5</td>\n",
              "      <td>-3.4</td>\n",
              "      <td>-1.50</td>\n",
              "      <td>-0.45</td>\n",
              "      <td>-1.50</td>\n",
              "      <td>-0.80</td>\n",
              "      <td>-1.15</td>\n",
              "      <td>-5.40</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>723</th>\n",
              "      <td>569</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>G</td>\n",
              "      <td>José Sá</td>\n",
              "      <td>5.0</td>\n",
              "      <td>1.5</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>161</td>\n",
              "      <td>27.5</td>\n",
              "      <td>...</td>\n",
              "      <td>720</td>\n",
              "      <td>0.8</td>\n",
              "      <td>-1.5</td>\n",
              "      <td>-3.4</td>\n",
              "      <td>-1.50</td>\n",
              "      <td>-0.45</td>\n",
              "      <td>-1.50</td>\n",
              "      <td>-0.80</td>\n",
              "      <td>-1.15</td>\n",
              "      <td>-5.40</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>724</th>\n",
              "      <td>571</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>G</td>\n",
              "      <td>Šarkić</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.4</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0.8</td>\n",
              "      <td>-1.5</td>\n",
              "      <td>-3.4</td>\n",
              "      <td>-1.50</td>\n",
              "      <td>-0.45</td>\n",
              "      <td>-1.50</td>\n",
              "      <td>-0.80</td>\n",
              "      <td>-1.15</td>\n",
              "      <td>-5.40</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>725 rows × 22 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-eef61da6-1244-4fe6-b9db-987cbd69f38f')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-eef61da6-1244-4fe6-b9db-987cbd69f38f button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-eef61da6-1244-4fe6-b9db-987cbd69f38f');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-df2c2056-a6cb-4186-9729-6435024ff6dd\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-df2c2056-a6cb-4186-9729-6435024ff6dd')\"\n",
              "            title=\"Suggest charts.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-df2c2056-a6cb-4186-9729-6435024ff6dd button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 42
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "rawdfgw228x.drop_duplicates(subset='name', keep='last', inplace=True)\n",
        "rawdfgw228x"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 424
        },
        "id": "Jud88GRHgLWf",
        "outputId": "67d10f28-0d4a-440b-b0a5-361c00085370"
      },
      "execution_count": 43,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "      id                     team pos     name  cost  selected_by_percent  \\\n",
              "0      1                  Arsenal   F  Balogun   4.4                  0.3   \n",
              "1      8                  Arsenal   F  G.Jesus   8.0                  3.5   \n",
              "2     13                  Arsenal   F  Nketiah   5.5                  5.2   \n",
              "3     39              Aston Villa   F    Davis   4.9                  0.1   \n",
              "4     44              Aston Villa   F    Duran   5.0                  0.3   \n",
              "..   ...                      ...  ..      ...   ...                  ...   \n",
              "720  647                 West Ham   G    Anang   4.0                  0.1   \n",
              "721  546  Wolverhampton Wanderers   G  Bentley   4.0                  0.4   \n",
              "722  564  Wolverhampton Wanderers   G     King   4.0                  0.8   \n",
              "723  569  Wolverhampton Wanderers   G  José Sá   5.0                  1.5   \n",
              "724  571  Wolverhampton Wanderers   G   Šarkić   4.0                  0.4   \n",
              "\n",
              "     goals_scored  assists  bps  ict_index  ...  minutes  home_adjustment  \\\n",
              "0               0        0    0        0.0  ...        0              1.2   \n",
              "1               1        1   45       25.4  ...      295              1.2   \n",
              "2               2        2   82       31.3  ...      567              1.2   \n",
              "3               0        0    0        0.0  ...        0              1.1   \n",
              "4               2        0   55       13.7  ...       68              1.1   \n",
              "..            ...      ...  ...        ...  ...      ...              ...   \n",
              "720             0        0    0        0.0  ...        0              1.0   \n",
              "721             0        0    0        0.0  ...        0              0.8   \n",
              "722             0        0    0        0.0  ...        0              0.8   \n",
              "723             0        0  161       27.5  ...      720              0.8   \n",
              "724             0        0    0        0.0  ...        0              0.8   \n",
              "\n",
              "     xPallgw  xCSP   gw9  gw10  gw11  gw12  gw13  5GW Total  \n",
              "0        2.0   NaN  2.00  2.00  2.00  2.00  2.00      10.00  \n",
              "1        2.8   NaN  2.88  3.12  2.80  3.04  2.88      14.72  \n",
              "2        3.1   NaN  3.21  3.54  3.10  3.43  3.21      16.49  \n",
              "3        2.0   NaN  2.00  2.00  2.00  2.00  2.00      10.00  \n",
              "4        2.4   NaN  2.44  2.52  2.52  2.48  2.44      12.40  \n",
              "..       ...   ...   ...   ...   ...   ...   ...        ...  \n",
              "720     -2.2  -4.2 -1.78 -2.62 -1.78 -3.04 -2.62     -11.84  \n",
              "721     -1.5  -3.4 -1.50 -0.45 -1.50 -0.80 -1.15      -5.40  \n",
              "722     -1.5  -3.4 -1.50 -0.45 -1.50 -0.80 -1.15      -5.40  \n",
              "723     -1.5  -3.4 -1.50 -0.45 -1.50 -0.80 -1.15      -5.40  \n",
              "724     -1.5  -3.4 -1.50 -0.45 -1.50 -0.80 -1.15      -5.40  \n",
              "\n",
              "[703 rows x 22 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-82216acc-c7e7-41c3-b759-71a91b4a174b\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>team</th>\n",
              "      <th>pos</th>\n",
              "      <th>name</th>\n",
              "      <th>cost</th>\n",
              "      <th>selected_by_percent</th>\n",
              "      <th>goals_scored</th>\n",
              "      <th>assists</th>\n",
              "      <th>bps</th>\n",
              "      <th>ict_index</th>\n",
              "      <th>...</th>\n",
              "      <th>minutes</th>\n",
              "      <th>home_adjustment</th>\n",
              "      <th>xPallgw</th>\n",
              "      <th>xCSP</th>\n",
              "      <th>gw9</th>\n",
              "      <th>gw10</th>\n",
              "      <th>gw11</th>\n",
              "      <th>gw12</th>\n",
              "      <th>gw13</th>\n",
              "      <th>5GW Total</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>1</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>F</td>\n",
              "      <td>Balogun</td>\n",
              "      <td>4.4</td>\n",
              "      <td>0.3</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>1.2</td>\n",
              "      <td>2.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>10.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>8</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>F</td>\n",
              "      <td>G.Jesus</td>\n",
              "      <td>8.0</td>\n",
              "      <td>3.5</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>45</td>\n",
              "      <td>25.4</td>\n",
              "      <td>...</td>\n",
              "      <td>295</td>\n",
              "      <td>1.2</td>\n",
              "      <td>2.8</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2.88</td>\n",
              "      <td>3.12</td>\n",
              "      <td>2.80</td>\n",
              "      <td>3.04</td>\n",
              "      <td>2.88</td>\n",
              "      <td>14.72</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>13</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>F</td>\n",
              "      <td>Nketiah</td>\n",
              "      <td>5.5</td>\n",
              "      <td>5.2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>82</td>\n",
              "      <td>31.3</td>\n",
              "      <td>...</td>\n",
              "      <td>567</td>\n",
              "      <td>1.2</td>\n",
              "      <td>3.1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.21</td>\n",
              "      <td>3.54</td>\n",
              "      <td>3.10</td>\n",
              "      <td>3.43</td>\n",
              "      <td>3.21</td>\n",
              "      <td>16.49</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>39</td>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>F</td>\n",
              "      <td>Davis</td>\n",
              "      <td>4.9</td>\n",
              "      <td>0.1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>1.1</td>\n",
              "      <td>2.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>10.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>44</td>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>F</td>\n",
              "      <td>Duran</td>\n",
              "      <td>5.0</td>\n",
              "      <td>0.3</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>55</td>\n",
              "      <td>13.7</td>\n",
              "      <td>...</td>\n",
              "      <td>68</td>\n",
              "      <td>1.1</td>\n",
              "      <td>2.4</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2.44</td>\n",
              "      <td>2.52</td>\n",
              "      <td>2.52</td>\n",
              "      <td>2.48</td>\n",
              "      <td>2.44</td>\n",
              "      <td>12.40</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>720</th>\n",
              "      <td>647</td>\n",
              "      <td>West Ham</td>\n",
              "      <td>G</td>\n",
              "      <td>Anang</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>-2.2</td>\n",
              "      <td>-4.2</td>\n",
              "      <td>-1.78</td>\n",
              "      <td>-2.62</td>\n",
              "      <td>-1.78</td>\n",
              "      <td>-3.04</td>\n",
              "      <td>-2.62</td>\n",
              "      <td>-11.84</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>721</th>\n",
              "      <td>546</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>G</td>\n",
              "      <td>Bentley</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.4</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0.8</td>\n",
              "      <td>-1.5</td>\n",
              "      <td>-3.4</td>\n",
              "      <td>-1.50</td>\n",
              "      <td>-0.45</td>\n",
              "      <td>-1.50</td>\n",
              "      <td>-0.80</td>\n",
              "      <td>-1.15</td>\n",
              "      <td>-5.40</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>722</th>\n",
              "      <td>564</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>G</td>\n",
              "      <td>King</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.8</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0.8</td>\n",
              "      <td>-1.5</td>\n",
              "      <td>-3.4</td>\n",
              "      <td>-1.50</td>\n",
              "      <td>-0.45</td>\n",
              "      <td>-1.50</td>\n",
              "      <td>-0.80</td>\n",
              "      <td>-1.15</td>\n",
              "      <td>-5.40</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>723</th>\n",
              "      <td>569</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>G</td>\n",
              "      <td>José Sá</td>\n",
              "      <td>5.0</td>\n",
              "      <td>1.5</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>161</td>\n",
              "      <td>27.5</td>\n",
              "      <td>...</td>\n",
              "      <td>720</td>\n",
              "      <td>0.8</td>\n",
              "      <td>-1.5</td>\n",
              "      <td>-3.4</td>\n",
              "      <td>-1.50</td>\n",
              "      <td>-0.45</td>\n",
              "      <td>-1.50</td>\n",
              "      <td>-0.80</td>\n",
              "      <td>-1.15</td>\n",
              "      <td>-5.40</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>724</th>\n",
              "      <td>571</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>G</td>\n",
              "      <td>Šarkić</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.4</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0.8</td>\n",
              "      <td>-1.5</td>\n",
              "      <td>-3.4</td>\n",
              "      <td>-1.50</td>\n",
              "      <td>-0.45</td>\n",
              "      <td>-1.50</td>\n",
              "      <td>-0.80</td>\n",
              "      <td>-1.15</td>\n",
              "      <td>-5.40</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>703 rows × 22 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-82216acc-c7e7-41c3-b759-71a91b4a174b')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-82216acc-c7e7-41c3-b759-71a91b4a174b button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-82216acc-c7e7-41c3-b759-71a91b4a174b');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-28499cdd-f683-418c-8408-9a66cd88b983\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-28499cdd-f683-418c-8408-9a66cd88b983')\"\n",
              "            title=\"Suggest charts.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-28499cdd-f683-418c-8408-9a66cd88b983 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 43
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "from pandas import ExcelWriter\n",
        "writer = ExcelWriter('API model.xlsx')\n",
        "rawdfgw228x.to_excel(writer, sheet_name='Sheet1')\n",
        "gwadjustments913.to_excel(writer, sheet_name='Sheet2')\n",
        "#fplwithunderstat.to_excel(writer, sheet_name='Sheet3')\n",
        "\n",
        "# Close the Pandas Excel writer and output the Excel file.\n",
        "writer.save()"
      ],
      "metadata": {
        "id": "tdXsMsuwaWa4",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "18ec05c8-756d-44c3-a198-13d2f625350d"
      },
      "execution_count": 45,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "<ipython-input-45-c67a80e592ea>:8: FutureWarning: save is not part of the public API, usage can give unexpected results and will be removed in a future version\n",
            "  writer.save()\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#from google.colab import drive\n",
        "#drive.mount('/content/drive')"
      ],
      "metadata": {
        "id": "GzSzE5_Ckuq3"
      },
      "execution_count": 46,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "import shutil"
      ],
      "metadata": {
        "id": "xSIwXnyAk2op"
      },
      "execution_count": 47,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "#shutil.copy(\"/content/API model.xlsx\",\"/content/drive/MyDrive/FPL\")"
      ],
      "metadata": {
        "id": "O724A90vk3b4"
      },
      "execution_count": 48,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "rawdfgw228x.nlargest(50, '5GW Total')"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "id": "4ULMO_eqJXIT",
        "outputId": "34e60cf9-d736-400e-9b64-a7a673fdc3ef"
      },
      "execution_count": 49,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "      id               team pos           name  cost  selected_by_percent  \\\n",
              "264  308          Liverpool   M          Salah  12.6                 34.3   \n",
              "61   355    Manchester City   F        Haaland  14.1                 89.2   \n",
              "103   19            Arsenal   M           Saka   8.6                 50.3   \n",
              "151  108          Brentford   M         Mbeumo   6.8                 21.9   \n",
              "65   415   Newcastle United   F           Isak   7.5                 21.3   \n",
              "303  373  Manchester United   M    B.Fernandes   8.4                 17.4   \n",
              "376  516          Tottenham   M            Son   9.4                 33.9   \n",
              "379  526           West Ham   M          Bowen   7.3                 18.0   \n",
              "535  342    Manchester City   D            Aké   5.1                  6.3   \n",
              "371  504          Tottenham   M       Maddison   8.0                 37.7   \n",
              "312  396  Manchester United   M       Rashford   8.8                 21.3   \n",
              "100   14            Arsenal   M       Ødegaard   8.5                 23.1   \n",
              "172  143           Brighton   M         Mitoma   6.6                 40.8   \n",
              "262  303          Liverpool   M      Luis Díaz   7.5                  9.6   \n",
              "5     60        Aston Villa   F        Watkins   8.1                 29.8   \n",
              "60   343    Manchester City   F      J.Alvarez   7.0                 32.5   \n",
              "217  226     Crystal Palace   M            Eze   6.2                  5.1   \n",
              "113   43        Aston Villa   M   Douglas Luiz   5.4                  3.6   \n",
              "537  350    Manchester City   D          Rúben   5.5                  8.2   \n",
              "16   135           Brighton   F     João Pedro   5.3                  9.7   \n",
              "49   293          Liverpool   F         Darwin   7.4                 12.4   \n",
              "29   211            Chelsea   F      N.Jackson   6.9                  5.4   \n",
              "229  249            Everton   M     A.Doucoure   5.5                  1.0   \n",
              "542  369    Manchester City   D         Walker   5.3                 16.3   \n",
              "543  616    Manchester City   D       Gvardiol   5.0                  4.7   \n",
              "170  140           Brighton   M          March   6.4                  6.1   \n",
              "388  664           West Ham   M    Ward-Prowse   6.3                 13.8   \n",
              "534  341    Manchester City   D         Akanji   5.0                  7.5   \n",
              "373  509          Tottenham   M    Richarlison   6.7                  2.0   \n",
              "385  542           West Ham   M         Souček   4.9                  0.8   \n",
              "322  412   Newcastle United   M         Gordon   5.6                  5.3   \n",
              "15   132           Brighton   F       Ferguson   6.0                  7.0   \n",
              "12   119          Brentford   F          Wissa   5.9                  9.6   \n",
              "199  199            Chelsea   M           Enzo   4.9                  3.4   \n",
              "204  216            Chelsea   M       Sterling   7.0                  9.2   \n",
              "122  599        Aston Villa   M          Diaby   6.7                 12.5   \n",
              "297  365    Manchester City   M        Rodrigo   5.6                  5.8   \n",
              "538  357    Manchester City   D        Laporte   4.9                  0.1   \n",
              "539  358    Manchester City   D        R.Lewis   4.3                  0.3   \n",
              "540  366    Manchester City   D   Sergio Gómez   3.9                  1.2   \n",
              "34   225     Crystal Palace   F        Edouard   5.5                  3.6   \n",
              "384  539           West Ham   M      L.Paquetá   6.0                  1.9   \n",
              "411   29            Arsenal   D          White   5.6                 11.3   \n",
              "304  376  Manchester United   M       Casemiro   5.4                  3.8   \n",
              "536  346    Manchester City   D        Cancelo   5.8                  1.2   \n",
              "541  368    Manchester City   D         Stones   5.3                  3.1   \n",
              "692  347    Manchester City   G         Carson   3.9                  0.1   \n",
              "693  352    Manchester City   G     Ederson M.   5.6                 19.5   \n",
              "694  361    Manchester City   G  Ortega Moreno   3.9                  0.7   \n",
              "695  367    Manchester City   G        Steffen   3.9                  0.2   \n",
              "\n",
              "     goals_scored  assists  bps  ict_index  ...  minutes  home_adjustment  \\\n",
              "264             5        4  192       89.2  ...      684              1.2   \n",
              "61              8        1  218       86.1  ...      709              1.3   \n",
              "103             4        3  195       85.3  ...      613              1.2   \n",
              "151             4        0  121       64.6  ...      720              1.1   \n",
              "65              6        0  170       54.2  ...      471              1.2   \n",
              "303             2        1  146       74.4  ...      720              1.1   \n",
              "376             6        0  178       70.5  ...      625              1.0   \n",
              "379             5        1  151       66.9  ...      720              1.0   \n",
              "535             1        0  108       21.6  ...      461              1.3   \n",
              "371             2        5  185       88.8  ...      668              1.0   \n",
              "312             1        2   81       52.1  ...      669              1.1   \n",
              "100             3        2  153       61.6  ...      712              1.2   \n",
              "172             3        3  132       68.2  ...      665              1.1   \n",
              "262             2        0   67       35.5  ...      544              1.2   \n",
              "5               4        7  203       74.6  ...      680              1.1   \n",
              "60              3        5  193       69.1  ...      662              1.3   \n",
              "217             1        1  110       60.9  ...      627              1.0   \n",
              "113             3        0  161       42.5  ...      669              1.1   \n",
              "537             0        0  110       23.9  ...      630              1.3   \n",
              "16              2        1   91       46.9  ...      412              1.1   \n",
              "49              3        3  109       36.2  ...      309              1.2   \n",
              "29              2        0   55       46.3  ...      554              1.1   \n",
              "229             3        1  131       68.4  ...      678              0.9   \n",
              "542             0        1  162       29.0  ...      720              1.3   \n",
              "543             0        0   98       18.3  ...      461              1.3   \n",
              "170             3        1  124       44.1  ...      465              1.1   \n",
              "388             2        3  177       57.6  ...      620              1.0   \n",
              "534             0        0  125       22.2  ...      540              1.3   \n",
              "373             1        2   31       39.8  ...      392              1.0   \n",
              "385             2        1  105       40.7  ...      542              1.0   \n",
              "322             2        4  120       44.1  ...      541              1.2   \n",
              "15              4        0  105       39.6  ...      359              1.1   \n",
              "12              2        2  105       42.4  ...      668              1.1   \n",
              "199             0        0   83       47.1  ...      687              1.1   \n",
              "204             3        3  121       62.7  ...      637              1.1   \n",
              "122             2        4  136       52.9  ...      620              1.1   \n",
              "297             2        1  125       44.1  ...      480              1.3   \n",
              "538             0        0    4        2.9  ...       11              1.3   \n",
              "539             0        0   53        1.9  ...      147              1.3   \n",
              "540             0        1   17        3.8  ...       15              1.3   \n",
              "34              4        0  122       54.1  ...      608              1.0   \n",
              "384             1        1  113       39.0  ...      710              1.0   \n",
              "411             1        1  189       37.7  ...      720              1.2   \n",
              "304             1        0   94       40.3  ...      648              1.1   \n",
              "536             0        0    0        0.0  ...        0              1.3   \n",
              "541             0        0    3        0.1  ...       22              1.3   \n",
              "692             0        0    0        0.0  ...        0              1.3   \n",
              "693             0        0  129       13.2  ...      720              1.3   \n",
              "694             0        0    0        0.0  ...        0              1.3   \n",
              "695             0        0    0        0.0  ...        0              1.3   \n",
              "\n",
              "     xPallgw  xCSP   gw9  gw10  gw11  gw12  gw13  5GW Total  \n",
              "264      6.3   NaN  7.59  8.02  8.02  6.73  5.87      36.23  \n",
              "61       6.1   NaN  6.92  6.92  8.15  6.92  6.51      35.42  \n",
              "103      5.4   NaN  5.74  6.76  5.40  6.42  5.74      30.06  \n",
              "151      5.5   NaN  6.20  5.50  5.85  5.15  5.15      27.85  \n",
              "65       4.8   NaN  5.08  5.64  4.80  5.64  5.08      26.24  \n",
              "303      4.7   NaN  5.51  4.16  5.24  5.51  5.24      25.66  \n",
              "376      4.7   NaN  4.97  4.70  4.43  5.24  4.43      23.77  \n",
              "379      4.6   NaN  4.34  4.86  4.34  5.12  4.86      23.52  \n",
              "535      4.0   1.2  4.40  4.40  5.00  4.40  4.20      22.40  \n",
              "371      4.4   NaN  4.64  4.40  4.16  4.88  4.16      22.24  \n",
              "312      4.1   NaN  4.73  3.68  4.52  4.73  4.52      22.18  \n",
              "100      4.0   NaN  4.20  4.80  4.00  4.60  4.20      21.80  \n",
              "172      4.0   NaN  3.60  4.40  4.40  4.60  4.60      21.60  \n",
              "262      3.9   NaN  4.47  4.66  4.66  4.09  3.71      21.59  \n",
              "5        3.9   NaN  4.09  4.47  4.47  4.28  4.09      21.40  \n",
              "60       3.8   NaN  4.16  4.16  4.70  4.16  3.98      21.16  \n",
              "217      4.1   NaN  3.89  4.10  4.31  4.31  4.52      21.13  \n",
              "113      3.8   NaN  3.98  4.34  4.34  4.16  3.98      20.80  \n",
              "537      3.7   1.2  4.04  4.04  4.55  4.04  3.87      20.54  \n",
              "16       3.8   NaN  3.44  4.16  4.16  4.34  4.34      20.44  \n",
              "49       3.7   NaN  4.21  4.38  4.38  3.87  3.53      20.37  \n",
              "29       4.2   NaN  3.98  4.20  4.42  3.76  3.98      20.34  \n",
              "229      4.5   NaN  3.75  4.25  4.00  4.25  4.00      20.25  \n",
              "542      3.6   1.2  3.92  3.92  4.40  3.92  3.76      19.92  \n",
              "543      3.6   1.2  3.92  3.92  4.40  3.92  3.76      19.92  \n",
              "170      3.7   NaN  3.36  4.04  4.04  4.21  4.21      19.86  \n",
              "388      3.8   NaN  3.62  3.98  3.62  4.16  3.98      19.36  \n",
              "534      3.5   1.2  3.80  3.80  4.25  3.80  3.65      19.30  \n",
              "373      3.8   NaN  3.98  3.80  3.62  4.16  3.62      19.18  \n",
              "385      3.7   NaN  3.53  3.87  3.53  4.04  3.87      18.84  \n",
              "322      3.5   NaN  3.65  3.95  3.50  3.95  3.65      18.70  \n",
              "15       3.5   NaN  3.20  3.80  3.80  3.95  3.95      18.70  \n",
              "12       3.7   NaN  4.04  3.70  3.87  3.53  3.53      18.67  \n",
              "199      3.8   NaN  3.62  3.80  3.98  3.44  3.62      18.46  \n",
              "204      3.8   NaN  3.62  3.80  3.98  3.44  3.62      18.46  \n",
              "122      3.4   NaN  3.54  3.82  3.82  3.68  3.54      18.40  \n",
              "297      3.3   NaN  3.56  3.56  3.95  3.56  3.43      18.06  \n",
              "538      3.3   1.2  3.56  3.56  3.95  3.56  3.43      18.06  \n",
              "539      3.3   1.2  3.56  3.56  3.95  3.56  3.43      18.06  \n",
              "540      3.3   1.2  3.56  3.56  3.95  3.56  3.43      18.06  \n",
              "34       3.5   NaN  3.35  3.50  3.65  3.65  3.80      17.95  \n",
              "384      3.5   NaN  3.35  3.65  3.35  3.80  3.65      17.80  \n",
              "411      3.3   0.7  3.43  3.82  3.30  3.69  3.43      17.67  \n",
              "304      3.3   NaN  3.69  3.04  3.56  3.69  3.56      17.54  \n",
              "536      3.2   1.2  3.44  3.44  3.80  3.44  3.32      17.44  \n",
              "541      3.2   1.2  3.44  3.44  3.80  3.44  3.32      17.44  \n",
              "692      3.2   1.2  3.44  3.44  3.80  3.44  3.32      17.44  \n",
              "693      3.2   1.2  3.44  3.44  3.80  3.44  3.32      17.44  \n",
              "694      3.2   1.2  3.44  3.44  3.80  3.44  3.32      17.44  \n",
              "695      3.2   1.2  3.44  3.44  3.80  3.44  3.32      17.44  \n",
              "\n",
              "[50 rows x 22 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-ccdce993-425d-4431-8700-854c524490b2\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>team</th>\n",
              "      <th>pos</th>\n",
              "      <th>name</th>\n",
              "      <th>cost</th>\n",
              "      <th>selected_by_percent</th>\n",
              "      <th>goals_scored</th>\n",
              "      <th>assists</th>\n",
              "      <th>bps</th>\n",
              "      <th>ict_index</th>\n",
              "      <th>...</th>\n",
              "      <th>minutes</th>\n",
              "      <th>home_adjustment</th>\n",
              "      <th>xPallgw</th>\n",
              "      <th>xCSP</th>\n",
              "      <th>gw9</th>\n",
              "      <th>gw10</th>\n",
              "      <th>gw11</th>\n",
              "      <th>gw12</th>\n",
              "      <th>gw13</th>\n",
              "      <th>5GW Total</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>264</th>\n",
              "      <td>308</td>\n",
              "      <td>Liverpool</td>\n",
              "      <td>M</td>\n",
              "      <td>Salah</td>\n",
              "      <td>12.6</td>\n",
              "      <td>34.3</td>\n",
              "      <td>5</td>\n",
              "      <td>4</td>\n",
              "      <td>192</td>\n",
              "      <td>89.2</td>\n",
              "      <td>...</td>\n",
              "      <td>684</td>\n",
              "      <td>1.2</td>\n",
              "      <td>6.3</td>\n",
              "      <td>NaN</td>\n",
              "      <td>7.59</td>\n",
              "      <td>8.02</td>\n",
              "      <td>8.02</td>\n",
              "      <td>6.73</td>\n",
              "      <td>5.87</td>\n",
              "      <td>36.23</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>61</th>\n",
              "      <td>355</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>F</td>\n",
              "      <td>Haaland</td>\n",
              "      <td>14.1</td>\n",
              "      <td>89.2</td>\n",
              "      <td>8</td>\n",
              "      <td>1</td>\n",
              "      <td>218</td>\n",
              "      <td>86.1</td>\n",
              "      <td>...</td>\n",
              "      <td>709</td>\n",
              "      <td>1.3</td>\n",
              "      <td>6.1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>6.92</td>\n",
              "      <td>6.92</td>\n",
              "      <td>8.15</td>\n",
              "      <td>6.92</td>\n",
              "      <td>6.51</td>\n",
              "      <td>35.42</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>103</th>\n",
              "      <td>19</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>M</td>\n",
              "      <td>Saka</td>\n",
              "      <td>8.6</td>\n",
              "      <td>50.3</td>\n",
              "      <td>4</td>\n",
              "      <td>3</td>\n",
              "      <td>195</td>\n",
              "      <td>85.3</td>\n",
              "      <td>...</td>\n",
              "      <td>613</td>\n",
              "      <td>1.2</td>\n",
              "      <td>5.4</td>\n",
              "      <td>NaN</td>\n",
              "      <td>5.74</td>\n",
              "      <td>6.76</td>\n",
              "      <td>5.40</td>\n",
              "      <td>6.42</td>\n",
              "      <td>5.74</td>\n",
              "      <td>30.06</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>151</th>\n",
              "      <td>108</td>\n",
              "      <td>Brentford</td>\n",
              "      <td>M</td>\n",
              "      <td>Mbeumo</td>\n",
              "      <td>6.8</td>\n",
              "      <td>21.9</td>\n",
              "      <td>4</td>\n",
              "      <td>0</td>\n",
              "      <td>121</td>\n",
              "      <td>64.6</td>\n",
              "      <td>...</td>\n",
              "      <td>720</td>\n",
              "      <td>1.1</td>\n",
              "      <td>5.5</td>\n",
              "      <td>NaN</td>\n",
              "      <td>6.20</td>\n",
              "      <td>5.50</td>\n",
              "      <td>5.85</td>\n",
              "      <td>5.15</td>\n",
              "      <td>5.15</td>\n",
              "      <td>27.85</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>65</th>\n",
              "      <td>415</td>\n",
              "      <td>Newcastle United</td>\n",
              "      <td>F</td>\n",
              "      <td>Isak</td>\n",
              "      <td>7.5</td>\n",
              "      <td>21.3</td>\n",
              "      <td>6</td>\n",
              "      <td>0</td>\n",
              "      <td>170</td>\n",
              "      <td>54.2</td>\n",
              "      <td>...</td>\n",
              "      <td>471</td>\n",
              "      <td>1.2</td>\n",
              "      <td>4.8</td>\n",
              "      <td>NaN</td>\n",
              "      <td>5.08</td>\n",
              "      <td>5.64</td>\n",
              "      <td>4.80</td>\n",
              "      <td>5.64</td>\n",
              "      <td>5.08</td>\n",
              "      <td>26.24</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>303</th>\n",
              "      <td>373</td>\n",
              "      <td>Manchester United</td>\n",
              "      <td>M</td>\n",
              "      <td>B.Fernandes</td>\n",
              "      <td>8.4</td>\n",
              "      <td>17.4</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>146</td>\n",
              "      <td>74.4</td>\n",
              "      <td>...</td>\n",
              "      <td>720</td>\n",
              "      <td>1.1</td>\n",
              "      <td>4.7</td>\n",
              "      <td>NaN</td>\n",
              "      <td>5.51</td>\n",
              "      <td>4.16</td>\n",
              "      <td>5.24</td>\n",
              "      <td>5.51</td>\n",
              "      <td>5.24</td>\n",
              "      <td>25.66</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>376</th>\n",
              "      <td>516</td>\n",
              "      <td>Tottenham</td>\n",
              "      <td>M</td>\n",
              "      <td>Son</td>\n",
              "      <td>9.4</td>\n",
              "      <td>33.9</td>\n",
              "      <td>6</td>\n",
              "      <td>0</td>\n",
              "      <td>178</td>\n",
              "      <td>70.5</td>\n",
              "      <td>...</td>\n",
              "      <td>625</td>\n",
              "      <td>1.0</td>\n",
              "      <td>4.7</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4.97</td>\n",
              "      <td>4.70</td>\n",
              "      <td>4.43</td>\n",
              "      <td>5.24</td>\n",
              "      <td>4.43</td>\n",
              "      <td>23.77</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>379</th>\n",
              "      <td>526</td>\n",
              "      <td>West Ham</td>\n",
              "      <td>M</td>\n",
              "      <td>Bowen</td>\n",
              "      <td>7.3</td>\n",
              "      <td>18.0</td>\n",
              "      <td>5</td>\n",
              "      <td>1</td>\n",
              "      <td>151</td>\n",
              "      <td>66.9</td>\n",
              "      <td>...</td>\n",
              "      <td>720</td>\n",
              "      <td>1.0</td>\n",
              "      <td>4.6</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4.34</td>\n",
              "      <td>4.86</td>\n",
              "      <td>4.34</td>\n",
              "      <td>5.12</td>\n",
              "      <td>4.86</td>\n",
              "      <td>23.52</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>535</th>\n",
              "      <td>342</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>D</td>\n",
              "      <td>Aké</td>\n",
              "      <td>5.1</td>\n",
              "      <td>6.3</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>108</td>\n",
              "      <td>21.6</td>\n",
              "      <td>...</td>\n",
              "      <td>461</td>\n",
              "      <td>1.3</td>\n",
              "      <td>4.0</td>\n",
              "      <td>1.2</td>\n",
              "      <td>4.40</td>\n",
              "      <td>4.40</td>\n",
              "      <td>5.00</td>\n",
              "      <td>4.40</td>\n",
              "      <td>4.20</td>\n",
              "      <td>22.40</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>371</th>\n",
              "      <td>504</td>\n",
              "      <td>Tottenham</td>\n",
              "      <td>M</td>\n",
              "      <td>Maddison</td>\n",
              "      <td>8.0</td>\n",
              "      <td>37.7</td>\n",
              "      <td>2</td>\n",
              "      <td>5</td>\n",
              "      <td>185</td>\n",
              "      <td>88.8</td>\n",
              "      <td>...</td>\n",
              "      <td>668</td>\n",
              "      <td>1.0</td>\n",
              "      <td>4.4</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4.64</td>\n",
              "      <td>4.40</td>\n",
              "      <td>4.16</td>\n",
              "      <td>4.88</td>\n",
              "      <td>4.16</td>\n",
              "      <td>22.24</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>312</th>\n",
              "      <td>396</td>\n",
              "      <td>Manchester United</td>\n",
              "      <td>M</td>\n",
              "      <td>Rashford</td>\n",
              "      <td>8.8</td>\n",
              "      <td>21.3</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>81</td>\n",
              "      <td>52.1</td>\n",
              "      <td>...</td>\n",
              "      <td>669</td>\n",
              "      <td>1.1</td>\n",
              "      <td>4.1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4.73</td>\n",
              "      <td>3.68</td>\n",
              "      <td>4.52</td>\n",
              "      <td>4.73</td>\n",
              "      <td>4.52</td>\n",
              "      <td>22.18</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>100</th>\n",
              "      <td>14</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>M</td>\n",
              "      <td>Ødegaard</td>\n",
              "      <td>8.5</td>\n",
              "      <td>23.1</td>\n",
              "      <td>3</td>\n",
              "      <td>2</td>\n",
              "      <td>153</td>\n",
              "      <td>61.6</td>\n",
              "      <td>...</td>\n",
              "      <td>712</td>\n",
              "      <td>1.2</td>\n",
              "      <td>4.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4.20</td>\n",
              "      <td>4.80</td>\n",
              "      <td>4.00</td>\n",
              "      <td>4.60</td>\n",
              "      <td>4.20</td>\n",
              "      <td>21.80</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>172</th>\n",
              "      <td>143</td>\n",
              "      <td>Brighton</td>\n",
              "      <td>M</td>\n",
              "      <td>Mitoma</td>\n",
              "      <td>6.6</td>\n",
              "      <td>40.8</td>\n",
              "      <td>3</td>\n",
              "      <td>3</td>\n",
              "      <td>132</td>\n",
              "      <td>68.2</td>\n",
              "      <td>...</td>\n",
              "      <td>665</td>\n",
              "      <td>1.1</td>\n",
              "      <td>4.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.60</td>\n",
              "      <td>4.40</td>\n",
              "      <td>4.40</td>\n",
              "      <td>4.60</td>\n",
              "      <td>4.60</td>\n",
              "      <td>21.60</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>262</th>\n",
              "      <td>303</td>\n",
              "      <td>Liverpool</td>\n",
              "      <td>M</td>\n",
              "      <td>Luis Díaz</td>\n",
              "      <td>7.5</td>\n",
              "      <td>9.6</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>67</td>\n",
              "      <td>35.5</td>\n",
              "      <td>...</td>\n",
              "      <td>544</td>\n",
              "      <td>1.2</td>\n",
              "      <td>3.9</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4.47</td>\n",
              "      <td>4.66</td>\n",
              "      <td>4.66</td>\n",
              "      <td>4.09</td>\n",
              "      <td>3.71</td>\n",
              "      <td>21.59</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>60</td>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>F</td>\n",
              "      <td>Watkins</td>\n",
              "      <td>8.1</td>\n",
              "      <td>29.8</td>\n",
              "      <td>4</td>\n",
              "      <td>7</td>\n",
              "      <td>203</td>\n",
              "      <td>74.6</td>\n",
              "      <td>...</td>\n",
              "      <td>680</td>\n",
              "      <td>1.1</td>\n",
              "      <td>3.9</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4.09</td>\n",
              "      <td>4.47</td>\n",
              "      <td>4.47</td>\n",
              "      <td>4.28</td>\n",
              "      <td>4.09</td>\n",
              "      <td>21.40</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>60</th>\n",
              "      <td>343</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>F</td>\n",
              "      <td>J.Alvarez</td>\n",
              "      <td>7.0</td>\n",
              "      <td>32.5</td>\n",
              "      <td>3</td>\n",
              "      <td>5</td>\n",
              "      <td>193</td>\n",
              "      <td>69.1</td>\n",
              "      <td>...</td>\n",
              "      <td>662</td>\n",
              "      <td>1.3</td>\n",
              "      <td>3.8</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4.16</td>\n",
              "      <td>4.16</td>\n",
              "      <td>4.70</td>\n",
              "      <td>4.16</td>\n",
              "      <td>3.98</td>\n",
              "      <td>21.16</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>217</th>\n",
              "      <td>226</td>\n",
              "      <td>Crystal Palace</td>\n",
              "      <td>M</td>\n",
              "      <td>Eze</td>\n",
              "      <td>6.2</td>\n",
              "      <td>5.1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>110</td>\n",
              "      <td>60.9</td>\n",
              "      <td>...</td>\n",
              "      <td>627</td>\n",
              "      <td>1.0</td>\n",
              "      <td>4.1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.89</td>\n",
              "      <td>4.10</td>\n",
              "      <td>4.31</td>\n",
              "      <td>4.31</td>\n",
              "      <td>4.52</td>\n",
              "      <td>21.13</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>113</th>\n",
              "      <td>43</td>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>M</td>\n",
              "      <td>Douglas Luiz</td>\n",
              "      <td>5.4</td>\n",
              "      <td>3.6</td>\n",
              "      <td>3</td>\n",
              "      <td>0</td>\n",
              "      <td>161</td>\n",
              "      <td>42.5</td>\n",
              "      <td>...</td>\n",
              "      <td>669</td>\n",
              "      <td>1.1</td>\n",
              "      <td>3.8</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.98</td>\n",
              "      <td>4.34</td>\n",
              "      <td>4.34</td>\n",
              "      <td>4.16</td>\n",
              "      <td>3.98</td>\n",
              "      <td>20.80</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>537</th>\n",
              "      <td>350</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>D</td>\n",
              "      <td>Rúben</td>\n",
              "      <td>5.5</td>\n",
              "      <td>8.2</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>110</td>\n",
              "      <td>23.9</td>\n",
              "      <td>...</td>\n",
              "      <td>630</td>\n",
              "      <td>1.3</td>\n",
              "      <td>3.7</td>\n",
              "      <td>1.2</td>\n",
              "      <td>4.04</td>\n",
              "      <td>4.04</td>\n",
              "      <td>4.55</td>\n",
              "      <td>4.04</td>\n",
              "      <td>3.87</td>\n",
              "      <td>20.54</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>16</th>\n",
              "      <td>135</td>\n",
              "      <td>Brighton</td>\n",
              "      <td>F</td>\n",
              "      <td>João Pedro</td>\n",
              "      <td>5.3</td>\n",
              "      <td>9.7</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>91</td>\n",
              "      <td>46.9</td>\n",
              "      <td>...</td>\n",
              "      <td>412</td>\n",
              "      <td>1.1</td>\n",
              "      <td>3.8</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.44</td>\n",
              "      <td>4.16</td>\n",
              "      <td>4.16</td>\n",
              "      <td>4.34</td>\n",
              "      <td>4.34</td>\n",
              "      <td>20.44</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>49</th>\n",
              "      <td>293</td>\n",
              "      <td>Liverpool</td>\n",
              "      <td>F</td>\n",
              "      <td>Darwin</td>\n",
              "      <td>7.4</td>\n",
              "      <td>12.4</td>\n",
              "      <td>3</td>\n",
              "      <td>3</td>\n",
              "      <td>109</td>\n",
              "      <td>36.2</td>\n",
              "      <td>...</td>\n",
              "      <td>309</td>\n",
              "      <td>1.2</td>\n",
              "      <td>3.7</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4.21</td>\n",
              "      <td>4.38</td>\n",
              "      <td>4.38</td>\n",
              "      <td>3.87</td>\n",
              "      <td>3.53</td>\n",
              "      <td>20.37</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>29</th>\n",
              "      <td>211</td>\n",
              "      <td>Chelsea</td>\n",
              "      <td>F</td>\n",
              "      <td>N.Jackson</td>\n",
              "      <td>6.9</td>\n",
              "      <td>5.4</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>55</td>\n",
              "      <td>46.3</td>\n",
              "      <td>...</td>\n",
              "      <td>554</td>\n",
              "      <td>1.1</td>\n",
              "      <td>4.2</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.98</td>\n",
              "      <td>4.20</td>\n",
              "      <td>4.42</td>\n",
              "      <td>3.76</td>\n",
              "      <td>3.98</td>\n",
              "      <td>20.34</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>229</th>\n",
              "      <td>249</td>\n",
              "      <td>Everton</td>\n",
              "      <td>M</td>\n",
              "      <td>A.Doucoure</td>\n",
              "      <td>5.5</td>\n",
              "      <td>1.0</td>\n",
              "      <td>3</td>\n",
              "      <td>1</td>\n",
              "      <td>131</td>\n",
              "      <td>68.4</td>\n",
              "      <td>...</td>\n",
              "      <td>678</td>\n",
              "      <td>0.9</td>\n",
              "      <td>4.5</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.75</td>\n",
              "      <td>4.25</td>\n",
              "      <td>4.00</td>\n",
              "      <td>4.25</td>\n",
              "      <td>4.00</td>\n",
              "      <td>20.25</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>542</th>\n",
              "      <td>369</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>D</td>\n",
              "      <td>Walker</td>\n",
              "      <td>5.3</td>\n",
              "      <td>16.3</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>162</td>\n",
              "      <td>29.0</td>\n",
              "      <td>...</td>\n",
              "      <td>720</td>\n",
              "      <td>1.3</td>\n",
              "      <td>3.6</td>\n",
              "      <td>1.2</td>\n",
              "      <td>3.92</td>\n",
              "      <td>3.92</td>\n",
              "      <td>4.40</td>\n",
              "      <td>3.92</td>\n",
              "      <td>3.76</td>\n",
              "      <td>19.92</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>543</th>\n",
              "      <td>616</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>D</td>\n",
              "      <td>Gvardiol</td>\n",
              "      <td>5.0</td>\n",
              "      <td>4.7</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>98</td>\n",
              "      <td>18.3</td>\n",
              "      <td>...</td>\n",
              "      <td>461</td>\n",
              "      <td>1.3</td>\n",
              "      <td>3.6</td>\n",
              "      <td>1.2</td>\n",
              "      <td>3.92</td>\n",
              "      <td>3.92</td>\n",
              "      <td>4.40</td>\n",
              "      <td>3.92</td>\n",
              "      <td>3.76</td>\n",
              "      <td>19.92</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>170</th>\n",
              "      <td>140</td>\n",
              "      <td>Brighton</td>\n",
              "      <td>M</td>\n",
              "      <td>March</td>\n",
              "      <td>6.4</td>\n",
              "      <td>6.1</td>\n",
              "      <td>3</td>\n",
              "      <td>1</td>\n",
              "      <td>124</td>\n",
              "      <td>44.1</td>\n",
              "      <td>...</td>\n",
              "      <td>465</td>\n",
              "      <td>1.1</td>\n",
              "      <td>3.7</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.36</td>\n",
              "      <td>4.04</td>\n",
              "      <td>4.04</td>\n",
              "      <td>4.21</td>\n",
              "      <td>4.21</td>\n",
              "      <td>19.86</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>388</th>\n",
              "      <td>664</td>\n",
              "      <td>West Ham</td>\n",
              "      <td>M</td>\n",
              "      <td>Ward-Prowse</td>\n",
              "      <td>6.3</td>\n",
              "      <td>13.8</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "      <td>177</td>\n",
              "      <td>57.6</td>\n",
              "      <td>...</td>\n",
              "      <td>620</td>\n",
              "      <td>1.0</td>\n",
              "      <td>3.8</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.62</td>\n",
              "      <td>3.98</td>\n",
              "      <td>3.62</td>\n",
              "      <td>4.16</td>\n",
              "      <td>3.98</td>\n",
              "      <td>19.36</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>534</th>\n",
              "      <td>341</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>D</td>\n",
              "      <td>Akanji</td>\n",
              "      <td>5.0</td>\n",
              "      <td>7.5</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>125</td>\n",
              "      <td>22.2</td>\n",
              "      <td>...</td>\n",
              "      <td>540</td>\n",
              "      <td>1.3</td>\n",
              "      <td>3.5</td>\n",
              "      <td>1.2</td>\n",
              "      <td>3.80</td>\n",
              "      <td>3.80</td>\n",
              "      <td>4.25</td>\n",
              "      <td>3.80</td>\n",
              "      <td>3.65</td>\n",
              "      <td>19.30</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>373</th>\n",
              "      <td>509</td>\n",
              "      <td>Tottenham</td>\n",
              "      <td>M</td>\n",
              "      <td>Richarlison</td>\n",
              "      <td>6.7</td>\n",
              "      <td>2.0</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>31</td>\n",
              "      <td>39.8</td>\n",
              "      <td>...</td>\n",
              "      <td>392</td>\n",
              "      <td>1.0</td>\n",
              "      <td>3.8</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.98</td>\n",
              "      <td>3.80</td>\n",
              "      <td>3.62</td>\n",
              "      <td>4.16</td>\n",
              "      <td>3.62</td>\n",
              "      <td>19.18</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>385</th>\n",
              "      <td>542</td>\n",
              "      <td>West Ham</td>\n",
              "      <td>M</td>\n",
              "      <td>Souček</td>\n",
              "      <td>4.9</td>\n",
              "      <td>0.8</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>105</td>\n",
              "      <td>40.7</td>\n",
              "      <td>...</td>\n",
              "      <td>542</td>\n",
              "      <td>1.0</td>\n",
              "      <td>3.7</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.53</td>\n",
              "      <td>3.87</td>\n",
              "      <td>3.53</td>\n",
              "      <td>4.04</td>\n",
              "      <td>3.87</td>\n",
              "      <td>18.84</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>322</th>\n",
              "      <td>412</td>\n",
              "      <td>Newcastle United</td>\n",
              "      <td>M</td>\n",
              "      <td>Gordon</td>\n",
              "      <td>5.6</td>\n",
              "      <td>5.3</td>\n",
              "      <td>2</td>\n",
              "      <td>4</td>\n",
              "      <td>120</td>\n",
              "      <td>44.1</td>\n",
              "      <td>...</td>\n",
              "      <td>541</td>\n",
              "      <td>1.2</td>\n",
              "      <td>3.5</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.65</td>\n",
              "      <td>3.95</td>\n",
              "      <td>3.50</td>\n",
              "      <td>3.95</td>\n",
              "      <td>3.65</td>\n",
              "      <td>18.70</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>15</th>\n",
              "      <td>132</td>\n",
              "      <td>Brighton</td>\n",
              "      <td>F</td>\n",
              "      <td>Ferguson</td>\n",
              "      <td>6.0</td>\n",
              "      <td>7.0</td>\n",
              "      <td>4</td>\n",
              "      <td>0</td>\n",
              "      <td>105</td>\n",
              "      <td>39.6</td>\n",
              "      <td>...</td>\n",
              "      <td>359</td>\n",
              "      <td>1.1</td>\n",
              "      <td>3.5</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.20</td>\n",
              "      <td>3.80</td>\n",
              "      <td>3.80</td>\n",
              "      <td>3.95</td>\n",
              "      <td>3.95</td>\n",
              "      <td>18.70</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>12</th>\n",
              "      <td>119</td>\n",
              "      <td>Brentford</td>\n",
              "      <td>F</td>\n",
              "      <td>Wissa</td>\n",
              "      <td>5.9</td>\n",
              "      <td>9.6</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>105</td>\n",
              "      <td>42.4</td>\n",
              "      <td>...</td>\n",
              "      <td>668</td>\n",
              "      <td>1.1</td>\n",
              "      <td>3.7</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4.04</td>\n",
              "      <td>3.70</td>\n",
              "      <td>3.87</td>\n",
              "      <td>3.53</td>\n",
              "      <td>3.53</td>\n",
              "      <td>18.67</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>199</th>\n",
              "      <td>199</td>\n",
              "      <td>Chelsea</td>\n",
              "      <td>M</td>\n",
              "      <td>Enzo</td>\n",
              "      <td>4.9</td>\n",
              "      <td>3.4</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>83</td>\n",
              "      <td>47.1</td>\n",
              "      <td>...</td>\n",
              "      <td>687</td>\n",
              "      <td>1.1</td>\n",
              "      <td>3.8</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.62</td>\n",
              "      <td>3.80</td>\n",
              "      <td>3.98</td>\n",
              "      <td>3.44</td>\n",
              "      <td>3.62</td>\n",
              "      <td>18.46</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>204</th>\n",
              "      <td>216</td>\n",
              "      <td>Chelsea</td>\n",
              "      <td>M</td>\n",
              "      <td>Sterling</td>\n",
              "      <td>7.0</td>\n",
              "      <td>9.2</td>\n",
              "      <td>3</td>\n",
              "      <td>3</td>\n",
              "      <td>121</td>\n",
              "      <td>62.7</td>\n",
              "      <td>...</td>\n",
              "      <td>637</td>\n",
              "      <td>1.1</td>\n",
              "      <td>3.8</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.62</td>\n",
              "      <td>3.80</td>\n",
              "      <td>3.98</td>\n",
              "      <td>3.44</td>\n",
              "      <td>3.62</td>\n",
              "      <td>18.46</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>122</th>\n",
              "      <td>599</td>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>M</td>\n",
              "      <td>Diaby</td>\n",
              "      <td>6.7</td>\n",
              "      <td>12.5</td>\n",
              "      <td>2</td>\n",
              "      <td>4</td>\n",
              "      <td>136</td>\n",
              "      <td>52.9</td>\n",
              "      <td>...</td>\n",
              "      <td>620</td>\n",
              "      <td>1.1</td>\n",
              "      <td>3.4</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.54</td>\n",
              "      <td>3.82</td>\n",
              "      <td>3.82</td>\n",
              "      <td>3.68</td>\n",
              "      <td>3.54</td>\n",
              "      <td>18.40</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>297</th>\n",
              "      <td>365</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>M</td>\n",
              "      <td>Rodrigo</td>\n",
              "      <td>5.6</td>\n",
              "      <td>5.8</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>125</td>\n",
              "      <td>44.1</td>\n",
              "      <td>...</td>\n",
              "      <td>480</td>\n",
              "      <td>1.3</td>\n",
              "      <td>3.3</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.56</td>\n",
              "      <td>3.56</td>\n",
              "      <td>3.95</td>\n",
              "      <td>3.56</td>\n",
              "      <td>3.43</td>\n",
              "      <td>18.06</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>538</th>\n",
              "      <td>357</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>D</td>\n",
              "      <td>Laporte</td>\n",
              "      <td>4.9</td>\n",
              "      <td>0.1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>4</td>\n",
              "      <td>2.9</td>\n",
              "      <td>...</td>\n",
              "      <td>11</td>\n",
              "      <td>1.3</td>\n",
              "      <td>3.3</td>\n",
              "      <td>1.2</td>\n",
              "      <td>3.56</td>\n",
              "      <td>3.56</td>\n",
              "      <td>3.95</td>\n",
              "      <td>3.56</td>\n",
              "      <td>3.43</td>\n",
              "      <td>18.06</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>539</th>\n",
              "      <td>358</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>D</td>\n",
              "      <td>R.Lewis</td>\n",
              "      <td>4.3</td>\n",
              "      <td>0.3</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>53</td>\n",
              "      <td>1.9</td>\n",
              "      <td>...</td>\n",
              "      <td>147</td>\n",
              "      <td>1.3</td>\n",
              "      <td>3.3</td>\n",
              "      <td>1.2</td>\n",
              "      <td>3.56</td>\n",
              "      <td>3.56</td>\n",
              "      <td>3.95</td>\n",
              "      <td>3.56</td>\n",
              "      <td>3.43</td>\n",
              "      <td>18.06</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>540</th>\n",
              "      <td>366</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>D</td>\n",
              "      <td>Sergio Gómez</td>\n",
              "      <td>3.9</td>\n",
              "      <td>1.2</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>17</td>\n",
              "      <td>3.8</td>\n",
              "      <td>...</td>\n",
              "      <td>15</td>\n",
              "      <td>1.3</td>\n",
              "      <td>3.3</td>\n",
              "      <td>1.2</td>\n",
              "      <td>3.56</td>\n",
              "      <td>3.56</td>\n",
              "      <td>3.95</td>\n",
              "      <td>3.56</td>\n",
              "      <td>3.43</td>\n",
              "      <td>18.06</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>34</th>\n",
              "      <td>225</td>\n",
              "      <td>Crystal Palace</td>\n",
              "      <td>F</td>\n",
              "      <td>Edouard</td>\n",
              "      <td>5.5</td>\n",
              "      <td>3.6</td>\n",
              "      <td>4</td>\n",
              "      <td>0</td>\n",
              "      <td>122</td>\n",
              "      <td>54.1</td>\n",
              "      <td>...</td>\n",
              "      <td>608</td>\n",
              "      <td>1.0</td>\n",
              "      <td>3.5</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.35</td>\n",
              "      <td>3.50</td>\n",
              "      <td>3.65</td>\n",
              "      <td>3.65</td>\n",
              "      <td>3.80</td>\n",
              "      <td>17.95</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>384</th>\n",
              "      <td>539</td>\n",
              "      <td>West Ham</td>\n",
              "      <td>M</td>\n",
              "      <td>L.Paquetá</td>\n",
              "      <td>6.0</td>\n",
              "      <td>1.9</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>113</td>\n",
              "      <td>39.0</td>\n",
              "      <td>...</td>\n",
              "      <td>710</td>\n",
              "      <td>1.0</td>\n",
              "      <td>3.5</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.35</td>\n",
              "      <td>3.65</td>\n",
              "      <td>3.35</td>\n",
              "      <td>3.80</td>\n",
              "      <td>3.65</td>\n",
              "      <td>17.80</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>411</th>\n",
              "      <td>29</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>D</td>\n",
              "      <td>White</td>\n",
              "      <td>5.6</td>\n",
              "      <td>11.3</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>189</td>\n",
              "      <td>37.7</td>\n",
              "      <td>...</td>\n",
              "      <td>720</td>\n",
              "      <td>1.2</td>\n",
              "      <td>3.3</td>\n",
              "      <td>0.7</td>\n",
              "      <td>3.43</td>\n",
              "      <td>3.82</td>\n",
              "      <td>3.30</td>\n",
              "      <td>3.69</td>\n",
              "      <td>3.43</td>\n",
              "      <td>17.67</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>304</th>\n",
              "      <td>376</td>\n",
              "      <td>Manchester United</td>\n",
              "      <td>M</td>\n",
              "      <td>Casemiro</td>\n",
              "      <td>5.4</td>\n",
              "      <td>3.8</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>94</td>\n",
              "      <td>40.3</td>\n",
              "      <td>...</td>\n",
              "      <td>648</td>\n",
              "      <td>1.1</td>\n",
              "      <td>3.3</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.69</td>\n",
              "      <td>3.04</td>\n",
              "      <td>3.56</td>\n",
              "      <td>3.69</td>\n",
              "      <td>3.56</td>\n",
              "      <td>17.54</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>536</th>\n",
              "      <td>346</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>D</td>\n",
              "      <td>Cancelo</td>\n",
              "      <td>5.8</td>\n",
              "      <td>1.2</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>1.3</td>\n",
              "      <td>3.2</td>\n",
              "      <td>1.2</td>\n",
              "      <td>3.44</td>\n",
              "      <td>3.44</td>\n",
              "      <td>3.80</td>\n",
              "      <td>3.44</td>\n",
              "      <td>3.32</td>\n",
              "      <td>17.44</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>541</th>\n",
              "      <td>368</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>D</td>\n",
              "      <td>Stones</td>\n",
              "      <td>5.3</td>\n",
              "      <td>3.1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>3</td>\n",
              "      <td>0.1</td>\n",
              "      <td>...</td>\n",
              "      <td>22</td>\n",
              "      <td>1.3</td>\n",
              "      <td>3.2</td>\n",
              "      <td>1.2</td>\n",
              "      <td>3.44</td>\n",
              "      <td>3.44</td>\n",
              "      <td>3.80</td>\n",
              "      <td>3.44</td>\n",
              "      <td>3.32</td>\n",
              "      <td>17.44</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>692</th>\n",
              "      <td>347</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>G</td>\n",
              "      <td>Carson</td>\n",
              "      <td>3.9</td>\n",
              "      <td>0.1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>1.3</td>\n",
              "      <td>3.2</td>\n",
              "      <td>1.2</td>\n",
              "      <td>3.44</td>\n",
              "      <td>3.44</td>\n",
              "      <td>3.80</td>\n",
              "      <td>3.44</td>\n",
              "      <td>3.32</td>\n",
              "      <td>17.44</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>693</th>\n",
              "      <td>352</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>G</td>\n",
              "      <td>Ederson M.</td>\n",
              "      <td>5.6</td>\n",
              "      <td>19.5</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>129</td>\n",
              "      <td>13.2</td>\n",
              "      <td>...</td>\n",
              "      <td>720</td>\n",
              "      <td>1.3</td>\n",
              "      <td>3.2</td>\n",
              "      <td>1.2</td>\n",
              "      <td>3.44</td>\n",
              "      <td>3.44</td>\n",
              "      <td>3.80</td>\n",
              "      <td>3.44</td>\n",
              "      <td>3.32</td>\n",
              "      <td>17.44</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>694</th>\n",
              "      <td>361</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>G</td>\n",
              "      <td>Ortega Moreno</td>\n",
              "      <td>3.9</td>\n",
              "      <td>0.7</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>1.3</td>\n",
              "      <td>3.2</td>\n",
              "      <td>1.2</td>\n",
              "      <td>3.44</td>\n",
              "      <td>3.44</td>\n",
              "      <td>3.80</td>\n",
              "      <td>3.44</td>\n",
              "      <td>3.32</td>\n",
              "      <td>17.44</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>695</th>\n",
              "      <td>367</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>G</td>\n",
              "      <td>Steffen</td>\n",
              "      <td>3.9</td>\n",
              "      <td>0.2</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>1.3</td>\n",
              "      <td>3.2</td>\n",
              "      <td>1.2</td>\n",
              "      <td>3.44</td>\n",
              "      <td>3.44</td>\n",
              "      <td>3.80</td>\n",
              "      <td>3.44</td>\n",
              "      <td>3.32</td>\n",
              "      <td>17.44</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>50 rows × 22 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-ccdce993-425d-4431-8700-854c524490b2')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-ccdce993-425d-4431-8700-854c524490b2 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-ccdce993-425d-4431-8700-854c524490b2');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-0b90ac56-e79d-40bb-8e73-b5ee87e6244c\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-0b90ac56-e79d-40bb-8e73-b5ee87e6244c')\"\n",
              "            title=\"Suggest charts.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-0b90ac56-e79d-40bb-8e73-b5ee87e6244c button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 49
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "Top50 = rawdfgw228x.nlargest(50, '5GW Total')\n",
        "Top50"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "id": "Vuuihhw-Jx7s",
        "outputId": "e2590717-0810-4b37-860a-4b7a3540b7e3"
      },
      "execution_count": 50,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "      id               team pos           name  cost  selected_by_percent  \\\n",
              "264  308          Liverpool   M          Salah  12.6                 34.3   \n",
              "61   355    Manchester City   F        Haaland  14.1                 89.2   \n",
              "103   19            Arsenal   M           Saka   8.6                 50.3   \n",
              "151  108          Brentford   M         Mbeumo   6.8                 21.9   \n",
              "65   415   Newcastle United   F           Isak   7.5                 21.3   \n",
              "303  373  Manchester United   M    B.Fernandes   8.4                 17.4   \n",
              "376  516          Tottenham   M            Son   9.4                 33.9   \n",
              "379  526           West Ham   M          Bowen   7.3                 18.0   \n",
              "535  342    Manchester City   D            Aké   5.1                  6.3   \n",
              "371  504          Tottenham   M       Maddison   8.0                 37.7   \n",
              "312  396  Manchester United   M       Rashford   8.8                 21.3   \n",
              "100   14            Arsenal   M       Ødegaard   8.5                 23.1   \n",
              "172  143           Brighton   M         Mitoma   6.6                 40.8   \n",
              "262  303          Liverpool   M      Luis Díaz   7.5                  9.6   \n",
              "5     60        Aston Villa   F        Watkins   8.1                 29.8   \n",
              "60   343    Manchester City   F      J.Alvarez   7.0                 32.5   \n",
              "217  226     Crystal Palace   M            Eze   6.2                  5.1   \n",
              "113   43        Aston Villa   M   Douglas Luiz   5.4                  3.6   \n",
              "537  350    Manchester City   D          Rúben   5.5                  8.2   \n",
              "16   135           Brighton   F     João Pedro   5.3                  9.7   \n",
              "49   293          Liverpool   F         Darwin   7.4                 12.4   \n",
              "29   211            Chelsea   F      N.Jackson   6.9                  5.4   \n",
              "229  249            Everton   M     A.Doucoure   5.5                  1.0   \n",
              "542  369    Manchester City   D         Walker   5.3                 16.3   \n",
              "543  616    Manchester City   D       Gvardiol   5.0                  4.7   \n",
              "170  140           Brighton   M          March   6.4                  6.1   \n",
              "388  664           West Ham   M    Ward-Prowse   6.3                 13.8   \n",
              "534  341    Manchester City   D         Akanji   5.0                  7.5   \n",
              "373  509          Tottenham   M    Richarlison   6.7                  2.0   \n",
              "385  542           West Ham   M         Souček   4.9                  0.8   \n",
              "322  412   Newcastle United   M         Gordon   5.6                  5.3   \n",
              "15   132           Brighton   F       Ferguson   6.0                  7.0   \n",
              "12   119          Brentford   F          Wissa   5.9                  9.6   \n",
              "199  199            Chelsea   M           Enzo   4.9                  3.4   \n",
              "204  216            Chelsea   M       Sterling   7.0                  9.2   \n",
              "122  599        Aston Villa   M          Diaby   6.7                 12.5   \n",
              "297  365    Manchester City   M        Rodrigo   5.6                  5.8   \n",
              "538  357    Manchester City   D        Laporte   4.9                  0.1   \n",
              "539  358    Manchester City   D        R.Lewis   4.3                  0.3   \n",
              "540  366    Manchester City   D   Sergio Gómez   3.9                  1.2   \n",
              "34   225     Crystal Palace   F        Edouard   5.5                  3.6   \n",
              "384  539           West Ham   M      L.Paquetá   6.0                  1.9   \n",
              "411   29            Arsenal   D          White   5.6                 11.3   \n",
              "304  376  Manchester United   M       Casemiro   5.4                  3.8   \n",
              "536  346    Manchester City   D        Cancelo   5.8                  1.2   \n",
              "541  368    Manchester City   D         Stones   5.3                  3.1   \n",
              "692  347    Manchester City   G         Carson   3.9                  0.1   \n",
              "693  352    Manchester City   G     Ederson M.   5.6                 19.5   \n",
              "694  361    Manchester City   G  Ortega Moreno   3.9                  0.7   \n",
              "695  367    Manchester City   G        Steffen   3.9                  0.2   \n",
              "\n",
              "     goals_scored  assists  bps  ict_index  ...  minutes  home_adjustment  \\\n",
              "264             5        4  192       89.2  ...      684              1.2   \n",
              "61              8        1  218       86.1  ...      709              1.3   \n",
              "103             4        3  195       85.3  ...      613              1.2   \n",
              "151             4        0  121       64.6  ...      720              1.1   \n",
              "65              6        0  170       54.2  ...      471              1.2   \n",
              "303             2        1  146       74.4  ...      720              1.1   \n",
              "376             6        0  178       70.5  ...      625              1.0   \n",
              "379             5        1  151       66.9  ...      720              1.0   \n",
              "535             1        0  108       21.6  ...      461              1.3   \n",
              "371             2        5  185       88.8  ...      668              1.0   \n",
              "312             1        2   81       52.1  ...      669              1.1   \n",
              "100             3        2  153       61.6  ...      712              1.2   \n",
              "172             3        3  132       68.2  ...      665              1.1   \n",
              "262             2        0   67       35.5  ...      544              1.2   \n",
              "5               4        7  203       74.6  ...      680              1.1   \n",
              "60              3        5  193       69.1  ...      662              1.3   \n",
              "217             1        1  110       60.9  ...      627              1.0   \n",
              "113             3        0  161       42.5  ...      669              1.1   \n",
              "537             0        0  110       23.9  ...      630              1.3   \n",
              "16              2        1   91       46.9  ...      412              1.1   \n",
              "49              3        3  109       36.2  ...      309              1.2   \n",
              "29              2        0   55       46.3  ...      554              1.1   \n",
              "229             3        1  131       68.4  ...      678              0.9   \n",
              "542             0        1  162       29.0  ...      720              1.3   \n",
              "543             0        0   98       18.3  ...      461              1.3   \n",
              "170             3        1  124       44.1  ...      465              1.1   \n",
              "388             2        3  177       57.6  ...      620              1.0   \n",
              "534             0        0  125       22.2  ...      540              1.3   \n",
              "373             1        2   31       39.8  ...      392              1.0   \n",
              "385             2        1  105       40.7  ...      542              1.0   \n",
              "322             2        4  120       44.1  ...      541              1.2   \n",
              "15              4        0  105       39.6  ...      359              1.1   \n",
              "12              2        2  105       42.4  ...      668              1.1   \n",
              "199             0        0   83       47.1  ...      687              1.1   \n",
              "204             3        3  121       62.7  ...      637              1.1   \n",
              "122             2        4  136       52.9  ...      620              1.1   \n",
              "297             2        1  125       44.1  ...      480              1.3   \n",
              "538             0        0    4        2.9  ...       11              1.3   \n",
              "539             0        0   53        1.9  ...      147              1.3   \n",
              "540             0        1   17        3.8  ...       15              1.3   \n",
              "34              4        0  122       54.1  ...      608              1.0   \n",
              "384             1        1  113       39.0  ...      710              1.0   \n",
              "411             1        1  189       37.7  ...      720              1.2   \n",
              "304             1        0   94       40.3  ...      648              1.1   \n",
              "536             0        0    0        0.0  ...        0              1.3   \n",
              "541             0        0    3        0.1  ...       22              1.3   \n",
              "692             0        0    0        0.0  ...        0              1.3   \n",
              "693             0        0  129       13.2  ...      720              1.3   \n",
              "694             0        0    0        0.0  ...        0              1.3   \n",
              "695             0        0    0        0.0  ...        0              1.3   \n",
              "\n",
              "     xPallgw  xCSP   gw9  gw10  gw11  gw12  gw13  5GW Total  \n",
              "264      6.3   NaN  7.59  8.02  8.02  6.73  5.87      36.23  \n",
              "61       6.1   NaN  6.92  6.92  8.15  6.92  6.51      35.42  \n",
              "103      5.4   NaN  5.74  6.76  5.40  6.42  5.74      30.06  \n",
              "151      5.5   NaN  6.20  5.50  5.85  5.15  5.15      27.85  \n",
              "65       4.8   NaN  5.08  5.64  4.80  5.64  5.08      26.24  \n",
              "303      4.7   NaN  5.51  4.16  5.24  5.51  5.24      25.66  \n",
              "376      4.7   NaN  4.97  4.70  4.43  5.24  4.43      23.77  \n",
              "379      4.6   NaN  4.34  4.86  4.34  5.12  4.86      23.52  \n",
              "535      4.0   1.2  4.40  4.40  5.00  4.40  4.20      22.40  \n",
              "371      4.4   NaN  4.64  4.40  4.16  4.88  4.16      22.24  \n",
              "312      4.1   NaN  4.73  3.68  4.52  4.73  4.52      22.18  \n",
              "100      4.0   NaN  4.20  4.80  4.00  4.60  4.20      21.80  \n",
              "172      4.0   NaN  3.60  4.40  4.40  4.60  4.60      21.60  \n",
              "262      3.9   NaN  4.47  4.66  4.66  4.09  3.71      21.59  \n",
              "5        3.9   NaN  4.09  4.47  4.47  4.28  4.09      21.40  \n",
              "60       3.8   NaN  4.16  4.16  4.70  4.16  3.98      21.16  \n",
              "217      4.1   NaN  3.89  4.10  4.31  4.31  4.52      21.13  \n",
              "113      3.8   NaN  3.98  4.34  4.34  4.16  3.98      20.80  \n",
              "537      3.7   1.2  4.04  4.04  4.55  4.04  3.87      20.54  \n",
              "16       3.8   NaN  3.44  4.16  4.16  4.34  4.34      20.44  \n",
              "49       3.7   NaN  4.21  4.38  4.38  3.87  3.53      20.37  \n",
              "29       4.2   NaN  3.98  4.20  4.42  3.76  3.98      20.34  \n",
              "229      4.5   NaN  3.75  4.25  4.00  4.25  4.00      20.25  \n",
              "542      3.6   1.2  3.92  3.92  4.40  3.92  3.76      19.92  \n",
              "543      3.6   1.2  3.92  3.92  4.40  3.92  3.76      19.92  \n",
              "170      3.7   NaN  3.36  4.04  4.04  4.21  4.21      19.86  \n",
              "388      3.8   NaN  3.62  3.98  3.62  4.16  3.98      19.36  \n",
              "534      3.5   1.2  3.80  3.80  4.25  3.80  3.65      19.30  \n",
              "373      3.8   NaN  3.98  3.80  3.62  4.16  3.62      19.18  \n",
              "385      3.7   NaN  3.53  3.87  3.53  4.04  3.87      18.84  \n",
              "322      3.5   NaN  3.65  3.95  3.50  3.95  3.65      18.70  \n",
              "15       3.5   NaN  3.20  3.80  3.80  3.95  3.95      18.70  \n",
              "12       3.7   NaN  4.04  3.70  3.87  3.53  3.53      18.67  \n",
              "199      3.8   NaN  3.62  3.80  3.98  3.44  3.62      18.46  \n",
              "204      3.8   NaN  3.62  3.80  3.98  3.44  3.62      18.46  \n",
              "122      3.4   NaN  3.54  3.82  3.82  3.68  3.54      18.40  \n",
              "297      3.3   NaN  3.56  3.56  3.95  3.56  3.43      18.06  \n",
              "538      3.3   1.2  3.56  3.56  3.95  3.56  3.43      18.06  \n",
              "539      3.3   1.2  3.56  3.56  3.95  3.56  3.43      18.06  \n",
              "540      3.3   1.2  3.56  3.56  3.95  3.56  3.43      18.06  \n",
              "34       3.5   NaN  3.35  3.50  3.65  3.65  3.80      17.95  \n",
              "384      3.5   NaN  3.35  3.65  3.35  3.80  3.65      17.80  \n",
              "411      3.3   0.7  3.43  3.82  3.30  3.69  3.43      17.67  \n",
              "304      3.3   NaN  3.69  3.04  3.56  3.69  3.56      17.54  \n",
              "536      3.2   1.2  3.44  3.44  3.80  3.44  3.32      17.44  \n",
              "541      3.2   1.2  3.44  3.44  3.80  3.44  3.32      17.44  \n",
              "692      3.2   1.2  3.44  3.44  3.80  3.44  3.32      17.44  \n",
              "693      3.2   1.2  3.44  3.44  3.80  3.44  3.32      17.44  \n",
              "694      3.2   1.2  3.44  3.44  3.80  3.44  3.32      17.44  \n",
              "695      3.2   1.2  3.44  3.44  3.80  3.44  3.32      17.44  \n",
              "\n",
              "[50 rows x 22 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-91b741a1-ec20-490d-a261-9be51093a299\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>team</th>\n",
              "      <th>pos</th>\n",
              "      <th>name</th>\n",
              "      <th>cost</th>\n",
              "      <th>selected_by_percent</th>\n",
              "      <th>goals_scored</th>\n",
              "      <th>assists</th>\n",
              "      <th>bps</th>\n",
              "      <th>ict_index</th>\n",
              "      <th>...</th>\n",
              "      <th>minutes</th>\n",
              "      <th>home_adjustment</th>\n",
              "      <th>xPallgw</th>\n",
              "      <th>xCSP</th>\n",
              "      <th>gw9</th>\n",
              "      <th>gw10</th>\n",
              "      <th>gw11</th>\n",
              "      <th>gw12</th>\n",
              "      <th>gw13</th>\n",
              "      <th>5GW Total</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>264</th>\n",
              "      <td>308</td>\n",
              "      <td>Liverpool</td>\n",
              "      <td>M</td>\n",
              "      <td>Salah</td>\n",
              "      <td>12.6</td>\n",
              "      <td>34.3</td>\n",
              "      <td>5</td>\n",
              "      <td>4</td>\n",
              "      <td>192</td>\n",
              "      <td>89.2</td>\n",
              "      <td>...</td>\n",
              "      <td>684</td>\n",
              "      <td>1.2</td>\n",
              "      <td>6.3</td>\n",
              "      <td>NaN</td>\n",
              "      <td>7.59</td>\n",
              "      <td>8.02</td>\n",
              "      <td>8.02</td>\n",
              "      <td>6.73</td>\n",
              "      <td>5.87</td>\n",
              "      <td>36.23</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>61</th>\n",
              "      <td>355</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>F</td>\n",
              "      <td>Haaland</td>\n",
              "      <td>14.1</td>\n",
              "      <td>89.2</td>\n",
              "      <td>8</td>\n",
              "      <td>1</td>\n",
              "      <td>218</td>\n",
              "      <td>86.1</td>\n",
              "      <td>...</td>\n",
              "      <td>709</td>\n",
              "      <td>1.3</td>\n",
              "      <td>6.1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>6.92</td>\n",
              "      <td>6.92</td>\n",
              "      <td>8.15</td>\n",
              "      <td>6.92</td>\n",
              "      <td>6.51</td>\n",
              "      <td>35.42</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>103</th>\n",
              "      <td>19</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>M</td>\n",
              "      <td>Saka</td>\n",
              "      <td>8.6</td>\n",
              "      <td>50.3</td>\n",
              "      <td>4</td>\n",
              "      <td>3</td>\n",
              "      <td>195</td>\n",
              "      <td>85.3</td>\n",
              "      <td>...</td>\n",
              "      <td>613</td>\n",
              "      <td>1.2</td>\n",
              "      <td>5.4</td>\n",
              "      <td>NaN</td>\n",
              "      <td>5.74</td>\n",
              "      <td>6.76</td>\n",
              "      <td>5.40</td>\n",
              "      <td>6.42</td>\n",
              "      <td>5.74</td>\n",
              "      <td>30.06</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>151</th>\n",
              "      <td>108</td>\n",
              "      <td>Brentford</td>\n",
              "      <td>M</td>\n",
              "      <td>Mbeumo</td>\n",
              "      <td>6.8</td>\n",
              "      <td>21.9</td>\n",
              "      <td>4</td>\n",
              "      <td>0</td>\n",
              "      <td>121</td>\n",
              "      <td>64.6</td>\n",
              "      <td>...</td>\n",
              "      <td>720</td>\n",
              "      <td>1.1</td>\n",
              "      <td>5.5</td>\n",
              "      <td>NaN</td>\n",
              "      <td>6.20</td>\n",
              "      <td>5.50</td>\n",
              "      <td>5.85</td>\n",
              "      <td>5.15</td>\n",
              "      <td>5.15</td>\n",
              "      <td>27.85</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>65</th>\n",
              "      <td>415</td>\n",
              "      <td>Newcastle United</td>\n",
              "      <td>F</td>\n",
              "      <td>Isak</td>\n",
              "      <td>7.5</td>\n",
              "      <td>21.3</td>\n",
              "      <td>6</td>\n",
              "      <td>0</td>\n",
              "      <td>170</td>\n",
              "      <td>54.2</td>\n",
              "      <td>...</td>\n",
              "      <td>471</td>\n",
              "      <td>1.2</td>\n",
              "      <td>4.8</td>\n",
              "      <td>NaN</td>\n",
              "      <td>5.08</td>\n",
              "      <td>5.64</td>\n",
              "      <td>4.80</td>\n",
              "      <td>5.64</td>\n",
              "      <td>5.08</td>\n",
              "      <td>26.24</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>303</th>\n",
              "      <td>373</td>\n",
              "      <td>Manchester United</td>\n",
              "      <td>M</td>\n",
              "      <td>B.Fernandes</td>\n",
              "      <td>8.4</td>\n",
              "      <td>17.4</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>146</td>\n",
              "      <td>74.4</td>\n",
              "      <td>...</td>\n",
              "      <td>720</td>\n",
              "      <td>1.1</td>\n",
              "      <td>4.7</td>\n",
              "      <td>NaN</td>\n",
              "      <td>5.51</td>\n",
              "      <td>4.16</td>\n",
              "      <td>5.24</td>\n",
              "      <td>5.51</td>\n",
              "      <td>5.24</td>\n",
              "      <td>25.66</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>376</th>\n",
              "      <td>516</td>\n",
              "      <td>Tottenham</td>\n",
              "      <td>M</td>\n",
              "      <td>Son</td>\n",
              "      <td>9.4</td>\n",
              "      <td>33.9</td>\n",
              "      <td>6</td>\n",
              "      <td>0</td>\n",
              "      <td>178</td>\n",
              "      <td>70.5</td>\n",
              "      <td>...</td>\n",
              "      <td>625</td>\n",
              "      <td>1.0</td>\n",
              "      <td>4.7</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4.97</td>\n",
              "      <td>4.70</td>\n",
              "      <td>4.43</td>\n",
              "      <td>5.24</td>\n",
              "      <td>4.43</td>\n",
              "      <td>23.77</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>379</th>\n",
              "      <td>526</td>\n",
              "      <td>West Ham</td>\n",
              "      <td>M</td>\n",
              "      <td>Bowen</td>\n",
              "      <td>7.3</td>\n",
              "      <td>18.0</td>\n",
              "      <td>5</td>\n",
              "      <td>1</td>\n",
              "      <td>151</td>\n",
              "      <td>66.9</td>\n",
              "      <td>...</td>\n",
              "      <td>720</td>\n",
              "      <td>1.0</td>\n",
              "      <td>4.6</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4.34</td>\n",
              "      <td>4.86</td>\n",
              "      <td>4.34</td>\n",
              "      <td>5.12</td>\n",
              "      <td>4.86</td>\n",
              "      <td>23.52</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>535</th>\n",
              "      <td>342</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>D</td>\n",
              "      <td>Aké</td>\n",
              "      <td>5.1</td>\n",
              "      <td>6.3</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>108</td>\n",
              "      <td>21.6</td>\n",
              "      <td>...</td>\n",
              "      <td>461</td>\n",
              "      <td>1.3</td>\n",
              "      <td>4.0</td>\n",
              "      <td>1.2</td>\n",
              "      <td>4.40</td>\n",
              "      <td>4.40</td>\n",
              "      <td>5.00</td>\n",
              "      <td>4.40</td>\n",
              "      <td>4.20</td>\n",
              "      <td>22.40</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>371</th>\n",
              "      <td>504</td>\n",
              "      <td>Tottenham</td>\n",
              "      <td>M</td>\n",
              "      <td>Maddison</td>\n",
              "      <td>8.0</td>\n",
              "      <td>37.7</td>\n",
              "      <td>2</td>\n",
              "      <td>5</td>\n",
              "      <td>185</td>\n",
              "      <td>88.8</td>\n",
              "      <td>...</td>\n",
              "      <td>668</td>\n",
              "      <td>1.0</td>\n",
              "      <td>4.4</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4.64</td>\n",
              "      <td>4.40</td>\n",
              "      <td>4.16</td>\n",
              "      <td>4.88</td>\n",
              "      <td>4.16</td>\n",
              "      <td>22.24</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>312</th>\n",
              "      <td>396</td>\n",
              "      <td>Manchester United</td>\n",
              "      <td>M</td>\n",
              "      <td>Rashford</td>\n",
              "      <td>8.8</td>\n",
              "      <td>21.3</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>81</td>\n",
              "      <td>52.1</td>\n",
              "      <td>...</td>\n",
              "      <td>669</td>\n",
              "      <td>1.1</td>\n",
              "      <td>4.1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4.73</td>\n",
              "      <td>3.68</td>\n",
              "      <td>4.52</td>\n",
              "      <td>4.73</td>\n",
              "      <td>4.52</td>\n",
              "      <td>22.18</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>100</th>\n",
              "      <td>14</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>M</td>\n",
              "      <td>Ødegaard</td>\n",
              "      <td>8.5</td>\n",
              "      <td>23.1</td>\n",
              "      <td>3</td>\n",
              "      <td>2</td>\n",
              "      <td>153</td>\n",
              "      <td>61.6</td>\n",
              "      <td>...</td>\n",
              "      <td>712</td>\n",
              "      <td>1.2</td>\n",
              "      <td>4.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4.20</td>\n",
              "      <td>4.80</td>\n",
              "      <td>4.00</td>\n",
              "      <td>4.60</td>\n",
              "      <td>4.20</td>\n",
              "      <td>21.80</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>172</th>\n",
              "      <td>143</td>\n",
              "      <td>Brighton</td>\n",
              "      <td>M</td>\n",
              "      <td>Mitoma</td>\n",
              "      <td>6.6</td>\n",
              "      <td>40.8</td>\n",
              "      <td>3</td>\n",
              "      <td>3</td>\n",
              "      <td>132</td>\n",
              "      <td>68.2</td>\n",
              "      <td>...</td>\n",
              "      <td>665</td>\n",
              "      <td>1.1</td>\n",
              "      <td>4.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.60</td>\n",
              "      <td>4.40</td>\n",
              "      <td>4.40</td>\n",
              "      <td>4.60</td>\n",
              "      <td>4.60</td>\n",
              "      <td>21.60</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>262</th>\n",
              "      <td>303</td>\n",
              "      <td>Liverpool</td>\n",
              "      <td>M</td>\n",
              "      <td>Luis Díaz</td>\n",
              "      <td>7.5</td>\n",
              "      <td>9.6</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>67</td>\n",
              "      <td>35.5</td>\n",
              "      <td>...</td>\n",
              "      <td>544</td>\n",
              "      <td>1.2</td>\n",
              "      <td>3.9</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4.47</td>\n",
              "      <td>4.66</td>\n",
              "      <td>4.66</td>\n",
              "      <td>4.09</td>\n",
              "      <td>3.71</td>\n",
              "      <td>21.59</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>60</td>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>F</td>\n",
              "      <td>Watkins</td>\n",
              "      <td>8.1</td>\n",
              "      <td>29.8</td>\n",
              "      <td>4</td>\n",
              "      <td>7</td>\n",
              "      <td>203</td>\n",
              "      <td>74.6</td>\n",
              "      <td>...</td>\n",
              "      <td>680</td>\n",
              "      <td>1.1</td>\n",
              "      <td>3.9</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4.09</td>\n",
              "      <td>4.47</td>\n",
              "      <td>4.47</td>\n",
              "      <td>4.28</td>\n",
              "      <td>4.09</td>\n",
              "      <td>21.40</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>60</th>\n",
              "      <td>343</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>F</td>\n",
              "      <td>J.Alvarez</td>\n",
              "      <td>7.0</td>\n",
              "      <td>32.5</td>\n",
              "      <td>3</td>\n",
              "      <td>5</td>\n",
              "      <td>193</td>\n",
              "      <td>69.1</td>\n",
              "      <td>...</td>\n",
              "      <td>662</td>\n",
              "      <td>1.3</td>\n",
              "      <td>3.8</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4.16</td>\n",
              "      <td>4.16</td>\n",
              "      <td>4.70</td>\n",
              "      <td>4.16</td>\n",
              "      <td>3.98</td>\n",
              "      <td>21.16</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>217</th>\n",
              "      <td>226</td>\n",
              "      <td>Crystal Palace</td>\n",
              "      <td>M</td>\n",
              "      <td>Eze</td>\n",
              "      <td>6.2</td>\n",
              "      <td>5.1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>110</td>\n",
              "      <td>60.9</td>\n",
              "      <td>...</td>\n",
              "      <td>627</td>\n",
              "      <td>1.0</td>\n",
              "      <td>4.1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.89</td>\n",
              "      <td>4.10</td>\n",
              "      <td>4.31</td>\n",
              "      <td>4.31</td>\n",
              "      <td>4.52</td>\n",
              "      <td>21.13</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>113</th>\n",
              "      <td>43</td>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>M</td>\n",
              "      <td>Douglas Luiz</td>\n",
              "      <td>5.4</td>\n",
              "      <td>3.6</td>\n",
              "      <td>3</td>\n",
              "      <td>0</td>\n",
              "      <td>161</td>\n",
              "      <td>42.5</td>\n",
              "      <td>...</td>\n",
              "      <td>669</td>\n",
              "      <td>1.1</td>\n",
              "      <td>3.8</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.98</td>\n",
              "      <td>4.34</td>\n",
              "      <td>4.34</td>\n",
              "      <td>4.16</td>\n",
              "      <td>3.98</td>\n",
              "      <td>20.80</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>537</th>\n",
              "      <td>350</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>D</td>\n",
              "      <td>Rúben</td>\n",
              "      <td>5.5</td>\n",
              "      <td>8.2</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>110</td>\n",
              "      <td>23.9</td>\n",
              "      <td>...</td>\n",
              "      <td>630</td>\n",
              "      <td>1.3</td>\n",
              "      <td>3.7</td>\n",
              "      <td>1.2</td>\n",
              "      <td>4.04</td>\n",
              "      <td>4.04</td>\n",
              "      <td>4.55</td>\n",
              "      <td>4.04</td>\n",
              "      <td>3.87</td>\n",
              "      <td>20.54</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>16</th>\n",
              "      <td>135</td>\n",
              "      <td>Brighton</td>\n",
              "      <td>F</td>\n",
              "      <td>João Pedro</td>\n",
              "      <td>5.3</td>\n",
              "      <td>9.7</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>91</td>\n",
              "      <td>46.9</td>\n",
              "      <td>...</td>\n",
              "      <td>412</td>\n",
              "      <td>1.1</td>\n",
              "      <td>3.8</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.44</td>\n",
              "      <td>4.16</td>\n",
              "      <td>4.16</td>\n",
              "      <td>4.34</td>\n",
              "      <td>4.34</td>\n",
              "      <td>20.44</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>49</th>\n",
              "      <td>293</td>\n",
              "      <td>Liverpool</td>\n",
              "      <td>F</td>\n",
              "      <td>Darwin</td>\n",
              "      <td>7.4</td>\n",
              "      <td>12.4</td>\n",
              "      <td>3</td>\n",
              "      <td>3</td>\n",
              "      <td>109</td>\n",
              "      <td>36.2</td>\n",
              "      <td>...</td>\n",
              "      <td>309</td>\n",
              "      <td>1.2</td>\n",
              "      <td>3.7</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4.21</td>\n",
              "      <td>4.38</td>\n",
              "      <td>4.38</td>\n",
              "      <td>3.87</td>\n",
              "      <td>3.53</td>\n",
              "      <td>20.37</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>29</th>\n",
              "      <td>211</td>\n",
              "      <td>Chelsea</td>\n",
              "      <td>F</td>\n",
              "      <td>N.Jackson</td>\n",
              "      <td>6.9</td>\n",
              "      <td>5.4</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>55</td>\n",
              "      <td>46.3</td>\n",
              "      <td>...</td>\n",
              "      <td>554</td>\n",
              "      <td>1.1</td>\n",
              "      <td>4.2</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.98</td>\n",
              "      <td>4.20</td>\n",
              "      <td>4.42</td>\n",
              "      <td>3.76</td>\n",
              "      <td>3.98</td>\n",
              "      <td>20.34</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>229</th>\n",
              "      <td>249</td>\n",
              "      <td>Everton</td>\n",
              "      <td>M</td>\n",
              "      <td>A.Doucoure</td>\n",
              "      <td>5.5</td>\n",
              "      <td>1.0</td>\n",
              "      <td>3</td>\n",
              "      <td>1</td>\n",
              "      <td>131</td>\n",
              "      <td>68.4</td>\n",
              "      <td>...</td>\n",
              "      <td>678</td>\n",
              "      <td>0.9</td>\n",
              "      <td>4.5</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.75</td>\n",
              "      <td>4.25</td>\n",
              "      <td>4.00</td>\n",
              "      <td>4.25</td>\n",
              "      <td>4.00</td>\n",
              "      <td>20.25</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>542</th>\n",
              "      <td>369</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>D</td>\n",
              "      <td>Walker</td>\n",
              "      <td>5.3</td>\n",
              "      <td>16.3</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>162</td>\n",
              "      <td>29.0</td>\n",
              "      <td>...</td>\n",
              "      <td>720</td>\n",
              "      <td>1.3</td>\n",
              "      <td>3.6</td>\n",
              "      <td>1.2</td>\n",
              "      <td>3.92</td>\n",
              "      <td>3.92</td>\n",
              "      <td>4.40</td>\n",
              "      <td>3.92</td>\n",
              "      <td>3.76</td>\n",
              "      <td>19.92</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>543</th>\n",
              "      <td>616</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>D</td>\n",
              "      <td>Gvardiol</td>\n",
              "      <td>5.0</td>\n",
              "      <td>4.7</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>98</td>\n",
              "      <td>18.3</td>\n",
              "      <td>...</td>\n",
              "      <td>461</td>\n",
              "      <td>1.3</td>\n",
              "      <td>3.6</td>\n",
              "      <td>1.2</td>\n",
              "      <td>3.92</td>\n",
              "      <td>3.92</td>\n",
              "      <td>4.40</td>\n",
              "      <td>3.92</td>\n",
              "      <td>3.76</td>\n",
              "      <td>19.92</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>170</th>\n",
              "      <td>140</td>\n",
              "      <td>Brighton</td>\n",
              "      <td>M</td>\n",
              "      <td>March</td>\n",
              "      <td>6.4</td>\n",
              "      <td>6.1</td>\n",
              "      <td>3</td>\n",
              "      <td>1</td>\n",
              "      <td>124</td>\n",
              "      <td>44.1</td>\n",
              "      <td>...</td>\n",
              "      <td>465</td>\n",
              "      <td>1.1</td>\n",
              "      <td>3.7</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.36</td>\n",
              "      <td>4.04</td>\n",
              "      <td>4.04</td>\n",
              "      <td>4.21</td>\n",
              "      <td>4.21</td>\n",
              "      <td>19.86</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>388</th>\n",
              "      <td>664</td>\n",
              "      <td>West Ham</td>\n",
              "      <td>M</td>\n",
              "      <td>Ward-Prowse</td>\n",
              "      <td>6.3</td>\n",
              "      <td>13.8</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "      <td>177</td>\n",
              "      <td>57.6</td>\n",
              "      <td>...</td>\n",
              "      <td>620</td>\n",
              "      <td>1.0</td>\n",
              "      <td>3.8</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.62</td>\n",
              "      <td>3.98</td>\n",
              "      <td>3.62</td>\n",
              "      <td>4.16</td>\n",
              "      <td>3.98</td>\n",
              "      <td>19.36</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>534</th>\n",
              "      <td>341</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>D</td>\n",
              "      <td>Akanji</td>\n",
              "      <td>5.0</td>\n",
              "      <td>7.5</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>125</td>\n",
              "      <td>22.2</td>\n",
              "      <td>...</td>\n",
              "      <td>540</td>\n",
              "      <td>1.3</td>\n",
              "      <td>3.5</td>\n",
              "      <td>1.2</td>\n",
              "      <td>3.80</td>\n",
              "      <td>3.80</td>\n",
              "      <td>4.25</td>\n",
              "      <td>3.80</td>\n",
              "      <td>3.65</td>\n",
              "      <td>19.30</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>373</th>\n",
              "      <td>509</td>\n",
              "      <td>Tottenham</td>\n",
              "      <td>M</td>\n",
              "      <td>Richarlison</td>\n",
              "      <td>6.7</td>\n",
              "      <td>2.0</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>31</td>\n",
              "      <td>39.8</td>\n",
              "      <td>...</td>\n",
              "      <td>392</td>\n",
              "      <td>1.0</td>\n",
              "      <td>3.8</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.98</td>\n",
              "      <td>3.80</td>\n",
              "      <td>3.62</td>\n",
              "      <td>4.16</td>\n",
              "      <td>3.62</td>\n",
              "      <td>19.18</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>385</th>\n",
              "      <td>542</td>\n",
              "      <td>West Ham</td>\n",
              "      <td>M</td>\n",
              "      <td>Souček</td>\n",
              "      <td>4.9</td>\n",
              "      <td>0.8</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>105</td>\n",
              "      <td>40.7</td>\n",
              "      <td>...</td>\n",
              "      <td>542</td>\n",
              "      <td>1.0</td>\n",
              "      <td>3.7</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.53</td>\n",
              "      <td>3.87</td>\n",
              "      <td>3.53</td>\n",
              "      <td>4.04</td>\n",
              "      <td>3.87</td>\n",
              "      <td>18.84</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>322</th>\n",
              "      <td>412</td>\n",
              "      <td>Newcastle United</td>\n",
              "      <td>M</td>\n",
              "      <td>Gordon</td>\n",
              "      <td>5.6</td>\n",
              "      <td>5.3</td>\n",
              "      <td>2</td>\n",
              "      <td>4</td>\n",
              "      <td>120</td>\n",
              "      <td>44.1</td>\n",
              "      <td>...</td>\n",
              "      <td>541</td>\n",
              "      <td>1.2</td>\n",
              "      <td>3.5</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.65</td>\n",
              "      <td>3.95</td>\n",
              "      <td>3.50</td>\n",
              "      <td>3.95</td>\n",
              "      <td>3.65</td>\n",
              "      <td>18.70</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>15</th>\n",
              "      <td>132</td>\n",
              "      <td>Brighton</td>\n",
              "      <td>F</td>\n",
              "      <td>Ferguson</td>\n",
              "      <td>6.0</td>\n",
              "      <td>7.0</td>\n",
              "      <td>4</td>\n",
              "      <td>0</td>\n",
              "      <td>105</td>\n",
              "      <td>39.6</td>\n",
              "      <td>...</td>\n",
              "      <td>359</td>\n",
              "      <td>1.1</td>\n",
              "      <td>3.5</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.20</td>\n",
              "      <td>3.80</td>\n",
              "      <td>3.80</td>\n",
              "      <td>3.95</td>\n",
              "      <td>3.95</td>\n",
              "      <td>18.70</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>12</th>\n",
              "      <td>119</td>\n",
              "      <td>Brentford</td>\n",
              "      <td>F</td>\n",
              "      <td>Wissa</td>\n",
              "      <td>5.9</td>\n",
              "      <td>9.6</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>105</td>\n",
              "      <td>42.4</td>\n",
              "      <td>...</td>\n",
              "      <td>668</td>\n",
              "      <td>1.1</td>\n",
              "      <td>3.7</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4.04</td>\n",
              "      <td>3.70</td>\n",
              "      <td>3.87</td>\n",
              "      <td>3.53</td>\n",
              "      <td>3.53</td>\n",
              "      <td>18.67</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>199</th>\n",
              "      <td>199</td>\n",
              "      <td>Chelsea</td>\n",
              "      <td>M</td>\n",
              "      <td>Enzo</td>\n",
              "      <td>4.9</td>\n",
              "      <td>3.4</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>83</td>\n",
              "      <td>47.1</td>\n",
              "      <td>...</td>\n",
              "      <td>687</td>\n",
              "      <td>1.1</td>\n",
              "      <td>3.8</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.62</td>\n",
              "      <td>3.80</td>\n",
              "      <td>3.98</td>\n",
              "      <td>3.44</td>\n",
              "      <td>3.62</td>\n",
              "      <td>18.46</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>204</th>\n",
              "      <td>216</td>\n",
              "      <td>Chelsea</td>\n",
              "      <td>M</td>\n",
              "      <td>Sterling</td>\n",
              "      <td>7.0</td>\n",
              "      <td>9.2</td>\n",
              "      <td>3</td>\n",
              "      <td>3</td>\n",
              "      <td>121</td>\n",
              "      <td>62.7</td>\n",
              "      <td>...</td>\n",
              "      <td>637</td>\n",
              "      <td>1.1</td>\n",
              "      <td>3.8</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.62</td>\n",
              "      <td>3.80</td>\n",
              "      <td>3.98</td>\n",
              "      <td>3.44</td>\n",
              "      <td>3.62</td>\n",
              "      <td>18.46</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>122</th>\n",
              "      <td>599</td>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>M</td>\n",
              "      <td>Diaby</td>\n",
              "      <td>6.7</td>\n",
              "      <td>12.5</td>\n",
              "      <td>2</td>\n",
              "      <td>4</td>\n",
              "      <td>136</td>\n",
              "      <td>52.9</td>\n",
              "      <td>...</td>\n",
              "      <td>620</td>\n",
              "      <td>1.1</td>\n",
              "      <td>3.4</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.54</td>\n",
              "      <td>3.82</td>\n",
              "      <td>3.82</td>\n",
              "      <td>3.68</td>\n",
              "      <td>3.54</td>\n",
              "      <td>18.40</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>297</th>\n",
              "      <td>365</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>M</td>\n",
              "      <td>Rodrigo</td>\n",
              "      <td>5.6</td>\n",
              "      <td>5.8</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>125</td>\n",
              "      <td>44.1</td>\n",
              "      <td>...</td>\n",
              "      <td>480</td>\n",
              "      <td>1.3</td>\n",
              "      <td>3.3</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.56</td>\n",
              "      <td>3.56</td>\n",
              "      <td>3.95</td>\n",
              "      <td>3.56</td>\n",
              "      <td>3.43</td>\n",
              "      <td>18.06</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>538</th>\n",
              "      <td>357</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>D</td>\n",
              "      <td>Laporte</td>\n",
              "      <td>4.9</td>\n",
              "      <td>0.1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>4</td>\n",
              "      <td>2.9</td>\n",
              "      <td>...</td>\n",
              "      <td>11</td>\n",
              "      <td>1.3</td>\n",
              "      <td>3.3</td>\n",
              "      <td>1.2</td>\n",
              "      <td>3.56</td>\n",
              "      <td>3.56</td>\n",
              "      <td>3.95</td>\n",
              "      <td>3.56</td>\n",
              "      <td>3.43</td>\n",
              "      <td>18.06</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>539</th>\n",
              "      <td>358</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>D</td>\n",
              "      <td>R.Lewis</td>\n",
              "      <td>4.3</td>\n",
              "      <td>0.3</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>53</td>\n",
              "      <td>1.9</td>\n",
              "      <td>...</td>\n",
              "      <td>147</td>\n",
              "      <td>1.3</td>\n",
              "      <td>3.3</td>\n",
              "      <td>1.2</td>\n",
              "      <td>3.56</td>\n",
              "      <td>3.56</td>\n",
              "      <td>3.95</td>\n",
              "      <td>3.56</td>\n",
              "      <td>3.43</td>\n",
              "      <td>18.06</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>540</th>\n",
              "      <td>366</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>D</td>\n",
              "      <td>Sergio Gómez</td>\n",
              "      <td>3.9</td>\n",
              "      <td>1.2</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>17</td>\n",
              "      <td>3.8</td>\n",
              "      <td>...</td>\n",
              "      <td>15</td>\n",
              "      <td>1.3</td>\n",
              "      <td>3.3</td>\n",
              "      <td>1.2</td>\n",
              "      <td>3.56</td>\n",
              "      <td>3.56</td>\n",
              "      <td>3.95</td>\n",
              "      <td>3.56</td>\n",
              "      <td>3.43</td>\n",
              "      <td>18.06</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>34</th>\n",
              "      <td>225</td>\n",
              "      <td>Crystal Palace</td>\n",
              "      <td>F</td>\n",
              "      <td>Edouard</td>\n",
              "      <td>5.5</td>\n",
              "      <td>3.6</td>\n",
              "      <td>4</td>\n",
              "      <td>0</td>\n",
              "      <td>122</td>\n",
              "      <td>54.1</td>\n",
              "      <td>...</td>\n",
              "      <td>608</td>\n",
              "      <td>1.0</td>\n",
              "      <td>3.5</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.35</td>\n",
              "      <td>3.50</td>\n",
              "      <td>3.65</td>\n",
              "      <td>3.65</td>\n",
              "      <td>3.80</td>\n",
              "      <td>17.95</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>384</th>\n",
              "      <td>539</td>\n",
              "      <td>West Ham</td>\n",
              "      <td>M</td>\n",
              "      <td>L.Paquetá</td>\n",
              "      <td>6.0</td>\n",
              "      <td>1.9</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>113</td>\n",
              "      <td>39.0</td>\n",
              "      <td>...</td>\n",
              "      <td>710</td>\n",
              "      <td>1.0</td>\n",
              "      <td>3.5</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.35</td>\n",
              "      <td>3.65</td>\n",
              "      <td>3.35</td>\n",
              "      <td>3.80</td>\n",
              "      <td>3.65</td>\n",
              "      <td>17.80</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>411</th>\n",
              "      <td>29</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>D</td>\n",
              "      <td>White</td>\n",
              "      <td>5.6</td>\n",
              "      <td>11.3</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>189</td>\n",
              "      <td>37.7</td>\n",
              "      <td>...</td>\n",
              "      <td>720</td>\n",
              "      <td>1.2</td>\n",
              "      <td>3.3</td>\n",
              "      <td>0.7</td>\n",
              "      <td>3.43</td>\n",
              "      <td>3.82</td>\n",
              "      <td>3.30</td>\n",
              "      <td>3.69</td>\n",
              "      <td>3.43</td>\n",
              "      <td>17.67</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>304</th>\n",
              "      <td>376</td>\n",
              "      <td>Manchester United</td>\n",
              "      <td>M</td>\n",
              "      <td>Casemiro</td>\n",
              "      <td>5.4</td>\n",
              "      <td>3.8</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>94</td>\n",
              "      <td>40.3</td>\n",
              "      <td>...</td>\n",
              "      <td>648</td>\n",
              "      <td>1.1</td>\n",
              "      <td>3.3</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.69</td>\n",
              "      <td>3.04</td>\n",
              "      <td>3.56</td>\n",
              "      <td>3.69</td>\n",
              "      <td>3.56</td>\n",
              "      <td>17.54</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>536</th>\n",
              "      <td>346</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>D</td>\n",
              "      <td>Cancelo</td>\n",
              "      <td>5.8</td>\n",
              "      <td>1.2</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>1.3</td>\n",
              "      <td>3.2</td>\n",
              "      <td>1.2</td>\n",
              "      <td>3.44</td>\n",
              "      <td>3.44</td>\n",
              "      <td>3.80</td>\n",
              "      <td>3.44</td>\n",
              "      <td>3.32</td>\n",
              "      <td>17.44</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>541</th>\n",
              "      <td>368</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>D</td>\n",
              "      <td>Stones</td>\n",
              "      <td>5.3</td>\n",
              "      <td>3.1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>3</td>\n",
              "      <td>0.1</td>\n",
              "      <td>...</td>\n",
              "      <td>22</td>\n",
              "      <td>1.3</td>\n",
              "      <td>3.2</td>\n",
              "      <td>1.2</td>\n",
              "      <td>3.44</td>\n",
              "      <td>3.44</td>\n",
              "      <td>3.80</td>\n",
              "      <td>3.44</td>\n",
              "      <td>3.32</td>\n",
              "      <td>17.44</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>692</th>\n",
              "      <td>347</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>G</td>\n",
              "      <td>Carson</td>\n",
              "      <td>3.9</td>\n",
              "      <td>0.1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>1.3</td>\n",
              "      <td>3.2</td>\n",
              "      <td>1.2</td>\n",
              "      <td>3.44</td>\n",
              "      <td>3.44</td>\n",
              "      <td>3.80</td>\n",
              "      <td>3.44</td>\n",
              "      <td>3.32</td>\n",
              "      <td>17.44</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>693</th>\n",
              "      <td>352</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>G</td>\n",
              "      <td>Ederson M.</td>\n",
              "      <td>5.6</td>\n",
              "      <td>19.5</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>129</td>\n",
              "      <td>13.2</td>\n",
              "      <td>...</td>\n",
              "      <td>720</td>\n",
              "      <td>1.3</td>\n",
              "      <td>3.2</td>\n",
              "      <td>1.2</td>\n",
              "      <td>3.44</td>\n",
              "      <td>3.44</td>\n",
              "      <td>3.80</td>\n",
              "      <td>3.44</td>\n",
              "      <td>3.32</td>\n",
              "      <td>17.44</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>694</th>\n",
              "      <td>361</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>G</td>\n",
              "      <td>Ortega Moreno</td>\n",
              "      <td>3.9</td>\n",
              "      <td>0.7</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>1.3</td>\n",
              "      <td>3.2</td>\n",
              "      <td>1.2</td>\n",
              "      <td>3.44</td>\n",
              "      <td>3.44</td>\n",
              "      <td>3.80</td>\n",
              "      <td>3.44</td>\n",
              "      <td>3.32</td>\n",
              "      <td>17.44</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>695</th>\n",
              "      <td>367</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>G</td>\n",
              "      <td>Steffen</td>\n",
              "      <td>3.9</td>\n",
              "      <td>0.2</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>1.3</td>\n",
              "      <td>3.2</td>\n",
              "      <td>1.2</td>\n",
              "      <td>3.44</td>\n",
              "      <td>3.44</td>\n",
              "      <td>3.80</td>\n",
              "      <td>3.44</td>\n",
              "      <td>3.32</td>\n",
              "      <td>17.44</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>50 rows × 22 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-91b741a1-ec20-490d-a261-9be51093a299')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-91b741a1-ec20-490d-a261-9be51093a299 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-91b741a1-ec20-490d-a261-9be51093a299');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-bd130d06-d3e2-40d9-b4b0-d45e77dd3e4a\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-bd130d06-d3e2-40d9-b4b0-d45e77dd3e4a')\"\n",
              "            title=\"Suggest charts.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-bd130d06-d3e2-40d9-b4b0-d45e77dd3e4a button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 50
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import matplotlib.pyplot as plt\n",
        "import pandas as pd\n",
        "import numpy as np\n",
        "import string"
      ],
      "metadata": {
        "id": "JSw3vk9PJvps"
      },
      "execution_count": 51,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "fig, ax = plt.subplots(1, figsize=(10,8))\n",
        "ax.scatter(x=Top50['cost'],y=Top50['5GW Total'],c='DarkBlue')\n",
        "# set labels\n",
        "ax.set_xlabel('cost')\n",
        "ax.set_ylabel('5GW Total')\n",
        "\n",
        "# annotate points in axis\n",
        "for idx, row in Top50.iterrows():\n",
        "    ax.annotate(row['name'], (row['cost'], row['5GW Total']) )\n",
        "# force matplotlib to draw the graph\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 696
        },
        "id": "435FV-_ocWOi",
        "outputId": "71e29c25-cf15-4cb0-a4b2-93a48c768fab"
      },
      "execution_count": 52,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1000x800 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "rawdfgw228x"
      ],
      "metadata": {
        "id": "mQ58vdHpUd8O",
        "outputId": "d4e580cd-d278-4bd9-ea07-d7a100747e51",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 424
        }
      },
      "execution_count": 53,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "      id                     team pos     name  cost  selected_by_percent  \\\n",
              "0      1                  Arsenal   F  Balogun   4.4                  0.3   \n",
              "1      8                  Arsenal   F  G.Jesus   8.0                  3.5   \n",
              "2     13                  Arsenal   F  Nketiah   5.5                  5.2   \n",
              "3     39              Aston Villa   F    Davis   4.9                  0.1   \n",
              "4     44              Aston Villa   F    Duran   5.0                  0.3   \n",
              "..   ...                      ...  ..      ...   ...                  ...   \n",
              "720  647                 West Ham   G    Anang   4.0                  0.1   \n",
              "721  546  Wolverhampton Wanderers   G  Bentley   4.0                  0.4   \n",
              "722  564  Wolverhampton Wanderers   G     King   4.0                  0.8   \n",
              "723  569  Wolverhampton Wanderers   G  José Sá   5.0                  1.5   \n",
              "724  571  Wolverhampton Wanderers   G   Šarkić   4.0                  0.4   \n",
              "\n",
              "     goals_scored  assists  bps  ict_index  ...  minutes  home_adjustment  \\\n",
              "0               0        0    0        0.0  ...        0              1.2   \n",
              "1               1        1   45       25.4  ...      295              1.2   \n",
              "2               2        2   82       31.3  ...      567              1.2   \n",
              "3               0        0    0        0.0  ...        0              1.1   \n",
              "4               2        0   55       13.7  ...       68              1.1   \n",
              "..            ...      ...  ...        ...  ...      ...              ...   \n",
              "720             0        0    0        0.0  ...        0              1.0   \n",
              "721             0        0    0        0.0  ...        0              0.8   \n",
              "722             0        0    0        0.0  ...        0              0.8   \n",
              "723             0        0  161       27.5  ...      720              0.8   \n",
              "724             0        0    0        0.0  ...        0              0.8   \n",
              "\n",
              "     xPallgw  xCSP   gw9  gw10  gw11  gw12  gw13  5GW Total  \n",
              "0        2.0   NaN  2.00  2.00  2.00  2.00  2.00      10.00  \n",
              "1        2.8   NaN  2.88  3.12  2.80  3.04  2.88      14.72  \n",
              "2        3.1   NaN  3.21  3.54  3.10  3.43  3.21      16.49  \n",
              "3        2.0   NaN  2.00  2.00  2.00  2.00  2.00      10.00  \n",
              "4        2.4   NaN  2.44  2.52  2.52  2.48  2.44      12.40  \n",
              "..       ...   ...   ...   ...   ...   ...   ...        ...  \n",
              "720     -2.2  -4.2 -1.78 -2.62 -1.78 -3.04 -2.62     -11.84  \n",
              "721     -1.5  -3.4 -1.50 -0.45 -1.50 -0.80 -1.15      -5.40  \n",
              "722     -1.5  -3.4 -1.50 -0.45 -1.50 -0.80 -1.15      -5.40  \n",
              "723     -1.5  -3.4 -1.50 -0.45 -1.50 -0.80 -1.15      -5.40  \n",
              "724     -1.5  -3.4 -1.50 -0.45 -1.50 -0.80 -1.15      -5.40  \n",
              "\n",
              "[703 rows x 22 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-b7b6a110-0152-4160-a04e-0701c0d17b72\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>team</th>\n",
              "      <th>pos</th>\n",
              "      <th>name</th>\n",
              "      <th>cost</th>\n",
              "      <th>selected_by_percent</th>\n",
              "      <th>goals_scored</th>\n",
              "      <th>assists</th>\n",
              "      <th>bps</th>\n",
              "      <th>ict_index</th>\n",
              "      <th>...</th>\n",
              "      <th>minutes</th>\n",
              "      <th>home_adjustment</th>\n",
              "      <th>xPallgw</th>\n",
              "      <th>xCSP</th>\n",
              "      <th>gw9</th>\n",
              "      <th>gw10</th>\n",
              "      <th>gw11</th>\n",
              "      <th>gw12</th>\n",
              "      <th>gw13</th>\n",
              "      <th>5GW Total</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>1</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>F</td>\n",
              "      <td>Balogun</td>\n",
              "      <td>4.4</td>\n",
              "      <td>0.3</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>1.2</td>\n",
              "      <td>2.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>10.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>8</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>F</td>\n",
              "      <td>G.Jesus</td>\n",
              "      <td>8.0</td>\n",
              "      <td>3.5</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>45</td>\n",
              "      <td>25.4</td>\n",
              "      <td>...</td>\n",
              "      <td>295</td>\n",
              "      <td>1.2</td>\n",
              "      <td>2.8</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2.88</td>\n",
              "      <td>3.12</td>\n",
              "      <td>2.80</td>\n",
              "      <td>3.04</td>\n",
              "      <td>2.88</td>\n",
              "      <td>14.72</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>13</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>F</td>\n",
              "      <td>Nketiah</td>\n",
              "      <td>5.5</td>\n",
              "      <td>5.2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>82</td>\n",
              "      <td>31.3</td>\n",
              "      <td>...</td>\n",
              "      <td>567</td>\n",
              "      <td>1.2</td>\n",
              "      <td>3.1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.21</td>\n",
              "      <td>3.54</td>\n",
              "      <td>3.10</td>\n",
              "      <td>3.43</td>\n",
              "      <td>3.21</td>\n",
              "      <td>16.49</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>39</td>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>F</td>\n",
              "      <td>Davis</td>\n",
              "      <td>4.9</td>\n",
              "      <td>0.1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>1.1</td>\n",
              "      <td>2.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>10.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>44</td>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>F</td>\n",
              "      <td>Duran</td>\n",
              "      <td>5.0</td>\n",
              "      <td>0.3</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>55</td>\n",
              "      <td>13.7</td>\n",
              "      <td>...</td>\n",
              "      <td>68</td>\n",
              "      <td>1.1</td>\n",
              "      <td>2.4</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2.44</td>\n",
              "      <td>2.52</td>\n",
              "      <td>2.52</td>\n",
              "      <td>2.48</td>\n",
              "      <td>2.44</td>\n",
              "      <td>12.40</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>720</th>\n",
              "      <td>647</td>\n",
              "      <td>West Ham</td>\n",
              "      <td>G</td>\n",
              "      <td>Anang</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>-2.2</td>\n",
              "      <td>-4.2</td>\n",
              "      <td>-1.78</td>\n",
              "      <td>-2.62</td>\n",
              "      <td>-1.78</td>\n",
              "      <td>-3.04</td>\n",
              "      <td>-2.62</td>\n",
              "      <td>-11.84</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>721</th>\n",
              "      <td>546</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>G</td>\n",
              "      <td>Bentley</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.4</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0.8</td>\n",
              "      <td>-1.5</td>\n",
              "      <td>-3.4</td>\n",
              "      <td>-1.50</td>\n",
              "      <td>-0.45</td>\n",
              "      <td>-1.50</td>\n",
              "      <td>-0.80</td>\n",
              "      <td>-1.15</td>\n",
              "      <td>-5.40</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>722</th>\n",
              "      <td>564</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>G</td>\n",
              "      <td>King</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.8</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0.8</td>\n",
              "      <td>-1.5</td>\n",
              "      <td>-3.4</td>\n",
              "      <td>-1.50</td>\n",
              "      <td>-0.45</td>\n",
              "      <td>-1.50</td>\n",
              "      <td>-0.80</td>\n",
              "      <td>-1.15</td>\n",
              "      <td>-5.40</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>723</th>\n",
              "      <td>569</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>G</td>\n",
              "      <td>José Sá</td>\n",
              "      <td>5.0</td>\n",
              "      <td>1.5</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>161</td>\n",
              "      <td>27.5</td>\n",
              "      <td>...</td>\n",
              "      <td>720</td>\n",
              "      <td>0.8</td>\n",
              "      <td>-1.5</td>\n",
              "      <td>-3.4</td>\n",
              "      <td>-1.50</td>\n",
              "      <td>-0.45</td>\n",
              "      <td>-1.50</td>\n",
              "      <td>-0.80</td>\n",
              "      <td>-1.15</td>\n",
              "      <td>-5.40</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>724</th>\n",
              "      <td>571</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>G</td>\n",
              "      <td>Šarkić</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.4</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0.8</td>\n",
              "      <td>-1.5</td>\n",
              "      <td>-3.4</td>\n",
              "      <td>-1.50</td>\n",
              "      <td>-0.45</td>\n",
              "      <td>-1.50</td>\n",
              "      <td>-0.80</td>\n",
              "      <td>-1.15</td>\n",
              "      <td>-5.40</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>703 rows × 22 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-b7b6a110-0152-4160-a04e-0701c0d17b72')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-b7b6a110-0152-4160-a04e-0701c0d17b72 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-b7b6a110-0152-4160-a04e-0701c0d17b72');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-303dec35-cda5-4e52-888d-dce9b0187040\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-303dec35-cda5-4e52-888d-dce9b0187040')\"\n",
              "            title=\"Suggest charts.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-303dec35-cda5-4e52-888d-dce9b0187040 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 53
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "apiplayers = master"
      ],
      "metadata": {
        "id": "3bvpGcxtVMyS"
      },
      "execution_count": 54,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "Mostselected = apiplayers.nlargest(20, 'selected_by_percent')\n",
        "Mostselected"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 677
        },
        "id": "O-wNiNtosYZU",
        "outputId": "b81d0cd5-a52b-4c64-b42d-a6da7ce427f6"
      },
      "execution_count": 55,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "      id               team pos        name  cost  selected_by_percent  \\\n",
              "447  355    Manchester City   F     Haaland  14.1                 89.2   \n",
              "17    19            Arsenal   M        Saka   8.6                 50.3   \n",
              "531  430   Newcastle United   D    Trippier   6.8                 46.2   \n",
              "157  143           Brighton   M      Mitoma   6.6                 40.8   \n",
              "640  504          Tottenham   M    Maddison   8.0                 37.7   \n",
              "145  131           Brighton   D   Estupiñan   5.1                 36.1   \n",
              "665  524           West Ham   G      Areola   4.2                 34.7   \n",
              "380  308          Liverpool   M       Salah  12.6                 34.3   \n",
              "651  516          Tottenham   M         Son   9.4                 33.9   \n",
              "436  343    Manchester City   F   J.Alvarez   7.0                 32.5   \n",
              "34    36        Aston Villa   D        Cash   5.0                 30.9   \n",
              "57    60        Aston Villa   F     Watkins   8.1                 29.8   \n",
              "18    20            Arsenal   D      Saliba   5.2                 26.2   \n",
              "12    14            Arsenal   M    Ødegaard   8.5                 23.1   \n",
              "119  108          Brentford   M      Mbeumo   6.8                 21.9   \n",
              "487  396  Manchester United   M    Rashford   8.8                 21.3   \n",
              "516  415   Newcastle United   F        Isak   7.5                 21.3   \n",
              "654  519          Tottenham   D      Udogie   4.9                 20.7   \n",
              "444  352    Manchester City   G  Ederson M.   5.6                 19.5   \n",
              "667  526           West Ham   M       Bowen   7.3                 18.0   \n",
              "\n",
              "     expected_goals  expected_assists  goals_scored  assists  bps  ict_index  \\\n",
              "447            7.85              0.42             8        1  218       86.1   \n",
              "17             3.98              2.46             4        3  195       85.3   \n",
              "531            0.05              2.48             0        5  241       67.7   \n",
              "157            1.96              1.99             3        3  132       68.2   \n",
              "640            2.10              2.93             2        5  185       88.8   \n",
              "145            0.90              1.47             1        3  112       45.0   \n",
              "665            0.00              0.00             0        0  161       25.1   \n",
              "380            5.24              2.81             5        4  192       89.2   \n",
              "651            3.16              1.82             6        0  178       70.5   \n",
              "436            2.79              1.16             3        5  193       69.1   \n",
              "34             3.12              0.83             2        1  137       46.1   \n",
              "57             3.29              0.75             4        7  203       74.6   \n",
              "18             0.04              0.11             0        1  171       21.3   \n",
              "12             2.61              1.05             3        2  153       61.6   \n",
              "119            4.58              1.60             4        0  121       64.6   \n",
              "487            2.54              1.37             1        2   81       52.1   \n",
              "516            5.44              0.15             6        0  170       54.2   \n",
              "654            0.15              0.77             0        2  143       33.7   \n",
              "444            0.00              0.02             0        0  129       13.2   \n",
              "667            3.67              0.78             5        1  151       66.9   \n",
              "\n",
              "     points  points_per_game  minutes  apppoint  assistvalue  \n",
              "447      55              6.9      709         2            3  \n",
              "17       53              7.6      613         2            3  \n",
              "531      49              6.1      699         2            3  \n",
              "157      42              5.2      665         2            3  \n",
              "640      47              5.9      668         2            3  \n",
              "145      25              4.2      495         2            3  \n",
              "665      33              4.1      720         2            3  \n",
              "380      59              7.4      684         2            3  \n",
              "651      54              6.8      625         2            3  \n",
              "436      48              6.0      662         2            3  \n",
              "34       36              4.5      707         2            3  \n",
              "57       59              7.4      680         2            3  \n",
              "18       36              4.5      720         2            3  \n",
              "12       46              5.8      712         2            3  \n",
              "119      40              5.0      720         2            3  \n",
              "487      28              3.5      669         2            3  \n",
              "516      43              6.1      471         2            3  \n",
              "654      32              4.0      673         2            3  \n",
              "444      27              3.4      720         2            3  \n",
              "667      50              6.2      720         2            3  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-c5665239-ccb1-4c3c-9fa0-9d92ce7e1590\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>team</th>\n",
              "      <th>pos</th>\n",
              "      <th>name</th>\n",
              "      <th>cost</th>\n",
              "      <th>selected_by_percent</th>\n",
              "      <th>expected_goals</th>\n",
              "      <th>expected_assists</th>\n",
              "      <th>goals_scored</th>\n",
              "      <th>assists</th>\n",
              "      <th>bps</th>\n",
              "      <th>ict_index</th>\n",
              "      <th>points</th>\n",
              "      <th>points_per_game</th>\n",
              "      <th>minutes</th>\n",
              "      <th>apppoint</th>\n",
              "      <th>assistvalue</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>447</th>\n",
              "      <td>355</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>F</td>\n",
              "      <td>Haaland</td>\n",
              "      <td>14.1</td>\n",
              "      <td>89.2</td>\n",
              "      <td>7.85</td>\n",
              "      <td>0.42</td>\n",
              "      <td>8</td>\n",
              "      <td>1</td>\n",
              "      <td>218</td>\n",
              "      <td>86.1</td>\n",
              "      <td>55</td>\n",
              "      <td>6.9</td>\n",
              "      <td>709</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>17</th>\n",
              "      <td>19</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>M</td>\n",
              "      <td>Saka</td>\n",
              "      <td>8.6</td>\n",
              "      <td>50.3</td>\n",
              "      <td>3.98</td>\n",
              "      <td>2.46</td>\n",
              "      <td>4</td>\n",
              "      <td>3</td>\n",
              "      <td>195</td>\n",
              "      <td>85.3</td>\n",
              "      <td>53</td>\n",
              "      <td>7.6</td>\n",
              "      <td>613</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>531</th>\n",
              "      <td>430</td>\n",
              "      <td>Newcastle United</td>\n",
              "      <td>D</td>\n",
              "      <td>Trippier</td>\n",
              "      <td>6.8</td>\n",
              "      <td>46.2</td>\n",
              "      <td>0.05</td>\n",
              "      <td>2.48</td>\n",
              "      <td>0</td>\n",
              "      <td>5</td>\n",
              "      <td>241</td>\n",
              "      <td>67.7</td>\n",
              "      <td>49</td>\n",
              "      <td>6.1</td>\n",
              "      <td>699</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>157</th>\n",
              "      <td>143</td>\n",
              "      <td>Brighton</td>\n",
              "      <td>M</td>\n",
              "      <td>Mitoma</td>\n",
              "      <td>6.6</td>\n",
              "      <td>40.8</td>\n",
              "      <td>1.96</td>\n",
              "      <td>1.99</td>\n",
              "      <td>3</td>\n",
              "      <td>3</td>\n",
              "      <td>132</td>\n",
              "      <td>68.2</td>\n",
              "      <td>42</td>\n",
              "      <td>5.2</td>\n",
              "      <td>665</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>640</th>\n",
              "      <td>504</td>\n",
              "      <td>Tottenham</td>\n",
              "      <td>M</td>\n",
              "      <td>Maddison</td>\n",
              "      <td>8.0</td>\n",
              "      <td>37.7</td>\n",
              "      <td>2.10</td>\n",
              "      <td>2.93</td>\n",
              "      <td>2</td>\n",
              "      <td>5</td>\n",
              "      <td>185</td>\n",
              "      <td>88.8</td>\n",
              "      <td>47</td>\n",
              "      <td>5.9</td>\n",
              "      <td>668</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>145</th>\n",
              "      <td>131</td>\n",
              "      <td>Brighton</td>\n",
              "      <td>D</td>\n",
              "      <td>Estupiñan</td>\n",
              "      <td>5.1</td>\n",
              "      <td>36.1</td>\n",
              "      <td>0.90</td>\n",
              "      <td>1.47</td>\n",
              "      <td>1</td>\n",
              "      <td>3</td>\n",
              "      <td>112</td>\n",
              "      <td>45.0</td>\n",
              "      <td>25</td>\n",
              "      <td>4.2</td>\n",
              "      <td>495</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>665</th>\n",
              "      <td>524</td>\n",
              "      <td>West Ham</td>\n",
              "      <td>G</td>\n",
              "      <td>Areola</td>\n",
              "      <td>4.2</td>\n",
              "      <td>34.7</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>161</td>\n",
              "      <td>25.1</td>\n",
              "      <td>33</td>\n",
              "      <td>4.1</td>\n",
              "      <td>720</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>380</th>\n",
              "      <td>308</td>\n",
              "      <td>Liverpool</td>\n",
              "      <td>M</td>\n",
              "      <td>Salah</td>\n",
              "      <td>12.6</td>\n",
              "      <td>34.3</td>\n",
              "      <td>5.24</td>\n",
              "      <td>2.81</td>\n",
              "      <td>5</td>\n",
              "      <td>4</td>\n",
              "      <td>192</td>\n",
              "      <td>89.2</td>\n",
              "      <td>59</td>\n",
              "      <td>7.4</td>\n",
              "      <td>684</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>651</th>\n",
              "      <td>516</td>\n",
              "      <td>Tottenham</td>\n",
              "      <td>M</td>\n",
              "      <td>Son</td>\n",
              "      <td>9.4</td>\n",
              "      <td>33.9</td>\n",
              "      <td>3.16</td>\n",
              "      <td>1.82</td>\n",
              "      <td>6</td>\n",
              "      <td>0</td>\n",
              "      <td>178</td>\n",
              "      <td>70.5</td>\n",
              "      <td>54</td>\n",
              "      <td>6.8</td>\n",
              "      <td>625</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>436</th>\n",
              "      <td>343</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>F</td>\n",
              "      <td>J.Alvarez</td>\n",
              "      <td>7.0</td>\n",
              "      <td>32.5</td>\n",
              "      <td>2.79</td>\n",
              "      <td>1.16</td>\n",
              "      <td>3</td>\n",
              "      <td>5</td>\n",
              "      <td>193</td>\n",
              "      <td>69.1</td>\n",
              "      <td>48</td>\n",
              "      <td>6.0</td>\n",
              "      <td>662</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>34</th>\n",
              "      <td>36</td>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>D</td>\n",
              "      <td>Cash</td>\n",
              "      <td>5.0</td>\n",
              "      <td>30.9</td>\n",
              "      <td>3.12</td>\n",
              "      <td>0.83</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>137</td>\n",
              "      <td>46.1</td>\n",
              "      <td>36</td>\n",
              "      <td>4.5</td>\n",
              "      <td>707</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>57</th>\n",
              "      <td>60</td>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>F</td>\n",
              "      <td>Watkins</td>\n",
              "      <td>8.1</td>\n",
              "      <td>29.8</td>\n",
              "      <td>3.29</td>\n",
              "      <td>0.75</td>\n",
              "      <td>4</td>\n",
              "      <td>7</td>\n",
              "      <td>203</td>\n",
              "      <td>74.6</td>\n",
              "      <td>59</td>\n",
              "      <td>7.4</td>\n",
              "      <td>680</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>18</th>\n",
              "      <td>20</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>D</td>\n",
              "      <td>Saliba</td>\n",
              "      <td>5.2</td>\n",
              "      <td>26.2</td>\n",
              "      <td>0.04</td>\n",
              "      <td>0.11</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>171</td>\n",
              "      <td>21.3</td>\n",
              "      <td>36</td>\n",
              "      <td>4.5</td>\n",
              "      <td>720</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>12</th>\n",
              "      <td>14</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>M</td>\n",
              "      <td>Ødegaard</td>\n",
              "      <td>8.5</td>\n",
              "      <td>23.1</td>\n",
              "      <td>2.61</td>\n",
              "      <td>1.05</td>\n",
              "      <td>3</td>\n",
              "      <td>2</td>\n",
              "      <td>153</td>\n",
              "      <td>61.6</td>\n",
              "      <td>46</td>\n",
              "      <td>5.8</td>\n",
              "      <td>712</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>119</th>\n",
              "      <td>108</td>\n",
              "      <td>Brentford</td>\n",
              "      <td>M</td>\n",
              "      <td>Mbeumo</td>\n",
              "      <td>6.8</td>\n",
              "      <td>21.9</td>\n",
              "      <td>4.58</td>\n",
              "      <td>1.60</td>\n",
              "      <td>4</td>\n",
              "      <td>0</td>\n",
              "      <td>121</td>\n",
              "      <td>64.6</td>\n",
              "      <td>40</td>\n",
              "      <td>5.0</td>\n",
              "      <td>720</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>487</th>\n",
              "      <td>396</td>\n",
              "      <td>Manchester United</td>\n",
              "      <td>M</td>\n",
              "      <td>Rashford</td>\n",
              "      <td>8.8</td>\n",
              "      <td>21.3</td>\n",
              "      <td>2.54</td>\n",
              "      <td>1.37</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>81</td>\n",
              "      <td>52.1</td>\n",
              "      <td>28</td>\n",
              "      <td>3.5</td>\n",
              "      <td>669</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>516</th>\n",
              "      <td>415</td>\n",
              "      <td>Newcastle United</td>\n",
              "      <td>F</td>\n",
              "      <td>Isak</td>\n",
              "      <td>7.5</td>\n",
              "      <td>21.3</td>\n",
              "      <td>5.44</td>\n",
              "      <td>0.15</td>\n",
              "      <td>6</td>\n",
              "      <td>0</td>\n",
              "      <td>170</td>\n",
              "      <td>54.2</td>\n",
              "      <td>43</td>\n",
              "      <td>6.1</td>\n",
              "      <td>471</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>654</th>\n",
              "      <td>519</td>\n",
              "      <td>Tottenham</td>\n",
              "      <td>D</td>\n",
              "      <td>Udogie</td>\n",
              "      <td>4.9</td>\n",
              "      <td>20.7</td>\n",
              "      <td>0.15</td>\n",
              "      <td>0.77</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>143</td>\n",
              "      <td>33.7</td>\n",
              "      <td>32</td>\n",
              "      <td>4.0</td>\n",
              "      <td>673</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>444</th>\n",
              "      <td>352</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>G</td>\n",
              "      <td>Ederson M.</td>\n",
              "      <td>5.6</td>\n",
              "      <td>19.5</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.02</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>129</td>\n",
              "      <td>13.2</td>\n",
              "      <td>27</td>\n",
              "      <td>3.4</td>\n",
              "      <td>720</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>667</th>\n",
              "      <td>526</td>\n",
              "      <td>West Ham</td>\n",
              "      <td>M</td>\n",
              "      <td>Bowen</td>\n",
              "      <td>7.3</td>\n",
              "      <td>18.0</td>\n",
              "      <td>3.67</td>\n",
              "      <td>0.78</td>\n",
              "      <td>5</td>\n",
              "      <td>1</td>\n",
              "      <td>151</td>\n",
              "      <td>66.9</td>\n",
              "      <td>50</td>\n",
              "      <td>6.2</td>\n",
              "      <td>720</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-c5665239-ccb1-4c3c-9fa0-9d92ce7e1590')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-c5665239-ccb1-4c3c-9fa0-9d92ce7e1590 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-c5665239-ccb1-4c3c-9fa0-9d92ce7e1590');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-e8d17852-4d06-416d-be96-4c142d0171f3\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-e8d17852-4d06-416d-be96-4c142d0171f3')\"\n",
              "            title=\"Suggest charts.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-e8d17852-4d06-416d-be96-4c142d0171f3 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 55
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "ax = sns.barplot(x='selected_by_percent', y='name', data=Mostselected, hue='pos', dodge=False)\n",
        "sns.set(rc={'figure.figsize':(11.7,8.27)})\n",
        "plt.title(\"Most Selected\")\n",
        "plt.xticks(rotation=90)\n",
        "plt.ylabel(\"selected_by_percent\")\n",
        "plt.legend(bbox_to_anchor=(1.05, 1), loc='upper left', borderaxespad=0)\n",
        "plt.gcf().set_size_inches(30,10)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 603
        },
        "id": "8PBz92opthgG",
        "outputId": "9087660b-9dfa-41aa-aa26-3f78299732bf"
      },
      "execution_count": 56,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 3000x1000 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "fbref = pd.read_html('https://fbref.com/en/comps/9/Premier-League-Stats')\n",
        "epltable = fbref[0]\n",
        "epltablexGxGc = epltable.drop(columns=[\n",
        " 'Last 5',\n",
        " 'Attendance',\n",
        " 'Top Team Scorer',\n",
        " 'Goalkeeper',\n",
        " 'Notes'])\n",
        "epltablexGxGc= epltablexGxGc.replace('Newcastle Utd', 'Newcastle United')\n",
        "epltablexGxGc= epltablexGxGc.replace('Wolves','Wolverhampton Wanderers')\n",
        "epltablexGxGc= epltablexGxGc.replace('Leeds United','Leeds')\n",
        "epltablexGxGc= epltablexGxGc.replace('Leicester City','Leicester')\n",
        "epltablexGxGc= epltablexGxGc.replace('Manchester Utd','Manchester United')\n",
        "epltablexGxGc['Squad'] = epltablexGxGc['Squad'].str.replace(r\"[\\\"\\',]\", '')\n",
        "epltablexGxGc= epltablexGxGc.replace('Nottham Forest','Nottingham Forest')\n",
        "epltablexGxGc['xCSP'] = (4 - (epltablexGxGc.xGA * 4/23))\n",
        "epltablexGxGc.rename(columns={'Squad': 'team'}, inplace=True)\n",
        "epltablexGxGc['xG/90'] = (epltablexGxGc.xG / epltablexGxGc.MP)\n",
        "epltablexGxGc['xGA/90'] = (epltablexGxGc.xGA / epltablexGxGc.MP)\n",
        "epltablexGxGc"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 711
        },
        "id": "D8nuKObbLt5s",
        "outputId": "1b8826d3-fb00-49e2-b8d6-b265836c361b"
      },
      "execution_count": 57,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "<ipython-input-57-f34def3770e4>:14: FutureWarning: The default value of regex will change from True to False in a future version.\n",
            "  epltablexGxGc['Squad'] = epltablexGxGc['Squad'].str.replace(r\"[\\\"\\',]\", '')\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "    Rk                     team  MP  W  D  L  GF  GA  GD  Pts  Pts/MP    xG  \\\n",
              "0    1                Tottenham   8  6  2  0  18   8  10   20    2.50  15.0   \n",
              "1    2                  Arsenal   8  6  2  0  16   6  10   20    2.50  14.9   \n",
              "2    3          Manchester City   8  6  0  2  17   6  11   18    2.25  14.9   \n",
              "3    4                Liverpool   8  5  2  1  18   9   9   17    2.13  17.0   \n",
              "4    5              Aston Villa   8  5  1  2  19  12   7   16    2.00  15.1   \n",
              "5    6                 Brighton   8  5  1  2  21  16   5   16    2.00  16.4   \n",
              "6    7                 West Ham   8  4  2  2  15  12   3   14    1.75  12.3   \n",
              "7    8         Newcastle United   8  4  1  3  20   9  11   13    1.63  17.2   \n",
              "8    9           Crystal Palace   8  3  3  2   7   7   0   12    1.50   8.9   \n",
              "9   10        Manchester United   8  4  0  4   9  12  -3   12    1.50  12.6   \n",
              "10  11                  Chelsea   8  3  2  3  11   7   4   11    1.38  15.0   \n",
              "11  12                   Fulham   8  3  2  3   8  13  -5   11    1.38   8.7   \n",
              "12  13        Nottingham Forest   8  2  3  3   8  10  -2    9    1.13   7.8   \n",
              "13  14  Wolverhampton Wanderers   8  2  2  4   9  14  -5    8    1.00   9.9   \n",
              "14  15                Brentford   8  1  4  3  11  12  -1    7    0.88  13.8   \n",
              "15  16                  Everton   8  2  1  5   9  12  -3    7    0.88  14.7   \n",
              "16  17               Luton Town   8  1  1  6   6  15  -9    4    0.50   9.5   \n",
              "17  18                  Burnley   8  1  1  6   7  20 -13    4    0.50   6.5   \n",
              "18  19              Bournemouth   8  0  3  5   5  18 -13    3    0.38   8.8   \n",
              "19  20            Sheffield Utd   8  0  1  7   6  22 -16    1    0.13   6.1   \n",
              "\n",
              "     xGA   xGD  xGD/90      xCSP   xG/90  xGA/90  \n",
              "0   10.8   4.2    0.53  2.121739  1.8750  1.3500  \n",
              "1    6.6   8.3    1.04  2.852174  1.8625  0.8250  \n",
              "2    5.5   9.4    1.18  3.043478  1.8625  0.6875  \n",
              "3   11.4   5.6    0.71  2.017391  2.1250  1.4250  \n",
              "4   13.0   2.0    0.26  1.739130  1.8875  1.6250  \n",
              "5   13.9   2.4    0.30  1.582609  2.0500  1.7375  \n",
              "6   16.3  -3.9   -0.49  1.165217  1.5375  2.0375  \n",
              "7    8.2   9.0    1.12  2.573913  2.1500  1.0250  \n",
              "8   10.6  -1.6   -0.20  2.156522  1.1125  1.3250  \n",
              "9   12.1   0.6    0.07  1.895652  1.5750  1.5125  \n",
              "10   8.1   6.9    0.86  2.591304  1.8750  1.0125  \n",
              "11  15.3  -6.6   -0.83  1.339130  1.0875  1.9125  \n",
              "12  10.8  -3.0   -0.37  2.121739  0.9750  1.3500  \n",
              "13  14.9  -5.1   -0.64  1.408696  1.2375  1.8625  \n",
              "14   9.8   4.0    0.50  2.295652  1.7250  1.2250  \n",
              "15  10.2   4.5    0.56  2.226087  1.8375  1.2750  \n",
              "16  14.7  -5.2   -0.65  1.443478  1.1875  1.8375  \n",
              "17  14.7  -8.2   -1.02  1.443478  0.8125  1.8375  \n",
              "18  18.6  -9.8   -1.23  0.765217  1.1000  2.3250  \n",
              "19  19.6 -13.5   -1.69  0.591304  0.7625  2.4500  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-5abeda89-b00a-45d3-b921-bf93f9911357\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Rk</th>\n",
              "      <th>team</th>\n",
              "      <th>MP</th>\n",
              "      <th>W</th>\n",
              "      <th>D</th>\n",
              "      <th>L</th>\n",
              "      <th>GF</th>\n",
              "      <th>GA</th>\n",
              "      <th>GD</th>\n",
              "      <th>Pts</th>\n",
              "      <th>Pts/MP</th>\n",
              "      <th>xG</th>\n",
              "      <th>xGA</th>\n",
              "      <th>xGD</th>\n",
              "      <th>xGD/90</th>\n",
              "      <th>xCSP</th>\n",
              "      <th>xG/90</th>\n",
              "      <th>xGA/90</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>1</td>\n",
              "      <td>Tottenham</td>\n",
              "      <td>8</td>\n",
              "      <td>6</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>18</td>\n",
              "      <td>8</td>\n",
              "      <td>10</td>\n",
              "      <td>20</td>\n",
              "      <td>2.50</td>\n",
              "      <td>15.0</td>\n",
              "      <td>10.8</td>\n",
              "      <td>4.2</td>\n",
              "      <td>0.53</td>\n",
              "      <td>2.121739</td>\n",
              "      <td>1.8750</td>\n",
              "      <td>1.3500</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>2</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>8</td>\n",
              "      <td>6</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>16</td>\n",
              "      <td>6</td>\n",
              "      <td>10</td>\n",
              "      <td>20</td>\n",
              "      <td>2.50</td>\n",
              "      <td>14.9</td>\n",
              "      <td>6.6</td>\n",
              "      <td>8.3</td>\n",
              "      <td>1.04</td>\n",
              "      <td>2.852174</td>\n",
              "      <td>1.8625</td>\n",
              "      <td>0.8250</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>3</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>8</td>\n",
              "      <td>6</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>17</td>\n",
              "      <td>6</td>\n",
              "      <td>11</td>\n",
              "      <td>18</td>\n",
              "      <td>2.25</td>\n",
              "      <td>14.9</td>\n",
              "      <td>5.5</td>\n",
              "      <td>9.4</td>\n",
              "      <td>1.18</td>\n",
              "      <td>3.043478</td>\n",
              "      <td>1.8625</td>\n",
              "      <td>0.6875</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>4</td>\n",
              "      <td>Liverpool</td>\n",
              "      <td>8</td>\n",
              "      <td>5</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>18</td>\n",
              "      <td>9</td>\n",
              "      <td>9</td>\n",
              "      <td>17</td>\n",
              "      <td>2.13</td>\n",
              "      <td>17.0</td>\n",
              "      <td>11.4</td>\n",
              "      <td>5.6</td>\n",
              "      <td>0.71</td>\n",
              "      <td>2.017391</td>\n",
              "      <td>2.1250</td>\n",
              "      <td>1.4250</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>5</td>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>8</td>\n",
              "      <td>5</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>19</td>\n",
              "      <td>12</td>\n",
              "      <td>7</td>\n",
              "      <td>16</td>\n",
              "      <td>2.00</td>\n",
              "      <td>15.1</td>\n",
              "      <td>13.0</td>\n",
              "      <td>2.0</td>\n",
              "      <td>0.26</td>\n",
              "      <td>1.739130</td>\n",
              "      <td>1.8875</td>\n",
              "      <td>1.6250</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>6</td>\n",
              "      <td>Brighton</td>\n",
              "      <td>8</td>\n",
              "      <td>5</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>21</td>\n",
              "      <td>16</td>\n",
              "      <td>5</td>\n",
              "      <td>16</td>\n",
              "      <td>2.00</td>\n",
              "      <td>16.4</td>\n",
              "      <td>13.9</td>\n",
              "      <td>2.4</td>\n",
              "      <td>0.30</td>\n",
              "      <td>1.582609</td>\n",
              "      <td>2.0500</td>\n",
              "      <td>1.7375</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>7</td>\n",
              "      <td>West Ham</td>\n",
              "      <td>8</td>\n",
              "      <td>4</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>15</td>\n",
              "      <td>12</td>\n",
              "      <td>3</td>\n",
              "      <td>14</td>\n",
              "      <td>1.75</td>\n",
              "      <td>12.3</td>\n",
              "      <td>16.3</td>\n",
              "      <td>-3.9</td>\n",
              "      <td>-0.49</td>\n",
              "      <td>1.165217</td>\n",
              "      <td>1.5375</td>\n",
              "      <td>2.0375</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>8</td>\n",
              "      <td>Newcastle United</td>\n",
              "      <td>8</td>\n",
              "      <td>4</td>\n",
              "      <td>1</td>\n",
              "      <td>3</td>\n",
              "      <td>20</td>\n",
              "      <td>9</td>\n",
              "      <td>11</td>\n",
              "      <td>13</td>\n",
              "      <td>1.63</td>\n",
              "      <td>17.2</td>\n",
              "      <td>8.2</td>\n",
              "      <td>9.0</td>\n",
              "      <td>1.12</td>\n",
              "      <td>2.573913</td>\n",
              "      <td>2.1500</td>\n",
              "      <td>1.0250</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>9</td>\n",
              "      <td>Crystal Palace</td>\n",
              "      <td>8</td>\n",
              "      <td>3</td>\n",
              "      <td>3</td>\n",
              "      <td>2</td>\n",
              "      <td>7</td>\n",
              "      <td>7</td>\n",
              "      <td>0</td>\n",
              "      <td>12</td>\n",
              "      <td>1.50</td>\n",
              "      <td>8.9</td>\n",
              "      <td>10.6</td>\n",
              "      <td>-1.6</td>\n",
              "      <td>-0.20</td>\n",
              "      <td>2.156522</td>\n",
              "      <td>1.1125</td>\n",
              "      <td>1.3250</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>10</td>\n",
              "      <td>Manchester United</td>\n",
              "      <td>8</td>\n",
              "      <td>4</td>\n",
              "      <td>0</td>\n",
              "      <td>4</td>\n",
              "      <td>9</td>\n",
              "      <td>12</td>\n",
              "      <td>-3</td>\n",
              "      <td>12</td>\n",
              "      <td>1.50</td>\n",
              "      <td>12.6</td>\n",
              "      <td>12.1</td>\n",
              "      <td>0.6</td>\n",
              "      <td>0.07</td>\n",
              "      <td>1.895652</td>\n",
              "      <td>1.5750</td>\n",
              "      <td>1.5125</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10</th>\n",
              "      <td>11</td>\n",
              "      <td>Chelsea</td>\n",
              "      <td>8</td>\n",
              "      <td>3</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "      <td>11</td>\n",
              "      <td>7</td>\n",
              "      <td>4</td>\n",
              "      <td>11</td>\n",
              "      <td>1.38</td>\n",
              "      <td>15.0</td>\n",
              "      <td>8.1</td>\n",
              "      <td>6.9</td>\n",
              "      <td>0.86</td>\n",
              "      <td>2.591304</td>\n",
              "      <td>1.8750</td>\n",
              "      <td>1.0125</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>11</th>\n",
              "      <td>12</td>\n",
              "      <td>Fulham</td>\n",
              "      <td>8</td>\n",
              "      <td>3</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "      <td>8</td>\n",
              "      <td>13</td>\n",
              "      <td>-5</td>\n",
              "      <td>11</td>\n",
              "      <td>1.38</td>\n",
              "      <td>8.7</td>\n",
              "      <td>15.3</td>\n",
              "      <td>-6.6</td>\n",
              "      <td>-0.83</td>\n",
              "      <td>1.339130</td>\n",
              "      <td>1.0875</td>\n",
              "      <td>1.9125</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>12</th>\n",
              "      <td>13</td>\n",
              "      <td>Nottingham Forest</td>\n",
              "      <td>8</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "      <td>3</td>\n",
              "      <td>8</td>\n",
              "      <td>10</td>\n",
              "      <td>-2</td>\n",
              "      <td>9</td>\n",
              "      <td>1.13</td>\n",
              "      <td>7.8</td>\n",
              "      <td>10.8</td>\n",
              "      <td>-3.0</td>\n",
              "      <td>-0.37</td>\n",
              "      <td>2.121739</td>\n",
              "      <td>0.9750</td>\n",
              "      <td>1.3500</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>13</th>\n",
              "      <td>14</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>8</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>4</td>\n",
              "      <td>9</td>\n",
              "      <td>14</td>\n",
              "      <td>-5</td>\n",
              "      <td>8</td>\n",
              "      <td>1.00</td>\n",
              "      <td>9.9</td>\n",
              "      <td>14.9</td>\n",
              "      <td>-5.1</td>\n",
              "      <td>-0.64</td>\n",
              "      <td>1.408696</td>\n",
              "      <td>1.2375</td>\n",
              "      <td>1.8625</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>14</th>\n",
              "      <td>15</td>\n",
              "      <td>Brentford</td>\n",
              "      <td>8</td>\n",
              "      <td>1</td>\n",
              "      <td>4</td>\n",
              "      <td>3</td>\n",
              "      <td>11</td>\n",
              "      <td>12</td>\n",
              "      <td>-1</td>\n",
              "      <td>7</td>\n",
              "      <td>0.88</td>\n",
              "      <td>13.8</td>\n",
              "      <td>9.8</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.50</td>\n",
              "      <td>2.295652</td>\n",
              "      <td>1.7250</td>\n",
              "      <td>1.2250</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>15</th>\n",
              "      <td>16</td>\n",
              "      <td>Everton</td>\n",
              "      <td>8</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>5</td>\n",
              "      <td>9</td>\n",
              "      <td>12</td>\n",
              "      <td>-3</td>\n",
              "      <td>7</td>\n",
              "      <td>0.88</td>\n",
              "      <td>14.7</td>\n",
              "      <td>10.2</td>\n",
              "      <td>4.5</td>\n",
              "      <td>0.56</td>\n",
              "      <td>2.226087</td>\n",
              "      <td>1.8375</td>\n",
              "      <td>1.2750</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>16</th>\n",
              "      <td>17</td>\n",
              "      <td>Luton Town</td>\n",
              "      <td>8</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>6</td>\n",
              "      <td>6</td>\n",
              "      <td>15</td>\n",
              "      <td>-9</td>\n",
              "      <td>4</td>\n",
              "      <td>0.50</td>\n",
              "      <td>9.5</td>\n",
              "      <td>14.7</td>\n",
              "      <td>-5.2</td>\n",
              "      <td>-0.65</td>\n",
              "      <td>1.443478</td>\n",
              "      <td>1.1875</td>\n",
              "      <td>1.8375</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>17</th>\n",
              "      <td>18</td>\n",
              "      <td>Burnley</td>\n",
              "      <td>8</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>6</td>\n",
              "      <td>7</td>\n",
              "      <td>20</td>\n",
              "      <td>-13</td>\n",
              "      <td>4</td>\n",
              "      <td>0.50</td>\n",
              "      <td>6.5</td>\n",
              "      <td>14.7</td>\n",
              "      <td>-8.2</td>\n",
              "      <td>-1.02</td>\n",
              "      <td>1.443478</td>\n",
              "      <td>0.8125</td>\n",
              "      <td>1.8375</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>18</th>\n",
              "      <td>19</td>\n",
              "      <td>Bournemouth</td>\n",
              "      <td>8</td>\n",
              "      <td>0</td>\n",
              "      <td>3</td>\n",
              "      <td>5</td>\n",
              "      <td>5</td>\n",
              "      <td>18</td>\n",
              "      <td>-13</td>\n",
              "      <td>3</td>\n",
              "      <td>0.38</td>\n",
              "      <td>8.8</td>\n",
              "      <td>18.6</td>\n",
              "      <td>-9.8</td>\n",
              "      <td>-1.23</td>\n",
              "      <td>0.765217</td>\n",
              "      <td>1.1000</td>\n",
              "      <td>2.3250</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>19</th>\n",
              "      <td>20</td>\n",
              "      <td>Sheffield Utd</td>\n",
              "      <td>8</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>7</td>\n",
              "      <td>6</td>\n",
              "      <td>22</td>\n",
              "      <td>-16</td>\n",
              "      <td>1</td>\n",
              "      <td>0.13</td>\n",
              "      <td>6.1</td>\n",
              "      <td>19.6</td>\n",
              "      <td>-13.5</td>\n",
              "      <td>-1.69</td>\n",
              "      <td>0.591304</td>\n",
              "      <td>0.7625</td>\n",
              "      <td>2.4500</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-5abeda89-b00a-45d3-b921-bf93f9911357')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-5abeda89-b00a-45d3-b921-bf93f9911357 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-5abeda89-b00a-45d3-b921-bf93f9911357');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-a7ced77b-bffe-4adc-909e-aaf4364316b1\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-a7ced77b-bffe-4adc-909e-aaf4364316b1')\"\n",
              "            title=\"Suggest charts.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-a7ced77b-bffe-4adc-909e-aaf4364316b1 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 57
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "fig, ax = plt.subplots(1, figsize=(10,8))\n",
        "ax.scatter(x=epltablexGxGc['xG/90'],y=epltablexGxGc['xGA/90'],c='DarkBlue')\n",
        "# set labels\n",
        "ax.set_xlabel('xG/90')\n",
        "ax.set_ylabel('xGA/90')\n",
        "\n",
        "# annotate points in axis\n",
        "for idx, row in epltablexGxGc.iterrows():\n",
        "    ax.annotate(row['team'], (row['xG/90'], row['xGA/90']) )\n",
        "# force matplotlib to draw the graph\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 704
        },
        "id": "TYn5yVsCNlLv",
        "outputId": "5f7aa714-aaeb-48f7-ead0-ac894d3b98fd"
      },
      "execution_count": 58,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1000x800 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "EPL_player_df"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 548
        },
        "id": "wrjHrDmJ8OlM",
        "outputId": "68ae026a-16dc-47ad-8ffa-48837d2853c4"
      },
      "execution_count": 59,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "        id     player_name games_x time_x goals_1wks_x            xG_1wks_x  \\\n",
              "0     8260  Erling Haaland       8    715            8    8.660618394613266   \n",
              "1      453   Son Heung-Min       8    665            6   3.7278890162706375   \n",
              "2     5232  Alexander Isak       7    492            6    6.077839493751526   \n",
              "3     1250   Mohamed Salah       8    705            5    5.663195997476578   \n",
              "4     1776    Jarrod Bowen       8    720            5   3.9032531157135963   \n",
              "..     ...             ...     ...    ...          ...                  ...   \n",
              "437  12073     Teden Mengi       3    145            0  0.01999759115278721   \n",
              "438  12086      Alex Matos       1      1            0                    0   \n",
              "439  12094     Mike Trésor       3    147            0     0.52695382386446   \n",
              "440  12105     Alejo Véliz       2      2            0                    0   \n",
              "441  12123         Murillo       2    180            0   0.5254862606525421   \n",
              "\n",
              "    assists_1wks_x            xA_1wks_x shots_1wks_x key_passes_1wks_x  ...  \\\n",
              "0                1    1.668504299595952           32                10  ...   \n",
              "1                0   2.3566972352564335           23                14  ...   \n",
              "2                0  0.16576022654771805           18                 3  ...   \n",
              "3                4    4.713720690459013           26                17  ...   \n",
              "4                1   1.2558341771364212           23                 5  ...   \n",
              "..             ...                  ...          ...               ...  ...   \n",
              "437              0                    0            1                 0  ...   \n",
              "438              0                    0            0                 0  ...   \n",
              "439              0   0.4080401435494423            2                 2  ...   \n",
              "440              0                    0            0                 0  ...   \n",
              "441              0  0.29608601331710815            3                 2  ...   \n",
              "\n",
              "    shots_1wks_y key_passes_1wks_y yellow_cards red_cards position_y  \\\n",
              "0             32                10            0         0          F   \n",
              "1             23                14            0         0        F M   \n",
              "2             18                 3            0         0        F S   \n",
              "3             26                17            1         0          F   \n",
              "4             23                 5            1         0          M   \n",
              "..           ...               ...          ...       ...        ...   \n",
              "437            1                 0            0         0        D S   \n",
              "438            0                 0            0         0          S   \n",
              "439            2                 2            0         0        F S   \n",
              "440            0                 0            1         0          S   \n",
              "441            3                 2            0         0          D   \n",
              "\n",
              "          team_title_y npg_1wks_y          npxG_1wks_y              xGChain  \\\n",
              "0      Manchester City          7    7.138280659914017    7.895254008471966   \n",
              "1            Tottenham          6   3.7278890162706375   7.8562997579574585   \n",
              "2     Newcastle United          5    5.316670656204224    5.515889436006546   \n",
              "3            Liverpool          3   3.3796895295381546    7.709213137626648   \n",
              "4             West Ham          5   3.9032531157135963    4.298343725502491   \n",
              "..                 ...        ...                  ...                  ...   \n",
              "437              Luton          0  0.01999759115278721  0.11997372843325138   \n",
              "438            Chelsea          0                    0                    0   \n",
              "439            Burnley          0     0.52695382386446   0.6905197724699974   \n",
              "440          Tottenham          0                    0                    0   \n",
              "441  Nottingham Forest          0   0.5254862606525421   0.8675576522946358   \n",
              "\n",
              "               xGBuildup  \n",
              "0     0.8118664845824242  \n",
              "1     2.9085745438933372  \n",
              "2      1.147395420819521  \n",
              "3     2.3846318386495113  \n",
              "4     1.2324372678995132  \n",
              "..                   ...  \n",
              "437  0.09997613728046417  \n",
              "438                    0  \n",
              "439  0.16356592625379562  \n",
              "440                    0  \n",
              "441   0.7223030999302864  \n",
              "\n",
              "[442 rows x 48 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-2914110f-ef02-41d7-b290-703341856732\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>player_name</th>\n",
              "      <th>games_x</th>\n",
              "      <th>time_x</th>\n",
              "      <th>goals_1wks_x</th>\n",
              "      <th>xG_1wks_x</th>\n",
              "      <th>assists_1wks_x</th>\n",
              "      <th>xA_1wks_x</th>\n",
              "      <th>shots_1wks_x</th>\n",
              "      <th>key_passes_1wks_x</th>\n",
              "      <th>...</th>\n",
              "      <th>shots_1wks_y</th>\n",
              "      <th>key_passes_1wks_y</th>\n",
              "      <th>yellow_cards</th>\n",
              "      <th>red_cards</th>\n",
              "      <th>position_y</th>\n",
              "      <th>team_title_y</th>\n",
              "      <th>npg_1wks_y</th>\n",
              "      <th>npxG_1wks_y</th>\n",
              "      <th>xGChain</th>\n",
              "      <th>xGBuildup</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>8260</td>\n",
              "      <td>Erling Haaland</td>\n",
              "      <td>8</td>\n",
              "      <td>715</td>\n",
              "      <td>8</td>\n",
              "      <td>8.660618394613266</td>\n",
              "      <td>1</td>\n",
              "      <td>1.668504299595952</td>\n",
              "      <td>32</td>\n",
              "      <td>10</td>\n",
              "      <td>...</td>\n",
              "      <td>32</td>\n",
              "      <td>10</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>F</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>7</td>\n",
              "      <td>7.138280659914017</td>\n",
              "      <td>7.895254008471966</td>\n",
              "      <td>0.8118664845824242</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>453</td>\n",
              "      <td>Son Heung-Min</td>\n",
              "      <td>8</td>\n",
              "      <td>665</td>\n",
              "      <td>6</td>\n",
              "      <td>3.7278890162706375</td>\n",
              "      <td>0</td>\n",
              "      <td>2.3566972352564335</td>\n",
              "      <td>23</td>\n",
              "      <td>14</td>\n",
              "      <td>...</td>\n",
              "      <td>23</td>\n",
              "      <td>14</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>F M</td>\n",
              "      <td>Tottenham</td>\n",
              "      <td>6</td>\n",
              "      <td>3.7278890162706375</td>\n",
              "      <td>7.8562997579574585</td>\n",
              "      <td>2.9085745438933372</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>5232</td>\n",
              "      <td>Alexander Isak</td>\n",
              "      <td>7</td>\n",
              "      <td>492</td>\n",
              "      <td>6</td>\n",
              "      <td>6.077839493751526</td>\n",
              "      <td>0</td>\n",
              "      <td>0.16576022654771805</td>\n",
              "      <td>18</td>\n",
              "      <td>3</td>\n",
              "      <td>...</td>\n",
              "      <td>18</td>\n",
              "      <td>3</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>F S</td>\n",
              "      <td>Newcastle United</td>\n",
              "      <td>5</td>\n",
              "      <td>5.316670656204224</td>\n",
              "      <td>5.515889436006546</td>\n",
              "      <td>1.147395420819521</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>1250</td>\n",
              "      <td>Mohamed Salah</td>\n",
              "      <td>8</td>\n",
              "      <td>705</td>\n",
              "      <td>5</td>\n",
              "      <td>5.663195997476578</td>\n",
              "      <td>4</td>\n",
              "      <td>4.713720690459013</td>\n",
              "      <td>26</td>\n",
              "      <td>17</td>\n",
              "      <td>...</td>\n",
              "      <td>26</td>\n",
              "      <td>17</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>F</td>\n",
              "      <td>Liverpool</td>\n",
              "      <td>3</td>\n",
              "      <td>3.3796895295381546</td>\n",
              "      <td>7.709213137626648</td>\n",
              "      <td>2.3846318386495113</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>1776</td>\n",
              "      <td>Jarrod Bowen</td>\n",
              "      <td>8</td>\n",
              "      <td>720</td>\n",
              "      <td>5</td>\n",
              "      <td>3.9032531157135963</td>\n",
              "      <td>1</td>\n",
              "      <td>1.2558341771364212</td>\n",
              "      <td>23</td>\n",
              "      <td>5</td>\n",
              "      <td>...</td>\n",
              "      <td>23</td>\n",
              "      <td>5</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>M</td>\n",
              "      <td>West Ham</td>\n",
              "      <td>5</td>\n",
              "      <td>3.9032531157135963</td>\n",
              "      <td>4.298343725502491</td>\n",
              "      <td>1.2324372678995132</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>437</th>\n",
              "      <td>12073</td>\n",
              "      <td>Teden Mengi</td>\n",
              "      <td>3</td>\n",
              "      <td>145</td>\n",
              "      <td>0</td>\n",
              "      <td>0.01999759115278721</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>D S</td>\n",
              "      <td>Luton</td>\n",
              "      <td>0</td>\n",
              "      <td>0.01999759115278721</td>\n",
              "      <td>0.11997372843325138</td>\n",
              "      <td>0.09997613728046417</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>438</th>\n",
              "      <td>12086</td>\n",
              "      <td>Alex Matos</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>S</td>\n",
              "      <td>Chelsea</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>439</th>\n",
              "      <td>12094</td>\n",
              "      <td>Mike Trésor</td>\n",
              "      <td>3</td>\n",
              "      <td>147</td>\n",
              "      <td>0</td>\n",
              "      <td>0.52695382386446</td>\n",
              "      <td>0</td>\n",
              "      <td>0.4080401435494423</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>...</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>F S</td>\n",
              "      <td>Burnley</td>\n",
              "      <td>0</td>\n",
              "      <td>0.52695382386446</td>\n",
              "      <td>0.6905197724699974</td>\n",
              "      <td>0.16356592625379562</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>440</th>\n",
              "      <td>12105</td>\n",
              "      <td>Alejo Véliz</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>S</td>\n",
              "      <td>Tottenham</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>441</th>\n",
              "      <td>12123</td>\n",
              "      <td>Murillo</td>\n",
              "      <td>2</td>\n",
              "      <td>180</td>\n",
              "      <td>0</td>\n",
              "      <td>0.5254862606525421</td>\n",
              "      <td>0</td>\n",
              "      <td>0.29608601331710815</td>\n",
              "      <td>3</td>\n",
              "      <td>2</td>\n",
              "      <td>...</td>\n",
              "      <td>3</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>D</td>\n",
              "      <td>Nottingham Forest</td>\n",
              "      <td>0</td>\n",
              "      <td>0.5254862606525421</td>\n",
              "      <td>0.8675576522946358</td>\n",
              "      <td>0.7223030999302864</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>442 rows × 48 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-2914110f-ef02-41d7-b290-703341856732')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-2914110f-ef02-41d7-b290-703341856732 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-2914110f-ef02-41d7-b290-703341856732');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-294a4d8a-01b4-4a2b-b09b-61019c831ab7\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-294a4d8a-01b4-4a2b-b09b-61019c831ab7')\"\n",
              "            title=\"Suggest charts.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-294a4d8a-01b4-4a2b-b09b-61019c831ab7 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 59
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "EPL_player_df['goals'] = EPL_player_df['goals_1wks_x'].astype(int)\n",
        "top25goals = EPL_player_df.nlargest(20, 'goals')\n",
        "top25goals"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 986
        },
        "id": "3H-vTRXF8VDs",
        "outputId": "8bf2b09d-256d-4275-9366-b15402be62a3"
      },
      "execution_count": 60,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "       id         player_name games_x time_x goals_1wks_x  \\\n",
              "0    8260      Erling Haaland       8    715            8   \n",
              "1     453       Son Heung-Min       8    665            6   \n",
              "2    5232      Alexander Isak       7    492            6   \n",
              "3    1250       Mohamed Salah       8    705            5   \n",
              "4    1776        Jarrod Bowen       8    720            5   \n",
              "5    8845      Hee-Chan Hwang       8    425            5   \n",
              "6     468       Callum Wilson       7    244            4   \n",
              "7    3697     Odsonne Edouard       7    612            4   \n",
              "8    6552        Bryan Mbeumo       8    720            4   \n",
              "9    7322         Bukayo Saka       7    621            4   \n",
              "10   8865       Ollie Watkins       8    699            4   \n",
              "11  10177       Evan Ferguson       8    370            4   \n",
              "12    618     Raheem Sterling       8    647            3   \n",
              "13   1679     Dominic Solanke       8    720            3   \n",
              "14   1726  Abdoulaye Doucouré       8    690            3   \n",
              "15   2517     Martin Odegaard       8    716            3   \n",
              "16   6049         Solly March       6    481            3   \n",
              "17   6122        Douglas Luiz       8    688            3   \n",
              "18   7166      Mathias Jensen       8    643            3   \n",
              "19   7498         Lyle Foster       6    528            3   \n",
              "\n",
              "              xG_1wks_x assists_1wks_x             xA_1wks_x shots_1wks_x  \\\n",
              "0     8.660618394613266              1     1.668504299595952           32   \n",
              "1    3.7278890162706375              0    2.3566972352564335           23   \n",
              "2     6.077839493751526              0   0.16576022654771805           18   \n",
              "3     5.663195997476578              4     4.713720690459013           26   \n",
              "4    3.9032531157135963              1    1.2558341771364212           23   \n",
              "5    1.7655854746699333              0    0.7128323242068291           12   \n",
              "6     4.151702173054218              0  0.015900330618023872           15   \n",
              "7     3.337449833750725              0    0.6013891436159611           20   \n",
              "8     4.362656898796558              0    0.9729051887989044           17   \n",
              "9     4.498355358839035              2    1.6839852184057236           18   \n",
              "10    3.983380749821663              4    2.3998800963163376           25   \n",
              "11    2.390436490997672              0    0.5010979250073433           16   \n",
              "12   2.7975301519036293              0    1.1820578202605247           17   \n",
              "13    3.490673191845417              1    0.5222105234861374           21   \n",
              "14    4.871711313724518              0    1.5295568350702524           16   \n",
              "15    2.398444140329957              1    1.2756545133888721           21   \n",
              "16   2.7198847085237503              1    0.7573332376778126           14   \n",
              "17    2.114725835621357              0    0.5825170166790485           16   \n",
              "18  0.30182472988963127              1    1.5650290362536907            5   \n",
              "19   1.9445639327168465              2   0.24916532449424267           10   \n",
              "\n",
              "   key_passes_1wks_x  ... key_passes_1wks_y yellow_cards red_cards position_y  \\\n",
              "0                 10  ...                10            0         0          F   \n",
              "1                 14  ...                14            0         0        F M   \n",
              "2                  3  ...                 3            0         0        F S   \n",
              "3                 17  ...                17            1         0          F   \n",
              "4                  5  ...                 5            1         0          M   \n",
              "5                  2  ...                 2            2         0      F M S   \n",
              "6                  1  ...                 1            1         0        F S   \n",
              "7                  6  ...                 6            0         0          F   \n",
              "8                 12  ...                12            1         0          F   \n",
              "9                 18  ...                18            1         0          F   \n",
              "10                16  ...                16            0         0          F   \n",
              "11                 3  ...                 3            0         0        F S   \n",
              "12                10  ...                10            2         0      F M S   \n",
              "13                 9  ...                 9            1         0          F   \n",
              "14                15  ...                15            1         0          M   \n",
              "15                13  ...                13            1         0          M   \n",
              "16                 6  ...                 6            0         0        D M   \n",
              "17                 7  ...                 7            4         0          M   \n",
              "18                15  ...                15            1         0          M   \n",
              "19                 4  ...                 4            0         1        F M   \n",
              "\n",
              "               team_title_y npg_1wks_y          npxG_1wks_y  \\\n",
              "0           Manchester City          7    7.138280659914017   \n",
              "1                 Tottenham          6   3.7278890162706375   \n",
              "2          Newcastle United          5    5.316670656204224   \n",
              "3                 Liverpool          3   3.3796895295381546   \n",
              "4                  West Ham          5   3.9032531157135963   \n",
              "5   Wolverhampton Wanderers          5   1.7655854746699333   \n",
              "6          Newcastle United          3    3.390533320605755   \n",
              "7            Crystal Palace          4    3.337449833750725   \n",
              "8                 Brentford          2    2.840319164097309   \n",
              "9                   Arsenal          2   2.9760177358984947   \n",
              "10              Aston Villa          4    3.983380749821663   \n",
              "11                 Brighton          4    2.390436490997672   \n",
              "12                  Chelsea          3   2.7975301519036293   \n",
              "13              Bournemouth          3    3.490673191845417   \n",
              "14                  Everton          3    4.871711313724518   \n",
              "15                  Arsenal          1   0.8761432524770498   \n",
              "16                 Brighton          3   2.7198847085237503   \n",
              "17              Aston Villa          1   0.5923881605267525   \n",
              "18                Brentford          3  0.30182472988963127   \n",
              "19                  Burnley          3   1.9445639327168465   \n",
              "\n",
              "               xGChain            xGBuildup goals  \n",
              "0    7.895254008471966   0.8118664845824242     8  \n",
              "1   7.8562997579574585   2.9085745438933372     6  \n",
              "2    5.515889436006546    1.147395420819521     6  \n",
              "3    7.709213137626648   2.3846318386495113     5  \n",
              "4    4.298343725502491   1.2324372678995132     5  \n",
              "5   2.9349683532491326   1.1753057623282075     5  \n",
              "6    3.509474078193307  0.23684066534042358     4  \n",
              "7   3.9065925031900406   1.1491391398012638     4  \n",
              "8   4.2316586673259735   1.2629205659031868     4  \n",
              "9    4.940073192119598   1.6321357525885105     4  \n",
              "10  6.8583923280239105   1.2309996578842402     4  \n",
              "11   4.455868896096945    1.684309009462595     4  \n",
              "12    7.23628705739975    3.800452060997486     3  \n",
              "13   4.026630610227585   0.5142069756984711     3  \n",
              "14   5.110526032745838   1.2972822897136211     3  \n",
              "15   4.278950065374374   3.2513335943222046     3  \n",
              "16   4.622100591659546   2.1153891384601593     3  \n",
              "17  4.4682888723909855    4.080933505669236     3  \n",
              "18   3.146622933447361   2.5787000339478254     3  \n",
              "19   2.203548438847065   0.4452045653015375     3  \n",
              "\n",
              "[20 rows x 49 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-5948948e-0c95-416e-b68b-2718457c3032\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>player_name</th>\n",
              "      <th>games_x</th>\n",
              "      <th>time_x</th>\n",
              "      <th>goals_1wks_x</th>\n",
              "      <th>xG_1wks_x</th>\n",
              "      <th>assists_1wks_x</th>\n",
              "      <th>xA_1wks_x</th>\n",
              "      <th>shots_1wks_x</th>\n",
              "      <th>key_passes_1wks_x</th>\n",
              "      <th>...</th>\n",
              "      <th>key_passes_1wks_y</th>\n",
              "      <th>yellow_cards</th>\n",
              "      <th>red_cards</th>\n",
              "      <th>position_y</th>\n",
              "      <th>team_title_y</th>\n",
              "      <th>npg_1wks_y</th>\n",
              "      <th>npxG_1wks_y</th>\n",
              "      <th>xGChain</th>\n",
              "      <th>xGBuildup</th>\n",
              "      <th>goals</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>8260</td>\n",
              "      <td>Erling Haaland</td>\n",
              "      <td>8</td>\n",
              "      <td>715</td>\n",
              "      <td>8</td>\n",
              "      <td>8.660618394613266</td>\n",
              "      <td>1</td>\n",
              "      <td>1.668504299595952</td>\n",
              "      <td>32</td>\n",
              "      <td>10</td>\n",
              "      <td>...</td>\n",
              "      <td>10</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>F</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>7</td>\n",
              "      <td>7.138280659914017</td>\n",
              "      <td>7.895254008471966</td>\n",
              "      <td>0.8118664845824242</td>\n",
              "      <td>8</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>453</td>\n",
              "      <td>Son Heung-Min</td>\n",
              "      <td>8</td>\n",
              "      <td>665</td>\n",
              "      <td>6</td>\n",
              "      <td>3.7278890162706375</td>\n",
              "      <td>0</td>\n",
              "      <td>2.3566972352564335</td>\n",
              "      <td>23</td>\n",
              "      <td>14</td>\n",
              "      <td>...</td>\n",
              "      <td>14</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>F M</td>\n",
              "      <td>Tottenham</td>\n",
              "      <td>6</td>\n",
              "      <td>3.7278890162706375</td>\n",
              "      <td>7.8562997579574585</td>\n",
              "      <td>2.9085745438933372</td>\n",
              "      <td>6</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>5232</td>\n",
              "      <td>Alexander Isak</td>\n",
              "      <td>7</td>\n",
              "      <td>492</td>\n",
              "      <td>6</td>\n",
              "      <td>6.077839493751526</td>\n",
              "      <td>0</td>\n",
              "      <td>0.16576022654771805</td>\n",
              "      <td>18</td>\n",
              "      <td>3</td>\n",
              "      <td>...</td>\n",
              "      <td>3</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>F S</td>\n",
              "      <td>Newcastle United</td>\n",
              "      <td>5</td>\n",
              "      <td>5.316670656204224</td>\n",
              "      <td>5.515889436006546</td>\n",
              "      <td>1.147395420819521</td>\n",
              "      <td>6</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>1250</td>\n",
              "      <td>Mohamed Salah</td>\n",
              "      <td>8</td>\n",
              "      <td>705</td>\n",
              "      <td>5</td>\n",
              "      <td>5.663195997476578</td>\n",
              "      <td>4</td>\n",
              "      <td>4.713720690459013</td>\n",
              "      <td>26</td>\n",
              "      <td>17</td>\n",
              "      <td>...</td>\n",
              "      <td>17</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>F</td>\n",
              "      <td>Liverpool</td>\n",
              "      <td>3</td>\n",
              "      <td>3.3796895295381546</td>\n",
              "      <td>7.709213137626648</td>\n",
              "      <td>2.3846318386495113</td>\n",
              "      <td>5</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>1776</td>\n",
              "      <td>Jarrod Bowen</td>\n",
              "      <td>8</td>\n",
              "      <td>720</td>\n",
              "      <td>5</td>\n",
              "      <td>3.9032531157135963</td>\n",
              "      <td>1</td>\n",
              "      <td>1.2558341771364212</td>\n",
              "      <td>23</td>\n",
              "      <td>5</td>\n",
              "      <td>...</td>\n",
              "      <td>5</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>M</td>\n",
              "      <td>West Ham</td>\n",
              "      <td>5</td>\n",
              "      <td>3.9032531157135963</td>\n",
              "      <td>4.298343725502491</td>\n",
              "      <td>1.2324372678995132</td>\n",
              "      <td>5</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>8845</td>\n",
              "      <td>Hee-Chan Hwang</td>\n",
              "      <td>8</td>\n",
              "      <td>425</td>\n",
              "      <td>5</td>\n",
              "      <td>1.7655854746699333</td>\n",
              "      <td>0</td>\n",
              "      <td>0.7128323242068291</td>\n",
              "      <td>12</td>\n",
              "      <td>2</td>\n",
              "      <td>...</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>F M S</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>5</td>\n",
              "      <td>1.7655854746699333</td>\n",
              "      <td>2.9349683532491326</td>\n",
              "      <td>1.1753057623282075</td>\n",
              "      <td>5</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>468</td>\n",
              "      <td>Callum Wilson</td>\n",
              "      <td>7</td>\n",
              "      <td>244</td>\n",
              "      <td>4</td>\n",
              "      <td>4.151702173054218</td>\n",
              "      <td>0</td>\n",
              "      <td>0.015900330618023872</td>\n",
              "      <td>15</td>\n",
              "      <td>1</td>\n",
              "      <td>...</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>F S</td>\n",
              "      <td>Newcastle United</td>\n",
              "      <td>3</td>\n",
              "      <td>3.390533320605755</td>\n",
              "      <td>3.509474078193307</td>\n",
              "      <td>0.23684066534042358</td>\n",
              "      <td>4</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>3697</td>\n",
              "      <td>Odsonne Edouard</td>\n",
              "      <td>7</td>\n",
              "      <td>612</td>\n",
              "      <td>4</td>\n",
              "      <td>3.337449833750725</td>\n",
              "      <td>0</td>\n",
              "      <td>0.6013891436159611</td>\n",
              "      <td>20</td>\n",
              "      <td>6</td>\n",
              "      <td>...</td>\n",
              "      <td>6</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>F</td>\n",
              "      <td>Crystal Palace</td>\n",
              "      <td>4</td>\n",
              "      <td>3.337449833750725</td>\n",
              "      <td>3.9065925031900406</td>\n",
              "      <td>1.1491391398012638</td>\n",
              "      <td>4</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>6552</td>\n",
              "      <td>Bryan Mbeumo</td>\n",
              "      <td>8</td>\n",
              "      <td>720</td>\n",
              "      <td>4</td>\n",
              "      <td>4.362656898796558</td>\n",
              "      <td>0</td>\n",
              "      <td>0.9729051887989044</td>\n",
              "      <td>17</td>\n",
              "      <td>12</td>\n",
              "      <td>...</td>\n",
              "      <td>12</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>F</td>\n",
              "      <td>Brentford</td>\n",
              "      <td>2</td>\n",
              "      <td>2.840319164097309</td>\n",
              "      <td>4.2316586673259735</td>\n",
              "      <td>1.2629205659031868</td>\n",
              "      <td>4</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>7322</td>\n",
              "      <td>Bukayo Saka</td>\n",
              "      <td>7</td>\n",
              "      <td>621</td>\n",
              "      <td>4</td>\n",
              "      <td>4.498355358839035</td>\n",
              "      <td>2</td>\n",
              "      <td>1.6839852184057236</td>\n",
              "      <td>18</td>\n",
              "      <td>18</td>\n",
              "      <td>...</td>\n",
              "      <td>18</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>F</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>2</td>\n",
              "      <td>2.9760177358984947</td>\n",
              "      <td>4.940073192119598</td>\n",
              "      <td>1.6321357525885105</td>\n",
              "      <td>4</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10</th>\n",
              "      <td>8865</td>\n",
              "      <td>Ollie Watkins</td>\n",
              "      <td>8</td>\n",
              "      <td>699</td>\n",
              "      <td>4</td>\n",
              "      <td>3.983380749821663</td>\n",
              "      <td>4</td>\n",
              "      <td>2.3998800963163376</td>\n",
              "      <td>25</td>\n",
              "      <td>16</td>\n",
              "      <td>...</td>\n",
              "      <td>16</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>F</td>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>4</td>\n",
              "      <td>3.983380749821663</td>\n",
              "      <td>6.8583923280239105</td>\n",
              "      <td>1.2309996578842402</td>\n",
              "      <td>4</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>11</th>\n",
              "      <td>10177</td>\n",
              "      <td>Evan Ferguson</td>\n",
              "      <td>8</td>\n",
              "      <td>370</td>\n",
              "      <td>4</td>\n",
              "      <td>2.390436490997672</td>\n",
              "      <td>0</td>\n",
              "      <td>0.5010979250073433</td>\n",
              "      <td>16</td>\n",
              "      <td>3</td>\n",
              "      <td>...</td>\n",
              "      <td>3</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>F S</td>\n",
              "      <td>Brighton</td>\n",
              "      <td>4</td>\n",
              "      <td>2.390436490997672</td>\n",
              "      <td>4.455868896096945</td>\n",
              "      <td>1.684309009462595</td>\n",
              "      <td>4</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>12</th>\n",
              "      <td>618</td>\n",
              "      <td>Raheem Sterling</td>\n",
              "      <td>8</td>\n",
              "      <td>647</td>\n",
              "      <td>3</td>\n",
              "      <td>2.7975301519036293</td>\n",
              "      <td>0</td>\n",
              "      <td>1.1820578202605247</td>\n",
              "      <td>17</td>\n",
              "      <td>10</td>\n",
              "      <td>...</td>\n",
              "      <td>10</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>F M S</td>\n",
              "      <td>Chelsea</td>\n",
              "      <td>3</td>\n",
              "      <td>2.7975301519036293</td>\n",
              "      <td>7.23628705739975</td>\n",
              "      <td>3.800452060997486</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>13</th>\n",
              "      <td>1679</td>\n",
              "      <td>Dominic Solanke</td>\n",
              "      <td>8</td>\n",
              "      <td>720</td>\n",
              "      <td>3</td>\n",
              "      <td>3.490673191845417</td>\n",
              "      <td>1</td>\n",
              "      <td>0.5222105234861374</td>\n",
              "      <td>21</td>\n",
              "      <td>9</td>\n",
              "      <td>...</td>\n",
              "      <td>9</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>F</td>\n",
              "      <td>Bournemouth</td>\n",
              "      <td>3</td>\n",
              "      <td>3.490673191845417</td>\n",
              "      <td>4.026630610227585</td>\n",
              "      <td>0.5142069756984711</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>14</th>\n",
              "      <td>1726</td>\n",
              "      <td>Abdoulaye Doucouré</td>\n",
              "      <td>8</td>\n",
              "      <td>690</td>\n",
              "      <td>3</td>\n",
              "      <td>4.871711313724518</td>\n",
              "      <td>0</td>\n",
              "      <td>1.5295568350702524</td>\n",
              "      <td>16</td>\n",
              "      <td>15</td>\n",
              "      <td>...</td>\n",
              "      <td>15</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>M</td>\n",
              "      <td>Everton</td>\n",
              "      <td>3</td>\n",
              "      <td>4.871711313724518</td>\n",
              "      <td>5.110526032745838</td>\n",
              "      <td>1.2972822897136211</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>15</th>\n",
              "      <td>2517</td>\n",
              "      <td>Martin Odegaard</td>\n",
              "      <td>8</td>\n",
              "      <td>716</td>\n",
              "      <td>3</td>\n",
              "      <td>2.398444140329957</td>\n",
              "      <td>1</td>\n",
              "      <td>1.2756545133888721</td>\n",
              "      <td>21</td>\n",
              "      <td>13</td>\n",
              "      <td>...</td>\n",
              "      <td>13</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>M</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>1</td>\n",
              "      <td>0.8761432524770498</td>\n",
              "      <td>4.278950065374374</td>\n",
              "      <td>3.2513335943222046</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>16</th>\n",
              "      <td>6049</td>\n",
              "      <td>Solly March</td>\n",
              "      <td>6</td>\n",
              "      <td>481</td>\n",
              "      <td>3</td>\n",
              "      <td>2.7198847085237503</td>\n",
              "      <td>1</td>\n",
              "      <td>0.7573332376778126</td>\n",
              "      <td>14</td>\n",
              "      <td>6</td>\n",
              "      <td>...</td>\n",
              "      <td>6</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>D M</td>\n",
              "      <td>Brighton</td>\n",
              "      <td>3</td>\n",
              "      <td>2.7198847085237503</td>\n",
              "      <td>4.622100591659546</td>\n",
              "      <td>2.1153891384601593</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>17</th>\n",
              "      <td>6122</td>\n",
              "      <td>Douglas Luiz</td>\n",
              "      <td>8</td>\n",
              "      <td>688</td>\n",
              "      <td>3</td>\n",
              "      <td>2.114725835621357</td>\n",
              "      <td>0</td>\n",
              "      <td>0.5825170166790485</td>\n",
              "      <td>16</td>\n",
              "      <td>7</td>\n",
              "      <td>...</td>\n",
              "      <td>7</td>\n",
              "      <td>4</td>\n",
              "      <td>0</td>\n",
              "      <td>M</td>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>1</td>\n",
              "      <td>0.5923881605267525</td>\n",
              "      <td>4.4682888723909855</td>\n",
              "      <td>4.080933505669236</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>18</th>\n",
              "      <td>7166</td>\n",
              "      <td>Mathias Jensen</td>\n",
              "      <td>8</td>\n",
              "      <td>643</td>\n",
              "      <td>3</td>\n",
              "      <td>0.30182472988963127</td>\n",
              "      <td>1</td>\n",
              "      <td>1.5650290362536907</td>\n",
              "      <td>5</td>\n",
              "      <td>15</td>\n",
              "      <td>...</td>\n",
              "      <td>15</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>M</td>\n",
              "      <td>Brentford</td>\n",
              "      <td>3</td>\n",
              "      <td>0.30182472988963127</td>\n",
              "      <td>3.146622933447361</td>\n",
              "      <td>2.5787000339478254</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>19</th>\n",
              "      <td>7498</td>\n",
              "      <td>Lyle Foster</td>\n",
              "      <td>6</td>\n",
              "      <td>528</td>\n",
              "      <td>3</td>\n",
              "      <td>1.9445639327168465</td>\n",
              "      <td>2</td>\n",
              "      <td>0.24916532449424267</td>\n",
              "      <td>10</td>\n",
              "      <td>4</td>\n",
              "      <td>...</td>\n",
              "      <td>4</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>F M</td>\n",
              "      <td>Burnley</td>\n",
              "      <td>3</td>\n",
              "      <td>1.9445639327168465</td>\n",
              "      <td>2.203548438847065</td>\n",
              "      <td>0.4452045653015375</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>20 rows × 49 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-5948948e-0c95-416e-b68b-2718457c3032')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-5948948e-0c95-416e-b68b-2718457c3032 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-5948948e-0c95-416e-b68b-2718457c3032');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-4d0fc8e8-2008-4f9e-8aa4-ef53f59ec0db\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-4d0fc8e8-2008-4f9e-8aa4-ef53f59ec0db')\"\n",
              "            title=\"Suggest charts.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-4d0fc8e8-2008-4f9e-8aa4-ef53f59ec0db button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 60
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "EPL_player_df['assists'] = EPL_player_df['assists_1wks_x'].astype(int)\n",
        "top25assists = EPL_player_df.nlargest(20, 'assists')\n",
        "top25assists"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "id": "QhNKarUM-fT7",
        "outputId": "8e9b6c52-7671-42b6-b9ab-4a2f0d64c404"
      },
      "execution_count": 61,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "        id           player_name games_x time_x goals_1wks_x  \\\n",
              "38    6818        James Maddison       8    690            2   \n",
              "75    6382            Pedro Neto       8    720            1   \n",
              "151    652       Kieran Trippier       8    706            0   \n",
              "3     1250         Mohamed Salah       8    705            5   \n",
              "10    8865         Ollie Watkins       8    699            4   \n",
              "322   8965       Vladimir Coufal       8    719            0   \n",
              "22   10806          Kaoru Mitoma       8    664            3   \n",
              "23   10846        Julián Álvarez       8    671            3   \n",
              "27     843     James Ward-Prowse       7    630            2   \n",
              "36    6556          Moussa Diaby       8    652            2   \n",
              "66    5136             Estupiñán       6    501            1   \n",
              "73    6055            Phil Foden       8    610            1   \n",
              "226   5735  Jean-Philippe Mateta       6    296            0   \n",
              "9     7322           Bukayo Saka       7    621            4   \n",
              "19    7498           Lyle Foster       6    528            3   \n",
              "20    7814         Taiwo Awoniyi       7    506            3   \n",
              "21   10720          Darwin Núñez       7    303            3   \n",
              "43    8150        Anthony Gordon       7    563            2   \n",
              "71    6026           Richarlison       8    395            1   \n",
              "94    7752    Gabriel Martinelli       6    408            1   \n",
              "\n",
              "                xG_1wks_x assists_1wks_x            xA_1wks_x shots_1wks_x  \\\n",
              "38     1.9730247240513563              5   3.2829940505325794           22   \n",
              "75     1.5424103140830994              5   3.1593491435050964           12   \n",
              "151  0.056369323283433914              5   3.4927512276917696            2   \n",
              "3       5.663195997476578              4    4.713720690459013           26   \n",
              "10      3.983380749821663              4   2.3998800963163376           25   \n",
              "322                     0              4    1.418715288862586            0   \n",
              "22     2.8942469768226147              3   2.0520801916718483           14   \n",
              "23     2.9144918397068977              3   1.5498470813035965           24   \n",
              "27      1.776030132547021              3   2.4906528368592262            9   \n",
              "36     1.7033004313707352              3    3.283157140016556           18   \n",
              "66     0.9581431178376079              3    2.586997412145138            8   \n",
              "73     0.8667226657271385              3   1.7405716069042683           14   \n",
              "226   0.46638140827417374              3   1.1094887554645538            3   \n",
              "9       4.498355358839035              2   1.6839852184057236           18   \n",
              "19     1.9445639327168465              2  0.24916532449424267           10   \n",
              "20      2.686458572745323              2   0.6755558587610722            9   \n",
              "21      3.730779930949211              2    1.228606104850769           17   \n",
              "43     1.3640061765909195              2   2.3695434629917145           15   \n",
              "71     2.6984850391745567              2   0.7277316562831402           18   \n",
              "94     0.7512451335787773              2  0.22485857643187046           11   \n",
              "\n",
              "    key_passes_1wks_x  ... yellow_cards red_cards position_y  \\\n",
              "38                 25  ...            2         0          M   \n",
              "75                 20  ...            2         0        F M   \n",
              "151                28  ...            1         0          D   \n",
              "3                  17  ...            1         0          F   \n",
              "10                 16  ...            0         0          F   \n",
              "322                11  ...            0         0          D   \n",
              "22                 16  ...            3         0        M S   \n",
              "23                 19  ...            2         0        F M   \n",
              "27                 15  ...            1         0          M   \n",
              "36                 12  ...            0         0        F M   \n",
              "66                 13  ...            2         0          D   \n",
              "73                 20  ...            0         0      F M S   \n",
              "226                 5  ...            0         0        F S   \n",
              "9                  18  ...            1         0          F   \n",
              "19                  4  ...            0         1        F M   \n",
              "20                  9  ...            1         0        F S   \n",
              "21                  3  ...            1         0        F S   \n",
              "43                  8  ...            5         0        F S   \n",
              "71                  5  ...            2         0      F M S   \n",
              "94                  5  ...            0         0        F S   \n",
              "\n",
              "                team_title_y npg_1wks_y           npxG_1wks_y  \\\n",
              "38                 Tottenham          2    1.9730247240513563   \n",
              "75   Wolverhampton Wanderers          1    1.5424103140830994   \n",
              "151         Newcastle United          0  0.056369323283433914   \n",
              "3                  Liverpool          3    3.3796895295381546   \n",
              "10               Aston Villa          4     3.983380749821663   \n",
              "322                 West Ham          0                     0   \n",
              "22                  Brighton          3    2.8942469768226147   \n",
              "23           Manchester City          3    2.9144918397068977   \n",
              "27                  West Ham          2     1.776030132547021   \n",
              "36               Aston Villa          2    1.7033004313707352   \n",
              "66                  Brighton          1    0.9581431178376079   \n",
              "73           Manchester City          1    0.8667226657271385   \n",
              "226           Crystal Palace          0   0.46638140827417374   \n",
              "9                    Arsenal          2    2.9760177358984947   \n",
              "19                   Burnley          3    1.9445639327168465   \n",
              "20         Nottingham Forest          3     2.686458572745323   \n",
              "21                 Liverpool          3     3.730779930949211   \n",
              "43          Newcastle United          2    1.3640061765909195   \n",
              "71                 Tottenham          1    2.6984850391745567   \n",
              "94                   Arsenal          1    0.7512451335787773   \n",
              "\n",
              "                xGChain            xGBuildup goals assists  \n",
              "38    8.239279389381409    4.838850170373917     2       5  \n",
              "75    4.135570153594017    0.704450685530901     1       5  \n",
              "151   6.362825527787209    4.576132580637932     0       5  \n",
              "3     7.709213137626648   2.3846318386495113     5       4  \n",
              "10   6.8583923280239105   1.2309996578842402     4       4  \n",
              "322  2.8269483745098114    2.423241078853607     0       4  \n",
              "22    8.410828471183777    4.405431795865297     3       3  \n",
              "23      6.5734648630023    3.657637782394886     3       3  \n",
              "27   3.7894532065838575   2.0194941852241755     2       3  \n",
              "36    6.440099731087685    3.571206232532859     2       3  \n",
              "66    5.427657574415207   3.5554743763059378     1       3  \n",
              "73    4.280009791254997   3.1265867333859205     1       3  \n",
              "226  1.6016539111733437  0.15994777902960777     0       3  \n",
              "9     4.940073192119598   1.6321357525885105     4       2  \n",
              "19    2.203548438847065   0.4452045653015375     3       2  \n",
              "20    2.755252443253994  0.14992253202944994     3       2  \n",
              "21    5.135522410273552    1.082434169948101     3       2  \n",
              "43    5.209602937102318   2.4654395151883364     2       2  \n",
              "71   3.5352008268237114   0.5210381969809532     1       2  \n",
              "94   2.6806630343198776    2.073520690202713     1       2  \n",
              "\n",
              "[20 rows x 50 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-53d333a0-0437-4e3d-bd89-da60eb20fed2\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>player_name</th>\n",
              "      <th>games_x</th>\n",
              "      <th>time_x</th>\n",
              "      <th>goals_1wks_x</th>\n",
              "      <th>xG_1wks_x</th>\n",
              "      <th>assists_1wks_x</th>\n",
              "      <th>xA_1wks_x</th>\n",
              "      <th>shots_1wks_x</th>\n",
              "      <th>key_passes_1wks_x</th>\n",
              "      <th>...</th>\n",
              "      <th>yellow_cards</th>\n",
              "      <th>red_cards</th>\n",
              "      <th>position_y</th>\n",
              "      <th>team_title_y</th>\n",
              "      <th>npg_1wks_y</th>\n",
              "      <th>npxG_1wks_y</th>\n",
              "      <th>xGChain</th>\n",
              "      <th>xGBuildup</th>\n",
              "      <th>goals</th>\n",
              "      <th>assists</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>38</th>\n",
              "      <td>6818</td>\n",
              "      <td>James Maddison</td>\n",
              "      <td>8</td>\n",
              "      <td>690</td>\n",
              "      <td>2</td>\n",
              "      <td>1.9730247240513563</td>\n",
              "      <td>5</td>\n",
              "      <td>3.2829940505325794</td>\n",
              "      <td>22</td>\n",
              "      <td>25</td>\n",
              "      <td>...</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>M</td>\n",
              "      <td>Tottenham</td>\n",
              "      <td>2</td>\n",
              "      <td>1.9730247240513563</td>\n",
              "      <td>8.239279389381409</td>\n",
              "      <td>4.838850170373917</td>\n",
              "      <td>2</td>\n",
              "      <td>5</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>75</th>\n",
              "      <td>6382</td>\n",
              "      <td>Pedro Neto</td>\n",
              "      <td>8</td>\n",
              "      <td>720</td>\n",
              "      <td>1</td>\n",
              "      <td>1.5424103140830994</td>\n",
              "      <td>5</td>\n",
              "      <td>3.1593491435050964</td>\n",
              "      <td>12</td>\n",
              "      <td>20</td>\n",
              "      <td>...</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>F M</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>1</td>\n",
              "      <td>1.5424103140830994</td>\n",
              "      <td>4.135570153594017</td>\n",
              "      <td>0.704450685530901</td>\n",
              "      <td>1</td>\n",
              "      <td>5</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>151</th>\n",
              "      <td>652</td>\n",
              "      <td>Kieran Trippier</td>\n",
              "      <td>8</td>\n",
              "      <td>706</td>\n",
              "      <td>0</td>\n",
              "      <td>0.056369323283433914</td>\n",
              "      <td>5</td>\n",
              "      <td>3.4927512276917696</td>\n",
              "      <td>2</td>\n",
              "      <td>28</td>\n",
              "      <td>...</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>D</td>\n",
              "      <td>Newcastle United</td>\n",
              "      <td>0</td>\n",
              "      <td>0.056369323283433914</td>\n",
              "      <td>6.362825527787209</td>\n",
              "      <td>4.576132580637932</td>\n",
              "      <td>0</td>\n",
              "      <td>5</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>1250</td>\n",
              "      <td>Mohamed Salah</td>\n",
              "      <td>8</td>\n",
              "      <td>705</td>\n",
              "      <td>5</td>\n",
              "      <td>5.663195997476578</td>\n",
              "      <td>4</td>\n",
              "      <td>4.713720690459013</td>\n",
              "      <td>26</td>\n",
              "      <td>17</td>\n",
              "      <td>...</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>F</td>\n",
              "      <td>Liverpool</td>\n",
              "      <td>3</td>\n",
              "      <td>3.3796895295381546</td>\n",
              "      <td>7.709213137626648</td>\n",
              "      <td>2.3846318386495113</td>\n",
              "      <td>5</td>\n",
              "      <td>4</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10</th>\n",
              "      <td>8865</td>\n",
              "      <td>Ollie Watkins</td>\n",
              "      <td>8</td>\n",
              "      <td>699</td>\n",
              "      <td>4</td>\n",
              "      <td>3.983380749821663</td>\n",
              "      <td>4</td>\n",
              "      <td>2.3998800963163376</td>\n",
              "      <td>25</td>\n",
              "      <td>16</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>F</td>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>4</td>\n",
              "      <td>3.983380749821663</td>\n",
              "      <td>6.8583923280239105</td>\n",
              "      <td>1.2309996578842402</td>\n",
              "      <td>4</td>\n",
              "      <td>4</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>322</th>\n",
              "      <td>8965</td>\n",
              "      <td>Vladimir Coufal</td>\n",
              "      <td>8</td>\n",
              "      <td>719</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>4</td>\n",
              "      <td>1.418715288862586</td>\n",
              "      <td>0</td>\n",
              "      <td>11</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>D</td>\n",
              "      <td>West Ham</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>2.8269483745098114</td>\n",
              "      <td>2.423241078853607</td>\n",
              "      <td>0</td>\n",
              "      <td>4</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>22</th>\n",
              "      <td>10806</td>\n",
              "      <td>Kaoru Mitoma</td>\n",
              "      <td>8</td>\n",
              "      <td>664</td>\n",
              "      <td>3</td>\n",
              "      <td>2.8942469768226147</td>\n",
              "      <td>3</td>\n",
              "      <td>2.0520801916718483</td>\n",
              "      <td>14</td>\n",
              "      <td>16</td>\n",
              "      <td>...</td>\n",
              "      <td>3</td>\n",
              "      <td>0</td>\n",
              "      <td>M S</td>\n",
              "      <td>Brighton</td>\n",
              "      <td>3</td>\n",
              "      <td>2.8942469768226147</td>\n",
              "      <td>8.410828471183777</td>\n",
              "      <td>4.405431795865297</td>\n",
              "      <td>3</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>23</th>\n",
              "      <td>10846</td>\n",
              "      <td>Julián Álvarez</td>\n",
              "      <td>8</td>\n",
              "      <td>671</td>\n",
              "      <td>3</td>\n",
              "      <td>2.9144918397068977</td>\n",
              "      <td>3</td>\n",
              "      <td>1.5498470813035965</td>\n",
              "      <td>24</td>\n",
              "      <td>19</td>\n",
              "      <td>...</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>F M</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>3</td>\n",
              "      <td>2.9144918397068977</td>\n",
              "      <td>6.5734648630023</td>\n",
              "      <td>3.657637782394886</td>\n",
              "      <td>3</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>27</th>\n",
              "      <td>843</td>\n",
              "      <td>James Ward-Prowse</td>\n",
              "      <td>7</td>\n",
              "      <td>630</td>\n",
              "      <td>2</td>\n",
              "      <td>1.776030132547021</td>\n",
              "      <td>3</td>\n",
              "      <td>2.4906528368592262</td>\n",
              "      <td>9</td>\n",
              "      <td>15</td>\n",
              "      <td>...</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>M</td>\n",
              "      <td>West Ham</td>\n",
              "      <td>2</td>\n",
              "      <td>1.776030132547021</td>\n",
              "      <td>3.7894532065838575</td>\n",
              "      <td>2.0194941852241755</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>36</th>\n",
              "      <td>6556</td>\n",
              "      <td>Moussa Diaby</td>\n",
              "      <td>8</td>\n",
              "      <td>652</td>\n",
              "      <td>2</td>\n",
              "      <td>1.7033004313707352</td>\n",
              "      <td>3</td>\n",
              "      <td>3.283157140016556</td>\n",
              "      <td>18</td>\n",
              "      <td>12</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>F M</td>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>2</td>\n",
              "      <td>1.7033004313707352</td>\n",
              "      <td>6.440099731087685</td>\n",
              "      <td>3.571206232532859</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>66</th>\n",
              "      <td>5136</td>\n",
              "      <td>Estupiñán</td>\n",
              "      <td>6</td>\n",
              "      <td>501</td>\n",
              "      <td>1</td>\n",
              "      <td>0.9581431178376079</td>\n",
              "      <td>3</td>\n",
              "      <td>2.586997412145138</td>\n",
              "      <td>8</td>\n",
              "      <td>13</td>\n",
              "      <td>...</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>D</td>\n",
              "      <td>Brighton</td>\n",
              "      <td>1</td>\n",
              "      <td>0.9581431178376079</td>\n",
              "      <td>5.427657574415207</td>\n",
              "      <td>3.5554743763059378</td>\n",
              "      <td>1</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>73</th>\n",
              "      <td>6055</td>\n",
              "      <td>Phil Foden</td>\n",
              "      <td>8</td>\n",
              "      <td>610</td>\n",
              "      <td>1</td>\n",
              "      <td>0.8667226657271385</td>\n",
              "      <td>3</td>\n",
              "      <td>1.7405716069042683</td>\n",
              "      <td>14</td>\n",
              "      <td>20</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>F M S</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>1</td>\n",
              "      <td>0.8667226657271385</td>\n",
              "      <td>4.280009791254997</td>\n",
              "      <td>3.1265867333859205</td>\n",
              "      <td>1</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>226</th>\n",
              "      <td>5735</td>\n",
              "      <td>Jean-Philippe Mateta</td>\n",
              "      <td>6</td>\n",
              "      <td>296</td>\n",
              "      <td>0</td>\n",
              "      <td>0.46638140827417374</td>\n",
              "      <td>3</td>\n",
              "      <td>1.1094887554645538</td>\n",
              "      <td>3</td>\n",
              "      <td>5</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>F S</td>\n",
              "      <td>Crystal Palace</td>\n",
              "      <td>0</td>\n",
              "      <td>0.46638140827417374</td>\n",
              "      <td>1.6016539111733437</td>\n",
              "      <td>0.15994777902960777</td>\n",
              "      <td>0</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>7322</td>\n",
              "      <td>Bukayo Saka</td>\n",
              "      <td>7</td>\n",
              "      <td>621</td>\n",
              "      <td>4</td>\n",
              "      <td>4.498355358839035</td>\n",
              "      <td>2</td>\n",
              "      <td>1.6839852184057236</td>\n",
              "      <td>18</td>\n",
              "      <td>18</td>\n",
              "      <td>...</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>F</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>2</td>\n",
              "      <td>2.9760177358984947</td>\n",
              "      <td>4.940073192119598</td>\n",
              "      <td>1.6321357525885105</td>\n",
              "      <td>4</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>19</th>\n",
              "      <td>7498</td>\n",
              "      <td>Lyle Foster</td>\n",
              "      <td>6</td>\n",
              "      <td>528</td>\n",
              "      <td>3</td>\n",
              "      <td>1.9445639327168465</td>\n",
              "      <td>2</td>\n",
              "      <td>0.24916532449424267</td>\n",
              "      <td>10</td>\n",
              "      <td>4</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>F M</td>\n",
              "      <td>Burnley</td>\n",
              "      <td>3</td>\n",
              "      <td>1.9445639327168465</td>\n",
              "      <td>2.203548438847065</td>\n",
              "      <td>0.4452045653015375</td>\n",
              "      <td>3</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>20</th>\n",
              "      <td>7814</td>\n",
              "      <td>Taiwo Awoniyi</td>\n",
              "      <td>7</td>\n",
              "      <td>506</td>\n",
              "      <td>3</td>\n",
              "      <td>2.686458572745323</td>\n",
              "      <td>2</td>\n",
              "      <td>0.6755558587610722</td>\n",
              "      <td>9</td>\n",
              "      <td>9</td>\n",
              "      <td>...</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>F S</td>\n",
              "      <td>Nottingham Forest</td>\n",
              "      <td>3</td>\n",
              "      <td>2.686458572745323</td>\n",
              "      <td>2.755252443253994</td>\n",
              "      <td>0.14992253202944994</td>\n",
              "      <td>3</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>21</th>\n",
              "      <td>10720</td>\n",
              "      <td>Darwin Núñez</td>\n",
              "      <td>7</td>\n",
              "      <td>303</td>\n",
              "      <td>3</td>\n",
              "      <td>3.730779930949211</td>\n",
              "      <td>2</td>\n",
              "      <td>1.228606104850769</td>\n",
              "      <td>17</td>\n",
              "      <td>3</td>\n",
              "      <td>...</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>F S</td>\n",
              "      <td>Liverpool</td>\n",
              "      <td>3</td>\n",
              "      <td>3.730779930949211</td>\n",
              "      <td>5.135522410273552</td>\n",
              "      <td>1.082434169948101</td>\n",
              "      <td>3</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>43</th>\n",
              "      <td>8150</td>\n",
              "      <td>Anthony Gordon</td>\n",
              "      <td>7</td>\n",
              "      <td>563</td>\n",
              "      <td>2</td>\n",
              "      <td>1.3640061765909195</td>\n",
              "      <td>2</td>\n",
              "      <td>2.3695434629917145</td>\n",
              "      <td>15</td>\n",
              "      <td>8</td>\n",
              "      <td>...</td>\n",
              "      <td>5</td>\n",
              "      <td>0</td>\n",
              "      <td>F S</td>\n",
              "      <td>Newcastle United</td>\n",
              "      <td>2</td>\n",
              "      <td>1.3640061765909195</td>\n",
              "      <td>5.209602937102318</td>\n",
              "      <td>2.4654395151883364</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>71</th>\n",
              "      <td>6026</td>\n",
              "      <td>Richarlison</td>\n",
              "      <td>8</td>\n",
              "      <td>395</td>\n",
              "      <td>1</td>\n",
              "      <td>2.6984850391745567</td>\n",
              "      <td>2</td>\n",
              "      <td>0.7277316562831402</td>\n",
              "      <td>18</td>\n",
              "      <td>5</td>\n",
              "      <td>...</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>F M S</td>\n",
              "      <td>Tottenham</td>\n",
              "      <td>1</td>\n",
              "      <td>2.6984850391745567</td>\n",
              "      <td>3.5352008268237114</td>\n",
              "      <td>0.5210381969809532</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>94</th>\n",
              "      <td>7752</td>\n",
              "      <td>Gabriel Martinelli</td>\n",
              "      <td>6</td>\n",
              "      <td>408</td>\n",
              "      <td>1</td>\n",
              "      <td>0.7512451335787773</td>\n",
              "      <td>2</td>\n",
              "      <td>0.22485857643187046</td>\n",
              "      <td>11</td>\n",
              "      <td>5</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>F S</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>1</td>\n",
              "      <td>0.7512451335787773</td>\n",
              "      <td>2.6806630343198776</td>\n",
              "      <td>2.073520690202713</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>20 rows × 50 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-53d333a0-0437-4e3d-bd89-da60eb20fed2')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-53d333a0-0437-4e3d-bd89-da60eb20fed2 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-53d333a0-0437-4e3d-bd89-da60eb20fed2');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-6396b51c-04fd-44cd-bee1-9b23be06bcec\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-6396b51c-04fd-44cd-bee1-9b23be06bcec')\"\n",
              "            title=\"Suggest charts.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-6396b51c-04fd-44cd-bee1-9b23be06bcec button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 61
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import pandas as pd\n",
        "import plotly.express as px\n",
        "import plotly.graph_objects as go"
      ],
      "metadata": {
        "id": "t81EQEbg_2jQ"
      },
      "execution_count": 62,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "fig3= go.Figure()\n",
        "fig3.add_trace(go.Scatter(x = top25goals[\"goals\"],\n",
        "                          y = top25goals[\"player_name\"],\n",
        "                          mode = 'markers',\n",
        "                          marker_color = 'darkblue',\n",
        "                          marker_size = 10,\n",
        "                          name = 'goals'))\n",
        "fig3.add_trace(go.Scatter(x = top25goals[\"xG_1wks_x\"],\n",
        "                          y = top25goals[\"player_name\"],\n",
        "                          mode = 'markers',\n",
        "                          marker_color = 'darkorange',\n",
        "                          marker_size = 10,\n",
        "                          name = 'xG'))\n",
        "for i in range(0, len(top25goals)):\n",
        "               fig3.add_shape(type='line',\n",
        "                              x0 = top25goals[\"goals\"][i],\n",
        "                              y0 = i,\n",
        "                              x1 = top25goals[\"xG_1wks_x\"][i],\n",
        "                              y1 = i,\n",
        "                              line=dict(color='crimson', width = 3))\n",
        "fig3.update_layout(title_text =\n",
        "                    \"Goals vs xG\",\n",
        "                    title_font_size = 30)\n",
        "fig3.update_xaxes(range=[0, 30])\n",
        "fig3.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 542
        },
        "id": "pCjmRmyw-6sd",
        "outputId": "e11adc58-2945-4862-d85e-5283bd0fca82"
      },
      "execution_count": 63,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<html>\n",
              "<head><meta charset=\"utf-8\" /></head>\n",
              "<body>\n",
              "    <div>            <script src=\"https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.5/MathJax.js?config=TeX-AMS-MML_SVG\"></script><script type=\"text/javascript\">if (window.MathJax && window.MathJax.Hub && window.MathJax.Hub.Config) {window.MathJax.Hub.Config({SVG: {font: \"STIX-Web\"}});}</script>                <script type=\"text/javascript\">window.PlotlyConfig = {MathJaxConfig: 'local'};</script>\n",
              "        <script charset=\"utf-8\" src=\"https://cdn.plot.ly/plotly-2.24.1.min.js\"></script>                <div id=\"7773038a-e14b-4cc8-abd2-1d2a1c18f243\" class=\"plotly-graph-div\" style=\"height:525px; width:100%;\"></div>            <script type=\"text/javascript\">                                    window.PLOTLYENV=window.PLOTLYENV || {};                                    if (document.getElementById(\"7773038a-e14b-4cc8-abd2-1d2a1c18f243\")) {                    Plotly.newPlot(                        \"7773038a-e14b-4cc8-abd2-1d2a1c18f243\",                        [{\"marker\":{\"color\":\"darkblue\",\"size\":10},\"mode\":\"markers\",\"name\":\"goals\",\"x\":[8,6,6,5,5,5,4,4,4,4,4,4,3,3,3,3,3,3,3,3],\"y\":[\"Erling Haaland\",\"Son Heung-Min\",\"Alexander Isak\",\"Mohamed Salah\",\"Jarrod Bowen\",\"Hee-Chan Hwang\",\"Callum Wilson\",\"Odsonne Edouard\",\"Bryan Mbeumo\",\"Bukayo Saka\",\"Ollie Watkins\",\"Evan Ferguson\",\"Raheem Sterling\",\"Dominic Solanke\",\"Abdoulaye Doucour\\u00e9\",\"Martin Odegaard\",\"Solly March\",\"Douglas Luiz\",\"Mathias Jensen\",\"Lyle Foster\"],\"type\":\"scatter\"},{\"marker\":{\"color\":\"darkorange\",\"size\":10},\"mode\":\"markers\",\"name\":\"xG\",\"x\":[\"8.660618394613266\",\"3.7278890162706375\",\"6.077839493751526\",\"5.663195997476578\",\"3.9032531157135963\",\"1.7655854746699333\",\"4.151702173054218\",\"3.337449833750725\",\"4.362656898796558\",\"4.498355358839035\",\"3.983380749821663\",\"2.390436490997672\",\"2.7975301519036293\",\"3.490673191845417\",\"4.871711313724518\",\"2.398444140329957\",\"2.7198847085237503\",\"2.114725835621357\",\"0.30182472988963127\",\"1.9445639327168465\"],\"y\":[\"Erling Haaland\",\"Son Heung-Min\",\"Alexander Isak\",\"Mohamed Salah\",\"Jarrod Bowen\",\"Hee-Chan Hwang\",\"Callum Wilson\",\"Odsonne Edouard\",\"Bryan Mbeumo\",\"Bukayo Saka\",\"Ollie Watkins\",\"Evan Ferguson\",\"Raheem Sterling\",\"Dominic Solanke\",\"Abdoulaye Doucour\\u00e9\",\"Martin Odegaard\",\"Solly March\",\"Douglas Luiz\",\"Mathias Jensen\",\"Lyle Foster\"],\"type\":\"scatter\"}],                        {\"template\":{\"data\":{\"histogram2dcontour\":[{\"type\":\"histogram2dcontour\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"choropleth\":[{\"type\":\"choropleth\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"histogram2d\":[{\"type\":\"histogram2d\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"heatmap\":[{\"type\":\"heatmap\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"heatmapgl\":[{\"type\":\"heatmapgl\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"contourcarpet\":[{\"type\":\"contourcarpet\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"contour\":[{\"type\":\"contour\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"surface\":[{\"type\":\"surface\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"mesh3d\":[{\"type\":\"mesh3d\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"scatter\":[{\"fillpattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2},\"type\":\"scatter\"}],\"parcoords\":[{\"type\":\"parcoords\",\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterpolargl\":[{\"type\":\"scatterpolargl\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"bar\":[{\"error_x\":{\"color\":\"#2a3f5f\"},\"error_y\":{\"color\":\"#2a3f5f\"},\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"bar\"}],\"scattergeo\":[{\"type\":\"scattergeo\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterpolar\":[{\"type\":\"scatterpolar\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"histogram\":[{\"marker\":{\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"histogram\"}],\"scattergl\":[{\"type\":\"scattergl\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatter3d\":[{\"type\":\"scatter3d\",\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scattermapbox\":[{\"type\":\"scattermapbox\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterternary\":[{\"type\":\"scatterternary\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scattercarpet\":[{\"type\":\"scattercarpet\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"carpet\":[{\"aaxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"baxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"type\":\"carpet\"}],\"table\":[{\"cells\":{\"fill\":{\"color\":\"#EBF0F8\"},\"line\":{\"color\":\"white\"}},\"header\":{\"fill\":{\"color\":\"#C8D4E3\"},\"line\":{\"color\":\"white\"}},\"type\":\"table\"}],\"barpolar\":[{\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"barpolar\"}],\"pie\":[{\"automargin\":true,\"type\":\"pie\"}]},\"layout\":{\"autotypenumbers\":\"strict\",\"colorway\":[\"#636efa\",\"#EF553B\",\"#00cc96\",\"#ab63fa\",\"#FFA15A\",\"#19d3f3\",\"#FF6692\",\"#B6E880\",\"#FF97FF\",\"#FECB52\"],\"font\":{\"color\":\"#2a3f5f\"},\"hovermode\":\"closest\",\"hoverlabel\":{\"align\":\"left\"},\"paper_bgcolor\":\"white\",\"plot_bgcolor\":\"#E5ECF6\",\"polar\":{\"bgcolor\":\"#E5ECF6\",\"angularaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"radialaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"ternary\":{\"bgcolor\":\"#E5ECF6\",\"aaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"baxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"caxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"coloraxis\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"colorscale\":{\"sequential\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"sequentialminus\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"diverging\":[[0,\"#8e0152\"],[0.1,\"#c51b7d\"],[0.2,\"#de77ae\"],[0.3,\"#f1b6da\"],[0.4,\"#fde0ef\"],[0.5,\"#f7f7f7\"],[0.6,\"#e6f5d0\"],[0.7,\"#b8e186\"],[0.8,\"#7fbc41\"],[0.9,\"#4d9221\"],[1,\"#276419\"]]},\"xaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"automargin\":true,\"zerolinewidth\":2},\"yaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"automargin\":true,\"zerolinewidth\":2},\"scene\":{\"xaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2},\"yaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2},\"zaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2}},\"shapedefaults\":{\"line\":{\"color\":\"#2a3f5f\"}},\"annotationdefaults\":{\"arrowcolor\":\"#2a3f5f\",\"arrowhead\":0,\"arrowwidth\":1},\"geo\":{\"bgcolor\":\"white\",\"landcolor\":\"#E5ECF6\",\"subunitcolor\":\"white\",\"showland\":true,\"showlakes\":true,\"lakecolor\":\"white\"},\"title\":{\"x\":0.05},\"mapbox\":{\"style\":\"light\"}}},\"shapes\":[{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":8,\"x1\":\"8.660618394613266\",\"y0\":0,\"y1\":0},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":6,\"x1\":\"3.7278890162706375\",\"y0\":1,\"y1\":1},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":6,\"x1\":\"6.077839493751526\",\"y0\":2,\"y1\":2},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":5,\"x1\":\"5.663195997476578\",\"y0\":3,\"y1\":3},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":5,\"x1\":\"3.9032531157135963\",\"y0\":4,\"y1\":4},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":5,\"x1\":\"1.7655854746699333\",\"y0\":5,\"y1\":5},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":4,\"x1\":\"4.151702173054218\",\"y0\":6,\"y1\":6},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":4,\"x1\":\"3.337449833750725\",\"y0\":7,\"y1\":7},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":4,\"x1\":\"4.362656898796558\",\"y0\":8,\"y1\":8},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":4,\"x1\":\"4.498355358839035\",\"y0\":9,\"y1\":9},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":4,\"x1\":\"3.983380749821663\",\"y0\":10,\"y1\":10},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":4,\"x1\":\"2.390436490997672\",\"y0\":11,\"y1\":11},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":3,\"x1\":\"2.7975301519036293\",\"y0\":12,\"y1\":12},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":3,\"x1\":\"3.490673191845417\",\"y0\":13,\"y1\":13},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":3,\"x1\":\"4.871711313724518\",\"y0\":14,\"y1\":14},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":3,\"x1\":\"2.398444140329957\",\"y0\":15,\"y1\":15},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":3,\"x1\":\"2.7198847085237503\",\"y0\":16,\"y1\":16},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":3,\"x1\":\"2.114725835621357\",\"y0\":17,\"y1\":17},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":3,\"x1\":\"0.30182472988963127\",\"y0\":18,\"y1\":18},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":3,\"x1\":\"1.9445639327168465\",\"y0\":19,\"y1\":19}],\"title\":{\"font\":{\"size\":30},\"text\":\"Goals vs xG\"},\"xaxis\":{\"range\":[0,30]}},                        {\"responsive\": true}                    ).then(function(){\n",
              "                            \n",
              "var gd = document.getElementById('7773038a-e14b-4cc8-abd2-1d2a1c18f243');\n",
              "var x = new MutationObserver(function (mutations, observer) {{\n",
              "        var display = window.getComputedStyle(gd).display;\n",
              "        if (!display || display === 'none') {{\n",
              "            console.log([gd, 'removed!']);\n",
              "            Plotly.purge(gd);\n",
              "            observer.disconnect();\n",
              "        }}\n",
              "}});\n",
              "\n",
              "// Listen for the removal of the full notebook cells\n",
              "var notebookContainer = gd.closest('#notebook-container');\n",
              "if (notebookContainer) {{\n",
              "    x.observe(notebookContainer, {childList: true});\n",
              "}}\n",
              "\n",
              "// Listen for the clearing of the current output cell\n",
              "var outputEl = gd.closest('.output');\n",
              "if (outputEl) {{\n",
              "    x.observe(outputEl, {childList: true});\n",
              "}}\n",
              "\n",
              "                        })                };                            </script>        </div>\n",
              "</body>\n",
              "</html>"
            ]
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "seasonedit = one_game_df.drop(columns=[ 'yellow_cards','red_cards','time'])"
      ],
      "metadata": {
        "id": "zxhwefRPFQDN"
      },
      "execution_count": 64,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "top25assists.columns"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "wSmCXk6YFSz5",
        "outputId": "c67c19b6-e171-412c-d4cf-d95ef26c5479"
      },
      "execution_count": 65,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Index(['id', 'player_name', 'games_x', 'time_x', 'goals_1wks_x', 'xG_1wks_x',\n",
              "       'assists_1wks_x', 'xA_1wks_x', 'shots_1wks_x', 'key_passes_1wks_x',\n",
              "       'yellow_cards_x', 'red_cards_x', 'position_x', 'team_title_x',\n",
              "       'npg_1wks_x', 'npxG_1wks_x', 'xGChain_x', 'xGBuildup_x', 'games_y',\n",
              "       'time_y', 'goals_season', 'xG_season', 'assists_season', 'xA_season',\n",
              "       'shots_season', 'key_passes_season', 'yellow_cards_y', 'red_cards_y',\n",
              "       'npg_season', 'npxG_season', 'xGChain_y', 'xGBuildup_y', 'games',\n",
              "       'time', 'goals_1wks_y', 'xG_1wks_y', 'assists_1wks_y', 'xA_1wks_y',\n",
              "       'shots_1wks_y', 'key_passes_1wks_y', 'yellow_cards', 'red_cards',\n",
              "       'position_y', 'team_title_y', 'npg_1wks_y', 'npxG_1wks_y', 'xGChain',\n",
              "       'xGBuildup', 'goals', 'assists'],\n",
              "      dtype='object')"
            ]
          },
          "metadata": {},
          "execution_count": 65
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "top20assists = top25assists.drop(columns=[ 'shots_1wks_x', 'key_passes_1wks_x',\n",
        "       'yellow_cards_x', 'red_cards_x', 'position_x', 'team_title_x',\n",
        "       'npg_1wks_x', 'npxG_1wks_x', 'xGChain_x', 'xGBuildup_x', 'games_y',\n",
        "       'time_y', 'goals_season', 'xG_season', 'assists_season', 'xA_season',\n",
        "       'shots_season', 'key_passes_season', 'yellow_cards_y', 'red_cards_y',\n",
        "       'npg_season', 'npxG_season', 'xGChain_y', 'xGBuildup_y', 'games',\n",
        "       'time', 'goals_1wks_y', 'xG_1wks_y', 'assists_1wks_y', 'xA_1wks_y',\n",
        "       'shots_1wks_y', 'key_passes_1wks_y', 'yellow_cards', 'red_cards',\n",
        "       'position_y', 'team_title_y', 'npg_1wks_y', 'npxG_1wks_y', 'xGChain',\n",
        "       'xGBuildup', 'assists_1wks_x', 'games_x', 'time_x', 'goals_1wks_x', 'id' ])\n",
        "\n",
        "top20assists.reset_index(inplace = True,drop = True)\n",
        "top20assists"
      ],
      "metadata": {
        "id": "_Xn659fiFXvb"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "fig4= go.Figure()\n",
        "fig4.add_trace(go.Scatter(x = top20assists[\"assists\"],\n",
        "                          y = top20assists[\"player_name\"],\n",
        "                          mode = 'markers',\n",
        "                          marker_color = 'darkblue',\n",
        "                          marker_size = 10,\n",
        "                          name = 'assists'))\n",
        "fig4.add_trace(go.Scatter(x = top20assists[\"xA_1wks_x\"],\n",
        "                          y = top20assists[\"player_name\"],\n",
        "                          mode = 'markers',\n",
        "                          marker_color = 'darkorange',\n",
        "                          marker_size = 10,\n",
        "                          name = 'xA'))\n",
        "for i in range(0, len(top20assists)):\n",
        "               fig4.add_shape(type='line',\n",
        "                              x0 = top20assists['assists'][i],\n",
        "                              y0 = i,\n",
        "                              x1 = top20assists[\"xA_1wks_x\"][i],\n",
        "                              y1 = i,\n",
        "                              line=dict(color='crimson', width = 3))\n",
        "fig4.update_layout(title_text =\n",
        "                    \"assists vs xG\",\n",
        "                    title_font_size = 15)\n",
        "fig4.update_xaxes(range=[0, 15])\n",
        "fig4.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 245
        },
        "id": "P6oVjqCSF4Pw",
        "outputId": "fbb2161f-ff1e-4b97-c244-6af89ea80a55"
      },
      "execution_count": 66,
      "outputs": [
        {
          "output_type": "error",
          "ename": "NameError",
          "evalue": "ignored",
          "traceback": [
            "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
            "\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)",
            "\u001b[0;32m<ipython-input-66-4eb79fee619c>\u001b[0m in \u001b[0;36m<cell line: 2>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      1\u001b[0m \u001b[0mfig4\u001b[0m\u001b[0;34m=\u001b[0m \u001b[0mgo\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mFigure\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 2\u001b[0;31m fig4.add_trace(go.Scatter(x = top20assists[\"assists\"],\n\u001b[0m\u001b[1;32m      3\u001b[0m                           \u001b[0my\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mtop20assists\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m\"player_name\"\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      4\u001b[0m                           \u001b[0mmode\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m'markers'\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      5\u001b[0m                           \u001b[0mmarker_color\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m'darkblue'\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;31mNameError\u001b[0m: name 'top20assists' is not defined"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import pandas as pd\n",
        "import matplotlib.pyplot as plt\n",
        "\n",
        "# Assuming you have already loaded the DataFrame named 'Top50'\n",
        "\n",
        "# Filter the DataFrame by position type\n",
        "midfielders = Top50[Top50['pos'] == 'M']\n",
        "forwards = Top50[Top50['pos'] == 'F']\n",
        "defenders = Top50[Top50['pos'] == 'D']\n",
        "\n",
        "# Sort the filtered DataFrames by '5GW Total' in descending order\n",
        "midfielders = midfielders.sort_values(by='5GW Total', ascending=False)\n",
        "forwards = forwards.sort_values(by='5GW Total', ascending=False)\n",
        "defenders = defenders.sort_values(by='5GW Total', ascending=False)\n",
        "\n",
        "# Plotting the bar charts\n",
        "plt.figure(figsize=(12, 6))\n",
        "\n",
        "# Midfielders chart\n",
        "plt.subplot(131)\n",
        "plt.bar(midfielders['name'][:10], midfielders['5GW Total'][:10])\n",
        "plt.title('Top 10 Midfielders by 5GW Total')\n",
        "plt.xticks(rotation=45)\n",
        "\n",
        "# Forwards chart\n",
        "plt.subplot(132)\n",
        "plt.bar(forwards['name'][:10], forwards['5GW Total'][:10])\n",
        "plt.title('Top 10 Forwards by 5GW Total')\n",
        "plt.xticks(rotation=45)\n",
        "\n",
        "# Defenders chart\n",
        "plt.subplot(133)\n",
        "plt.bar(defenders['name'][:10], defenders['5GW Total'][:10])\n",
        "plt.title('Top 10 Defenders by 5GW Total')\n",
        "plt.xticks(rotation=45)\n",
        "\n",
        "plt.tight_layout()\n",
        "plt.show()\n"
      ],
      "metadata": {
        "id": "FN06IYwSKGLw",
        "outputId": "f6f10211-bde3-43f5-c325-179b56a64e92",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 601
        }
      },
      "execution_count": 67,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1200x600 with 3 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import pandas as pd\n",
        "import matplotlib.pyplot as plt\n",
        "\n",
        "# Assuming you have already loaded the DataFrame named 'Top50'\n",
        "\n",
        "# Filter the DataFrame by position type\n",
        "midfielders = Top50[Top50['pos'] == 'M']\n",
        "forwards = Top50[Top50['pos'] == 'F']\n",
        "defenders = Top50[Top50['pos'] == 'D']\n",
        "\n",
        "# Sort the filtered DataFrames by '5GW Total' in descending order\n",
        "midfielders = midfielders.sort_values(by='5GW Total', ascending=False)\n",
        "forwards = forwards.sort_values(by='5GW Total', ascending=False)\n",
        "defenders = defenders.sort_values(by='5GW Total', ascending=False)\n",
        "\n",
        "# Create a list of colors for each chart\n",
        "colors = ['blue', 'green', 'red']\n",
        "\n",
        "# Plotting the horizontal bar charts with different colors\n",
        "plt.figure(figsize=(10, 6))\n",
        "\n",
        "# Midfielders chart\n",
        "plt.barh(midfielders['name'][:10], midfielders['5GW Total'][:10], color=colors[0])\n",
        "plt.title('Top 10 Midfielders by 5GW Total')\n",
        "plt.xlabel('5GW Total')\n",
        "plt.gca().invert_yaxis()  # Invert y-axis to have higher values at the top\n",
        "\n",
        "# Forwards chart\n",
        "plt.figure(figsize=(10, 6))\n",
        "plt.barh(forwards['name'][:10], forwards['5GW Total'][:10], color=colors[1])\n",
        "plt.title('Top 10 Forwards by 5GW Total')\n",
        "plt.xlabel('5GW Total')\n",
        "plt.gca().invert_yaxis()  # Invert y-axis to have higher values at the top\n",
        "\n",
        "# Defenders chart\n",
        "plt.figure(figsize=(10, 6))\n",
        "plt.barh(defenders['name'][:10], defenders['5GW Total'][:10], color=colors[2])\n",
        "plt.title('Top 10 Defenders by 5GW Total')\n",
        "plt.xlabel('5GW Total')\n",
        "plt.gca().invert_yaxis()  # Invert y-axis to have higher values at the top\n",
        "\n",
        "plt.tight_layout()\n",
        "plt.show()\n"
      ],
      "metadata": {
        "id": "VSYcUse-SrV-",
        "outputId": "567fef3c-309c-4f40-c092-13629f9f04e5",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        }
      },
      "execution_count": 68,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1000x600 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1000x600 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1000x600 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import pandas as pd\n",
        "import seaborn as sns\n",
        "import matplotlib.pyplot as plt\n",
        "\n",
        "# Assuming you have already loaded the DataFrame named 'gwadjustments26'\n",
        "\n",
        "# Set the index column\n",
        "gwadjustments26.set_index('team', inplace=True)\n",
        "\n",
        "# Create a color map\n",
        "cmap = sns.diverging_palette(240, 10, as_cmap=True)\n",
        "\n",
        "# Plot the heatmap\n",
        "plt.figure(figsize=(8, 6))\n",
        "sns.heatmap(gwadjustments26, annot=True, cmap=cmap, center=0)\n",
        "plt.title('Color-Coded Table of GW Adjustments')\n",
        "plt.show()\n"
      ],
      "metadata": {
        "id": "X2DQdb15YZfr",
        "outputId": "d63387f1-65e0-4a81-b6be-0113e066abba",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 245
        }
      },
      "execution_count": 69,
      "outputs": [
        {
          "output_type": "error",
          "ename": "NameError",
          "evalue": "ignored",
          "traceback": [
            "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
            "\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)",
            "\u001b[0;32m<ipython-input-69-41580282a9ec>\u001b[0m in \u001b[0;36m<cell line: 8>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      6\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      7\u001b[0m \u001b[0;31m# Set the index column\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 8\u001b[0;31m \u001b[0mgwadjustments26\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mset_index\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m'team'\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0minplace\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mTrue\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      9\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     10\u001b[0m \u001b[0;31m# Create a color map\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;31mNameError\u001b[0m: name 'gwadjustments26' is not defined"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "plt.figure(figsize=(10, 6))\n",
        "\n",
        "scores_columns = ['gw2adjustment', 'gw3adjustment', 'gw4adjustment', 'gw5adjustment', 'gw6adjustment']\n",
        "\n",
        "bottom = [0] * len(gwadjustments26)\n",
        "\n",
        "for score_col in scores_columns:\n",
        "    plt.bar(gwadjustments26.index, gwadjustments26[score_col], bottom=bottom, label=score_col)\n",
        "    bottom += gwadjustments26[score_col]\n",
        "\n",
        "plt.xlabel('Teams')\n",
        "plt.ylabel('Score Adjustments')\n",
        "plt.title('Stacked GW Adjustments for Different Teams')\n",
        "plt.xticks(rotation=45)\n",
        "plt.legend()\n",
        "plt.tight_layout()\n",
        "\n",
        "plt.show()\n"
      ],
      "metadata": {
        "id": "z7T7SgQSYyL8",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 262
        },
        "outputId": "6db5341e-1999-48a4-cd2d-31c8f095e4ec"
      },
      "execution_count": 70,
      "outputs": [
        {
          "output_type": "error",
          "ename": "NameError",
          "evalue": "ignored",
          "traceback": [
            "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
            "\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)",
            "\u001b[0;32m<ipython-input-70-34a67219a3b7>\u001b[0m in \u001b[0;36m<cell line: 5>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      3\u001b[0m \u001b[0mscores_columns\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m[\u001b[0m\u001b[0;34m'gw2adjustment'\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m'gw3adjustment'\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m'gw4adjustment'\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m'gw5adjustment'\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m'gw6adjustment'\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      4\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 5\u001b[0;31m \u001b[0mbottom\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m[\u001b[0m\u001b[0;36m0\u001b[0m\u001b[0;34m]\u001b[0m \u001b[0;34m*\u001b[0m \u001b[0mlen\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mgwadjustments26\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      6\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      7\u001b[0m \u001b[0;32mfor\u001b[0m \u001b[0mscore_col\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mscores_columns\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;31mNameError\u001b[0m: name 'gwadjustments26' is not defined"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1000x600 with 0 Axes>"
            ]
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "plt.figure(figsize=(10, 6))\n",
        "\n",
        "# Calculate the total score adjustments for each team\n",
        "gwadjustments26['Total'] = gwadjustments26.sum(axis=1)\n",
        "\n",
        "# Sort the DataFrame by the 'Total' column in descending order\n",
        "gwadjustments26 = gwadjustments26.sort_values(by='Total', ascending=False)\n",
        "\n",
        "# Get the scores columns\n",
        "scores_columns = ['gw2adjustment', 'gw3adjustment', 'gw4adjustment', 'gw5adjustment', 'gw6adjustment']\n",
        "\n",
        "bottom = [0] * len(gwadjustments26)\n",
        "\n",
        "for score_col in scores_columns:\n",
        "    plt.bar(gwadjustments26.index, gwadjustments26[score_col], bottom=bottom, label=score_col)\n",
        "    bottom += gwadjustments26[score_col]\n",
        "\n",
        "plt.xlabel('Teams')\n",
        "plt.ylabel('Score Adjustments')\n",
        "plt.title('Stacked GW Adjustments for Different Teams')\n",
        "plt.xticks(rotation=45)\n",
        "plt.legend()\n",
        "plt.tight_layout()\n",
        "\n",
        "plt.show()\n"
      ],
      "metadata": {
        "id": "XxE_pa9xZB8N",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 262
        },
        "outputId": "986a2ebc-e9df-4ef4-fd6b-2cf9d7c1bb09"
      },
      "execution_count": 71,
      "outputs": [
        {
          "output_type": "error",
          "ename": "NameError",
          "evalue": "ignored",
          "traceback": [
            "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
            "\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)",
            "\u001b[0;32m<ipython-input-71-af3019cce511>\u001b[0m in \u001b[0;36m<cell line: 4>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      2\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      3\u001b[0m \u001b[0;31m# Calculate the total score adjustments for each team\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 4\u001b[0;31m \u001b[0mgwadjustments26\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'Total'\u001b[0m\u001b[0;34m]\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mgwadjustments26\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0msum\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0maxis\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;36m1\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      5\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      6\u001b[0m \u001b[0;31m# Sort the DataFrame by the 'Total' column in descending order\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;31mNameError\u001b[0m: name 'gwadjustments26' is not defined"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1000x600 with 0 Axes>"
            ]
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import pandas as pd\n",
        "import seaborn as sns\n",
        "import matplotlib.pyplot as plt\n",
        "\n",
        "# Assuming you have already loaded the DataFrame named 'gwadjustments26'\n",
        "\n",
        "# Set the index column\n",
        "gwadjustments26.set_index('team', inplace=True)\n",
        "\n",
        "# Create a custom color map\n",
        "cmap = sns.diverging_palette(240, 10, n=21, as_cmap=True)\n",
        "colors = ['red', 'orange', 'green']\n",
        "\n",
        "# Define color thresholds\n",
        "color_thresholds = [0.9, 1.1, 2.0]\n",
        "\n",
        "# Normalize values for coloring\n",
        "normalized_values = (gwadjustments26 - 0.9) / (2.0 - 0.9)\n",
        "\n",
        "# Apply color map and thresholds\n",
        "colored_values = pd.cut(normalized_values, bins=color_thresholds, labels=colors)\n",
        "\n",
        "# Plot the heatmap with customized color coding\n",
        "plt.figure(figsize=(8, 6))\n",
        "sns.heatmap(normalized_values, annot=True, cmap=cmap, center=1, cbar=False, fmt=\".2f\", linewidths=0.5, linecolor='white')\n",
        "plt.title('Custom Color-Coded Table of GW Adjustments')\n",
        "plt.xticks(rotation=45)\n",
        "plt.show()\n"
      ],
      "metadata": {
        "id": "_YnxO1yMZekH",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 245
        },
        "outputId": "960b2b03-5ea0-4740-dfe2-e1198a583a6f"
      },
      "execution_count": 72,
      "outputs": [
        {
          "output_type": "error",
          "ename": "NameError",
          "evalue": "ignored",
          "traceback": [
            "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
            "\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)",
            "\u001b[0;32m<ipython-input-72-6a2b296170b4>\u001b[0m in \u001b[0;36m<cell line: 8>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      6\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      7\u001b[0m \u001b[0;31m# Set the index column\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 8\u001b[0;31m \u001b[0mgwadjustments26\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mset_index\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m'team'\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0minplace\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mTrue\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      9\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     10\u001b[0m \u001b[0;31m# Create a custom color map\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;31mNameError\u001b[0m: name 'gwadjustments26' is not defined"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "plt.figure(figsize=(10, 8))\n",
        "\n",
        "# Calculate the total score adjustments for each team\n",
        "gwadjustments26['Total'] = gwadjustments26.sum(axis=1)\n",
        "\n",
        "# Sort the DataFrame by the 'Total' column in descending order\n",
        "gwadjustments26 = gwadjustments26.sort_values(by='Total', ascending=False)\n",
        "\n",
        "# Get the scores columns\n",
        "scores_columns = ['gw2adjustment', 'gw3adjustment', 'gw4adjustment', 'gw5adjustment', 'gw6adjustment']\n",
        "\n",
        "# Define color thresholds and corresponding colors\n",
        "color_thresholds = [0.9, 1.1, 2.0]\n",
        "colors = ['red', 'orange', 'green']\n",
        "\n",
        "bottom = [0] * len(gwadjustments26)\n",
        "\n",
        "for score_col in scores_columns:\n",
        "    adjusted_values = gwadjustments26[score_col]\n",
        "\n",
        "    # Create a color list based on thresholds\n",
        "    colors_for_col = [colors[-1] if val is None else\n",
        "                      colors[0] if val < color_thresholds[0] else\n",
        "                      colors[1] if val <= color_thresholds[1] else\n",
        "                      colors[2]\n",
        "                      for val in adjusted_values]\n",
        "\n",
        "    for i, (val, color) in enumerate(zip(adjusted_values, colors_for_col)):\n",
        "        plt.barh(gwadjustments26.index[i], val, color=color, edgecolor='white')\n",
        "\n",
        "    bottom += adjusted_values\n",
        "\n",
        "plt.xlabel('Score Adjustments')\n",
        "plt.ylabel('Teams')\n",
        "plt.title('Horizontally Stacked GW Adjustments for Different Teams')\n",
        "plt.legend(labels=scores_columns)\n",
        "plt.gca().invert_yaxis()  # Invert y-axis to have higher values at the top\n",
        "plt.tight_layout()\n",
        "\n",
        "plt.show()\n"
      ],
      "metadata": {
        "id": "5agSlfUragM2",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 262
        },
        "outputId": "b563f6ca-4f3a-4030-a898-6476adae644f"
      },
      "execution_count": 73,
      "outputs": [
        {
          "output_type": "error",
          "ename": "NameError",
          "evalue": "ignored",
          "traceback": [
            "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
            "\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)",
            "\u001b[0;32m<ipython-input-73-2d5ab370e1c4>\u001b[0m in \u001b[0;36m<cell line: 4>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      2\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      3\u001b[0m \u001b[0;31m# Calculate the total score adjustments for each team\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 4\u001b[0;31m \u001b[0mgwadjustments26\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'Total'\u001b[0m\u001b[0;34m]\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mgwadjustments26\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0msum\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0maxis\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;36m1\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      5\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      6\u001b[0m \u001b[0;31m# Sort the DataFrame by the 'Total' column in descending order\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;31mNameError\u001b[0m: name 'gwadjustments26' is not defined"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1000x800 with 0 Axes>"
            ]
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import requests\n",
        "import pandas as pd\n",
        "from urllib.request import urlopen\n",
        "from json import loads\n",
        "from csv import writer\n",
        "\n",
        "def team_converter(team_id):\n",
        "    '''Converts a team's ID to their actual name'''\n",
        "    team_map = {\n",
        "        1: \"Arsenal\",\n",
        "        2: \"Aston Villa\",\n",
        "        3: \"Bournemouth\",\n",
        "        4: \"Brentford\",\n",
        "        5: \"Brighton\",\n",
        "        6: \"Burnley\",\n",
        "        7: \"Chelsea\",\n",
        "        8: \"Crystal Palace\",\n",
        "        9: \"Everton\",\n",
        "        10: \"Fulham\",\n",
        "        11: \"Liverpool\",\n",
        "        12: \"Luton Town\",\n",
        "        13: \"Manchester City\",\n",
        "        14: \"Manchester United\",\n",
        "        15: \"Newcastle United\",\n",
        "        16: \"Nottingham Forest\",\n",
        "        17: \"Sheffield United\",\n",
        "        18: \"Tottenham\",\n",
        "        19: \"West Ham\",\n",
        "        20: \"Wolverhampton Wanderers\",\n",
        "        None: None\n",
        "    }\n",
        "    return team_map.get(team_id, None)  # Use get to handle missing team IDs\n",
        "\n",
        "def position_converter(position):\n",
        "    '''Converts a player's element_type to their actual position'''\n",
        "    position_map = {\n",
        "        1: \"Goalkeeper\",\n",
        "        2: \"Defender\",\n",
        "        3: \"Midfielder\",\n",
        "        4: \"Forward\"\n",
        "    }\n",
        "    return position_map.get(position, None)  # Use get to handle missing positions\n",
        "\n",
        "def main():\n",
        "    team_entry_id = 6388102\n",
        "    url = f'https://fantasy.premierleague.com/api/entry/{team_entry_id}/transfers'\n",
        "\n",
        "    try:\n",
        "        response = requests.get(url)\n",
        "        response.raise_for_status()  # Check for any HTTP errors\n",
        "\n",
        "        transfers_data = response.json()\n",
        "\n",
        "        # Get player names from the provided API\n",
        "        player_ids_in = [transfer['element_in'] for transfer in transfers_data]\n",
        "        player_ids_out = [transfer.get('element_out', None) for transfer in transfers_data]\n",
        "\n",
        "        all_data = loads(urlopen(\"https://fantasy.premierleague.com/api/bootstrap-static/\").read())\n",
        "        players = all_data[\"elements\"]\n",
        "\n",
        "        # Build a dictionary of player names for players transferred in\n",
        "        player_names_in = {}\n",
        "        for player in players:\n",
        "            if player['id'] in player_ids_in:\n",
        "                player_names_in[player['id']] = f\"{player['first_name']} {player['second_name']}\"\n",
        "\n",
        "        # Build a dictionary of player names for players transferred out\n",
        "        player_names_out = {}\n",
        "        for player in players:\n",
        "            if player['id'] in player_ids_out:\n",
        "                player_names_out[player['id']] = f\"{player['first_name']} {player['second_name']}\"\n",
        "\n",
        "        # Replace player IDs with names and add additional data\n",
        "        transfer_data_with_info = []\n",
        "        for transfer in transfers_data:\n",
        "            player_in_name = player_names_in.get(transfer['element_in'], 'Unknown Player')\n",
        "            player_out_name = player_names_out.get(transfer['element_out'], 'Unknown Player') if transfer['element_out'] is not None else 'N/A'\n",
        "            transfer_info = {\n",
        "                'week': transfer['event'],\n",
        "                'player_in': player_in_name,\n",
        "                'player_out': player_out_name,\n",
        "                'cost_in': transfer['element_in_cost'] / 10,  # Convert to actual cost\n",
        "                'cost_out': transfer.get('element_out_cost', 0) / 10  # Convert to actual cost\n",
        "            }\n",
        "            transfer_data_with_info.append(transfer_info)\n",
        "\n",
        "        # Create a DataFrame\n",
        "        df = pd.DataFrame(transfer_data_with_info)\n",
        "\n",
        "        print(\"Transfers made by team entry\", team_entry_id)\n",
        "        print(df)\n",
        "\n",
        "    except requests.exceptions.HTTPError as errh:\n",
        "        print(\"HTTP Error:\", errh)\n",
        "    except requests.exceptions.ConnectionError as errc:\n",
        "        print(\"Error connecting:\", errc)\n",
        "    except requests.exceptions.Timeout as errt:\n",
        "        print(\"Timeout error:\", errt)\n",
        "    except requests.exceptions.RequestException as err:\n",
        "        print(\"An error occurred:\", err)\n",
        "\n",
        "if __name__ == \"__main__\":\n",
        "    main()\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "syMCbGo_mDoe",
        "outputId": "43df36cd-6142-48f4-c18e-a74bbf241189"
      },
      "execution_count": 80,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Transfers made by team entry 6388102\n",
            "    week           player_in                    player_out  cost_in  cost_out\n",
            "0      8       Ollie Watkins                Julián Álvarez      8.1       6.8\n",
            "1      8        Divin Mubama                Carlton Morris      4.3       5.6\n",
            "2      8         Jordan Ayew               Marcus Rashford      5.5       8.8\n",
            "3      8  Morgan Gibbs-White        Bruno Borges Fernandes      5.8       8.4\n",
            "4      8       Mohamed Salah                  Eberechi Eze     12.6       6.2\n",
            "5      8       Son Heung-min                   Bukayo Saka      9.4       8.5\n",
            "6      8            Dan Burn                   Sven Botman      4.6       4.6\n",
            "7      8          Pau Torres                   Kyle Walker      4.5       5.2\n",
            "8      8          Matty Cash                  Ben Chilwell      5.0       5.5\n",
            "9      8    Timothy Castagne              Pervis Estupiñán      4.5       5.1\n",
            "10     8         Pedro Porro                 Ethan Pinnock      5.1       4.5\n",
            "11     8     Alphonse Areola                 Sam Johnstone      4.2       4.5\n",
            "12     7      Carlton Morris                 William Osula      5.6       4.4\n",
            "13     6        Eberechi Eze      Gabriel Martinelli Silva      6.3       7.9\n",
            "14     5      Julián Álvarez                 Ollie Watkins      6.7       8.0\n",
            "15     5         Kyle Walker                George Baldock      5.2       4.0\n",
            "16     3       Ethan Pinnock  Gabriel dos Santos Magalhães      4.5       4.9\n",
            "17     3        Ben Chilwell                   John Stones      5.7       5.3\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import requests\n",
        "import pandas as pd\n",
        "from urllib.request import urlopen\n",
        "from json import loads\n",
        "from csv import writer\n",
        "\n",
        "def team_converter(team_id):\n",
        "    '''Converts a team's ID to their actual name'''\n",
        "    team_map = {\n",
        "        1: \"Arsenal\",\n",
        "        2: \"Aston Villa\",\n",
        "        3: \"Bournemouth\",\n",
        "        4: \"Brentford\",\n",
        "        5: \"Brighton\",\n",
        "        6: \"Burnley\",\n",
        "        7: \"Chelsea\",\n",
        "        8: \"Crystal Palace\",\n",
        "        9: \"Everton\",\n",
        "        10: \"Fulham\",\n",
        "        11: \"Liverpool\",\n",
        "        12: \"Luton Town\",\n",
        "        13: \"Manchester City\",\n",
        "        14: \"Manchester United\",\n",
        "        15: \"Newcastle United\",\n",
        "        16: \"Nottingham Forest\",\n",
        "        17: \"Sheffield United\",\n",
        "        18: \"Tottenham\",\n",
        "        19: \"West Ham\",\n",
        "        20: \"Wolverhampton Wanderers\",\n",
        "        None: None\n",
        "    }\n",
        "    return team_map.get(team_id, None)  # Use get to handle missing team IDs\n",
        "\n",
        "def position_converter(position):\n",
        "    '''Converts a player's element_type to their actual position'''\n",
        "    position_map = {\n",
        "        1: \"Goalkeeper\",\n",
        "        2: \"Defender\",\n",
        "        3: \"Midfielder\",\n",
        "        4: \"Forward\"\n",
        "    }\n",
        "    return position_map.get(position, None)  # Use get to handle missing positions\n",
        "\n",
        "def main():\n",
        "    team_entry_id = 275269\n",
        "    url = f'https://fantasy.premierleague.com/api/entry/{team_entry_id}/transfers'\n",
        "\n",
        "    try:\n",
        "        response = requests.get(url)\n",
        "        response.raise_for_status()  # Check for any HTTP errors\n",
        "\n",
        "        transfers_data = response.json()\n",
        "\n",
        "        # Get player names from the provided API\n",
        "        player_ids_in = [transfer['element_in'] for transfer in transfers_data]\n",
        "        player_ids_out = [transfer.get('element_out', None) for transfer in transfers_data]\n",
        "\n",
        "        all_data = loads(urlopen(\"https://fantasy.premierleague.com/api/bootstrap-static/\").read())\n",
        "        players = all_data[\"elements\"]\n",
        "\n",
        "        # Build a dictionary of player names for players transferred in\n",
        "        player_names_in = {}\n",
        "        for player in players:\n",
        "            if player['id'] in player_ids_in:\n",
        "                player_names_in[player['id']] = f\"{player['first_name']} {player['second_name']}\"\n",
        "\n",
        "        # Build a dictionary of player names for players transferred out\n",
        "        player_names_out = {}\n",
        "        for player in players:\n",
        "            if player['id'] in player_ids_out:\n",
        "                player_names_out[player['id']] = f\"{player['first_name']} {player['second_name']}\"\n",
        "\n",
        "        # Replace player IDs with names and add additional data\n",
        "        transfer_data_with_info = []\n",
        "        for transfer in transfers_data:\n",
        "            player_in_name = player_names_in.get(transfer['element_in'], 'Unknown Player')\n",
        "            player_out_name = player_names_out.get(transfer['element_out'], 'Unknown Player') if transfer['element_out'] is not None else 'N/A'\n",
        "            transfer_info = {\n",
        "                'week': transfer['event'],\n",
        "                'player_in': player_in_name,\n",
        "                'player_out': player_out_name,\n",
        "                'cost_in': transfer['element_in_cost'] / 10,  # Convert to actual cost\n",
        "                'cost_out': transfer.get('element_out_cost', 0) / 10  # Convert to actual cost\n",
        "            }\n",
        "            transfer_data_with_info.append(transfer_info)\n",
        "\n",
        "        # Create a DataFrame\n",
        "        df = pd.DataFrame(transfer_data_with_info)\n",
        "\n",
        "        print(\"Transfers made by team entry\", team_entry_id)\n",
        "        print(df)\n",
        "\n",
        "    except requests.exceptions.HTTPError as errh:\n",
        "        print(\"HTTP Error:\", errh)\n",
        "    except requests.exceptions.ConnectionError as errc:\n",
        "        print(\"Error connecting:\", errc)\n",
        "    except requests.exceptions.Timeout as errt:\n",
        "        print(\"Timeout error:\", errt)\n",
        "    except requests.exceptions.RequestException as err:\n",
        "        print(\"An error occurred:\", err)\n",
        "\n",
        "if __name__ == \"__main__\":\n",
        "    main()\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "NxkG0V2Eq5BY",
        "outputId": "37d101ae-4110-4ca8-aea3-801a4ef5fa80"
      },
      "execution_count": 86,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Transfers made by team entry 275269\n",
            "    week               player_in                    player_out  cost_in  \\\n",
            "0      8         Dominic Solanke                Carlton Morris      6.4   \n",
            "1      8  Bruno Borges Fernandes                  Jarrod Bowen      8.4   \n",
            "2      8     Oleksandr Zinchenko              Pervis Estupiñán      4.9   \n",
            "3      8   Alisson Ramses Becker               Thomas Kaminski      5.5   \n",
            "4      8             Pedro Porro                 Alfie Doughty      5.0   \n",
            "5      8          James Maddison        Bruno Borges Fernandes      7.9   \n",
            "6      8           Ollie Watkins                Erling Haaland      7.9   \n",
            "7      8            Jarrod Bowen               Marcus Rashford      7.2   \n",
            "8      8           Mohamed Salah                   Bukayo Saka     12.5   \n",
            "9      8         Kieran Trippier         Rúben Gato Alves Dias      6.7   \n",
            "10     8                Dan Burn                    Rico Henry      4.5   \n",
            "11     8              Matty Cash  Gabriel dos Santos Magalhães      4.8   \n",
            "12     8         Alphonse Areola               Jordan Pickford      4.2   \n",
            "13     7           Alfie Doughty                  Ben Chilwell      4.4   \n",
            "14     7         Thomas Kaminski                   Matt Turner      4.5   \n",
            "15     5          Carlton Morris               Nicolas Jackson      5.5   \n",
            "16     5           Son Heung-min        Richarlison de Andrade      9.1   \n",
            "17     3   Rúben Gato Alves Dias                     Luke Shaw      5.5   \n",
            "18     2            Ben Chilwell                   Reece James      5.6   \n",
            "\n",
            "    cost_out  \n",
            "0        5.5  \n",
            "1        7.2  \n",
            "2        5.1  \n",
            "3        4.5  \n",
            "4        4.4  \n",
            "5        8.4  \n",
            "6       14.0  \n",
            "7        8.9  \n",
            "8        8.6  \n",
            "9        5.5  \n",
            "10       4.5  \n",
            "11       4.7  \n",
            "12       4.4  \n",
            "13       5.6  \n",
            "14       4.0  \n",
            "15       7.1  \n",
            "16       6.8  \n",
            "17       5.5  \n",
            "18       5.5  \n"
          ]
        }
      ]
    }
  ]
}