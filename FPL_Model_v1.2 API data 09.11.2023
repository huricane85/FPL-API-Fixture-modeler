{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "authorship_tag": "ABX9TyNHJ+J0pww3au6CifpZtIpj",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/huricane85/FPL-API-Fixture-modeler/blob/main/FPL_Model_v1.2%20API%20data%2009.11.2023\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 1,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "b6S0KMo-gSGQ",
        "outputId": "e8e14995-ea0b-4235-97c1-1889d4bb3f68"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Cloning into 'UnderstatScraper'...\n",
            "remote: Enumerating objects: 34, done.\u001b[K\n",
            "remote: Counting objects: 100% (34/34), done.\u001b[K\n",
            "remote: Compressing objects: 100% (31/31), done.\u001b[K\n",
            "remote: Total 34 (delta 11), reused 25 (delta 2), pack-reused 0\u001b[K\n",
            "Receiving objects: 100% (34/34), 268.30 KiB | 1.96 MiB/s, done.\n",
            "Resolving deltas: 100% (11/11), done.\n"
          ]
        }
      ],
      "source": [
        "!git clone https://github.com/doughagey/UnderstatScraper"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#!/usr/bin/env python3\n",
        "# -*- coding: utf-8 -*-\n",
        "\"\"\"\n",
        "Created on Mar 1 17:50:36 2020\n",
        "@author: doug hagey\n",
        "\"\"\"\n",
        "\n",
        "import pandas as pd\n",
        "import requests\n",
        "\n",
        "def scrape_understat(payload):\n",
        "    #Build request using url, headers (mimicking what Firefox does normally)\n",
        "    #Works best with verify=True as you won't get the ssl errors. Payload is\n",
        "    #taylored for each request\n",
        "    url = 'https://understat.com/main/getPlayersStats/'\n",
        "    headers = {'content-type':'application/json; charset=utf-8',\n",
        "    'Host': 'understat.com',\n",
        "    'User-Agent': 'Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:73.0) Gecko/20100101 Firefox/73.0',\n",
        "    'Accept': 'application/json, text/javascript, */*; q=0.01',\n",
        "    'Accept-Encoding': 'gzip, deflate, br',\n",
        "    'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8',\n",
        "    'X-Requested-With': 'XMLHttpRequest',\n",
        "    'Content-Length': '310',\n",
        "    'Origin': 'https: // understat.com',\n",
        "    'Connection': 'keep - alive',\n",
        "    'Referer': 'https: // understat.com / league / EPL'\n",
        "    }\n",
        "    response = requests.post(url, data=payload, headers = headers, verify=True)\n",
        "    response_json = response.json()\n",
        "    inner_wrapper = response_json['response']\n",
        "    json_player_data = inner_wrapper['players']\n",
        "    return json_player_data\n",
        "\n",
        "def clean_df(player_df, weeks):\n",
        "    # Get rid of the columns that we don't care about\n",
        "    #player_df.drop(['yellow_cards','red_cards', 'xGChain','xGBuildup','games','time'], axis=1, inplace=True)\n",
        "    player_df  = player_df.rename(columns={'goals':'goals_'+weeks,'xG':'xG_'+weeks,'assists':'assists_'+weeks, 'xA':'xA_'+weeks, 'shots':'shots_'+weeks, 'key_passes':\n",
        "        'key_passes_'+weeks,'npg':'npg_'+weeks,'npxG':'npxG_'+weeks})\n",
        "    if weeks != '1wks':\n",
        "        player_df.drop(['position','team_title'], axis=1, inplace=True)\n",
        "    return(player_df)\n",
        "\n",
        "#Creprint('Getting data for last 1 matches')\n",
        "json_player_data = scrape_understat({'league':'EPL', 'season':'2023', 'n_last_matches': '11'})\n",
        "one_game_table = pd.DataFrame(json_player_data)\n",
        "one_game_df = clean_df(one_game_table,'6wks')\n",
        "\n",
        "\n",
        "print('Getting data for the whole season')\n",
        "json_player_data = scrape_understat({'league':'EPL', 'season':'2023'})\n",
        "season_table = pd.DataFrame(json_player_data)\n",
        "season_df = clean_df(season_table, 'season')\n",
        "\n",
        "print('Getting data for last 1 matches')\n",
        "json_player_data = scrape_understat({'league':'EPL', 'season':'2023', 'n_last_matches': '11'})\n",
        "one_game_table = pd.DataFrame(json_player_data)\n",
        "one_game_df = clean_df(one_game_table, '1wks')\n",
        "\n",
        "print('Merging Tables')\n",
        "EPL_player_df = pd.merge(one_game_df, season_df, on=['id','player_name'])\n",
        "EPL_player_df = pd.merge(EPL_player_df, one_game_df, on=['id','player_name'])\n",
        "\n",
        "\n",
        "print('Writing CSV File')\n",
        "EPL_player_df.to_csv('Understat_EPL_Player_Data_Combined 2021.csv', encoding='utf-8', index=False)\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "D7aK55NHgZOt",
        "outputId": "c494efd1-e7c6-4c83-dd2b-dd2e1956cff0"
      },
      "execution_count": 2,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Getting data for the whole season\n",
            "Getting data for last 1 matches\n",
            "Merging Tables\n",
            "Writing CSV File\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "EPL_player_df"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 583
        },
        "id": "n__CYp9pmkGz",
        "outputId": "a135f5e3-374c-4b4b-ad55-b3cec0a05b65"
      },
      "execution_count": 3,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "        id     player_name games_x time_x goals_1wks_x            xG_1wks_x  \\\n",
              "0     8260  Erling Haaland      11    945           11   11.495322853326797   \n",
              "1      453   Son Heung-Min      11    929            8    4.824764966964722   \n",
              "2     1250   Mohamed Salah      11    975            8    7.727359086275101   \n",
              "3      468   Callum Wilson      10    475            7    7.311267621815205   \n",
              "4     1776    Jarrod Bowen      11    990            7    4.998918272554874   \n",
              "..     ...             ...     ...    ...          ...                  ...   \n",
              "457  12123         Murillo       5    450            0   0.5807948000729084   \n",
              "458  12149      Alex Scott       3    194            0  0.08230337873101234   \n",
              "459  12151    Gabriel Osho       2    148            0                    0   \n",
              "460  12152  Matheus França       2     24            0  0.07806615019217134   \n",
              "461  12158        Ryan Oné       1      4            0                    0   \n",
              "\n",
              "    assists_1wks_x             xA_1wks_x shots_1wks_x key_passes_1wks_x  ...  \\\n",
              "0                2    2.5927075762301683           42                11  ...   \n",
              "1                1     3.000117938965559           30                19  ...   \n",
              "2                4     5.920990411192179           35                25  ...   \n",
              "3                0  0.015900330618023872           21                 1  ...   \n",
              "4                1    1.9063566271215677           32                 8  ...   \n",
              "..             ...                   ...          ...               ...  ...   \n",
              "457              0    0.3356254808604717            4                 3  ...   \n",
              "458              0    0.0895473062992096            2                 1  ...   \n",
              "459              0                     0            0                 0  ...   \n",
              "460              0   0.22760880179703236            2                 4  ...   \n",
              "461              0                     0            0                 0  ...   \n",
              "\n",
              "    shots_1wks_y key_passes_1wks_y yellow_cards red_cards position_y  \\\n",
              "0             42                11            0         0          F   \n",
              "1             30                19            0         0        F M   \n",
              "2             35                25            1         0          F   \n",
              "3             21                 1            1         0        F S   \n",
              "4             32                 8            1         0        F M   \n",
              "..           ...               ...          ...       ...        ...   \n",
              "457            4                 3            1         0          D   \n",
              "458            2                 1            1         0          M   \n",
              "459            0                 0            0         0          D   \n",
              "460            2                 4            0         0          S   \n",
              "461            0                 0            0         0          S   \n",
              "\n",
              "          team_title_y npg_1wks_y          npxG_1wks_y              xGChain  \\\n",
              "0      Manchester City          9    9.211816400289536   11.093419320881367   \n",
              "1            Tottenham          8    4.824764966964722     9.62911732494831   \n",
              "2            Liverpool          5    4.682757988572121     11.1686532497406   \n",
              "3     Newcastle United          5   5.7889300510287285    6.403569312766194   \n",
              "4             West Ham          7    4.998918272554874   5.8975516855716705   \n",
              "..                 ...        ...                  ...                  ...   \n",
              "457  Nottingham Forest          0   0.5807948000729084   1.8947984781116247   \n",
              "458        Bournemouth          0  0.08230337873101234   0.9122739285230637   \n",
              "459              Luton          0                    0                    0   \n",
              "460     Crystal Palace          0  0.07806615019217134  0.19827639311552048   \n",
              "461   Sheffield United          0                    0                    0   \n",
              "\n",
              "              xGBuildup  \n",
              "0    1.1622753702104092  \n",
              "1       2.9587726239115  \n",
              "2     3.551269993185997  \n",
              "3    0.8389131352305412  \n",
              "4      1.30326790176332  \n",
              "..                  ...  \n",
              "457  1.7495439257472754  \n",
              "458  0.8663346916437149  \n",
              "459                   0  \n",
              "460                   0  \n",
              "461                   0  \n",
              "\n",
              "[462 rows x 48 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-bbdc226a-5a65-4f13-a287-46d7bdbade45\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>player_name</th>\n",
              "      <th>games_x</th>\n",
              "      <th>time_x</th>\n",
              "      <th>goals_1wks_x</th>\n",
              "      <th>xG_1wks_x</th>\n",
              "      <th>assists_1wks_x</th>\n",
              "      <th>xA_1wks_x</th>\n",
              "      <th>shots_1wks_x</th>\n",
              "      <th>key_passes_1wks_x</th>\n",
              "      <th>...</th>\n",
              "      <th>shots_1wks_y</th>\n",
              "      <th>key_passes_1wks_y</th>\n",
              "      <th>yellow_cards</th>\n",
              "      <th>red_cards</th>\n",
              "      <th>position_y</th>\n",
              "      <th>team_title_y</th>\n",
              "      <th>npg_1wks_y</th>\n",
              "      <th>npxG_1wks_y</th>\n",
              "      <th>xGChain</th>\n",
              "      <th>xGBuildup</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>8260</td>\n",
              "      <td>Erling Haaland</td>\n",
              "      <td>11</td>\n",
              "      <td>945</td>\n",
              "      <td>11</td>\n",
              "      <td>11.495322853326797</td>\n",
              "      <td>2</td>\n",
              "      <td>2.5927075762301683</td>\n",
              "      <td>42</td>\n",
              "      <td>11</td>\n",
              "      <td>...</td>\n",
              "      <td>42</td>\n",
              "      <td>11</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>F</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>9</td>\n",
              "      <td>9.211816400289536</td>\n",
              "      <td>11.093419320881367</td>\n",
              "      <td>1.1622753702104092</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>453</td>\n",
              "      <td>Son Heung-Min</td>\n",
              "      <td>11</td>\n",
              "      <td>929</td>\n",
              "      <td>8</td>\n",
              "      <td>4.824764966964722</td>\n",
              "      <td>1</td>\n",
              "      <td>3.000117938965559</td>\n",
              "      <td>30</td>\n",
              "      <td>19</td>\n",
              "      <td>...</td>\n",
              "      <td>30</td>\n",
              "      <td>19</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>F M</td>\n",
              "      <td>Tottenham</td>\n",
              "      <td>8</td>\n",
              "      <td>4.824764966964722</td>\n",
              "      <td>9.62911732494831</td>\n",
              "      <td>2.9587726239115</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>1250</td>\n",
              "      <td>Mohamed Salah</td>\n",
              "      <td>11</td>\n",
              "      <td>975</td>\n",
              "      <td>8</td>\n",
              "      <td>7.727359086275101</td>\n",
              "      <td>4</td>\n",
              "      <td>5.920990411192179</td>\n",
              "      <td>35</td>\n",
              "      <td>25</td>\n",
              "      <td>...</td>\n",
              "      <td>35</td>\n",
              "      <td>25</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>F</td>\n",
              "      <td>Liverpool</td>\n",
              "      <td>5</td>\n",
              "      <td>4.682757988572121</td>\n",
              "      <td>11.1686532497406</td>\n",
              "      <td>3.551269993185997</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>468</td>\n",
              "      <td>Callum Wilson</td>\n",
              "      <td>10</td>\n",
              "      <td>475</td>\n",
              "      <td>7</td>\n",
              "      <td>7.311267621815205</td>\n",
              "      <td>0</td>\n",
              "      <td>0.015900330618023872</td>\n",
              "      <td>21</td>\n",
              "      <td>1</td>\n",
              "      <td>...</td>\n",
              "      <td>21</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>F S</td>\n",
              "      <td>Newcastle United</td>\n",
              "      <td>5</td>\n",
              "      <td>5.7889300510287285</td>\n",
              "      <td>6.403569312766194</td>\n",
              "      <td>0.8389131352305412</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>1776</td>\n",
              "      <td>Jarrod Bowen</td>\n",
              "      <td>11</td>\n",
              "      <td>990</td>\n",
              "      <td>7</td>\n",
              "      <td>4.998918272554874</td>\n",
              "      <td>1</td>\n",
              "      <td>1.9063566271215677</td>\n",
              "      <td>32</td>\n",
              "      <td>8</td>\n",
              "      <td>...</td>\n",
              "      <td>32</td>\n",
              "      <td>8</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>F M</td>\n",
              "      <td>West Ham</td>\n",
              "      <td>7</td>\n",
              "      <td>4.998918272554874</td>\n",
              "      <td>5.8975516855716705</td>\n",
              "      <td>1.30326790176332</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>457</th>\n",
              "      <td>12123</td>\n",
              "      <td>Murillo</td>\n",
              "      <td>5</td>\n",
              "      <td>450</td>\n",
              "      <td>0</td>\n",
              "      <td>0.5807948000729084</td>\n",
              "      <td>0</td>\n",
              "      <td>0.3356254808604717</td>\n",
              "      <td>4</td>\n",
              "      <td>3</td>\n",
              "      <td>...</td>\n",
              "      <td>4</td>\n",
              "      <td>3</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>D</td>\n",
              "      <td>Nottingham Forest</td>\n",
              "      <td>0</td>\n",
              "      <td>0.5807948000729084</td>\n",
              "      <td>1.8947984781116247</td>\n",
              "      <td>1.7495439257472754</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>458</th>\n",
              "      <td>12149</td>\n",
              "      <td>Alex Scott</td>\n",
              "      <td>3</td>\n",
              "      <td>194</td>\n",
              "      <td>0</td>\n",
              "      <td>0.08230337873101234</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0895473062992096</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>...</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>M</td>\n",
              "      <td>Bournemouth</td>\n",
              "      <td>0</td>\n",
              "      <td>0.08230337873101234</td>\n",
              "      <td>0.9122739285230637</td>\n",
              "      <td>0.8663346916437149</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>459</th>\n",
              "      <td>12151</td>\n",
              "      <td>Gabriel Osho</td>\n",
              "      <td>2</td>\n",
              "      <td>148</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>D</td>\n",
              "      <td>Luton</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>460</th>\n",
              "      <td>12152</td>\n",
              "      <td>Matheus França</td>\n",
              "      <td>2</td>\n",
              "      <td>24</td>\n",
              "      <td>0</td>\n",
              "      <td>0.07806615019217134</td>\n",
              "      <td>0</td>\n",
              "      <td>0.22760880179703236</td>\n",
              "      <td>2</td>\n",
              "      <td>4</td>\n",
              "      <td>...</td>\n",
              "      <td>2</td>\n",
              "      <td>4</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>S</td>\n",
              "      <td>Crystal Palace</td>\n",
              "      <td>0</td>\n",
              "      <td>0.07806615019217134</td>\n",
              "      <td>0.19827639311552048</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>461</th>\n",
              "      <td>12158</td>\n",
              "      <td>Ryan Oné</td>\n",
              "      <td>1</td>\n",
              "      <td>4</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>S</td>\n",
              "      <td>Sheffield United</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>462 rows × 48 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-bbdc226a-5a65-4f13-a287-46d7bdbade45')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-bbdc226a-5a65-4f13-a287-46d7bdbade45 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-bbdc226a-5a65-4f13-a287-46d7bdbade45');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-e093aadb-e611-4bd2-9a40-1474d4dd9dd2\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-e093aadb-e611-4bd2-9a40-1474d4dd9dd2')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-e093aadb-e611-4bd2-9a40-1474d4dd9dd2 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 3
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "one_game_df.to_csv('one_game_df.csv', encoding='utf-8', index=False)\n",
        "one_game_df['time'] = one_game_df['time'].astype(int)\n",
        "one_game_df = one_game_df[one_game_df['time'] > 40]\n",
        "one_game_df['goals_1wks'] = one_game_df['goals_1wks'].astype(int)\n",
        "one_game_df['xG_1wks'] = one_game_df['xG_1wks'].astype(float)\n",
        "one_game_df['xgdifference'] = one_game_df.goals_1wks - one_game_df.xG_1wks\n",
        "one_game_df['assists_1wks'] = one_game_df['assists_1wks'].astype(int)\n",
        "one_game_df['xA_1wks'] = one_game_df['xA_1wks'].astype(float)\n",
        "one_game_df['xAdifference'] = one_game_df.assists_1wks - one_game_df.xA_1wks\n",
        "seasonedit = one_game_df.drop(columns=[ 'yellow_cards','red_cards','time'])\n",
        "sortXgDifference = seasonedit.sort_values('xgdifference')\n",
        "sortXgDifference.head(10)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "id": "IrXPzyJNg3ui",
        "outputId": "a2ec7cfc-f374-4712-d0a6-5acb82fc72f8"
      },
      "execution_count": 4,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "<ipython-input-4-30b8c2331977>:4: SettingWithCopyWarning: \n",
            "A value is trying to be set on a copy of a slice from a DataFrame.\n",
            "Try using .loc[row_indexer,col_indexer] = value instead\n",
            "\n",
            "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
            "  one_game_df['goals_1wks'] = one_game_df['goals_1wks'].astype(int)\n",
            "<ipython-input-4-30b8c2331977>:5: SettingWithCopyWarning: \n",
            "A value is trying to be set on a copy of a slice from a DataFrame.\n",
            "Try using .loc[row_indexer,col_indexer] = value instead\n",
            "\n",
            "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
            "  one_game_df['xG_1wks'] = one_game_df['xG_1wks'].astype(float)\n",
            "<ipython-input-4-30b8c2331977>:6: SettingWithCopyWarning: \n",
            "A value is trying to be set on a copy of a slice from a DataFrame.\n",
            "Try using .loc[row_indexer,col_indexer] = value instead\n",
            "\n",
            "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
            "  one_game_df['xgdifference'] = one_game_df.goals_1wks - one_game_df.xG_1wks\n",
            "<ipython-input-4-30b8c2331977>:7: SettingWithCopyWarning: \n",
            "A value is trying to be set on a copy of a slice from a DataFrame.\n",
            "Try using .loc[row_indexer,col_indexer] = value instead\n",
            "\n",
            "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
            "  one_game_df['assists_1wks'] = one_game_df['assists_1wks'].astype(int)\n",
            "<ipython-input-4-30b8c2331977>:8: SettingWithCopyWarning: \n",
            "A value is trying to be set on a copy of a slice from a DataFrame.\n",
            "Try using .loc[row_indexer,col_indexer] = value instead\n",
            "\n",
            "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
            "  one_game_df['xA_1wks'] = one_game_df['xA_1wks'].astype(float)\n",
            "<ipython-input-4-30b8c2331977>:9: SettingWithCopyWarning: \n",
            "A value is trying to be set on a copy of a slice from a DataFrame.\n",
            "Try using .loc[row_indexer,col_indexer] = value instead\n",
            "\n",
            "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
            "  one_game_df['xAdifference'] = one_game_df.assists_1wks - one_game_df.xA_1wks\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "        id         player_name games  goals_1wks   xG_1wks  assists_1wks  \\\n",
              "73     556     Marcus Rashford    10           1  3.755837             1   \n",
              "17   10720        Darwin Núñez    10           4  6.630821             3   \n",
              "11   10048     Nicolas Jackson    10           5  7.551804             0   \n",
              "419  11356      Enzo Fernández    10           0  2.488503             0   \n",
              "21    1726  Abdoulaye Doucouré    11           3  5.301379             0   \n",
              "87    3621         Neal Maupay     8           1  3.192551             2   \n",
              "92    6026         Richarlison    10           1  2.951672             3   \n",
              "273   6686      Nicolo Zaniolo     9           0  1.937336             0   \n",
              "435  11720         Jacob Brown    11           0  1.911691             0   \n",
              "372   9983                Beto     7           0  1.751372             0   \n",
              "\n",
              "      xA_1wks shots_1wks key_passes_1wks position         team_title npg_1wks  \\\n",
              "73   1.156677         34              12      F M  Manchester United        1   \n",
              "17   1.727263         32               6      F S          Liverpool        4   \n",
              "11   0.735105         30               7      F S            Chelsea        5   \n",
              "419  1.619420         20              14        M            Chelsea        0   \n",
              "21   1.546653         19              16        M            Everton        3   \n",
              "87   0.980366         17               5      F S  Brentford,Everton        1   \n",
              "92   0.880545         22               7    F M S          Tottenham        1   \n",
              "273  0.391932         17               6      M S        Aston Villa        0   \n",
              "435  0.733442         15               5    F M S              Luton        0   \n",
              "372  0.532788         14               5      F S            Everton        0   \n",
              "\n",
              "              npxG_1wks             xGChain             xGBuildup  \\\n",
              "73    3.755836881697178   6.550963580608368    2.1883040703833103   \n",
              "17    6.630820595659316   8.596202209591866    1.6152597591280937   \n",
              "11    7.551803696900606   8.325011420994997    1.1923293694853783   \n",
              "419  1.7273346725851297   6.142131254076958     4.150547429919243   \n",
              "21    5.301378816366196   5.617816057056189    1.4228688850998878   \n",
              "87   3.1925510577857494   5.041061524301767    1.3032503798604012   \n",
              "92    2.951672403141856   4.184897594153881    0.7647342011332512   \n",
              "273  1.9373356234282255   2.420425623655319   0.47957144118845463   \n",
              "435   1.911691077053547   2.443839631974697  0.029953235760331154   \n",
              "372  1.7513722185976803  2.9116697143763304    0.7313991468399763   \n",
              "\n",
              "     xgdifference  xAdifference  \n",
              "73      -2.755837     -0.156677  \n",
              "17      -2.630821      1.272737  \n",
              "11      -2.551804     -0.735105  \n",
              "419     -2.488503     -1.619420  \n",
              "21      -2.301379     -1.546653  \n",
              "87      -2.192551      1.019634  \n",
              "92      -1.951672      2.119455  \n",
              "273     -1.937336     -0.391932  \n",
              "435     -1.911691     -0.733442  \n",
              "372     -1.751372     -0.532788  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-05ad144e-097d-44e6-b777-5105e0e0168c\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>player_name</th>\n",
              "      <th>games</th>\n",
              "      <th>goals_1wks</th>\n",
              "      <th>xG_1wks</th>\n",
              "      <th>assists_1wks</th>\n",
              "      <th>xA_1wks</th>\n",
              "      <th>shots_1wks</th>\n",
              "      <th>key_passes_1wks</th>\n",
              "      <th>position</th>\n",
              "      <th>team_title</th>\n",
              "      <th>npg_1wks</th>\n",
              "      <th>npxG_1wks</th>\n",
              "      <th>xGChain</th>\n",
              "      <th>xGBuildup</th>\n",
              "      <th>xgdifference</th>\n",
              "      <th>xAdifference</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>73</th>\n",
              "      <td>556</td>\n",
              "      <td>Marcus Rashford</td>\n",
              "      <td>10</td>\n",
              "      <td>1</td>\n",
              "      <td>3.755837</td>\n",
              "      <td>1</td>\n",
              "      <td>1.156677</td>\n",
              "      <td>34</td>\n",
              "      <td>12</td>\n",
              "      <td>F M</td>\n",
              "      <td>Manchester United</td>\n",
              "      <td>1</td>\n",
              "      <td>3.755836881697178</td>\n",
              "      <td>6.550963580608368</td>\n",
              "      <td>2.1883040703833103</td>\n",
              "      <td>-2.755837</td>\n",
              "      <td>-0.156677</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>17</th>\n",
              "      <td>10720</td>\n",
              "      <td>Darwin Núñez</td>\n",
              "      <td>10</td>\n",
              "      <td>4</td>\n",
              "      <td>6.630821</td>\n",
              "      <td>3</td>\n",
              "      <td>1.727263</td>\n",
              "      <td>32</td>\n",
              "      <td>6</td>\n",
              "      <td>F S</td>\n",
              "      <td>Liverpool</td>\n",
              "      <td>4</td>\n",
              "      <td>6.630820595659316</td>\n",
              "      <td>8.596202209591866</td>\n",
              "      <td>1.6152597591280937</td>\n",
              "      <td>-2.630821</td>\n",
              "      <td>1.272737</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>11</th>\n",
              "      <td>10048</td>\n",
              "      <td>Nicolas Jackson</td>\n",
              "      <td>10</td>\n",
              "      <td>5</td>\n",
              "      <td>7.551804</td>\n",
              "      <td>0</td>\n",
              "      <td>0.735105</td>\n",
              "      <td>30</td>\n",
              "      <td>7</td>\n",
              "      <td>F S</td>\n",
              "      <td>Chelsea</td>\n",
              "      <td>5</td>\n",
              "      <td>7.551803696900606</td>\n",
              "      <td>8.325011420994997</td>\n",
              "      <td>1.1923293694853783</td>\n",
              "      <td>-2.551804</td>\n",
              "      <td>-0.735105</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>419</th>\n",
              "      <td>11356</td>\n",
              "      <td>Enzo Fernández</td>\n",
              "      <td>10</td>\n",
              "      <td>0</td>\n",
              "      <td>2.488503</td>\n",
              "      <td>0</td>\n",
              "      <td>1.619420</td>\n",
              "      <td>20</td>\n",
              "      <td>14</td>\n",
              "      <td>M</td>\n",
              "      <td>Chelsea</td>\n",
              "      <td>0</td>\n",
              "      <td>1.7273346725851297</td>\n",
              "      <td>6.142131254076958</td>\n",
              "      <td>4.150547429919243</td>\n",
              "      <td>-2.488503</td>\n",
              "      <td>-1.619420</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>21</th>\n",
              "      <td>1726</td>\n",
              "      <td>Abdoulaye Doucouré</td>\n",
              "      <td>11</td>\n",
              "      <td>3</td>\n",
              "      <td>5.301379</td>\n",
              "      <td>0</td>\n",
              "      <td>1.546653</td>\n",
              "      <td>19</td>\n",
              "      <td>16</td>\n",
              "      <td>M</td>\n",
              "      <td>Everton</td>\n",
              "      <td>3</td>\n",
              "      <td>5.301378816366196</td>\n",
              "      <td>5.617816057056189</td>\n",
              "      <td>1.4228688850998878</td>\n",
              "      <td>-2.301379</td>\n",
              "      <td>-1.546653</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>87</th>\n",
              "      <td>3621</td>\n",
              "      <td>Neal Maupay</td>\n",
              "      <td>8</td>\n",
              "      <td>1</td>\n",
              "      <td>3.192551</td>\n",
              "      <td>2</td>\n",
              "      <td>0.980366</td>\n",
              "      <td>17</td>\n",
              "      <td>5</td>\n",
              "      <td>F S</td>\n",
              "      <td>Brentford,Everton</td>\n",
              "      <td>1</td>\n",
              "      <td>3.1925510577857494</td>\n",
              "      <td>5.041061524301767</td>\n",
              "      <td>1.3032503798604012</td>\n",
              "      <td>-2.192551</td>\n",
              "      <td>1.019634</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>92</th>\n",
              "      <td>6026</td>\n",
              "      <td>Richarlison</td>\n",
              "      <td>10</td>\n",
              "      <td>1</td>\n",
              "      <td>2.951672</td>\n",
              "      <td>3</td>\n",
              "      <td>0.880545</td>\n",
              "      <td>22</td>\n",
              "      <td>7</td>\n",
              "      <td>F M S</td>\n",
              "      <td>Tottenham</td>\n",
              "      <td>1</td>\n",
              "      <td>2.951672403141856</td>\n",
              "      <td>4.184897594153881</td>\n",
              "      <td>0.7647342011332512</td>\n",
              "      <td>-1.951672</td>\n",
              "      <td>2.119455</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>273</th>\n",
              "      <td>6686</td>\n",
              "      <td>Nicolo Zaniolo</td>\n",
              "      <td>9</td>\n",
              "      <td>0</td>\n",
              "      <td>1.937336</td>\n",
              "      <td>0</td>\n",
              "      <td>0.391932</td>\n",
              "      <td>17</td>\n",
              "      <td>6</td>\n",
              "      <td>M S</td>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>0</td>\n",
              "      <td>1.9373356234282255</td>\n",
              "      <td>2.420425623655319</td>\n",
              "      <td>0.47957144118845463</td>\n",
              "      <td>-1.937336</td>\n",
              "      <td>-0.391932</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>435</th>\n",
              "      <td>11720</td>\n",
              "      <td>Jacob Brown</td>\n",
              "      <td>11</td>\n",
              "      <td>0</td>\n",
              "      <td>1.911691</td>\n",
              "      <td>0</td>\n",
              "      <td>0.733442</td>\n",
              "      <td>15</td>\n",
              "      <td>5</td>\n",
              "      <td>F M S</td>\n",
              "      <td>Luton</td>\n",
              "      <td>0</td>\n",
              "      <td>1.911691077053547</td>\n",
              "      <td>2.443839631974697</td>\n",
              "      <td>0.029953235760331154</td>\n",
              "      <td>-1.911691</td>\n",
              "      <td>-0.733442</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>372</th>\n",
              "      <td>9983</td>\n",
              "      <td>Beto</td>\n",
              "      <td>7</td>\n",
              "      <td>0</td>\n",
              "      <td>1.751372</td>\n",
              "      <td>0</td>\n",
              "      <td>0.532788</td>\n",
              "      <td>14</td>\n",
              "      <td>5</td>\n",
              "      <td>F S</td>\n",
              "      <td>Everton</td>\n",
              "      <td>0</td>\n",
              "      <td>1.7513722185976803</td>\n",
              "      <td>2.9116697143763304</td>\n",
              "      <td>0.7313991468399763</td>\n",
              "      <td>-1.751372</td>\n",
              "      <td>-0.532788</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-05ad144e-097d-44e6-b777-5105e0e0168c')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-05ad144e-097d-44e6-b777-5105e0e0168c button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-05ad144e-097d-44e6-b777-5105e0e0168c');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-c0a386e6-06c4-446c-a353-b6fb851f4677\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-c0a386e6-06c4-446c-a353-b6fb851f4677')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-c0a386e6-06c4-446c-a353-b6fb851f4677 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 4
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "sortXgDifference.tail(10)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 484
        },
        "id": "UxuLfRINhwx7",
        "outputId": "6bf00ba5-a347-4b18-f60c-3cc0eb1c1aa2"
      },
      "execution_count": 5,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "       id       player_name games  goals_1wks   xG_1wks  assists_1wks  \\\n",
              "47   5553       Declan Rice    11           2  0.493325             1   \n",
              "54   7698  Leandro Trossard     7           2  0.491135             0   \n",
              "23   3635    Bernardo Silva     8           3  1.103923             2   \n",
              "4    1776      Jarrod Bowen    11           7  4.998918             1   \n",
              "27   5560   Scott McTominay     8           3  0.965372             0   \n",
              "8    6122      Douglas Luiz    11           5  2.964310             1   \n",
              "12  10177     Evan Ferguson    11           5  2.519846             0   \n",
              "35   7166    Mathias Jensen    11           3  0.414433             2   \n",
              "7    8845    Hee-Chan Hwang    11           6  3.276273             2   \n",
              "1     453     Son Heung-Min    11           8  4.824765             1   \n",
              "\n",
              "     xA_1wks shots_1wks key_passes_1wks position               team_title  \\\n",
              "47  1.428707         12               8        M                  Arsenal   \n",
              "54  0.954459          4               7      F S                  Arsenal   \n",
              "23  2.360215          6              16      M S          Manchester City   \n",
              "4   1.906357         32               8      F M                 West Ham   \n",
              "27  0.036888          8               1      M S        Manchester United   \n",
              "8   0.847265         20              13        M              Aston Villa   \n",
              "12  0.559289         18               4      F S                 Brighton   \n",
              "35  2.255719          6              19        M                Brentford   \n",
              "7   2.051958         17              11    F M S  Wolverhampton Wanderers   \n",
              "1   3.000118         30              19      F M                Tottenham   \n",
              "\n",
              "   npg_1wks            npxG_1wks             xGChain            xGBuildup  \\\n",
              "47        2  0.49332469422370195  3.4135719081386924    2.754366137087345   \n",
              "54        2   0.4911350645124912  1.8341310676187277   0.4832567274570465   \n",
              "23        3    1.103923488408327   7.496139055117965    5.297571515664458   \n",
              "4         7    4.998918272554874  5.8975516855716705     1.30326790176332   \n",
              "27        3   0.9653721526265144  0.8093407116830349  0.22854573279619217   \n",
              "8         2   0.6808030409738421   6.618165168911219    6.077041679993272   \n",
              "12        5   2.5198461320251226   4.790788099169731   1.8316275216639042   \n",
              "35        3   0.4144330583512783   5.097158201038837    4.416626987978816   \n",
              "7         6    3.276272587478161  5.6143752643838525   1.3607335397973657   \n",
              "1         8    4.824764966964722    9.62911732494831      2.9587726239115   \n",
              "\n",
              "    xgdifference  xAdifference  \n",
              "47      1.506675     -0.428707  \n",
              "54      1.508865     -0.954459  \n",
              "23      1.896077     -0.360215  \n",
              "4       2.001082     -0.906357  \n",
              "27      2.034628     -0.036888  \n",
              "8       2.035690      0.152735  \n",
              "12      2.480154     -0.559289  \n",
              "35      2.585567     -0.255719  \n",
              "7       2.723727     -0.051958  \n",
              "1       3.175235     -2.000118  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-3f490e4c-3876-4773-a903-f9673b0debcb\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>player_name</th>\n",
              "      <th>games</th>\n",
              "      <th>goals_1wks</th>\n",
              "      <th>xG_1wks</th>\n",
              "      <th>assists_1wks</th>\n",
              "      <th>xA_1wks</th>\n",
              "      <th>shots_1wks</th>\n",
              "      <th>key_passes_1wks</th>\n",
              "      <th>position</th>\n",
              "      <th>team_title</th>\n",
              "      <th>npg_1wks</th>\n",
              "      <th>npxG_1wks</th>\n",
              "      <th>xGChain</th>\n",
              "      <th>xGBuildup</th>\n",
              "      <th>xgdifference</th>\n",
              "      <th>xAdifference</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>47</th>\n",
              "      <td>5553</td>\n",
              "      <td>Declan Rice</td>\n",
              "      <td>11</td>\n",
              "      <td>2</td>\n",
              "      <td>0.493325</td>\n",
              "      <td>1</td>\n",
              "      <td>1.428707</td>\n",
              "      <td>12</td>\n",
              "      <td>8</td>\n",
              "      <td>M</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>2</td>\n",
              "      <td>0.49332469422370195</td>\n",
              "      <td>3.4135719081386924</td>\n",
              "      <td>2.754366137087345</td>\n",
              "      <td>1.506675</td>\n",
              "      <td>-0.428707</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>54</th>\n",
              "      <td>7698</td>\n",
              "      <td>Leandro Trossard</td>\n",
              "      <td>7</td>\n",
              "      <td>2</td>\n",
              "      <td>0.491135</td>\n",
              "      <td>0</td>\n",
              "      <td>0.954459</td>\n",
              "      <td>4</td>\n",
              "      <td>7</td>\n",
              "      <td>F S</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>2</td>\n",
              "      <td>0.4911350645124912</td>\n",
              "      <td>1.8341310676187277</td>\n",
              "      <td>0.4832567274570465</td>\n",
              "      <td>1.508865</td>\n",
              "      <td>-0.954459</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>23</th>\n",
              "      <td>3635</td>\n",
              "      <td>Bernardo Silva</td>\n",
              "      <td>8</td>\n",
              "      <td>3</td>\n",
              "      <td>1.103923</td>\n",
              "      <td>2</td>\n",
              "      <td>2.360215</td>\n",
              "      <td>6</td>\n",
              "      <td>16</td>\n",
              "      <td>M S</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>3</td>\n",
              "      <td>1.103923488408327</td>\n",
              "      <td>7.496139055117965</td>\n",
              "      <td>5.297571515664458</td>\n",
              "      <td>1.896077</td>\n",
              "      <td>-0.360215</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>1776</td>\n",
              "      <td>Jarrod Bowen</td>\n",
              "      <td>11</td>\n",
              "      <td>7</td>\n",
              "      <td>4.998918</td>\n",
              "      <td>1</td>\n",
              "      <td>1.906357</td>\n",
              "      <td>32</td>\n",
              "      <td>8</td>\n",
              "      <td>F M</td>\n",
              "      <td>West Ham</td>\n",
              "      <td>7</td>\n",
              "      <td>4.998918272554874</td>\n",
              "      <td>5.8975516855716705</td>\n",
              "      <td>1.30326790176332</td>\n",
              "      <td>2.001082</td>\n",
              "      <td>-0.906357</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>27</th>\n",
              "      <td>5560</td>\n",
              "      <td>Scott McTominay</td>\n",
              "      <td>8</td>\n",
              "      <td>3</td>\n",
              "      <td>0.965372</td>\n",
              "      <td>0</td>\n",
              "      <td>0.036888</td>\n",
              "      <td>8</td>\n",
              "      <td>1</td>\n",
              "      <td>M S</td>\n",
              "      <td>Manchester United</td>\n",
              "      <td>3</td>\n",
              "      <td>0.9653721526265144</td>\n",
              "      <td>0.8093407116830349</td>\n",
              "      <td>0.22854573279619217</td>\n",
              "      <td>2.034628</td>\n",
              "      <td>-0.036888</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>6122</td>\n",
              "      <td>Douglas Luiz</td>\n",
              "      <td>11</td>\n",
              "      <td>5</td>\n",
              "      <td>2.964310</td>\n",
              "      <td>1</td>\n",
              "      <td>0.847265</td>\n",
              "      <td>20</td>\n",
              "      <td>13</td>\n",
              "      <td>M</td>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>2</td>\n",
              "      <td>0.6808030409738421</td>\n",
              "      <td>6.618165168911219</td>\n",
              "      <td>6.077041679993272</td>\n",
              "      <td>2.035690</td>\n",
              "      <td>0.152735</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>12</th>\n",
              "      <td>10177</td>\n",
              "      <td>Evan Ferguson</td>\n",
              "      <td>11</td>\n",
              "      <td>5</td>\n",
              "      <td>2.519846</td>\n",
              "      <td>0</td>\n",
              "      <td>0.559289</td>\n",
              "      <td>18</td>\n",
              "      <td>4</td>\n",
              "      <td>F S</td>\n",
              "      <td>Brighton</td>\n",
              "      <td>5</td>\n",
              "      <td>2.5198461320251226</td>\n",
              "      <td>4.790788099169731</td>\n",
              "      <td>1.8316275216639042</td>\n",
              "      <td>2.480154</td>\n",
              "      <td>-0.559289</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>35</th>\n",
              "      <td>7166</td>\n",
              "      <td>Mathias Jensen</td>\n",
              "      <td>11</td>\n",
              "      <td>3</td>\n",
              "      <td>0.414433</td>\n",
              "      <td>2</td>\n",
              "      <td>2.255719</td>\n",
              "      <td>6</td>\n",
              "      <td>19</td>\n",
              "      <td>M</td>\n",
              "      <td>Brentford</td>\n",
              "      <td>3</td>\n",
              "      <td>0.4144330583512783</td>\n",
              "      <td>5.097158201038837</td>\n",
              "      <td>4.416626987978816</td>\n",
              "      <td>2.585567</td>\n",
              "      <td>-0.255719</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>8845</td>\n",
              "      <td>Hee-Chan Hwang</td>\n",
              "      <td>11</td>\n",
              "      <td>6</td>\n",
              "      <td>3.276273</td>\n",
              "      <td>2</td>\n",
              "      <td>2.051958</td>\n",
              "      <td>17</td>\n",
              "      <td>11</td>\n",
              "      <td>F M S</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>6</td>\n",
              "      <td>3.276272587478161</td>\n",
              "      <td>5.6143752643838525</td>\n",
              "      <td>1.3607335397973657</td>\n",
              "      <td>2.723727</td>\n",
              "      <td>-0.051958</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>453</td>\n",
              "      <td>Son Heung-Min</td>\n",
              "      <td>11</td>\n",
              "      <td>8</td>\n",
              "      <td>4.824765</td>\n",
              "      <td>1</td>\n",
              "      <td>3.000118</td>\n",
              "      <td>30</td>\n",
              "      <td>19</td>\n",
              "      <td>F M</td>\n",
              "      <td>Tottenham</td>\n",
              "      <td>8</td>\n",
              "      <td>4.824764966964722</td>\n",
              "      <td>9.62911732494831</td>\n",
              "      <td>2.9587726239115</td>\n",
              "      <td>3.175235</td>\n",
              "      <td>-2.000118</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-3f490e4c-3876-4773-a903-f9673b0debcb')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-3f490e4c-3876-4773-a903-f9673b0debcb button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-3f490e4c-3876-4773-a903-f9673b0debcb');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-1a3a4577-650d-43ae-843c-b706ed40b77a\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-1a3a4577-650d-43ae-843c-b706ed40b77a')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-1a3a4577-650d-43ae-843c-b706ed40b77a button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 5
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "one_game_df"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 548
        },
        "id": "NDPdgpJUVBBZ",
        "outputId": "f2416f4f-c1ff-46cb-9abc-128c98f738ed"
      },
      "execution_count": 6,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "        id     player_name games  time  goals_1wks    xG_1wks  assists_1wks  \\\n",
              "0     8260  Erling Haaland    11   945          11  11.495323             2   \n",
              "1      453   Son Heung-Min    11   929           8   4.824765             1   \n",
              "2     1250   Mohamed Salah    11   975           8   7.727359             4   \n",
              "3      468   Callum Wilson    10   475           7   7.311268             0   \n",
              "4     1776    Jarrod Bowen    11   990           7   4.998918             1   \n",
              "..     ...             ...   ...   ...         ...        ...           ...   \n",
              "453  12073     Teden Mengi     6   415           0   0.154784             0   \n",
              "455  12094     Mike Trésor     6   225           0   0.598051             0   \n",
              "457  12123         Murillo     5   450           0   0.580795             0   \n",
              "458  12149      Alex Scott     3   194           0   0.082303             0   \n",
              "459  12151    Gabriel Osho     2   148           0   0.000000             0   \n",
              "\n",
              "      xA_1wks shots_1wks key_passes_1wks yellow_cards red_cards position  \\\n",
              "0    2.592708         42              11            0         0        F   \n",
              "1    3.000118         30              19            0         0      F M   \n",
              "2    5.920990         35              25            1         0        F   \n",
              "3    0.015900         21               1            1         0      F S   \n",
              "4    1.906357         32               8            1         0      F M   \n",
              "..        ...        ...             ...          ...       ...      ...   \n",
              "453  0.000000          2               0            0         0      D S   \n",
              "455  0.480966          3               4            0         0    F M S   \n",
              "457  0.335625          4               3            1         0        D   \n",
              "458  0.089547          2               1            1         0        M   \n",
              "459  0.000000          0               0            0         0        D   \n",
              "\n",
              "            team_title npg_1wks            npxG_1wks              xGChain  \\\n",
              "0      Manchester City        9    9.211816400289536   11.093419320881367   \n",
              "1            Tottenham        8    4.824764966964722     9.62911732494831   \n",
              "2            Liverpool        5    4.682757988572121     11.1686532497406   \n",
              "3     Newcastle United        5   5.7889300510287285    6.403569312766194   \n",
              "4             West Ham        7    4.998918272554874   5.8975516855716705   \n",
              "..                 ...      ...                  ...                  ...   \n",
              "453              Luton        0  0.15478374995291233  0.11997372843325138   \n",
              "455            Burnley        0   0.5980505794286728   0.8063931241631508   \n",
              "457  Nottingham Forest        0   0.5807948000729084   1.8947984781116247   \n",
              "458        Bournemouth        0  0.08230337873101234   0.9122739285230637   \n",
              "459              Luton        0                    0                    0   \n",
              "\n",
              "               xGBuildup  xgdifference  xAdifference  \n",
              "0     1.1622753702104092     -0.495323     -0.592708  \n",
              "1        2.9587726239115      3.175235     -2.000118  \n",
              "2      3.551269993185997      0.272641     -1.920990  \n",
              "3     0.8389131352305412     -0.311268     -0.015900  \n",
              "4       1.30326790176332      2.001082     -0.906357  \n",
              "..                   ...           ...           ...  \n",
              "453  0.09997613728046417     -0.154784      0.000000  \n",
              "455  0.16356592625379562     -0.598051     -0.480966  \n",
              "457   1.7495439257472754     -0.580795     -0.335625  \n",
              "458   0.8663346916437149     -0.082303     -0.089547  \n",
              "459                    0      0.000000      0.000000  \n",
              "\n",
              "[412 rows x 20 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-f59775a8-1f26-4424-960f-98b4a823a9fd\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>player_name</th>\n",
              "      <th>games</th>\n",
              "      <th>time</th>\n",
              "      <th>goals_1wks</th>\n",
              "      <th>xG_1wks</th>\n",
              "      <th>assists_1wks</th>\n",
              "      <th>xA_1wks</th>\n",
              "      <th>shots_1wks</th>\n",
              "      <th>key_passes_1wks</th>\n",
              "      <th>yellow_cards</th>\n",
              "      <th>red_cards</th>\n",
              "      <th>position</th>\n",
              "      <th>team_title</th>\n",
              "      <th>npg_1wks</th>\n",
              "      <th>npxG_1wks</th>\n",
              "      <th>xGChain</th>\n",
              "      <th>xGBuildup</th>\n",
              "      <th>xgdifference</th>\n",
              "      <th>xAdifference</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>8260</td>\n",
              "      <td>Erling Haaland</td>\n",
              "      <td>11</td>\n",
              "      <td>945</td>\n",
              "      <td>11</td>\n",
              "      <td>11.495323</td>\n",
              "      <td>2</td>\n",
              "      <td>2.592708</td>\n",
              "      <td>42</td>\n",
              "      <td>11</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>F</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>9</td>\n",
              "      <td>9.211816400289536</td>\n",
              "      <td>11.093419320881367</td>\n",
              "      <td>1.1622753702104092</td>\n",
              "      <td>-0.495323</td>\n",
              "      <td>-0.592708</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>453</td>\n",
              "      <td>Son Heung-Min</td>\n",
              "      <td>11</td>\n",
              "      <td>929</td>\n",
              "      <td>8</td>\n",
              "      <td>4.824765</td>\n",
              "      <td>1</td>\n",
              "      <td>3.000118</td>\n",
              "      <td>30</td>\n",
              "      <td>19</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>F M</td>\n",
              "      <td>Tottenham</td>\n",
              "      <td>8</td>\n",
              "      <td>4.824764966964722</td>\n",
              "      <td>9.62911732494831</td>\n",
              "      <td>2.9587726239115</td>\n",
              "      <td>3.175235</td>\n",
              "      <td>-2.000118</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>1250</td>\n",
              "      <td>Mohamed Salah</td>\n",
              "      <td>11</td>\n",
              "      <td>975</td>\n",
              "      <td>8</td>\n",
              "      <td>7.727359</td>\n",
              "      <td>4</td>\n",
              "      <td>5.920990</td>\n",
              "      <td>35</td>\n",
              "      <td>25</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>F</td>\n",
              "      <td>Liverpool</td>\n",
              "      <td>5</td>\n",
              "      <td>4.682757988572121</td>\n",
              "      <td>11.1686532497406</td>\n",
              "      <td>3.551269993185997</td>\n",
              "      <td>0.272641</td>\n",
              "      <td>-1.920990</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>468</td>\n",
              "      <td>Callum Wilson</td>\n",
              "      <td>10</td>\n",
              "      <td>475</td>\n",
              "      <td>7</td>\n",
              "      <td>7.311268</td>\n",
              "      <td>0</td>\n",
              "      <td>0.015900</td>\n",
              "      <td>21</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>F S</td>\n",
              "      <td>Newcastle United</td>\n",
              "      <td>5</td>\n",
              "      <td>5.7889300510287285</td>\n",
              "      <td>6.403569312766194</td>\n",
              "      <td>0.8389131352305412</td>\n",
              "      <td>-0.311268</td>\n",
              "      <td>-0.015900</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>1776</td>\n",
              "      <td>Jarrod Bowen</td>\n",
              "      <td>11</td>\n",
              "      <td>990</td>\n",
              "      <td>7</td>\n",
              "      <td>4.998918</td>\n",
              "      <td>1</td>\n",
              "      <td>1.906357</td>\n",
              "      <td>32</td>\n",
              "      <td>8</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>F M</td>\n",
              "      <td>West Ham</td>\n",
              "      <td>7</td>\n",
              "      <td>4.998918272554874</td>\n",
              "      <td>5.8975516855716705</td>\n",
              "      <td>1.30326790176332</td>\n",
              "      <td>2.001082</td>\n",
              "      <td>-0.906357</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>453</th>\n",
              "      <td>12073</td>\n",
              "      <td>Teden Mengi</td>\n",
              "      <td>6</td>\n",
              "      <td>415</td>\n",
              "      <td>0</td>\n",
              "      <td>0.154784</td>\n",
              "      <td>0</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>D S</td>\n",
              "      <td>Luton</td>\n",
              "      <td>0</td>\n",
              "      <td>0.15478374995291233</td>\n",
              "      <td>0.11997372843325138</td>\n",
              "      <td>0.09997613728046417</td>\n",
              "      <td>-0.154784</td>\n",
              "      <td>0.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>455</th>\n",
              "      <td>12094</td>\n",
              "      <td>Mike Trésor</td>\n",
              "      <td>6</td>\n",
              "      <td>225</td>\n",
              "      <td>0</td>\n",
              "      <td>0.598051</td>\n",
              "      <td>0</td>\n",
              "      <td>0.480966</td>\n",
              "      <td>3</td>\n",
              "      <td>4</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>F M S</td>\n",
              "      <td>Burnley</td>\n",
              "      <td>0</td>\n",
              "      <td>0.5980505794286728</td>\n",
              "      <td>0.8063931241631508</td>\n",
              "      <td>0.16356592625379562</td>\n",
              "      <td>-0.598051</td>\n",
              "      <td>-0.480966</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>457</th>\n",
              "      <td>12123</td>\n",
              "      <td>Murillo</td>\n",
              "      <td>5</td>\n",
              "      <td>450</td>\n",
              "      <td>0</td>\n",
              "      <td>0.580795</td>\n",
              "      <td>0</td>\n",
              "      <td>0.335625</td>\n",
              "      <td>4</td>\n",
              "      <td>3</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>D</td>\n",
              "      <td>Nottingham Forest</td>\n",
              "      <td>0</td>\n",
              "      <td>0.5807948000729084</td>\n",
              "      <td>1.8947984781116247</td>\n",
              "      <td>1.7495439257472754</td>\n",
              "      <td>-0.580795</td>\n",
              "      <td>-0.335625</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>458</th>\n",
              "      <td>12149</td>\n",
              "      <td>Alex Scott</td>\n",
              "      <td>3</td>\n",
              "      <td>194</td>\n",
              "      <td>0</td>\n",
              "      <td>0.082303</td>\n",
              "      <td>0</td>\n",
              "      <td>0.089547</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>M</td>\n",
              "      <td>Bournemouth</td>\n",
              "      <td>0</td>\n",
              "      <td>0.08230337873101234</td>\n",
              "      <td>0.9122739285230637</td>\n",
              "      <td>0.8663346916437149</td>\n",
              "      <td>-0.082303</td>\n",
              "      <td>-0.089547</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>459</th>\n",
              "      <td>12151</td>\n",
              "      <td>Gabriel Osho</td>\n",
              "      <td>2</td>\n",
              "      <td>148</td>\n",
              "      <td>0</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>D</td>\n",
              "      <td>Luton</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>412 rows × 20 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-f59775a8-1f26-4424-960f-98b4a823a9fd')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-f59775a8-1f26-4424-960f-98b4a823a9fd button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-f59775a8-1f26-4424-960f-98b4a823a9fd');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-a0766b33-d133-4f12-be53-b6bcc451dc40\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-a0766b33-d133-4f12-be53-b6bcc451dc40')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-a0766b33-d133-4f12-be53-b6bcc451dc40 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 6
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "onegamedftidy = one_game_df.drop(columns=[\n",
        " 'time',\n",
        " 'goals_1wks',\n",
        " 'assists_1wks',\n",
        " 'shots_1wks',\n",
        " 'key_passes_1wks',\n",
        " 'yellow_cards',\n",
        " 'red_cards',\n",
        " 'npg_1wks',\n",
        " 'npxG_1wks',\n",
        " 'xGChain',\n",
        " 'xGBuildup',\n",
        " 'xgdifference',\n",
        " 'xAdifference'])\n",
        "onegamedftidy"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 424
        },
        "id": "RKf0tUGEh8FV",
        "outputId": "887677cc-44c9-4b88-bec3-e101f12ae5f8"
      },
      "execution_count": 7,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "        id     player_name games    xG_1wks   xA_1wks position  \\\n",
              "0     8260  Erling Haaland    11  11.495323  2.592708        F   \n",
              "1      453   Son Heung-Min    11   4.824765  3.000118      F M   \n",
              "2     1250   Mohamed Salah    11   7.727359  5.920990        F   \n",
              "3      468   Callum Wilson    10   7.311268  0.015900      F S   \n",
              "4     1776    Jarrod Bowen    11   4.998918  1.906357      F M   \n",
              "..     ...             ...   ...        ...       ...      ...   \n",
              "453  12073     Teden Mengi     6   0.154784  0.000000      D S   \n",
              "455  12094     Mike Trésor     6   0.598051  0.480966    F M S   \n",
              "457  12123         Murillo     5   0.580795  0.335625        D   \n",
              "458  12149      Alex Scott     3   0.082303  0.089547        M   \n",
              "459  12151    Gabriel Osho     2   0.000000  0.000000        D   \n",
              "\n",
              "            team_title  \n",
              "0      Manchester City  \n",
              "1            Tottenham  \n",
              "2            Liverpool  \n",
              "3     Newcastle United  \n",
              "4             West Ham  \n",
              "..                 ...  \n",
              "453              Luton  \n",
              "455            Burnley  \n",
              "457  Nottingham Forest  \n",
              "458        Bournemouth  \n",
              "459              Luton  \n",
              "\n",
              "[412 rows x 7 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-80a9767a-cf58-47fa-a50b-3833e0caace8\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>player_name</th>\n",
              "      <th>games</th>\n",
              "      <th>xG_1wks</th>\n",
              "      <th>xA_1wks</th>\n",
              "      <th>position</th>\n",
              "      <th>team_title</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>8260</td>\n",
              "      <td>Erling Haaland</td>\n",
              "      <td>11</td>\n",
              "      <td>11.495323</td>\n",
              "      <td>2.592708</td>\n",
              "      <td>F</td>\n",
              "      <td>Manchester City</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>453</td>\n",
              "      <td>Son Heung-Min</td>\n",
              "      <td>11</td>\n",
              "      <td>4.824765</td>\n",
              "      <td>3.000118</td>\n",
              "      <td>F M</td>\n",
              "      <td>Tottenham</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>1250</td>\n",
              "      <td>Mohamed Salah</td>\n",
              "      <td>11</td>\n",
              "      <td>7.727359</td>\n",
              "      <td>5.920990</td>\n",
              "      <td>F</td>\n",
              "      <td>Liverpool</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>468</td>\n",
              "      <td>Callum Wilson</td>\n",
              "      <td>10</td>\n",
              "      <td>7.311268</td>\n",
              "      <td>0.015900</td>\n",
              "      <td>F S</td>\n",
              "      <td>Newcastle United</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>1776</td>\n",
              "      <td>Jarrod Bowen</td>\n",
              "      <td>11</td>\n",
              "      <td>4.998918</td>\n",
              "      <td>1.906357</td>\n",
              "      <td>F M</td>\n",
              "      <td>West Ham</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>453</th>\n",
              "      <td>12073</td>\n",
              "      <td>Teden Mengi</td>\n",
              "      <td>6</td>\n",
              "      <td>0.154784</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>D S</td>\n",
              "      <td>Luton</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>455</th>\n",
              "      <td>12094</td>\n",
              "      <td>Mike Trésor</td>\n",
              "      <td>6</td>\n",
              "      <td>0.598051</td>\n",
              "      <td>0.480966</td>\n",
              "      <td>F M S</td>\n",
              "      <td>Burnley</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>457</th>\n",
              "      <td>12123</td>\n",
              "      <td>Murillo</td>\n",
              "      <td>5</td>\n",
              "      <td>0.580795</td>\n",
              "      <td>0.335625</td>\n",
              "      <td>D</td>\n",
              "      <td>Nottingham Forest</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>458</th>\n",
              "      <td>12149</td>\n",
              "      <td>Alex Scott</td>\n",
              "      <td>3</td>\n",
              "      <td>0.082303</td>\n",
              "      <td>0.089547</td>\n",
              "      <td>M</td>\n",
              "      <td>Bournemouth</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>459</th>\n",
              "      <td>12151</td>\n",
              "      <td>Gabriel Osho</td>\n",
              "      <td>2</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>D</td>\n",
              "      <td>Luton</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>412 rows × 7 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-80a9767a-cf58-47fa-a50b-3833e0caace8')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-80a9767a-cf58-47fa-a50b-3833e0caace8 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-80a9767a-cf58-47fa-a50b-3833e0caace8');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-177be775-4bef-4ebe-aebb-156a2aeaa03c\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-177be775-4bef-4ebe-aebb-156a2aeaa03c')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-177be775-4bef-4ebe-aebb-156a2aeaa03c button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 7
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "!git clone https://github.com/pratos/fpl-mappers\n",
        "!git clone https://github.com/ChrisMusson/FPL-ID-Map\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "B9kCj8OeiKGn",
        "outputId": "c678745e-6cd6-4933-8494-c7dd6f9c95c5"
      },
      "execution_count": 9,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "fatal: destination path 'fpl-mappers' already exists and is not an empty directory.\n",
            "fatal: destination path 'FPL-ID-Map' already exists and is not an empty directory.\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "data1 = pd.read_csv('/content/FPL-ID-Map/Understat.csv', on_bad_lines='skip')\n",
        "data2 = pd.read_csv('/content/FPL-ID-Map/FPL/22-23.csv', on_bad_lines='skip')\n",
        "understatwithfplid1 = pd.merge(data2,\n",
        "                     data1,\n",
        "                     on ='code',\n",
        "                     how ='left')\n",
        "understatid = understatwithfplid1.drop(columns=[\n",
        "'code',\n",
        " 'first_name_x',\n",
        " 'second_name_x',\n",
        " 'web_name_x',\n",
        " 'first_name_y',\n",
        " 'second_name_y',\n",
        " 'web_name_y',])\n",
        "one_game_df.rename(columns={'id': 'understat'}, inplace=True)\n",
        "one_game_df"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 548
        },
        "id": "SaX7692EiQA7",
        "outputId": "ab07271f-d1c0-436d-a71b-1a277bdf2cdb"
      },
      "execution_count": 10,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "    understat     player_name games  time  goals_1wks    xG_1wks  \\\n",
              "0        8260  Erling Haaland    11   945          11  11.495323   \n",
              "1         453   Son Heung-Min    11   929           8   4.824765   \n",
              "2        1250   Mohamed Salah    11   975           8   7.727359   \n",
              "3         468   Callum Wilson    10   475           7   7.311268   \n",
              "4        1776    Jarrod Bowen    11   990           7   4.998918   \n",
              "..        ...             ...   ...   ...         ...        ...   \n",
              "453     12073     Teden Mengi     6   415           0   0.154784   \n",
              "455     12094     Mike Trésor     6   225           0   0.598051   \n",
              "457     12123         Murillo     5   450           0   0.580795   \n",
              "458     12149      Alex Scott     3   194           0   0.082303   \n",
              "459     12151    Gabriel Osho     2   148           0   0.000000   \n",
              "\n",
              "     assists_1wks   xA_1wks shots_1wks key_passes_1wks yellow_cards red_cards  \\\n",
              "0               2  2.592708         42              11            0         0   \n",
              "1               1  3.000118         30              19            0         0   \n",
              "2               4  5.920990         35              25            1         0   \n",
              "3               0  0.015900         21               1            1         0   \n",
              "4               1  1.906357         32               8            1         0   \n",
              "..            ...       ...        ...             ...          ...       ...   \n",
              "453             0  0.000000          2               0            0         0   \n",
              "455             0  0.480966          3               4            0         0   \n",
              "457             0  0.335625          4               3            1         0   \n",
              "458             0  0.089547          2               1            1         0   \n",
              "459             0  0.000000          0               0            0         0   \n",
              "\n",
              "    position         team_title npg_1wks            npxG_1wks  \\\n",
              "0          F    Manchester City        9    9.211816400289536   \n",
              "1        F M          Tottenham        8    4.824764966964722   \n",
              "2          F          Liverpool        5    4.682757988572121   \n",
              "3        F S   Newcastle United        5   5.7889300510287285   \n",
              "4        F M           West Ham        7    4.998918272554874   \n",
              "..       ...                ...      ...                  ...   \n",
              "453      D S              Luton        0  0.15478374995291233   \n",
              "455    F M S            Burnley        0   0.5980505794286728   \n",
              "457        D  Nottingham Forest        0   0.5807948000729084   \n",
              "458        M        Bournemouth        0  0.08230337873101234   \n",
              "459        D              Luton        0                    0   \n",
              "\n",
              "                 xGChain            xGBuildup  xgdifference  xAdifference  \n",
              "0     11.093419320881367   1.1622753702104092     -0.495323     -0.592708  \n",
              "1       9.62911732494831      2.9587726239115      3.175235     -2.000118  \n",
              "2       11.1686532497406    3.551269993185997      0.272641     -1.920990  \n",
              "3      6.403569312766194   0.8389131352305412     -0.311268     -0.015900  \n",
              "4     5.8975516855716705     1.30326790176332      2.001082     -0.906357  \n",
              "..                   ...                  ...           ...           ...  \n",
              "453  0.11997372843325138  0.09997613728046417     -0.154784      0.000000  \n",
              "455   0.8063931241631508  0.16356592625379562     -0.598051     -0.480966  \n",
              "457   1.8947984781116247   1.7495439257472754     -0.580795     -0.335625  \n",
              "458   0.9122739285230637   0.8663346916437149     -0.082303     -0.089547  \n",
              "459                    0                    0      0.000000      0.000000  \n",
              "\n",
              "[412 rows x 20 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-0fc53613-afde-427e-a9a3-5151c3a6ae0a\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>understat</th>\n",
              "      <th>player_name</th>\n",
              "      <th>games</th>\n",
              "      <th>time</th>\n",
              "      <th>goals_1wks</th>\n",
              "      <th>xG_1wks</th>\n",
              "      <th>assists_1wks</th>\n",
              "      <th>xA_1wks</th>\n",
              "      <th>shots_1wks</th>\n",
              "      <th>key_passes_1wks</th>\n",
              "      <th>yellow_cards</th>\n",
              "      <th>red_cards</th>\n",
              "      <th>position</th>\n",
              "      <th>team_title</th>\n",
              "      <th>npg_1wks</th>\n",
              "      <th>npxG_1wks</th>\n",
              "      <th>xGChain</th>\n",
              "      <th>xGBuildup</th>\n",
              "      <th>xgdifference</th>\n",
              "      <th>xAdifference</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>8260</td>\n",
              "      <td>Erling Haaland</td>\n",
              "      <td>11</td>\n",
              "      <td>945</td>\n",
              "      <td>11</td>\n",
              "      <td>11.495323</td>\n",
              "      <td>2</td>\n",
              "      <td>2.592708</td>\n",
              "      <td>42</td>\n",
              "      <td>11</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>F</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>9</td>\n",
              "      <td>9.211816400289536</td>\n",
              "      <td>11.093419320881367</td>\n",
              "      <td>1.1622753702104092</td>\n",
              "      <td>-0.495323</td>\n",
              "      <td>-0.592708</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>453</td>\n",
              "      <td>Son Heung-Min</td>\n",
              "      <td>11</td>\n",
              "      <td>929</td>\n",
              "      <td>8</td>\n",
              "      <td>4.824765</td>\n",
              "      <td>1</td>\n",
              "      <td>3.000118</td>\n",
              "      <td>30</td>\n",
              "      <td>19</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>F M</td>\n",
              "      <td>Tottenham</td>\n",
              "      <td>8</td>\n",
              "      <td>4.824764966964722</td>\n",
              "      <td>9.62911732494831</td>\n",
              "      <td>2.9587726239115</td>\n",
              "      <td>3.175235</td>\n",
              "      <td>-2.000118</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>1250</td>\n",
              "      <td>Mohamed Salah</td>\n",
              "      <td>11</td>\n",
              "      <td>975</td>\n",
              "      <td>8</td>\n",
              "      <td>7.727359</td>\n",
              "      <td>4</td>\n",
              "      <td>5.920990</td>\n",
              "      <td>35</td>\n",
              "      <td>25</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>F</td>\n",
              "      <td>Liverpool</td>\n",
              "      <td>5</td>\n",
              "      <td>4.682757988572121</td>\n",
              "      <td>11.1686532497406</td>\n",
              "      <td>3.551269993185997</td>\n",
              "      <td>0.272641</td>\n",
              "      <td>-1.920990</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>468</td>\n",
              "      <td>Callum Wilson</td>\n",
              "      <td>10</td>\n",
              "      <td>475</td>\n",
              "      <td>7</td>\n",
              "      <td>7.311268</td>\n",
              "      <td>0</td>\n",
              "      <td>0.015900</td>\n",
              "      <td>21</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>F S</td>\n",
              "      <td>Newcastle United</td>\n",
              "      <td>5</td>\n",
              "      <td>5.7889300510287285</td>\n",
              "      <td>6.403569312766194</td>\n",
              "      <td>0.8389131352305412</td>\n",
              "      <td>-0.311268</td>\n",
              "      <td>-0.015900</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>1776</td>\n",
              "      <td>Jarrod Bowen</td>\n",
              "      <td>11</td>\n",
              "      <td>990</td>\n",
              "      <td>7</td>\n",
              "      <td>4.998918</td>\n",
              "      <td>1</td>\n",
              "      <td>1.906357</td>\n",
              "      <td>32</td>\n",
              "      <td>8</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>F M</td>\n",
              "      <td>West Ham</td>\n",
              "      <td>7</td>\n",
              "      <td>4.998918272554874</td>\n",
              "      <td>5.8975516855716705</td>\n",
              "      <td>1.30326790176332</td>\n",
              "      <td>2.001082</td>\n",
              "      <td>-0.906357</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>453</th>\n",
              "      <td>12073</td>\n",
              "      <td>Teden Mengi</td>\n",
              "      <td>6</td>\n",
              "      <td>415</td>\n",
              "      <td>0</td>\n",
              "      <td>0.154784</td>\n",
              "      <td>0</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>D S</td>\n",
              "      <td>Luton</td>\n",
              "      <td>0</td>\n",
              "      <td>0.15478374995291233</td>\n",
              "      <td>0.11997372843325138</td>\n",
              "      <td>0.09997613728046417</td>\n",
              "      <td>-0.154784</td>\n",
              "      <td>0.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>455</th>\n",
              "      <td>12094</td>\n",
              "      <td>Mike Trésor</td>\n",
              "      <td>6</td>\n",
              "      <td>225</td>\n",
              "      <td>0</td>\n",
              "      <td>0.598051</td>\n",
              "      <td>0</td>\n",
              "      <td>0.480966</td>\n",
              "      <td>3</td>\n",
              "      <td>4</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>F M S</td>\n",
              "      <td>Burnley</td>\n",
              "      <td>0</td>\n",
              "      <td>0.5980505794286728</td>\n",
              "      <td>0.8063931241631508</td>\n",
              "      <td>0.16356592625379562</td>\n",
              "      <td>-0.598051</td>\n",
              "      <td>-0.480966</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>457</th>\n",
              "      <td>12123</td>\n",
              "      <td>Murillo</td>\n",
              "      <td>5</td>\n",
              "      <td>450</td>\n",
              "      <td>0</td>\n",
              "      <td>0.580795</td>\n",
              "      <td>0</td>\n",
              "      <td>0.335625</td>\n",
              "      <td>4</td>\n",
              "      <td>3</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>D</td>\n",
              "      <td>Nottingham Forest</td>\n",
              "      <td>0</td>\n",
              "      <td>0.5807948000729084</td>\n",
              "      <td>1.8947984781116247</td>\n",
              "      <td>1.7495439257472754</td>\n",
              "      <td>-0.580795</td>\n",
              "      <td>-0.335625</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>458</th>\n",
              "      <td>12149</td>\n",
              "      <td>Alex Scott</td>\n",
              "      <td>3</td>\n",
              "      <td>194</td>\n",
              "      <td>0</td>\n",
              "      <td>0.082303</td>\n",
              "      <td>0</td>\n",
              "      <td>0.089547</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>M</td>\n",
              "      <td>Bournemouth</td>\n",
              "      <td>0</td>\n",
              "      <td>0.08230337873101234</td>\n",
              "      <td>0.9122739285230637</td>\n",
              "      <td>0.8663346916437149</td>\n",
              "      <td>-0.082303</td>\n",
              "      <td>-0.089547</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>459</th>\n",
              "      <td>12151</td>\n",
              "      <td>Gabriel Osho</td>\n",
              "      <td>2</td>\n",
              "      <td>148</td>\n",
              "      <td>0</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>D</td>\n",
              "      <td>Luton</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>412 rows × 20 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-0fc53613-afde-427e-a9a3-5151c3a6ae0a')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-0fc53613-afde-427e-a9a3-5151c3a6ae0a button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-0fc53613-afde-427e-a9a3-5151c3a6ae0a');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-60bc1242-88b4-4ca8-a1f5-7b08c839b6bd\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-60bc1242-88b4-4ca8-a1f5-7b08c839b6bd')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-60bc1242-88b4-4ca8-a1f5-7b08c839b6bd button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 10
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "!git clone https://github.com/huricane85/FPL-API-Fixture-modeler"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "dU1giLdZir3J",
        "outputId": "cdec4e36-6b2e-45f0-d7d8-bff265187960"
      },
      "execution_count": 11,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Cloning into 'FPL-API-Fixture-modeler'...\n",
            "remote: Enumerating objects: 87, done.\u001b[K\n",
            "remote: Counting objects: 100% (87/87), done.\u001b[K\n",
            "remote: Compressing objects: 100% (87/87), done.\u001b[K\n",
            "remote: Total 87 (delta 45), reused 0 (delta 0), pack-reused 0\u001b[K\n",
            "Receiving objects: 100% (87/87), 4.08 MiB | 6.47 MiB/s, done.\n",
            "Resolving deltas: 100% (45/45), done.\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import pandas as pd\n",
        "\n",
        "# read the CSV file from GitHub into a DataFrame\n",
        "url = \"https://raw.githubusercontent.com/ChrisMusson/FPL-ID-Map/main/Master.csv\"\n",
        "df = pd.read_csv(url)\n",
        "\n",
        "# rename the \"22-23\" column to \"id\"\n",
        "df.rename(columns={'22-23': 'id'}, inplace=True)\n",
        "\n",
        "# convert \"id\" and \"understat\" columns to int64 and float64 respectively\n",
        "df['id'] = pd.to_numeric(df['id'], errors='coerce', downcast='integer').astype('Int64')\n",
        "df['understat'] = pd.to_numeric(df['understat'], errors='coerce', downcast='integer').astype('Int64')\n",
        "\n",
        "# filter out rows where \"understat\" is null\n",
        "df = df.dropna(subset=['understat'])\n",
        "\n",
        "# change data type of \"id\" column to float64\n",
        "df['id'] = df['id'].astype('float64')\n",
        "\n",
        "# create a new DataFrame with only the \"understat\" and \"id\" columns\n",
        "new_df = df[['understat', 'id']].dropna(subset=['id']).copy()\n",
        "\n",
        "# display the new DataFrame\n",
        "\n",
        "new_df\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 424
        },
        "id": "WRijWphEVPuN",
        "outputId": "a75fee44-39a4-4023-ab74-ee4175b3375a"
      },
      "execution_count": 12,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "      understat     id\n",
              "37         7821  760.0\n",
              "38         1697  627.0\n",
              "55         2371  326.0\n",
              "62          489  274.0\n",
              "77         8158  502.0\n",
              "...         ...    ...\n",
              "1933      11301  695.0\n",
              "1934      11146  632.0\n",
              "1935      11189  646.0\n",
              "1936      11302  696.0\n",
              "1937      11195  650.0\n",
              "\n",
              "[763 rows x 2 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-efdfe1a4-46bb-438c-bd32-7cde7c3a4a96\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>understat</th>\n",
              "      <th>id</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>37</th>\n",
              "      <td>7821</td>\n",
              "      <td>760.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>38</th>\n",
              "      <td>1697</td>\n",
              "      <td>627.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>55</th>\n",
              "      <td>2371</td>\n",
              "      <td>326.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>62</th>\n",
              "      <td>489</td>\n",
              "      <td>274.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>77</th>\n",
              "      <td>8158</td>\n",
              "      <td>502.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1933</th>\n",
              "      <td>11301</td>\n",
              "      <td>695.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1934</th>\n",
              "      <td>11146</td>\n",
              "      <td>632.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1935</th>\n",
              "      <td>11189</td>\n",
              "      <td>646.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1936</th>\n",
              "      <td>11302</td>\n",
              "      <td>696.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1937</th>\n",
              "      <td>11195</td>\n",
              "      <td>650.0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>763 rows × 2 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-efdfe1a4-46bb-438c-bd32-7cde7c3a4a96')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-efdfe1a4-46bb-438c-bd32-7cde7c3a4a96 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-efdfe1a4-46bb-438c-bd32-7cde7c3a4a96');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-be473646-2aa4-41b2-8eb2-4a144b74b428\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-be473646-2aa4-41b2-8eb2-4a144b74b428')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-be473646-2aa4-41b2-8eb2-4a144b74b428 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 12
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "new_df"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 424
        },
        "id": "NhQ4dZKdUv36",
        "outputId": "c7e2fcd6-21af-4212-d700-61bf8340a728"
      },
      "execution_count": 13,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "      understat     id\n",
              "37         7821  760.0\n",
              "38         1697  627.0\n",
              "55         2371  326.0\n",
              "62          489  274.0\n",
              "77         8158  502.0\n",
              "...         ...    ...\n",
              "1933      11301  695.0\n",
              "1934      11146  632.0\n",
              "1935      11189  646.0\n",
              "1936      11302  696.0\n",
              "1937      11195  650.0\n",
              "\n",
              "[763 rows x 2 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-34fe6b8b-bd9b-4287-8804-3c7ec57bacb3\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>understat</th>\n",
              "      <th>id</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>37</th>\n",
              "      <td>7821</td>\n",
              "      <td>760.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>38</th>\n",
              "      <td>1697</td>\n",
              "      <td>627.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>55</th>\n",
              "      <td>2371</td>\n",
              "      <td>326.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>62</th>\n",
              "      <td>489</td>\n",
              "      <td>274.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>77</th>\n",
              "      <td>8158</td>\n",
              "      <td>502.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1933</th>\n",
              "      <td>11301</td>\n",
              "      <td>695.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1934</th>\n",
              "      <td>11146</td>\n",
              "      <td>632.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1935</th>\n",
              "      <td>11189</td>\n",
              "      <td>646.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1936</th>\n",
              "      <td>11302</td>\n",
              "      <td>696.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1937</th>\n",
              "      <td>11195</td>\n",
              "      <td>650.0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>763 rows × 2 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-34fe6b8b-bd9b-4287-8804-3c7ec57bacb3')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-34fe6b8b-bd9b-4287-8804-3c7ec57bacb3 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-34fe6b8b-bd9b-4287-8804-3c7ec57bacb3');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-96a3d32d-7772-467b-894a-b4dc447eb7cc\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-96a3d32d-7772-467b-894a-b4dc447eb7cc')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-96a3d32d-7772-467b-894a-b4dc447eb7cc button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 13
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "one_game_df[\"understat\"] = one_game_df[\"understat\"].astype(str).astype(int)\n",
        "understatid2 = new_df\n",
        "understatwithfplid = pd.merge(one_game_df,\n",
        "                     understatid2,\n",
        "                     on ='understat',\n",
        "                     how ='left')\n",
        "understatwithfplid"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 548
        },
        "id": "KmDbXEnfi2v1",
        "outputId": "cef1fc34-8259-44ef-ca6a-a37b938940db"
      },
      "execution_count": 14,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "     understat     player_name games  time  goals_1wks    xG_1wks  \\\n",
              "0         8260  Erling Haaland    11   945          11  11.495323   \n",
              "1          453   Son Heung-Min    11   929           8   4.824765   \n",
              "2         1250   Mohamed Salah    11   975           8   7.727359   \n",
              "3          468   Callum Wilson    10   475           7   7.311268   \n",
              "4         1776    Jarrod Bowen    11   990           7   4.998918   \n",
              "..         ...             ...   ...   ...         ...        ...   \n",
              "407      12073     Teden Mengi     6   415           0   0.154784   \n",
              "408      12094     Mike Trésor     6   225           0   0.598051   \n",
              "409      12123         Murillo     5   450           0   0.580795   \n",
              "410      12149      Alex Scott     3   194           0   0.082303   \n",
              "411      12151    Gabriel Osho     2   148           0   0.000000   \n",
              "\n",
              "     assists_1wks   xA_1wks shots_1wks key_passes_1wks  ... red_cards  \\\n",
              "0               2  2.592708         42              11  ...         0   \n",
              "1               1  3.000118         30              19  ...         0   \n",
              "2               4  5.920990         35              25  ...         0   \n",
              "3               0  0.015900         21               1  ...         0   \n",
              "4               1  1.906357         32               8  ...         0   \n",
              "..            ...       ...        ...             ...  ...       ...   \n",
              "407             0  0.000000          2               0  ...         0   \n",
              "408             0  0.480966          3               4  ...         0   \n",
              "409             0  0.335625          4               3  ...         0   \n",
              "410             0  0.089547          2               1  ...         0   \n",
              "411             0  0.000000          0               0  ...         0   \n",
              "\n",
              "    position         team_title npg_1wks            npxG_1wks  \\\n",
              "0          F    Manchester City        9    9.211816400289536   \n",
              "1        F M          Tottenham        8    4.824764966964722   \n",
              "2          F          Liverpool        5    4.682757988572121   \n",
              "3        F S   Newcastle United        5   5.7889300510287285   \n",
              "4        F M           West Ham        7    4.998918272554874   \n",
              "..       ...                ...      ...                  ...   \n",
              "407      D S              Luton        0  0.15478374995291233   \n",
              "408    F M S            Burnley        0   0.5980505794286728   \n",
              "409        D  Nottingham Forest        0   0.5807948000729084   \n",
              "410        M        Bournemouth        0  0.08230337873101234   \n",
              "411        D              Luton        0                    0   \n",
              "\n",
              "                 xGChain            xGBuildup xgdifference  xAdifference  \\\n",
              "0     11.093419320881367   1.1622753702104092    -0.495323     -0.592708   \n",
              "1       9.62911732494831      2.9587726239115     3.175235     -2.000118   \n",
              "2       11.1686532497406    3.551269993185997     0.272641     -1.920990   \n",
              "3      6.403569312766194   0.8389131352305412    -0.311268     -0.015900   \n",
              "4     5.8975516855716705     1.30326790176332     2.001082     -0.906357   \n",
              "..                   ...                  ...          ...           ...   \n",
              "407  0.11997372843325138  0.09997613728046417    -0.154784      0.000000   \n",
              "408   0.8063931241631508  0.16356592625379562    -0.598051     -0.480966   \n",
              "409   1.8947984781116247   1.7495439257472754    -0.580795     -0.335625   \n",
              "410   0.9122739285230637   0.8663346916437149    -0.082303     -0.089547   \n",
              "411                    0                    0     0.000000      0.000000   \n",
              "\n",
              "        id  \n",
              "0    318.0  \n",
              "1    428.0  \n",
              "2    283.0  \n",
              "3    356.0  \n",
              "4    465.0  \n",
              "..     ...  \n",
              "407    NaN  \n",
              "408    NaN  \n",
              "409    NaN  \n",
              "410    NaN  \n",
              "411    NaN  \n",
              "\n",
              "[412 rows x 21 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-0ba1852f-0e80-4187-b1ec-b4656a494747\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>understat</th>\n",
              "      <th>player_name</th>\n",
              "      <th>games</th>\n",
              "      <th>time</th>\n",
              "      <th>goals_1wks</th>\n",
              "      <th>xG_1wks</th>\n",
              "      <th>assists_1wks</th>\n",
              "      <th>xA_1wks</th>\n",
              "      <th>shots_1wks</th>\n",
              "      <th>key_passes_1wks</th>\n",
              "      <th>...</th>\n",
              "      <th>red_cards</th>\n",
              "      <th>position</th>\n",
              "      <th>team_title</th>\n",
              "      <th>npg_1wks</th>\n",
              "      <th>npxG_1wks</th>\n",
              "      <th>xGChain</th>\n",
              "      <th>xGBuildup</th>\n",
              "      <th>xgdifference</th>\n",
              "      <th>xAdifference</th>\n",
              "      <th>id</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>8260</td>\n",
              "      <td>Erling Haaland</td>\n",
              "      <td>11</td>\n",
              "      <td>945</td>\n",
              "      <td>11</td>\n",
              "      <td>11.495323</td>\n",
              "      <td>2</td>\n",
              "      <td>2.592708</td>\n",
              "      <td>42</td>\n",
              "      <td>11</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>F</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>9</td>\n",
              "      <td>9.211816400289536</td>\n",
              "      <td>11.093419320881367</td>\n",
              "      <td>1.1622753702104092</td>\n",
              "      <td>-0.495323</td>\n",
              "      <td>-0.592708</td>\n",
              "      <td>318.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>453</td>\n",
              "      <td>Son Heung-Min</td>\n",
              "      <td>11</td>\n",
              "      <td>929</td>\n",
              "      <td>8</td>\n",
              "      <td>4.824765</td>\n",
              "      <td>1</td>\n",
              "      <td>3.000118</td>\n",
              "      <td>30</td>\n",
              "      <td>19</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>F M</td>\n",
              "      <td>Tottenham</td>\n",
              "      <td>8</td>\n",
              "      <td>4.824764966964722</td>\n",
              "      <td>9.62911732494831</td>\n",
              "      <td>2.9587726239115</td>\n",
              "      <td>3.175235</td>\n",
              "      <td>-2.000118</td>\n",
              "      <td>428.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>1250</td>\n",
              "      <td>Mohamed Salah</td>\n",
              "      <td>11</td>\n",
              "      <td>975</td>\n",
              "      <td>8</td>\n",
              "      <td>7.727359</td>\n",
              "      <td>4</td>\n",
              "      <td>5.920990</td>\n",
              "      <td>35</td>\n",
              "      <td>25</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>F</td>\n",
              "      <td>Liverpool</td>\n",
              "      <td>5</td>\n",
              "      <td>4.682757988572121</td>\n",
              "      <td>11.1686532497406</td>\n",
              "      <td>3.551269993185997</td>\n",
              "      <td>0.272641</td>\n",
              "      <td>-1.920990</td>\n",
              "      <td>283.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>468</td>\n",
              "      <td>Callum Wilson</td>\n",
              "      <td>10</td>\n",
              "      <td>475</td>\n",
              "      <td>7</td>\n",
              "      <td>7.311268</td>\n",
              "      <td>0</td>\n",
              "      <td>0.015900</td>\n",
              "      <td>21</td>\n",
              "      <td>1</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>F S</td>\n",
              "      <td>Newcastle United</td>\n",
              "      <td>5</td>\n",
              "      <td>5.7889300510287285</td>\n",
              "      <td>6.403569312766194</td>\n",
              "      <td>0.8389131352305412</td>\n",
              "      <td>-0.311268</td>\n",
              "      <td>-0.015900</td>\n",
              "      <td>356.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>1776</td>\n",
              "      <td>Jarrod Bowen</td>\n",
              "      <td>11</td>\n",
              "      <td>990</td>\n",
              "      <td>7</td>\n",
              "      <td>4.998918</td>\n",
              "      <td>1</td>\n",
              "      <td>1.906357</td>\n",
              "      <td>32</td>\n",
              "      <td>8</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>F M</td>\n",
              "      <td>West Ham</td>\n",
              "      <td>7</td>\n",
              "      <td>4.998918272554874</td>\n",
              "      <td>5.8975516855716705</td>\n",
              "      <td>1.30326790176332</td>\n",
              "      <td>2.001082</td>\n",
              "      <td>-0.906357</td>\n",
              "      <td>465.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>407</th>\n",
              "      <td>12073</td>\n",
              "      <td>Teden Mengi</td>\n",
              "      <td>6</td>\n",
              "      <td>415</td>\n",
              "      <td>0</td>\n",
              "      <td>0.154784</td>\n",
              "      <td>0</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>D S</td>\n",
              "      <td>Luton</td>\n",
              "      <td>0</td>\n",
              "      <td>0.15478374995291233</td>\n",
              "      <td>0.11997372843325138</td>\n",
              "      <td>0.09997613728046417</td>\n",
              "      <td>-0.154784</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>408</th>\n",
              "      <td>12094</td>\n",
              "      <td>Mike Trésor</td>\n",
              "      <td>6</td>\n",
              "      <td>225</td>\n",
              "      <td>0</td>\n",
              "      <td>0.598051</td>\n",
              "      <td>0</td>\n",
              "      <td>0.480966</td>\n",
              "      <td>3</td>\n",
              "      <td>4</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>F M S</td>\n",
              "      <td>Burnley</td>\n",
              "      <td>0</td>\n",
              "      <td>0.5980505794286728</td>\n",
              "      <td>0.8063931241631508</td>\n",
              "      <td>0.16356592625379562</td>\n",
              "      <td>-0.598051</td>\n",
              "      <td>-0.480966</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>409</th>\n",
              "      <td>12123</td>\n",
              "      <td>Murillo</td>\n",
              "      <td>5</td>\n",
              "      <td>450</td>\n",
              "      <td>0</td>\n",
              "      <td>0.580795</td>\n",
              "      <td>0</td>\n",
              "      <td>0.335625</td>\n",
              "      <td>4</td>\n",
              "      <td>3</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>D</td>\n",
              "      <td>Nottingham Forest</td>\n",
              "      <td>0</td>\n",
              "      <td>0.5807948000729084</td>\n",
              "      <td>1.8947984781116247</td>\n",
              "      <td>1.7495439257472754</td>\n",
              "      <td>-0.580795</td>\n",
              "      <td>-0.335625</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>410</th>\n",
              "      <td>12149</td>\n",
              "      <td>Alex Scott</td>\n",
              "      <td>3</td>\n",
              "      <td>194</td>\n",
              "      <td>0</td>\n",
              "      <td>0.082303</td>\n",
              "      <td>0</td>\n",
              "      <td>0.089547</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>M</td>\n",
              "      <td>Bournemouth</td>\n",
              "      <td>0</td>\n",
              "      <td>0.08230337873101234</td>\n",
              "      <td>0.9122739285230637</td>\n",
              "      <td>0.8663346916437149</td>\n",
              "      <td>-0.082303</td>\n",
              "      <td>-0.089547</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>411</th>\n",
              "      <td>12151</td>\n",
              "      <td>Gabriel Osho</td>\n",
              "      <td>2</td>\n",
              "      <td>148</td>\n",
              "      <td>0</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>D</td>\n",
              "      <td>Luton</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>412 rows × 21 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-0ba1852f-0e80-4187-b1ec-b4656a494747')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-0ba1852f-0e80-4187-b1ec-b4656a494747 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-0ba1852f-0e80-4187-b1ec-b4656a494747');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-a8a7a2bd-c5ba-47e0-b1b8-9a11d064bde6\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-a8a7a2bd-c5ba-47e0-b1b8-9a11d064bde6')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-a8a7a2bd-c5ba-47e0-b1b8-9a11d064bde6 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 14
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "from urllib.request import urlopen\n",
        "from json import loads\n",
        "from csv import writer\n",
        "\n",
        "\n",
        "def team_converter(team_id):\n",
        "    '''Converts a team's ID to their actual name'''\n",
        "    team_map = {\n",
        "        1: \"Arsenal\",\n",
        "        2: \"Aston Villa\",\n",
        "        3: \"Bournemouth\",\n",
        "        4: \"Brentford\",\n",
        "        5: \"Brighton\",\n",
        "        6: \"Burnley\",\n",
        "        7: \"Chelsea\",\n",
        "        8: \"Crystal Palace\",\n",
        "        9: \"Everton\",\n",
        "        10: \"Fulham\",\n",
        "        11: \"Liverpool\",\n",
        "        12: \"Luton Town\",\n",
        "        13: \"Manchester City\",\n",
        "        14: \"Manchester United\",\n",
        "        15: \"Newcastle United\",\n",
        "        16: \"Nottingham Forest\",\n",
        "        17: \"Sheffield United\",\n",
        "        18: \"Tottenham\",\n",
        "        19: \"West Ham\",\n",
        "        20: \"Wolverhampton Wanderers\",\n",
        "        None: None\n",
        "    }\n",
        "    return team_map[team_id]\n",
        "\n",
        "\n",
        "def position_converter(position):\n",
        "    '''Converts a player's element_type to their actual position'''\n",
        "    position_map = {\n",
        "        1: \"Goalkeeper\",\n",
        "        2: \"Defender\",\n",
        "        3: \"Midfielder\",\n",
        "        4: \"Forward\"\n",
        "    }\n",
        "    return position_map[position]\n",
        "\n",
        "\n",
        "def main():\n",
        "    all_data = loads(urlopen(\"https://fantasy.premierleague.com/api/fixtures/\").read())\n",
        "    fixtures = all_data\n",
        "\n",
        "    important_data = [\n",
        "        [\n",
        "            x[\"event\"],\n",
        "            team_converter(x[\"team_h\"]),\n",
        "            team_converter(x[\"team_a\"]),\n",
        "            x[\"kickoff_time\"],\n",
        "\n",
        "        ]\n",
        "        for x in fixtures\n",
        "    ]\n",
        "\n",
        "    with open(\"/fixtures_data.csv\", \"w\", encoding=\"utf-8\", newline=\"\") as out:\n",
        "        headers = [\"event\",\"team_h\",\"team_a\",\"kickoff_time\"]\n",
        "        w = writer(out)\n",
        "        w.writerow(headers)\n",
        "        w.writerows(important_data)\n",
        "\n",
        "if __name__ == \"__main__\":\n",
        "    main()"
      ],
      "metadata": {
        "id": "Y_cV1kyak7XX"
      },
      "execution_count": 15,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "import pandas as pd\n",
        "import scipy\n",
        "import numpy as np\n",
        "from numpy import random\n",
        "import matplotlib.pyplot as plt\n",
        "import seaborn as sns\n",
        "import matplotlib"
      ],
      "metadata": {
        "id": "DXejj-4jjUI-"
      },
      "execution_count": 16,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "from urllib.request import urlopen\n",
        "from json import loads\n",
        "from csv import writer\n",
        "\n",
        "\n",
        "def team_converter(team_id):\n",
        "    '''Converts a team's ID to their actual name'''\n",
        "    team_map = {\n",
        "        1: \"Arsenal\",\n",
        "        2: \"Aston Villa\",\n",
        "        3: \"Bournemouth\",\n",
        "        4: \"Brentford\",\n",
        "        5: \"Brighton\",\n",
        "        6: \"Burnley\",\n",
        "        7: \"Chelsea\",\n",
        "        8: \"Crystal Palace\",\n",
        "        9: \"Everton\",\n",
        "        10: \"Fulham\",\n",
        "        11: \"Liverpool\",\n",
        "        12: \"Luton Town\",\n",
        "        13: \"Manchester City\",\n",
        "        14: \"Manchester United\",\n",
        "        15: \"Newcastle United\",\n",
        "        16: \"Nottingham Forest\",\n",
        "        17: \"Sheffield United\",\n",
        "        18: \"Tottenham\",\n",
        "        19: \"West Ham\",\n",
        "        20: \"Wolverhampton Wanderers\",\n",
        "        None: None\n",
        "    }\n",
        "    return team_map[team_id]\n",
        "\n",
        "\n",
        "def position_converter(position):\n",
        "    '''Converts a player's element_type to their actual position'''\n",
        "    position_map = {\n",
        "        1: \"Goalkeeper\",\n",
        "        2: \"Defender\",\n",
        "        3: \"Midfielder\",\n",
        "        4: \"Forward\"\n",
        "    }\n",
        "    return position_map[position]\n",
        "\n",
        "\n",
        "def main():\n",
        "    all_data = loads(urlopen(\"https://fantasy.premierleague.com/api/bootstrap-static/\").read())\n",
        "    players = all_data[\"elements\"]\n",
        "\n",
        "    important_data = [\n",
        "        [\n",
        "            x[\"id\"],\n",
        "            team_converter(x[\"team\"]),\n",
        "            position_converter(x[\"element_type\"])[0],\n",
        "            x[\"web_name\"],\n",
        "            x[\"now_cost\"] / 10,\n",
        "            x[\"selected_by_percent\"],\n",
        "            float(x[\"expected_goals\"]),  # Convert to float\n",
        "            float(x[\"expected_assists\"]),  # Convert to float\n",
        "            x[\"goals_scored\"],\n",
        "            x[\"assists\"],\n",
        "            x[\"bps\"],\n",
        "            x[\"ict_index\"],\n",
        "            x[\"total_points\"],\n",
        "            x[\"points_per_game\"],\n",
        "            x[\"minutes\"]\n",
        "        ]\n",
        "        for x in players\n",
        "    ]\n",
        "\n",
        "    with open(\"players_data.csv\", \"w\", encoding=\"utf-8\", newline=\"\") as out:\n",
        "        headers = [\"id\",\"team\", \"pos\", \"name\", \"cost\", \"selected_by_percent\", \"expected_goals\", \"expected_assists\", \"goals_scored\", \"assists\", \"bps\", \"ict_index\",\"points\", \"points_per_game\", \"minutes\"]\n",
        "        w = writer(out)\n",
        "        w.writerow(headers)\n",
        "        w.writerows(important_data)\n",
        "\n",
        "if __name__ == \"__main__\":\n",
        "    main()"
      ],
      "metadata": {
        "id": "CKZZPD0xQGLu"
      },
      "execution_count": 17,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "import pandas as pd\n",
        "playerdata = pd.read_csv(\"/content/players_data.csv\")\n",
        "master = playerdata\n",
        "#master = master.dropna()\n",
        "master['apppoint'] = 2\n",
        "master['assistvalue'] = 3\n",
        "#master['BPS90'] = master.bps/(master.minutes/90)\n",
        "master"
      ],
      "metadata": {
        "id": "VOx8tP0bjttO",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 424
        },
        "outputId": "45f1377a-601b-4f6a-9a3b-8b319625ca19"
      },
      "execution_count": 18,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "      id                     team pos          name  cost  \\\n",
              "0      1                  Arsenal   F       Balogun   4.4   \n",
              "1      2                  Arsenal   D        Cédric   3.9   \n",
              "2      3                  Arsenal   M      M.Elneny   4.4   \n",
              "3      4                  Arsenal   M  Fábio Vieira   5.4   \n",
              "4      5                  Arsenal   D       Gabriel   4.8   \n",
              "..   ...                      ...  ..           ...   ...   \n",
              "728  598  Wolverhampton Wanderers   D       Doherty   4.3   \n",
              "729  697  Wolverhampton Wanderers   D       S.Bueno   4.5   \n",
              "730  698  Wolverhampton Wanderers   M      González   5.0   \n",
              "731  704  Wolverhampton Wanderers   F        Fraser   4.5   \n",
              "732  715  Wolverhampton Wanderers   M    Bellegarde   4.9   \n",
              "\n",
              "     selected_by_percent  expected_goals  expected_assists  goals_scored  \\\n",
              "0                    0.2            0.00              0.00             0   \n",
              "1                    0.4            0.00              0.00             0   \n",
              "2                    0.1            0.00              0.00             0   \n",
              "3                    0.1            1.20              0.35             1   \n",
              "4                   14.3            0.20              0.08             0   \n",
              "..                   ...             ...               ...           ...   \n",
              "728                  0.2            0.12              0.33             0   \n",
              "729                  0.0            0.00              0.00             0   \n",
              "730                  0.0            0.00              0.00             0   \n",
              "731                  0.1            0.00              0.00             0   \n",
              "732                  0.0            0.15              0.07             1   \n",
              "\n",
              "     assists  bps  ict_index  points  points_per_game  minutes  apppoint  \\\n",
              "0          0    0        0.0       0              0.0        0         2   \n",
              "1          0    0        0.0       0              0.0        0         2   \n",
              "2          1   12        0.4       4              4.0        1         2   \n",
              "3          3   69       21.9      23              3.3      213         2   \n",
              "4          0  132       16.9      27              3.0      654         2   \n",
              "..       ...  ...        ...     ...              ...      ...       ...   \n",
              "728        0   27       11.6       5              1.0      226         2   \n",
              "729        0    0        0.0       0              0.0        0         2   \n",
              "730        0    0        0.0       0              0.0        0         2   \n",
              "731        0    0        0.0       0              0.0        0         2   \n",
              "732        0   21       10.5       7              2.3      143         2   \n",
              "\n",
              "     assistvalue  \n",
              "0              3  \n",
              "1              3  \n",
              "2              3  \n",
              "3              3  \n",
              "4              3  \n",
              "..           ...  \n",
              "728            3  \n",
              "729            3  \n",
              "730            3  \n",
              "731            3  \n",
              "732            3  \n",
              "\n",
              "[733 rows x 17 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-79463260-623d-428a-aee1-8415d8e9788c\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>team</th>\n",
              "      <th>pos</th>\n",
              "      <th>name</th>\n",
              "      <th>cost</th>\n",
              "      <th>selected_by_percent</th>\n",
              "      <th>expected_goals</th>\n",
              "      <th>expected_assists</th>\n",
              "      <th>goals_scored</th>\n",
              "      <th>assists</th>\n",
              "      <th>bps</th>\n",
              "      <th>ict_index</th>\n",
              "      <th>points</th>\n",
              "      <th>points_per_game</th>\n",
              "      <th>minutes</th>\n",
              "      <th>apppoint</th>\n",
              "      <th>assistvalue</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>1</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>F</td>\n",
              "      <td>Balogun</td>\n",
              "      <td>4.4</td>\n",
              "      <td>0.2</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>2</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>D</td>\n",
              "      <td>Cédric</td>\n",
              "      <td>3.9</td>\n",
              "      <td>0.4</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>3</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>M</td>\n",
              "      <td>M.Elneny</td>\n",
              "      <td>4.4</td>\n",
              "      <td>0.1</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>12</td>\n",
              "      <td>0.4</td>\n",
              "      <td>4</td>\n",
              "      <td>4.0</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>4</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>M</td>\n",
              "      <td>Fábio Vieira</td>\n",
              "      <td>5.4</td>\n",
              "      <td>0.1</td>\n",
              "      <td>1.20</td>\n",
              "      <td>0.35</td>\n",
              "      <td>1</td>\n",
              "      <td>3</td>\n",
              "      <td>69</td>\n",
              "      <td>21.9</td>\n",
              "      <td>23</td>\n",
              "      <td>3.3</td>\n",
              "      <td>213</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>5</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>D</td>\n",
              "      <td>Gabriel</td>\n",
              "      <td>4.8</td>\n",
              "      <td>14.3</td>\n",
              "      <td>0.20</td>\n",
              "      <td>0.08</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>132</td>\n",
              "      <td>16.9</td>\n",
              "      <td>27</td>\n",
              "      <td>3.0</td>\n",
              "      <td>654</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>728</th>\n",
              "      <td>598</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>D</td>\n",
              "      <td>Doherty</td>\n",
              "      <td>4.3</td>\n",
              "      <td>0.2</td>\n",
              "      <td>0.12</td>\n",
              "      <td>0.33</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>27</td>\n",
              "      <td>11.6</td>\n",
              "      <td>5</td>\n",
              "      <td>1.0</td>\n",
              "      <td>226</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>729</th>\n",
              "      <td>697</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>D</td>\n",
              "      <td>S.Bueno</td>\n",
              "      <td>4.5</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>730</th>\n",
              "      <td>698</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>M</td>\n",
              "      <td>González</td>\n",
              "      <td>5.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>731</th>\n",
              "      <td>704</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>F</td>\n",
              "      <td>Fraser</td>\n",
              "      <td>4.5</td>\n",
              "      <td>0.1</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>732</th>\n",
              "      <td>715</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>M</td>\n",
              "      <td>Bellegarde</td>\n",
              "      <td>4.9</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.15</td>\n",
              "      <td>0.07</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>21</td>\n",
              "      <td>10.5</td>\n",
              "      <td>7</td>\n",
              "      <td>2.3</td>\n",
              "      <td>143</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>733 rows × 17 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-79463260-623d-428a-aee1-8415d8e9788c')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-79463260-623d-428a-aee1-8415d8e9788c button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-79463260-623d-428a-aee1-8415d8e9788c');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-b2d36791-c40a-472b-b801-711dadae4726\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-b2d36791-c40a-472b-b801-711dadae4726')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-b2d36791-c40a-472b-b801-711dadae4726 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 18
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import pandas as pd\n",
        "gwfixtures = pd.read_csv(\"/fixtures_data.csv\")\n",
        "import requests\n",
        "import pandas as pd\n",
        "url = 'https://projects.fivethirtyeight.com/soccer-api/club/spi_global_rankings.csv'\n",
        "r = requests.get(url)\n",
        "open('temp.csv', 'wb').write(r.content)\n",
        "spi = pd.read_csv('temp.csv')\n",
        "spi['team_h'] = spi['name']\n",
        "spi['team_a'] = spi['name']\n",
        "spi= spi.replace('Newcastle', 'Newcastle United')\n",
        "spi= spi.replace('Wolverhampton','Wolverhampton Wanderers')\n",
        "spi= spi.replace('Tottenham Hotspur','Tottenham')\n",
        "spi= spi.replace('Leeds United','Leeds')\n",
        "spi= spi.replace('Leicester City','Leicester')\n",
        "spi= spi.replace('West Ham United','West Ham')\n",
        "spi= spi.replace('Brighton and Hove Albion','Brighton')\n",
        "spi= spi.replace('Norwich City','Norwich')\n",
        "spi= spi.replace('AFC Bournemouth','Bournemouth')\n",
        "Left_join = pd.merge(gwfixtures,\n",
        "                     spi,\n",
        "                     on ='team_h',\n",
        "                     how ='left')\n",
        "homespi = Left_join.drop(columns=[\n",
        " 'rank',\n",
        " 'prev_rank',\n",
        " 'league',\n",
        "  'off',\n",
        " 'def',\n",
        " 'name',\n",
        " 'team_a_y',])\n",
        "homespi.rename(columns = {'team_a_x':'team_a', 'spi':'Home SPI'}, inplace = True)\n",
        "away_join = pd.merge(homespi,\n",
        "                     spi,\n",
        "                     on ='team_a',\n",
        "                     how ='left')\n",
        "homesawayspi = away_join.drop(columns=[\n",
        " 'rank',\n",
        " 'prev_rank',\n",
        " 'name',\n",
        " 'league',\n",
        " 'off',\n",
        " 'def',\n",
        " 'team_h_y'])\n",
        "homesawayspi.rename(columns = {'team_h_x':'team_h', 'spi':'Away SPI'}, inplace = True)\n",
        "homesawayspi['Event'] = homesawayspi['event'].astype(str)\n",
        "gw12 = homesawayspi.query('Event==\"12.0\"')\n",
        "PLSPI = spi.query('league==\"Barclays Premier League\"')\n",
        "PLSPI['League Average']  = PLSPI[\"spi\"].mean()\n",
        "laverage = PLSPI[\"spi\"].mean()\n",
        "PLSPI['League Average'].astype(int)\n",
        "gw12['League_Average']  = laverage\n",
        "gw12.rename(columns = {'Home SPI':'HomeSPI', 'Away SPI':'AwaySPI'}, inplace = True)\n",
        "gw12['home_difference'] = gw12.HomeSPI - gw12.League_Average\n",
        "gw12['away_difference'] = gw12.AwaySPI - gw12.League_Average\n",
        "gw12['home_adjustment'] = (gw12.home_difference + gw12.League_Average)/gw12.League_Average\n",
        "gw12['away_adjustment'] = (gw12.away_difference + gw12.League_Average)/gw12.League_Average\n",
        "gw12adjustments = gw12[['team_h', 'home_adjustment']].append(gw12[['team_a','away_adjustment']].set_axis(['team_h', 'home_adjustment'], axis=1)).reset_index(drop=True)\n",
        "gw12adjustments.rename(columns = {'team_h':'team'}, inplace = True)\n",
        "gw12adjustments"
      ],
      "metadata": {
        "id": "0oqPsFQJjyR0",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "outputId": "beca7c14-9712-43c7-e744-68125b539146"
      },
      "execution_count": 19,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "<ipython-input-19-48af3f2f79fb>:49: SettingWithCopyWarning: \n",
            "A value is trying to be set on a copy of a slice from a DataFrame.\n",
            "Try using .loc[row_indexer,col_indexer] = value instead\n",
            "\n",
            "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
            "  PLSPI['League Average']  = PLSPI[\"spi\"].mean()\n",
            "<ipython-input-19-48af3f2f79fb>:52: SettingWithCopyWarning: \n",
            "A value is trying to be set on a copy of a slice from a DataFrame.\n",
            "Try using .loc[row_indexer,col_indexer] = value instead\n",
            "\n",
            "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
            "  gw12['League_Average']  = laverage\n",
            "<ipython-input-19-48af3f2f79fb>:53: SettingWithCopyWarning: \n",
            "A value is trying to be set on a copy of a slice from a DataFrame\n",
            "\n",
            "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
            "  gw12.rename(columns = {'Home SPI':'HomeSPI', 'Away SPI':'AwaySPI'}, inplace = True)\n",
            "<ipython-input-19-48af3f2f79fb>:54: SettingWithCopyWarning: \n",
            "A value is trying to be set on a copy of a slice from a DataFrame.\n",
            "Try using .loc[row_indexer,col_indexer] = value instead\n",
            "\n",
            "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
            "  gw12['home_difference'] = gw12.HomeSPI - gw12.League_Average\n",
            "<ipython-input-19-48af3f2f79fb>:55: SettingWithCopyWarning: \n",
            "A value is trying to be set on a copy of a slice from a DataFrame.\n",
            "Try using .loc[row_indexer,col_indexer] = value instead\n",
            "\n",
            "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
            "  gw12['away_difference'] = gw12.AwaySPI - gw12.League_Average\n",
            "<ipython-input-19-48af3f2f79fb>:56: SettingWithCopyWarning: \n",
            "A value is trying to be set on a copy of a slice from a DataFrame.\n",
            "Try using .loc[row_indexer,col_indexer] = value instead\n",
            "\n",
            "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
            "  gw12['home_adjustment'] = (gw12.home_difference + gw12.League_Average)/gw12.League_Average\n",
            "<ipython-input-19-48af3f2f79fb>:57: SettingWithCopyWarning: \n",
            "A value is trying to be set on a copy of a slice from a DataFrame.\n",
            "Try using .loc[row_indexer,col_indexer] = value instead\n",
            "\n",
            "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
            "  gw12['away_adjustment'] = (gw12.away_difference + gw12.League_Average)/gw12.League_Average\n",
            "<ipython-input-19-48af3f2f79fb>:58: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  gw12adjustments = gw12[['team_h', 'home_adjustment']].append(gw12[['team_a','away_adjustment']].set_axis(['team_h', 'home_adjustment'], axis=1)).reset_index(drop=True)\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                       team  home_adjustment\n",
              "0   Wolverhampton Wanderers         0.820717\n",
              "1                   Arsenal         1.166179\n",
              "2            Crystal Palace         1.020824\n",
              "3         Manchester United         1.098921\n",
              "4               Bournemouth         0.827943\n",
              "5               Aston Villa         1.101978\n",
              "6                  Brighton         1.123934\n",
              "7                 Liverpool         1.166318\n",
              "8                  West Ham         0.988306\n",
              "9                   Chelsea         1.053063\n",
              "10                Tottenham         1.002480\n",
              "11                  Burnley         0.874634\n",
              "12                  Everton         0.884223\n",
              "13               Luton Town         0.770968\n",
              "14         Newcastle United         1.163122\n",
              "15                   Fulham         0.948007\n",
              "16         Sheffield United         0.786115\n",
              "17                Brentford         1.071962\n",
              "18        Nottingham Forest         0.780000\n",
              "19          Manchester City         1.278461"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-2df63611-b11c-4fd4-a697-b6dfd984ca32\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>team</th>\n",
              "      <th>home_adjustment</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>0.820717</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Arsenal</td>\n",
              "      <td>1.166179</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>Crystal Palace</td>\n",
              "      <td>1.020824</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>Manchester United</td>\n",
              "      <td>1.098921</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>Bournemouth</td>\n",
              "      <td>0.827943</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>1.101978</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>Brighton</td>\n",
              "      <td>1.123934</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>Liverpool</td>\n",
              "      <td>1.166318</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>West Ham</td>\n",
              "      <td>0.988306</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>Chelsea</td>\n",
              "      <td>1.053063</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10</th>\n",
              "      <td>Tottenham</td>\n",
              "      <td>1.002480</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>11</th>\n",
              "      <td>Burnley</td>\n",
              "      <td>0.874634</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>12</th>\n",
              "      <td>Everton</td>\n",
              "      <td>0.884223</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>13</th>\n",
              "      <td>Luton Town</td>\n",
              "      <td>0.770968</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>14</th>\n",
              "      <td>Newcastle United</td>\n",
              "      <td>1.163122</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>15</th>\n",
              "      <td>Fulham</td>\n",
              "      <td>0.948007</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>16</th>\n",
              "      <td>Sheffield United</td>\n",
              "      <td>0.786115</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>17</th>\n",
              "      <td>Brentford</td>\n",
              "      <td>1.071962</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>18</th>\n",
              "      <td>Nottingham Forest</td>\n",
              "      <td>0.780000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>19</th>\n",
              "      <td>Manchester City</td>\n",
              "      <td>1.278461</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-2df63611-b11c-4fd4-a697-b6dfd984ca32')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-2df63611-b11c-4fd4-a697-b6dfd984ca32 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-2df63611-b11c-4fd4-a697-b6dfd984ca32');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-050d5012-c866-4955-9b7f-8f385669007b\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-050d5012-c866-4955-9b7f-8f385669007b')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-050d5012-c866-4955-9b7f-8f385669007b button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 19
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "rawdf = pd.merge(master,\n",
        "                     gw12adjustments,\n",
        "                     on ='team',\n",
        "                     how ='left')\n",
        "rawfwd = rawdf.query('pos==\"F\"')\n",
        "rawfwd['xP'] = ((rawfwd.expected_goals * 4/11)+(rawfwd.expected_assists * 3/11) + (rawfwd.apppoint)) * rawfwd.home_adjustment\n",
        "rawfwd = rawfwd.drop(columns=[\n",
        " 'expected_goals',\n",
        " 'team',\n",
        " 'expected_assists',\n",
        " 'apppoint',\n",
        " 'assistvalue',\n",
        "'home_adjustment'])\n",
        "rawmd = rawdf.query('pos==\"M\"')\n",
        "rawmd['xP'] = ((rawmd.expected_goals * 5/11)+(rawmd.expected_assists * 3/11) + (rawmd.apppoint)) * rawmd.home_adjustment\n",
        "rawmd = rawmd.drop(columns=[\n",
        " 'expected_goals',\n",
        " 'team',\n",
        " 'expected_assists',\n",
        " 'apppoint',\n",
        " 'assistvalue',\n",
        "'home_adjustment'])\n",
        "fbref = pd.read_html('https://fbref.com/en/comps/9/Premier-League-Stats')\n",
        "epltable = fbref[0]\n",
        "epltabledef = epltable.drop(columns=[ 'Rk',\n",
        " 'MP',\n",
        " 'W',\n",
        " 'D',\n",
        " 'L',\n",
        " 'GF',\n",
        " 'GA',\n",
        " 'GD',\n",
        " 'xG',\n",
        " 'xGD',\n",
        " 'xGD/90',\n",
        " 'Pts',\n",
        " 'Pts/MP',\n",
        " 'Last 5',\n",
        " 'Attendance',\n",
        " 'Top Team Scorer',\n",
        " 'Goalkeeper',\n",
        " 'Notes'])\n",
        "epltabledef= epltabledef.replace('Newcastle Utd', 'Newcastle United')\n",
        "epltabledef= epltabledef.replace('Wolves','Wolverhampton Wanderers')\n",
        "epltabledef= epltabledef.replace('Leeds United','Leeds')\n",
        "epltabledef= epltabledef.replace('Leicester City','Leicester')\n",
        "epltabledef= epltabledef.replace('Manchester Utd','Manchester United')\n",
        "epltabledef['Squad'] = epltabledef['Squad'].str.replace(r\"[\\\"\\',]\", '')\n",
        "epltabledef= epltabledef.replace('Nottham Forest','Nottingham Forest')\n",
        "epltabledef['xCSP'] = (4 - (epltabledef.xGA * 4/11))\n",
        "epltabledef.rename(columns={'Squad': 'team'}, inplace=True)\n",
        "rawdfcs = pd.merge(rawdf,\n",
        "                     epltabledef,\n",
        "                     on ='team',\n",
        "                     how ='left')\n",
        "rawgk= rawdfcs.query('pos==\"G\"')\n",
        "rawgk['xP'] = ((rawgk.xCSP)+ (rawgk.apppoint)) * rawgk.home_adjustment\n",
        "#rawgk['xP'] = rawgk.apppoint * rawgk.home_adjustment\n",
        "rawgk = rawgk.drop(columns=[\n",
        " 'expected_goals',\n",
        " 'team',\n",
        " 'expected_assists',\n",
        " 'apppoint',\n",
        " 'assistvalue',\n",
        "  'xGA',\n",
        "'home_adjustment'])\n",
        "rawdef= rawdfcs.query('pos==\"D\"')\n",
        "rawdef['xP'] = ((rawdef.expected_goals * 6/11)+(rawdef.expected_assists * 3/11) +(rawdef.xCSP)+ (rawdef.apppoint) * rawdef.home_adjustment)\n",
        "#rawdef['xP'] = ((rawdef.expected_goals * 6/3)+(rawdef.expected_assists * 3/3) + (rawdef.apppoint) * rawdef.home_adjustment)\n",
        "rawdef = rawdef.drop(columns=[\n",
        " 'expected_goals',\n",
        " 'team',\n",
        " 'expected_assists',\n",
        " 'apppoint',\n",
        " 'assistvalue',\n",
        "  'xGA',\n",
        " 'home_adjustment'])\n",
        "rawallplayers = pd.concat([rawfwd, rawmd, rawdef, rawgk], ignore_index=True)\n",
        "rawallplayers\n",
        "\n",
        "\n",
        "\n"
      ],
      "metadata": {
        "id": "AWnYpVh5kDzO",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 875
        },
        "outputId": "d9fa8aeb-b4ea-41ba-c740-4d12460fea38"
      },
      "execution_count": 21,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "<ipython-input-21-f336de19a059>:6: SettingWithCopyWarning: \n",
            "A value is trying to be set on a copy of a slice from a DataFrame.\n",
            "Try using .loc[row_indexer,col_indexer] = value instead\n",
            "\n",
            "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
            "  rawfwd['xP'] = ((rawfwd.expected_goals * 4/11)+(rawfwd.expected_assists * 3/11) + (rawfwd.apppoint)) * rawfwd.home_adjustment\n",
            "<ipython-input-21-f336de19a059>:15: SettingWithCopyWarning: \n",
            "A value is trying to be set on a copy of a slice from a DataFrame.\n",
            "Try using .loc[row_indexer,col_indexer] = value instead\n",
            "\n",
            "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
            "  rawmd['xP'] = ((rawmd.expected_goals * 5/11)+(rawmd.expected_assists * 3/11) + (rawmd.apppoint)) * rawmd.home_adjustment\n",
            "<ipython-input-21-f336de19a059>:48: FutureWarning: The default value of regex will change from True to False in a future version.\n",
            "  epltabledef['Squad'] = epltabledef['Squad'].str.replace(r\"[\\\"\\',]\", '')\n",
            "<ipython-input-21-f336de19a059>:57: SettingWithCopyWarning: \n",
            "A value is trying to be set on a copy of a slice from a DataFrame.\n",
            "Try using .loc[row_indexer,col_indexer] = value instead\n",
            "\n",
            "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
            "  rawgk['xP'] = ((rawgk.xCSP)+ (rawgk.apppoint)) * rawgk.home_adjustment\n",
            "<ipython-input-21-f336de19a059>:68: SettingWithCopyWarning: \n",
            "A value is trying to be set on a copy of a slice from a DataFrame.\n",
            "Try using .loc[row_indexer,col_indexer] = value instead\n",
            "\n",
            "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
            "  rawdef['xP'] = ((rawdef.expected_goals * 6/11)+(rawdef.expected_assists * 3/11) +(rawdef.xCSP)+ (rawdef.apppoint) * rawdef.home_adjustment)\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "      id pos     name  cost  selected_by_percent  goals_scored  assists  bps  \\\n",
              "0      1   F  Balogun   4.4                  0.2             0        0    0   \n",
              "1      8   F  G.Jesus   7.8                  2.0             1        1   51   \n",
              "2     13   F  Nketiah   5.7                 10.5             5        2  157   \n",
              "3     39   F    Davis   4.9                  0.1             0        0    0   \n",
              "4     44   F    Duran   5.0                  0.2             2        0   55   \n",
              "..   ...  ..      ...   ...                  ...           ...      ...  ...   \n",
              "728  647   G    Anang   4.0                  0.1             0        0    0   \n",
              "729  546   G  Bentley   3.9                  0.5             0        0    0   \n",
              "730  564   G     King   4.0                  0.7             0        0    0   \n",
              "731  569   G  José Sá   5.0                  1.6             0        0  195   \n",
              "732  571   G   Šarkić   4.0                  0.3             0        0    0   \n",
              "\n",
              "     ict_index  points  points_per_game  minutes        xP      xCSP  \n",
              "0          0.0       0              0.0        0  2.332358       NaN  \n",
              "1         26.9      18              2.6      362  3.152924       NaN  \n",
              "2         53.4      49              4.5      757  3.762518       NaN  \n",
              "3          0.0       0              0.0        0  2.203956       NaN  \n",
              "4         13.7      15              2.5       68  2.499487       NaN  \n",
              "..         ...     ...              ...      ...       ...       ...  \n",
              "728        0.0       0              0.0        0 -1.473475 -3.490909  \n",
              "729        0.0       0              0.0        0 -0.686418 -2.836364  \n",
              "730        0.0       0              0.0        0 -0.686418 -2.836364  \n",
              "731       30.7      34              3.1      990 -0.686418 -2.836364  \n",
              "732        0.0       0              0.0        0 -0.686418 -2.836364  \n",
              "\n",
              "[733 rows x 14 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-9f8b39df-e1a4-4b0b-9364-94534977c7e3\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>pos</th>\n",
              "      <th>name</th>\n",
              "      <th>cost</th>\n",
              "      <th>selected_by_percent</th>\n",
              "      <th>goals_scored</th>\n",
              "      <th>assists</th>\n",
              "      <th>bps</th>\n",
              "      <th>ict_index</th>\n",
              "      <th>points</th>\n",
              "      <th>points_per_game</th>\n",
              "      <th>minutes</th>\n",
              "      <th>xP</th>\n",
              "      <th>xCSP</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>1</td>\n",
              "      <td>F</td>\n",
              "      <td>Balogun</td>\n",
              "      <td>4.4</td>\n",
              "      <td>0.2</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>2.332358</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>8</td>\n",
              "      <td>F</td>\n",
              "      <td>G.Jesus</td>\n",
              "      <td>7.8</td>\n",
              "      <td>2.0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>51</td>\n",
              "      <td>26.9</td>\n",
              "      <td>18</td>\n",
              "      <td>2.6</td>\n",
              "      <td>362</td>\n",
              "      <td>3.152924</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>13</td>\n",
              "      <td>F</td>\n",
              "      <td>Nketiah</td>\n",
              "      <td>5.7</td>\n",
              "      <td>10.5</td>\n",
              "      <td>5</td>\n",
              "      <td>2</td>\n",
              "      <td>157</td>\n",
              "      <td>53.4</td>\n",
              "      <td>49</td>\n",
              "      <td>4.5</td>\n",
              "      <td>757</td>\n",
              "      <td>3.762518</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>39</td>\n",
              "      <td>F</td>\n",
              "      <td>Davis</td>\n",
              "      <td>4.9</td>\n",
              "      <td>0.1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>2.203956</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>44</td>\n",
              "      <td>F</td>\n",
              "      <td>Duran</td>\n",
              "      <td>5.0</td>\n",
              "      <td>0.2</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>55</td>\n",
              "      <td>13.7</td>\n",
              "      <td>15</td>\n",
              "      <td>2.5</td>\n",
              "      <td>68</td>\n",
              "      <td>2.499487</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>728</th>\n",
              "      <td>647</td>\n",
              "      <td>G</td>\n",
              "      <td>Anang</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>-1.473475</td>\n",
              "      <td>-3.490909</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>729</th>\n",
              "      <td>546</td>\n",
              "      <td>G</td>\n",
              "      <td>Bentley</td>\n",
              "      <td>3.9</td>\n",
              "      <td>0.5</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>-0.686418</td>\n",
              "      <td>-2.836364</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>730</th>\n",
              "      <td>564</td>\n",
              "      <td>G</td>\n",
              "      <td>King</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.7</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>-0.686418</td>\n",
              "      <td>-2.836364</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>731</th>\n",
              "      <td>569</td>\n",
              "      <td>G</td>\n",
              "      <td>José Sá</td>\n",
              "      <td>5.0</td>\n",
              "      <td>1.6</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>195</td>\n",
              "      <td>30.7</td>\n",
              "      <td>34</td>\n",
              "      <td>3.1</td>\n",
              "      <td>990</td>\n",
              "      <td>-0.686418</td>\n",
              "      <td>-2.836364</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>732</th>\n",
              "      <td>571</td>\n",
              "      <td>G</td>\n",
              "      <td>Šarkić</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.3</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>-0.686418</td>\n",
              "      <td>-2.836364</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>733 rows × 14 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-9f8b39df-e1a4-4b0b-9364-94534977c7e3')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-9f8b39df-e1a4-4b0b-9364-94534977c7e3 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-9f8b39df-e1a4-4b0b-9364-94534977c7e3');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-403041fc-69bf-42fa-91ee-d171adc7a51f\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-403041fc-69bf-42fa-91ee-d171adc7a51f')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-403041fc-69bf-42fa-91ee-d171adc7a51f button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 21
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "rawgk1= rawdfcs.query('pos==\"G\"')\n",
        "rawgk1"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 493
        },
        "id": "z3FgmhoCb3GG",
        "outputId": "d8242d9a-2e75-40ae-ae62-2226a9fdb9f0"
      },
      "execution_count": 22,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "      id                     team pos       name  cost  selected_by_percent  \\\n",
              "15    17                  Arsenal   G   Ramsdale   4.7                  7.9   \n",
              "16    18                  Arsenal   G  Rúnarsson   4.0                  0.1   \n",
              "26   113                  Arsenal   G       Raya   4.8                  4.6   \n",
              "30   646                  Arsenal   G       Hein   4.0                  0.0   \n",
              "47    49              Aston Villa   G   Martinez   4.9                  7.4   \n",
              "..   ...                      ...  ..        ...   ...                  ...   \n",
              "695  647                 West Ham   G      Anang   4.0                  0.1   \n",
              "701  546  Wolverhampton Wanderers   G    Bentley   3.9                  0.5   \n",
              "717  564  Wolverhampton Wanderers   G       King   4.0                  0.7   \n",
              "721  569  Wolverhampton Wanderers   G    José Sá   5.0                  1.6   \n",
              "723  571  Wolverhampton Wanderers   G     Šarkić   4.0                  0.3   \n",
              "\n",
              "     expected_goals  expected_assists  goals_scored  assists  bps  ict_index  \\\n",
              "15              0.0              0.01             0        0   55        5.1   \n",
              "16              0.0              0.00             0        0    0        0.0   \n",
              "26              0.0              0.00             0        0  135        8.5   \n",
              "30              0.0              0.00             0        0    0        0.0   \n",
              "47              0.0              0.00             0        0  168       21.0   \n",
              "..              ...               ...           ...      ...  ...        ...   \n",
              "695             0.0              0.00             0        0    0        0.0   \n",
              "701             0.0              0.00             0        0    0        0.0   \n",
              "717             0.0              0.00             0        0    0        0.0   \n",
              "721             0.0              0.00             0        0  195       30.7   \n",
              "723             0.0              0.00             0        0    0        0.0   \n",
              "\n",
              "     points  points_per_game  minutes  apppoint  assistvalue  home_adjustment  \\\n",
              "15       11              2.8      360         2            3         1.166179   \n",
              "16        0              0.0        0         2            3         1.166179   \n",
              "26       32              4.6      630         2            3         1.166179   \n",
              "30        0              0.0        0         2            3         1.166179   \n",
              "47       27              2.7      900         2            3         1.101978   \n",
              "..      ...              ...      ...       ...          ...              ...   \n",
              "695       0              0.0        0         2            3         0.988306   \n",
              "701       0              0.0        0         2            3         0.820717   \n",
              "717       0              0.0        0         2            3         0.820717   \n",
              "721      34              3.1      990         2            3         0.820717   \n",
              "723       0              0.0        0         2            3         0.820717   \n",
              "\n",
              "      xGA      xCSP  \n",
              "15    8.9  0.763636  \n",
              "16    8.9  0.763636  \n",
              "26    8.9  0.763636  \n",
              "30    8.9  0.763636  \n",
              "47   14.9 -1.418182  \n",
              "..    ...       ...  \n",
              "695  20.6 -3.490909  \n",
              "701  18.8 -2.836364  \n",
              "717  18.8 -2.836364  \n",
              "721  18.8 -2.836364  \n",
              "723  18.8 -2.836364  \n",
              "\n",
              "[85 rows x 20 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-40dd46fe-6abb-49bc-9098-99f8792b82f2\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>team</th>\n",
              "      <th>pos</th>\n",
              "      <th>name</th>\n",
              "      <th>cost</th>\n",
              "      <th>selected_by_percent</th>\n",
              "      <th>expected_goals</th>\n",
              "      <th>expected_assists</th>\n",
              "      <th>goals_scored</th>\n",
              "      <th>assists</th>\n",
              "      <th>bps</th>\n",
              "      <th>ict_index</th>\n",
              "      <th>points</th>\n",
              "      <th>points_per_game</th>\n",
              "      <th>minutes</th>\n",
              "      <th>apppoint</th>\n",
              "      <th>assistvalue</th>\n",
              "      <th>home_adjustment</th>\n",
              "      <th>xGA</th>\n",
              "      <th>xCSP</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>15</th>\n",
              "      <td>17</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>G</td>\n",
              "      <td>Ramsdale</td>\n",
              "      <td>4.7</td>\n",
              "      <td>7.9</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.01</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>55</td>\n",
              "      <td>5.1</td>\n",
              "      <td>11</td>\n",
              "      <td>2.8</td>\n",
              "      <td>360</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "      <td>1.166179</td>\n",
              "      <td>8.9</td>\n",
              "      <td>0.763636</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>16</th>\n",
              "      <td>18</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>G</td>\n",
              "      <td>Rúnarsson</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.1</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "      <td>1.166179</td>\n",
              "      <td>8.9</td>\n",
              "      <td>0.763636</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>26</th>\n",
              "      <td>113</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>G</td>\n",
              "      <td>Raya</td>\n",
              "      <td>4.8</td>\n",
              "      <td>4.6</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>135</td>\n",
              "      <td>8.5</td>\n",
              "      <td>32</td>\n",
              "      <td>4.6</td>\n",
              "      <td>630</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "      <td>1.166179</td>\n",
              "      <td>8.9</td>\n",
              "      <td>0.763636</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>30</th>\n",
              "      <td>646</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>G</td>\n",
              "      <td>Hein</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "      <td>1.166179</td>\n",
              "      <td>8.9</td>\n",
              "      <td>0.763636</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>47</th>\n",
              "      <td>49</td>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>G</td>\n",
              "      <td>Martinez</td>\n",
              "      <td>4.9</td>\n",
              "      <td>7.4</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>168</td>\n",
              "      <td>21.0</td>\n",
              "      <td>27</td>\n",
              "      <td>2.7</td>\n",
              "      <td>900</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "      <td>1.101978</td>\n",
              "      <td>14.9</td>\n",
              "      <td>-1.418182</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>695</th>\n",
              "      <td>647</td>\n",
              "      <td>West Ham</td>\n",
              "      <td>G</td>\n",
              "      <td>Anang</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.1</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "      <td>0.988306</td>\n",
              "      <td>20.6</td>\n",
              "      <td>-3.490909</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>701</th>\n",
              "      <td>546</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>G</td>\n",
              "      <td>Bentley</td>\n",
              "      <td>3.9</td>\n",
              "      <td>0.5</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "      <td>0.820717</td>\n",
              "      <td>18.8</td>\n",
              "      <td>-2.836364</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>717</th>\n",
              "      <td>564</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>G</td>\n",
              "      <td>King</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.7</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "      <td>0.820717</td>\n",
              "      <td>18.8</td>\n",
              "      <td>-2.836364</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>721</th>\n",
              "      <td>569</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>G</td>\n",
              "      <td>José Sá</td>\n",
              "      <td>5.0</td>\n",
              "      <td>1.6</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>195</td>\n",
              "      <td>30.7</td>\n",
              "      <td>34</td>\n",
              "      <td>3.1</td>\n",
              "      <td>990</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "      <td>0.820717</td>\n",
              "      <td>18.8</td>\n",
              "      <td>-2.836364</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>723</th>\n",
              "      <td>571</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>G</td>\n",
              "      <td>Šarkić</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.3</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "      <td>0.820717</td>\n",
              "      <td>18.8</td>\n",
              "      <td>-2.836364</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>85 rows × 20 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-40dd46fe-6abb-49bc-9098-99f8792b82f2')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-40dd46fe-6abb-49bc-9098-99f8792b82f2 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-40dd46fe-6abb-49bc-9098-99f8792b82f2');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-50ca7622-42a9-4ce0-9600-1f98a67d658f\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-50ca7622-42a9-4ce0-9600-1f98a67d658f')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-50ca7622-42a9-4ce0-9600-1f98a67d658f button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 22
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "from pandas import ExcelWriter"
      ],
      "metadata": {
        "id": "ONZy1SvCDu6y"
      },
      "execution_count": 23,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "writer = ExcelWriter('notes.xlsx')"
      ],
      "metadata": {
        "id": "iubZBRlVEhiz"
      },
      "execution_count": 24,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "rawallplayers.to_excel(writer, sheet_name='Sheet1')\n",
        "gw12adjustments.to_excel(writer, sheet_name='Sheet2')\n",
        "#fplwithunderstat.to_excel(writer, sheet_name='Sheet3')\n",
        "\n",
        "# Close the Pandas Excel writer and output the Excel file.\n",
        "writer.save()"
      ],
      "metadata": {
        "id": "slYEIma_E0uP",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "eb99fccd-c5b2-40ae-c48e-7267583fea87"
      },
      "execution_count": 25,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "<ipython-input-25-43192448d36d>:6: FutureWarning: save is not part of the public API, usage can give unexpected results and will be removed in a future version\n",
            "  writer.save()\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "gwfixtures"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 424
        },
        "id": "3udskoGrT73A",
        "outputId": "18d2c14f-1c39-48e9-af4b-df2110e5a4b4"
      },
      "execution_count": 26,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "     event            team_h                   team_a          kickoff_time\n",
              "0      NaN   Manchester City                Brentford                   NaN\n",
              "1      1.0           Burnley          Manchester City  2023-08-11T19:00:00Z\n",
              "2      1.0           Arsenal        Nottingham Forest  2023-08-12T12:00:00Z\n",
              "3      1.0       Bournemouth                 West Ham  2023-08-12T14:00:00Z\n",
              "4      1.0          Brighton               Luton Town  2023-08-12T14:00:00Z\n",
              "..     ...               ...                      ...                   ...\n",
              "375   38.0    Crystal Palace              Aston Villa  2024-05-19T15:00:00Z\n",
              "376   38.0         Liverpool  Wolverhampton Wanderers  2024-05-19T15:00:00Z\n",
              "377   38.0        Luton Town                   Fulham  2024-05-19T15:00:00Z\n",
              "378   38.0   Manchester City                 West Ham  2024-05-19T15:00:00Z\n",
              "379   38.0  Sheffield United                Tottenham  2024-05-19T15:00:00Z\n",
              "\n",
              "[380 rows x 4 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-e79f87ef-5a04-4393-958c-a8f57b4fa7fe\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>event</th>\n",
              "      <th>team_h</th>\n",
              "      <th>team_a</th>\n",
              "      <th>kickoff_time</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>NaN</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>Brentford</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>1.0</td>\n",
              "      <td>Burnley</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>2023-08-11T19:00:00Z</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>1.0</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>Nottingham Forest</td>\n",
              "      <td>2023-08-12T12:00:00Z</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>1.0</td>\n",
              "      <td>Bournemouth</td>\n",
              "      <td>West Ham</td>\n",
              "      <td>2023-08-12T14:00:00Z</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>1.0</td>\n",
              "      <td>Brighton</td>\n",
              "      <td>Luton Town</td>\n",
              "      <td>2023-08-12T14:00:00Z</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>375</th>\n",
              "      <td>38.0</td>\n",
              "      <td>Crystal Palace</td>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>2024-05-19T15:00:00Z</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>376</th>\n",
              "      <td>38.0</td>\n",
              "      <td>Liverpool</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>2024-05-19T15:00:00Z</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>377</th>\n",
              "      <td>38.0</td>\n",
              "      <td>Luton Town</td>\n",
              "      <td>Fulham</td>\n",
              "      <td>2024-05-19T15:00:00Z</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>378</th>\n",
              "      <td>38.0</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>West Ham</td>\n",
              "      <td>2024-05-19T15:00:00Z</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>379</th>\n",
              "      <td>38.0</td>\n",
              "      <td>Sheffield United</td>\n",
              "      <td>Tottenham</td>\n",
              "      <td>2024-05-19T15:00:00Z</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>380 rows × 4 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-e79f87ef-5a04-4393-958c-a8f57b4fa7fe')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-e79f87ef-5a04-4393-958c-a8f57b4fa7fe button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-e79f87ef-5a04-4393-958c-a8f57b4fa7fe');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-1b3287d2-3c3a-40dd-984e-174b5d0c1bcd\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-1b3287d2-3c3a-40dd-984e-174b5d0c1bcd')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-1b3287d2-3c3a-40dd-984e-174b5d0c1bcd button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 26
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "rawdfallgw = pd.merge(master,\n",
        "                     gw12adjustments,\n",
        "                     on ='team',\n",
        "                     how ='left')\n",
        "rawfwdallgw = rawdfallgw.query('pos==\"F\"')\n",
        "rawfwdallgw['xPallgw'] = ((rawfwdallgw.expected_goals * 4/11)+(rawfwdallgw.expected_assists * 3/11) + (rawfwdallgw.apppoint))\n",
        "rawfwdallgw = rawfwdallgw.drop(columns=[\n",
        " 'expected_goals',\n",
        " 'expected_assists',\n",
        " 'apppoint',\n",
        " 'assistvalue',\n",
        "])\n",
        "rawmdallgw = rawdfallgw.query('pos==\"M\"')\n",
        "rawmdallgw['xPallgw'] = ((rawmdallgw.expected_goals * 5/11)+(rawmdallgw.expected_assists * 3/11) + (rawmdallgw.apppoint))\n",
        "rawmdallgw = rawmdallgw.drop(columns=[\n",
        " 'expected_goals',\n",
        " 'expected_assists',\n",
        " 'apppoint',\n",
        " 'assistvalue',\n",
        "])\n",
        "fbref = pd.read_html('https://fbref.com/en/comps/9/Premier-League-Stats')\n",
        "epltable = fbref[0]\n",
        "epltabledef = epltable.drop(columns=[ 'Rk',\n",
        " 'MP',\n",
        " 'W',\n",
        " 'D',\n",
        " 'L',\n",
        " 'GF',\n",
        " 'GA',\n",
        " 'GD',\n",
        " 'xG',\n",
        " 'xGD',\n",
        " 'xGD/90',\n",
        " 'Pts',\n",
        " 'Pts/MP',\n",
        " 'Last 5',\n",
        " 'Attendance',\n",
        " 'Top Team Scorer',\n",
        " 'Goalkeeper',\n",
        " 'Notes'])\n",
        "epltabledef= epltabledef.replace('Newcastle Utd', 'Newcastle United')\n",
        "epltabledef= epltabledef.replace('Wolves','Wolverhampton Wanderers')\n",
        "epltabledef= epltabledef.replace('Leeds United','Leeds')\n",
        "epltabledef= epltabledef.replace('Leicester City','Leicester')\n",
        "epltabledef= epltabledef.replace('Manchester Utd','Manchester United')\n",
        "epltabledef['Squad'] = epltabledef['Squad'].str.replace(r\"[\\\"\\',]\", '')\n",
        "epltabledef= epltabledef.replace('Nottham Forest','Nottingham Forest')\n",
        "epltabledef['xCSP'] = (4 - (epltabledef.xGA * 4/11))\n",
        "epltabledef.rename(columns={'Squad': 'team'}, inplace=True)\n",
        "rawdfcs = pd.merge(rawdf,\n",
        "                     epltabledef,\n",
        "                     on ='team',\n",
        "                     how ='left')\n",
        "rawgkallgw= rawdfcs.query('pos==\"G\"')\n",
        "#rawgkallgw['xPallgw'] = (rawgkallgw.apppoint)\n",
        "rawgkallgw['xPallgw'] = ((rawgkallgw.xCSP)+ (rawgkallgw.apppoint))\n",
        "rawgkallgw = rawgkallgw.drop(columns=[\n",
        " 'expected_goals',\n",
        "  'expected_assists',\n",
        " 'apppoint',\n",
        " 'assistvalue',\n",
        "  'xGA',\n",
        "])\n",
        "rawdefallgw= rawdfcs.query('pos==\"D\"')\n",
        "rawdefallgw['xPallgw'] = (rawdefallgw.expected_goals * 6/11)+(rawdefallgw.expected_assists * 3/11) +(rawdefallgw.xCSP)+ (rawdefallgw.apppoint)\n",
        "#rawdefallgw['xPallgw'] = (rawdefallgw.expected_goals * 6/3)+(rawdefallgw.expected_assists * 3/3) + (rawdefallgw.apppoint)\n",
        "rawdefallgw = rawdefallgw.drop(columns=[\n",
        " 'expected_goals',\n",
        " 'expected_assists',\n",
        " 'apppoint',\n",
        " 'assistvalue',\n",
        "  'xGA',])\n",
        "rawallplayersallgw = pd.concat([rawfwdallgw, rawmdallgw, rawdefallgw, rawgkallgw], ignore_index=True)\n",
        "rawallplayersallgw\n",
        "\n",
        "\n",
        "\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 875
        },
        "id": "xxPTwE3TZZC0",
        "outputId": "a12f7765-9f8d-44a0-9b34-0d4570a83158"
      },
      "execution_count": 27,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "<ipython-input-27-1274cdb95b47>:6: SettingWithCopyWarning: \n",
            "A value is trying to be set on a copy of a slice from a DataFrame.\n",
            "Try using .loc[row_indexer,col_indexer] = value instead\n",
            "\n",
            "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
            "  rawfwdallgw['xPallgw'] = ((rawfwdallgw.expected_goals * 4/11)+(rawfwdallgw.expected_assists * 3/11) + (rawfwdallgw.apppoint))\n",
            "<ipython-input-27-1274cdb95b47>:14: SettingWithCopyWarning: \n",
            "A value is trying to be set on a copy of a slice from a DataFrame.\n",
            "Try using .loc[row_indexer,col_indexer] = value instead\n",
            "\n",
            "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
            "  rawmdallgw['xPallgw'] = ((rawmdallgw.expected_goals * 5/11)+(rawmdallgw.expected_assists * 3/11) + (rawmdallgw.apppoint))\n",
            "<ipython-input-27-1274cdb95b47>:46: FutureWarning: The default value of regex will change from True to False in a future version.\n",
            "  epltabledef['Squad'] = epltabledef['Squad'].str.replace(r\"[\\\"\\',]\", '')\n",
            "<ipython-input-27-1274cdb95b47>:56: SettingWithCopyWarning: \n",
            "A value is trying to be set on a copy of a slice from a DataFrame.\n",
            "Try using .loc[row_indexer,col_indexer] = value instead\n",
            "\n",
            "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
            "  rawgkallgw['xPallgw'] = ((rawgkallgw.xCSP)+ (rawgkallgw.apppoint))\n",
            "<ipython-input-27-1274cdb95b47>:65: SettingWithCopyWarning: \n",
            "A value is trying to be set on a copy of a slice from a DataFrame.\n",
            "Try using .loc[row_indexer,col_indexer] = value instead\n",
            "\n",
            "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
            "  rawdefallgw['xPallgw'] = (rawdefallgw.expected_goals * 6/11)+(rawdefallgw.expected_assists * 3/11) +(rawdefallgw.xCSP)+ (rawdefallgw.apppoint)\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "      id                     team pos     name  cost  selected_by_percent  \\\n",
              "0      1                  Arsenal   F  Balogun   4.4                  0.2   \n",
              "1      8                  Arsenal   F  G.Jesus   7.8                  2.0   \n",
              "2     13                  Arsenal   F  Nketiah   5.7                 10.5   \n",
              "3     39              Aston Villa   F    Davis   4.9                  0.1   \n",
              "4     44              Aston Villa   F    Duran   5.0                  0.2   \n",
              "..   ...                      ...  ..      ...   ...                  ...   \n",
              "728  647                 West Ham   G    Anang   4.0                  0.1   \n",
              "729  546  Wolverhampton Wanderers   G  Bentley   3.9                  0.5   \n",
              "730  564  Wolverhampton Wanderers   G     King   4.0                  0.7   \n",
              "731  569  Wolverhampton Wanderers   G  José Sá   5.0                  1.6   \n",
              "732  571  Wolverhampton Wanderers   G   Šarkić   4.0                  0.3   \n",
              "\n",
              "     goals_scored  assists  bps  ict_index  points  points_per_game  minutes  \\\n",
              "0               0        0    0        0.0       0              0.0        0   \n",
              "1               1        1   51       26.9      18              2.6      362   \n",
              "2               5        2  157       53.4      49              4.5      757   \n",
              "3               0        0    0        0.0       0              0.0        0   \n",
              "4               2        0   55       13.7      15              2.5       68   \n",
              "..            ...      ...  ...        ...     ...              ...      ...   \n",
              "728             0        0    0        0.0       0              0.0        0   \n",
              "729             0        0    0        0.0       0              0.0        0   \n",
              "730             0        0    0        0.0       0              0.0        0   \n",
              "731             0        0  195       30.7      34              3.1      990   \n",
              "732             0        0    0        0.0       0              0.0        0   \n",
              "\n",
              "     home_adjustment   xPallgw      xCSP  \n",
              "0           1.166179  2.000000       NaN  \n",
              "1           1.166179  2.703636       NaN  \n",
              "2           1.166179  3.226364       NaN  \n",
              "3           1.101978  2.000000       NaN  \n",
              "4           1.101978  2.268182       NaN  \n",
              "..               ...       ...       ...  \n",
              "728         0.988306 -1.490909 -3.490909  \n",
              "729         0.820717 -0.836364 -2.836364  \n",
              "730         0.820717 -0.836364 -2.836364  \n",
              "731         0.820717 -0.836364 -2.836364  \n",
              "732         0.820717 -0.836364 -2.836364  \n",
              "\n",
              "[733 rows x 16 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-c429fc5f-ad1f-47fd-aeb6-f3387f3b8815\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>team</th>\n",
              "      <th>pos</th>\n",
              "      <th>name</th>\n",
              "      <th>cost</th>\n",
              "      <th>selected_by_percent</th>\n",
              "      <th>goals_scored</th>\n",
              "      <th>assists</th>\n",
              "      <th>bps</th>\n",
              "      <th>ict_index</th>\n",
              "      <th>points</th>\n",
              "      <th>points_per_game</th>\n",
              "      <th>minutes</th>\n",
              "      <th>home_adjustment</th>\n",
              "      <th>xPallgw</th>\n",
              "      <th>xCSP</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>1</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>F</td>\n",
              "      <td>Balogun</td>\n",
              "      <td>4.4</td>\n",
              "      <td>0.2</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>1.166179</td>\n",
              "      <td>2.000000</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>8</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>F</td>\n",
              "      <td>G.Jesus</td>\n",
              "      <td>7.8</td>\n",
              "      <td>2.0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>51</td>\n",
              "      <td>26.9</td>\n",
              "      <td>18</td>\n",
              "      <td>2.6</td>\n",
              "      <td>362</td>\n",
              "      <td>1.166179</td>\n",
              "      <td>2.703636</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>13</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>F</td>\n",
              "      <td>Nketiah</td>\n",
              "      <td>5.7</td>\n",
              "      <td>10.5</td>\n",
              "      <td>5</td>\n",
              "      <td>2</td>\n",
              "      <td>157</td>\n",
              "      <td>53.4</td>\n",
              "      <td>49</td>\n",
              "      <td>4.5</td>\n",
              "      <td>757</td>\n",
              "      <td>1.166179</td>\n",
              "      <td>3.226364</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>39</td>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>F</td>\n",
              "      <td>Davis</td>\n",
              "      <td>4.9</td>\n",
              "      <td>0.1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>1.101978</td>\n",
              "      <td>2.000000</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>44</td>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>F</td>\n",
              "      <td>Duran</td>\n",
              "      <td>5.0</td>\n",
              "      <td>0.2</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>55</td>\n",
              "      <td>13.7</td>\n",
              "      <td>15</td>\n",
              "      <td>2.5</td>\n",
              "      <td>68</td>\n",
              "      <td>1.101978</td>\n",
              "      <td>2.268182</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>728</th>\n",
              "      <td>647</td>\n",
              "      <td>West Ham</td>\n",
              "      <td>G</td>\n",
              "      <td>Anang</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.988306</td>\n",
              "      <td>-1.490909</td>\n",
              "      <td>-3.490909</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>729</th>\n",
              "      <td>546</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>G</td>\n",
              "      <td>Bentley</td>\n",
              "      <td>3.9</td>\n",
              "      <td>0.5</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.820717</td>\n",
              "      <td>-0.836364</td>\n",
              "      <td>-2.836364</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>730</th>\n",
              "      <td>564</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>G</td>\n",
              "      <td>King</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.7</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.820717</td>\n",
              "      <td>-0.836364</td>\n",
              "      <td>-2.836364</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>731</th>\n",
              "      <td>569</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>G</td>\n",
              "      <td>José Sá</td>\n",
              "      <td>5.0</td>\n",
              "      <td>1.6</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>195</td>\n",
              "      <td>30.7</td>\n",
              "      <td>34</td>\n",
              "      <td>3.1</td>\n",
              "      <td>990</td>\n",
              "      <td>0.820717</td>\n",
              "      <td>-0.836364</td>\n",
              "      <td>-2.836364</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>732</th>\n",
              "      <td>571</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>G</td>\n",
              "      <td>Šarkić</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.3</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.820717</td>\n",
              "      <td>-0.836364</td>\n",
              "      <td>-2.836364</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>733 rows × 16 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-c429fc5f-ad1f-47fd-aeb6-f3387f3b8815')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-c429fc5f-ad1f-47fd-aeb6-f3387f3b8815 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-c429fc5f-ad1f-47fd-aeb6-f3387f3b8815');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-78d279f6-c005-4fa4-8bd4-ba5fb091bf20\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-78d279f6-c005-4fa4-8bd4-ba5fb091bf20')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-78d279f6-c005-4fa4-8bd4-ba5fb091bf20 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 27
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "rawmdallgw"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 424
        },
        "id": "ZtNrmQMhefCc",
        "outputId": "3eb2366f-f76c-4c6f-b781-be5d51ebeee3"
      },
      "execution_count": 28,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "      id                     team pos             name  cost  \\\n",
              "2      3                  Arsenal   M         M.Elneny   4.4   \n",
              "3      4                  Arsenal   M     Fábio Vieira   5.4   \n",
              "5      6                  Arsenal   M          Havertz   7.1   \n",
              "7      9                  Arsenal   M         Jorginho   5.3   \n",
              "9     11                  Arsenal   M       Marquinhos   4.5   \n",
              "..   ...                      ...  ..              ...   ...   \n",
              "720  568  Wolverhampton Wanderers   M          Podence   5.3   \n",
              "722  570  Wolverhampton Wanderers   M          Sarabia   4.8   \n",
              "726  574  Wolverhampton Wanderers   M  Boubacar Traore   4.4   \n",
              "730  698  Wolverhampton Wanderers   M         González   5.0   \n",
              "732  715  Wolverhampton Wanderers   M       Bellegarde   4.9   \n",
              "\n",
              "     selected_by_percent  goals_scored  assists  bps  ict_index  points  \\\n",
              "2                    0.1             0        1   12        0.4       4   \n",
              "3                    0.1             1        3   69       21.9      23   \n",
              "5                    1.5             1        1   64       33.9      24   \n",
              "7                    0.2             0        0   47        9.7      11   \n",
              "9                    0.0             0        0    0        0.0       0   \n",
              "..                   ...           ...      ...  ...        ...     ...   \n",
              "720                  0.0             0        0    0        0.0       0   \n",
              "722                  0.1             0        1   31       21.2       9   \n",
              "726                  0.5             0        0   39        6.9       8   \n",
              "730                  0.0             0        0    0        0.0       0   \n",
              "732                  0.0             1        0   21       10.5       7   \n",
              "\n",
              "     points_per_game  minutes  home_adjustment   xPallgw  \n",
              "2                4.0        1         1.166179  2.000000  \n",
              "3                3.3      213         1.166179  2.640909  \n",
              "5                2.2      653         1.166179  3.056364  \n",
              "7                1.4      291         1.166179  2.109091  \n",
              "9                0.0        0         1.166179  2.000000  \n",
              "..               ...      ...              ...       ...  \n",
              "720              0.0        0         0.820717  2.000000  \n",
              "722              1.8      187         0.820717  2.409091  \n",
              "726              1.0      254         0.820717  2.056364  \n",
              "730              0.0        0         0.820717  2.000000  \n",
              "732              2.3      143         0.820717  2.087273  \n",
              "\n",
              "[315 rows x 15 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-e4703f9c-2426-4c3e-b06b-25207bc6e9e2\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>team</th>\n",
              "      <th>pos</th>\n",
              "      <th>name</th>\n",
              "      <th>cost</th>\n",
              "      <th>selected_by_percent</th>\n",
              "      <th>goals_scored</th>\n",
              "      <th>assists</th>\n",
              "      <th>bps</th>\n",
              "      <th>ict_index</th>\n",
              "      <th>points</th>\n",
              "      <th>points_per_game</th>\n",
              "      <th>minutes</th>\n",
              "      <th>home_adjustment</th>\n",
              "      <th>xPallgw</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>3</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>M</td>\n",
              "      <td>M.Elneny</td>\n",
              "      <td>4.4</td>\n",
              "      <td>0.1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>12</td>\n",
              "      <td>0.4</td>\n",
              "      <td>4</td>\n",
              "      <td>4.0</td>\n",
              "      <td>1</td>\n",
              "      <td>1.166179</td>\n",
              "      <td>2.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>4</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>M</td>\n",
              "      <td>Fábio Vieira</td>\n",
              "      <td>5.4</td>\n",
              "      <td>0.1</td>\n",
              "      <td>1</td>\n",
              "      <td>3</td>\n",
              "      <td>69</td>\n",
              "      <td>21.9</td>\n",
              "      <td>23</td>\n",
              "      <td>3.3</td>\n",
              "      <td>213</td>\n",
              "      <td>1.166179</td>\n",
              "      <td>2.640909</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>6</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>M</td>\n",
              "      <td>Havertz</td>\n",
              "      <td>7.1</td>\n",
              "      <td>1.5</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>64</td>\n",
              "      <td>33.9</td>\n",
              "      <td>24</td>\n",
              "      <td>2.2</td>\n",
              "      <td>653</td>\n",
              "      <td>1.166179</td>\n",
              "      <td>3.056364</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>9</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>M</td>\n",
              "      <td>Jorginho</td>\n",
              "      <td>5.3</td>\n",
              "      <td>0.2</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>47</td>\n",
              "      <td>9.7</td>\n",
              "      <td>11</td>\n",
              "      <td>1.4</td>\n",
              "      <td>291</td>\n",
              "      <td>1.166179</td>\n",
              "      <td>2.109091</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>11</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>M</td>\n",
              "      <td>Marquinhos</td>\n",
              "      <td>4.5</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>1.166179</td>\n",
              "      <td>2.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>720</th>\n",
              "      <td>568</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>M</td>\n",
              "      <td>Podence</td>\n",
              "      <td>5.3</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.820717</td>\n",
              "      <td>2.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>722</th>\n",
              "      <td>570</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>M</td>\n",
              "      <td>Sarabia</td>\n",
              "      <td>4.8</td>\n",
              "      <td>0.1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>31</td>\n",
              "      <td>21.2</td>\n",
              "      <td>9</td>\n",
              "      <td>1.8</td>\n",
              "      <td>187</td>\n",
              "      <td>0.820717</td>\n",
              "      <td>2.409091</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>726</th>\n",
              "      <td>574</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>M</td>\n",
              "      <td>Boubacar Traore</td>\n",
              "      <td>4.4</td>\n",
              "      <td>0.5</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>39</td>\n",
              "      <td>6.9</td>\n",
              "      <td>8</td>\n",
              "      <td>1.0</td>\n",
              "      <td>254</td>\n",
              "      <td>0.820717</td>\n",
              "      <td>2.056364</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>730</th>\n",
              "      <td>698</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>M</td>\n",
              "      <td>González</td>\n",
              "      <td>5.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.820717</td>\n",
              "      <td>2.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>732</th>\n",
              "      <td>715</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>M</td>\n",
              "      <td>Bellegarde</td>\n",
              "      <td>4.9</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>21</td>\n",
              "      <td>10.5</td>\n",
              "      <td>7</td>\n",
              "      <td>2.3</td>\n",
              "      <td>143</td>\n",
              "      <td>0.820717</td>\n",
              "      <td>2.087273</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>315 rows × 15 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-e4703f9c-2426-4c3e-b06b-25207bc6e9e2')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-e4703f9c-2426-4c3e-b06b-25207bc6e9e2 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-e4703f9c-2426-4c3e-b06b-25207bc6e9e2');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-1143f16b-aa5f-43d8-9b83-fb43d77d18ca\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-1143f16b-aa5f-43d8-9b83-fb43d77d18ca')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-1143f16b-aa5f-43d8-9b83-fb43d77d18ca button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 28
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "gw2blanks = [['Burnley', 0], ['Luton Town', 0]]\n",
        "\n",
        "# Create the pandas DataFrame\n",
        "blanks2 = pd.DataFrame(gw2blanks, columns=['team', 'gw2adjustment'])\n",
        "blanks2"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 112
        },
        "id": "xkGffHD0iXWI",
        "outputId": "0e4abdd2-8c4f-454b-9ca5-e25617816e53"
      },
      "execution_count": 29,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "         team  gw2adjustment\n",
              "0     Burnley              0\n",
              "1  Luton Town              0"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-b99c3d1d-61a1-4c7a-8090-48f221941cc1\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>team</th>\n",
              "      <th>gw2adjustment</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>Burnley</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Luton Town</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-b99c3d1d-61a1-4c7a-8090-48f221941cc1')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-b99c3d1d-61a1-4c7a-8090-48f221941cc1 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-b99c3d1d-61a1-4c7a-8090-48f221941cc1');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-35deae92-aa82-4fcf-8dce-6b1ca99a3f83\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-35deae92-aa82-4fcf-8dce-6b1ca99a3f83')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-35deae92-aa82-4fcf-8dce-6b1ca99a3f83 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 29
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#gw2adjustments = pd.concat([gw2adjustments, blanks2])\n",
        "#gw2adjustments = gw2adjustments.reset_index(drop=True)\n",
        "#gw2adjustments"
      ],
      "metadata": {
        "id": "JNr3eV5Rir58"
      },
      "execution_count": 30,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "##gw3blanks = [['Newcastle United', 0], ['Manchester United', 0], ['Brentford', 0], ['Brighton', 0]]\n",
        "\n",
        "# Create the pandas DataFrame\n",
        "##blanks = pd.DataFrame(gw3blanks, columns=['team', 'gw3adjustment'])\n",
        "##blanks"
      ],
      "metadata": {
        "id": "iCizQgwMD84B"
      },
      "execution_count": 31,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "gw14 = homesawayspi.query('Event==\"9.0\"')\n",
        "pd.options.mode.chained_assignment = None  # default='warn'\n",
        "PLSPI = spi.query('league==\"Barclays Premier League\"')\n",
        "PLSPI['League Average']  = PLSPI[\"spi\"].mean()\n",
        "laverage = PLSPI[\"spi\"].mean()\n",
        "PLSPI['League Average'].astype(int)\n",
        "gw14['League_Average']  = laverage\n",
        "gw14.rename(columns = {'Home SPI':'HomeSPI', 'Away SPI':'AwaySPI'}, inplace = True)\n",
        "gw14['home_difference'] = gw14.HomeSPI - gw14.League_Average\n",
        "gw14['away_difference'] = gw14.AwaySPI - gw14.League_Average\n",
        "gw14['home_adjustment'] = (gw14.home_difference - gw14.away_difference + gw14.League_Average)/gw14.League_Average\n",
        "gw14['away_adjustment'] = (gw14.away_difference - gw14.home_difference+ gw14.League_Average)/gw14.League_Average\n",
        "gw14adjustments = gw14[['team_h', 'home_adjustment']].append(gw14[['team_a','away_adjustment']].set_axis(['team_h', 'home_adjustment'], axis=1)).reset_index(drop=True)\n",
        "gw14adjustments.rename(columns = {'team_h':'team'}, inplace = True)\n",
        "gw14adjustments.rename(columns = {'home_adjustment':'gw14adjustment'}, inplace = True)\n",
        "gw14adjustments"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 711
        },
        "id": "pzyah3Z-kgct",
        "outputId": "729c810d-9e98-4039-b158-adb292ccf33a"
      },
      "execution_count": 32,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "<ipython-input-32-4bf6cc4f8260>:13: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  gw14adjustments = gw14[['team_h', 'home_adjustment']].append(gw14[['team_a','away_adjustment']].set_axis(['team_h', 'home_adjustment'], axis=1)).reset_index(drop=True)\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                       team  gw14adjustment\n",
              "0                 Liverpool        1.282095\n",
              "1               Bournemouth        1.007226\n",
              "2                 Brentford        1.197328\n",
              "3           Manchester City        1.154527\n",
              "4          Newcastle United        1.142298\n",
              "5         Nottingham Forest        1.009033\n",
              "6                   Chelsea        0.886884\n",
              "7          Sheffield United        0.687194\n",
              "8               Aston Villa        1.113672\n",
              "9                 Tottenham        1.054474\n",
              "10                  Everton        0.717905\n",
              "11  Wolverhampton Wanderers        0.992774\n",
              "12                  Burnley        0.802672\n",
              "13                 Brighton        0.845473\n",
              "14           Crystal Palace        0.857702\n",
              "15               Luton Town        0.990967\n",
              "16                  Arsenal        1.113116\n",
              "17        Manchester United        1.312806\n",
              "18                 West Ham        0.886328\n",
              "19                   Fulham        0.945526"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-908eb8b8-bb17-4c74-afe8-4185cb846f00\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>team</th>\n",
              "      <th>gw14adjustment</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>Liverpool</td>\n",
              "      <td>1.282095</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Bournemouth</td>\n",
              "      <td>1.007226</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>Brentford</td>\n",
              "      <td>1.197328</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>Manchester City</td>\n",
              "      <td>1.154527</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>Newcastle United</td>\n",
              "      <td>1.142298</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>Nottingham Forest</td>\n",
              "      <td>1.009033</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>Chelsea</td>\n",
              "      <td>0.886884</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>Sheffield United</td>\n",
              "      <td>0.687194</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>1.113672</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>Tottenham</td>\n",
              "      <td>1.054474</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10</th>\n",
              "      <td>Everton</td>\n",
              "      <td>0.717905</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>11</th>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>0.992774</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>12</th>\n",
              "      <td>Burnley</td>\n",
              "      <td>0.802672</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>13</th>\n",
              "      <td>Brighton</td>\n",
              "      <td>0.845473</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>14</th>\n",
              "      <td>Crystal Palace</td>\n",
              "      <td>0.857702</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>15</th>\n",
              "      <td>Luton Town</td>\n",
              "      <td>0.990967</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>16</th>\n",
              "      <td>Arsenal</td>\n",
              "      <td>1.113116</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>17</th>\n",
              "      <td>Manchester United</td>\n",
              "      <td>1.312806</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>18</th>\n",
              "      <td>West Ham</td>\n",
              "      <td>0.886328</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>19</th>\n",
              "      <td>Fulham</td>\n",
              "      <td>0.945526</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-908eb8b8-bb17-4c74-afe8-4185cb846f00')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-908eb8b8-bb17-4c74-afe8-4185cb846f00 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-908eb8b8-bb17-4c74-afe8-4185cb846f00');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-aa2518f4-586b-49ce-ac38-d1f82b381cf0\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-aa2518f4-586b-49ce-ac38-d1f82b381cf0')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-aa2518f4-586b-49ce-ac38-d1f82b381cf0 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 32
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "gw16 = homesawayspi.query('Event==\"16.0\"')\n",
        "pd.options.mode.chained_assignment = None  # default='warn'\n",
        "PLSPI = spi.query('league==\"Barclays Premier League\"')\n",
        "PLSPI['League Average']  = PLSPI[\"spi\"].mean()\n",
        "laverage = PLSPI[\"spi\"].mean()\n",
        "PLSPI['League Average'].astype(int)\n",
        "gw16['League_Average']  = laverage\n",
        "gw16.rename(columns = {'Home SPI':'HomeSPI', 'Away SPI':'AwaySPI'}, inplace = True)\n",
        "gw16['home_difference'] = gw16.HomeSPI - gw16.League_Average\n",
        "gw16['away_difference'] = gw16.AwaySPI - gw16.League_Average\n",
        "gw16['home_adjustment'] = (gw16.home_difference - gw16.away_difference + gw16.League_Average)/gw16.League_Average\n",
        "gw16['away_adjustment'] = (gw16.away_difference - gw16.home_difference+ gw16.League_Average)/gw16.League_Average\n",
        "gw16adjustments = gw16[['team_h', 'home_adjustment']].append(gw16[['team_a','away_adjustment']].set_axis(['team_h', 'home_adjustment'], axis=1)).reset_index(drop=True)\n",
        "gw16adjustments.rename(columns = {'team_h':'team'}, inplace = True)\n",
        "gw16adjustments.rename(columns = {'home_adjustment':'gw16adjustment'}, inplace = True)\n",
        "gw16adjustments"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 711
        },
        "id": "7uE1H7R4Gems",
        "outputId": "fae853b5-ca63-46fb-d86e-26f842e8dcae"
      },
      "execution_count": 33,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "<ipython-input-33-8dce2bce55c2>:13: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  gw16adjustments = gw16[['team_h', 'home_adjustment']].append(gw16[['team_a','away_adjustment']].set_axis(['team_h', 'home_adjustment'], axis=1)).reset_index(drop=True)\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                       team  gw16adjustment\n",
              "0            Crystal Palace        0.854506\n",
              "1                  Brighton        1.249300\n",
              "2         Manchester United        1.270978\n",
              "3          Sheffield United        0.714153\n",
              "4   Wolverhampton Wanderers        1.040716\n",
              "5               Aston Villa        0.935799\n",
              "6                   Everton        0.831160\n",
              "7                    Fulham        0.959701\n",
              "8                Luton Town        0.492506\n",
              "9                 Tottenham        0.839359\n",
              "10                Liverpool        1.145494\n",
              "11                  Burnley        0.750700\n",
              "12              Bournemouth        0.729022\n",
              "13                Brentford        1.285847\n",
              "14        Nottingham Forest        0.959284\n",
              "15                  Arsenal        1.064201\n",
              "16                  Chelsea        1.168840\n",
              "17                 West Ham        1.040299\n",
              "18          Manchester City        1.507494\n",
              "19         Newcastle United        1.160641"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-741f914f-b379-42a5-8418-9fadb5098e5e\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>team</th>\n",
              "      <th>gw16adjustment</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>Crystal Palace</td>\n",
              "      <td>0.854506</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Brighton</td>\n",
              "      <td>1.249300</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>Manchester United</td>\n",
              "      <td>1.270978</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>Sheffield United</td>\n",
              "      <td>0.714153</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>1.040716</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>0.935799</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>Everton</td>\n",
              "      <td>0.831160</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>Fulham</td>\n",
              "      <td>0.959701</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>Luton Town</td>\n",
              "      <td>0.492506</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>Tottenham</td>\n",
              "      <td>0.839359</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10</th>\n",
              "      <td>Liverpool</td>\n",
              "      <td>1.145494</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>11</th>\n",
              "      <td>Burnley</td>\n",
              "      <td>0.750700</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>12</th>\n",
              "      <td>Bournemouth</td>\n",
              "      <td>0.729022</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>13</th>\n",
              "      <td>Brentford</td>\n",
              "      <td>1.285847</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>14</th>\n",
              "      <td>Nottingham Forest</td>\n",
              "      <td>0.959284</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>15</th>\n",
              "      <td>Arsenal</td>\n",
              "      <td>1.064201</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>16</th>\n",
              "      <td>Chelsea</td>\n",
              "      <td>1.168840</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>17</th>\n",
              "      <td>West Ham</td>\n",
              "      <td>1.040299</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>18</th>\n",
              "      <td>Manchester City</td>\n",
              "      <td>1.507494</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>19</th>\n",
              "      <td>Newcastle United</td>\n",
              "      <td>1.160641</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-741f914f-b379-42a5-8418-9fadb5098e5e')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-741f914f-b379-42a5-8418-9fadb5098e5e button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-741f914f-b379-42a5-8418-9fadb5098e5e');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-73c2aaea-5ff7-4637-9ed2-024b81d58243\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-73c2aaea-5ff7-4637-9ed2-024b81d58243')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-73c2aaea-5ff7-4637-9ed2-024b81d58243 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 33
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#gw5blanks = [['Chelsea', 0], ['Manchester United', 0], ['Manchester City', 0], ['Brighton', 0]]\n",
        "\n",
        "# Create the pandas DataFrame\n",
        "#blanks32 = pd.DataFrame(gw5blanks, columns=['team', 'gw5adjustment'])\n",
        "#blanks32"
      ],
      "metadata": {
        "id": "p00QYlZ7UbAu"
      },
      "execution_count": 34,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "#gw5adjustments = pd.concat([gw5adjustments, blanks32])\n",
        "#gw5adjustments = gw5adjustments.reset_index(drop=True)\n",
        "#gw5adjustments"
      ],
      "metadata": {
        "id": "xh_AhxKJU0VW"
      },
      "execution_count": 35,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "gw15= homesawayspi.query('Event==\"15.0\"')\n",
        "pd.options.mode.chained_assignment = None  # default='warn'\n",
        "PLSPI = spi.query('league==\"Barclays Premier League\"')\n",
        "PLSPI['League Average']  = PLSPI[\"spi\"].mean()\n",
        "laverage = PLSPI[\"spi\"].mean()\n",
        "PLSPI['League Average'].astype(int)\n",
        "gw15['League_Average']  = laverage\n",
        "gw15.rename(columns = {'Home SPI':'HomeSPI', 'Away SPI':'AwaySPI'}, inplace = True)\n",
        "gw15['home_difference'] = gw15.HomeSPI - gw15.League_Average\n",
        "gw15['away_difference'] = gw15.AwaySPI - gw15.League_Average\n",
        "gw15['home_adjustment'] = (gw15.home_difference - gw15.away_difference + gw15.League_Average)/gw15.League_Average\n",
        "gw15['away_adjustment'] = (gw15.away_difference - gw15.home_difference+ gw15.League_Average)/gw15.League_Average\n",
        "gw15adjustments = gw15[['team_h', 'home_adjustment']].append(gw15[['team_a','away_adjustment']].set_axis(['team_h', 'home_adjustment'], axis=1)).reset_index(drop=True)\n",
        "gw15adjustments.rename(columns = {'team_h':'team'}, inplace = True)\n",
        "gw15adjustments.rename(columns = {'home_adjustment':'gw15adjustment'}, inplace = True)\n",
        "gw15adjustments"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 711
        },
        "id": "OPB6Pz8sGZNe",
        "outputId": "0b6bee81-1670-4078-a977-9a1c61a8e6d4"
      },
      "execution_count": 36,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "<ipython-input-36-d1ec8aa9b32e>:13: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  gw15adjustments = gw15[['team_h', 'home_adjustment']].append(gw15[['team_a','away_adjustment']].set_axis(['team_h', 'home_adjustment'], axis=1)).reset_index(drop=True)\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                       team  gw15adjustment\n",
              "0   Wolverhampton Wanderers        0.946082\n",
              "1                Luton Town        0.604789\n",
              "2                  Brighton        1.051972\n",
              "3            Crystal Palace        1.192881\n",
              "4                    Fulham        1.168007\n",
              "5          Sheffield United        0.619797\n",
              "6               Aston Villa        0.823517\n",
              "7         Manchester United        1.045858\n",
              "8                   Everton        0.721101\n",
              "9                 Tottenham        1.014174\n",
              "10                  Burnley        1.053918\n",
              "11                  Arsenal        1.395211\n",
              "12                Brentford        0.948028\n",
              "13              Bournemouth        0.807119\n",
              "14        Nottingham Forest        0.831993\n",
              "15                Liverpool        1.380203\n",
              "16          Manchester City        1.176483\n",
              "17                  Chelsea        0.954142\n",
              "18         Newcastle United        1.278899\n",
              "19                 West Ham        0.985826"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-747c6dbb-8e52-4540-9019-07216cccd6a8\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>team</th>\n",
              "      <th>gw15adjustment</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>0.946082</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Luton Town</td>\n",
              "      <td>0.604789</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>Brighton</td>\n",
              "      <td>1.051972</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>Crystal Palace</td>\n",
              "      <td>1.192881</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>Fulham</td>\n",
              "      <td>1.168007</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>Sheffield United</td>\n",
              "      <td>0.619797</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>0.823517</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>Manchester United</td>\n",
              "      <td>1.045858</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>Everton</td>\n",
              "      <td>0.721101</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>Tottenham</td>\n",
              "      <td>1.014174</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10</th>\n",
              "      <td>Burnley</td>\n",
              "      <td>1.053918</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>11</th>\n",
              "      <td>Arsenal</td>\n",
              "      <td>1.395211</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>12</th>\n",
              "      <td>Brentford</td>\n",
              "      <td>0.948028</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>13</th>\n",
              "      <td>Bournemouth</td>\n",
              "      <td>0.807119</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>14</th>\n",
              "      <td>Nottingham Forest</td>\n",
              "      <td>0.831993</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>15</th>\n",
              "      <td>Liverpool</td>\n",
              "      <td>1.380203</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>16</th>\n",
              "      <td>Manchester City</td>\n",
              "      <td>1.176483</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>17</th>\n",
              "      <td>Chelsea</td>\n",
              "      <td>0.954142</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>18</th>\n",
              "      <td>Newcastle United</td>\n",
              "      <td>1.278899</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>19</th>\n",
              "      <td>West Ham</td>\n",
              "      <td>0.985826</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-747c6dbb-8e52-4540-9019-07216cccd6a8')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-747c6dbb-8e52-4540-9019-07216cccd6a8 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-747c6dbb-8e52-4540-9019-07216cccd6a8');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-65b845d9-cad9-421c-a54d-bc8807dce21a\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-65b845d9-cad9-421c-a54d-bc8807dce21a')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-65b845d9-cad9-421c-a54d-bc8807dce21a button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 36
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "gw12= homesawayspi.query('Event==\"12.0\"')\n",
        "pd.options.mode.chained_assignment = None  # default='warn'\n",
        "PLSPI = spi.query('league==\"Barclays Premier League\"')\n",
        "PLSPI['League Average']  = PLSPI[\"spi\"].mean()\n",
        "laverage = PLSPI[\"spi\"].mean()\n",
        "PLSPI['League Average'].astype(int)\n",
        "gw12['League_Average']  = laverage\n",
        "gw12.rename(columns = {'Home SPI':'HomeSPI', 'Away SPI':'AwaySPI'}, inplace = True)\n",
        "gw12['home_difference'] = gw12.HomeSPI - gw12.League_Average\n",
        "gw12['away_difference'] = gw12.AwaySPI - gw12.League_Average\n",
        "gw12['home_adjustment'] = (gw12.home_difference - gw12.away_difference + gw12.League_Average)/gw12.League_Average\n",
        "gw12['away_adjustment'] = (gw12.away_difference - gw12.home_difference+ gw12.League_Average)/gw12.League_Average\n",
        "gw12adjustments = gw12[['team_h', 'home_adjustment']].append(gw12[['team_a','away_adjustment']].set_axis(['team_h', 'home_adjustment'], axis=1)).reset_index(drop=True)\n",
        "gw12adjustments.rename(columns = {'team_h':'team'}, inplace = True)\n",
        "gw12adjustments.rename(columns = {'home_adjustment':'gw12adjustment'}, inplace = True)\n",
        "gw12adjustments = gw12adjustments.groupby('team', as_index=False)['gw12adjustment'].aggregate('sum')\n",
        "gw12adjustments"
      ],
      "metadata": {
        "id": "Ns7V93Gobs3z",
        "outputId": "96127625-0800-479f-dffb-ed961d666b57",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 711
        }
      },
      "execution_count": 37,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "<ipython-input-37-5536e8b69ad9>:13: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  gw12adjustments = gw12[['team_h', 'home_adjustment']].append(gw12[['team_a','away_adjustment']].set_axis(['team_h', 'home_adjustment'], axis=1)).reset_index(drop=True)\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                       team  gw12adjustment\n",
              "0                   Arsenal        1.291545\n",
              "1               Aston Villa        1.153971\n",
              "2               Bournemouth        0.664821\n",
              "3                 Brentford        0.905644\n",
              "4                  Brighton        1.337820\n",
              "5                   Burnley        0.708455\n",
              "6                   Chelsea        0.774602\n",
              "7            Crystal Palace        1.136601\n",
              "8                   Everton        0.863399\n",
              "9                    Fulham        0.846029\n",
              "10                Liverpool        1.094356\n",
              "11               Luton Town        0.672047\n",
              "12          Manchester City        1.225398\n",
              "13        Manchester United        1.327953\n",
              "14         Newcastle United        1.335179\n",
              "15        Nottingham Forest        0.791694\n",
              "16         Sheffield United        0.662180\n",
              "17                Tottenham        1.181764\n",
              "18                 West Ham        1.208306\n",
              "19  Wolverhampton Wanderers        0.818236"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-20b81a7c-6ca4-46ac-82ea-a12711066f2d\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>team</th>\n",
              "      <th>gw12adjustment</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>Arsenal</td>\n",
              "      <td>1.291545</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>1.153971</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>Bournemouth</td>\n",
              "      <td>0.664821</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>Brentford</td>\n",
              "      <td>0.905644</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>Brighton</td>\n",
              "      <td>1.337820</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>Burnley</td>\n",
              "      <td>0.708455</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>Chelsea</td>\n",
              "      <td>0.774602</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>Crystal Palace</td>\n",
              "      <td>1.136601</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>Everton</td>\n",
              "      <td>0.863399</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>Fulham</td>\n",
              "      <td>0.846029</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10</th>\n",
              "      <td>Liverpool</td>\n",
              "      <td>1.094356</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>11</th>\n",
              "      <td>Luton Town</td>\n",
              "      <td>0.672047</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>12</th>\n",
              "      <td>Manchester City</td>\n",
              "      <td>1.225398</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>13</th>\n",
              "      <td>Manchester United</td>\n",
              "      <td>1.327953</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>14</th>\n",
              "      <td>Newcastle United</td>\n",
              "      <td>1.335179</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>15</th>\n",
              "      <td>Nottingham Forest</td>\n",
              "      <td>0.791694</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>16</th>\n",
              "      <td>Sheffield United</td>\n",
              "      <td>0.662180</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>17</th>\n",
              "      <td>Tottenham</td>\n",
              "      <td>1.181764</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>18</th>\n",
              "      <td>West Ham</td>\n",
              "      <td>1.208306</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>19</th>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>0.818236</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-20b81a7c-6ca4-46ac-82ea-a12711066f2d')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-20b81a7c-6ca4-46ac-82ea-a12711066f2d button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-20b81a7c-6ca4-46ac-82ea-a12711066f2d');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-80cfad4b-73b0-45e3-9fc5-cb8adae7158f\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-80cfad4b-73b0-45e3-9fc5-cb8adae7158f')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-80cfad4b-73b0-45e3-9fc5-cb8adae7158f button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 37
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "gw13= homesawayspi.query('Event==\"13.0\"')\n",
        "pd.options.mode.chained_assignment = None  # default='warn'\n",
        "PLSPI = spi.query('league==\"Barclays Premier League\"')\n",
        "PLSPI['League Average']  = PLSPI[\"spi\"].mean()\n",
        "laverage = PLSPI[\"spi\"].mean()\n",
        "PLSPI['League Average'].astype(int)\n",
        "gw13['League_Average']  = laverage\n",
        "gw13.rename(columns = {'Home SPI':'HomeSPI', 'Away SPI':'AwaySPI'}, inplace = True)\n",
        "gw13['home_difference'] = gw13.HomeSPI - gw13.League_Average\n",
        "gw13['away_difference'] = gw13.AwaySPI - gw13.League_Average\n",
        "gw13['home_adjustment'] = (gw13.home_difference - gw13.away_difference + gw13.League_Average)/gw13.League_Average\n",
        "gw13['away_adjustment'] = (gw13.away_difference - gw13.home_difference+ gw13.League_Average)/gw13.League_Average\n",
        "gw13adjustments = gw13[['team_h', 'home_adjustment']].append(gw13[['team_a','away_adjustment']].set_axis(['team_h', 'home_adjustment'], axis=1)).reset_index(drop=True)\n",
        "gw13adjustments.rename(columns = {'team_h':'team'}, inplace = True)\n",
        "gw13adjustments.rename(columns = {'home_adjustment':'gw13adjustment'}, inplace = True)\n",
        "gw13adjustments"
      ],
      "metadata": {
        "id": "wlvV4OeQb34Z",
        "outputId": "18eb4603-b4d0-42ce-a254-9c6e83b6caf2",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 711
        }
      },
      "execution_count": 38,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "<ipython-input-38-838c34b652d9>:13: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  gw13adjustments = gw13[['team_h', 'home_adjustment']].append(gw13[['team_a','away_adjustment']].set_axis(['team_h', 'home_adjustment'], axis=1)).reset_index(drop=True)\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                       team  gw13adjustment\n",
              "0           Manchester City        1.112143\n",
              "1                   Burnley        0.886328\n",
              "2                Luton Town        0.750144\n",
              "3          Newcastle United        1.110059\n",
              "4         Nottingham Forest        0.656066\n",
              "5          Sheffield United        0.958172\n",
              "6                 Brentford        0.905783\n",
              "7                 Tottenham        0.900502\n",
              "8                   Everton        0.785302\n",
              "9                    Fulham        1.127290\n",
              "10                Liverpool        0.887857\n",
              "11                 West Ham        1.113672\n",
              "12           Crystal Palace        1.249856\n",
              "13                  Chelsea        0.889941\n",
              "14                 Brighton        1.343934\n",
              "15              Bournemouth        1.041828\n",
              "16                  Arsenal        1.094217\n",
              "17              Aston Villa        1.099498\n",
              "18        Manchester United        1.214698\n",
              "19  Wolverhampton Wanderers        0.872710"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-c41fec17-26b9-4ad4-93d6-032f740802cf\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>team</th>\n",
              "      <th>gw13adjustment</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>Manchester City</td>\n",
              "      <td>1.112143</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Burnley</td>\n",
              "      <td>0.886328</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>Luton Town</td>\n",
              "      <td>0.750144</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>Newcastle United</td>\n",
              "      <td>1.110059</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>Nottingham Forest</td>\n",
              "      <td>0.656066</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>Sheffield United</td>\n",
              "      <td>0.958172</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>Brentford</td>\n",
              "      <td>0.905783</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>Tottenham</td>\n",
              "      <td>0.900502</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>Everton</td>\n",
              "      <td>0.785302</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>Fulham</td>\n",
              "      <td>1.127290</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10</th>\n",
              "      <td>Liverpool</td>\n",
              "      <td>0.887857</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>11</th>\n",
              "      <td>West Ham</td>\n",
              "      <td>1.113672</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>12</th>\n",
              "      <td>Crystal Palace</td>\n",
              "      <td>1.249856</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>13</th>\n",
              "      <td>Chelsea</td>\n",
              "      <td>0.889941</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>14</th>\n",
              "      <td>Brighton</td>\n",
              "      <td>1.343934</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>15</th>\n",
              "      <td>Bournemouth</td>\n",
              "      <td>1.041828</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>16</th>\n",
              "      <td>Arsenal</td>\n",
              "      <td>1.094217</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>17</th>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>1.099498</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>18</th>\n",
              "      <td>Manchester United</td>\n",
              "      <td>1.214698</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>19</th>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>0.872710</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-c41fec17-26b9-4ad4-93d6-032f740802cf')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-c41fec17-26b9-4ad4-93d6-032f740802cf button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-c41fec17-26b9-4ad4-93d6-032f740802cf');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-455e1f8d-4eeb-4f0c-9cda-003e087c5235\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-455e1f8d-4eeb-4f0c-9cda-003e087c5235')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-455e1f8d-4eeb-4f0c-9cda-003e087c5235 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 38
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "gwadjustments1216 = pd.merge(gw12adjustments,gw13adjustments, on ='team')\n",
        "gwadjustments1216 = pd.merge(gwadjustments1216,gw14adjustments, on ='team')\n",
        "gwadjustments1216 = pd.merge(gwadjustments1216,gw15adjustments, on ='team')\n",
        "gwadjustments1216 = pd.merge(gwadjustments1216,gw16adjustments, on ='team')\n",
        "gwadjustments1216"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 677
        },
        "id": "P6_WVsnNkztJ",
        "outputId": "cd3782d9-5cbe-4778-f905-cd3c1c5ee1ce"
      },
      "execution_count": 39,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                       team  gw12adjustment  gw13adjustment  gw14adjustment  \\\n",
              "0                   Arsenal        1.291545        1.094217        1.113116   \n",
              "1               Aston Villa        1.153971        1.099498        1.113672   \n",
              "2               Bournemouth        0.664821        1.041828        1.007226   \n",
              "3                 Brentford        0.905644        0.905783        1.197328   \n",
              "4                  Brighton        1.337820        1.343934        0.845473   \n",
              "5                   Burnley        0.708455        0.886328        0.802672   \n",
              "6                   Chelsea        0.774602        0.889941        0.886884   \n",
              "7            Crystal Palace        1.136601        1.249856        0.857702   \n",
              "8                   Everton        0.863399        0.785302        0.717905   \n",
              "9                    Fulham        0.846029        1.127290        0.945526   \n",
              "10                Liverpool        1.094356        0.887857        1.282095   \n",
              "11               Luton Town        0.672047        0.750144        0.990967   \n",
              "12          Manchester City        1.225398        1.112143        1.154527   \n",
              "13        Manchester United        1.327953        1.214698        1.312806   \n",
              "14         Newcastle United        1.335179        1.110059        1.142298   \n",
              "15        Nottingham Forest        0.791694        0.656066        1.009033   \n",
              "16         Sheffield United        0.662180        0.958172        0.687194   \n",
              "17                Tottenham        1.181764        0.900502        1.054474   \n",
              "18                 West Ham        1.208306        1.113672        0.886328   \n",
              "19  Wolverhampton Wanderers        0.818236        0.872710        0.992774   \n",
              "\n",
              "    gw15adjustment  gw16adjustment  \n",
              "0         1.395211        1.064201  \n",
              "1         0.823517        0.935799  \n",
              "2         0.807119        0.729022  \n",
              "3         0.948028        1.285847  \n",
              "4         1.051972        1.249300  \n",
              "5         1.053918        0.750700  \n",
              "6         0.954142        1.168840  \n",
              "7         1.192881        0.854506  \n",
              "8         0.721101        0.831160  \n",
              "9         1.168007        0.959701  \n",
              "10        1.380203        1.145494  \n",
              "11        0.604789        0.492506  \n",
              "12        1.176483        1.507494  \n",
              "13        1.045858        1.270978  \n",
              "14        1.278899        1.160641  \n",
              "15        0.831993        0.959284  \n",
              "16        0.619797        0.714153  \n",
              "17        1.014174        0.839359  \n",
              "18        0.985826        1.040299  \n",
              "19        0.946082        1.040716  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-8a3e1465-4752-4029-86ce-943ecedb9ec4\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>team</th>\n",
              "      <th>gw12adjustment</th>\n",
              "      <th>gw13adjustment</th>\n",
              "      <th>gw14adjustment</th>\n",
              "      <th>gw15adjustment</th>\n",
              "      <th>gw16adjustment</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>Arsenal</td>\n",
              "      <td>1.291545</td>\n",
              "      <td>1.094217</td>\n",
              "      <td>1.113116</td>\n",
              "      <td>1.395211</td>\n",
              "      <td>1.064201</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>1.153971</td>\n",
              "      <td>1.099498</td>\n",
              "      <td>1.113672</td>\n",
              "      <td>0.823517</td>\n",
              "      <td>0.935799</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>Bournemouth</td>\n",
              "      <td>0.664821</td>\n",
              "      <td>1.041828</td>\n",
              "      <td>1.007226</td>\n",
              "      <td>0.807119</td>\n",
              "      <td>0.729022</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>Brentford</td>\n",
              "      <td>0.905644</td>\n",
              "      <td>0.905783</td>\n",
              "      <td>1.197328</td>\n",
              "      <td>0.948028</td>\n",
              "      <td>1.285847</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>Brighton</td>\n",
              "      <td>1.337820</td>\n",
              "      <td>1.343934</td>\n",
              "      <td>0.845473</td>\n",
              "      <td>1.051972</td>\n",
              "      <td>1.249300</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>Burnley</td>\n",
              "      <td>0.708455</td>\n",
              "      <td>0.886328</td>\n",
              "      <td>0.802672</td>\n",
              "      <td>1.053918</td>\n",
              "      <td>0.750700</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>Chelsea</td>\n",
              "      <td>0.774602</td>\n",
              "      <td>0.889941</td>\n",
              "      <td>0.886884</td>\n",
              "      <td>0.954142</td>\n",
              "      <td>1.168840</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>Crystal Palace</td>\n",
              "      <td>1.136601</td>\n",
              "      <td>1.249856</td>\n",
              "      <td>0.857702</td>\n",
              "      <td>1.192881</td>\n",
              "      <td>0.854506</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>Everton</td>\n",
              "      <td>0.863399</td>\n",
              "      <td>0.785302</td>\n",
              "      <td>0.717905</td>\n",
              "      <td>0.721101</td>\n",
              "      <td>0.831160</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>Fulham</td>\n",
              "      <td>0.846029</td>\n",
              "      <td>1.127290</td>\n",
              "      <td>0.945526</td>\n",
              "      <td>1.168007</td>\n",
              "      <td>0.959701</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10</th>\n",
              "      <td>Liverpool</td>\n",
              "      <td>1.094356</td>\n",
              "      <td>0.887857</td>\n",
              "      <td>1.282095</td>\n",
              "      <td>1.380203</td>\n",
              "      <td>1.145494</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>11</th>\n",
              "      <td>Luton Town</td>\n",
              "      <td>0.672047</td>\n",
              "      <td>0.750144</td>\n",
              "      <td>0.990967</td>\n",
              "      <td>0.604789</td>\n",
              "      <td>0.492506</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>12</th>\n",
              "      <td>Manchester City</td>\n",
              "      <td>1.225398</td>\n",
              "      <td>1.112143</td>\n",
              "      <td>1.154527</td>\n",
              "      <td>1.176483</td>\n",
              "      <td>1.507494</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>13</th>\n",
              "      <td>Manchester United</td>\n",
              "      <td>1.327953</td>\n",
              "      <td>1.214698</td>\n",
              "      <td>1.312806</td>\n",
              "      <td>1.045858</td>\n",
              "      <td>1.270978</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>14</th>\n",
              "      <td>Newcastle United</td>\n",
              "      <td>1.335179</td>\n",
              "      <td>1.110059</td>\n",
              "      <td>1.142298</td>\n",
              "      <td>1.278899</td>\n",
              "      <td>1.160641</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>15</th>\n",
              "      <td>Nottingham Forest</td>\n",
              "      <td>0.791694</td>\n",
              "      <td>0.656066</td>\n",
              "      <td>1.009033</td>\n",
              "      <td>0.831993</td>\n",
              "      <td>0.959284</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>16</th>\n",
              "      <td>Sheffield United</td>\n",
              "      <td>0.662180</td>\n",
              "      <td>0.958172</td>\n",
              "      <td>0.687194</td>\n",
              "      <td>0.619797</td>\n",
              "      <td>0.714153</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>17</th>\n",
              "      <td>Tottenham</td>\n",
              "      <td>1.181764</td>\n",
              "      <td>0.900502</td>\n",
              "      <td>1.054474</td>\n",
              "      <td>1.014174</td>\n",
              "      <td>0.839359</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>18</th>\n",
              "      <td>West Ham</td>\n",
              "      <td>1.208306</td>\n",
              "      <td>1.113672</td>\n",
              "      <td>0.886328</td>\n",
              "      <td>0.985826</td>\n",
              "      <td>1.040299</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>19</th>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>0.818236</td>\n",
              "      <td>0.872710</td>\n",
              "      <td>0.992774</td>\n",
              "      <td>0.946082</td>\n",
              "      <td>1.040716</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-8a3e1465-4752-4029-86ce-943ecedb9ec4')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-8a3e1465-4752-4029-86ce-943ecedb9ec4 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-8a3e1465-4752-4029-86ce-943ecedb9ec4');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-e87a4aa2-c2f4-4589-be34-5cd474c82539\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-e87a4aa2-c2f4-4589-be34-5cd474c82539')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-e87a4aa2-c2f4-4589-be34-5cd474c82539 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 39
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "rawdfgw228x = pd.merge(rawallplayersallgw,\n",
        "                     gwadjustments1216,\n",
        "                     on ='team',\n",
        "                     how ='left')\n",
        "#rawdfgw228x.rename(columns = {'gw3adjustment_y':'gw3adjustment'}, inplace = True)\n",
        "rawdfgw228x = rawdfgw228x.round(1)\n",
        "rawdfgw228x"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 513
        },
        "id": "-b-0jux2PKIX",
        "outputId": "c2f41924-949f-4aa3-8d73-2c81fd074965"
      },
      "execution_count": 40,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "      id                     team pos     name  cost  selected_by_percent  \\\n",
              "0      1                  Arsenal   F  Balogun   4.4                  0.2   \n",
              "1      8                  Arsenal   F  G.Jesus   7.8                  2.0   \n",
              "2     13                  Arsenal   F  Nketiah   5.7                 10.5   \n",
              "3     39              Aston Villa   F    Davis   4.9                  0.1   \n",
              "4     44              Aston Villa   F    Duran   5.0                  0.2   \n",
              "..   ...                      ...  ..      ...   ...                  ...   \n",
              "728  647                 West Ham   G    Anang   4.0                  0.1   \n",
              "729  546  Wolverhampton Wanderers   G  Bentley   3.9                  0.5   \n",
              "730  564  Wolverhampton Wanderers   G     King   4.0                  0.7   \n",
              "731  569  Wolverhampton Wanderers   G  José Sá   5.0                  1.6   \n",
              "732  571  Wolverhampton Wanderers   G   Šarkić   4.0                  0.3   \n",
              "\n",
              "     goals_scored  assists  bps  ict_index  ...  points_per_game  minutes  \\\n",
              "0               0        0    0        0.0  ...              0.0        0   \n",
              "1               1        1   51       26.9  ...              2.6      362   \n",
              "2               5        2  157       53.4  ...              4.5      757   \n",
              "3               0        0    0        0.0  ...              0.0        0   \n",
              "4               2        0   55       13.7  ...              2.5       68   \n",
              "..            ...      ...  ...        ...  ...              ...      ...   \n",
              "728             0        0    0        0.0  ...              0.0        0   \n",
              "729             0        0    0        0.0  ...              0.0        0   \n",
              "730             0        0    0        0.0  ...              0.0        0   \n",
              "731             0        0  195       30.7  ...              3.1      990   \n",
              "732             0        0    0        0.0  ...              0.0        0   \n",
              "\n",
              "     home_adjustment  xPallgw  xCSP  gw12adjustment  gw13adjustment  \\\n",
              "0                1.2      2.0   NaN             1.3             1.1   \n",
              "1                1.2      2.7   NaN             1.3             1.1   \n",
              "2                1.2      3.2   NaN             1.3             1.1   \n",
              "3                1.1      2.0   NaN             1.2             1.1   \n",
              "4                1.1      2.3   NaN             1.2             1.1   \n",
              "..               ...      ...   ...             ...             ...   \n",
              "728              1.0     -1.5  -3.5             1.2             1.1   \n",
              "729              0.8     -0.8  -2.8             0.8             0.9   \n",
              "730              0.8     -0.8  -2.8             0.8             0.9   \n",
              "731              0.8     -0.8  -2.8             0.8             0.9   \n",
              "732              0.8     -0.8  -2.8             0.8             0.9   \n",
              "\n",
              "     gw14adjustment  gw15adjustment  gw16adjustment  \n",
              "0               1.1             1.4             1.1  \n",
              "1               1.1             1.4             1.1  \n",
              "2               1.1             1.4             1.1  \n",
              "3               1.1             0.8             0.9  \n",
              "4               1.1             0.8             0.9  \n",
              "..              ...             ...             ...  \n",
              "728             0.9             1.0             1.0  \n",
              "729             1.0             0.9             1.0  \n",
              "730             1.0             0.9             1.0  \n",
              "731             1.0             0.9             1.0  \n",
              "732             1.0             0.9             1.0  \n",
              "\n",
              "[733 rows x 21 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-40929446-15f3-40d9-8e8d-1d2a38a7f160\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>team</th>\n",
              "      <th>pos</th>\n",
              "      <th>name</th>\n",
              "      <th>cost</th>\n",
              "      <th>selected_by_percent</th>\n",
              "      <th>goals_scored</th>\n",
              "      <th>assists</th>\n",
              "      <th>bps</th>\n",
              "      <th>ict_index</th>\n",
              "      <th>...</th>\n",
              "      <th>points_per_game</th>\n",
              "      <th>minutes</th>\n",
              "      <th>home_adjustment</th>\n",
              "      <th>xPallgw</th>\n",
              "      <th>xCSP</th>\n",
              "      <th>gw12adjustment</th>\n",
              "      <th>gw13adjustment</th>\n",
              "      <th>gw14adjustment</th>\n",
              "      <th>gw15adjustment</th>\n",
              "      <th>gw16adjustment</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>1</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>F</td>\n",
              "      <td>Balogun</td>\n",
              "      <td>4.4</td>\n",
              "      <td>0.2</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>1.2</td>\n",
              "      <td>2.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1.3</td>\n",
              "      <td>1.1</td>\n",
              "      <td>1.1</td>\n",
              "      <td>1.4</td>\n",
              "      <td>1.1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>8</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>F</td>\n",
              "      <td>G.Jesus</td>\n",
              "      <td>7.8</td>\n",
              "      <td>2.0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>51</td>\n",
              "      <td>26.9</td>\n",
              "      <td>...</td>\n",
              "      <td>2.6</td>\n",
              "      <td>362</td>\n",
              "      <td>1.2</td>\n",
              "      <td>2.7</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1.3</td>\n",
              "      <td>1.1</td>\n",
              "      <td>1.1</td>\n",
              "      <td>1.4</td>\n",
              "      <td>1.1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>13</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>F</td>\n",
              "      <td>Nketiah</td>\n",
              "      <td>5.7</td>\n",
              "      <td>10.5</td>\n",
              "      <td>5</td>\n",
              "      <td>2</td>\n",
              "      <td>157</td>\n",
              "      <td>53.4</td>\n",
              "      <td>...</td>\n",
              "      <td>4.5</td>\n",
              "      <td>757</td>\n",
              "      <td>1.2</td>\n",
              "      <td>3.2</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1.3</td>\n",
              "      <td>1.1</td>\n",
              "      <td>1.1</td>\n",
              "      <td>1.4</td>\n",
              "      <td>1.1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>39</td>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>F</td>\n",
              "      <td>Davis</td>\n",
              "      <td>4.9</td>\n",
              "      <td>0.1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>1.1</td>\n",
              "      <td>2.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1.2</td>\n",
              "      <td>1.1</td>\n",
              "      <td>1.1</td>\n",
              "      <td>0.8</td>\n",
              "      <td>0.9</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>44</td>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>F</td>\n",
              "      <td>Duran</td>\n",
              "      <td>5.0</td>\n",
              "      <td>0.2</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>55</td>\n",
              "      <td>13.7</td>\n",
              "      <td>...</td>\n",
              "      <td>2.5</td>\n",
              "      <td>68</td>\n",
              "      <td>1.1</td>\n",
              "      <td>2.3</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1.2</td>\n",
              "      <td>1.1</td>\n",
              "      <td>1.1</td>\n",
              "      <td>0.8</td>\n",
              "      <td>0.9</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>728</th>\n",
              "      <td>647</td>\n",
              "      <td>West Ham</td>\n",
              "      <td>G</td>\n",
              "      <td>Anang</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>-1.5</td>\n",
              "      <td>-3.5</td>\n",
              "      <td>1.2</td>\n",
              "      <td>1.1</td>\n",
              "      <td>0.9</td>\n",
              "      <td>1.0</td>\n",
              "      <td>1.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>729</th>\n",
              "      <td>546</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>G</td>\n",
              "      <td>Bentley</td>\n",
              "      <td>3.9</td>\n",
              "      <td>0.5</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.8</td>\n",
              "      <td>-0.8</td>\n",
              "      <td>-2.8</td>\n",
              "      <td>0.8</td>\n",
              "      <td>0.9</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.9</td>\n",
              "      <td>1.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>730</th>\n",
              "      <td>564</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>G</td>\n",
              "      <td>King</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.7</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.8</td>\n",
              "      <td>-0.8</td>\n",
              "      <td>-2.8</td>\n",
              "      <td>0.8</td>\n",
              "      <td>0.9</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.9</td>\n",
              "      <td>1.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>731</th>\n",
              "      <td>569</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>G</td>\n",
              "      <td>José Sá</td>\n",
              "      <td>5.0</td>\n",
              "      <td>1.6</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>195</td>\n",
              "      <td>30.7</td>\n",
              "      <td>...</td>\n",
              "      <td>3.1</td>\n",
              "      <td>990</td>\n",
              "      <td>0.8</td>\n",
              "      <td>-0.8</td>\n",
              "      <td>-2.8</td>\n",
              "      <td>0.8</td>\n",
              "      <td>0.9</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.9</td>\n",
              "      <td>1.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>732</th>\n",
              "      <td>571</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>G</td>\n",
              "      <td>Šarkić</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.3</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.8</td>\n",
              "      <td>-0.8</td>\n",
              "      <td>-2.8</td>\n",
              "      <td>0.8</td>\n",
              "      <td>0.9</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.9</td>\n",
              "      <td>1.0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>733 rows × 21 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-40929446-15f3-40d9-8e8d-1d2a38a7f160')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-40929446-15f3-40d9-8e8d-1d2a38a7f160 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-40929446-15f3-40d9-8e8d-1d2a38a7f160');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-875d0ba8-e23c-4fd1-a6ae-cd9d55a072a7\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-875d0ba8-e23c-4fd1-a6ae-cd9d55a072a7')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-875d0ba8-e23c-4fd1-a6ae-cd9d55a072a7 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 40
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#gw3adjustments = gw3adjustments.groupby('team', as_index=False)['gw3adjustment'].aggregate('sum')\n",
        "#gw3adjustments"
      ],
      "metadata": {
        "id": "6x3Lj7jPTCVC"
      },
      "execution_count": 41,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "rawdfgw228x['gw12'] = (((rawdfgw228x.xPallgw - 2)*rawdfgw228x.gw12adjustment)+2)\n",
        "rawdfgw228x['gw13'] = (((rawdfgw228x.xPallgw - 2)*rawdfgw228x.gw13adjustment)+2)\n",
        "rawdfgw228x['gw14'] = (((rawdfgw228x.xPallgw - 2)*rawdfgw228x.gw14adjustment)+2)\n",
        "rawdfgw228x['gw15'] = (((rawdfgw228x.xPallgw - 2)*rawdfgw228x.gw15adjustment)+2)\n",
        "rawdfgw228x['gw16'] = (((rawdfgw228x.xPallgw - 2)*rawdfgw228x.gw16adjustment)+2)\n",
        "\n",
        "rawdfgw228x['5GW Total'] = rawdfgw228x.gw15 + rawdfgw228x.gw16 + rawdfgw228x.gw12 + rawdfgw228x.gw13 + rawdfgw228x.gw14\n",
        "rawdfgw228x = rawdfgw228x.drop(columns=[\n",
        "  'gw14adjustment',\n",
        "  'gw15adjustment',\n",
        "  'gw16adjustment',\n",
        "  'gw12adjustment',\n",
        "  'gw13adjustment'\n",
        "  ])\n",
        "rawdfgw228x"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 424
        },
        "id": "Dgw1xB0YUN9D",
        "outputId": "3ee60cae-4b9e-4a95-d970-2c4d3d4245f7"
      },
      "execution_count": 42,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "      id                     team pos     name  cost  selected_by_percent  \\\n",
              "0      1                  Arsenal   F  Balogun   4.4                  0.2   \n",
              "1      8                  Arsenal   F  G.Jesus   7.8                  2.0   \n",
              "2     13                  Arsenal   F  Nketiah   5.7                 10.5   \n",
              "3     39              Aston Villa   F    Davis   4.9                  0.1   \n",
              "4     44              Aston Villa   F    Duran   5.0                  0.2   \n",
              "..   ...                      ...  ..      ...   ...                  ...   \n",
              "728  647                 West Ham   G    Anang   4.0                  0.1   \n",
              "729  546  Wolverhampton Wanderers   G  Bentley   3.9                  0.5   \n",
              "730  564  Wolverhampton Wanderers   G     King   4.0                  0.7   \n",
              "731  569  Wolverhampton Wanderers   G  José Sá   5.0                  1.6   \n",
              "732  571  Wolverhampton Wanderers   G   Šarkić   4.0                  0.3   \n",
              "\n",
              "     goals_scored  assists  bps  ict_index  ...  minutes  home_adjustment  \\\n",
              "0               0        0    0        0.0  ...        0              1.2   \n",
              "1               1        1   51       26.9  ...      362              1.2   \n",
              "2               5        2  157       53.4  ...      757              1.2   \n",
              "3               0        0    0        0.0  ...        0              1.1   \n",
              "4               2        0   55       13.7  ...       68              1.1   \n",
              "..            ...      ...  ...        ...  ...      ...              ...   \n",
              "728             0        0    0        0.0  ...        0              1.0   \n",
              "729             0        0    0        0.0  ...        0              0.8   \n",
              "730             0        0    0        0.0  ...        0              0.8   \n",
              "731             0        0  195       30.7  ...      990              0.8   \n",
              "732             0        0    0        0.0  ...        0              0.8   \n",
              "\n",
              "     xPallgw  xCSP  gw12  gw13  gw14  gw15  gw16  5GW Total  \n",
              "0        2.0   NaN  2.00  2.00  2.00  2.00  2.00      10.00  \n",
              "1        2.7   NaN  2.91  2.77  2.77  2.98  2.77      14.20  \n",
              "2        3.2   NaN  3.56  3.32  3.32  3.68  3.32      17.20  \n",
              "3        2.0   NaN  2.00  2.00  2.00  2.00  2.00      10.00  \n",
              "4        2.3   NaN  2.36  2.33  2.33  2.24  2.27      11.53  \n",
              "..       ...   ...   ...   ...   ...   ...   ...        ...  \n",
              "728     -1.5  -3.5 -2.20 -1.85 -1.15 -1.50 -1.50      -8.20  \n",
              "729     -0.8  -2.8 -0.24 -0.52 -0.80 -0.52 -0.80      -2.88  \n",
              "730     -0.8  -2.8 -0.24 -0.52 -0.80 -0.52 -0.80      -2.88  \n",
              "731     -0.8  -2.8 -0.24 -0.52 -0.80 -0.52 -0.80      -2.88  \n",
              "732     -0.8  -2.8 -0.24 -0.52 -0.80 -0.52 -0.80      -2.88  \n",
              "\n",
              "[733 rows x 22 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-aadbde9c-dfff-4226-a526-5fa5147f0ef9\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>team</th>\n",
              "      <th>pos</th>\n",
              "      <th>name</th>\n",
              "      <th>cost</th>\n",
              "      <th>selected_by_percent</th>\n",
              "      <th>goals_scored</th>\n",
              "      <th>assists</th>\n",
              "      <th>bps</th>\n",
              "      <th>ict_index</th>\n",
              "      <th>...</th>\n",
              "      <th>minutes</th>\n",
              "      <th>home_adjustment</th>\n",
              "      <th>xPallgw</th>\n",
              "      <th>xCSP</th>\n",
              "      <th>gw12</th>\n",
              "      <th>gw13</th>\n",
              "      <th>gw14</th>\n",
              "      <th>gw15</th>\n",
              "      <th>gw16</th>\n",
              "      <th>5GW Total</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>1</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>F</td>\n",
              "      <td>Balogun</td>\n",
              "      <td>4.4</td>\n",
              "      <td>0.2</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>1.2</td>\n",
              "      <td>2.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>10.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>8</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>F</td>\n",
              "      <td>G.Jesus</td>\n",
              "      <td>7.8</td>\n",
              "      <td>2.0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>51</td>\n",
              "      <td>26.9</td>\n",
              "      <td>...</td>\n",
              "      <td>362</td>\n",
              "      <td>1.2</td>\n",
              "      <td>2.7</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2.91</td>\n",
              "      <td>2.77</td>\n",
              "      <td>2.77</td>\n",
              "      <td>2.98</td>\n",
              "      <td>2.77</td>\n",
              "      <td>14.20</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>13</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>F</td>\n",
              "      <td>Nketiah</td>\n",
              "      <td>5.7</td>\n",
              "      <td>10.5</td>\n",
              "      <td>5</td>\n",
              "      <td>2</td>\n",
              "      <td>157</td>\n",
              "      <td>53.4</td>\n",
              "      <td>...</td>\n",
              "      <td>757</td>\n",
              "      <td>1.2</td>\n",
              "      <td>3.2</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.56</td>\n",
              "      <td>3.32</td>\n",
              "      <td>3.32</td>\n",
              "      <td>3.68</td>\n",
              "      <td>3.32</td>\n",
              "      <td>17.20</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>39</td>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>F</td>\n",
              "      <td>Davis</td>\n",
              "      <td>4.9</td>\n",
              "      <td>0.1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>1.1</td>\n",
              "      <td>2.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>10.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>44</td>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>F</td>\n",
              "      <td>Duran</td>\n",
              "      <td>5.0</td>\n",
              "      <td>0.2</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>55</td>\n",
              "      <td>13.7</td>\n",
              "      <td>...</td>\n",
              "      <td>68</td>\n",
              "      <td>1.1</td>\n",
              "      <td>2.3</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2.36</td>\n",
              "      <td>2.33</td>\n",
              "      <td>2.33</td>\n",
              "      <td>2.24</td>\n",
              "      <td>2.27</td>\n",
              "      <td>11.53</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>728</th>\n",
              "      <td>647</td>\n",
              "      <td>West Ham</td>\n",
              "      <td>G</td>\n",
              "      <td>Anang</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>-1.5</td>\n",
              "      <td>-3.5</td>\n",
              "      <td>-2.20</td>\n",
              "      <td>-1.85</td>\n",
              "      <td>-1.15</td>\n",
              "      <td>-1.50</td>\n",
              "      <td>-1.50</td>\n",
              "      <td>-8.20</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>729</th>\n",
              "      <td>546</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>G</td>\n",
              "      <td>Bentley</td>\n",
              "      <td>3.9</td>\n",
              "      <td>0.5</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0.8</td>\n",
              "      <td>-0.8</td>\n",
              "      <td>-2.8</td>\n",
              "      <td>-0.24</td>\n",
              "      <td>-0.52</td>\n",
              "      <td>-0.80</td>\n",
              "      <td>-0.52</td>\n",
              "      <td>-0.80</td>\n",
              "      <td>-2.88</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>730</th>\n",
              "      <td>564</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>G</td>\n",
              "      <td>King</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.7</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0.8</td>\n",
              "      <td>-0.8</td>\n",
              "      <td>-2.8</td>\n",
              "      <td>-0.24</td>\n",
              "      <td>-0.52</td>\n",
              "      <td>-0.80</td>\n",
              "      <td>-0.52</td>\n",
              "      <td>-0.80</td>\n",
              "      <td>-2.88</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>731</th>\n",
              "      <td>569</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>G</td>\n",
              "      <td>José Sá</td>\n",
              "      <td>5.0</td>\n",
              "      <td>1.6</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>195</td>\n",
              "      <td>30.7</td>\n",
              "      <td>...</td>\n",
              "      <td>990</td>\n",
              "      <td>0.8</td>\n",
              "      <td>-0.8</td>\n",
              "      <td>-2.8</td>\n",
              "      <td>-0.24</td>\n",
              "      <td>-0.52</td>\n",
              "      <td>-0.80</td>\n",
              "      <td>-0.52</td>\n",
              "      <td>-0.80</td>\n",
              "      <td>-2.88</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>732</th>\n",
              "      <td>571</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>G</td>\n",
              "      <td>Šarkić</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.3</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0.8</td>\n",
              "      <td>-0.8</td>\n",
              "      <td>-2.8</td>\n",
              "      <td>-0.24</td>\n",
              "      <td>-0.52</td>\n",
              "      <td>-0.80</td>\n",
              "      <td>-0.52</td>\n",
              "      <td>-0.80</td>\n",
              "      <td>-2.88</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>733 rows × 22 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-aadbde9c-dfff-4226-a526-5fa5147f0ef9')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-aadbde9c-dfff-4226-a526-5fa5147f0ef9 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-aadbde9c-dfff-4226-a526-5fa5147f0ef9');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-1ca5f7c3-38c6-452a-a3fc-aef0b791bb6e\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-1ca5f7c3-38c6-452a-a3fc-aef0b791bb6e')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-1ca5f7c3-38c6-452a-a3fc-aef0b791bb6e button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 42
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "rawdfgw228x.drop_duplicates(subset='name', keep='last', inplace=True)\n",
        "rawdfgw228x"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 424
        },
        "id": "Jud88GRHgLWf",
        "outputId": "5def17c7-bd76-4177-8dee-1f9ce273aca1"
      },
      "execution_count": 43,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "      id                     team pos     name  cost  selected_by_percent  \\\n",
              "0      1                  Arsenal   F  Balogun   4.4                  0.2   \n",
              "1      8                  Arsenal   F  G.Jesus   7.8                  2.0   \n",
              "2     13                  Arsenal   F  Nketiah   5.7                 10.5   \n",
              "3     39              Aston Villa   F    Davis   4.9                  0.1   \n",
              "4     44              Aston Villa   F    Duran   5.0                  0.2   \n",
              "..   ...                      ...  ..      ...   ...                  ...   \n",
              "728  647                 West Ham   G    Anang   4.0                  0.1   \n",
              "729  546  Wolverhampton Wanderers   G  Bentley   3.9                  0.5   \n",
              "730  564  Wolverhampton Wanderers   G     King   4.0                  0.7   \n",
              "731  569  Wolverhampton Wanderers   G  José Sá   5.0                  1.6   \n",
              "732  571  Wolverhampton Wanderers   G   Šarkić   4.0                  0.3   \n",
              "\n",
              "     goals_scored  assists  bps  ict_index  ...  minutes  home_adjustment  \\\n",
              "0               0        0    0        0.0  ...        0              1.2   \n",
              "1               1        1   51       26.9  ...      362              1.2   \n",
              "2               5        2  157       53.4  ...      757              1.2   \n",
              "3               0        0    0        0.0  ...        0              1.1   \n",
              "4               2        0   55       13.7  ...       68              1.1   \n",
              "..            ...      ...  ...        ...  ...      ...              ...   \n",
              "728             0        0    0        0.0  ...        0              1.0   \n",
              "729             0        0    0        0.0  ...        0              0.8   \n",
              "730             0        0    0        0.0  ...        0              0.8   \n",
              "731             0        0  195       30.7  ...      990              0.8   \n",
              "732             0        0    0        0.0  ...        0              0.8   \n",
              "\n",
              "     xPallgw  xCSP  gw12  gw13  gw14  gw15  gw16  5GW Total  \n",
              "0        2.0   NaN  2.00  2.00  2.00  2.00  2.00      10.00  \n",
              "1        2.7   NaN  2.91  2.77  2.77  2.98  2.77      14.20  \n",
              "2        3.2   NaN  3.56  3.32  3.32  3.68  3.32      17.20  \n",
              "3        2.0   NaN  2.00  2.00  2.00  2.00  2.00      10.00  \n",
              "4        2.3   NaN  2.36  2.33  2.33  2.24  2.27      11.53  \n",
              "..       ...   ...   ...   ...   ...   ...   ...        ...  \n",
              "728     -1.5  -3.5 -2.20 -1.85 -1.15 -1.50 -1.50      -8.20  \n",
              "729     -0.8  -2.8 -0.24 -0.52 -0.80 -0.52 -0.80      -2.88  \n",
              "730     -0.8  -2.8 -0.24 -0.52 -0.80 -0.52 -0.80      -2.88  \n",
              "731     -0.8  -2.8 -0.24 -0.52 -0.80 -0.52 -0.80      -2.88  \n",
              "732     -0.8  -2.8 -0.24 -0.52 -0.80 -0.52 -0.80      -2.88  \n",
              "\n",
              "[710 rows x 22 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-24710442-0a41-4286-b2e7-a2980b16b51c\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>team</th>\n",
              "      <th>pos</th>\n",
              "      <th>name</th>\n",
              "      <th>cost</th>\n",
              "      <th>selected_by_percent</th>\n",
              "      <th>goals_scored</th>\n",
              "      <th>assists</th>\n",
              "      <th>bps</th>\n",
              "      <th>ict_index</th>\n",
              "      <th>...</th>\n",
              "      <th>minutes</th>\n",
              "      <th>home_adjustment</th>\n",
              "      <th>xPallgw</th>\n",
              "      <th>xCSP</th>\n",
              "      <th>gw12</th>\n",
              "      <th>gw13</th>\n",
              "      <th>gw14</th>\n",
              "      <th>gw15</th>\n",
              "      <th>gw16</th>\n",
              "      <th>5GW Total</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>1</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>F</td>\n",
              "      <td>Balogun</td>\n",
              "      <td>4.4</td>\n",
              "      <td>0.2</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>1.2</td>\n",
              "      <td>2.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>10.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>8</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>F</td>\n",
              "      <td>G.Jesus</td>\n",
              "      <td>7.8</td>\n",
              "      <td>2.0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>51</td>\n",
              "      <td>26.9</td>\n",
              "      <td>...</td>\n",
              "      <td>362</td>\n",
              "      <td>1.2</td>\n",
              "      <td>2.7</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2.91</td>\n",
              "      <td>2.77</td>\n",
              "      <td>2.77</td>\n",
              "      <td>2.98</td>\n",
              "      <td>2.77</td>\n",
              "      <td>14.20</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>13</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>F</td>\n",
              "      <td>Nketiah</td>\n",
              "      <td>5.7</td>\n",
              "      <td>10.5</td>\n",
              "      <td>5</td>\n",
              "      <td>2</td>\n",
              "      <td>157</td>\n",
              "      <td>53.4</td>\n",
              "      <td>...</td>\n",
              "      <td>757</td>\n",
              "      <td>1.2</td>\n",
              "      <td>3.2</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.56</td>\n",
              "      <td>3.32</td>\n",
              "      <td>3.32</td>\n",
              "      <td>3.68</td>\n",
              "      <td>3.32</td>\n",
              "      <td>17.20</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>39</td>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>F</td>\n",
              "      <td>Davis</td>\n",
              "      <td>4.9</td>\n",
              "      <td>0.1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>1.1</td>\n",
              "      <td>2.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>10.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>44</td>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>F</td>\n",
              "      <td>Duran</td>\n",
              "      <td>5.0</td>\n",
              "      <td>0.2</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>55</td>\n",
              "      <td>13.7</td>\n",
              "      <td>...</td>\n",
              "      <td>68</td>\n",
              "      <td>1.1</td>\n",
              "      <td>2.3</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2.36</td>\n",
              "      <td>2.33</td>\n",
              "      <td>2.33</td>\n",
              "      <td>2.24</td>\n",
              "      <td>2.27</td>\n",
              "      <td>11.53</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>728</th>\n",
              "      <td>647</td>\n",
              "      <td>West Ham</td>\n",
              "      <td>G</td>\n",
              "      <td>Anang</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>-1.5</td>\n",
              "      <td>-3.5</td>\n",
              "      <td>-2.20</td>\n",
              "      <td>-1.85</td>\n",
              "      <td>-1.15</td>\n",
              "      <td>-1.50</td>\n",
              "      <td>-1.50</td>\n",
              "      <td>-8.20</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>729</th>\n",
              "      <td>546</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>G</td>\n",
              "      <td>Bentley</td>\n",
              "      <td>3.9</td>\n",
              "      <td>0.5</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0.8</td>\n",
              "      <td>-0.8</td>\n",
              "      <td>-2.8</td>\n",
              "      <td>-0.24</td>\n",
              "      <td>-0.52</td>\n",
              "      <td>-0.80</td>\n",
              "      <td>-0.52</td>\n",
              "      <td>-0.80</td>\n",
              "      <td>-2.88</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>730</th>\n",
              "      <td>564</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>G</td>\n",
              "      <td>King</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.7</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0.8</td>\n",
              "      <td>-0.8</td>\n",
              "      <td>-2.8</td>\n",
              "      <td>-0.24</td>\n",
              "      <td>-0.52</td>\n",
              "      <td>-0.80</td>\n",
              "      <td>-0.52</td>\n",
              "      <td>-0.80</td>\n",
              "      <td>-2.88</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>731</th>\n",
              "      <td>569</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>G</td>\n",
              "      <td>José Sá</td>\n",
              "      <td>5.0</td>\n",
              "      <td>1.6</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>195</td>\n",
              "      <td>30.7</td>\n",
              "      <td>...</td>\n",
              "      <td>990</td>\n",
              "      <td>0.8</td>\n",
              "      <td>-0.8</td>\n",
              "      <td>-2.8</td>\n",
              "      <td>-0.24</td>\n",
              "      <td>-0.52</td>\n",
              "      <td>-0.80</td>\n",
              "      <td>-0.52</td>\n",
              "      <td>-0.80</td>\n",
              "      <td>-2.88</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>732</th>\n",
              "      <td>571</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>G</td>\n",
              "      <td>Šarkić</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.3</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0.8</td>\n",
              "      <td>-0.8</td>\n",
              "      <td>-2.8</td>\n",
              "      <td>-0.24</td>\n",
              "      <td>-0.52</td>\n",
              "      <td>-0.80</td>\n",
              "      <td>-0.52</td>\n",
              "      <td>-0.80</td>\n",
              "      <td>-2.88</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>710 rows × 22 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-24710442-0a41-4286-b2e7-a2980b16b51c')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-24710442-0a41-4286-b2e7-a2980b16b51c button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-24710442-0a41-4286-b2e7-a2980b16b51c');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-67df87e7-53a4-40dd-a253-8245eecd6405\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-67df87e7-53a4-40dd-a253-8245eecd6405')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-67df87e7-53a4-40dd-a253-8245eecd6405 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 43
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "from pandas import ExcelWriter\n",
        "writer = ExcelWriter('API model.xlsx')\n",
        "rawdfgw228x.to_excel(writer, sheet_name='Sheet1')\n",
        "gwadjustments1216.to_excel(writer, sheet_name='Sheet2')\n",
        "#fplwithunderstat.to_excel(writer, sheet_name='Sheet3')\n",
        "\n",
        "# Close the Pandas Excel writer and output the Excel file.\n",
        "writer.save()"
      ],
      "metadata": {
        "id": "tdXsMsuwaWa4",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "29ac01cb-8532-4fdc-b464-a0913acb89d0"
      },
      "execution_count": 44,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "<ipython-input-44-77a2e4fb9ab8>:8: FutureWarning: save is not part of the public API, usage can give unexpected results and will be removed in a future version\n",
            "  writer.save()\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#from google.colab import drive\n",
        "#drive.mount('/content/drive')"
      ],
      "metadata": {
        "id": "GzSzE5_Ckuq3"
      },
      "execution_count": 45,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "import shutil"
      ],
      "metadata": {
        "id": "xSIwXnyAk2op"
      },
      "execution_count": 46,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "#shutil.copy(\"/content/API model.xlsx\",\"/content/drive/MyDrive/FPL\")"
      ],
      "metadata": {
        "id": "O724A90vk3b4"
      },
      "execution_count": 47,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "rawdfgw228x.nlargest(50, '5GW Total')"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "id": "4ULMO_eqJXIT",
        "outputId": "60891b74-840e-45e9-c768-05891653f446"
      },
      "execution_count": 48,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "      id                     team pos          name  cost  \\\n",
              "264  308                Liverpool   M         Salah  12.9   \n",
              "61   355          Manchester City   F       Haaland  14.0   \n",
              "151  108                Brentford   M        Mbeumo   6.8   \n",
              "103   19                  Arsenal   M          Saka   8.6   \n",
              "306  373        Manchester United   M   B.Fernandes   8.3   \n",
              "383  526                 West Ham   M         Bowen   7.5   \n",
              "380  516                Tottenham   M           Son   9.6   \n",
              "29   211                  Chelsea   F     N.Jackson   6.8   \n",
              "315  396        Manchester United   M      Rashford   8.6   \n",
              "65   415         Newcastle United   F          Isak   7.4   \n",
              "49   293                Liverpool   F        Darwin   7.5   \n",
              "5     60              Aston Villa   F       Watkins   8.4   \n",
              "60   343          Manchester City   F     J.Alvarez   7.2   \n",
              "542  342          Manchester City   D           Aké   5.0   \n",
              "172  143                 Brighton   M        Mitoma   6.5   \n",
              "294  353          Manchester City   M         Foden   7.5   \n",
              "375  504                Tottenham   M      Maddison   8.1   \n",
              "325  412         Newcastle United   M        Gordon   5.7   \n",
              "206  362                  Chelsea   M        Palmer   5.1   \n",
              "262  303                Liverpool   M     Luis Díaz   7.4   \n",
              "113   43              Aston Villa   M  Douglas Luiz   5.6   \n",
              "100   14                  Arsenal   M      Ødegaard   8.4   \n",
              "12   119                Brentford   F         Wissa   5.9   \n",
              "544  350          Manchester City   D         Rúben   5.5   \n",
              "549  369          Manchester City   D        Walker   5.3   \n",
              "217  226           Crystal Palace   M           Eze   6.1   \n",
              "392  664                 West Ham   M   Ward-Prowse   6.2   \n",
              "257  294                Liverpool   M      Diogo J.   7.7   \n",
              "541  341          Manchester City   D        Akanji   4.9   \n",
              "550  616          Manchester City   D      Gvardiol   5.0   \n",
              "16   135                 Brighton   F    João Pedro   5.3   \n",
              "229  249                  Everton   M    A.Doucoure   5.5   \n",
              "415   29                  Arsenal   D         White   5.7   \n",
              "122  599              Aston Villa   M         Diaby   6.8   \n",
              "399  557  Wolverhampton Wanderers   M      Hee Chan   5.5   \n",
              "388  539                 West Ham   M     L.Paquetá   6.0   \n",
              "2     13                  Arsenal   F       Nketiah   5.7   \n",
              "204  216                  Chelsea   M      Sterling   6.9   \n",
              "9     85              Bournemouth   F       Solanke   6.4   \n",
              "377  509                Tottenham   M   Richarlison   6.7   \n",
              "15   132                 Brighton   F      Ferguson   6.0   \n",
              "170  140                 Brighton   M         March   6.2   \n",
              "290  344          Manchester City   M      Bernardo   6.3   \n",
              "543  346          Manchester City   D       Cancelo   5.8   \n",
              "545  357          Manchester City   D       Laporte   4.9   \n",
              "546  358          Manchester City   D       R.Lewis   4.3   \n",
              "547  366          Manchester City   D  Sergio Gómez   3.9   \n",
              "548  368          Manchester City   D        Stones   5.3   \n",
              "700  347          Manchester City   G        Carson   3.9   \n",
              "701  352          Manchester City   G    Ederson M.   5.5   \n",
              "\n",
              "     selected_by_percent  goals_scored  assists  bps  ict_index  ...  minutes  \\\n",
              "264                 44.8             8        4  259      120.4  ...      954   \n",
              "61                  82.5            11        2  318      115.9  ...      934   \n",
              "151                 21.6             6        3  211       98.5  ...      990   \n",
              "103                 50.9             4        5  244      101.9  ...      865   \n",
              "306                 13.5             3        2  208      101.4  ...      990   \n",
              "383                 22.4             7        1  202       89.6  ...      990   \n",
              "380                 39.7             8        1  249       96.6  ...      886   \n",
              "29                   4.4             5        0  128       74.2  ...      758   \n",
              "315                 13.3             1        2   87       58.7  ...      841   \n",
              "65                  12.5             6        0  173       55.5  ...      491   \n",
              "49                  16.2             4        5  151       63.6  ...      506   \n",
              "5                   43.0             5        8  246      100.7  ...      950   \n",
              "60                  33.7             4        5  255       89.4  ...      908   \n",
              "542                  5.5             2        0  141       32.6  ...      552   \n",
              "172                 36.6             3        4  169       83.3  ...      935   \n",
              "294                  9.9             3        3  208       85.8  ...      830   \n",
              "375                 37.6             3        6  230      109.6  ...      882   \n",
              "325                  8.6             4        4  170       63.9  ...      790   \n",
              "206                  5.0             3        3  144       53.1  ...      512   \n",
              "262                  6.9             3        1  108       44.8  ...      631   \n",
              "113                 11.7             5        1  257       69.3  ...      933   \n",
              "100                 16.9             3        2  161       65.3  ...      789   \n",
              "12                   9.2             3        2  155       61.1  ...      921   \n",
              "544                  7.5             0        0  137       25.8  ...      735   \n",
              "549                 16.7             0        1  224       37.8  ...      990   \n",
              "217                  3.2             1        2  124       63.6  ...      659   \n",
              "392                  9.5             2        3  228       73.8  ...      872   \n",
              "257                  1.8             3        2  104       55.2  ...      496   \n",
              "541                  4.7             1        0  154       30.7  ...      720   \n",
              "550                  4.5             0        0  145       25.7  ...      641   \n",
              "16                   8.7             2        1   96       51.3  ...      533   \n",
              "229                  0.7             3        1  148       76.8  ...      948   \n",
              "415                 15.4             1        1  236       48.2  ...      947   \n",
              "122                 14.7             3        5  193       78.5  ...      883   \n",
              "399                  5.0             6        2  181       63.8  ...      681   \n",
              "388                  1.4             1        1  125       47.2  ...      885   \n",
              "2                   10.5             5        2  157       53.4  ...      757   \n",
              "204                  6.6             3        4  153       78.9  ...      900   \n",
              "9                    2.4             4        1  109       66.7  ...      978   \n",
              "377                  1.4             1        3   49       48.3  ...      535   \n",
              "15                   8.0             5        0  137       47.6  ...      577   \n",
              "170                  3.1             3        1  134       46.4  ...      555   \n",
              "290                  1.8             3        2  187       59.6  ...      638   \n",
              "543                  1.1             0        0    0        0.0  ...        0   \n",
              "545                  0.1             0        0    4        2.9  ...       11   \n",
              "546                  0.3             0        0   56        2.3  ...      166   \n",
              "547                  1.1             0        1   17        3.8  ...       15   \n",
              "548                  3.5             0        0   70        7.9  ...      256   \n",
              "700                  0.1             0        0    0        0.0  ...        0   \n",
              "701                 17.5             0        0  168       16.6  ...      900   \n",
              "\n",
              "     home_adjustment  xPallgw  xCSP  gw12  gw13  gw14  gw15  gw16  5GW Total  \n",
              "264              1.2      6.4   NaN  6.84  5.96  7.72  8.16  6.84      35.52  \n",
              "61               1.3      6.1   NaN  6.92  6.51  6.92  6.92  8.15      35.42  \n",
              "151              1.1      5.8   NaN  5.42  5.42  6.56  5.42  6.94      29.76  \n",
              "103              1.2      4.6   NaN  5.38  4.86  4.86  5.64  4.86      25.60  \n",
              "306              1.1      4.3   NaN  4.99  4.76  4.99  4.30  4.99      24.03  \n",
              "383              1.0      4.6   NaN  5.12  4.86  4.34  4.60  4.60      23.52  \n",
              "380              1.0      4.6   NaN  5.12  4.34  4.86  4.60  4.08      23.00  \n",
              "29               1.1      4.7   NaN  4.16  4.43  4.43  4.70  5.24      22.96  \n",
              "315              1.1      4.0   NaN  4.60  4.40  4.60  4.00  4.60      22.20  \n",
              "65               1.2      4.0   NaN  4.60  4.20  4.20  4.60  4.40      22.00  \n",
              "49               1.2      4.0   NaN  4.20  3.80  4.60  4.80  4.20      21.60  \n",
              "5                1.1      4.2   NaN  4.64  4.42  4.42  3.76  3.98      21.22  \n",
              "60               1.3      3.8   NaN  4.16  3.98  4.16  4.16  4.70      21.16  \n",
              "542              1.3      3.8   1.1  4.16  3.98  4.16  4.16  4.70      21.16  \n",
              "172              1.1      3.9   NaN  4.47  4.47  3.52  4.09  4.28      20.83  \n",
              "294              1.3      3.7   NaN  4.04  3.87  4.04  4.04  4.55      20.54  \n",
              "375              1.0      4.1   NaN  4.52  3.89  4.31  4.10  3.68      20.50  \n",
              "325              1.2      3.7   NaN  4.21  3.87  3.87  4.21  4.04      20.20  \n",
              "206              1.1      4.1   NaN  3.68  3.89  3.89  4.10  4.52      20.08  \n",
              "262              1.2      3.6   NaN  3.76  3.44  4.08  4.24  3.76      19.28  \n",
              "113              1.1      3.8   NaN  4.16  3.98  3.98  3.44  3.62      19.18  \n",
              "100              1.2      3.5   NaN  3.95  3.65  3.65  4.10  3.65      19.00  \n",
              "12               1.1      3.7   NaN  3.53  3.53  4.04  3.53  4.21      18.84  \n",
              "544              1.3      3.4   1.1  3.68  3.54  3.68  3.68  4.10      18.68  \n",
              "549              1.3      3.4   1.1  3.68  3.54  3.68  3.68  4.10      18.68  \n",
              "217              1.0      3.6   NaN  3.76  3.92  3.44  3.92  3.44      18.48  \n",
              "392              1.0      3.6   NaN  3.92  3.76  3.44  3.60  3.60      18.32  \n",
              "257              1.2      3.4   NaN  3.54  3.26  3.82  3.96  3.54      18.12  \n",
              "541              1.3      3.3   1.1  3.56  3.43  3.56  3.56  3.95      18.06  \n",
              "550              1.3      3.3   1.1  3.56  3.43  3.56  3.56  3.95      18.06  \n",
              "16               1.1      3.4   NaN  3.82  3.82  3.12  3.54  3.68      17.98  \n",
              "229              0.9      4.0   NaN  3.80  3.60  3.40  3.40  3.60      17.80  \n",
              "415              1.2      3.3   0.8  3.69  3.43  3.43  3.82  3.43      17.80  \n",
              "122              1.1      3.5   NaN  3.80  3.65  3.65  3.20  3.35      17.65  \n",
              "399              0.8      3.6   NaN  3.28  3.44  3.60  3.44  3.60      17.36  \n",
              "388              1.0      3.4   NaN  3.68  3.54  3.26  3.40  3.40      17.28  \n",
              "2                1.2      3.2   NaN  3.56  3.32  3.32  3.68  3.32      17.20  \n",
              "204              1.1      3.5   NaN  3.20  3.35  3.35  3.50  3.80      17.20  \n",
              "9                0.8      3.7   NaN  3.19  3.70  3.70  3.36  3.19      17.14  \n",
              "377              1.0      3.4   NaN  3.68  3.26  3.54  3.40  3.12      17.00  \n",
              "15               1.1      3.2   NaN  3.56  3.56  2.96  3.32  3.44      16.84  \n",
              "170              1.1      3.2   NaN  3.56  3.56  2.96  3.32  3.44      16.84  \n",
              "290              1.3      3.1   NaN  3.32  3.21  3.32  3.32  3.65      16.82  \n",
              "543              1.3      3.1   1.1  3.32  3.21  3.32  3.32  3.65      16.82  \n",
              "545              1.3      3.1   1.1  3.32  3.21  3.32  3.32  3.65      16.82  \n",
              "546              1.3      3.1   1.1  3.32  3.21  3.32  3.32  3.65      16.82  \n",
              "547              1.3      3.1   1.1  3.32  3.21  3.32  3.32  3.65      16.82  \n",
              "548              1.3      3.1   1.1  3.32  3.21  3.32  3.32  3.65      16.82  \n",
              "700              1.3      3.1   1.1  3.32  3.21  3.32  3.32  3.65      16.82  \n",
              "701              1.3      3.1   1.1  3.32  3.21  3.32  3.32  3.65      16.82  \n",
              "\n",
              "[50 rows x 22 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-e5d7476e-ead3-492c-bef7-fca97a776884\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>team</th>\n",
              "      <th>pos</th>\n",
              "      <th>name</th>\n",
              "      <th>cost</th>\n",
              "      <th>selected_by_percent</th>\n",
              "      <th>goals_scored</th>\n",
              "      <th>assists</th>\n",
              "      <th>bps</th>\n",
              "      <th>ict_index</th>\n",
              "      <th>...</th>\n",
              "      <th>minutes</th>\n",
              "      <th>home_adjustment</th>\n",
              "      <th>xPallgw</th>\n",
              "      <th>xCSP</th>\n",
              "      <th>gw12</th>\n",
              "      <th>gw13</th>\n",
              "      <th>gw14</th>\n",
              "      <th>gw15</th>\n",
              "      <th>gw16</th>\n",
              "      <th>5GW Total</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>264</th>\n",
              "      <td>308</td>\n",
              "      <td>Liverpool</td>\n",
              "      <td>M</td>\n",
              "      <td>Salah</td>\n",
              "      <td>12.9</td>\n",
              "      <td>44.8</td>\n",
              "      <td>8</td>\n",
              "      <td>4</td>\n",
              "      <td>259</td>\n",
              "      <td>120.4</td>\n",
              "      <td>...</td>\n",
              "      <td>954</td>\n",
              "      <td>1.2</td>\n",
              "      <td>6.4</td>\n",
              "      <td>NaN</td>\n",
              "      <td>6.84</td>\n",
              "      <td>5.96</td>\n",
              "      <td>7.72</td>\n",
              "      <td>8.16</td>\n",
              "      <td>6.84</td>\n",
              "      <td>35.52</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>61</th>\n",
              "      <td>355</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>F</td>\n",
              "      <td>Haaland</td>\n",
              "      <td>14.0</td>\n",
              "      <td>82.5</td>\n",
              "      <td>11</td>\n",
              "      <td>2</td>\n",
              "      <td>318</td>\n",
              "      <td>115.9</td>\n",
              "      <td>...</td>\n",
              "      <td>934</td>\n",
              "      <td>1.3</td>\n",
              "      <td>6.1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>6.92</td>\n",
              "      <td>6.51</td>\n",
              "      <td>6.92</td>\n",
              "      <td>6.92</td>\n",
              "      <td>8.15</td>\n",
              "      <td>35.42</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>151</th>\n",
              "      <td>108</td>\n",
              "      <td>Brentford</td>\n",
              "      <td>M</td>\n",
              "      <td>Mbeumo</td>\n",
              "      <td>6.8</td>\n",
              "      <td>21.6</td>\n",
              "      <td>6</td>\n",
              "      <td>3</td>\n",
              "      <td>211</td>\n",
              "      <td>98.5</td>\n",
              "      <td>...</td>\n",
              "      <td>990</td>\n",
              "      <td>1.1</td>\n",
              "      <td>5.8</td>\n",
              "      <td>NaN</td>\n",
              "      <td>5.42</td>\n",
              "      <td>5.42</td>\n",
              "      <td>6.56</td>\n",
              "      <td>5.42</td>\n",
              "      <td>6.94</td>\n",
              "      <td>29.76</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>103</th>\n",
              "      <td>19</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>M</td>\n",
              "      <td>Saka</td>\n",
              "      <td>8.6</td>\n",
              "      <td>50.9</td>\n",
              "      <td>4</td>\n",
              "      <td>5</td>\n",
              "      <td>244</td>\n",
              "      <td>101.9</td>\n",
              "      <td>...</td>\n",
              "      <td>865</td>\n",
              "      <td>1.2</td>\n",
              "      <td>4.6</td>\n",
              "      <td>NaN</td>\n",
              "      <td>5.38</td>\n",
              "      <td>4.86</td>\n",
              "      <td>4.86</td>\n",
              "      <td>5.64</td>\n",
              "      <td>4.86</td>\n",
              "      <td>25.60</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>306</th>\n",
              "      <td>373</td>\n",
              "      <td>Manchester United</td>\n",
              "      <td>M</td>\n",
              "      <td>B.Fernandes</td>\n",
              "      <td>8.3</td>\n",
              "      <td>13.5</td>\n",
              "      <td>3</td>\n",
              "      <td>2</td>\n",
              "      <td>208</td>\n",
              "      <td>101.4</td>\n",
              "      <td>...</td>\n",
              "      <td>990</td>\n",
              "      <td>1.1</td>\n",
              "      <td>4.3</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4.99</td>\n",
              "      <td>4.76</td>\n",
              "      <td>4.99</td>\n",
              "      <td>4.30</td>\n",
              "      <td>4.99</td>\n",
              "      <td>24.03</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>383</th>\n",
              "      <td>526</td>\n",
              "      <td>West Ham</td>\n",
              "      <td>M</td>\n",
              "      <td>Bowen</td>\n",
              "      <td>7.5</td>\n",
              "      <td>22.4</td>\n",
              "      <td>7</td>\n",
              "      <td>1</td>\n",
              "      <td>202</td>\n",
              "      <td>89.6</td>\n",
              "      <td>...</td>\n",
              "      <td>990</td>\n",
              "      <td>1.0</td>\n",
              "      <td>4.6</td>\n",
              "      <td>NaN</td>\n",
              "      <td>5.12</td>\n",
              "      <td>4.86</td>\n",
              "      <td>4.34</td>\n",
              "      <td>4.60</td>\n",
              "      <td>4.60</td>\n",
              "      <td>23.52</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>380</th>\n",
              "      <td>516</td>\n",
              "      <td>Tottenham</td>\n",
              "      <td>M</td>\n",
              "      <td>Son</td>\n",
              "      <td>9.6</td>\n",
              "      <td>39.7</td>\n",
              "      <td>8</td>\n",
              "      <td>1</td>\n",
              "      <td>249</td>\n",
              "      <td>96.6</td>\n",
              "      <td>...</td>\n",
              "      <td>886</td>\n",
              "      <td>1.0</td>\n",
              "      <td>4.6</td>\n",
              "      <td>NaN</td>\n",
              "      <td>5.12</td>\n",
              "      <td>4.34</td>\n",
              "      <td>4.86</td>\n",
              "      <td>4.60</td>\n",
              "      <td>4.08</td>\n",
              "      <td>23.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>29</th>\n",
              "      <td>211</td>\n",
              "      <td>Chelsea</td>\n",
              "      <td>F</td>\n",
              "      <td>N.Jackson</td>\n",
              "      <td>6.8</td>\n",
              "      <td>4.4</td>\n",
              "      <td>5</td>\n",
              "      <td>0</td>\n",
              "      <td>128</td>\n",
              "      <td>74.2</td>\n",
              "      <td>...</td>\n",
              "      <td>758</td>\n",
              "      <td>1.1</td>\n",
              "      <td>4.7</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4.16</td>\n",
              "      <td>4.43</td>\n",
              "      <td>4.43</td>\n",
              "      <td>4.70</td>\n",
              "      <td>5.24</td>\n",
              "      <td>22.96</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>315</th>\n",
              "      <td>396</td>\n",
              "      <td>Manchester United</td>\n",
              "      <td>M</td>\n",
              "      <td>Rashford</td>\n",
              "      <td>8.6</td>\n",
              "      <td>13.3</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>87</td>\n",
              "      <td>58.7</td>\n",
              "      <td>...</td>\n",
              "      <td>841</td>\n",
              "      <td>1.1</td>\n",
              "      <td>4.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4.60</td>\n",
              "      <td>4.40</td>\n",
              "      <td>4.60</td>\n",
              "      <td>4.00</td>\n",
              "      <td>4.60</td>\n",
              "      <td>22.20</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>65</th>\n",
              "      <td>415</td>\n",
              "      <td>Newcastle United</td>\n",
              "      <td>F</td>\n",
              "      <td>Isak</td>\n",
              "      <td>7.4</td>\n",
              "      <td>12.5</td>\n",
              "      <td>6</td>\n",
              "      <td>0</td>\n",
              "      <td>173</td>\n",
              "      <td>55.5</td>\n",
              "      <td>...</td>\n",
              "      <td>491</td>\n",
              "      <td>1.2</td>\n",
              "      <td>4.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4.60</td>\n",
              "      <td>4.20</td>\n",
              "      <td>4.20</td>\n",
              "      <td>4.60</td>\n",
              "      <td>4.40</td>\n",
              "      <td>22.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>49</th>\n",
              "      <td>293</td>\n",
              "      <td>Liverpool</td>\n",
              "      <td>F</td>\n",
              "      <td>Darwin</td>\n",
              "      <td>7.5</td>\n",
              "      <td>16.2</td>\n",
              "      <td>4</td>\n",
              "      <td>5</td>\n",
              "      <td>151</td>\n",
              "      <td>63.6</td>\n",
              "      <td>...</td>\n",
              "      <td>506</td>\n",
              "      <td>1.2</td>\n",
              "      <td>4.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4.20</td>\n",
              "      <td>3.80</td>\n",
              "      <td>4.60</td>\n",
              "      <td>4.80</td>\n",
              "      <td>4.20</td>\n",
              "      <td>21.60</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>60</td>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>F</td>\n",
              "      <td>Watkins</td>\n",
              "      <td>8.4</td>\n",
              "      <td>43.0</td>\n",
              "      <td>5</td>\n",
              "      <td>8</td>\n",
              "      <td>246</td>\n",
              "      <td>100.7</td>\n",
              "      <td>...</td>\n",
              "      <td>950</td>\n",
              "      <td>1.1</td>\n",
              "      <td>4.2</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4.64</td>\n",
              "      <td>4.42</td>\n",
              "      <td>4.42</td>\n",
              "      <td>3.76</td>\n",
              "      <td>3.98</td>\n",
              "      <td>21.22</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>60</th>\n",
              "      <td>343</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>F</td>\n",
              "      <td>J.Alvarez</td>\n",
              "      <td>7.2</td>\n",
              "      <td>33.7</td>\n",
              "      <td>4</td>\n",
              "      <td>5</td>\n",
              "      <td>255</td>\n",
              "      <td>89.4</td>\n",
              "      <td>...</td>\n",
              "      <td>908</td>\n",
              "      <td>1.3</td>\n",
              "      <td>3.8</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4.16</td>\n",
              "      <td>3.98</td>\n",
              "      <td>4.16</td>\n",
              "      <td>4.16</td>\n",
              "      <td>4.70</td>\n",
              "      <td>21.16</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>542</th>\n",
              "      <td>342</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>D</td>\n",
              "      <td>Aké</td>\n",
              "      <td>5.0</td>\n",
              "      <td>5.5</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>141</td>\n",
              "      <td>32.6</td>\n",
              "      <td>...</td>\n",
              "      <td>552</td>\n",
              "      <td>1.3</td>\n",
              "      <td>3.8</td>\n",
              "      <td>1.1</td>\n",
              "      <td>4.16</td>\n",
              "      <td>3.98</td>\n",
              "      <td>4.16</td>\n",
              "      <td>4.16</td>\n",
              "      <td>4.70</td>\n",
              "      <td>21.16</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>172</th>\n",
              "      <td>143</td>\n",
              "      <td>Brighton</td>\n",
              "      <td>M</td>\n",
              "      <td>Mitoma</td>\n",
              "      <td>6.5</td>\n",
              "      <td>36.6</td>\n",
              "      <td>3</td>\n",
              "      <td>4</td>\n",
              "      <td>169</td>\n",
              "      <td>83.3</td>\n",
              "      <td>...</td>\n",
              "      <td>935</td>\n",
              "      <td>1.1</td>\n",
              "      <td>3.9</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4.47</td>\n",
              "      <td>4.47</td>\n",
              "      <td>3.52</td>\n",
              "      <td>4.09</td>\n",
              "      <td>4.28</td>\n",
              "      <td>20.83</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>294</th>\n",
              "      <td>353</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>M</td>\n",
              "      <td>Foden</td>\n",
              "      <td>7.5</td>\n",
              "      <td>9.9</td>\n",
              "      <td>3</td>\n",
              "      <td>3</td>\n",
              "      <td>208</td>\n",
              "      <td>85.8</td>\n",
              "      <td>...</td>\n",
              "      <td>830</td>\n",
              "      <td>1.3</td>\n",
              "      <td>3.7</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4.04</td>\n",
              "      <td>3.87</td>\n",
              "      <td>4.04</td>\n",
              "      <td>4.04</td>\n",
              "      <td>4.55</td>\n",
              "      <td>20.54</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>375</th>\n",
              "      <td>504</td>\n",
              "      <td>Tottenham</td>\n",
              "      <td>M</td>\n",
              "      <td>Maddison</td>\n",
              "      <td>8.1</td>\n",
              "      <td>37.6</td>\n",
              "      <td>3</td>\n",
              "      <td>6</td>\n",
              "      <td>230</td>\n",
              "      <td>109.6</td>\n",
              "      <td>...</td>\n",
              "      <td>882</td>\n",
              "      <td>1.0</td>\n",
              "      <td>4.1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4.52</td>\n",
              "      <td>3.89</td>\n",
              "      <td>4.31</td>\n",
              "      <td>4.10</td>\n",
              "      <td>3.68</td>\n",
              "      <td>20.50</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>325</th>\n",
              "      <td>412</td>\n",
              "      <td>Newcastle United</td>\n",
              "      <td>M</td>\n",
              "      <td>Gordon</td>\n",
              "      <td>5.7</td>\n",
              "      <td>8.6</td>\n",
              "      <td>4</td>\n",
              "      <td>4</td>\n",
              "      <td>170</td>\n",
              "      <td>63.9</td>\n",
              "      <td>...</td>\n",
              "      <td>790</td>\n",
              "      <td>1.2</td>\n",
              "      <td>3.7</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4.21</td>\n",
              "      <td>3.87</td>\n",
              "      <td>3.87</td>\n",
              "      <td>4.21</td>\n",
              "      <td>4.04</td>\n",
              "      <td>20.20</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>206</th>\n",
              "      <td>362</td>\n",
              "      <td>Chelsea</td>\n",
              "      <td>M</td>\n",
              "      <td>Palmer</td>\n",
              "      <td>5.1</td>\n",
              "      <td>5.0</td>\n",
              "      <td>3</td>\n",
              "      <td>3</td>\n",
              "      <td>144</td>\n",
              "      <td>53.1</td>\n",
              "      <td>...</td>\n",
              "      <td>512</td>\n",
              "      <td>1.1</td>\n",
              "      <td>4.1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.68</td>\n",
              "      <td>3.89</td>\n",
              "      <td>3.89</td>\n",
              "      <td>4.10</td>\n",
              "      <td>4.52</td>\n",
              "      <td>20.08</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>262</th>\n",
              "      <td>303</td>\n",
              "      <td>Liverpool</td>\n",
              "      <td>M</td>\n",
              "      <td>Luis Díaz</td>\n",
              "      <td>7.4</td>\n",
              "      <td>6.9</td>\n",
              "      <td>3</td>\n",
              "      <td>1</td>\n",
              "      <td>108</td>\n",
              "      <td>44.8</td>\n",
              "      <td>...</td>\n",
              "      <td>631</td>\n",
              "      <td>1.2</td>\n",
              "      <td>3.6</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.76</td>\n",
              "      <td>3.44</td>\n",
              "      <td>4.08</td>\n",
              "      <td>4.24</td>\n",
              "      <td>3.76</td>\n",
              "      <td>19.28</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>113</th>\n",
              "      <td>43</td>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>M</td>\n",
              "      <td>Douglas Luiz</td>\n",
              "      <td>5.6</td>\n",
              "      <td>11.7</td>\n",
              "      <td>5</td>\n",
              "      <td>1</td>\n",
              "      <td>257</td>\n",
              "      <td>69.3</td>\n",
              "      <td>...</td>\n",
              "      <td>933</td>\n",
              "      <td>1.1</td>\n",
              "      <td>3.8</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4.16</td>\n",
              "      <td>3.98</td>\n",
              "      <td>3.98</td>\n",
              "      <td>3.44</td>\n",
              "      <td>3.62</td>\n",
              "      <td>19.18</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>100</th>\n",
              "      <td>14</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>M</td>\n",
              "      <td>Ødegaard</td>\n",
              "      <td>8.4</td>\n",
              "      <td>16.9</td>\n",
              "      <td>3</td>\n",
              "      <td>2</td>\n",
              "      <td>161</td>\n",
              "      <td>65.3</td>\n",
              "      <td>...</td>\n",
              "      <td>789</td>\n",
              "      <td>1.2</td>\n",
              "      <td>3.5</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.95</td>\n",
              "      <td>3.65</td>\n",
              "      <td>3.65</td>\n",
              "      <td>4.10</td>\n",
              "      <td>3.65</td>\n",
              "      <td>19.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>12</th>\n",
              "      <td>119</td>\n",
              "      <td>Brentford</td>\n",
              "      <td>F</td>\n",
              "      <td>Wissa</td>\n",
              "      <td>5.9</td>\n",
              "      <td>9.2</td>\n",
              "      <td>3</td>\n",
              "      <td>2</td>\n",
              "      <td>155</td>\n",
              "      <td>61.1</td>\n",
              "      <td>...</td>\n",
              "      <td>921</td>\n",
              "      <td>1.1</td>\n",
              "      <td>3.7</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.53</td>\n",
              "      <td>3.53</td>\n",
              "      <td>4.04</td>\n",
              "      <td>3.53</td>\n",
              "      <td>4.21</td>\n",
              "      <td>18.84</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>544</th>\n",
              "      <td>350</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>D</td>\n",
              "      <td>Rúben</td>\n",
              "      <td>5.5</td>\n",
              "      <td>7.5</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>137</td>\n",
              "      <td>25.8</td>\n",
              "      <td>...</td>\n",
              "      <td>735</td>\n",
              "      <td>1.3</td>\n",
              "      <td>3.4</td>\n",
              "      <td>1.1</td>\n",
              "      <td>3.68</td>\n",
              "      <td>3.54</td>\n",
              "      <td>3.68</td>\n",
              "      <td>3.68</td>\n",
              "      <td>4.10</td>\n",
              "      <td>18.68</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>549</th>\n",
              "      <td>369</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>D</td>\n",
              "      <td>Walker</td>\n",
              "      <td>5.3</td>\n",
              "      <td>16.7</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>224</td>\n",
              "      <td>37.8</td>\n",
              "      <td>...</td>\n",
              "      <td>990</td>\n",
              "      <td>1.3</td>\n",
              "      <td>3.4</td>\n",
              "      <td>1.1</td>\n",
              "      <td>3.68</td>\n",
              "      <td>3.54</td>\n",
              "      <td>3.68</td>\n",
              "      <td>3.68</td>\n",
              "      <td>4.10</td>\n",
              "      <td>18.68</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>217</th>\n",
              "      <td>226</td>\n",
              "      <td>Crystal Palace</td>\n",
              "      <td>M</td>\n",
              "      <td>Eze</td>\n",
              "      <td>6.1</td>\n",
              "      <td>3.2</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>124</td>\n",
              "      <td>63.6</td>\n",
              "      <td>...</td>\n",
              "      <td>659</td>\n",
              "      <td>1.0</td>\n",
              "      <td>3.6</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.76</td>\n",
              "      <td>3.92</td>\n",
              "      <td>3.44</td>\n",
              "      <td>3.92</td>\n",
              "      <td>3.44</td>\n",
              "      <td>18.48</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>392</th>\n",
              "      <td>664</td>\n",
              "      <td>West Ham</td>\n",
              "      <td>M</td>\n",
              "      <td>Ward-Prowse</td>\n",
              "      <td>6.2</td>\n",
              "      <td>9.5</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "      <td>228</td>\n",
              "      <td>73.8</td>\n",
              "      <td>...</td>\n",
              "      <td>872</td>\n",
              "      <td>1.0</td>\n",
              "      <td>3.6</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.92</td>\n",
              "      <td>3.76</td>\n",
              "      <td>3.44</td>\n",
              "      <td>3.60</td>\n",
              "      <td>3.60</td>\n",
              "      <td>18.32</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>257</th>\n",
              "      <td>294</td>\n",
              "      <td>Liverpool</td>\n",
              "      <td>M</td>\n",
              "      <td>Diogo J.</td>\n",
              "      <td>7.7</td>\n",
              "      <td>1.8</td>\n",
              "      <td>3</td>\n",
              "      <td>2</td>\n",
              "      <td>104</td>\n",
              "      <td>55.2</td>\n",
              "      <td>...</td>\n",
              "      <td>496</td>\n",
              "      <td>1.2</td>\n",
              "      <td>3.4</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.54</td>\n",
              "      <td>3.26</td>\n",
              "      <td>3.82</td>\n",
              "      <td>3.96</td>\n",
              "      <td>3.54</td>\n",
              "      <td>18.12</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>541</th>\n",
              "      <td>341</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>D</td>\n",
              "      <td>Akanji</td>\n",
              "      <td>4.9</td>\n",
              "      <td>4.7</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>154</td>\n",
              "      <td>30.7</td>\n",
              "      <td>...</td>\n",
              "      <td>720</td>\n",
              "      <td>1.3</td>\n",
              "      <td>3.3</td>\n",
              "      <td>1.1</td>\n",
              "      <td>3.56</td>\n",
              "      <td>3.43</td>\n",
              "      <td>3.56</td>\n",
              "      <td>3.56</td>\n",
              "      <td>3.95</td>\n",
              "      <td>18.06</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>550</th>\n",
              "      <td>616</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>D</td>\n",
              "      <td>Gvardiol</td>\n",
              "      <td>5.0</td>\n",
              "      <td>4.5</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>145</td>\n",
              "      <td>25.7</td>\n",
              "      <td>...</td>\n",
              "      <td>641</td>\n",
              "      <td>1.3</td>\n",
              "      <td>3.3</td>\n",
              "      <td>1.1</td>\n",
              "      <td>3.56</td>\n",
              "      <td>3.43</td>\n",
              "      <td>3.56</td>\n",
              "      <td>3.56</td>\n",
              "      <td>3.95</td>\n",
              "      <td>18.06</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>16</th>\n",
              "      <td>135</td>\n",
              "      <td>Brighton</td>\n",
              "      <td>F</td>\n",
              "      <td>João Pedro</td>\n",
              "      <td>5.3</td>\n",
              "      <td>8.7</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>96</td>\n",
              "      <td>51.3</td>\n",
              "      <td>...</td>\n",
              "      <td>533</td>\n",
              "      <td>1.1</td>\n",
              "      <td>3.4</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.82</td>\n",
              "      <td>3.82</td>\n",
              "      <td>3.12</td>\n",
              "      <td>3.54</td>\n",
              "      <td>3.68</td>\n",
              "      <td>17.98</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>229</th>\n",
              "      <td>249</td>\n",
              "      <td>Everton</td>\n",
              "      <td>M</td>\n",
              "      <td>A.Doucoure</td>\n",
              "      <td>5.5</td>\n",
              "      <td>0.7</td>\n",
              "      <td>3</td>\n",
              "      <td>1</td>\n",
              "      <td>148</td>\n",
              "      <td>76.8</td>\n",
              "      <td>...</td>\n",
              "      <td>948</td>\n",
              "      <td>0.9</td>\n",
              "      <td>4.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.80</td>\n",
              "      <td>3.60</td>\n",
              "      <td>3.40</td>\n",
              "      <td>3.40</td>\n",
              "      <td>3.60</td>\n",
              "      <td>17.80</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>415</th>\n",
              "      <td>29</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>D</td>\n",
              "      <td>White</td>\n",
              "      <td>5.7</td>\n",
              "      <td>15.4</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>236</td>\n",
              "      <td>48.2</td>\n",
              "      <td>...</td>\n",
              "      <td>947</td>\n",
              "      <td>1.2</td>\n",
              "      <td>3.3</td>\n",
              "      <td>0.8</td>\n",
              "      <td>3.69</td>\n",
              "      <td>3.43</td>\n",
              "      <td>3.43</td>\n",
              "      <td>3.82</td>\n",
              "      <td>3.43</td>\n",
              "      <td>17.80</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>122</th>\n",
              "      <td>599</td>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>M</td>\n",
              "      <td>Diaby</td>\n",
              "      <td>6.8</td>\n",
              "      <td>14.7</td>\n",
              "      <td>3</td>\n",
              "      <td>5</td>\n",
              "      <td>193</td>\n",
              "      <td>78.5</td>\n",
              "      <td>...</td>\n",
              "      <td>883</td>\n",
              "      <td>1.1</td>\n",
              "      <td>3.5</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.80</td>\n",
              "      <td>3.65</td>\n",
              "      <td>3.65</td>\n",
              "      <td>3.20</td>\n",
              "      <td>3.35</td>\n",
              "      <td>17.65</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>399</th>\n",
              "      <td>557</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>M</td>\n",
              "      <td>Hee Chan</td>\n",
              "      <td>5.5</td>\n",
              "      <td>5.0</td>\n",
              "      <td>6</td>\n",
              "      <td>2</td>\n",
              "      <td>181</td>\n",
              "      <td>63.8</td>\n",
              "      <td>...</td>\n",
              "      <td>681</td>\n",
              "      <td>0.8</td>\n",
              "      <td>3.6</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.28</td>\n",
              "      <td>3.44</td>\n",
              "      <td>3.60</td>\n",
              "      <td>3.44</td>\n",
              "      <td>3.60</td>\n",
              "      <td>17.36</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>388</th>\n",
              "      <td>539</td>\n",
              "      <td>West Ham</td>\n",
              "      <td>M</td>\n",
              "      <td>L.Paquetá</td>\n",
              "      <td>6.0</td>\n",
              "      <td>1.4</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>125</td>\n",
              "      <td>47.2</td>\n",
              "      <td>...</td>\n",
              "      <td>885</td>\n",
              "      <td>1.0</td>\n",
              "      <td>3.4</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.68</td>\n",
              "      <td>3.54</td>\n",
              "      <td>3.26</td>\n",
              "      <td>3.40</td>\n",
              "      <td>3.40</td>\n",
              "      <td>17.28</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>13</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>F</td>\n",
              "      <td>Nketiah</td>\n",
              "      <td>5.7</td>\n",
              "      <td>10.5</td>\n",
              "      <td>5</td>\n",
              "      <td>2</td>\n",
              "      <td>157</td>\n",
              "      <td>53.4</td>\n",
              "      <td>...</td>\n",
              "      <td>757</td>\n",
              "      <td>1.2</td>\n",
              "      <td>3.2</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.56</td>\n",
              "      <td>3.32</td>\n",
              "      <td>3.32</td>\n",
              "      <td>3.68</td>\n",
              "      <td>3.32</td>\n",
              "      <td>17.20</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>204</th>\n",
              "      <td>216</td>\n",
              "      <td>Chelsea</td>\n",
              "      <td>M</td>\n",
              "      <td>Sterling</td>\n",
              "      <td>6.9</td>\n",
              "      <td>6.6</td>\n",
              "      <td>3</td>\n",
              "      <td>4</td>\n",
              "      <td>153</td>\n",
              "      <td>78.9</td>\n",
              "      <td>...</td>\n",
              "      <td>900</td>\n",
              "      <td>1.1</td>\n",
              "      <td>3.5</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.20</td>\n",
              "      <td>3.35</td>\n",
              "      <td>3.35</td>\n",
              "      <td>3.50</td>\n",
              "      <td>3.80</td>\n",
              "      <td>17.20</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>85</td>\n",
              "      <td>Bournemouth</td>\n",
              "      <td>F</td>\n",
              "      <td>Solanke</td>\n",
              "      <td>6.4</td>\n",
              "      <td>2.4</td>\n",
              "      <td>4</td>\n",
              "      <td>1</td>\n",
              "      <td>109</td>\n",
              "      <td>66.7</td>\n",
              "      <td>...</td>\n",
              "      <td>978</td>\n",
              "      <td>0.8</td>\n",
              "      <td>3.7</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.19</td>\n",
              "      <td>3.70</td>\n",
              "      <td>3.70</td>\n",
              "      <td>3.36</td>\n",
              "      <td>3.19</td>\n",
              "      <td>17.14</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>377</th>\n",
              "      <td>509</td>\n",
              "      <td>Tottenham</td>\n",
              "      <td>M</td>\n",
              "      <td>Richarlison</td>\n",
              "      <td>6.7</td>\n",
              "      <td>1.4</td>\n",
              "      <td>1</td>\n",
              "      <td>3</td>\n",
              "      <td>49</td>\n",
              "      <td>48.3</td>\n",
              "      <td>...</td>\n",
              "      <td>535</td>\n",
              "      <td>1.0</td>\n",
              "      <td>3.4</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.68</td>\n",
              "      <td>3.26</td>\n",
              "      <td>3.54</td>\n",
              "      <td>3.40</td>\n",
              "      <td>3.12</td>\n",
              "      <td>17.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>15</th>\n",
              "      <td>132</td>\n",
              "      <td>Brighton</td>\n",
              "      <td>F</td>\n",
              "      <td>Ferguson</td>\n",
              "      <td>6.0</td>\n",
              "      <td>8.0</td>\n",
              "      <td>5</td>\n",
              "      <td>0</td>\n",
              "      <td>137</td>\n",
              "      <td>47.6</td>\n",
              "      <td>...</td>\n",
              "      <td>577</td>\n",
              "      <td>1.1</td>\n",
              "      <td>3.2</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.56</td>\n",
              "      <td>3.56</td>\n",
              "      <td>2.96</td>\n",
              "      <td>3.32</td>\n",
              "      <td>3.44</td>\n",
              "      <td>16.84</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>170</th>\n",
              "      <td>140</td>\n",
              "      <td>Brighton</td>\n",
              "      <td>M</td>\n",
              "      <td>March</td>\n",
              "      <td>6.2</td>\n",
              "      <td>3.1</td>\n",
              "      <td>3</td>\n",
              "      <td>1</td>\n",
              "      <td>134</td>\n",
              "      <td>46.4</td>\n",
              "      <td>...</td>\n",
              "      <td>555</td>\n",
              "      <td>1.1</td>\n",
              "      <td>3.2</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.56</td>\n",
              "      <td>3.56</td>\n",
              "      <td>2.96</td>\n",
              "      <td>3.32</td>\n",
              "      <td>3.44</td>\n",
              "      <td>16.84</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>290</th>\n",
              "      <td>344</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>M</td>\n",
              "      <td>Bernardo</td>\n",
              "      <td>6.3</td>\n",
              "      <td>1.8</td>\n",
              "      <td>3</td>\n",
              "      <td>2</td>\n",
              "      <td>187</td>\n",
              "      <td>59.6</td>\n",
              "      <td>...</td>\n",
              "      <td>638</td>\n",
              "      <td>1.3</td>\n",
              "      <td>3.1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.32</td>\n",
              "      <td>3.21</td>\n",
              "      <td>3.32</td>\n",
              "      <td>3.32</td>\n",
              "      <td>3.65</td>\n",
              "      <td>16.82</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>543</th>\n",
              "      <td>346</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>D</td>\n",
              "      <td>Cancelo</td>\n",
              "      <td>5.8</td>\n",
              "      <td>1.1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>1.3</td>\n",
              "      <td>3.1</td>\n",
              "      <td>1.1</td>\n",
              "      <td>3.32</td>\n",
              "      <td>3.21</td>\n",
              "      <td>3.32</td>\n",
              "      <td>3.32</td>\n",
              "      <td>3.65</td>\n",
              "      <td>16.82</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>545</th>\n",
              "      <td>357</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>D</td>\n",
              "      <td>Laporte</td>\n",
              "      <td>4.9</td>\n",
              "      <td>0.1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>4</td>\n",
              "      <td>2.9</td>\n",
              "      <td>...</td>\n",
              "      <td>11</td>\n",
              "      <td>1.3</td>\n",
              "      <td>3.1</td>\n",
              "      <td>1.1</td>\n",
              "      <td>3.32</td>\n",
              "      <td>3.21</td>\n",
              "      <td>3.32</td>\n",
              "      <td>3.32</td>\n",
              "      <td>3.65</td>\n",
              "      <td>16.82</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>546</th>\n",
              "      <td>358</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>D</td>\n",
              "      <td>R.Lewis</td>\n",
              "      <td>4.3</td>\n",
              "      <td>0.3</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>56</td>\n",
              "      <td>2.3</td>\n",
              "      <td>...</td>\n",
              "      <td>166</td>\n",
              "      <td>1.3</td>\n",
              "      <td>3.1</td>\n",
              "      <td>1.1</td>\n",
              "      <td>3.32</td>\n",
              "      <td>3.21</td>\n",
              "      <td>3.32</td>\n",
              "      <td>3.32</td>\n",
              "      <td>3.65</td>\n",
              "      <td>16.82</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>547</th>\n",
              "      <td>366</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>D</td>\n",
              "      <td>Sergio Gómez</td>\n",
              "      <td>3.9</td>\n",
              "      <td>1.1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>17</td>\n",
              "      <td>3.8</td>\n",
              "      <td>...</td>\n",
              "      <td>15</td>\n",
              "      <td>1.3</td>\n",
              "      <td>3.1</td>\n",
              "      <td>1.1</td>\n",
              "      <td>3.32</td>\n",
              "      <td>3.21</td>\n",
              "      <td>3.32</td>\n",
              "      <td>3.32</td>\n",
              "      <td>3.65</td>\n",
              "      <td>16.82</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>548</th>\n",
              "      <td>368</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>D</td>\n",
              "      <td>Stones</td>\n",
              "      <td>5.3</td>\n",
              "      <td>3.5</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>70</td>\n",
              "      <td>7.9</td>\n",
              "      <td>...</td>\n",
              "      <td>256</td>\n",
              "      <td>1.3</td>\n",
              "      <td>3.1</td>\n",
              "      <td>1.1</td>\n",
              "      <td>3.32</td>\n",
              "      <td>3.21</td>\n",
              "      <td>3.32</td>\n",
              "      <td>3.32</td>\n",
              "      <td>3.65</td>\n",
              "      <td>16.82</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>700</th>\n",
              "      <td>347</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>G</td>\n",
              "      <td>Carson</td>\n",
              "      <td>3.9</td>\n",
              "      <td>0.1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>1.3</td>\n",
              "      <td>3.1</td>\n",
              "      <td>1.1</td>\n",
              "      <td>3.32</td>\n",
              "      <td>3.21</td>\n",
              "      <td>3.32</td>\n",
              "      <td>3.32</td>\n",
              "      <td>3.65</td>\n",
              "      <td>16.82</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>701</th>\n",
              "      <td>352</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>G</td>\n",
              "      <td>Ederson M.</td>\n",
              "      <td>5.5</td>\n",
              "      <td>17.5</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>168</td>\n",
              "      <td>16.6</td>\n",
              "      <td>...</td>\n",
              "      <td>900</td>\n",
              "      <td>1.3</td>\n",
              "      <td>3.1</td>\n",
              "      <td>1.1</td>\n",
              "      <td>3.32</td>\n",
              "      <td>3.21</td>\n",
              "      <td>3.32</td>\n",
              "      <td>3.32</td>\n",
              "      <td>3.65</td>\n",
              "      <td>16.82</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>50 rows × 22 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-e5d7476e-ead3-492c-bef7-fca97a776884')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-e5d7476e-ead3-492c-bef7-fca97a776884 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-e5d7476e-ead3-492c-bef7-fca97a776884');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-7b8a190e-baf5-455d-b888-9c3956a5e182\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-7b8a190e-baf5-455d-b888-9c3956a5e182')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-7b8a190e-baf5-455d-b888-9c3956a5e182 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 48
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "Top50 = rawdfgw228x.nlargest(50, '5GW Total')\n",
        "Top50"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "id": "Vuuihhw-Jx7s",
        "outputId": "bff7190b-ee6b-48c8-c5ec-d4aefc5a1aa5"
      },
      "execution_count": 49,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "      id                     team pos          name  cost  \\\n",
              "264  308                Liverpool   M         Salah  12.9   \n",
              "61   355          Manchester City   F       Haaland  14.0   \n",
              "151  108                Brentford   M        Mbeumo   6.8   \n",
              "103   19                  Arsenal   M          Saka   8.6   \n",
              "306  373        Manchester United   M   B.Fernandes   8.3   \n",
              "383  526                 West Ham   M         Bowen   7.5   \n",
              "380  516                Tottenham   M           Son   9.6   \n",
              "29   211                  Chelsea   F     N.Jackson   6.8   \n",
              "315  396        Manchester United   M      Rashford   8.6   \n",
              "65   415         Newcastle United   F          Isak   7.4   \n",
              "49   293                Liverpool   F        Darwin   7.5   \n",
              "5     60              Aston Villa   F       Watkins   8.4   \n",
              "60   343          Manchester City   F     J.Alvarez   7.2   \n",
              "542  342          Manchester City   D           Aké   5.0   \n",
              "172  143                 Brighton   M        Mitoma   6.5   \n",
              "294  353          Manchester City   M         Foden   7.5   \n",
              "375  504                Tottenham   M      Maddison   8.1   \n",
              "325  412         Newcastle United   M        Gordon   5.7   \n",
              "206  362                  Chelsea   M        Palmer   5.1   \n",
              "262  303                Liverpool   M     Luis Díaz   7.4   \n",
              "113   43              Aston Villa   M  Douglas Luiz   5.6   \n",
              "100   14                  Arsenal   M      Ødegaard   8.4   \n",
              "12   119                Brentford   F         Wissa   5.9   \n",
              "544  350          Manchester City   D         Rúben   5.5   \n",
              "549  369          Manchester City   D        Walker   5.3   \n",
              "217  226           Crystal Palace   M           Eze   6.1   \n",
              "392  664                 West Ham   M   Ward-Prowse   6.2   \n",
              "257  294                Liverpool   M      Diogo J.   7.7   \n",
              "541  341          Manchester City   D        Akanji   4.9   \n",
              "550  616          Manchester City   D      Gvardiol   5.0   \n",
              "16   135                 Brighton   F    João Pedro   5.3   \n",
              "229  249                  Everton   M    A.Doucoure   5.5   \n",
              "415   29                  Arsenal   D         White   5.7   \n",
              "122  599              Aston Villa   M         Diaby   6.8   \n",
              "399  557  Wolverhampton Wanderers   M      Hee Chan   5.5   \n",
              "388  539                 West Ham   M     L.Paquetá   6.0   \n",
              "2     13                  Arsenal   F       Nketiah   5.7   \n",
              "204  216                  Chelsea   M      Sterling   6.9   \n",
              "9     85              Bournemouth   F       Solanke   6.4   \n",
              "377  509                Tottenham   M   Richarlison   6.7   \n",
              "15   132                 Brighton   F      Ferguson   6.0   \n",
              "170  140                 Brighton   M         March   6.2   \n",
              "290  344          Manchester City   M      Bernardo   6.3   \n",
              "543  346          Manchester City   D       Cancelo   5.8   \n",
              "545  357          Manchester City   D       Laporte   4.9   \n",
              "546  358          Manchester City   D       R.Lewis   4.3   \n",
              "547  366          Manchester City   D  Sergio Gómez   3.9   \n",
              "548  368          Manchester City   D        Stones   5.3   \n",
              "700  347          Manchester City   G        Carson   3.9   \n",
              "701  352          Manchester City   G    Ederson M.   5.5   \n",
              "\n",
              "     selected_by_percent  goals_scored  assists  bps  ict_index  ...  minutes  \\\n",
              "264                 44.8             8        4  259      120.4  ...      954   \n",
              "61                  82.5            11        2  318      115.9  ...      934   \n",
              "151                 21.6             6        3  211       98.5  ...      990   \n",
              "103                 50.9             4        5  244      101.9  ...      865   \n",
              "306                 13.5             3        2  208      101.4  ...      990   \n",
              "383                 22.4             7        1  202       89.6  ...      990   \n",
              "380                 39.7             8        1  249       96.6  ...      886   \n",
              "29                   4.4             5        0  128       74.2  ...      758   \n",
              "315                 13.3             1        2   87       58.7  ...      841   \n",
              "65                  12.5             6        0  173       55.5  ...      491   \n",
              "49                  16.2             4        5  151       63.6  ...      506   \n",
              "5                   43.0             5        8  246      100.7  ...      950   \n",
              "60                  33.7             4        5  255       89.4  ...      908   \n",
              "542                  5.5             2        0  141       32.6  ...      552   \n",
              "172                 36.6             3        4  169       83.3  ...      935   \n",
              "294                  9.9             3        3  208       85.8  ...      830   \n",
              "375                 37.6             3        6  230      109.6  ...      882   \n",
              "325                  8.6             4        4  170       63.9  ...      790   \n",
              "206                  5.0             3        3  144       53.1  ...      512   \n",
              "262                  6.9             3        1  108       44.8  ...      631   \n",
              "113                 11.7             5        1  257       69.3  ...      933   \n",
              "100                 16.9             3        2  161       65.3  ...      789   \n",
              "12                   9.2             3        2  155       61.1  ...      921   \n",
              "544                  7.5             0        0  137       25.8  ...      735   \n",
              "549                 16.7             0        1  224       37.8  ...      990   \n",
              "217                  3.2             1        2  124       63.6  ...      659   \n",
              "392                  9.5             2        3  228       73.8  ...      872   \n",
              "257                  1.8             3        2  104       55.2  ...      496   \n",
              "541                  4.7             1        0  154       30.7  ...      720   \n",
              "550                  4.5             0        0  145       25.7  ...      641   \n",
              "16                   8.7             2        1   96       51.3  ...      533   \n",
              "229                  0.7             3        1  148       76.8  ...      948   \n",
              "415                 15.4             1        1  236       48.2  ...      947   \n",
              "122                 14.7             3        5  193       78.5  ...      883   \n",
              "399                  5.0             6        2  181       63.8  ...      681   \n",
              "388                  1.4             1        1  125       47.2  ...      885   \n",
              "2                   10.5             5        2  157       53.4  ...      757   \n",
              "204                  6.6             3        4  153       78.9  ...      900   \n",
              "9                    2.4             4        1  109       66.7  ...      978   \n",
              "377                  1.4             1        3   49       48.3  ...      535   \n",
              "15                   8.0             5        0  137       47.6  ...      577   \n",
              "170                  3.1             3        1  134       46.4  ...      555   \n",
              "290                  1.8             3        2  187       59.6  ...      638   \n",
              "543                  1.1             0        0    0        0.0  ...        0   \n",
              "545                  0.1             0        0    4        2.9  ...       11   \n",
              "546                  0.3             0        0   56        2.3  ...      166   \n",
              "547                  1.1             0        1   17        3.8  ...       15   \n",
              "548                  3.5             0        0   70        7.9  ...      256   \n",
              "700                  0.1             0        0    0        0.0  ...        0   \n",
              "701                 17.5             0        0  168       16.6  ...      900   \n",
              "\n",
              "     home_adjustment  xPallgw  xCSP  gw12  gw13  gw14  gw15  gw16  5GW Total  \n",
              "264              1.2      6.4   NaN  6.84  5.96  7.72  8.16  6.84      35.52  \n",
              "61               1.3      6.1   NaN  6.92  6.51  6.92  6.92  8.15      35.42  \n",
              "151              1.1      5.8   NaN  5.42  5.42  6.56  5.42  6.94      29.76  \n",
              "103              1.2      4.6   NaN  5.38  4.86  4.86  5.64  4.86      25.60  \n",
              "306              1.1      4.3   NaN  4.99  4.76  4.99  4.30  4.99      24.03  \n",
              "383              1.0      4.6   NaN  5.12  4.86  4.34  4.60  4.60      23.52  \n",
              "380              1.0      4.6   NaN  5.12  4.34  4.86  4.60  4.08      23.00  \n",
              "29               1.1      4.7   NaN  4.16  4.43  4.43  4.70  5.24      22.96  \n",
              "315              1.1      4.0   NaN  4.60  4.40  4.60  4.00  4.60      22.20  \n",
              "65               1.2      4.0   NaN  4.60  4.20  4.20  4.60  4.40      22.00  \n",
              "49               1.2      4.0   NaN  4.20  3.80  4.60  4.80  4.20      21.60  \n",
              "5                1.1      4.2   NaN  4.64  4.42  4.42  3.76  3.98      21.22  \n",
              "60               1.3      3.8   NaN  4.16  3.98  4.16  4.16  4.70      21.16  \n",
              "542              1.3      3.8   1.1  4.16  3.98  4.16  4.16  4.70      21.16  \n",
              "172              1.1      3.9   NaN  4.47  4.47  3.52  4.09  4.28      20.83  \n",
              "294              1.3      3.7   NaN  4.04  3.87  4.04  4.04  4.55      20.54  \n",
              "375              1.0      4.1   NaN  4.52  3.89  4.31  4.10  3.68      20.50  \n",
              "325              1.2      3.7   NaN  4.21  3.87  3.87  4.21  4.04      20.20  \n",
              "206              1.1      4.1   NaN  3.68  3.89  3.89  4.10  4.52      20.08  \n",
              "262              1.2      3.6   NaN  3.76  3.44  4.08  4.24  3.76      19.28  \n",
              "113              1.1      3.8   NaN  4.16  3.98  3.98  3.44  3.62      19.18  \n",
              "100              1.2      3.5   NaN  3.95  3.65  3.65  4.10  3.65      19.00  \n",
              "12               1.1      3.7   NaN  3.53  3.53  4.04  3.53  4.21      18.84  \n",
              "544              1.3      3.4   1.1  3.68  3.54  3.68  3.68  4.10      18.68  \n",
              "549              1.3      3.4   1.1  3.68  3.54  3.68  3.68  4.10      18.68  \n",
              "217              1.0      3.6   NaN  3.76  3.92  3.44  3.92  3.44      18.48  \n",
              "392              1.0      3.6   NaN  3.92  3.76  3.44  3.60  3.60      18.32  \n",
              "257              1.2      3.4   NaN  3.54  3.26  3.82  3.96  3.54      18.12  \n",
              "541              1.3      3.3   1.1  3.56  3.43  3.56  3.56  3.95      18.06  \n",
              "550              1.3      3.3   1.1  3.56  3.43  3.56  3.56  3.95      18.06  \n",
              "16               1.1      3.4   NaN  3.82  3.82  3.12  3.54  3.68      17.98  \n",
              "229              0.9      4.0   NaN  3.80  3.60  3.40  3.40  3.60      17.80  \n",
              "415              1.2      3.3   0.8  3.69  3.43  3.43  3.82  3.43      17.80  \n",
              "122              1.1      3.5   NaN  3.80  3.65  3.65  3.20  3.35      17.65  \n",
              "399              0.8      3.6   NaN  3.28  3.44  3.60  3.44  3.60      17.36  \n",
              "388              1.0      3.4   NaN  3.68  3.54  3.26  3.40  3.40      17.28  \n",
              "2                1.2      3.2   NaN  3.56  3.32  3.32  3.68  3.32      17.20  \n",
              "204              1.1      3.5   NaN  3.20  3.35  3.35  3.50  3.80      17.20  \n",
              "9                0.8      3.7   NaN  3.19  3.70  3.70  3.36  3.19      17.14  \n",
              "377              1.0      3.4   NaN  3.68  3.26  3.54  3.40  3.12      17.00  \n",
              "15               1.1      3.2   NaN  3.56  3.56  2.96  3.32  3.44      16.84  \n",
              "170              1.1      3.2   NaN  3.56  3.56  2.96  3.32  3.44      16.84  \n",
              "290              1.3      3.1   NaN  3.32  3.21  3.32  3.32  3.65      16.82  \n",
              "543              1.3      3.1   1.1  3.32  3.21  3.32  3.32  3.65      16.82  \n",
              "545              1.3      3.1   1.1  3.32  3.21  3.32  3.32  3.65      16.82  \n",
              "546              1.3      3.1   1.1  3.32  3.21  3.32  3.32  3.65      16.82  \n",
              "547              1.3      3.1   1.1  3.32  3.21  3.32  3.32  3.65      16.82  \n",
              "548              1.3      3.1   1.1  3.32  3.21  3.32  3.32  3.65      16.82  \n",
              "700              1.3      3.1   1.1  3.32  3.21  3.32  3.32  3.65      16.82  \n",
              "701              1.3      3.1   1.1  3.32  3.21  3.32  3.32  3.65      16.82  \n",
              "\n",
              "[50 rows x 22 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-839d775c-c456-4c78-8597-58cd75bcd891\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>team</th>\n",
              "      <th>pos</th>\n",
              "      <th>name</th>\n",
              "      <th>cost</th>\n",
              "      <th>selected_by_percent</th>\n",
              "      <th>goals_scored</th>\n",
              "      <th>assists</th>\n",
              "      <th>bps</th>\n",
              "      <th>ict_index</th>\n",
              "      <th>...</th>\n",
              "      <th>minutes</th>\n",
              "      <th>home_adjustment</th>\n",
              "      <th>xPallgw</th>\n",
              "      <th>xCSP</th>\n",
              "      <th>gw12</th>\n",
              "      <th>gw13</th>\n",
              "      <th>gw14</th>\n",
              "      <th>gw15</th>\n",
              "      <th>gw16</th>\n",
              "      <th>5GW Total</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>264</th>\n",
              "      <td>308</td>\n",
              "      <td>Liverpool</td>\n",
              "      <td>M</td>\n",
              "      <td>Salah</td>\n",
              "      <td>12.9</td>\n",
              "      <td>44.8</td>\n",
              "      <td>8</td>\n",
              "      <td>4</td>\n",
              "      <td>259</td>\n",
              "      <td>120.4</td>\n",
              "      <td>...</td>\n",
              "      <td>954</td>\n",
              "      <td>1.2</td>\n",
              "      <td>6.4</td>\n",
              "      <td>NaN</td>\n",
              "      <td>6.84</td>\n",
              "      <td>5.96</td>\n",
              "      <td>7.72</td>\n",
              "      <td>8.16</td>\n",
              "      <td>6.84</td>\n",
              "      <td>35.52</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>61</th>\n",
              "      <td>355</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>F</td>\n",
              "      <td>Haaland</td>\n",
              "      <td>14.0</td>\n",
              "      <td>82.5</td>\n",
              "      <td>11</td>\n",
              "      <td>2</td>\n",
              "      <td>318</td>\n",
              "      <td>115.9</td>\n",
              "      <td>...</td>\n",
              "      <td>934</td>\n",
              "      <td>1.3</td>\n",
              "      <td>6.1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>6.92</td>\n",
              "      <td>6.51</td>\n",
              "      <td>6.92</td>\n",
              "      <td>6.92</td>\n",
              "      <td>8.15</td>\n",
              "      <td>35.42</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>151</th>\n",
              "      <td>108</td>\n",
              "      <td>Brentford</td>\n",
              "      <td>M</td>\n",
              "      <td>Mbeumo</td>\n",
              "      <td>6.8</td>\n",
              "      <td>21.6</td>\n",
              "      <td>6</td>\n",
              "      <td>3</td>\n",
              "      <td>211</td>\n",
              "      <td>98.5</td>\n",
              "      <td>...</td>\n",
              "      <td>990</td>\n",
              "      <td>1.1</td>\n",
              "      <td>5.8</td>\n",
              "      <td>NaN</td>\n",
              "      <td>5.42</td>\n",
              "      <td>5.42</td>\n",
              "      <td>6.56</td>\n",
              "      <td>5.42</td>\n",
              "      <td>6.94</td>\n",
              "      <td>29.76</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>103</th>\n",
              "      <td>19</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>M</td>\n",
              "      <td>Saka</td>\n",
              "      <td>8.6</td>\n",
              "      <td>50.9</td>\n",
              "      <td>4</td>\n",
              "      <td>5</td>\n",
              "      <td>244</td>\n",
              "      <td>101.9</td>\n",
              "      <td>...</td>\n",
              "      <td>865</td>\n",
              "      <td>1.2</td>\n",
              "      <td>4.6</td>\n",
              "      <td>NaN</td>\n",
              "      <td>5.38</td>\n",
              "      <td>4.86</td>\n",
              "      <td>4.86</td>\n",
              "      <td>5.64</td>\n",
              "      <td>4.86</td>\n",
              "      <td>25.60</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>306</th>\n",
              "      <td>373</td>\n",
              "      <td>Manchester United</td>\n",
              "      <td>M</td>\n",
              "      <td>B.Fernandes</td>\n",
              "      <td>8.3</td>\n",
              "      <td>13.5</td>\n",
              "      <td>3</td>\n",
              "      <td>2</td>\n",
              "      <td>208</td>\n",
              "      <td>101.4</td>\n",
              "      <td>...</td>\n",
              "      <td>990</td>\n",
              "      <td>1.1</td>\n",
              "      <td>4.3</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4.99</td>\n",
              "      <td>4.76</td>\n",
              "      <td>4.99</td>\n",
              "      <td>4.30</td>\n",
              "      <td>4.99</td>\n",
              "      <td>24.03</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>383</th>\n",
              "      <td>526</td>\n",
              "      <td>West Ham</td>\n",
              "      <td>M</td>\n",
              "      <td>Bowen</td>\n",
              "      <td>7.5</td>\n",
              "      <td>22.4</td>\n",
              "      <td>7</td>\n",
              "      <td>1</td>\n",
              "      <td>202</td>\n",
              "      <td>89.6</td>\n",
              "      <td>...</td>\n",
              "      <td>990</td>\n",
              "      <td>1.0</td>\n",
              "      <td>4.6</td>\n",
              "      <td>NaN</td>\n",
              "      <td>5.12</td>\n",
              "      <td>4.86</td>\n",
              "      <td>4.34</td>\n",
              "      <td>4.60</td>\n",
              "      <td>4.60</td>\n",
              "      <td>23.52</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>380</th>\n",
              "      <td>516</td>\n",
              "      <td>Tottenham</td>\n",
              "      <td>M</td>\n",
              "      <td>Son</td>\n",
              "      <td>9.6</td>\n",
              "      <td>39.7</td>\n",
              "      <td>8</td>\n",
              "      <td>1</td>\n",
              "      <td>249</td>\n",
              "      <td>96.6</td>\n",
              "      <td>...</td>\n",
              "      <td>886</td>\n",
              "      <td>1.0</td>\n",
              "      <td>4.6</td>\n",
              "      <td>NaN</td>\n",
              "      <td>5.12</td>\n",
              "      <td>4.34</td>\n",
              "      <td>4.86</td>\n",
              "      <td>4.60</td>\n",
              "      <td>4.08</td>\n",
              "      <td>23.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>29</th>\n",
              "      <td>211</td>\n",
              "      <td>Chelsea</td>\n",
              "      <td>F</td>\n",
              "      <td>N.Jackson</td>\n",
              "      <td>6.8</td>\n",
              "      <td>4.4</td>\n",
              "      <td>5</td>\n",
              "      <td>0</td>\n",
              "      <td>128</td>\n",
              "      <td>74.2</td>\n",
              "      <td>...</td>\n",
              "      <td>758</td>\n",
              "      <td>1.1</td>\n",
              "      <td>4.7</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4.16</td>\n",
              "      <td>4.43</td>\n",
              "      <td>4.43</td>\n",
              "      <td>4.70</td>\n",
              "      <td>5.24</td>\n",
              "      <td>22.96</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>315</th>\n",
              "      <td>396</td>\n",
              "      <td>Manchester United</td>\n",
              "      <td>M</td>\n",
              "      <td>Rashford</td>\n",
              "      <td>8.6</td>\n",
              "      <td>13.3</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>87</td>\n",
              "      <td>58.7</td>\n",
              "      <td>...</td>\n",
              "      <td>841</td>\n",
              "      <td>1.1</td>\n",
              "      <td>4.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4.60</td>\n",
              "      <td>4.40</td>\n",
              "      <td>4.60</td>\n",
              "      <td>4.00</td>\n",
              "      <td>4.60</td>\n",
              "      <td>22.20</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>65</th>\n",
              "      <td>415</td>\n",
              "      <td>Newcastle United</td>\n",
              "      <td>F</td>\n",
              "      <td>Isak</td>\n",
              "      <td>7.4</td>\n",
              "      <td>12.5</td>\n",
              "      <td>6</td>\n",
              "      <td>0</td>\n",
              "      <td>173</td>\n",
              "      <td>55.5</td>\n",
              "      <td>...</td>\n",
              "      <td>491</td>\n",
              "      <td>1.2</td>\n",
              "      <td>4.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4.60</td>\n",
              "      <td>4.20</td>\n",
              "      <td>4.20</td>\n",
              "      <td>4.60</td>\n",
              "      <td>4.40</td>\n",
              "      <td>22.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>49</th>\n",
              "      <td>293</td>\n",
              "      <td>Liverpool</td>\n",
              "      <td>F</td>\n",
              "      <td>Darwin</td>\n",
              "      <td>7.5</td>\n",
              "      <td>16.2</td>\n",
              "      <td>4</td>\n",
              "      <td>5</td>\n",
              "      <td>151</td>\n",
              "      <td>63.6</td>\n",
              "      <td>...</td>\n",
              "      <td>506</td>\n",
              "      <td>1.2</td>\n",
              "      <td>4.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4.20</td>\n",
              "      <td>3.80</td>\n",
              "      <td>4.60</td>\n",
              "      <td>4.80</td>\n",
              "      <td>4.20</td>\n",
              "      <td>21.60</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>60</td>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>F</td>\n",
              "      <td>Watkins</td>\n",
              "      <td>8.4</td>\n",
              "      <td>43.0</td>\n",
              "      <td>5</td>\n",
              "      <td>8</td>\n",
              "      <td>246</td>\n",
              "      <td>100.7</td>\n",
              "      <td>...</td>\n",
              "      <td>950</td>\n",
              "      <td>1.1</td>\n",
              "      <td>4.2</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4.64</td>\n",
              "      <td>4.42</td>\n",
              "      <td>4.42</td>\n",
              "      <td>3.76</td>\n",
              "      <td>3.98</td>\n",
              "      <td>21.22</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>60</th>\n",
              "      <td>343</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>F</td>\n",
              "      <td>J.Alvarez</td>\n",
              "      <td>7.2</td>\n",
              "      <td>33.7</td>\n",
              "      <td>4</td>\n",
              "      <td>5</td>\n",
              "      <td>255</td>\n",
              "      <td>89.4</td>\n",
              "      <td>...</td>\n",
              "      <td>908</td>\n",
              "      <td>1.3</td>\n",
              "      <td>3.8</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4.16</td>\n",
              "      <td>3.98</td>\n",
              "      <td>4.16</td>\n",
              "      <td>4.16</td>\n",
              "      <td>4.70</td>\n",
              "      <td>21.16</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>542</th>\n",
              "      <td>342</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>D</td>\n",
              "      <td>Aké</td>\n",
              "      <td>5.0</td>\n",
              "      <td>5.5</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>141</td>\n",
              "      <td>32.6</td>\n",
              "      <td>...</td>\n",
              "      <td>552</td>\n",
              "      <td>1.3</td>\n",
              "      <td>3.8</td>\n",
              "      <td>1.1</td>\n",
              "      <td>4.16</td>\n",
              "      <td>3.98</td>\n",
              "      <td>4.16</td>\n",
              "      <td>4.16</td>\n",
              "      <td>4.70</td>\n",
              "      <td>21.16</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>172</th>\n",
              "      <td>143</td>\n",
              "      <td>Brighton</td>\n",
              "      <td>M</td>\n",
              "      <td>Mitoma</td>\n",
              "      <td>6.5</td>\n",
              "      <td>36.6</td>\n",
              "      <td>3</td>\n",
              "      <td>4</td>\n",
              "      <td>169</td>\n",
              "      <td>83.3</td>\n",
              "      <td>...</td>\n",
              "      <td>935</td>\n",
              "      <td>1.1</td>\n",
              "      <td>3.9</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4.47</td>\n",
              "      <td>4.47</td>\n",
              "      <td>3.52</td>\n",
              "      <td>4.09</td>\n",
              "      <td>4.28</td>\n",
              "      <td>20.83</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>294</th>\n",
              "      <td>353</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>M</td>\n",
              "      <td>Foden</td>\n",
              "      <td>7.5</td>\n",
              "      <td>9.9</td>\n",
              "      <td>3</td>\n",
              "      <td>3</td>\n",
              "      <td>208</td>\n",
              "      <td>85.8</td>\n",
              "      <td>...</td>\n",
              "      <td>830</td>\n",
              "      <td>1.3</td>\n",
              "      <td>3.7</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4.04</td>\n",
              "      <td>3.87</td>\n",
              "      <td>4.04</td>\n",
              "      <td>4.04</td>\n",
              "      <td>4.55</td>\n",
              "      <td>20.54</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>375</th>\n",
              "      <td>504</td>\n",
              "      <td>Tottenham</td>\n",
              "      <td>M</td>\n",
              "      <td>Maddison</td>\n",
              "      <td>8.1</td>\n",
              "      <td>37.6</td>\n",
              "      <td>3</td>\n",
              "      <td>6</td>\n",
              "      <td>230</td>\n",
              "      <td>109.6</td>\n",
              "      <td>...</td>\n",
              "      <td>882</td>\n",
              "      <td>1.0</td>\n",
              "      <td>4.1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4.52</td>\n",
              "      <td>3.89</td>\n",
              "      <td>4.31</td>\n",
              "      <td>4.10</td>\n",
              "      <td>3.68</td>\n",
              "      <td>20.50</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>325</th>\n",
              "      <td>412</td>\n",
              "      <td>Newcastle United</td>\n",
              "      <td>M</td>\n",
              "      <td>Gordon</td>\n",
              "      <td>5.7</td>\n",
              "      <td>8.6</td>\n",
              "      <td>4</td>\n",
              "      <td>4</td>\n",
              "      <td>170</td>\n",
              "      <td>63.9</td>\n",
              "      <td>...</td>\n",
              "      <td>790</td>\n",
              "      <td>1.2</td>\n",
              "      <td>3.7</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4.21</td>\n",
              "      <td>3.87</td>\n",
              "      <td>3.87</td>\n",
              "      <td>4.21</td>\n",
              "      <td>4.04</td>\n",
              "      <td>20.20</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>206</th>\n",
              "      <td>362</td>\n",
              "      <td>Chelsea</td>\n",
              "      <td>M</td>\n",
              "      <td>Palmer</td>\n",
              "      <td>5.1</td>\n",
              "      <td>5.0</td>\n",
              "      <td>3</td>\n",
              "      <td>3</td>\n",
              "      <td>144</td>\n",
              "      <td>53.1</td>\n",
              "      <td>...</td>\n",
              "      <td>512</td>\n",
              "      <td>1.1</td>\n",
              "      <td>4.1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.68</td>\n",
              "      <td>3.89</td>\n",
              "      <td>3.89</td>\n",
              "      <td>4.10</td>\n",
              "      <td>4.52</td>\n",
              "      <td>20.08</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>262</th>\n",
              "      <td>303</td>\n",
              "      <td>Liverpool</td>\n",
              "      <td>M</td>\n",
              "      <td>Luis Díaz</td>\n",
              "      <td>7.4</td>\n",
              "      <td>6.9</td>\n",
              "      <td>3</td>\n",
              "      <td>1</td>\n",
              "      <td>108</td>\n",
              "      <td>44.8</td>\n",
              "      <td>...</td>\n",
              "      <td>631</td>\n",
              "      <td>1.2</td>\n",
              "      <td>3.6</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.76</td>\n",
              "      <td>3.44</td>\n",
              "      <td>4.08</td>\n",
              "      <td>4.24</td>\n",
              "      <td>3.76</td>\n",
              "      <td>19.28</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>113</th>\n",
              "      <td>43</td>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>M</td>\n",
              "      <td>Douglas Luiz</td>\n",
              "      <td>5.6</td>\n",
              "      <td>11.7</td>\n",
              "      <td>5</td>\n",
              "      <td>1</td>\n",
              "      <td>257</td>\n",
              "      <td>69.3</td>\n",
              "      <td>...</td>\n",
              "      <td>933</td>\n",
              "      <td>1.1</td>\n",
              "      <td>3.8</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4.16</td>\n",
              "      <td>3.98</td>\n",
              "      <td>3.98</td>\n",
              "      <td>3.44</td>\n",
              "      <td>3.62</td>\n",
              "      <td>19.18</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>100</th>\n",
              "      <td>14</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>M</td>\n",
              "      <td>Ødegaard</td>\n",
              "      <td>8.4</td>\n",
              "      <td>16.9</td>\n",
              "      <td>3</td>\n",
              "      <td>2</td>\n",
              "      <td>161</td>\n",
              "      <td>65.3</td>\n",
              "      <td>...</td>\n",
              "      <td>789</td>\n",
              "      <td>1.2</td>\n",
              "      <td>3.5</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.95</td>\n",
              "      <td>3.65</td>\n",
              "      <td>3.65</td>\n",
              "      <td>4.10</td>\n",
              "      <td>3.65</td>\n",
              "      <td>19.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>12</th>\n",
              "      <td>119</td>\n",
              "      <td>Brentford</td>\n",
              "      <td>F</td>\n",
              "      <td>Wissa</td>\n",
              "      <td>5.9</td>\n",
              "      <td>9.2</td>\n",
              "      <td>3</td>\n",
              "      <td>2</td>\n",
              "      <td>155</td>\n",
              "      <td>61.1</td>\n",
              "      <td>...</td>\n",
              "      <td>921</td>\n",
              "      <td>1.1</td>\n",
              "      <td>3.7</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.53</td>\n",
              "      <td>3.53</td>\n",
              "      <td>4.04</td>\n",
              "      <td>3.53</td>\n",
              "      <td>4.21</td>\n",
              "      <td>18.84</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>544</th>\n",
              "      <td>350</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>D</td>\n",
              "      <td>Rúben</td>\n",
              "      <td>5.5</td>\n",
              "      <td>7.5</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>137</td>\n",
              "      <td>25.8</td>\n",
              "      <td>...</td>\n",
              "      <td>735</td>\n",
              "      <td>1.3</td>\n",
              "      <td>3.4</td>\n",
              "      <td>1.1</td>\n",
              "      <td>3.68</td>\n",
              "      <td>3.54</td>\n",
              "      <td>3.68</td>\n",
              "      <td>3.68</td>\n",
              "      <td>4.10</td>\n",
              "      <td>18.68</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>549</th>\n",
              "      <td>369</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>D</td>\n",
              "      <td>Walker</td>\n",
              "      <td>5.3</td>\n",
              "      <td>16.7</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>224</td>\n",
              "      <td>37.8</td>\n",
              "      <td>...</td>\n",
              "      <td>990</td>\n",
              "      <td>1.3</td>\n",
              "      <td>3.4</td>\n",
              "      <td>1.1</td>\n",
              "      <td>3.68</td>\n",
              "      <td>3.54</td>\n",
              "      <td>3.68</td>\n",
              "      <td>3.68</td>\n",
              "      <td>4.10</td>\n",
              "      <td>18.68</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>217</th>\n",
              "      <td>226</td>\n",
              "      <td>Crystal Palace</td>\n",
              "      <td>M</td>\n",
              "      <td>Eze</td>\n",
              "      <td>6.1</td>\n",
              "      <td>3.2</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>124</td>\n",
              "      <td>63.6</td>\n",
              "      <td>...</td>\n",
              "      <td>659</td>\n",
              "      <td>1.0</td>\n",
              "      <td>3.6</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.76</td>\n",
              "      <td>3.92</td>\n",
              "      <td>3.44</td>\n",
              "      <td>3.92</td>\n",
              "      <td>3.44</td>\n",
              "      <td>18.48</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>392</th>\n",
              "      <td>664</td>\n",
              "      <td>West Ham</td>\n",
              "      <td>M</td>\n",
              "      <td>Ward-Prowse</td>\n",
              "      <td>6.2</td>\n",
              "      <td>9.5</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "      <td>228</td>\n",
              "      <td>73.8</td>\n",
              "      <td>...</td>\n",
              "      <td>872</td>\n",
              "      <td>1.0</td>\n",
              "      <td>3.6</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.92</td>\n",
              "      <td>3.76</td>\n",
              "      <td>3.44</td>\n",
              "      <td>3.60</td>\n",
              "      <td>3.60</td>\n",
              "      <td>18.32</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>257</th>\n",
              "      <td>294</td>\n",
              "      <td>Liverpool</td>\n",
              "      <td>M</td>\n",
              "      <td>Diogo J.</td>\n",
              "      <td>7.7</td>\n",
              "      <td>1.8</td>\n",
              "      <td>3</td>\n",
              "      <td>2</td>\n",
              "      <td>104</td>\n",
              "      <td>55.2</td>\n",
              "      <td>...</td>\n",
              "      <td>496</td>\n",
              "      <td>1.2</td>\n",
              "      <td>3.4</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.54</td>\n",
              "      <td>3.26</td>\n",
              "      <td>3.82</td>\n",
              "      <td>3.96</td>\n",
              "      <td>3.54</td>\n",
              "      <td>18.12</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>541</th>\n",
              "      <td>341</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>D</td>\n",
              "      <td>Akanji</td>\n",
              "      <td>4.9</td>\n",
              "      <td>4.7</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>154</td>\n",
              "      <td>30.7</td>\n",
              "      <td>...</td>\n",
              "      <td>720</td>\n",
              "      <td>1.3</td>\n",
              "      <td>3.3</td>\n",
              "      <td>1.1</td>\n",
              "      <td>3.56</td>\n",
              "      <td>3.43</td>\n",
              "      <td>3.56</td>\n",
              "      <td>3.56</td>\n",
              "      <td>3.95</td>\n",
              "      <td>18.06</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>550</th>\n",
              "      <td>616</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>D</td>\n",
              "      <td>Gvardiol</td>\n",
              "      <td>5.0</td>\n",
              "      <td>4.5</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>145</td>\n",
              "      <td>25.7</td>\n",
              "      <td>...</td>\n",
              "      <td>641</td>\n",
              "      <td>1.3</td>\n",
              "      <td>3.3</td>\n",
              "      <td>1.1</td>\n",
              "      <td>3.56</td>\n",
              "      <td>3.43</td>\n",
              "      <td>3.56</td>\n",
              "      <td>3.56</td>\n",
              "      <td>3.95</td>\n",
              "      <td>18.06</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>16</th>\n",
              "      <td>135</td>\n",
              "      <td>Brighton</td>\n",
              "      <td>F</td>\n",
              "      <td>João Pedro</td>\n",
              "      <td>5.3</td>\n",
              "      <td>8.7</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>96</td>\n",
              "      <td>51.3</td>\n",
              "      <td>...</td>\n",
              "      <td>533</td>\n",
              "      <td>1.1</td>\n",
              "      <td>3.4</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.82</td>\n",
              "      <td>3.82</td>\n",
              "      <td>3.12</td>\n",
              "      <td>3.54</td>\n",
              "      <td>3.68</td>\n",
              "      <td>17.98</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>229</th>\n",
              "      <td>249</td>\n",
              "      <td>Everton</td>\n",
              "      <td>M</td>\n",
              "      <td>A.Doucoure</td>\n",
              "      <td>5.5</td>\n",
              "      <td>0.7</td>\n",
              "      <td>3</td>\n",
              "      <td>1</td>\n",
              "      <td>148</td>\n",
              "      <td>76.8</td>\n",
              "      <td>...</td>\n",
              "      <td>948</td>\n",
              "      <td>0.9</td>\n",
              "      <td>4.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.80</td>\n",
              "      <td>3.60</td>\n",
              "      <td>3.40</td>\n",
              "      <td>3.40</td>\n",
              "      <td>3.60</td>\n",
              "      <td>17.80</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>415</th>\n",
              "      <td>29</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>D</td>\n",
              "      <td>White</td>\n",
              "      <td>5.7</td>\n",
              "      <td>15.4</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>236</td>\n",
              "      <td>48.2</td>\n",
              "      <td>...</td>\n",
              "      <td>947</td>\n",
              "      <td>1.2</td>\n",
              "      <td>3.3</td>\n",
              "      <td>0.8</td>\n",
              "      <td>3.69</td>\n",
              "      <td>3.43</td>\n",
              "      <td>3.43</td>\n",
              "      <td>3.82</td>\n",
              "      <td>3.43</td>\n",
              "      <td>17.80</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>122</th>\n",
              "      <td>599</td>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>M</td>\n",
              "      <td>Diaby</td>\n",
              "      <td>6.8</td>\n",
              "      <td>14.7</td>\n",
              "      <td>3</td>\n",
              "      <td>5</td>\n",
              "      <td>193</td>\n",
              "      <td>78.5</td>\n",
              "      <td>...</td>\n",
              "      <td>883</td>\n",
              "      <td>1.1</td>\n",
              "      <td>3.5</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.80</td>\n",
              "      <td>3.65</td>\n",
              "      <td>3.65</td>\n",
              "      <td>3.20</td>\n",
              "      <td>3.35</td>\n",
              "      <td>17.65</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>399</th>\n",
              "      <td>557</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>M</td>\n",
              "      <td>Hee Chan</td>\n",
              "      <td>5.5</td>\n",
              "      <td>5.0</td>\n",
              "      <td>6</td>\n",
              "      <td>2</td>\n",
              "      <td>181</td>\n",
              "      <td>63.8</td>\n",
              "      <td>...</td>\n",
              "      <td>681</td>\n",
              "      <td>0.8</td>\n",
              "      <td>3.6</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.28</td>\n",
              "      <td>3.44</td>\n",
              "      <td>3.60</td>\n",
              "      <td>3.44</td>\n",
              "      <td>3.60</td>\n",
              "      <td>17.36</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>388</th>\n",
              "      <td>539</td>\n",
              "      <td>West Ham</td>\n",
              "      <td>M</td>\n",
              "      <td>L.Paquetá</td>\n",
              "      <td>6.0</td>\n",
              "      <td>1.4</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>125</td>\n",
              "      <td>47.2</td>\n",
              "      <td>...</td>\n",
              "      <td>885</td>\n",
              "      <td>1.0</td>\n",
              "      <td>3.4</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.68</td>\n",
              "      <td>3.54</td>\n",
              "      <td>3.26</td>\n",
              "      <td>3.40</td>\n",
              "      <td>3.40</td>\n",
              "      <td>17.28</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>13</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>F</td>\n",
              "      <td>Nketiah</td>\n",
              "      <td>5.7</td>\n",
              "      <td>10.5</td>\n",
              "      <td>5</td>\n",
              "      <td>2</td>\n",
              "      <td>157</td>\n",
              "      <td>53.4</td>\n",
              "      <td>...</td>\n",
              "      <td>757</td>\n",
              "      <td>1.2</td>\n",
              "      <td>3.2</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.56</td>\n",
              "      <td>3.32</td>\n",
              "      <td>3.32</td>\n",
              "      <td>3.68</td>\n",
              "      <td>3.32</td>\n",
              "      <td>17.20</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>204</th>\n",
              "      <td>216</td>\n",
              "      <td>Chelsea</td>\n",
              "      <td>M</td>\n",
              "      <td>Sterling</td>\n",
              "      <td>6.9</td>\n",
              "      <td>6.6</td>\n",
              "      <td>3</td>\n",
              "      <td>4</td>\n",
              "      <td>153</td>\n",
              "      <td>78.9</td>\n",
              "      <td>...</td>\n",
              "      <td>900</td>\n",
              "      <td>1.1</td>\n",
              "      <td>3.5</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.20</td>\n",
              "      <td>3.35</td>\n",
              "      <td>3.35</td>\n",
              "      <td>3.50</td>\n",
              "      <td>3.80</td>\n",
              "      <td>17.20</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>85</td>\n",
              "      <td>Bournemouth</td>\n",
              "      <td>F</td>\n",
              "      <td>Solanke</td>\n",
              "      <td>6.4</td>\n",
              "      <td>2.4</td>\n",
              "      <td>4</td>\n",
              "      <td>1</td>\n",
              "      <td>109</td>\n",
              "      <td>66.7</td>\n",
              "      <td>...</td>\n",
              "      <td>978</td>\n",
              "      <td>0.8</td>\n",
              "      <td>3.7</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.19</td>\n",
              "      <td>3.70</td>\n",
              "      <td>3.70</td>\n",
              "      <td>3.36</td>\n",
              "      <td>3.19</td>\n",
              "      <td>17.14</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>377</th>\n",
              "      <td>509</td>\n",
              "      <td>Tottenham</td>\n",
              "      <td>M</td>\n",
              "      <td>Richarlison</td>\n",
              "      <td>6.7</td>\n",
              "      <td>1.4</td>\n",
              "      <td>1</td>\n",
              "      <td>3</td>\n",
              "      <td>49</td>\n",
              "      <td>48.3</td>\n",
              "      <td>...</td>\n",
              "      <td>535</td>\n",
              "      <td>1.0</td>\n",
              "      <td>3.4</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.68</td>\n",
              "      <td>3.26</td>\n",
              "      <td>3.54</td>\n",
              "      <td>3.40</td>\n",
              "      <td>3.12</td>\n",
              "      <td>17.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>15</th>\n",
              "      <td>132</td>\n",
              "      <td>Brighton</td>\n",
              "      <td>F</td>\n",
              "      <td>Ferguson</td>\n",
              "      <td>6.0</td>\n",
              "      <td>8.0</td>\n",
              "      <td>5</td>\n",
              "      <td>0</td>\n",
              "      <td>137</td>\n",
              "      <td>47.6</td>\n",
              "      <td>...</td>\n",
              "      <td>577</td>\n",
              "      <td>1.1</td>\n",
              "      <td>3.2</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.56</td>\n",
              "      <td>3.56</td>\n",
              "      <td>2.96</td>\n",
              "      <td>3.32</td>\n",
              "      <td>3.44</td>\n",
              "      <td>16.84</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>170</th>\n",
              "      <td>140</td>\n",
              "      <td>Brighton</td>\n",
              "      <td>M</td>\n",
              "      <td>March</td>\n",
              "      <td>6.2</td>\n",
              "      <td>3.1</td>\n",
              "      <td>3</td>\n",
              "      <td>1</td>\n",
              "      <td>134</td>\n",
              "      <td>46.4</td>\n",
              "      <td>...</td>\n",
              "      <td>555</td>\n",
              "      <td>1.1</td>\n",
              "      <td>3.2</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.56</td>\n",
              "      <td>3.56</td>\n",
              "      <td>2.96</td>\n",
              "      <td>3.32</td>\n",
              "      <td>3.44</td>\n",
              "      <td>16.84</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>290</th>\n",
              "      <td>344</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>M</td>\n",
              "      <td>Bernardo</td>\n",
              "      <td>6.3</td>\n",
              "      <td>1.8</td>\n",
              "      <td>3</td>\n",
              "      <td>2</td>\n",
              "      <td>187</td>\n",
              "      <td>59.6</td>\n",
              "      <td>...</td>\n",
              "      <td>638</td>\n",
              "      <td>1.3</td>\n",
              "      <td>3.1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.32</td>\n",
              "      <td>3.21</td>\n",
              "      <td>3.32</td>\n",
              "      <td>3.32</td>\n",
              "      <td>3.65</td>\n",
              "      <td>16.82</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>543</th>\n",
              "      <td>346</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>D</td>\n",
              "      <td>Cancelo</td>\n",
              "      <td>5.8</td>\n",
              "      <td>1.1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>1.3</td>\n",
              "      <td>3.1</td>\n",
              "      <td>1.1</td>\n",
              "      <td>3.32</td>\n",
              "      <td>3.21</td>\n",
              "      <td>3.32</td>\n",
              "      <td>3.32</td>\n",
              "      <td>3.65</td>\n",
              "      <td>16.82</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>545</th>\n",
              "      <td>357</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>D</td>\n",
              "      <td>Laporte</td>\n",
              "      <td>4.9</td>\n",
              "      <td>0.1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>4</td>\n",
              "      <td>2.9</td>\n",
              "      <td>...</td>\n",
              "      <td>11</td>\n",
              "      <td>1.3</td>\n",
              "      <td>3.1</td>\n",
              "      <td>1.1</td>\n",
              "      <td>3.32</td>\n",
              "      <td>3.21</td>\n",
              "      <td>3.32</td>\n",
              "      <td>3.32</td>\n",
              "      <td>3.65</td>\n",
              "      <td>16.82</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>546</th>\n",
              "      <td>358</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>D</td>\n",
              "      <td>R.Lewis</td>\n",
              "      <td>4.3</td>\n",
              "      <td>0.3</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>56</td>\n",
              "      <td>2.3</td>\n",
              "      <td>...</td>\n",
              "      <td>166</td>\n",
              "      <td>1.3</td>\n",
              "      <td>3.1</td>\n",
              "      <td>1.1</td>\n",
              "      <td>3.32</td>\n",
              "      <td>3.21</td>\n",
              "      <td>3.32</td>\n",
              "      <td>3.32</td>\n",
              "      <td>3.65</td>\n",
              "      <td>16.82</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>547</th>\n",
              "      <td>366</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>D</td>\n",
              "      <td>Sergio Gómez</td>\n",
              "      <td>3.9</td>\n",
              "      <td>1.1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>17</td>\n",
              "      <td>3.8</td>\n",
              "      <td>...</td>\n",
              "      <td>15</td>\n",
              "      <td>1.3</td>\n",
              "      <td>3.1</td>\n",
              "      <td>1.1</td>\n",
              "      <td>3.32</td>\n",
              "      <td>3.21</td>\n",
              "      <td>3.32</td>\n",
              "      <td>3.32</td>\n",
              "      <td>3.65</td>\n",
              "      <td>16.82</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>548</th>\n",
              "      <td>368</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>D</td>\n",
              "      <td>Stones</td>\n",
              "      <td>5.3</td>\n",
              "      <td>3.5</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>70</td>\n",
              "      <td>7.9</td>\n",
              "      <td>...</td>\n",
              "      <td>256</td>\n",
              "      <td>1.3</td>\n",
              "      <td>3.1</td>\n",
              "      <td>1.1</td>\n",
              "      <td>3.32</td>\n",
              "      <td>3.21</td>\n",
              "      <td>3.32</td>\n",
              "      <td>3.32</td>\n",
              "      <td>3.65</td>\n",
              "      <td>16.82</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>700</th>\n",
              "      <td>347</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>G</td>\n",
              "      <td>Carson</td>\n",
              "      <td>3.9</td>\n",
              "      <td>0.1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>1.3</td>\n",
              "      <td>3.1</td>\n",
              "      <td>1.1</td>\n",
              "      <td>3.32</td>\n",
              "      <td>3.21</td>\n",
              "      <td>3.32</td>\n",
              "      <td>3.32</td>\n",
              "      <td>3.65</td>\n",
              "      <td>16.82</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>701</th>\n",
              "      <td>352</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>G</td>\n",
              "      <td>Ederson M.</td>\n",
              "      <td>5.5</td>\n",
              "      <td>17.5</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>168</td>\n",
              "      <td>16.6</td>\n",
              "      <td>...</td>\n",
              "      <td>900</td>\n",
              "      <td>1.3</td>\n",
              "      <td>3.1</td>\n",
              "      <td>1.1</td>\n",
              "      <td>3.32</td>\n",
              "      <td>3.21</td>\n",
              "      <td>3.32</td>\n",
              "      <td>3.32</td>\n",
              "      <td>3.65</td>\n",
              "      <td>16.82</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>50 rows × 22 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-839d775c-c456-4c78-8597-58cd75bcd891')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-839d775c-c456-4c78-8597-58cd75bcd891 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-839d775c-c456-4c78-8597-58cd75bcd891');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-f958f7ea-7e41-4928-8346-db0981d659d5\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-f958f7ea-7e41-4928-8346-db0981d659d5')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-f958f7ea-7e41-4928-8346-db0981d659d5 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 49
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import matplotlib.pyplot as plt\n",
        "import pandas as pd\n",
        "import numpy as np\n",
        "import string"
      ],
      "metadata": {
        "id": "JSw3vk9PJvps"
      },
      "execution_count": 50,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "fig, ax = plt.subplots(1, figsize=(10,8))\n",
        "ax.scatter(x=Top50['cost'],y=Top50['5GW Total'],c='DarkBlue')\n",
        "# set labels\n",
        "ax.set_xlabel('cost')\n",
        "ax.set_ylabel('5GW Total')\n",
        "\n",
        "# annotate points in axis\n",
        "for idx, row in Top50.iterrows():\n",
        "    ax.annotate(row['name'], (row['cost'], row['5GW Total']) )\n",
        "# force matplotlib to draw the graph\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 696
        },
        "id": "435FV-_ocWOi",
        "outputId": "c98998c5-81ec-4bdf-ab57-6061635642a1"
      },
      "execution_count": 51,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1000x800 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "rawdfgw228x"
      ],
      "metadata": {
        "id": "mQ58vdHpUd8O",
        "outputId": "21c87f2e-81a5-4e6b-ad1b-9bdbf54b79fe",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 424
        }
      },
      "execution_count": 52,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "      id                     team pos     name  cost  selected_by_percent  \\\n",
              "0      1                  Arsenal   F  Balogun   4.4                  0.2   \n",
              "1      8                  Arsenal   F  G.Jesus   7.8                  2.0   \n",
              "2     13                  Arsenal   F  Nketiah   5.7                 10.5   \n",
              "3     39              Aston Villa   F    Davis   4.9                  0.1   \n",
              "4     44              Aston Villa   F    Duran   5.0                  0.2   \n",
              "..   ...                      ...  ..      ...   ...                  ...   \n",
              "728  647                 West Ham   G    Anang   4.0                  0.1   \n",
              "729  546  Wolverhampton Wanderers   G  Bentley   3.9                  0.5   \n",
              "730  564  Wolverhampton Wanderers   G     King   4.0                  0.7   \n",
              "731  569  Wolverhampton Wanderers   G  José Sá   5.0                  1.6   \n",
              "732  571  Wolverhampton Wanderers   G   Šarkić   4.0                  0.3   \n",
              "\n",
              "     goals_scored  assists  bps  ict_index  ...  minutes  home_adjustment  \\\n",
              "0               0        0    0        0.0  ...        0              1.2   \n",
              "1               1        1   51       26.9  ...      362              1.2   \n",
              "2               5        2  157       53.4  ...      757              1.2   \n",
              "3               0        0    0        0.0  ...        0              1.1   \n",
              "4               2        0   55       13.7  ...       68              1.1   \n",
              "..            ...      ...  ...        ...  ...      ...              ...   \n",
              "728             0        0    0        0.0  ...        0              1.0   \n",
              "729             0        0    0        0.0  ...        0              0.8   \n",
              "730             0        0    0        0.0  ...        0              0.8   \n",
              "731             0        0  195       30.7  ...      990              0.8   \n",
              "732             0        0    0        0.0  ...        0              0.8   \n",
              "\n",
              "     xPallgw  xCSP  gw12  gw13  gw14  gw15  gw16  5GW Total  \n",
              "0        2.0   NaN  2.00  2.00  2.00  2.00  2.00      10.00  \n",
              "1        2.7   NaN  2.91  2.77  2.77  2.98  2.77      14.20  \n",
              "2        3.2   NaN  3.56  3.32  3.32  3.68  3.32      17.20  \n",
              "3        2.0   NaN  2.00  2.00  2.00  2.00  2.00      10.00  \n",
              "4        2.3   NaN  2.36  2.33  2.33  2.24  2.27      11.53  \n",
              "..       ...   ...   ...   ...   ...   ...   ...        ...  \n",
              "728     -1.5  -3.5 -2.20 -1.85 -1.15 -1.50 -1.50      -8.20  \n",
              "729     -0.8  -2.8 -0.24 -0.52 -0.80 -0.52 -0.80      -2.88  \n",
              "730     -0.8  -2.8 -0.24 -0.52 -0.80 -0.52 -0.80      -2.88  \n",
              "731     -0.8  -2.8 -0.24 -0.52 -0.80 -0.52 -0.80      -2.88  \n",
              "732     -0.8  -2.8 -0.24 -0.52 -0.80 -0.52 -0.80      -2.88  \n",
              "\n",
              "[710 rows x 22 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-1b76d059-ab68-4971-9e5d-a7f961d44ad1\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>team</th>\n",
              "      <th>pos</th>\n",
              "      <th>name</th>\n",
              "      <th>cost</th>\n",
              "      <th>selected_by_percent</th>\n",
              "      <th>goals_scored</th>\n",
              "      <th>assists</th>\n",
              "      <th>bps</th>\n",
              "      <th>ict_index</th>\n",
              "      <th>...</th>\n",
              "      <th>minutes</th>\n",
              "      <th>home_adjustment</th>\n",
              "      <th>xPallgw</th>\n",
              "      <th>xCSP</th>\n",
              "      <th>gw12</th>\n",
              "      <th>gw13</th>\n",
              "      <th>gw14</th>\n",
              "      <th>gw15</th>\n",
              "      <th>gw16</th>\n",
              "      <th>5GW Total</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>1</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>F</td>\n",
              "      <td>Balogun</td>\n",
              "      <td>4.4</td>\n",
              "      <td>0.2</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>1.2</td>\n",
              "      <td>2.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>10.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>8</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>F</td>\n",
              "      <td>G.Jesus</td>\n",
              "      <td>7.8</td>\n",
              "      <td>2.0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>51</td>\n",
              "      <td>26.9</td>\n",
              "      <td>...</td>\n",
              "      <td>362</td>\n",
              "      <td>1.2</td>\n",
              "      <td>2.7</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2.91</td>\n",
              "      <td>2.77</td>\n",
              "      <td>2.77</td>\n",
              "      <td>2.98</td>\n",
              "      <td>2.77</td>\n",
              "      <td>14.20</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>13</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>F</td>\n",
              "      <td>Nketiah</td>\n",
              "      <td>5.7</td>\n",
              "      <td>10.5</td>\n",
              "      <td>5</td>\n",
              "      <td>2</td>\n",
              "      <td>157</td>\n",
              "      <td>53.4</td>\n",
              "      <td>...</td>\n",
              "      <td>757</td>\n",
              "      <td>1.2</td>\n",
              "      <td>3.2</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.56</td>\n",
              "      <td>3.32</td>\n",
              "      <td>3.32</td>\n",
              "      <td>3.68</td>\n",
              "      <td>3.32</td>\n",
              "      <td>17.20</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>39</td>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>F</td>\n",
              "      <td>Davis</td>\n",
              "      <td>4.9</td>\n",
              "      <td>0.1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>1.1</td>\n",
              "      <td>2.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>10.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>44</td>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>F</td>\n",
              "      <td>Duran</td>\n",
              "      <td>5.0</td>\n",
              "      <td>0.2</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>55</td>\n",
              "      <td>13.7</td>\n",
              "      <td>...</td>\n",
              "      <td>68</td>\n",
              "      <td>1.1</td>\n",
              "      <td>2.3</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2.36</td>\n",
              "      <td>2.33</td>\n",
              "      <td>2.33</td>\n",
              "      <td>2.24</td>\n",
              "      <td>2.27</td>\n",
              "      <td>11.53</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>728</th>\n",
              "      <td>647</td>\n",
              "      <td>West Ham</td>\n",
              "      <td>G</td>\n",
              "      <td>Anang</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>-1.5</td>\n",
              "      <td>-3.5</td>\n",
              "      <td>-2.20</td>\n",
              "      <td>-1.85</td>\n",
              "      <td>-1.15</td>\n",
              "      <td>-1.50</td>\n",
              "      <td>-1.50</td>\n",
              "      <td>-8.20</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>729</th>\n",
              "      <td>546</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>G</td>\n",
              "      <td>Bentley</td>\n",
              "      <td>3.9</td>\n",
              "      <td>0.5</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0.8</td>\n",
              "      <td>-0.8</td>\n",
              "      <td>-2.8</td>\n",
              "      <td>-0.24</td>\n",
              "      <td>-0.52</td>\n",
              "      <td>-0.80</td>\n",
              "      <td>-0.52</td>\n",
              "      <td>-0.80</td>\n",
              "      <td>-2.88</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>730</th>\n",
              "      <td>564</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>G</td>\n",
              "      <td>King</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.7</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0.8</td>\n",
              "      <td>-0.8</td>\n",
              "      <td>-2.8</td>\n",
              "      <td>-0.24</td>\n",
              "      <td>-0.52</td>\n",
              "      <td>-0.80</td>\n",
              "      <td>-0.52</td>\n",
              "      <td>-0.80</td>\n",
              "      <td>-2.88</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>731</th>\n",
              "      <td>569</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>G</td>\n",
              "      <td>José Sá</td>\n",
              "      <td>5.0</td>\n",
              "      <td>1.6</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>195</td>\n",
              "      <td>30.7</td>\n",
              "      <td>...</td>\n",
              "      <td>990</td>\n",
              "      <td>0.8</td>\n",
              "      <td>-0.8</td>\n",
              "      <td>-2.8</td>\n",
              "      <td>-0.24</td>\n",
              "      <td>-0.52</td>\n",
              "      <td>-0.80</td>\n",
              "      <td>-0.52</td>\n",
              "      <td>-0.80</td>\n",
              "      <td>-2.88</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>732</th>\n",
              "      <td>571</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>G</td>\n",
              "      <td>Šarkić</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.3</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0.8</td>\n",
              "      <td>-0.8</td>\n",
              "      <td>-2.8</td>\n",
              "      <td>-0.24</td>\n",
              "      <td>-0.52</td>\n",
              "      <td>-0.80</td>\n",
              "      <td>-0.52</td>\n",
              "      <td>-0.80</td>\n",
              "      <td>-2.88</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>710 rows × 22 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-1b76d059-ab68-4971-9e5d-a7f961d44ad1')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-1b76d059-ab68-4971-9e5d-a7f961d44ad1 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-1b76d059-ab68-4971-9e5d-a7f961d44ad1');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-b75a7243-0ba9-49db-8fe5-e7a84fdbb9e9\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-b75a7243-0ba9-49db-8fe5-e7a84fdbb9e9')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-b75a7243-0ba9-49db-8fe5-e7a84fdbb9e9 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 52
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "apiplayers = master"
      ],
      "metadata": {
        "id": "3bvpGcxtVMyS"
      },
      "execution_count": 53,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "Mostselected = apiplayers.nlargest(20, 'selected_by_percent')\n",
        "Mostselected"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 677
        },
        "id": "O-wNiNtosYZU",
        "outputId": "9326df68-48ce-44ea-f3d1-768bb41b0271"
      },
      "execution_count": 54,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "      id              team pos        name  cost  selected_by_percent  \\\n",
              "453  355   Manchester City   F     Haaland  14.0                 82.5   \n",
              "17    19           Arsenal   M        Saka   8.6                 50.9   \n",
              "537  430  Newcastle United   D    Trippier   7.0                 49.2   \n",
              "382  308         Liverpool   M       Salah  12.9                 44.8   \n",
              "57    60       Aston Villa   F     Watkins   8.4                 43.0   \n",
              "659  516         Tottenham   M         Son   9.6                 39.7   \n",
              "648  504         Tottenham   M    Maddison   8.1                 37.6   \n",
              "673  524          West Ham   G      Areola   4.3                 37.1   \n",
              "158  143          Brighton   M      Mitoma   6.5                 36.6   \n",
              "34    36       Aston Villa   D        Cash   5.2                 34.0   \n",
              "442  343   Manchester City   F   J.Alvarez   7.2                 33.7   \n",
              "18    20           Arsenal   D      Saliba   5.2                 26.7   \n",
              "675  526          West Ham   M       Bowen   7.5                 22.4   \n",
              "266  220    Crystal Palace   D    Andersen   5.1                 22.0   \n",
              "119  108         Brentford   M      Mbeumo   6.8                 21.6   \n",
              "146  131          Brighton   D   Estupiñan   5.0                 19.6   \n",
              "450  352   Manchester City   G  Ederson M.   5.5                 17.5   \n",
              "12    14           Arsenal   M    Ødegaard   8.4                 16.9   \n",
              "654  511         Tottenham   D      Romero   5.0                 16.9   \n",
              "465  369   Manchester City   D      Walker   5.3                 16.7   \n",
              "\n",
              "     expected_goals  expected_assists  goals_scored  assists  bps  ict_index  \\\n",
              "453           10.59              0.91            11        2  318      115.9   \n",
              "17             4.00              2.93             4        5  244      101.9   \n",
              "537            0.05              3.73             0        6  310       84.1   \n",
              "382            7.80              3.08             8        4  259      120.4   \n",
              "57             4.98              1.47             5        8  246      100.7   \n",
              "659            4.43              2.07             8        1  249       96.6   \n",
              "648            2.80              3.11             3        6  230      109.6   \n",
              "673            0.00              0.00             0        0  203       31.4   \n",
              "158            2.68              2.39             3        4  169       83.3   \n",
              "34             3.27              1.31             2        1  189       55.5   \n",
              "442            3.29              2.30             4        5  255       89.4   \n",
              "18             0.06              0.43             0        1  223       26.3   \n",
              "675            4.84              1.31             7        1  202       89.6   \n",
              "266            0.84              0.65             2        1  261       61.8   \n",
              "119            6.53              3.17             6        3  211       98.5   \n",
              "146            0.90              1.47             1        3  112       45.0   \n",
              "450            0.00              0.02             0        0  168       16.6   \n",
              "12             2.61              1.16             3        2  161       65.3   \n",
              "654            0.78              0.56             2        0  215       41.1   \n",
              "465            0.09              1.04             0        1  224       37.8   \n",
              "\n",
              "     points  points_per_game  minutes  apppoint  assistvalue  \n",
              "453      80              7.3      934         2            3  \n",
              "17       66              6.6      865         2            3  \n",
              "537      68              6.2      947         2            3  \n",
              "382      85              7.7      954         2            3  \n",
              "57       74              6.7      950         2            3  \n",
              "659      80              7.3      886         2            3  \n",
              "648      63              5.7      882         2            3  \n",
              "673      38              3.5      990         2            3  \n",
              "158      52              4.7      935         2            3  \n",
              "34       43              3.9      933         2            3  \n",
              "442      61              5.5      908         2            3  \n",
              "18       46              4.2      990         2            3  \n",
              "675      67              6.1      990         2            3  \n",
              "266      59              5.4      990         2            3  \n",
              "119      72              6.5      990         2            3  \n",
              "146      25              4.2      495         2            3  \n",
              "450      36              3.6      900         2            3  \n",
              "12       48              5.3      789         2            3  \n",
              "654      44              4.0      855         2            3  \n",
              "465      43              3.9      990         2            3  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-bf1310ac-bd0f-4682-ac3c-3ad33d203865\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>team</th>\n",
              "      <th>pos</th>\n",
              "      <th>name</th>\n",
              "      <th>cost</th>\n",
              "      <th>selected_by_percent</th>\n",
              "      <th>expected_goals</th>\n",
              "      <th>expected_assists</th>\n",
              "      <th>goals_scored</th>\n",
              "      <th>assists</th>\n",
              "      <th>bps</th>\n",
              "      <th>ict_index</th>\n",
              "      <th>points</th>\n",
              "      <th>points_per_game</th>\n",
              "      <th>minutes</th>\n",
              "      <th>apppoint</th>\n",
              "      <th>assistvalue</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>453</th>\n",
              "      <td>355</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>F</td>\n",
              "      <td>Haaland</td>\n",
              "      <td>14.0</td>\n",
              "      <td>82.5</td>\n",
              "      <td>10.59</td>\n",
              "      <td>0.91</td>\n",
              "      <td>11</td>\n",
              "      <td>2</td>\n",
              "      <td>318</td>\n",
              "      <td>115.9</td>\n",
              "      <td>80</td>\n",
              "      <td>7.3</td>\n",
              "      <td>934</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>17</th>\n",
              "      <td>19</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>M</td>\n",
              "      <td>Saka</td>\n",
              "      <td>8.6</td>\n",
              "      <td>50.9</td>\n",
              "      <td>4.00</td>\n",
              "      <td>2.93</td>\n",
              "      <td>4</td>\n",
              "      <td>5</td>\n",
              "      <td>244</td>\n",
              "      <td>101.9</td>\n",
              "      <td>66</td>\n",
              "      <td>6.6</td>\n",
              "      <td>865</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>537</th>\n",
              "      <td>430</td>\n",
              "      <td>Newcastle United</td>\n",
              "      <td>D</td>\n",
              "      <td>Trippier</td>\n",
              "      <td>7.0</td>\n",
              "      <td>49.2</td>\n",
              "      <td>0.05</td>\n",
              "      <td>3.73</td>\n",
              "      <td>0</td>\n",
              "      <td>6</td>\n",
              "      <td>310</td>\n",
              "      <td>84.1</td>\n",
              "      <td>68</td>\n",
              "      <td>6.2</td>\n",
              "      <td>947</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>382</th>\n",
              "      <td>308</td>\n",
              "      <td>Liverpool</td>\n",
              "      <td>M</td>\n",
              "      <td>Salah</td>\n",
              "      <td>12.9</td>\n",
              "      <td>44.8</td>\n",
              "      <td>7.80</td>\n",
              "      <td>3.08</td>\n",
              "      <td>8</td>\n",
              "      <td>4</td>\n",
              "      <td>259</td>\n",
              "      <td>120.4</td>\n",
              "      <td>85</td>\n",
              "      <td>7.7</td>\n",
              "      <td>954</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>57</th>\n",
              "      <td>60</td>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>F</td>\n",
              "      <td>Watkins</td>\n",
              "      <td>8.4</td>\n",
              "      <td>43.0</td>\n",
              "      <td>4.98</td>\n",
              "      <td>1.47</td>\n",
              "      <td>5</td>\n",
              "      <td>8</td>\n",
              "      <td>246</td>\n",
              "      <td>100.7</td>\n",
              "      <td>74</td>\n",
              "      <td>6.7</td>\n",
              "      <td>950</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>659</th>\n",
              "      <td>516</td>\n",
              "      <td>Tottenham</td>\n",
              "      <td>M</td>\n",
              "      <td>Son</td>\n",
              "      <td>9.6</td>\n",
              "      <td>39.7</td>\n",
              "      <td>4.43</td>\n",
              "      <td>2.07</td>\n",
              "      <td>8</td>\n",
              "      <td>1</td>\n",
              "      <td>249</td>\n",
              "      <td>96.6</td>\n",
              "      <td>80</td>\n",
              "      <td>7.3</td>\n",
              "      <td>886</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>648</th>\n",
              "      <td>504</td>\n",
              "      <td>Tottenham</td>\n",
              "      <td>M</td>\n",
              "      <td>Maddison</td>\n",
              "      <td>8.1</td>\n",
              "      <td>37.6</td>\n",
              "      <td>2.80</td>\n",
              "      <td>3.11</td>\n",
              "      <td>3</td>\n",
              "      <td>6</td>\n",
              "      <td>230</td>\n",
              "      <td>109.6</td>\n",
              "      <td>63</td>\n",
              "      <td>5.7</td>\n",
              "      <td>882</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>673</th>\n",
              "      <td>524</td>\n",
              "      <td>West Ham</td>\n",
              "      <td>G</td>\n",
              "      <td>Areola</td>\n",
              "      <td>4.3</td>\n",
              "      <td>37.1</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>203</td>\n",
              "      <td>31.4</td>\n",
              "      <td>38</td>\n",
              "      <td>3.5</td>\n",
              "      <td>990</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>158</th>\n",
              "      <td>143</td>\n",
              "      <td>Brighton</td>\n",
              "      <td>M</td>\n",
              "      <td>Mitoma</td>\n",
              "      <td>6.5</td>\n",
              "      <td>36.6</td>\n",
              "      <td>2.68</td>\n",
              "      <td>2.39</td>\n",
              "      <td>3</td>\n",
              "      <td>4</td>\n",
              "      <td>169</td>\n",
              "      <td>83.3</td>\n",
              "      <td>52</td>\n",
              "      <td>4.7</td>\n",
              "      <td>935</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>34</th>\n",
              "      <td>36</td>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>D</td>\n",
              "      <td>Cash</td>\n",
              "      <td>5.2</td>\n",
              "      <td>34.0</td>\n",
              "      <td>3.27</td>\n",
              "      <td>1.31</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>189</td>\n",
              "      <td>55.5</td>\n",
              "      <td>43</td>\n",
              "      <td>3.9</td>\n",
              "      <td>933</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>442</th>\n",
              "      <td>343</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>F</td>\n",
              "      <td>J.Alvarez</td>\n",
              "      <td>7.2</td>\n",
              "      <td>33.7</td>\n",
              "      <td>3.29</td>\n",
              "      <td>2.30</td>\n",
              "      <td>4</td>\n",
              "      <td>5</td>\n",
              "      <td>255</td>\n",
              "      <td>89.4</td>\n",
              "      <td>61</td>\n",
              "      <td>5.5</td>\n",
              "      <td>908</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>18</th>\n",
              "      <td>20</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>D</td>\n",
              "      <td>Saliba</td>\n",
              "      <td>5.2</td>\n",
              "      <td>26.7</td>\n",
              "      <td>0.06</td>\n",
              "      <td>0.43</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>223</td>\n",
              "      <td>26.3</td>\n",
              "      <td>46</td>\n",
              "      <td>4.2</td>\n",
              "      <td>990</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>675</th>\n",
              "      <td>526</td>\n",
              "      <td>West Ham</td>\n",
              "      <td>M</td>\n",
              "      <td>Bowen</td>\n",
              "      <td>7.5</td>\n",
              "      <td>22.4</td>\n",
              "      <td>4.84</td>\n",
              "      <td>1.31</td>\n",
              "      <td>7</td>\n",
              "      <td>1</td>\n",
              "      <td>202</td>\n",
              "      <td>89.6</td>\n",
              "      <td>67</td>\n",
              "      <td>6.1</td>\n",
              "      <td>990</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>266</th>\n",
              "      <td>220</td>\n",
              "      <td>Crystal Palace</td>\n",
              "      <td>D</td>\n",
              "      <td>Andersen</td>\n",
              "      <td>5.1</td>\n",
              "      <td>22.0</td>\n",
              "      <td>0.84</td>\n",
              "      <td>0.65</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>261</td>\n",
              "      <td>61.8</td>\n",
              "      <td>59</td>\n",
              "      <td>5.4</td>\n",
              "      <td>990</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>119</th>\n",
              "      <td>108</td>\n",
              "      <td>Brentford</td>\n",
              "      <td>M</td>\n",
              "      <td>Mbeumo</td>\n",
              "      <td>6.8</td>\n",
              "      <td>21.6</td>\n",
              "      <td>6.53</td>\n",
              "      <td>3.17</td>\n",
              "      <td>6</td>\n",
              "      <td>3</td>\n",
              "      <td>211</td>\n",
              "      <td>98.5</td>\n",
              "      <td>72</td>\n",
              "      <td>6.5</td>\n",
              "      <td>990</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>146</th>\n",
              "      <td>131</td>\n",
              "      <td>Brighton</td>\n",
              "      <td>D</td>\n",
              "      <td>Estupiñan</td>\n",
              "      <td>5.0</td>\n",
              "      <td>19.6</td>\n",
              "      <td>0.90</td>\n",
              "      <td>1.47</td>\n",
              "      <td>1</td>\n",
              "      <td>3</td>\n",
              "      <td>112</td>\n",
              "      <td>45.0</td>\n",
              "      <td>25</td>\n",
              "      <td>4.2</td>\n",
              "      <td>495</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>450</th>\n",
              "      <td>352</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>G</td>\n",
              "      <td>Ederson M.</td>\n",
              "      <td>5.5</td>\n",
              "      <td>17.5</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.02</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>168</td>\n",
              "      <td>16.6</td>\n",
              "      <td>36</td>\n",
              "      <td>3.6</td>\n",
              "      <td>900</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>12</th>\n",
              "      <td>14</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>M</td>\n",
              "      <td>Ødegaard</td>\n",
              "      <td>8.4</td>\n",
              "      <td>16.9</td>\n",
              "      <td>2.61</td>\n",
              "      <td>1.16</td>\n",
              "      <td>3</td>\n",
              "      <td>2</td>\n",
              "      <td>161</td>\n",
              "      <td>65.3</td>\n",
              "      <td>48</td>\n",
              "      <td>5.3</td>\n",
              "      <td>789</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>654</th>\n",
              "      <td>511</td>\n",
              "      <td>Tottenham</td>\n",
              "      <td>D</td>\n",
              "      <td>Romero</td>\n",
              "      <td>5.0</td>\n",
              "      <td>16.9</td>\n",
              "      <td>0.78</td>\n",
              "      <td>0.56</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>215</td>\n",
              "      <td>41.1</td>\n",
              "      <td>44</td>\n",
              "      <td>4.0</td>\n",
              "      <td>855</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>465</th>\n",
              "      <td>369</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>D</td>\n",
              "      <td>Walker</td>\n",
              "      <td>5.3</td>\n",
              "      <td>16.7</td>\n",
              "      <td>0.09</td>\n",
              "      <td>1.04</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>224</td>\n",
              "      <td>37.8</td>\n",
              "      <td>43</td>\n",
              "      <td>3.9</td>\n",
              "      <td>990</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-bf1310ac-bd0f-4682-ac3c-3ad33d203865')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-bf1310ac-bd0f-4682-ac3c-3ad33d203865 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-bf1310ac-bd0f-4682-ac3c-3ad33d203865');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-e0217198-5ba3-484b-a98a-7016454c6dde\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-e0217198-5ba3-484b-a98a-7016454c6dde')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-e0217198-5ba3-484b-a98a-7016454c6dde button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 54
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "ax = sns.barplot(x='selected_by_percent', y='name', data=Mostselected, hue='pos', dodge=False)\n",
        "sns.set(rc={'figure.figsize':(11.7,8.27)})\n",
        "plt.title(\"Most Selected\")\n",
        "plt.xticks(rotation=90)\n",
        "plt.ylabel(\"selected_by_percent\")\n",
        "plt.legend(bbox_to_anchor=(1.05, 1), loc='upper left', borderaxespad=0)\n",
        "plt.gcf().set_size_inches(30,10)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 603
        },
        "id": "8PBz92opthgG",
        "outputId": "c039a9f5-bbcc-424f-97f4-ab5899575113"
      },
      "execution_count": 55,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 3000x1000 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "fbref = pd.read_html('https://fbref.com/en/comps/9/Premier-League-Stats')\n",
        "epltable = fbref[0]\n",
        "epltablexGxGc = epltable.drop(columns=[\n",
        " 'Last 5',\n",
        " 'Attendance',\n",
        " 'Top Team Scorer',\n",
        " 'Goalkeeper',\n",
        " 'Notes'])\n",
        "epltablexGxGc= epltablexGxGc.replace('Newcastle Utd', 'Newcastle United')\n",
        "epltablexGxGc= epltablexGxGc.replace('Wolves','Wolverhampton Wanderers')\n",
        "epltablexGxGc= epltablexGxGc.replace('Leeds United','Leeds')\n",
        "epltablexGxGc= epltablexGxGc.replace('Leicester City','Leicester')\n",
        "epltablexGxGc= epltablexGxGc.replace('Manchester Utd','Manchester United')\n",
        "epltablexGxGc['Squad'] = epltablexGxGc['Squad'].str.replace(r\"[\\\"\\',]\", '')\n",
        "epltablexGxGc= epltablexGxGc.replace('Nottham Forest','Nottingham Forest')\n",
        "epltablexGxGc['xCSP'] = (4 - (epltablexGxGc.xGA * 4/23))\n",
        "epltablexGxGc.rename(columns={'Squad': 'team'}, inplace=True)\n",
        "epltablexGxGc['xG/90'] = (epltablexGxGc.xG / epltablexGxGc.MP)\n",
        "epltablexGxGc['xGA/90'] = (epltablexGxGc.xGA / epltablexGxGc.MP)\n",
        "epltablexGxGc"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 711
        },
        "id": "D8nuKObbLt5s",
        "outputId": "2fbf8f5f-36e3-4f80-ae5b-c04caa3909ce"
      },
      "execution_count": 56,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "<ipython-input-56-f34def3770e4>:14: FutureWarning: The default value of regex will change from True to False in a future version.\n",
            "  epltablexGxGc['Squad'] = epltablexGxGc['Squad'].str.replace(r\"[\\\"\\',]\", '')\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "    Rk                     team  MP  W  D  L  GF  GA  GD  Pts  Pts/MP    xG  \\\n",
              "0    1          Manchester City  11  9  0  2  28   8  20   27    2.45  21.5   \n",
              "1    2                Tottenham  11  8  2  1  23  13  10   26    2.36  18.6   \n",
              "2    3                Liverpool  11  7  3  1  24  10  14   24    2.18  24.8   \n",
              "3    4                  Arsenal  11  7  3  1  23   9  14   24    2.18  19.2   \n",
              "4    5              Aston Villa  11  7  1  3  26  16  10   22    2.00  20.5   \n",
              "5    6         Newcastle United  11  6  2  3  27  11  16   20    1.82  22.9   \n",
              "6    7                 Brighton  11  5  3  3  24  20   4   18    1.64  19.2   \n",
              "7    8        Manchester United  11  6  0  5  12  16  -4   18    1.64  15.3   \n",
              "8    9                Brentford  11  4  4  3  19  14   5   16    1.45  20.5   \n",
              "9   10                  Chelsea  11  4  3  4  17  12   5   15    1.36  22.1   \n",
              "10  11           Crystal Palace  11  4  3  4  10  13  -3   15    1.36  12.0   \n",
              "11  12                 West Ham  11  4  2  5  18  20  -2   14    1.27  15.8   \n",
              "12  13        Nottingham Forest  11  3  4  4  12  15  -3   13    1.18  11.5   \n",
              "13  14  Wolverhampton Wanderers  11  3  3  5  14  19  -5   12    1.09  14.3   \n",
              "14  15                   Fulham  11  3  3  5   9  17  -8   12    1.09  11.4   \n",
              "15  16                  Everton  11  3  2  6  11  15  -4   11    1.00  16.4   \n",
              "16  17               Luton Town  11  1  3  7  10  21 -11    6    0.55  12.5   \n",
              "17  18              Bournemouth  11  1  3  7   9  27 -18    6    0.55  11.4   \n",
              "18  19                  Burnley  11  1  1  9   8  27 -19    4    0.36   9.6   \n",
              "19  20            Sheffield Utd  11  1  1  9   9  30 -21    4    0.36   8.6   \n",
              "\n",
              "     xGA   xGD  xGD/90      xCSP     xG/90    xGA/90  \n",
              "0    8.1  13.4    1.22  2.591304  1.954545  0.736364  \n",
              "1   16.3   2.3    0.21  1.165217  1.690909  1.481818  \n",
              "2   12.9  11.9    1.08  1.756522  2.254545  1.172727  \n",
              "3    8.9  10.3    0.94  2.452174  1.745455  0.809091  \n",
              "4   14.9   5.5    0.50  1.408696  1.863636  1.354545  \n",
              "5   10.8  12.1    1.10  2.121739  2.081818  0.981818  \n",
              "6   15.9   3.3    0.30  1.234783  1.745455  1.445455  \n",
              "7   18.5  -3.1   -0.28  0.782609  1.390909  1.681818  \n",
              "8   14.6   5.9    0.54  1.460870  1.863636  1.327273  \n",
              "9   12.2   9.9    0.90  1.878261  2.009091  1.109091  \n",
              "10  15.2  -3.2   -0.29  1.356522  1.090909  1.381818  \n",
              "11  20.6  -4.7   -0.43  0.417391  1.436364  1.872727  \n",
              "12  16.9  -5.3   -0.49  1.060870  1.045455  1.536364  \n",
              "13  18.8  -4.5   -0.41  0.730435  1.300000  1.709091  \n",
              "14  18.9  -7.5   -0.68  0.713043  1.036364  1.718182  \n",
              "15  13.6   2.8    0.25  1.634783  1.490909  1.236364  \n",
              "16  22.5 -10.0   -0.91  0.086957  1.136364  2.045455  \n",
              "17  23.7 -12.3   -1.12 -0.121739  1.036364  2.154545  \n",
              "18  20.2 -10.6   -0.96  0.486957  0.872727  1.836364  \n",
              "19  24.6 -16.1   -1.46 -0.278261  0.781818  2.236364  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-e763d92b-bd55-4fd3-a614-1cb3619f2b12\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Rk</th>\n",
              "      <th>team</th>\n",
              "      <th>MP</th>\n",
              "      <th>W</th>\n",
              "      <th>D</th>\n",
              "      <th>L</th>\n",
              "      <th>GF</th>\n",
              "      <th>GA</th>\n",
              "      <th>GD</th>\n",
              "      <th>Pts</th>\n",
              "      <th>Pts/MP</th>\n",
              "      <th>xG</th>\n",
              "      <th>xGA</th>\n",
              "      <th>xGD</th>\n",
              "      <th>xGD/90</th>\n",
              "      <th>xCSP</th>\n",
              "      <th>xG/90</th>\n",
              "      <th>xGA/90</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>1</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>11</td>\n",
              "      <td>9</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>28</td>\n",
              "      <td>8</td>\n",
              "      <td>20</td>\n",
              "      <td>27</td>\n",
              "      <td>2.45</td>\n",
              "      <td>21.5</td>\n",
              "      <td>8.1</td>\n",
              "      <td>13.4</td>\n",
              "      <td>1.22</td>\n",
              "      <td>2.591304</td>\n",
              "      <td>1.954545</td>\n",
              "      <td>0.736364</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>2</td>\n",
              "      <td>Tottenham</td>\n",
              "      <td>11</td>\n",
              "      <td>8</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>23</td>\n",
              "      <td>13</td>\n",
              "      <td>10</td>\n",
              "      <td>26</td>\n",
              "      <td>2.36</td>\n",
              "      <td>18.6</td>\n",
              "      <td>16.3</td>\n",
              "      <td>2.3</td>\n",
              "      <td>0.21</td>\n",
              "      <td>1.165217</td>\n",
              "      <td>1.690909</td>\n",
              "      <td>1.481818</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>3</td>\n",
              "      <td>Liverpool</td>\n",
              "      <td>11</td>\n",
              "      <td>7</td>\n",
              "      <td>3</td>\n",
              "      <td>1</td>\n",
              "      <td>24</td>\n",
              "      <td>10</td>\n",
              "      <td>14</td>\n",
              "      <td>24</td>\n",
              "      <td>2.18</td>\n",
              "      <td>24.8</td>\n",
              "      <td>12.9</td>\n",
              "      <td>11.9</td>\n",
              "      <td>1.08</td>\n",
              "      <td>1.756522</td>\n",
              "      <td>2.254545</td>\n",
              "      <td>1.172727</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>4</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>11</td>\n",
              "      <td>7</td>\n",
              "      <td>3</td>\n",
              "      <td>1</td>\n",
              "      <td>23</td>\n",
              "      <td>9</td>\n",
              "      <td>14</td>\n",
              "      <td>24</td>\n",
              "      <td>2.18</td>\n",
              "      <td>19.2</td>\n",
              "      <td>8.9</td>\n",
              "      <td>10.3</td>\n",
              "      <td>0.94</td>\n",
              "      <td>2.452174</td>\n",
              "      <td>1.745455</td>\n",
              "      <td>0.809091</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>5</td>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>11</td>\n",
              "      <td>7</td>\n",
              "      <td>1</td>\n",
              "      <td>3</td>\n",
              "      <td>26</td>\n",
              "      <td>16</td>\n",
              "      <td>10</td>\n",
              "      <td>22</td>\n",
              "      <td>2.00</td>\n",
              "      <td>20.5</td>\n",
              "      <td>14.9</td>\n",
              "      <td>5.5</td>\n",
              "      <td>0.50</td>\n",
              "      <td>1.408696</td>\n",
              "      <td>1.863636</td>\n",
              "      <td>1.354545</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>6</td>\n",
              "      <td>Newcastle United</td>\n",
              "      <td>11</td>\n",
              "      <td>6</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "      <td>27</td>\n",
              "      <td>11</td>\n",
              "      <td>16</td>\n",
              "      <td>20</td>\n",
              "      <td>1.82</td>\n",
              "      <td>22.9</td>\n",
              "      <td>10.8</td>\n",
              "      <td>12.1</td>\n",
              "      <td>1.10</td>\n",
              "      <td>2.121739</td>\n",
              "      <td>2.081818</td>\n",
              "      <td>0.981818</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>7</td>\n",
              "      <td>Brighton</td>\n",
              "      <td>11</td>\n",
              "      <td>5</td>\n",
              "      <td>3</td>\n",
              "      <td>3</td>\n",
              "      <td>24</td>\n",
              "      <td>20</td>\n",
              "      <td>4</td>\n",
              "      <td>18</td>\n",
              "      <td>1.64</td>\n",
              "      <td>19.2</td>\n",
              "      <td>15.9</td>\n",
              "      <td>3.3</td>\n",
              "      <td>0.30</td>\n",
              "      <td>1.234783</td>\n",
              "      <td>1.745455</td>\n",
              "      <td>1.445455</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>8</td>\n",
              "      <td>Manchester United</td>\n",
              "      <td>11</td>\n",
              "      <td>6</td>\n",
              "      <td>0</td>\n",
              "      <td>5</td>\n",
              "      <td>12</td>\n",
              "      <td>16</td>\n",
              "      <td>-4</td>\n",
              "      <td>18</td>\n",
              "      <td>1.64</td>\n",
              "      <td>15.3</td>\n",
              "      <td>18.5</td>\n",
              "      <td>-3.1</td>\n",
              "      <td>-0.28</td>\n",
              "      <td>0.782609</td>\n",
              "      <td>1.390909</td>\n",
              "      <td>1.681818</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>9</td>\n",
              "      <td>Brentford</td>\n",
              "      <td>11</td>\n",
              "      <td>4</td>\n",
              "      <td>4</td>\n",
              "      <td>3</td>\n",
              "      <td>19</td>\n",
              "      <td>14</td>\n",
              "      <td>5</td>\n",
              "      <td>16</td>\n",
              "      <td>1.45</td>\n",
              "      <td>20.5</td>\n",
              "      <td>14.6</td>\n",
              "      <td>5.9</td>\n",
              "      <td>0.54</td>\n",
              "      <td>1.460870</td>\n",
              "      <td>1.863636</td>\n",
              "      <td>1.327273</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>10</td>\n",
              "      <td>Chelsea</td>\n",
              "      <td>11</td>\n",
              "      <td>4</td>\n",
              "      <td>3</td>\n",
              "      <td>4</td>\n",
              "      <td>17</td>\n",
              "      <td>12</td>\n",
              "      <td>5</td>\n",
              "      <td>15</td>\n",
              "      <td>1.36</td>\n",
              "      <td>22.1</td>\n",
              "      <td>12.2</td>\n",
              "      <td>9.9</td>\n",
              "      <td>0.90</td>\n",
              "      <td>1.878261</td>\n",
              "      <td>2.009091</td>\n",
              "      <td>1.109091</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10</th>\n",
              "      <td>11</td>\n",
              "      <td>Crystal Palace</td>\n",
              "      <td>11</td>\n",
              "      <td>4</td>\n",
              "      <td>3</td>\n",
              "      <td>4</td>\n",
              "      <td>10</td>\n",
              "      <td>13</td>\n",
              "      <td>-3</td>\n",
              "      <td>15</td>\n",
              "      <td>1.36</td>\n",
              "      <td>12.0</td>\n",
              "      <td>15.2</td>\n",
              "      <td>-3.2</td>\n",
              "      <td>-0.29</td>\n",
              "      <td>1.356522</td>\n",
              "      <td>1.090909</td>\n",
              "      <td>1.381818</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>11</th>\n",
              "      <td>12</td>\n",
              "      <td>West Ham</td>\n",
              "      <td>11</td>\n",
              "      <td>4</td>\n",
              "      <td>2</td>\n",
              "      <td>5</td>\n",
              "      <td>18</td>\n",
              "      <td>20</td>\n",
              "      <td>-2</td>\n",
              "      <td>14</td>\n",
              "      <td>1.27</td>\n",
              "      <td>15.8</td>\n",
              "      <td>20.6</td>\n",
              "      <td>-4.7</td>\n",
              "      <td>-0.43</td>\n",
              "      <td>0.417391</td>\n",
              "      <td>1.436364</td>\n",
              "      <td>1.872727</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>12</th>\n",
              "      <td>13</td>\n",
              "      <td>Nottingham Forest</td>\n",
              "      <td>11</td>\n",
              "      <td>3</td>\n",
              "      <td>4</td>\n",
              "      <td>4</td>\n",
              "      <td>12</td>\n",
              "      <td>15</td>\n",
              "      <td>-3</td>\n",
              "      <td>13</td>\n",
              "      <td>1.18</td>\n",
              "      <td>11.5</td>\n",
              "      <td>16.9</td>\n",
              "      <td>-5.3</td>\n",
              "      <td>-0.49</td>\n",
              "      <td>1.060870</td>\n",
              "      <td>1.045455</td>\n",
              "      <td>1.536364</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>13</th>\n",
              "      <td>14</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>11</td>\n",
              "      <td>3</td>\n",
              "      <td>3</td>\n",
              "      <td>5</td>\n",
              "      <td>14</td>\n",
              "      <td>19</td>\n",
              "      <td>-5</td>\n",
              "      <td>12</td>\n",
              "      <td>1.09</td>\n",
              "      <td>14.3</td>\n",
              "      <td>18.8</td>\n",
              "      <td>-4.5</td>\n",
              "      <td>-0.41</td>\n",
              "      <td>0.730435</td>\n",
              "      <td>1.300000</td>\n",
              "      <td>1.709091</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>14</th>\n",
              "      <td>15</td>\n",
              "      <td>Fulham</td>\n",
              "      <td>11</td>\n",
              "      <td>3</td>\n",
              "      <td>3</td>\n",
              "      <td>5</td>\n",
              "      <td>9</td>\n",
              "      <td>17</td>\n",
              "      <td>-8</td>\n",
              "      <td>12</td>\n",
              "      <td>1.09</td>\n",
              "      <td>11.4</td>\n",
              "      <td>18.9</td>\n",
              "      <td>-7.5</td>\n",
              "      <td>-0.68</td>\n",
              "      <td>0.713043</td>\n",
              "      <td>1.036364</td>\n",
              "      <td>1.718182</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>15</th>\n",
              "      <td>16</td>\n",
              "      <td>Everton</td>\n",
              "      <td>11</td>\n",
              "      <td>3</td>\n",
              "      <td>2</td>\n",
              "      <td>6</td>\n",
              "      <td>11</td>\n",
              "      <td>15</td>\n",
              "      <td>-4</td>\n",
              "      <td>11</td>\n",
              "      <td>1.00</td>\n",
              "      <td>16.4</td>\n",
              "      <td>13.6</td>\n",
              "      <td>2.8</td>\n",
              "      <td>0.25</td>\n",
              "      <td>1.634783</td>\n",
              "      <td>1.490909</td>\n",
              "      <td>1.236364</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>16</th>\n",
              "      <td>17</td>\n",
              "      <td>Luton Town</td>\n",
              "      <td>11</td>\n",
              "      <td>1</td>\n",
              "      <td>3</td>\n",
              "      <td>7</td>\n",
              "      <td>10</td>\n",
              "      <td>21</td>\n",
              "      <td>-11</td>\n",
              "      <td>6</td>\n",
              "      <td>0.55</td>\n",
              "      <td>12.5</td>\n",
              "      <td>22.5</td>\n",
              "      <td>-10.0</td>\n",
              "      <td>-0.91</td>\n",
              "      <td>0.086957</td>\n",
              "      <td>1.136364</td>\n",
              "      <td>2.045455</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>17</th>\n",
              "      <td>18</td>\n",
              "      <td>Bournemouth</td>\n",
              "      <td>11</td>\n",
              "      <td>1</td>\n",
              "      <td>3</td>\n",
              "      <td>7</td>\n",
              "      <td>9</td>\n",
              "      <td>27</td>\n",
              "      <td>-18</td>\n",
              "      <td>6</td>\n",
              "      <td>0.55</td>\n",
              "      <td>11.4</td>\n",
              "      <td>23.7</td>\n",
              "      <td>-12.3</td>\n",
              "      <td>-1.12</td>\n",
              "      <td>-0.121739</td>\n",
              "      <td>1.036364</td>\n",
              "      <td>2.154545</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>18</th>\n",
              "      <td>19</td>\n",
              "      <td>Burnley</td>\n",
              "      <td>11</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>9</td>\n",
              "      <td>8</td>\n",
              "      <td>27</td>\n",
              "      <td>-19</td>\n",
              "      <td>4</td>\n",
              "      <td>0.36</td>\n",
              "      <td>9.6</td>\n",
              "      <td>20.2</td>\n",
              "      <td>-10.6</td>\n",
              "      <td>-0.96</td>\n",
              "      <td>0.486957</td>\n",
              "      <td>0.872727</td>\n",
              "      <td>1.836364</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>19</th>\n",
              "      <td>20</td>\n",
              "      <td>Sheffield Utd</td>\n",
              "      <td>11</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>9</td>\n",
              "      <td>9</td>\n",
              "      <td>30</td>\n",
              "      <td>-21</td>\n",
              "      <td>4</td>\n",
              "      <td>0.36</td>\n",
              "      <td>8.6</td>\n",
              "      <td>24.6</td>\n",
              "      <td>-16.1</td>\n",
              "      <td>-1.46</td>\n",
              "      <td>-0.278261</td>\n",
              "      <td>0.781818</td>\n",
              "      <td>2.236364</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-e763d92b-bd55-4fd3-a614-1cb3619f2b12')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-e763d92b-bd55-4fd3-a614-1cb3619f2b12 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-e763d92b-bd55-4fd3-a614-1cb3619f2b12');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-a0cc9d6f-b93b-458e-a527-b124af4e7553\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-a0cc9d6f-b93b-458e-a527-b124af4e7553')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-a0cc9d6f-b93b-458e-a527-b124af4e7553 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 56
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "fig, ax = plt.subplots(1, figsize=(10,8))\n",
        "ax.scatter(x=epltablexGxGc['xG/90'],y=epltablexGxGc['xGA/90'],c='DarkBlue')\n",
        "# set labels\n",
        "ax.set_xlabel('xG/90')\n",
        "ax.set_ylabel('xGA/90')\n",
        "\n",
        "# annotate points in axis\n",
        "for idx, row in epltablexGxGc.iterrows():\n",
        "    ax.annotate(row['team'], (row['xG/90'], row['xGA/90']) )\n",
        "# force matplotlib to draw the graph\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 704
        },
        "id": "TYn5yVsCNlLv",
        "outputId": "3fdf8009-5a6f-44f5-8881-4b673a84f155"
      },
      "execution_count": 57,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1000x800 with 1 Axes>"
            ],
            "image/png": "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Jk2a9OgDFxERERGRLLFuXThjx+4nIiJtERhPzz8oUgT27LlAxYqV72uMAgUKUrVqdbZv30qvXv04efIEkZGXGDz4JUsfszltlm/IkBGUK1c+w3H+vdCkq6trZk4pU25fKCarZasisGjRovz+++937fPll19afe7QoQMdOnR4lGGJiIiIiMhjsG5dOP37b+G2NVcs3n33IH5+ZQgNLX1fYzVt2pyPPprE2bN/s23bFvLkyUODBg0t2wMC0mb13N3dqV277kPFbTKZOHfunGX2D9LeXZ52nADL7wcOHCAuLs5qNjA8PDxdP5PJxJkzZ6zee3716lViYmIs/R5GrngmUEREREREcjaj0cTYsfszLABvGTt2/32/lqJx42AMBgNbtmxix46t1K//NHnz/vNuwwoVKhEQUJSvv/6KmzfTvxYuKirqgeJfvHix5c9ms5nFixfj7OxseWtBw4YNMRqNVv0AFi5ciIODAw0bphWojRqlPbP4xRdfWPVbsGCB1faHka1mAkVERERExD6FhV2y3AKaEU/P30lMPMeECVcoXtzD0v70040z7O/j40uNGk+xbNkSbt6Mp2nTEKvtjo6OjB49lldfHUHPnp1p3boNBQsW4sqVy/z00xHc3NyZPHnqfcXu6urKnj17GD16NFWrVmXPnj3s3LmTQYMG4evrC0BwcDB169Zl6tSpXLhwgQoVKrBv3z62bdtG7969Lc8AVqxYkfbt27Ns2TJiYmKoXbs2J06cYOXKlTRr1uyhVwYFFYEiIiIiIpINREamn427nbf3rwBs3nzEqr1GjVp33Kdp0+YcPvwDbm7uBAY2SLe9Zs1azJnzOQsXzmPFim9ISEjA1zc/lSs/Sbt29//ImcFgYN68eYwbN44PPvgAd3d3hg0bZvXmAkdHR2bNmsW0adNYv349K1asICAggP/+97+WlT9vGT9+PEWLFmXlypVs3bqVAgUKMHDgQIYNG3bfMd2Ng9l8twlX+2Y0mrh+/c4/jchOnJwc8fFxJyoqXi9NtQHl33aUe9tS/m1L+bcd5d62lH/belT537cvgvbt196z38qVbWjQwD/Ljns/fH3dMRgyfpJuzJgxbNq0iZ9++umxxvQw9EygiIiIiIjYXGBgEfz93bnTopgODuDv705gYJHHG1gupCJQRERERERszmBwZPz4+gDpCsFbn8ePr3/HGTm5f8qgiIiIiIhkC6GhpZk/PwQ/P3erdj8/d+bPD7nv10PI3emZwLvQM4Fyv5R/21HubUv5ty3l33aUe9tS/m3rceTfaDQRFnaJyMibFC7sRmBgEZvOAN7tmcCcSKuDioiIiIhItmIwOD72xV/sSe4pZ0VEREREROSeVASKiIiIiIjYERWBIiIiIiIidkRFoIiIiIiIiB1RESgiIiIidikoqBZTpryfZeNdvBhBUFAt1q9fm2VjijwKWh1URERERHKdCxfOs3jxFxw69APXrl3BycmZMmXK0KRJCO3atcfVNY+tQxSxGRWBIiIiIpKr7N+/lzfeGI2zswstWz5D6dJlSElJ4fjxo8yc+QmnT4czevT/bB2miM2oCBQRERGRXCMi4gJvvfU6RYr48cknsylQoIBlW8eOnTl//hz79++1YYQitqciUERERERyjSVLFpGQcJMxY96wKgBvKVq0GJ07d7Vq2717J3PnzuT8+XMEBBRj2LCXCQysb9XnypXLzJ07iwMH9hEXF0tAQDGef747oaHt7hrPtWtXmTNnBocOHeTGjSg8PT2pVOkJRox4FT+/f16GfuDAPr78cgF//PEbDg6OVK9eg8GDh1O6dBlLn1On/mTZssUcPfoT165dIV8+DwID6zN06Ai8vLwzkS2xVyoCRURERCTX2LdvD/7+AVSpUu2++h8/foxdu3bQvn0n3NzcWb58KWPH/pfvvltnKayuX7/GwIF9gbTZRG9vb8LC9jNp0rvcvBlP587d7jj+2LH/5fTpcDp27IKfnx9RUVEcOnSQyMhLliJw48bvmTBhHHXq1GPw4JdITExk1arvGDJkAAsWLLb0O3ToIBERF3jmmTb4+ubn9Olw1qxZwenT4Xz22UIcHBweInNiT1QEioiIiEiuEB8fx5Url3n66Ub3vc+ZM6f56qtvCQgoCkDNmrXo06crW7duomPHLgB89tlMjEYjixYttRSGzz7bibfeep3PP/+Mdu06ZLjQTGxsLCdOHGfIkBF069bT0t6zZ1/Ln2/evMnHH39IaOizVs8ptmoVSrduHVm0aIGlvUOHTnTt2sPqGE888STjxv2P48ePUq1ajfs+b7FvekWEiIiIiOQK8fHxALi5ud33PrVq1bEUgABly5bD3d2diIgLAJjNZnbu3E6DBk9jNsONGzcsv+rWrUdcXBy///5bhmO7urri7OzM0aNHiImJybDPoUMHiYuLJSSkhdXYjo4GKld+kp9+OnzbeP8UmklJSdy4cYMnnqgCcMcYRDKimUARERERybGMRhNhYZeIjLyJl1da282bN+97/8KFi6Rr8/DwJDY2FoAbN6KIi4tlzZqVrFmzMsMxoqKiMmx3cXFh8OCX+PTTj2nbtjlPPFGF+vWDaNnyGfLnT3te8fz5swAMHz4owzHc3d0tf46Jiebzz+eybdtmoqKuW/WLj4+7x5mK/ENFoIiIiIjkSGvXhvPaa3uJiIi3tJUt686JE/c/K+bomPGNcWazGQCTyQRAixataNkyNMO+ZcuWu+P4nTt3o0GDhuzevZMffjjAvHmz+fLLhUybNovy5StiMqUd54033sHXN3+6/Q0Gg+XPb7zxGj//fIxu3XpRtmx53NzyYjKZeeWVlyxxitwPFYEiIiIikuOsWPEHffps4v9rNYvY2GI4Ov7GnDkbGTiw5UMfx9vbBzc3d4xGE7Vr183UGAEBRenatQddu/bg3Lmz9O3bjaVLF/Pmm+9abkX18fG96/gxMTEcOfID/fsPpG/fFyzt586dzVRMYt/0TKCIiIiI5ChGo4kRI7anKwABrl+vhsnkxMKFU7hy5Uq67RcunOebb76+72MZDAYaNw5m167thIefSrf9TreCAiQmJpKUlGTVFhBQFDc3d5KTkwGoWzcQd3d3Fi36nNTU1DuObzCkfdtu/tdJP8i5iNyimUARERERyVEOHLjI+fMZPwOXkuLJxYvB+Plto1u35wgNbUPp0mVISUnh55+Ps2PHVlq1yvi2zjsZNGgYP/54mBdf7EObNu0pWbIUMTEx/PHHbxw+/AMbNmzPcL9z584wYsQQgoObUbJkKQwGJ3bv3sH169do1qw5AO7u+XjlldcYP/5N+vXrTtOmzfH29iEy8hIHDuylSpVqjBo1Gnf3fFSvXpMlSxaRmppKwYKF+OGHMC5ejHiw5ImgIlBEREREcpjIyLsv/BIfX4IzZzrStu1V9u7dxapVy3F2dqFMmbIMG/Yybdq0f6Dj+frmZ+7cL1iwYC67dm1n5cpreHl5UbJkGQYPfumO+xUqVJhmzZpz5MghNm1aj8FgoHjxkrzzziQaN25q6de8eUsKFCjAV199wddff0lycgoFCxakWrUatG7d1tLvrbfGM3XqB6xY8S1gpnbtQD78cBrPPvvwt72KfXEw/3tOWSyMRhPXr8ffu2M24OTkiI+PO1FR8aSm6sHgx035tx3l3raUf9tS/m1HubetsLCLtG275p79Vq5sQ4MG/o8hIvtij1//vr7ulltyc4PccyYiIiIiYhfq1fOjaNF8ODhkvN3BAfz93QkMTP/6BxFRESgiIiIiOYzB4MgnnwQDpCsEb30eP75+rpq5EclK+pchIiIiIjlOhw7lWbiwBX5+7lbtfn7uzJ8fQmhoaRtFJpL9aWEYEREREcmR2rQpTfPmxQkLu0Rk5E0KF3YjMLCIZgBF7kFFoIiIiIjkWAaDoxZ/EXlA+jGJiIiIiIiIHVERKCIiIiIiYkdUBIqIiIiIiNgRFYEiIiIiIiJ2REWgiIiIiIiIHVERKCIiIiIiYkdUBIqIiIiIiNgRFYEiIiIiIiJ2REWgiIiIiIiIHVERKCIiIiIiYkdUBIqIiIiIiNgRFYEiIiIiIiJ2REWgiIiIiIiIHVERKCIiIiIiYkdUBIqIiIiIiNgRFYEiIiIiIiJ2REWgiIiIiIiIHVERKCIiIiIiYkdUBIqIiIiIiNgRFYEiIiIiIiJ2REWgiIiIiIiIHVERKCIiIiIiYkdUBIqIiIiIiNgRFYEiIiIiIiJ2REWgiIiIiIiIHVERKCIiIiIiYkdUBIqIiIiIiNgRFYEiIiIiIvLYzJ8/h6CgWrYO475MmDCOTp3aPJZjrVixggoVKnD+/PlHfiwVgSIiIiIiWWz9+rUEBdUiOLg+V65cTrd92LAX6dmzsw0iezwSExOZP38OP/54+JEf61ZReePGjQy39+zZmWHDXsySYyUkJDB9+nQOHjyYJePZSrYqAs+cOcObb75Ju3btqFy5MqGhofe1n9ls5rPPPqNx48ZUrVqVLl26cPTo0UcbrIiIiIjIPSQnJ/PVVwttHcZjl5iYyIIFc/nppyO2DuWhjB49liVLvrN8TkhI4NNPP+WHH36wYVQPL1sVgX/++Se7du2iRIkSlClT5r73mzt3LtOmTaNPnz7MmTOHggUL0q9fP86dO/cIoxURERERubty5cqzdu0qrl69YutQJBOcnJxwcXGxdRhZLlsVgcHBwezatYtp06bxxBNP3Nc+SUlJzJkzh379+tGnTx/q1avHlClT8Pb2Zv78+Y84YhERERGRO+vZsx9Go/G+ZwM3bVpPv349CA5uQKtWwbz11mtERl6ybP/226U0bFiH2NhYS9vXX39FUFAtpk+fYmkzGo2EhDRk5sxpljaTycQ333xNr15dCA6uT2hoM0aNeonffvvF0uf779cwfPggQkNDaNKkHj16PMfKlcvTxXnixAlGjBjCM880JTi4Ac8915aJE98G4OLFCEJDmwGwYMFcgoJqERRUi/nz5zzUuWeVH388TFBQLbZt28IXX8ynffvWBAfXZ8SIwZw/bz2JdPszgefPn6devXoAfPrpp1SoUIEKFSowffp0S/+//vqL4cOHU6dOHapUqUKHDh3Ytm1buhj+/PNPevXqRdWqVWnYsCEzZ87EZDJl+bneidNjO9J9cHR88Jr0xx9/JC4ujlatWlnaXFxcCAkJYcuWLVkZnoiIiIjIA/H396dly2dYs2YVPXr0oUCBgnfs+8UX85k3bzbBwc1o0+ZZbtyI4rvvljFs2It8/vliPDw8qFatOiaTiePHj9KgwdMAHD/+E46Ojhw7dtQy1p9//k5Cwk2qV69paZs06V3Wr19LYGB9QkOfxWg0cvz4T5w8eYKKFSsDsGrVckqVKkNQUEMMBgP79u3ho48mYTKZ6Ngx7RnG69ev079/f7y8vOnevQ8eHh5cvBjB7t07APD29uHVV8fw4YeTaNiwCY0aNQGgTJlyD3XuWW3x4oU4ODjStWsP4uLiWLJkEW+/PZa5c7/IsL+vry/jxo1j3LhxhISEEBISAkCFChWAtMKua9euFC5cmBdeeAE3Nzc2bNjA0KFDmT59uqX/lStX6NWrF0ajkRdffJG8efPyzTff4OrqmuXneCfZqgjMjPDwcABKly5t1V6mTBm++OILEhMTyZMnT6bHd3LKVpOld2QwOFr9Lo+X8m87yr1tKf+2pfzbjnJvWzkh/46ODkBajP36DWDjxvUsWbKIUaP+A4CDgwMODg6W7zUvXozg888/Y+DAIfTp098yTnBwU3r16sbq1cvp06c/FStWxN09HydOHKVRo0aYzWaOHz9GkyZN2blzO8nJibi5uXHixFEcHR2pUaMGTk6OHDlyiPXr19K5c1dLDGl6YTabcXBIi3fWrHlW3zt36dKVl18eyjffLKFLl+cBOHnyONHR0UybNpMKFSpZ+g4ZMgwADw93mjUL4cMPJ1GuXDmeecZ6nY9buXnQc79Xrp2cHDL83v3fub71dZOcnMyXXy7F2dkZAC8vL6ZO/YAzZ8IpU6asZd9b3NzcaNGiBePGjaNChQq0a9fO6jgTJkzAz8+P7777znILabdu3ejatSsffvihpQicO3cu169f59tvv6Vq1aoAtG/fnubNm9/xHLNaji8CY2JicHFxSVc5e3p6YjabiY6OznQR6OjogI+Pe1aE+dh4eua1dQh2Tfm3HeXetpR/21L+bUe5t63snH9397TvTT088vDkkxVo164tq1ev4KWXhlCoUCGcnQ0YDI6W7zVXr96HyWSiQ4d2mM1JlnFKly5GyZIlOH78J0vfmjVr8PPPx/DxcefUqVNER99g6NDB7Nixjb///oMGDRrwyy8nKFeuHMWLFwFg//7dODg48MorL+Ptfbfvb//ZFhsbS0pKCvXr12PKlAM4OZnw8PCgcOECABw6dICnnqpmKaJud+sc8uZ1Sff9dN68aQVSZs49I7fG8/Jyy7CfweCIs7PBss3DI602eO65ThQq5G3p17BhfaZOhejoq/j4VAPA1dUJg8Hxnj9wuHHjBmFhYQwfPpy4uDirbUFBQUyfPp3IyEgKFy7Mrl27qF69uqUAhLRZxjZt2rBkyZK7Hier5Pgi8FEymczExNy0dRj3xWBwxNMzLzExCRiNj+9+Ykmj/NuOcm9byr9tKf+2o9zbVk7If3x8WjETG5tIVFQ83bv3YfXqNUyfPpNRo/5DSooRo9FEVFQ8AL//fgqz2XzH2SAHB0dL3yeeqMq8eXO4ePEau3fvo0CBAvj7l6Rs2fLs3XuAypWrc/jwYZo2DbHs89dfpylQoCBms7OlLSPHjh1l7tzZ/PzzcRITE622nT8fSZEijlSsWIUWLVrw6aefsmDBQmrWfIpGjRrTvHkrywxYdHTa99AJCcnpjpeQkAyQqXPPyK3xoqNv4uCQ/pZKo9FEauo/uY6NTTsvT09fq3HN5rRi9uLFK5b2pKRUjEYTRqPproXg2bNnMZvNfPLJJ3zyyScZ9rl27RqFCxcmIiKCatWqpdteqlSpO46f1XJ8Eejp6UlycjJJSUlWs4ExMTE4ODjg5eX1UOOnpmbP/1ju5NYXudiG8m87yr1tKf+2pfzbjnJvW9kt/0ajibCwS0RG3uTcuShLW2qqicKF/WnRohWrVq2gW7femM1mzGazJX6j0YiDgwMffjgtw3Uy8uZ1s/R98slqpKamcuzYMX766SeqVq1BaqqJqlWr89NPP/LXX+FERUVRpUp1yz5mc9o4d8vXhQvneemlQRQvXpJhw0ZSuHBhnJycCQvbx7JlS0hJMZKaasLJyZFp06axZ88Bdu3axQ8/hDF+/NssXvwlc+YsxM3NjdTUtAOaTOZ0xzSZzFaxPMi5Z8TJKa3wjI9PIF++9N/7JyQkUrCgy23HuzWWg9W4t9pv/7oy30rcPdxa1KVfv348/fTTGfYpXrz4fY31OOT4IvDWs4CnT5+mYsWKlvbw8HD8/f0f6nlAEREREZH7sW5dOGPH7iciIm0GydPzD4oUgT17LlgWXenduz+bNq1n8eL0C48EBBTFbDbj5+dP8eIl7nqsSpWewNnZmWPHfuLYsZ/o1q0nANWr12Dt2pUcPpz2Drtq1f5ZFCYgIIAffjhATEw0np4ZT5Ls27eb5ORkJk2aQpEiRSztd3rh+5NPVqVixScZOHAomzdv5J13xrJt22batHmW2x6lu6cHOfeM3Ir17NkzFC5cxGpbYmIily9fok6dug88bkYc7nBixYoVA8DZ2Zn69evfdQx/f3/OnDmTrv306dMPH+B9yr5P096nmjVrki9fPjZs2GBpS0lJYfPmzTRs2NCGkYmIiIiIPVi3Lpz+/bdYCsDbvfvuQdatS1vIMCCgKC1atGb16hVcv37Nql+jRsEYDAYWLJibbvYpbZ2LG5bPrq6uVKxYma1bNxEZeYmqVWsAUK1aDZKSkli+fCkBAUUpUKCAZZ/GjZtiNpv5/PO56WK8dbx/ZuH+OX5cXBzr16+16h8TE5MuxnLlygNpi60AlomYfz8fl5EHOfeM1KpVB2dnZ1atWp7uNQtr1qzAaDQSGHj3wux+5c2b9hxqTEyMVXv+/PmpU6cOy5Yt4/Lly+n2u379uuXPjRo14ujRoxw/ftxq+9q1a9Pt96hkq5nAhIQEdu3aBcCFCxeIi4tj48aNANSpUwdfX1969+5NRESE5fUPrq6uDBw4kOnTp+Pr60v58uX5+uuvuXHjBv3733kVIRERERGRh2U0mhg7dj93u2tw7Nj9tGpVEoPBkV69+rFp03rOnj1DqVL/rG4fEFCUAQMGM2fOp1y6FMHTTzfGzc2NiIgIdu/eSdu27S0zfpBW8H311ULy5ctnWcnSx8eX4sVLcPbsGVq3bmMVQ82atWjRojXLly/l/Pmz1K1bH7PZxLFjP1GzZi06duxCnTqBODs7M3r0SNq27UBCwk3Wrl2Fj48v165dtYy1fv1aVq36jqCgRvj5BXDz5k3Wrl2Ju7s79eo1AMDVNQ8lS5Zm+/bNFCtWHE9PT0qXLkPp0mXT5edBz/3ffHx86dNnAHPnzmLo0BcICmpInjx5OHHiOFu3bqJOnUAaNMiayaE8efJQtmxZNmzYQMmSJfH29qZcuXKUL1+et956i27dutGmTRs6d+5MsWLFuHr1KkePHuXSpUusWbMGgAEDBrB69WoGDBhAr169LK+I8Pf35/fff8+SOO8lWxWB165dY8SIEVZttz4vWrSIunXrYjKZMBqNVn1eeOGF///Jxudcv36dSpUqMX/+fMu0rIiIiIjIoxAWdinDGcBbzGaIiIgnLOwSDRr4U7RoMZo3b8WGDevS9e3Zsw/Fixdn2bIlLFiQNmNXqFBh6tSpS1CQdRFTrVp1vvoq7ZbM25+jq1atBmfPnqFq1erpxn/99bcoU6Yc33+/mpkzP8HdPR8VK1biySfTFikpXrwk7777PnPnzmLGjE/Inz8/zz7bEW9vH9577x3LODVqPMWpU7+zdesmrl+/jrt7PipVeoI33xyPv3+Apd+YMWOZOvUDpk+fQkpKCn37vpBhEfig556R3r374+fnz3fffcPChfMwGo34+fnTv/9Aunfvnan3kd/J+PHjeffdd3nvvfdISUlh2LBhlC9fnrJly/Ldd9/x6aefsnLlSm7cuIGvry+VK1dm6NChlv0LFSrEokWLGD9+PJ999hne3t48//zzFCpUiP/9739ZFufdOJjv92lHO2Q0mrh+/c7/qLMTJ6e0JYajouKz1QPS9kL5tx3l3raUf9tS/m1Hubet7JT/FStOMWjQtnv2mz27KR06ZFwA5TTZKf+Pi6+ve7Z+L+WDyj1nIiIiIiLymBUu7Jal/UQeBxWBIiIiIiKZFBhYBH9/9zuuhungAP7+7gQGFsm4g4gNqAgUEREREckkg8GR8ePTVp78dyF46/P48fVz1a2EkvPpq1FERERE5CGEhpZm/vwQ/Pzcrdr9/NyZPz+E0NDSd9hTxDay1eqgIiIiIiI5UWhoaVq1KklY2CUiI29SuLAbgYFFNAMo2ZKKQBERERGRLGAwONKggb+twxC5J/1oQkRERERExI6oCBQREREREbEjKgJFRERERETsiIpAERERERERO6IiUERERERExI6oCBQREREREbEjKgJFRERERETsiIpAERERERERO6IiUERERERExI6oCBQREREREbEjKgJFRERERETsiIpAERERERERO6IiUERERERExI6oCBQREREREbEjKgJFRERERETsiIpAERERERERO6IiUERERERExI6oCBQREREREbEjKgJFRERERETsiIpAERERERERO6IiUERERERExI6oCBQREREREbEjKgJFRERERETsiIpAERERERERO6IiUERERERExI6oCBQREREREbEjKgJFRERERETsiIpAERERERERO6IiUERERERExI6oCBQREREREbEjKgJFRERERETsiIpAERERERERO6IiUERERERExI6oCBQREREREbEjKgJFRERERETsiIpAERERERERO6IiUERERERExI6oCBQREREREbEjKgJFRERERETsiIpAERERERERO6IiUERERERExI6oCBQREREREbEjKgJFRERERETsiIpAERERERERO6IiUERERCQHmj9/DkFBtWwdhojkQCoCRUREJFdbseJbgoJq8cILvW0diohItqAiUERERHK1LVs24Ofnz6+/nuT8+XO2DkdExOZUBIqIiEiuFRFxgRMnjjNs2Ei8vX3YvHnDPfdJTU0lJSXlMUQnImIbTrYOQERERORR2bx5Ax4entSvH0Tjxk3ZvHkj/fq9aNl+8WIEzz3XliFDRuDkZGD58mVcunSR+fO/pFy5CixfvpRVq1Zw8eIFnJ1dCAgoSpcu3WndurVljCtXLjN37iwOHNhHXFwsAQHFeP757oSGtrP0+fHHwwwfPoi3336P8+fPsmrVd0RH36BKlWr85z+vU7RoMUvfY8d+4ttvl/LLLz8TFXUdHx9fGjcOZuDAobi65nk8iRORXE1FoIiIiORaW7ZspFGjJjg7OxMS0oJVq5bz668nqVTpCat+69evJTk5ibZt2+Pi4oKHhxdr1qzk448/pHHjpjz33PMkJyfz119/8ssvP1uKwGvXrjFwYF8AOnbsjLe3N2Fh+5k06V1u3oync+duVsdZvHghDg6OdO3ag7i4OJYsWcTbb49l7twvLH127NhKUlIi7dt3wtPTi19/Pcl3333D5cuXGT/+/UecMRGxByoCRUREJFf67bdfOXPmb15++T8AVK1anUKFCrN588Z0ReCVK5Es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iIiI2BEVgSIiIiIiInZERaCIiIiIiIgdUREoIiIiIiJiR1QEioiIiIiI2BEVgSIiIiIiInZERaCIiIiIiIgdUREoIiIiIiJiR1QEioiIXfntt9947bXXCA4OpkqVKtSoUYN27doxefJkzp07l+E+v//+OxUqVOD48eMAxMfHM2HCBBo2bMiTTz5Jq1atWLJkSYb7xsTE8MYbbxAYGEj16tXp2bMnJ0+efGTnJyIici8OZrPZbOsgREREHodvvvmGcePG4ePjQ5s2bShdujSpqan8+eefbN68mejoaI4dO4bBYLDa77PPPmPhwoXs27cPk8lE9+7d+fnnn+nevTslSpRg7969bNu2jZEjRzJo0CDLfiaTiW7duvH777/Tv39/fHx8WLJkCRcvXmTFihWULFnyMWdARERERaCIiNiJH3/8kR49elCzZk1mz55Nvnz5rLYnJSUxa9YsXnrppXRFYPfu3SlWrBiTJk1iw4YNvPzyy0yYMIFOnTpZ+gwfPpydO3eyY8cO8ufPD8D69esZOXIkn3zyCS1btgTg+vXrtGjRgoYNG/LRRx894rMWERFJT7eDiohIjpaYmEjLli1p2bIliYmJlvYbN24QFBTE888/j9FoZMaMGTg4OPDhhx+mKwABXF1defnll9MVgDExMfz00080atQIgCNHjgDwzDPPWPVr3bo1SUlJbNu2zdK2adMmChQoQPPmzS1tvr6+tGrVim3btpGcnPzwCRAREXlAKgJFRCRHy5MnD++//z5nz55l6tSplvZ33nmH2NhY3nvvPZKTkwkLC6NOnToUKVLkgcbfu3cvDg4OBAUFAZCcnIzBYMDZ2dmqX968eQH4+eefLW2//vorlStXxtHR+nJbpUoVEhISOH369APFIiIikhVUBIqISI5XrVo1BgwYwKJFizh8+DAbN27k+++/Z9SoUZQqVYozZ86QmppKuXLl0u1748YNrl+/bvn179m5nTt3UrNmTTw8PAAoVaoURqORo0ePWvU7fPgwAJcvX7a0XblyhYIFC6Y7ZqFChdL1FREReVxUBIqISK4wbNgwypYty+jRo3n77bepU6cOvXr1AiAuLg4ANze3dPs1a9aMevXqWX5t377dss1kMrFnzx7LraAAoaGheHh48L///Y99+/Zx/vx5li1bZlkd9PZbUhMTE3FxcUl3zFttSUlJWXDmIiIiD0ZFoIiI5AouLi5MnDiR8+fPEx8fz8SJE3FwcACwPAN48+bNdPvNnDmTBQsWMHr06HTbTpw4wfXr12ncuLGlrWDBgsyaNYvk5GT69etH06ZNmTx5Mm+88QZgXWjmyZMnw+f+brW5urpm/oRFREQyycnWAYiIiGSVvXv3AmkzbGfOnKFYsWIAFC9eHCcnJ/788890+9SpUwcg3YIwALt27SIgIICyZctatdeuXZutW7fyxx9/cPPmTSpWrGi5tfP21z4ULFiQK1eupBv3Vt9bt4WKiIg8TpoJFBGRXOG3335jxowZdOjQgcqVKzN27FhiY2OBtNm5OnXqcOjQISIjI+97zJ07d1rdCno7g8FApUqVeOqpp3B3d2f//v0A1K9f39KnYsWK/PLLL5hMJqt9jx8/Tt68eSlVqtSDnqaIiMhDUxEoIiI5XkpKCq+99hqFChXif//7H++99x5Xr15l4sSJlj5Dhw7FaDTy6quvEh8fn26Mf7829+rVq/zyyy9Wt4LeyfXr15k3bx4VKlSwKgJbtmzJ1atX2bx5s1XfjRs30qRJkwyfFxQREXnUdDuoiIjkeLNmzeLXX39l4cKF5MuXj4oVKzJ06FA+/vhjWrZsSaNGjahVqxZvvPEG48ePp0WLFrRp04bSpUuTnJzM33//zdq1a3F2dqZAgQJA2q2grq6u1K1bN93xevToQfXq1SlRogRXrlzhm2++4ebNm8yePdvqdRAtWrSgevXqvPbaa5w6dQofHx++/vprjEYjL7300mPLj4iIyO0czP/+0aeIiEgOcvLkSTp37kzXrl0ZO3aspd1oNNKlSxciIyP5/vvv8fT0BLAUiz/88ANXrlzB2dmZYsWK0aBBA7p27Urx4sUBGD58OImJiXz22Wfpjvnee++xbds2IiMjyZcvH/Xr1+fll1+2PIN4u+joaCZPnszWrVtJSkqiSpUq/Pe//6VKlSqPKCMiIiJ3pyJQRETkX1JTU6lbty6jRo2ie/futg5HREQkS+mZQBERkX+Jjo6mT58+hISE2DoUERGRLKeZQBERERERETuimUARERERERE7oiJQRERERETEjqgIFBERERERsSMqAkVEREREROyIikARERERERE7oiJQRERERETEjqgIFBERERERsSMqAkVEREREROyIikARERERERE7oiJQRERERETEjvwfbJdAC7uY+HoAAAAASUVORK5CYII=\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "EPL_player_df"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 583
        },
        "id": "wrjHrDmJ8OlM",
        "outputId": "5698ffa4-aac2-480a-a3b3-52ba3affe6ba"
      },
      "execution_count": 58,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "        id     player_name games_x time_x goals_1wks_x            xG_1wks_x  \\\n",
              "0     8260  Erling Haaland      11    945           11   11.495322853326797   \n",
              "1      453   Son Heung-Min      11    929            8    4.824764966964722   \n",
              "2     1250   Mohamed Salah      11    975            8    7.727359086275101   \n",
              "3      468   Callum Wilson      10    475            7    7.311267621815205   \n",
              "4     1776    Jarrod Bowen      11    990            7    4.998918272554874   \n",
              "..     ...             ...     ...    ...          ...                  ...   \n",
              "457  12123         Murillo       5    450            0   0.5807948000729084   \n",
              "458  12149      Alex Scott       3    194            0  0.08230337873101234   \n",
              "459  12151    Gabriel Osho       2    148            0                    0   \n",
              "460  12152  Matheus França       2     24            0  0.07806615019217134   \n",
              "461  12158        Ryan Oné       1      4            0                    0   \n",
              "\n",
              "    assists_1wks_x             xA_1wks_x shots_1wks_x key_passes_1wks_x  ...  \\\n",
              "0                2    2.5927075762301683           42                11  ...   \n",
              "1                1     3.000117938965559           30                19  ...   \n",
              "2                4     5.920990411192179           35                25  ...   \n",
              "3                0  0.015900330618023872           21                 1  ...   \n",
              "4                1    1.9063566271215677           32                 8  ...   \n",
              "..             ...                   ...          ...               ...  ...   \n",
              "457              0    0.3356254808604717            4                 3  ...   \n",
              "458              0    0.0895473062992096            2                 1  ...   \n",
              "459              0                     0            0                 0  ...   \n",
              "460              0   0.22760880179703236            2                 4  ...   \n",
              "461              0                     0            0                 0  ...   \n",
              "\n",
              "    shots_1wks_y key_passes_1wks_y yellow_cards red_cards position_y  \\\n",
              "0             42                11            0         0          F   \n",
              "1             30                19            0         0        F M   \n",
              "2             35                25            1         0          F   \n",
              "3             21                 1            1         0        F S   \n",
              "4             32                 8            1         0        F M   \n",
              "..           ...               ...          ...       ...        ...   \n",
              "457            4                 3            1         0          D   \n",
              "458            2                 1            1         0          M   \n",
              "459            0                 0            0         0          D   \n",
              "460            2                 4            0         0          S   \n",
              "461            0                 0            0         0          S   \n",
              "\n",
              "          team_title_y npg_1wks_y          npxG_1wks_y              xGChain  \\\n",
              "0      Manchester City          9    9.211816400289536   11.093419320881367   \n",
              "1            Tottenham          8    4.824764966964722     9.62911732494831   \n",
              "2            Liverpool          5    4.682757988572121     11.1686532497406   \n",
              "3     Newcastle United          5   5.7889300510287285    6.403569312766194   \n",
              "4             West Ham          7    4.998918272554874   5.8975516855716705   \n",
              "..                 ...        ...                  ...                  ...   \n",
              "457  Nottingham Forest          0   0.5807948000729084   1.8947984781116247   \n",
              "458        Bournemouth          0  0.08230337873101234   0.9122739285230637   \n",
              "459              Luton          0                    0                    0   \n",
              "460     Crystal Palace          0  0.07806615019217134  0.19827639311552048   \n",
              "461   Sheffield United          0                    0                    0   \n",
              "\n",
              "              xGBuildup  \n",
              "0    1.1622753702104092  \n",
              "1       2.9587726239115  \n",
              "2     3.551269993185997  \n",
              "3    0.8389131352305412  \n",
              "4      1.30326790176332  \n",
              "..                  ...  \n",
              "457  1.7495439257472754  \n",
              "458  0.8663346916437149  \n",
              "459                   0  \n",
              "460                   0  \n",
              "461                   0  \n",
              "\n",
              "[462 rows x 48 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-6bca13ed-d1e7-4698-a1ed-ded06436cfaf\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>player_name</th>\n",
              "      <th>games_x</th>\n",
              "      <th>time_x</th>\n",
              "      <th>goals_1wks_x</th>\n",
              "      <th>xG_1wks_x</th>\n",
              "      <th>assists_1wks_x</th>\n",
              "      <th>xA_1wks_x</th>\n",
              "      <th>shots_1wks_x</th>\n",
              "      <th>key_passes_1wks_x</th>\n",
              "      <th>...</th>\n",
              "      <th>shots_1wks_y</th>\n",
              "      <th>key_passes_1wks_y</th>\n",
              "      <th>yellow_cards</th>\n",
              "      <th>red_cards</th>\n",
              "      <th>position_y</th>\n",
              "      <th>team_title_y</th>\n",
              "      <th>npg_1wks_y</th>\n",
              "      <th>npxG_1wks_y</th>\n",
              "      <th>xGChain</th>\n",
              "      <th>xGBuildup</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>8260</td>\n",
              "      <td>Erling Haaland</td>\n",
              "      <td>11</td>\n",
              "      <td>945</td>\n",
              "      <td>11</td>\n",
              "      <td>11.495322853326797</td>\n",
              "      <td>2</td>\n",
              "      <td>2.5927075762301683</td>\n",
              "      <td>42</td>\n",
              "      <td>11</td>\n",
              "      <td>...</td>\n",
              "      <td>42</td>\n",
              "      <td>11</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>F</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>9</td>\n",
              "      <td>9.211816400289536</td>\n",
              "      <td>11.093419320881367</td>\n",
              "      <td>1.1622753702104092</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>453</td>\n",
              "      <td>Son Heung-Min</td>\n",
              "      <td>11</td>\n",
              "      <td>929</td>\n",
              "      <td>8</td>\n",
              "      <td>4.824764966964722</td>\n",
              "      <td>1</td>\n",
              "      <td>3.000117938965559</td>\n",
              "      <td>30</td>\n",
              "      <td>19</td>\n",
              "      <td>...</td>\n",
              "      <td>30</td>\n",
              "      <td>19</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>F M</td>\n",
              "      <td>Tottenham</td>\n",
              "      <td>8</td>\n",
              "      <td>4.824764966964722</td>\n",
              "      <td>9.62911732494831</td>\n",
              "      <td>2.9587726239115</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>1250</td>\n",
              "      <td>Mohamed Salah</td>\n",
              "      <td>11</td>\n",
              "      <td>975</td>\n",
              "      <td>8</td>\n",
              "      <td>7.727359086275101</td>\n",
              "      <td>4</td>\n",
              "      <td>5.920990411192179</td>\n",
              "      <td>35</td>\n",
              "      <td>25</td>\n",
              "      <td>...</td>\n",
              "      <td>35</td>\n",
              "      <td>25</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>F</td>\n",
              "      <td>Liverpool</td>\n",
              "      <td>5</td>\n",
              "      <td>4.682757988572121</td>\n",
              "      <td>11.1686532497406</td>\n",
              "      <td>3.551269993185997</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>468</td>\n",
              "      <td>Callum Wilson</td>\n",
              "      <td>10</td>\n",
              "      <td>475</td>\n",
              "      <td>7</td>\n",
              "      <td>7.311267621815205</td>\n",
              "      <td>0</td>\n",
              "      <td>0.015900330618023872</td>\n",
              "      <td>21</td>\n",
              "      <td>1</td>\n",
              "      <td>...</td>\n",
              "      <td>21</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>F S</td>\n",
              "      <td>Newcastle United</td>\n",
              "      <td>5</td>\n",
              "      <td>5.7889300510287285</td>\n",
              "      <td>6.403569312766194</td>\n",
              "      <td>0.8389131352305412</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>1776</td>\n",
              "      <td>Jarrod Bowen</td>\n",
              "      <td>11</td>\n",
              "      <td>990</td>\n",
              "      <td>7</td>\n",
              "      <td>4.998918272554874</td>\n",
              "      <td>1</td>\n",
              "      <td>1.9063566271215677</td>\n",
              "      <td>32</td>\n",
              "      <td>8</td>\n",
              "      <td>...</td>\n",
              "      <td>32</td>\n",
              "      <td>8</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>F M</td>\n",
              "      <td>West Ham</td>\n",
              "      <td>7</td>\n",
              "      <td>4.998918272554874</td>\n",
              "      <td>5.8975516855716705</td>\n",
              "      <td>1.30326790176332</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>457</th>\n",
              "      <td>12123</td>\n",
              "      <td>Murillo</td>\n",
              "      <td>5</td>\n",
              "      <td>450</td>\n",
              "      <td>0</td>\n",
              "      <td>0.5807948000729084</td>\n",
              "      <td>0</td>\n",
              "      <td>0.3356254808604717</td>\n",
              "      <td>4</td>\n",
              "      <td>3</td>\n",
              "      <td>...</td>\n",
              "      <td>4</td>\n",
              "      <td>3</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>D</td>\n",
              "      <td>Nottingham Forest</td>\n",
              "      <td>0</td>\n",
              "      <td>0.5807948000729084</td>\n",
              "      <td>1.8947984781116247</td>\n",
              "      <td>1.7495439257472754</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>458</th>\n",
              "      <td>12149</td>\n",
              "      <td>Alex Scott</td>\n",
              "      <td>3</td>\n",
              "      <td>194</td>\n",
              "      <td>0</td>\n",
              "      <td>0.08230337873101234</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0895473062992096</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>...</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>M</td>\n",
              "      <td>Bournemouth</td>\n",
              "      <td>0</td>\n",
              "      <td>0.08230337873101234</td>\n",
              "      <td>0.9122739285230637</td>\n",
              "      <td>0.8663346916437149</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>459</th>\n",
              "      <td>12151</td>\n",
              "      <td>Gabriel Osho</td>\n",
              "      <td>2</td>\n",
              "      <td>148</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>D</td>\n",
              "      <td>Luton</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>460</th>\n",
              "      <td>12152</td>\n",
              "      <td>Matheus França</td>\n",
              "      <td>2</td>\n",
              "      <td>24</td>\n",
              "      <td>0</td>\n",
              "      <td>0.07806615019217134</td>\n",
              "      <td>0</td>\n",
              "      <td>0.22760880179703236</td>\n",
              "      <td>2</td>\n",
              "      <td>4</td>\n",
              "      <td>...</td>\n",
              "      <td>2</td>\n",
              "      <td>4</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>S</td>\n",
              "      <td>Crystal Palace</td>\n",
              "      <td>0</td>\n",
              "      <td>0.07806615019217134</td>\n",
              "      <td>0.19827639311552048</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>461</th>\n",
              "      <td>12158</td>\n",
              "      <td>Ryan Oné</td>\n",
              "      <td>1</td>\n",
              "      <td>4</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>S</td>\n",
              "      <td>Sheffield United</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>462 rows × 48 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-6bca13ed-d1e7-4698-a1ed-ded06436cfaf')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-6bca13ed-d1e7-4698-a1ed-ded06436cfaf button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-6bca13ed-d1e7-4698-a1ed-ded06436cfaf');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-e8c30ea0-98ce-498a-87f0-365dece8c7f8\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-e8c30ea0-98ce-498a-87f0-365dece8c7f8')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-e8c30ea0-98ce-498a-87f0-365dece8c7f8 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 58
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "EPL_player_df['goals'] = EPL_player_df['goals_1wks_x'].astype(int)\n",
        "top25goals = EPL_player_df.nlargest(20, 'goals')\n",
        "top25goals"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "id": "3H-vTRXF8VDs",
        "outputId": "5ca54046-1c88-4625-e45f-137c8c50f4cb"
      },
      "execution_count": 59,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "       id      player_name games_x time_x goals_1wks_x           xG_1wks_x  \\\n",
              "0    8260   Erling Haaland      11    945           11  11.495322853326797   \n",
              "1     453    Son Heung-Min      11    929            8   4.824764966964722   \n",
              "2    1250    Mohamed Salah      11    975            8   7.727359086275101   \n",
              "3     468    Callum Wilson      10    475            7   7.311267621815205   \n",
              "4    1776     Jarrod Bowen      11    990            7   4.998918272554874   \n",
              "5    5232   Alexander Isak       8    507            6   6.077839493751526   \n",
              "6    6552     Bryan Mbeumo      11    990            6   5.779258228838444   \n",
              "7    8845   Hee-Chan Hwang      11    695            6   3.276272587478161   \n",
              "8    6122     Douglas Luiz      11    958            5  2.9643095759674907   \n",
              "9    6482    Eddie Nketiah      11    784            5  3.8146728575229645   \n",
              "10   8865    Ollie Watkins      11    969            5   6.405120268464088   \n",
              "11  10048  Nicolas Jackson      10    758            5   7.551803696900606   \n",
              "12  10177    Evan Ferguson      11    597            5  2.5198461320251226   \n",
              "13   1679  Dominic Solanke      11    988            4    4.81248227506876   \n",
              "14   3697  Odsonne Edouard      10    871            4  3.7252651304006577   \n",
              "15   7322      Bukayo Saka      10    877            4   4.516813714057207   \n",
              "16   8150   Anthony Gordon      10    818            4   3.548388883471489   \n",
              "17  10720     Darwin Núñez      10    503            4   6.630820595659316   \n",
              "18  10846   Julián Álvarez      11    926            4  3.5668067261576653   \n",
              "19    618  Raheem Sterling      11    913            3  3.3183523938059807   \n",
              "\n",
              "   assists_1wks_x             xA_1wks_x shots_1wks_x key_passes_1wks_x  ...  \\\n",
              "0               2    2.5927075762301683           42                11  ...   \n",
              "1               1     3.000117938965559           30                19  ...   \n",
              "2               4     5.920990411192179           35                25  ...   \n",
              "3               0  0.015900330618023872           21                 1  ...   \n",
              "4               1    1.9063566271215677           32                 8  ...   \n",
              "5               0   0.43385306745767593           18                 4  ...   \n",
              "6               2    2.5698168575763702           31                16  ...   \n",
              "7               2    2.0519578084349632           17                11  ...   \n",
              "8               1    0.8472647964954376           20                13  ...   \n",
              "9               0   0.34161655977368355           25                 6  ...   \n",
              "10              5     3.135984007269144           33                19  ...   \n",
              "11              0    0.7351047229021788           30                 7  ...   \n",
              "12              0    0.5592889748513699           18                 4  ...   \n",
              "13              1    0.5222105234861374           29                 9  ...   \n",
              "14              0    0.6526215495541692           25                 8  ...   \n",
              "15              3    2.2316470593214035           19                22  ...   \n",
              "16              2     2.391785951331258           20                 9  ...   \n",
              "17              3    1.7272627791389823           32                 6  ...   \n",
              "18              3    1.9792699664831161           32                25  ...   \n",
              "19              1     1.926229514181614           22                14  ...   \n",
              "\n",
              "   key_passes_1wks_y yellow_cards red_cards position_y  \\\n",
              "0                 11            0         0          F   \n",
              "1                 19            0         0        F M   \n",
              "2                 25            1         0          F   \n",
              "3                  1            1         0        F S   \n",
              "4                  8            1         0        F M   \n",
              "5                  4            0         0        F S   \n",
              "6                 16            1         0          F   \n",
              "7                 11            3         0      F M S   \n",
              "8                 13            4         0          M   \n",
              "9                  6            2         0        F S   \n",
              "10                19            0         0          F   \n",
              "11                 7            6         0        F S   \n",
              "12                 4            0         0        F S   \n",
              "13                 9            1         0          F   \n",
              "14                 8            2         0          F   \n",
              "15                22            1         0          F   \n",
              "16                 9            6         0        F S   \n",
              "17                 6            1         0        F S   \n",
              "18                25            2         0        F M   \n",
              "19                14            2         0      F M S   \n",
              "\n",
              "               team_title_y npg_1wks_y         npxG_1wks_y  \\\n",
              "0           Manchester City          9   9.211816400289536   \n",
              "1                 Tottenham          8   4.824764966964722   \n",
              "2                 Liverpool          5   4.682757988572121   \n",
              "3          Newcastle United          5  5.7889300510287285   \n",
              "4                  West Ham          7   4.998918272554874   \n",
              "5          Newcastle United          5   5.316670656204224   \n",
              "6                 Brentford          4  4.2569204941391945   \n",
              "7   Wolverhampton Wanderers          6   3.276272587478161   \n",
              "8               Aston Villa          2  0.6808030409738421   \n",
              "9                   Arsenal          5  3.8146728575229645   \n",
              "10              Aston Villa          5   6.405120268464088   \n",
              "11                  Chelsea          5   7.551803696900606   \n",
              "12                 Brighton          5  2.5198461320251226   \n",
              "13              Bournemouth          4    4.81248227506876   \n",
              "14           Crystal Palace          4  3.7252651304006577   \n",
              "15                  Arsenal          2   2.994476091116667   \n",
              "16         Newcastle United          4   3.548388883471489   \n",
              "17                Liverpool          4   6.630820595659316   \n",
              "18          Manchester City          4  3.5668067261576653   \n",
              "19                  Chelsea          3  3.3183523938059807   \n",
              "\n",
              "               xGChain           xGBuildup goals  \n",
              "0   11.093419320881367  1.1622753702104092    11  \n",
              "1     9.62911732494831     2.9587726239115     8  \n",
              "2     11.1686532497406   3.551269993185997     8  \n",
              "3    6.403569312766194  0.8389131352305412     7  \n",
              "4   5.8975516855716705    1.30326790176332     7  \n",
              "5    5.783982276916504   1.147395420819521     6  \n",
              "6    7.954953163862228  2.8845055773854256     6  \n",
              "7   5.6143752643838525  1.3607335397973657     6  \n",
              "8    6.618165168911219   6.077041679993272     5  \n",
              "9   3.7399339117109776  0.5830877497792244     5  \n",
              "10  10.205531924962997   1.472631273791194     5  \n",
              "11   8.325011420994997  1.1923293694853783     5  \n",
              "12   4.790788099169731  1.8316275216639042     5  \n",
              "13   5.323655426502228  0.5667736940085888     4  \n",
              "14   4.236545253545046  1.1896401606500149     4  \n",
              "15   5.748690724372864   1.924367766827345     4  \n",
              "16   8.361312344670296   3.410523632541299     4  \n",
              "17   8.596202209591866  1.6152597591280937     4  \n",
              "18   9.270572356879711   5.628789268434048     4  \n",
              "19   8.709891468286514   4.442411432042718     3  \n",
              "\n",
              "[20 rows x 49 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-04f68378-fdfe-42d3-b680-756d360b679a\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>player_name</th>\n",
              "      <th>games_x</th>\n",
              "      <th>time_x</th>\n",
              "      <th>goals_1wks_x</th>\n",
              "      <th>xG_1wks_x</th>\n",
              "      <th>assists_1wks_x</th>\n",
              "      <th>xA_1wks_x</th>\n",
              "      <th>shots_1wks_x</th>\n",
              "      <th>key_passes_1wks_x</th>\n",
              "      <th>...</th>\n",
              "      <th>key_passes_1wks_y</th>\n",
              "      <th>yellow_cards</th>\n",
              "      <th>red_cards</th>\n",
              "      <th>position_y</th>\n",
              "      <th>team_title_y</th>\n",
              "      <th>npg_1wks_y</th>\n",
              "      <th>npxG_1wks_y</th>\n",
              "      <th>xGChain</th>\n",
              "      <th>xGBuildup</th>\n",
              "      <th>goals</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>8260</td>\n",
              "      <td>Erling Haaland</td>\n",
              "      <td>11</td>\n",
              "      <td>945</td>\n",
              "      <td>11</td>\n",
              "      <td>11.495322853326797</td>\n",
              "      <td>2</td>\n",
              "      <td>2.5927075762301683</td>\n",
              "      <td>42</td>\n",
              "      <td>11</td>\n",
              "      <td>...</td>\n",
              "      <td>11</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>F</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>9</td>\n",
              "      <td>9.211816400289536</td>\n",
              "      <td>11.093419320881367</td>\n",
              "      <td>1.1622753702104092</td>\n",
              "      <td>11</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>453</td>\n",
              "      <td>Son Heung-Min</td>\n",
              "      <td>11</td>\n",
              "      <td>929</td>\n",
              "      <td>8</td>\n",
              "      <td>4.824764966964722</td>\n",
              "      <td>1</td>\n",
              "      <td>3.000117938965559</td>\n",
              "      <td>30</td>\n",
              "      <td>19</td>\n",
              "      <td>...</td>\n",
              "      <td>19</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>F M</td>\n",
              "      <td>Tottenham</td>\n",
              "      <td>8</td>\n",
              "      <td>4.824764966964722</td>\n",
              "      <td>9.62911732494831</td>\n",
              "      <td>2.9587726239115</td>\n",
              "      <td>8</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>1250</td>\n",
              "      <td>Mohamed Salah</td>\n",
              "      <td>11</td>\n",
              "      <td>975</td>\n",
              "      <td>8</td>\n",
              "      <td>7.727359086275101</td>\n",
              "      <td>4</td>\n",
              "      <td>5.920990411192179</td>\n",
              "      <td>35</td>\n",
              "      <td>25</td>\n",
              "      <td>...</td>\n",
              "      <td>25</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>F</td>\n",
              "      <td>Liverpool</td>\n",
              "      <td>5</td>\n",
              "      <td>4.682757988572121</td>\n",
              "      <td>11.1686532497406</td>\n",
              "      <td>3.551269993185997</td>\n",
              "      <td>8</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>468</td>\n",
              "      <td>Callum Wilson</td>\n",
              "      <td>10</td>\n",
              "      <td>475</td>\n",
              "      <td>7</td>\n",
              "      <td>7.311267621815205</td>\n",
              "      <td>0</td>\n",
              "      <td>0.015900330618023872</td>\n",
              "      <td>21</td>\n",
              "      <td>1</td>\n",
              "      <td>...</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>F S</td>\n",
              "      <td>Newcastle United</td>\n",
              "      <td>5</td>\n",
              "      <td>5.7889300510287285</td>\n",
              "      <td>6.403569312766194</td>\n",
              "      <td>0.8389131352305412</td>\n",
              "      <td>7</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>1776</td>\n",
              "      <td>Jarrod Bowen</td>\n",
              "      <td>11</td>\n",
              "      <td>990</td>\n",
              "      <td>7</td>\n",
              "      <td>4.998918272554874</td>\n",
              "      <td>1</td>\n",
              "      <td>1.9063566271215677</td>\n",
              "      <td>32</td>\n",
              "      <td>8</td>\n",
              "      <td>...</td>\n",
              "      <td>8</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>F M</td>\n",
              "      <td>West Ham</td>\n",
              "      <td>7</td>\n",
              "      <td>4.998918272554874</td>\n",
              "      <td>5.8975516855716705</td>\n",
              "      <td>1.30326790176332</td>\n",
              "      <td>7</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>5232</td>\n",
              "      <td>Alexander Isak</td>\n",
              "      <td>8</td>\n",
              "      <td>507</td>\n",
              "      <td>6</td>\n",
              "      <td>6.077839493751526</td>\n",
              "      <td>0</td>\n",
              "      <td>0.43385306745767593</td>\n",
              "      <td>18</td>\n",
              "      <td>4</td>\n",
              "      <td>...</td>\n",
              "      <td>4</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>F S</td>\n",
              "      <td>Newcastle United</td>\n",
              "      <td>5</td>\n",
              "      <td>5.316670656204224</td>\n",
              "      <td>5.783982276916504</td>\n",
              "      <td>1.147395420819521</td>\n",
              "      <td>6</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>6552</td>\n",
              "      <td>Bryan Mbeumo</td>\n",
              "      <td>11</td>\n",
              "      <td>990</td>\n",
              "      <td>6</td>\n",
              "      <td>5.779258228838444</td>\n",
              "      <td>2</td>\n",
              "      <td>2.5698168575763702</td>\n",
              "      <td>31</td>\n",
              "      <td>16</td>\n",
              "      <td>...</td>\n",
              "      <td>16</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>F</td>\n",
              "      <td>Brentford</td>\n",
              "      <td>4</td>\n",
              "      <td>4.2569204941391945</td>\n",
              "      <td>7.954953163862228</td>\n",
              "      <td>2.8845055773854256</td>\n",
              "      <td>6</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>8845</td>\n",
              "      <td>Hee-Chan Hwang</td>\n",
              "      <td>11</td>\n",
              "      <td>695</td>\n",
              "      <td>6</td>\n",
              "      <td>3.276272587478161</td>\n",
              "      <td>2</td>\n",
              "      <td>2.0519578084349632</td>\n",
              "      <td>17</td>\n",
              "      <td>11</td>\n",
              "      <td>...</td>\n",
              "      <td>11</td>\n",
              "      <td>3</td>\n",
              "      <td>0</td>\n",
              "      <td>F M S</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>6</td>\n",
              "      <td>3.276272587478161</td>\n",
              "      <td>5.6143752643838525</td>\n",
              "      <td>1.3607335397973657</td>\n",
              "      <td>6</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>6122</td>\n",
              "      <td>Douglas Luiz</td>\n",
              "      <td>11</td>\n",
              "      <td>958</td>\n",
              "      <td>5</td>\n",
              "      <td>2.9643095759674907</td>\n",
              "      <td>1</td>\n",
              "      <td>0.8472647964954376</td>\n",
              "      <td>20</td>\n",
              "      <td>13</td>\n",
              "      <td>...</td>\n",
              "      <td>13</td>\n",
              "      <td>4</td>\n",
              "      <td>0</td>\n",
              "      <td>M</td>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>2</td>\n",
              "      <td>0.6808030409738421</td>\n",
              "      <td>6.618165168911219</td>\n",
              "      <td>6.077041679993272</td>\n",
              "      <td>5</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>6482</td>\n",
              "      <td>Eddie Nketiah</td>\n",
              "      <td>11</td>\n",
              "      <td>784</td>\n",
              "      <td>5</td>\n",
              "      <td>3.8146728575229645</td>\n",
              "      <td>0</td>\n",
              "      <td>0.34161655977368355</td>\n",
              "      <td>25</td>\n",
              "      <td>6</td>\n",
              "      <td>...</td>\n",
              "      <td>6</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>F S</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>5</td>\n",
              "      <td>3.8146728575229645</td>\n",
              "      <td>3.7399339117109776</td>\n",
              "      <td>0.5830877497792244</td>\n",
              "      <td>5</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10</th>\n",
              "      <td>8865</td>\n",
              "      <td>Ollie Watkins</td>\n",
              "      <td>11</td>\n",
              "      <td>969</td>\n",
              "      <td>5</td>\n",
              "      <td>6.405120268464088</td>\n",
              "      <td>5</td>\n",
              "      <td>3.135984007269144</td>\n",
              "      <td>33</td>\n",
              "      <td>19</td>\n",
              "      <td>...</td>\n",
              "      <td>19</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>F</td>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>5</td>\n",
              "      <td>6.405120268464088</td>\n",
              "      <td>10.205531924962997</td>\n",
              "      <td>1.472631273791194</td>\n",
              "      <td>5</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>11</th>\n",
              "      <td>10048</td>\n",
              "      <td>Nicolas Jackson</td>\n",
              "      <td>10</td>\n",
              "      <td>758</td>\n",
              "      <td>5</td>\n",
              "      <td>7.551803696900606</td>\n",
              "      <td>0</td>\n",
              "      <td>0.7351047229021788</td>\n",
              "      <td>30</td>\n",
              "      <td>7</td>\n",
              "      <td>...</td>\n",
              "      <td>7</td>\n",
              "      <td>6</td>\n",
              "      <td>0</td>\n",
              "      <td>F S</td>\n",
              "      <td>Chelsea</td>\n",
              "      <td>5</td>\n",
              "      <td>7.551803696900606</td>\n",
              "      <td>8.325011420994997</td>\n",
              "      <td>1.1923293694853783</td>\n",
              "      <td>5</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>12</th>\n",
              "      <td>10177</td>\n",
              "      <td>Evan Ferguson</td>\n",
              "      <td>11</td>\n",
              "      <td>597</td>\n",
              "      <td>5</td>\n",
              "      <td>2.5198461320251226</td>\n",
              "      <td>0</td>\n",
              "      <td>0.5592889748513699</td>\n",
              "      <td>18</td>\n",
              "      <td>4</td>\n",
              "      <td>...</td>\n",
              "      <td>4</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>F S</td>\n",
              "      <td>Brighton</td>\n",
              "      <td>5</td>\n",
              "      <td>2.5198461320251226</td>\n",
              "      <td>4.790788099169731</td>\n",
              "      <td>1.8316275216639042</td>\n",
              "      <td>5</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>13</th>\n",
              "      <td>1679</td>\n",
              "      <td>Dominic Solanke</td>\n",
              "      <td>11</td>\n",
              "      <td>988</td>\n",
              "      <td>4</td>\n",
              "      <td>4.81248227506876</td>\n",
              "      <td>1</td>\n",
              "      <td>0.5222105234861374</td>\n",
              "      <td>29</td>\n",
              "      <td>9</td>\n",
              "      <td>...</td>\n",
              "      <td>9</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>F</td>\n",
              "      <td>Bournemouth</td>\n",
              "      <td>4</td>\n",
              "      <td>4.81248227506876</td>\n",
              "      <td>5.323655426502228</td>\n",
              "      <td>0.5667736940085888</td>\n",
              "      <td>4</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>14</th>\n",
              "      <td>3697</td>\n",
              "      <td>Odsonne Edouard</td>\n",
              "      <td>10</td>\n",
              "      <td>871</td>\n",
              "      <td>4</td>\n",
              "      <td>3.7252651304006577</td>\n",
              "      <td>0</td>\n",
              "      <td>0.6526215495541692</td>\n",
              "      <td>25</td>\n",
              "      <td>8</td>\n",
              "      <td>...</td>\n",
              "      <td>8</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>F</td>\n",
              "      <td>Crystal Palace</td>\n",
              "      <td>4</td>\n",
              "      <td>3.7252651304006577</td>\n",
              "      <td>4.236545253545046</td>\n",
              "      <td>1.1896401606500149</td>\n",
              "      <td>4</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>15</th>\n",
              "      <td>7322</td>\n",
              "      <td>Bukayo Saka</td>\n",
              "      <td>10</td>\n",
              "      <td>877</td>\n",
              "      <td>4</td>\n",
              "      <td>4.516813714057207</td>\n",
              "      <td>3</td>\n",
              "      <td>2.2316470593214035</td>\n",
              "      <td>19</td>\n",
              "      <td>22</td>\n",
              "      <td>...</td>\n",
              "      <td>22</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>F</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>2</td>\n",
              "      <td>2.994476091116667</td>\n",
              "      <td>5.748690724372864</td>\n",
              "      <td>1.924367766827345</td>\n",
              "      <td>4</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>16</th>\n",
              "      <td>8150</td>\n",
              "      <td>Anthony Gordon</td>\n",
              "      <td>10</td>\n",
              "      <td>818</td>\n",
              "      <td>4</td>\n",
              "      <td>3.548388883471489</td>\n",
              "      <td>2</td>\n",
              "      <td>2.391785951331258</td>\n",
              "      <td>20</td>\n",
              "      <td>9</td>\n",
              "      <td>...</td>\n",
              "      <td>9</td>\n",
              "      <td>6</td>\n",
              "      <td>0</td>\n",
              "      <td>F S</td>\n",
              "      <td>Newcastle United</td>\n",
              "      <td>4</td>\n",
              "      <td>3.548388883471489</td>\n",
              "      <td>8.361312344670296</td>\n",
              "      <td>3.410523632541299</td>\n",
              "      <td>4</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>17</th>\n",
              "      <td>10720</td>\n",
              "      <td>Darwin Núñez</td>\n",
              "      <td>10</td>\n",
              "      <td>503</td>\n",
              "      <td>4</td>\n",
              "      <td>6.630820595659316</td>\n",
              "      <td>3</td>\n",
              "      <td>1.7272627791389823</td>\n",
              "      <td>32</td>\n",
              "      <td>6</td>\n",
              "      <td>...</td>\n",
              "      <td>6</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>F S</td>\n",
              "      <td>Liverpool</td>\n",
              "      <td>4</td>\n",
              "      <td>6.630820595659316</td>\n",
              "      <td>8.596202209591866</td>\n",
              "      <td>1.6152597591280937</td>\n",
              "      <td>4</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>18</th>\n",
              "      <td>10846</td>\n",
              "      <td>Julián Álvarez</td>\n",
              "      <td>11</td>\n",
              "      <td>926</td>\n",
              "      <td>4</td>\n",
              "      <td>3.5668067261576653</td>\n",
              "      <td>3</td>\n",
              "      <td>1.9792699664831161</td>\n",
              "      <td>32</td>\n",
              "      <td>25</td>\n",
              "      <td>...</td>\n",
              "      <td>25</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>F M</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>4</td>\n",
              "      <td>3.5668067261576653</td>\n",
              "      <td>9.270572356879711</td>\n",
              "      <td>5.628789268434048</td>\n",
              "      <td>4</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>19</th>\n",
              "      <td>618</td>\n",
              "      <td>Raheem Sterling</td>\n",
              "      <td>11</td>\n",
              "      <td>913</td>\n",
              "      <td>3</td>\n",
              "      <td>3.3183523938059807</td>\n",
              "      <td>1</td>\n",
              "      <td>1.926229514181614</td>\n",
              "      <td>22</td>\n",
              "      <td>14</td>\n",
              "      <td>...</td>\n",
              "      <td>14</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>F M S</td>\n",
              "      <td>Chelsea</td>\n",
              "      <td>3</td>\n",
              "      <td>3.3183523938059807</td>\n",
              "      <td>8.709891468286514</td>\n",
              "      <td>4.442411432042718</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>20 rows × 49 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-04f68378-fdfe-42d3-b680-756d360b679a')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-04f68378-fdfe-42d3-b680-756d360b679a button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-04f68378-fdfe-42d3-b680-756d360b679a');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-a660b45b-60ba-43f8-9c20-9e4da006a4a1\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-a660b45b-60ba-43f8-9c20-9e4da006a4a1')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-a660b45b-60ba-43f8-9c20-9e4da006a4a1 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 59
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "EPL_player_df['assists'] = EPL_player_df['assists_1wks_x'].astype(int)\n",
        "top25assists = EPL_player_df.nlargest(20, 'assists')\n",
        "top25assists"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "id": "QhNKarUM-fT7",
        "outputId": "d11ba27e-a252-47a9-c08e-102652983dfe"
      },
      "execution_count": 60,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "        id           player_name games_x time_x goals_1wks_x  \\\n",
              "99    6382            Pedro Neto      10    894            1   \n",
              "180    652       Kieran Trippier      11    960            0   \n",
              "10    8865         Ollie Watkins      11    969            5   \n",
              "33    6818        James Maddison      11    909            3   \n",
              "61    8981           Jéremy Doku       8    511            2   \n",
              "2     1250         Mohamed Salah      11    975            8   \n",
              "340   8965       Vladimir Coufal      11    989            0   \n",
              "15    7322           Bukayo Saka      10    877            4   \n",
              "17   10720          Darwin Núñez      10    503            4   \n",
              "18   10846        Julián Álvarez      11    926            4   \n",
              "30    6055            Phil Foden      11    830            3   \n",
              "31    6556          Moussa Diaby      11    919            3   \n",
              "40   10806          Kaoru Mitoma      11    934            3   \n",
              "45     843     James Ward-Prowse      10    888            2   \n",
              "75     672           Jordan Ayew      11    924            1   \n",
              "88    5136             Estupiñán       6    501            1   \n",
              "92    6026           Richarlison      10    544            1   \n",
              "96    6063          Jacob Murphy       5    115            1   \n",
              "137   9524        Anthony Elanga      11    545            1   \n",
              "251   5735  Jean-Philippe Mateta       8    371            0   \n",
              "\n",
              "                xG_1wks_x assists_1wks_x           xA_1wks_x shots_1wks_x  \\\n",
              "99     1.8730668723583221              7  3.4589802250266075           18   \n",
              "180  0.056369323283433914              6    4.59743788279593            2   \n",
              "10      6.405120268464088              5   3.135984007269144           33   \n",
              "33      2.944616189226508              5  3.4641558043658733           27   \n",
              "61     0.7487953752279282              5   2.190131112933159           15   \n",
              "2       7.727359086275101              4   5.920990411192179           35   \n",
              "340  0.014404140412807465              4  1.4812367362901568            1   \n",
              "15      4.516813714057207              3  2.2316470593214035           19   \n",
              "17      6.630820595659316              3  1.7272627791389823           32   \n",
              "18     3.5668067261576653              3  1.9792699664831161           32   \n",
              "30     2.8624750822782516              3   2.009816337376833           21   \n",
              "31     1.9824714586138725              3   4.666145384311676           23   \n",
              "40      3.665834251791239              3  2.1948801651597023           20   \n",
              "45     1.8856397103518248              3   2.850056439638138           11   \n",
              "75     1.9943842329084873              3  1.9240549504756927           21   \n",
              "88     0.9581431178376079              3   2.586997412145138            8   \n",
              "92      2.951672403141856              3  0.8805450648069382           22   \n",
              "96    0.13770722597837448              3  1.4644091129302979            4   \n",
              "137    1.2158437799662352              3  1.5711921826004982           15   \n",
              "251    0.5759328752756119              3  1.1801335588097572            4   \n",
              "\n",
              "    key_passes_1wks_x  ... yellow_cards red_cards position_y  \\\n",
              "99                 24  ...            3         0        F M   \n",
              "180                33  ...            3         0          D   \n",
              "10                 19  ...            0         0          F   \n",
              "33                 31  ...            2         0          M   \n",
              "61                 15  ...            1         0      D M S   \n",
              "2                  25  ...            1         0          F   \n",
              "340                14  ...            0         0          D   \n",
              "15                 22  ...            1         0          F   \n",
              "17                  6  ...            1         0        F S   \n",
              "18                 25  ...            2         0        F M   \n",
              "30                 23  ...            1         0      F M S   \n",
              "31                 21  ...            0         0        F M   \n",
              "40                 17  ...            3         0    D F M S   \n",
              "45                 23  ...            1         0          M   \n",
              "75                  9  ...            4         0        F M   \n",
              "88                 13  ...            2         0          D   \n",
              "92                  7  ...            2         0      F M S   \n",
              "96                  4  ...            0         0        F S   \n",
              "137                 7  ...            0         0      F M S   \n",
              "251                 6  ...            1         0        F S   \n",
              "\n",
              "                team_title_y npg_1wks_y           npxG_1wks_y  \\\n",
              "99   Wolverhampton Wanderers          1    1.8730668723583221   \n",
              "180         Newcastle United          0  0.056369323283433914   \n",
              "10               Aston Villa          5     6.405120268464088   \n",
              "33                 Tottenham          3     2.944616189226508   \n",
              "61           Manchester City          2    0.7487953752279282   \n",
              "2                  Liverpool          5     4.682757988572121   \n",
              "340                 West Ham          0  0.014404140412807465   \n",
              "15                   Arsenal          2     2.994476091116667   \n",
              "17                 Liverpool          4     6.630820595659316   \n",
              "18           Manchester City          4    3.5668067261576653   \n",
              "30           Manchester City          3    2.8624750822782516   \n",
              "31               Aston Villa          3    1.9824714586138725   \n",
              "40                  Brighton          3     3.665834251791239   \n",
              "45                  West Ham          2    1.8856397103518248   \n",
              "75            Crystal Palace          1    1.9943842329084873   \n",
              "88                  Brighton          1    0.9581431178376079   \n",
              "92                 Tottenham          1     2.951672403141856   \n",
              "96          Newcastle United          1   0.13770722597837448   \n",
              "137        Nottingham Forest          1    1.2158437799662352   \n",
              "251           Crystal Palace          0    0.5759328752756119   \n",
              "\n",
              "                xGChain           xGBuildup goals assists  \n",
              "99    4.809771712869406  1.1124582178890705     1       7  \n",
              "180   9.075174286961555   6.505363140255213     0       6  \n",
              "10   10.205531924962997   1.472631273791194     5       5  \n",
              "33     9.78583274781704   5.331316661089659     3       5  \n",
              "61    3.722792759537697   1.909281775355339     2       5  \n",
              "2      11.1686532497406   3.551269993185997     8       4  \n",
              "340   3.113680575042963  2.6330476850271225     0       4  \n",
              "15    5.748690724372864   1.924367766827345     4       3  \n",
              "17    8.596202209591866  1.6152597591280937     4       3  \n",
              "18    9.270572356879711   5.628789268434048     4       3  \n",
              "30    7.933347567915916   4.561529872938991     3       3  \n",
              "31    9.033911660313606   4.717657839879394     3       3  \n",
              "40    9.509198278188705   5.045924711972475     3       3  \n",
              "45    5.367634264752269   3.439376814290881     2       3  \n",
              "75    4.560500510036945  2.2040046602487564     1       3  \n",
              "88    5.427657574415207  3.5554743763059378     1       3  \n",
              "92    4.184897594153881  0.7647342011332512     1       3  \n",
              "96   2.8427510410547256  1.2406347692012787     1       3  \n",
              "137  3.4383076205849648  0.8343126475811005     1       3  \n",
              "251  1.8019043952226639  0.2895534597337246     0       3  \n",
              "\n",
              "[20 rows x 50 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-90f19914-7776-4794-b85d-7418788df213\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>player_name</th>\n",
              "      <th>games_x</th>\n",
              "      <th>time_x</th>\n",
              "      <th>goals_1wks_x</th>\n",
              "      <th>xG_1wks_x</th>\n",
              "      <th>assists_1wks_x</th>\n",
              "      <th>xA_1wks_x</th>\n",
              "      <th>shots_1wks_x</th>\n",
              "      <th>key_passes_1wks_x</th>\n",
              "      <th>...</th>\n",
              "      <th>yellow_cards</th>\n",
              "      <th>red_cards</th>\n",
              "      <th>position_y</th>\n",
              "      <th>team_title_y</th>\n",
              "      <th>npg_1wks_y</th>\n",
              "      <th>npxG_1wks_y</th>\n",
              "      <th>xGChain</th>\n",
              "      <th>xGBuildup</th>\n",
              "      <th>goals</th>\n",
              "      <th>assists</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>99</th>\n",
              "      <td>6382</td>\n",
              "      <td>Pedro Neto</td>\n",
              "      <td>10</td>\n",
              "      <td>894</td>\n",
              "      <td>1</td>\n",
              "      <td>1.8730668723583221</td>\n",
              "      <td>7</td>\n",
              "      <td>3.4589802250266075</td>\n",
              "      <td>18</td>\n",
              "      <td>24</td>\n",
              "      <td>...</td>\n",
              "      <td>3</td>\n",
              "      <td>0</td>\n",
              "      <td>F M</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>1</td>\n",
              "      <td>1.8730668723583221</td>\n",
              "      <td>4.809771712869406</td>\n",
              "      <td>1.1124582178890705</td>\n",
              "      <td>1</td>\n",
              "      <td>7</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>180</th>\n",
              "      <td>652</td>\n",
              "      <td>Kieran Trippier</td>\n",
              "      <td>11</td>\n",
              "      <td>960</td>\n",
              "      <td>0</td>\n",
              "      <td>0.056369323283433914</td>\n",
              "      <td>6</td>\n",
              "      <td>4.59743788279593</td>\n",
              "      <td>2</td>\n",
              "      <td>33</td>\n",
              "      <td>...</td>\n",
              "      <td>3</td>\n",
              "      <td>0</td>\n",
              "      <td>D</td>\n",
              "      <td>Newcastle United</td>\n",
              "      <td>0</td>\n",
              "      <td>0.056369323283433914</td>\n",
              "      <td>9.075174286961555</td>\n",
              "      <td>6.505363140255213</td>\n",
              "      <td>0</td>\n",
              "      <td>6</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10</th>\n",
              "      <td>8865</td>\n",
              "      <td>Ollie Watkins</td>\n",
              "      <td>11</td>\n",
              "      <td>969</td>\n",
              "      <td>5</td>\n",
              "      <td>6.405120268464088</td>\n",
              "      <td>5</td>\n",
              "      <td>3.135984007269144</td>\n",
              "      <td>33</td>\n",
              "      <td>19</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>F</td>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>5</td>\n",
              "      <td>6.405120268464088</td>\n",
              "      <td>10.205531924962997</td>\n",
              "      <td>1.472631273791194</td>\n",
              "      <td>5</td>\n",
              "      <td>5</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>33</th>\n",
              "      <td>6818</td>\n",
              "      <td>James Maddison</td>\n",
              "      <td>11</td>\n",
              "      <td>909</td>\n",
              "      <td>3</td>\n",
              "      <td>2.944616189226508</td>\n",
              "      <td>5</td>\n",
              "      <td>3.4641558043658733</td>\n",
              "      <td>27</td>\n",
              "      <td>31</td>\n",
              "      <td>...</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>M</td>\n",
              "      <td>Tottenham</td>\n",
              "      <td>3</td>\n",
              "      <td>2.944616189226508</td>\n",
              "      <td>9.78583274781704</td>\n",
              "      <td>5.331316661089659</td>\n",
              "      <td>3</td>\n",
              "      <td>5</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>61</th>\n",
              "      <td>8981</td>\n",
              "      <td>Jéremy Doku</td>\n",
              "      <td>8</td>\n",
              "      <td>511</td>\n",
              "      <td>2</td>\n",
              "      <td>0.7487953752279282</td>\n",
              "      <td>5</td>\n",
              "      <td>2.190131112933159</td>\n",
              "      <td>15</td>\n",
              "      <td>15</td>\n",
              "      <td>...</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>D M S</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>2</td>\n",
              "      <td>0.7487953752279282</td>\n",
              "      <td>3.722792759537697</td>\n",
              "      <td>1.909281775355339</td>\n",
              "      <td>2</td>\n",
              "      <td>5</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>1250</td>\n",
              "      <td>Mohamed Salah</td>\n",
              "      <td>11</td>\n",
              "      <td>975</td>\n",
              "      <td>8</td>\n",
              "      <td>7.727359086275101</td>\n",
              "      <td>4</td>\n",
              "      <td>5.920990411192179</td>\n",
              "      <td>35</td>\n",
              "      <td>25</td>\n",
              "      <td>...</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>F</td>\n",
              "      <td>Liverpool</td>\n",
              "      <td>5</td>\n",
              "      <td>4.682757988572121</td>\n",
              "      <td>11.1686532497406</td>\n",
              "      <td>3.551269993185997</td>\n",
              "      <td>8</td>\n",
              "      <td>4</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>340</th>\n",
              "      <td>8965</td>\n",
              "      <td>Vladimir Coufal</td>\n",
              "      <td>11</td>\n",
              "      <td>989</td>\n",
              "      <td>0</td>\n",
              "      <td>0.014404140412807465</td>\n",
              "      <td>4</td>\n",
              "      <td>1.4812367362901568</td>\n",
              "      <td>1</td>\n",
              "      <td>14</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>D</td>\n",
              "      <td>West Ham</td>\n",
              "      <td>0</td>\n",
              "      <td>0.014404140412807465</td>\n",
              "      <td>3.113680575042963</td>\n",
              "      <td>2.6330476850271225</td>\n",
              "      <td>0</td>\n",
              "      <td>4</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>15</th>\n",
              "      <td>7322</td>\n",
              "      <td>Bukayo Saka</td>\n",
              "      <td>10</td>\n",
              "      <td>877</td>\n",
              "      <td>4</td>\n",
              "      <td>4.516813714057207</td>\n",
              "      <td>3</td>\n",
              "      <td>2.2316470593214035</td>\n",
              "      <td>19</td>\n",
              "      <td>22</td>\n",
              "      <td>...</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>F</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>2</td>\n",
              "      <td>2.994476091116667</td>\n",
              "      <td>5.748690724372864</td>\n",
              "      <td>1.924367766827345</td>\n",
              "      <td>4</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>17</th>\n",
              "      <td>10720</td>\n",
              "      <td>Darwin Núñez</td>\n",
              "      <td>10</td>\n",
              "      <td>503</td>\n",
              "      <td>4</td>\n",
              "      <td>6.630820595659316</td>\n",
              "      <td>3</td>\n",
              "      <td>1.7272627791389823</td>\n",
              "      <td>32</td>\n",
              "      <td>6</td>\n",
              "      <td>...</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>F S</td>\n",
              "      <td>Liverpool</td>\n",
              "      <td>4</td>\n",
              "      <td>6.630820595659316</td>\n",
              "      <td>8.596202209591866</td>\n",
              "      <td>1.6152597591280937</td>\n",
              "      <td>4</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>18</th>\n",
              "      <td>10846</td>\n",
              "      <td>Julián Álvarez</td>\n",
              "      <td>11</td>\n",
              "      <td>926</td>\n",
              "      <td>4</td>\n",
              "      <td>3.5668067261576653</td>\n",
              "      <td>3</td>\n",
              "      <td>1.9792699664831161</td>\n",
              "      <td>32</td>\n",
              "      <td>25</td>\n",
              "      <td>...</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>F M</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>4</td>\n",
              "      <td>3.5668067261576653</td>\n",
              "      <td>9.270572356879711</td>\n",
              "      <td>5.628789268434048</td>\n",
              "      <td>4</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>30</th>\n",
              "      <td>6055</td>\n",
              "      <td>Phil Foden</td>\n",
              "      <td>11</td>\n",
              "      <td>830</td>\n",
              "      <td>3</td>\n",
              "      <td>2.8624750822782516</td>\n",
              "      <td>3</td>\n",
              "      <td>2.009816337376833</td>\n",
              "      <td>21</td>\n",
              "      <td>23</td>\n",
              "      <td>...</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>F M S</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>3</td>\n",
              "      <td>2.8624750822782516</td>\n",
              "      <td>7.933347567915916</td>\n",
              "      <td>4.561529872938991</td>\n",
              "      <td>3</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>31</th>\n",
              "      <td>6556</td>\n",
              "      <td>Moussa Diaby</td>\n",
              "      <td>11</td>\n",
              "      <td>919</td>\n",
              "      <td>3</td>\n",
              "      <td>1.9824714586138725</td>\n",
              "      <td>3</td>\n",
              "      <td>4.666145384311676</td>\n",
              "      <td>23</td>\n",
              "      <td>21</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>F M</td>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>3</td>\n",
              "      <td>1.9824714586138725</td>\n",
              "      <td>9.033911660313606</td>\n",
              "      <td>4.717657839879394</td>\n",
              "      <td>3</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>40</th>\n",
              "      <td>10806</td>\n",
              "      <td>Kaoru Mitoma</td>\n",
              "      <td>11</td>\n",
              "      <td>934</td>\n",
              "      <td>3</td>\n",
              "      <td>3.665834251791239</td>\n",
              "      <td>3</td>\n",
              "      <td>2.1948801651597023</td>\n",
              "      <td>20</td>\n",
              "      <td>17</td>\n",
              "      <td>...</td>\n",
              "      <td>3</td>\n",
              "      <td>0</td>\n",
              "      <td>D F M S</td>\n",
              "      <td>Brighton</td>\n",
              "      <td>3</td>\n",
              "      <td>3.665834251791239</td>\n",
              "      <td>9.509198278188705</td>\n",
              "      <td>5.045924711972475</td>\n",
              "      <td>3</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>45</th>\n",
              "      <td>843</td>\n",
              "      <td>James Ward-Prowse</td>\n",
              "      <td>10</td>\n",
              "      <td>888</td>\n",
              "      <td>2</td>\n",
              "      <td>1.8856397103518248</td>\n",
              "      <td>3</td>\n",
              "      <td>2.850056439638138</td>\n",
              "      <td>11</td>\n",
              "      <td>23</td>\n",
              "      <td>...</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>M</td>\n",
              "      <td>West Ham</td>\n",
              "      <td>2</td>\n",
              "      <td>1.8856397103518248</td>\n",
              "      <td>5.367634264752269</td>\n",
              "      <td>3.439376814290881</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>75</th>\n",
              "      <td>672</td>\n",
              "      <td>Jordan Ayew</td>\n",
              "      <td>11</td>\n",
              "      <td>924</td>\n",
              "      <td>1</td>\n",
              "      <td>1.9943842329084873</td>\n",
              "      <td>3</td>\n",
              "      <td>1.9240549504756927</td>\n",
              "      <td>21</td>\n",
              "      <td>9</td>\n",
              "      <td>...</td>\n",
              "      <td>4</td>\n",
              "      <td>0</td>\n",
              "      <td>F M</td>\n",
              "      <td>Crystal Palace</td>\n",
              "      <td>1</td>\n",
              "      <td>1.9943842329084873</td>\n",
              "      <td>4.560500510036945</td>\n",
              "      <td>2.2040046602487564</td>\n",
              "      <td>1</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>88</th>\n",
              "      <td>5136</td>\n",
              "      <td>Estupiñán</td>\n",
              "      <td>6</td>\n",
              "      <td>501</td>\n",
              "      <td>1</td>\n",
              "      <td>0.9581431178376079</td>\n",
              "      <td>3</td>\n",
              "      <td>2.586997412145138</td>\n",
              "      <td>8</td>\n",
              "      <td>13</td>\n",
              "      <td>...</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>D</td>\n",
              "      <td>Brighton</td>\n",
              "      <td>1</td>\n",
              "      <td>0.9581431178376079</td>\n",
              "      <td>5.427657574415207</td>\n",
              "      <td>3.5554743763059378</td>\n",
              "      <td>1</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>92</th>\n",
              "      <td>6026</td>\n",
              "      <td>Richarlison</td>\n",
              "      <td>10</td>\n",
              "      <td>544</td>\n",
              "      <td>1</td>\n",
              "      <td>2.951672403141856</td>\n",
              "      <td>3</td>\n",
              "      <td>0.8805450648069382</td>\n",
              "      <td>22</td>\n",
              "      <td>7</td>\n",
              "      <td>...</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>F M S</td>\n",
              "      <td>Tottenham</td>\n",
              "      <td>1</td>\n",
              "      <td>2.951672403141856</td>\n",
              "      <td>4.184897594153881</td>\n",
              "      <td>0.7647342011332512</td>\n",
              "      <td>1</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>96</th>\n",
              "      <td>6063</td>\n",
              "      <td>Jacob Murphy</td>\n",
              "      <td>5</td>\n",
              "      <td>115</td>\n",
              "      <td>1</td>\n",
              "      <td>0.13770722597837448</td>\n",
              "      <td>3</td>\n",
              "      <td>1.4644091129302979</td>\n",
              "      <td>4</td>\n",
              "      <td>4</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>F S</td>\n",
              "      <td>Newcastle United</td>\n",
              "      <td>1</td>\n",
              "      <td>0.13770722597837448</td>\n",
              "      <td>2.8427510410547256</td>\n",
              "      <td>1.2406347692012787</td>\n",
              "      <td>1</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>137</th>\n",
              "      <td>9524</td>\n",
              "      <td>Anthony Elanga</td>\n",
              "      <td>11</td>\n",
              "      <td>545</td>\n",
              "      <td>1</td>\n",
              "      <td>1.2158437799662352</td>\n",
              "      <td>3</td>\n",
              "      <td>1.5711921826004982</td>\n",
              "      <td>15</td>\n",
              "      <td>7</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>F M S</td>\n",
              "      <td>Nottingham Forest</td>\n",
              "      <td>1</td>\n",
              "      <td>1.2158437799662352</td>\n",
              "      <td>3.4383076205849648</td>\n",
              "      <td>0.8343126475811005</td>\n",
              "      <td>1</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>251</th>\n",
              "      <td>5735</td>\n",
              "      <td>Jean-Philippe Mateta</td>\n",
              "      <td>8</td>\n",
              "      <td>371</td>\n",
              "      <td>0</td>\n",
              "      <td>0.5759328752756119</td>\n",
              "      <td>3</td>\n",
              "      <td>1.1801335588097572</td>\n",
              "      <td>4</td>\n",
              "      <td>6</td>\n",
              "      <td>...</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>F S</td>\n",
              "      <td>Crystal Palace</td>\n",
              "      <td>0</td>\n",
              "      <td>0.5759328752756119</td>\n",
              "      <td>1.8019043952226639</td>\n",
              "      <td>0.2895534597337246</td>\n",
              "      <td>0</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>20 rows × 50 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-90f19914-7776-4794-b85d-7418788df213')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-90f19914-7776-4794-b85d-7418788df213 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-90f19914-7776-4794-b85d-7418788df213');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-362fa266-2da4-43ef-981d-b926c995709d\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-362fa266-2da4-43ef-981d-b926c995709d')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-362fa266-2da4-43ef-981d-b926c995709d button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 60
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import pandas as pd\n",
        "import plotly.express as px\n",
        "import plotly.graph_objects as go"
      ],
      "metadata": {
        "id": "t81EQEbg_2jQ"
      },
      "execution_count": 61,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "fig3= go.Figure()\n",
        "fig3.add_trace(go.Scatter(x = top25goals[\"goals\"],\n",
        "                          y = top25goals[\"player_name\"],\n",
        "                          mode = 'markers',\n",
        "                          marker_color = 'darkblue',\n",
        "                          marker_size = 10,\n",
        "                          name = 'goals'))\n",
        "fig3.add_trace(go.Scatter(x = top25goals[\"xG_1wks_x\"],\n",
        "                          y = top25goals[\"player_name\"],\n",
        "                          mode = 'markers',\n",
        "                          marker_color = 'darkorange',\n",
        "                          marker_size = 10,\n",
        "                          name = 'xG'))\n",
        "for i in range(0, len(top25goals)):\n",
        "               fig3.add_shape(type='line',\n",
        "                              x0 = top25goals[\"goals\"][i],\n",
        "                              y0 = i,\n",
        "                              x1 = top25goals[\"xG_1wks_x\"][i],\n",
        "                              y1 = i,\n",
        "                              line=dict(color='crimson', width = 3))\n",
        "fig3.update_layout(title_text =\n",
        "                    \"Goals vs xG\",\n",
        "                    title_font_size = 30)\n",
        "fig3.update_xaxes(range=[0, 30])\n",
        "fig3.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 542
        },
        "id": "pCjmRmyw-6sd",
        "outputId": "c0a0c4e7-7e58-4047-c2c4-864b8eb3f7b9"
      },
      "execution_count": 62,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<html>\n",
              "<head><meta charset=\"utf-8\" /></head>\n",
              "<body>\n",
              "    <div>            <script src=\"https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.5/MathJax.js?config=TeX-AMS-MML_SVG\"></script><script type=\"text/javascript\">if (window.MathJax && window.MathJax.Hub && window.MathJax.Hub.Config) {window.MathJax.Hub.Config({SVG: {font: \"STIX-Web\"}});}</script>                <script type=\"text/javascript\">window.PlotlyConfig = {MathJaxConfig: 'local'};</script>\n",
              "        <script charset=\"utf-8\" src=\"https://cdn.plot.ly/plotly-2.24.1.min.js\"></script>                <div id=\"2acf3ac3-3086-41cb-8a35-c2a5077084be\" class=\"plotly-graph-div\" style=\"height:525px; width:100%;\"></div>            <script type=\"text/javascript\">                                    window.PLOTLYENV=window.PLOTLYENV || {};                                    if (document.getElementById(\"2acf3ac3-3086-41cb-8a35-c2a5077084be\")) {                    Plotly.newPlot(                        \"2acf3ac3-3086-41cb-8a35-c2a5077084be\",                        [{\"marker\":{\"color\":\"darkblue\",\"size\":10},\"mode\":\"markers\",\"name\":\"goals\",\"x\":[11,8,8,7,7,6,6,6,5,5,5,5,5,4,4,4,4,4,4,3],\"y\":[\"Erling Haaland\",\"Son Heung-Min\",\"Mohamed Salah\",\"Callum Wilson\",\"Jarrod Bowen\",\"Alexander Isak\",\"Bryan Mbeumo\",\"Hee-Chan Hwang\",\"Douglas Luiz\",\"Eddie Nketiah\",\"Ollie Watkins\",\"Nicolas Jackson\",\"Evan Ferguson\",\"Dominic Solanke\",\"Odsonne Edouard\",\"Bukayo Saka\",\"Anthony Gordon\",\"Darwin N\\u00fa\\u00f1ez\",\"Juli\\u00e1n \\u00c1lvarez\",\"Raheem Sterling\"],\"type\":\"scatter\"},{\"marker\":{\"color\":\"darkorange\",\"size\":10},\"mode\":\"markers\",\"name\":\"xG\",\"x\":[\"11.495322853326797\",\"4.824764966964722\",\"7.727359086275101\",\"7.311267621815205\",\"4.998918272554874\",\"6.077839493751526\",\"5.779258228838444\",\"3.276272587478161\",\"2.9643095759674907\",\"3.8146728575229645\",\"6.405120268464088\",\"7.551803696900606\",\"2.5198461320251226\",\"4.81248227506876\",\"3.7252651304006577\",\"4.516813714057207\",\"3.548388883471489\",\"6.630820595659316\",\"3.5668067261576653\",\"3.3183523938059807\"],\"y\":[\"Erling Haaland\",\"Son Heung-Min\",\"Mohamed Salah\",\"Callum Wilson\",\"Jarrod Bowen\",\"Alexander Isak\",\"Bryan Mbeumo\",\"Hee-Chan Hwang\",\"Douglas Luiz\",\"Eddie Nketiah\",\"Ollie Watkins\",\"Nicolas Jackson\",\"Evan Ferguson\",\"Dominic Solanke\",\"Odsonne Edouard\",\"Bukayo Saka\",\"Anthony Gordon\",\"Darwin N\\u00fa\\u00f1ez\",\"Juli\\u00e1n \\u00c1lvarez\",\"Raheem Sterling\"],\"type\":\"scatter\"}],                        {\"template\":{\"data\":{\"histogram2dcontour\":[{\"type\":\"histogram2dcontour\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"choropleth\":[{\"type\":\"choropleth\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"histogram2d\":[{\"type\":\"histogram2d\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"heatmap\":[{\"type\":\"heatmap\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"heatmapgl\":[{\"type\":\"heatmapgl\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"contourcarpet\":[{\"type\":\"contourcarpet\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"contour\":[{\"type\":\"contour\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"surface\":[{\"type\":\"surface\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"mesh3d\":[{\"type\":\"mesh3d\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"scatter\":[{\"fillpattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2},\"type\":\"scatter\"}],\"parcoords\":[{\"type\":\"parcoords\",\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterpolargl\":[{\"type\":\"scatterpolargl\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"bar\":[{\"error_x\":{\"color\":\"#2a3f5f\"},\"error_y\":{\"color\":\"#2a3f5f\"},\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"bar\"}],\"scattergeo\":[{\"type\":\"scattergeo\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterpolar\":[{\"type\":\"scatterpolar\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"histogram\":[{\"marker\":{\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"histogram\"}],\"scattergl\":[{\"type\":\"scattergl\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatter3d\":[{\"type\":\"scatter3d\",\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scattermapbox\":[{\"type\":\"scattermapbox\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterternary\":[{\"type\":\"scatterternary\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scattercarpet\":[{\"type\":\"scattercarpet\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"carpet\":[{\"aaxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"baxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"type\":\"carpet\"}],\"table\":[{\"cells\":{\"fill\":{\"color\":\"#EBF0F8\"},\"line\":{\"color\":\"white\"}},\"header\":{\"fill\":{\"color\":\"#C8D4E3\"},\"line\":{\"color\":\"white\"}},\"type\":\"table\"}],\"barpolar\":[{\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"barpolar\"}],\"pie\":[{\"automargin\":true,\"type\":\"pie\"}]},\"layout\":{\"autotypenumbers\":\"strict\",\"colorway\":[\"#636efa\",\"#EF553B\",\"#00cc96\",\"#ab63fa\",\"#FFA15A\",\"#19d3f3\",\"#FF6692\",\"#B6E880\",\"#FF97FF\",\"#FECB52\"],\"font\":{\"color\":\"#2a3f5f\"},\"hovermode\":\"closest\",\"hoverlabel\":{\"align\":\"left\"},\"paper_bgcolor\":\"white\",\"plot_bgcolor\":\"#E5ECF6\",\"polar\":{\"bgcolor\":\"#E5ECF6\",\"angularaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"radialaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"ternary\":{\"bgcolor\":\"#E5ECF6\",\"aaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"baxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"caxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"coloraxis\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"colorscale\":{\"sequential\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"sequentialminus\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"diverging\":[[0,\"#8e0152\"],[0.1,\"#c51b7d\"],[0.2,\"#de77ae\"],[0.3,\"#f1b6da\"],[0.4,\"#fde0ef\"],[0.5,\"#f7f7f7\"],[0.6,\"#e6f5d0\"],[0.7,\"#b8e186\"],[0.8,\"#7fbc41\"],[0.9,\"#4d9221\"],[1,\"#276419\"]]},\"xaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"automargin\":true,\"zerolinewidth\":2},\"yaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"automargin\":true,\"zerolinewidth\":2},\"scene\":{\"xaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2},\"yaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2},\"zaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2}},\"shapedefaults\":{\"line\":{\"color\":\"#2a3f5f\"}},\"annotationdefaults\":{\"arrowcolor\":\"#2a3f5f\",\"arrowhead\":0,\"arrowwidth\":1},\"geo\":{\"bgcolor\":\"white\",\"landcolor\":\"#E5ECF6\",\"subunitcolor\":\"white\",\"showland\":true,\"showlakes\":true,\"lakecolor\":\"white\"},\"title\":{\"x\":0.05},\"mapbox\":{\"style\":\"light\"}}},\"shapes\":[{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":11,\"x1\":\"11.495322853326797\",\"y0\":0,\"y1\":0},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":8,\"x1\":\"4.824764966964722\",\"y0\":1,\"y1\":1},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":8,\"x1\":\"7.727359086275101\",\"y0\":2,\"y1\":2},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":7,\"x1\":\"7.311267621815205\",\"y0\":3,\"y1\":3},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":7,\"x1\":\"4.998918272554874\",\"y0\":4,\"y1\":4},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":6,\"x1\":\"6.077839493751526\",\"y0\":5,\"y1\":5},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":6,\"x1\":\"5.779258228838444\",\"y0\":6,\"y1\":6},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":6,\"x1\":\"3.276272587478161\",\"y0\":7,\"y1\":7},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":5,\"x1\":\"2.9643095759674907\",\"y0\":8,\"y1\":8},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":5,\"x1\":\"3.8146728575229645\",\"y0\":9,\"y1\":9},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":5,\"x1\":\"6.405120268464088\",\"y0\":10,\"y1\":10},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":5,\"x1\":\"7.551803696900606\",\"y0\":11,\"y1\":11},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":5,\"x1\":\"2.5198461320251226\",\"y0\":12,\"y1\":12},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":4,\"x1\":\"4.81248227506876\",\"y0\":13,\"y1\":13},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":4,\"x1\":\"3.7252651304006577\",\"y0\":14,\"y1\":14},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":4,\"x1\":\"4.516813714057207\",\"y0\":15,\"y1\":15},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":4,\"x1\":\"3.548388883471489\",\"y0\":16,\"y1\":16},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":4,\"x1\":\"6.630820595659316\",\"y0\":17,\"y1\":17},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":4,\"x1\":\"3.5668067261576653\",\"y0\":18,\"y1\":18},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":3,\"x1\":\"3.3183523938059807\",\"y0\":19,\"y1\":19}],\"title\":{\"font\":{\"size\":30},\"text\":\"Goals vs xG\"},\"xaxis\":{\"range\":[0,30]}},                        {\"responsive\": true}                    ).then(function(){\n",
              "                            \n",
              "var gd = document.getElementById('2acf3ac3-3086-41cb-8a35-c2a5077084be');\n",
              "var x = new MutationObserver(function (mutations, observer) {{\n",
              "        var display = window.getComputedStyle(gd).display;\n",
              "        if (!display || display === 'none') {{\n",
              "            console.log([gd, 'removed!']);\n",
              "            Plotly.purge(gd);\n",
              "            observer.disconnect();\n",
              "        }}\n",
              "}});\n",
              "\n",
              "// Listen for the removal of the full notebook cells\n",
              "var notebookContainer = gd.closest('#notebook-container');\n",
              "if (notebookContainer) {{\n",
              "    x.observe(notebookContainer, {childList: true});\n",
              "}}\n",
              "\n",
              "// Listen for the clearing of the current output cell\n",
              "var outputEl = gd.closest('.output');\n",
              "if (outputEl) {{\n",
              "    x.observe(outputEl, {childList: true});\n",
              "}}\n",
              "\n",
              "                        })                };                            </script>        </div>\n",
              "</body>\n",
              "</html>"
            ]
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "seasonedit = one_game_df.drop(columns=[ 'yellow_cards','red_cards','time'])"
      ],
      "metadata": {
        "id": "zxhwefRPFQDN"
      },
      "execution_count": 63,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "top25assists.columns"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "wSmCXk6YFSz5",
        "outputId": "e16e36b8-c64c-449c-b58e-caf2e319bfe7"
      },
      "execution_count": 64,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Index(['id', 'player_name', 'games_x', 'time_x', 'goals_1wks_x', 'xG_1wks_x',\n",
              "       'assists_1wks_x', 'xA_1wks_x', 'shots_1wks_x', 'key_passes_1wks_x',\n",
              "       'yellow_cards_x', 'red_cards_x', 'position_x', 'team_title_x',\n",
              "       'npg_1wks_x', 'npxG_1wks_x', 'xGChain_x', 'xGBuildup_x', 'games_y',\n",
              "       'time_y', 'goals_season', 'xG_season', 'assists_season', 'xA_season',\n",
              "       'shots_season', 'key_passes_season', 'yellow_cards_y', 'red_cards_y',\n",
              "       'npg_season', 'npxG_season', 'xGChain_y', 'xGBuildup_y', 'games',\n",
              "       'time', 'goals_1wks_y', 'xG_1wks_y', 'assists_1wks_y', 'xA_1wks_y',\n",
              "       'shots_1wks_y', 'key_passes_1wks_y', 'yellow_cards', 'red_cards',\n",
              "       'position_y', 'team_title_y', 'npg_1wks_y', 'npxG_1wks_y', 'xGChain',\n",
              "       'xGBuildup', 'goals', 'assists'],\n",
              "      dtype='object')"
            ]
          },
          "metadata": {},
          "execution_count": 64
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "top20assists = top25assists.drop(columns=[ 'shots_1wks_x', 'key_passes_1wks_x',\n",
        "       'yellow_cards_x', 'red_cards_x', 'position_x', 'team_title_x',\n",
        "       'npg_1wks_x', 'npxG_1wks_x', 'xGChain_x', 'xGBuildup_x', 'games_y',\n",
        "       'time_y', 'goals_season', 'xG_season', 'assists_season', 'xA_season',\n",
        "       'shots_season', 'key_passes_season', 'yellow_cards_y', 'red_cards_y',\n",
        "       'npg_season', 'npxG_season', 'xGChain_y', 'xGBuildup_y', 'games',\n",
        "       'time', 'goals_1wks_y', 'xG_1wks_y', 'assists_1wks_y', 'xA_1wks_y',\n",
        "       'shots_1wks_y', 'key_passes_1wks_y', 'yellow_cards', 'red_cards',\n",
        "       'position_y', 'team_title_y', 'npg_1wks_y', 'npxG_1wks_y', 'xGChain',\n",
        "       'xGBuildup', 'assists_1wks_x', 'games_x', 'time_x', 'goals_1wks_x', 'id' ])\n",
        "\n",
        "top20assists.reset_index(inplace = True,drop = True)\n",
        "top20assists"
      ],
      "metadata": {
        "id": "_Xn659fiFXvb",
        "outputId": "37670b97-1252-4e75-fa50-4b2039f87fcc",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 677
        }
      },
      "execution_count": 65,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "             player_name             xG_1wks_x           xA_1wks_x  goals  \\\n",
              "0             Pedro Neto    1.8730668723583221  3.4589802250266075      1   \n",
              "1        Kieran Trippier  0.056369323283433914    4.59743788279593      0   \n",
              "2          Ollie Watkins     6.405120268464088   3.135984007269144      5   \n",
              "3         James Maddison     2.944616189226508  3.4641558043658733      3   \n",
              "4            Jéremy Doku    0.7487953752279282   2.190131112933159      2   \n",
              "5          Mohamed Salah     7.727359086275101   5.920990411192179      8   \n",
              "6        Vladimir Coufal  0.014404140412807465  1.4812367362901568      0   \n",
              "7            Bukayo Saka     4.516813714057207  2.2316470593214035      4   \n",
              "8           Darwin Núñez     6.630820595659316  1.7272627791389823      4   \n",
              "9         Julián Álvarez    3.5668067261576653  1.9792699664831161      4   \n",
              "10            Phil Foden    2.8624750822782516   2.009816337376833      3   \n",
              "11          Moussa Diaby    1.9824714586138725   4.666145384311676      3   \n",
              "12          Kaoru Mitoma     3.665834251791239  2.1948801651597023      3   \n",
              "13     James Ward-Prowse    1.8856397103518248   2.850056439638138      2   \n",
              "14           Jordan Ayew    1.9943842329084873  1.9240549504756927      1   \n",
              "15             Estupiñán    0.9581431178376079   2.586997412145138      1   \n",
              "16           Richarlison     2.951672403141856  0.8805450648069382      1   \n",
              "17          Jacob Murphy   0.13770722597837448  1.4644091129302979      1   \n",
              "18        Anthony Elanga    1.2158437799662352  1.5711921826004982      1   \n",
              "19  Jean-Philippe Mateta    0.5759328752756119  1.1801335588097572      0   \n",
              "\n",
              "    assists  \n",
              "0         7  \n",
              "1         6  \n",
              "2         5  \n",
              "3         5  \n",
              "4         5  \n",
              "5         4  \n",
              "6         4  \n",
              "7         3  \n",
              "8         3  \n",
              "9         3  \n",
              "10        3  \n",
              "11        3  \n",
              "12        3  \n",
              "13        3  \n",
              "14        3  \n",
              "15        3  \n",
              "16        3  \n",
              "17        3  \n",
              "18        3  \n",
              "19        3  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-218f48b8-f08e-48de-831e-16bd0e8698fb\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>player_name</th>\n",
              "      <th>xG_1wks_x</th>\n",
              "      <th>xA_1wks_x</th>\n",
              "      <th>goals</th>\n",
              "      <th>assists</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>Pedro Neto</td>\n",
              "      <td>1.8730668723583221</td>\n",
              "      <td>3.4589802250266075</td>\n",
              "      <td>1</td>\n",
              "      <td>7</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Kieran Trippier</td>\n",
              "      <td>0.056369323283433914</td>\n",
              "      <td>4.59743788279593</td>\n",
              "      <td>0</td>\n",
              "      <td>6</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>Ollie Watkins</td>\n",
              "      <td>6.405120268464088</td>\n",
              "      <td>3.135984007269144</td>\n",
              "      <td>5</td>\n",
              "      <td>5</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>James Maddison</td>\n",
              "      <td>2.944616189226508</td>\n",
              "      <td>3.4641558043658733</td>\n",
              "      <td>3</td>\n",
              "      <td>5</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>Jéremy Doku</td>\n",
              "      <td>0.7487953752279282</td>\n",
              "      <td>2.190131112933159</td>\n",
              "      <td>2</td>\n",
              "      <td>5</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>Mohamed Salah</td>\n",
              "      <td>7.727359086275101</td>\n",
              "      <td>5.920990411192179</td>\n",
              "      <td>8</td>\n",
              "      <td>4</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>Vladimir Coufal</td>\n",
              "      <td>0.014404140412807465</td>\n",
              "      <td>1.4812367362901568</td>\n",
              "      <td>0</td>\n",
              "      <td>4</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>Bukayo Saka</td>\n",
              "      <td>4.516813714057207</td>\n",
              "      <td>2.2316470593214035</td>\n",
              "      <td>4</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>Darwin Núñez</td>\n",
              "      <td>6.630820595659316</td>\n",
              "      <td>1.7272627791389823</td>\n",
              "      <td>4</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>Julián Álvarez</td>\n",
              "      <td>3.5668067261576653</td>\n",
              "      <td>1.9792699664831161</td>\n",
              "      <td>4</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10</th>\n",
              "      <td>Phil Foden</td>\n",
              "      <td>2.8624750822782516</td>\n",
              "      <td>2.009816337376833</td>\n",
              "      <td>3</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>11</th>\n",
              "      <td>Moussa Diaby</td>\n",
              "      <td>1.9824714586138725</td>\n",
              "      <td>4.666145384311676</td>\n",
              "      <td>3</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>12</th>\n",
              "      <td>Kaoru Mitoma</td>\n",
              "      <td>3.665834251791239</td>\n",
              "      <td>2.1948801651597023</td>\n",
              "      <td>3</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>13</th>\n",
              "      <td>James Ward-Prowse</td>\n",
              "      <td>1.8856397103518248</td>\n",
              "      <td>2.850056439638138</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>14</th>\n",
              "      <td>Jordan Ayew</td>\n",
              "      <td>1.9943842329084873</td>\n",
              "      <td>1.9240549504756927</td>\n",
              "      <td>1</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>15</th>\n",
              "      <td>Estupiñán</td>\n",
              "      <td>0.9581431178376079</td>\n",
              "      <td>2.586997412145138</td>\n",
              "      <td>1</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>16</th>\n",
              "      <td>Richarlison</td>\n",
              "      <td>2.951672403141856</td>\n",
              "      <td>0.8805450648069382</td>\n",
              "      <td>1</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>17</th>\n",
              "      <td>Jacob Murphy</td>\n",
              "      <td>0.13770722597837448</td>\n",
              "      <td>1.4644091129302979</td>\n",
              "      <td>1</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>18</th>\n",
              "      <td>Anthony Elanga</td>\n",
              "      <td>1.2158437799662352</td>\n",
              "      <td>1.5711921826004982</td>\n",
              "      <td>1</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>19</th>\n",
              "      <td>Jean-Philippe Mateta</td>\n",
              "      <td>0.5759328752756119</td>\n",
              "      <td>1.1801335588097572</td>\n",
              "      <td>0</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-218f48b8-f08e-48de-831e-16bd0e8698fb')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-218f48b8-f08e-48de-831e-16bd0e8698fb button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-218f48b8-f08e-48de-831e-16bd0e8698fb');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-8c101a70-e5c0-452e-859a-6e59dc48e62c\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-8c101a70-e5c0-452e-859a-6e59dc48e62c')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-8c101a70-e5c0-452e-859a-6e59dc48e62c button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 65
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "fig4= go.Figure()\n",
        "fig4.add_trace(go.Scatter(x = top20assists[\"assists\"],\n",
        "                          y = top20assists[\"player_name\"],\n",
        "                          mode = 'markers',\n",
        "                          marker_color = 'darkblue',\n",
        "                          marker_size = 10,\n",
        "                          name = 'assists'))\n",
        "fig4.add_trace(go.Scatter(x = top20assists[\"xA_1wks_x\"],\n",
        "                          y = top20assists[\"player_name\"],\n",
        "                          mode = 'markers',\n",
        "                          marker_color = 'darkorange',\n",
        "                          marker_size = 10,\n",
        "                          name = 'xA'))\n",
        "for i in range(0, len(top20assists)):\n",
        "               fig4.add_shape(type='line',\n",
        "                              x0 = top20assists['assists'][i],\n",
        "                              y0 = i,\n",
        "                              x1 = top20assists[\"xA_1wks_x\"][i],\n",
        "                              y1 = i,\n",
        "                              line=dict(color='crimson', width = 3))\n",
        "fig4.update_layout(title_text =\n",
        "                    \"assists vs xG\",\n",
        "                    title_font_size = 15)\n",
        "fig4.update_xaxes(range=[0, 15])\n",
        "fig4.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 542
        },
        "id": "P6oVjqCSF4Pw",
        "outputId": "7bdaeabb-0bb8-4794-89ff-0216fb688693"
      },
      "execution_count": 66,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<html>\n",
              "<head><meta charset=\"utf-8\" /></head>\n",
              "<body>\n",
              "    <div>            <script src=\"https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.5/MathJax.js?config=TeX-AMS-MML_SVG\"></script><script type=\"text/javascript\">if (window.MathJax && window.MathJax.Hub && window.MathJax.Hub.Config) {window.MathJax.Hub.Config({SVG: {font: \"STIX-Web\"}});}</script>                <script type=\"text/javascript\">window.PlotlyConfig = {MathJaxConfig: 'local'};</script>\n",
              "        <script charset=\"utf-8\" src=\"https://cdn.plot.ly/plotly-2.24.1.min.js\"></script>                <div id=\"a8b1a81b-8d48-4c6f-9d1c-6a760d1881a5\" class=\"plotly-graph-div\" style=\"height:525px; width:100%;\"></div>            <script type=\"text/javascript\">                                    window.PLOTLYENV=window.PLOTLYENV || {};                                    if (document.getElementById(\"a8b1a81b-8d48-4c6f-9d1c-6a760d1881a5\")) {                    Plotly.newPlot(                        \"a8b1a81b-8d48-4c6f-9d1c-6a760d1881a5\",                        [{\"marker\":{\"color\":\"darkblue\",\"size\":10},\"mode\":\"markers\",\"name\":\"assists\",\"x\":[7,6,5,5,5,4,4,3,3,3,3,3,3,3,3,3,3,3,3,3],\"y\":[\"Pedro Neto\",\"Kieran Trippier\",\"Ollie Watkins\",\"James Maddison\",\"J\\u00e9remy Doku\",\"Mohamed Salah\",\"Vladimir Coufal\",\"Bukayo Saka\",\"Darwin N\\u00fa\\u00f1ez\",\"Juli\\u00e1n \\u00c1lvarez\",\"Phil Foden\",\"Moussa Diaby\",\"Kaoru Mitoma\",\"James Ward-Prowse\",\"Jordan Ayew\",\"Estupi\\u00f1\\u00e1n\",\"Richarlison\",\"Jacob Murphy\",\"Anthony Elanga\",\"Jean-Philippe Mateta\"],\"type\":\"scatter\"},{\"marker\":{\"color\":\"darkorange\",\"size\":10},\"mode\":\"markers\",\"name\":\"xA\",\"x\":[\"3.4589802250266075\",\"4.59743788279593\",\"3.135984007269144\",\"3.4641558043658733\",\"2.190131112933159\",\"5.920990411192179\",\"1.4812367362901568\",\"2.2316470593214035\",\"1.7272627791389823\",\"1.9792699664831161\",\"2.009816337376833\",\"4.666145384311676\",\"2.1948801651597023\",\"2.850056439638138\",\"1.9240549504756927\",\"2.586997412145138\",\"0.8805450648069382\",\"1.4644091129302979\",\"1.5711921826004982\",\"1.1801335588097572\"],\"y\":[\"Pedro Neto\",\"Kieran Trippier\",\"Ollie Watkins\",\"James Maddison\",\"J\\u00e9remy Doku\",\"Mohamed Salah\",\"Vladimir Coufal\",\"Bukayo Saka\",\"Darwin N\\u00fa\\u00f1ez\",\"Juli\\u00e1n \\u00c1lvarez\",\"Phil Foden\",\"Moussa Diaby\",\"Kaoru Mitoma\",\"James Ward-Prowse\",\"Jordan Ayew\",\"Estupi\\u00f1\\u00e1n\",\"Richarlison\",\"Jacob Murphy\",\"Anthony Elanga\",\"Jean-Philippe Mateta\"],\"type\":\"scatter\"}],                        {\"template\":{\"data\":{\"histogram2dcontour\":[{\"type\":\"histogram2dcontour\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"choropleth\":[{\"type\":\"choropleth\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"histogram2d\":[{\"type\":\"histogram2d\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"heatmap\":[{\"type\":\"heatmap\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"heatmapgl\":[{\"type\":\"heatmapgl\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"contourcarpet\":[{\"type\":\"contourcarpet\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"contour\":[{\"type\":\"contour\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"surface\":[{\"type\":\"surface\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"mesh3d\":[{\"type\":\"mesh3d\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"scatter\":[{\"fillpattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2},\"type\":\"scatter\"}],\"parcoords\":[{\"type\":\"parcoords\",\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterpolargl\":[{\"type\":\"scatterpolargl\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"bar\":[{\"error_x\":{\"color\":\"#2a3f5f\"},\"error_y\":{\"color\":\"#2a3f5f\"},\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"bar\"}],\"scattergeo\":[{\"type\":\"scattergeo\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterpolar\":[{\"type\":\"scatterpolar\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"histogram\":[{\"marker\":{\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"histogram\"}],\"scattergl\":[{\"type\":\"scattergl\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatter3d\":[{\"type\":\"scatter3d\",\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scattermapbox\":[{\"type\":\"scattermapbox\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterternary\":[{\"type\":\"scatterternary\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scattercarpet\":[{\"type\":\"scattercarpet\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"carpet\":[{\"aaxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"baxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"type\":\"carpet\"}],\"table\":[{\"cells\":{\"fill\":{\"color\":\"#EBF0F8\"},\"line\":{\"color\":\"white\"}},\"header\":{\"fill\":{\"color\":\"#C8D4E3\"},\"line\":{\"color\":\"white\"}},\"type\":\"table\"}],\"barpolar\":[{\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"barpolar\"}],\"pie\":[{\"automargin\":true,\"type\":\"pie\"}]},\"layout\":{\"autotypenumbers\":\"strict\",\"colorway\":[\"#636efa\",\"#EF553B\",\"#00cc96\",\"#ab63fa\",\"#FFA15A\",\"#19d3f3\",\"#FF6692\",\"#B6E880\",\"#FF97FF\",\"#FECB52\"],\"font\":{\"color\":\"#2a3f5f\"},\"hovermode\":\"closest\",\"hoverlabel\":{\"align\":\"left\"},\"paper_bgcolor\":\"white\",\"plot_bgcolor\":\"#E5ECF6\",\"polar\":{\"bgcolor\":\"#E5ECF6\",\"angularaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"radialaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"ternary\":{\"bgcolor\":\"#E5ECF6\",\"aaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"baxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"caxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"coloraxis\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"colorscale\":{\"sequential\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"sequentialminus\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"diverging\":[[0,\"#8e0152\"],[0.1,\"#c51b7d\"],[0.2,\"#de77ae\"],[0.3,\"#f1b6da\"],[0.4,\"#fde0ef\"],[0.5,\"#f7f7f7\"],[0.6,\"#e6f5d0\"],[0.7,\"#b8e186\"],[0.8,\"#7fbc41\"],[0.9,\"#4d9221\"],[1,\"#276419\"]]},\"xaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"automargin\":true,\"zerolinewidth\":2},\"yaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"automargin\":true,\"zerolinewidth\":2},\"scene\":{\"xaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2},\"yaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2},\"zaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2}},\"shapedefaults\":{\"line\":{\"color\":\"#2a3f5f\"}},\"annotationdefaults\":{\"arrowcolor\":\"#2a3f5f\",\"arrowhead\":0,\"arrowwidth\":1},\"geo\":{\"bgcolor\":\"white\",\"landcolor\":\"#E5ECF6\",\"subunitcolor\":\"white\",\"showland\":true,\"showlakes\":true,\"lakecolor\":\"white\"},\"title\":{\"x\":0.05},\"mapbox\":{\"style\":\"light\"}}},\"shapes\":[{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":7,\"x1\":\"3.4589802250266075\",\"y0\":0,\"y1\":0},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":6,\"x1\":\"4.59743788279593\",\"y0\":1,\"y1\":1},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":5,\"x1\":\"3.135984007269144\",\"y0\":2,\"y1\":2},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":5,\"x1\":\"3.4641558043658733\",\"y0\":3,\"y1\":3},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":5,\"x1\":\"2.190131112933159\",\"y0\":4,\"y1\":4},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":4,\"x1\":\"5.920990411192179\",\"y0\":5,\"y1\":5},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":4,\"x1\":\"1.4812367362901568\",\"y0\":6,\"y1\":6},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":3,\"x1\":\"2.2316470593214035\",\"y0\":7,\"y1\":7},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":3,\"x1\":\"1.7272627791389823\",\"y0\":8,\"y1\":8},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":3,\"x1\":\"1.9792699664831161\",\"y0\":9,\"y1\":9},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":3,\"x1\":\"2.009816337376833\",\"y0\":10,\"y1\":10},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":3,\"x1\":\"4.666145384311676\",\"y0\":11,\"y1\":11},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":3,\"x1\":\"2.1948801651597023\",\"y0\":12,\"y1\":12},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":3,\"x1\":\"2.850056439638138\",\"y0\":13,\"y1\":13},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":3,\"x1\":\"1.9240549504756927\",\"y0\":14,\"y1\":14},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":3,\"x1\":\"2.586997412145138\",\"y0\":15,\"y1\":15},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":3,\"x1\":\"0.8805450648069382\",\"y0\":16,\"y1\":16},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":3,\"x1\":\"1.4644091129302979\",\"y0\":17,\"y1\":17},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":3,\"x1\":\"1.5711921826004982\",\"y0\":18,\"y1\":18},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":3,\"x1\":\"1.1801335588097572\",\"y0\":19,\"y1\":19}],\"title\":{\"font\":{\"size\":15},\"text\":\"assists vs xG\"},\"xaxis\":{\"range\":[0,15]}},                        {\"responsive\": true}                    ).then(function(){\n",
              "                            \n",
              "var gd = document.getElementById('a8b1a81b-8d48-4c6f-9d1c-6a760d1881a5');\n",
              "var x = new MutationObserver(function (mutations, observer) {{\n",
              "        var display = window.getComputedStyle(gd).display;\n",
              "        if (!display || display === 'none') {{\n",
              "            console.log([gd, 'removed!']);\n",
              "            Plotly.purge(gd);\n",
              "            observer.disconnect();\n",
              "        }}\n",
              "}});\n",
              "\n",
              "// Listen for the removal of the full notebook cells\n",
              "var notebookContainer = gd.closest('#notebook-container');\n",
              "if (notebookContainer) {{\n",
              "    x.observe(notebookContainer, {childList: true});\n",
              "}}\n",
              "\n",
              "// Listen for the clearing of the current output cell\n",
              "var outputEl = gd.closest('.output');\n",
              "if (outputEl) {{\n",
              "    x.observe(outputEl, {childList: true});\n",
              "}}\n",
              "\n",
              "                        })                };                            </script>        </div>\n",
              "</body>\n",
              "</html>"
            ]
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import pandas as pd\n",
        "import matplotlib.pyplot as plt\n",
        "\n",
        "# Assuming you have already loaded the DataFrame named 'Top50'\n",
        "\n",
        "# Filter the DataFrame by position type\n",
        "midfielders = Top50[Top50['pos'] == 'M']\n",
        "forwards = Top50[Top50['pos'] == 'F']\n",
        "defenders = Top50[Top50['pos'] == 'D']\n",
        "\n",
        "# Sort the filtered DataFrames by '5GW Total' in descending order\n",
        "midfielders = midfielders.sort_values(by='5GW Total', ascending=False)\n",
        "forwards = forwards.sort_values(by='5GW Total', ascending=False)\n",
        "defenders = defenders.sort_values(by='5GW Total', ascending=False)\n",
        "\n",
        "# Plotting the bar charts\n",
        "plt.figure(figsize=(12, 6))\n",
        "\n",
        "# Midfielders chart\n",
        "plt.subplot(131)\n",
        "plt.bar(midfielders['name'][:10], midfielders['5GW Total'][:10])\n",
        "plt.title('Top 10 Midfielders by 5GW Total')\n",
        "plt.xticks(rotation=45)\n",
        "\n",
        "# Forwards chart\n",
        "plt.subplot(132)\n",
        "plt.bar(forwards['name'][:10], forwards['5GW Total'][:10])\n",
        "plt.title('Top 10 Forwards by 5GW Total')\n",
        "plt.xticks(rotation=45)\n",
        "\n",
        "# Defenders chart\n",
        "plt.subplot(133)\n",
        "plt.bar(defenders['name'][:10], defenders['5GW Total'][:10])\n",
        "plt.title('Top 10 Defenders by 5GW Total')\n",
        "plt.xticks(rotation=45)\n",
        "\n",
        "plt.tight_layout()\n",
        "plt.show()\n"
      ],
      "metadata": {
        "id": "FN06IYwSKGLw",
        "outputId": "d6503b07-8eab-4238-9696-637494ad054c",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 601
        }
      },
      "execution_count": 67,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1200x600 with 3 Axes>"
            ],
            "image/png": "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1a9fP5dlR44cqZCQEG3cuNE5be/evQoJCVF0dLQkKT4+Xi+++KJ69+6tsLAwNWvWTMOGDdP+/ftdyrrasV2SvvnmG/Xq1UuNGzdWr169tGHDhmy3c82aNbrzzjudsXr37q333nvP7e/p3XffVadOnRQaGqr7779fBw8edM777LPPFBISov/9739Z1nvnnXdUv359xcXFuRUnOTlZGRkZ2c77888/9emnn6pdu3ZZEk2ZatWqpYEDBzo/Zx7LL73ocPz4cZ05c0b333+/SpYs6TLvt99+U0pKSq7bAHf2q4iICB06dEg//PCDsw0YNGiQJPf3D8Bbikt74Ovrq6efflr16tXTBx98oKSkJJf5X331lfOY37JlS40fP15//vmnc35ERITz3K1NmzZZxl51p58QGRmpsLAwxcXFadSoUQoLC1Pr1q314osvOi+gZkpMTFRkZKTCw8PVvHlzPfnkk1nqnOnw4cN67LHH1LJlS+ff5dJ2Sfp//ZsffvhBU6dOVZs2bZzn0cnJyfrvf/+riIgINWrUSG3atNFDDz2kX3/91a3v9u+//9bYsWPVrFkztWrVStOnT3d5GuX+++/XHXfcke263bp109ChQ92KY7fbnW1idj766COdOXNGkydPzvZuPR8fH/Xq1cvlpobw8HD99ttvunDhgnPa7t27ddNNN6ldu3bau3evS7909+7d8vHxceuO1qs5fvy482/WpEkT3X333fr222+d83fs2KG77rpLkjRp0iRn25E5XtfOnTv12GOPqWPHjmrUqJE6dOigGTNmuGxHcUWyKZeMMXrkkUf07rvvql27dpo0aZJq166tWbNm6YUXXsiy/I8//qgZM2bojjvu0GOPPab4+HgNGzbM5QQyt3777Tc1aNAgy9XXxo0bKzU1VUeOHHGrnF69eunMmTPasWOHc9rq1avVunVrXXfddW6V8cYbb+iNN97QzTffrCeeeELVq1fXkCFDlJKS4lyma9euzkehevXqpVmzZmny5MlXLPPLL7/UiBEjVKZMGU2cOFGjRo3S77//rvvuu++aAzY/9dRTeu+999S2bVtNnDhRJUqU0PDhw7Ms99dff+nuu+/W9u3bNXDgQD311FOqUaOGnnrqKb377rtZln/rrbcUHR2toUOH6vHHH1eJEiU0d+5czZ07V61atdIzzzyjkSNH6sYbb3S7sXjuued0+PBhjR49Wn379tWqVav06KOPOk84+vTpo/j4eG3dutVlvTNnzuj777+/YkNyuc6dOys8PFzNmjXTxIkT9ddff7nM37x5szOeuy69FTbT7t271bRpUzVp0kQlSpRwecRi9+7dKlu2rG6++Wa3Y1zuwoULGjRokFauXKnevXvriSeeUPny5RUZGens3FWqVElTp06V9M9+N2vWLM2aNct5u+53332n48eP684779SUKVPUo0cPRUVFafjw4VdMxgG5UVTbELvdrnPnzrn8d+kjUE8//bRmz56tBg0aaNKkSWrRooXmzZun8ePHZynryJEjmjBhgtq2baunnnpK9evXV/PmzbV//37nia4xRrt375bNZtPOnTud6+7cuVM2m815TDp+/Li++eYbdezYUZGRkRo6dKgOHjyo+++/P9vETHbH9q1bt2rMmDHy8fHRhAkT1LlzZ02aNEm//PKLy7rbtm3T448/roCAAE2cOFETJkxQy5Yts32ELDtffvmlli5dqvvuu8/ZURo8eLDzGN2tWzeVKlVKq1atyrLuqlWr1LJlS7ceW5w0aZLCw8MVGhqqQYMGZRmzb8uWLbLb7W63KZLUtGlT+fn5ubQBu3btUpkyZdS4cWM1atTI5Xuw6oKDO/vV5MmTdcMNN6hOnTrONiDzcQpP9w/ASkW1PbgSX19f9ezZU6mpqS7HirfffltPPvmkatasqcjISD3wwAPO8/HExERJ//yOM8/dpk6d6nIu50k/wW63a+jQoQoMDNQTTzyhli1bavHixVqxYoVzGWOMRo0apa+++kp33HGHxo0bp1OnTunJJ5/Msk2HDh3SPffco8OHD+vhhx9WZGSkypQpo0cffTTbixLTpk3T4cOH9eijj+rhhx+WJD377LP68MMPddttt+nZZ5/VkCFDVLJkSR0+fNit73XcuHG6ePGiJkyYoPbt22vZsmWaMmWKc36fPn104MCBLPvJvn37dPToUfXu3fuaMVJTUxUeHq7w8HC1bNlS06ZNc2njpX/6D6VKlcoy/tLVhIeHKz09XXv37nVO2717tzP5n5SU5FLv3bt3q06dOi6PUnvqr7/+0r///W9t3bpV9957r8aPH6+LFy/qkUcecf7N6tatq8cee0ySdM899zjbjhYtWkj658L8hQsXdO+992rKlCm69dZb9f777+uJJ57Icb2KDAOPTJs2zQQHBzs/b9iwwQQHB5u33nrLZbkxY8aYkJAQc+zYMee04OBgExwcbH7++WfntNjYWNO4cWPz6KOPelSPpk2bmieffPKK8yZNmpRl+rfffmuCg4PNli1brlr2/fffb3r27GmMMebOO+80kydPNsYYk5CQYBo2bGi++OIL8/3335vg4GCzdu1a53qfffaZCQ4ONsePHzfGGHP27FnTsGFDM3z4cONwOJzLvfrqqyY4ONil/sePHzfBwcFm4cKFLnW5vMzk5GTTvHlz8/TTT7ssd+bMGRMeHu4yffbs2S5/q99++80EBwebqVOnuqz7+OOPm+DgYDN79mzntMmTJ5u2bduac+fOuSw7fvx4Ex4eblJTU40xxvk9dO7c2Tkt0x133GGGDx+e9Qu+hsxt7tevn0lLS3NOX7BggQkODjbffPONMcYYu91u2rdvb8aNG+ey/pIlS0xISIj5448/rhrn3XffNc8995xZuXKlWbdunZk+fbpp0KCBue2220xSUpJzub59+5rmzZtnWf/8+fPm7Nmzzv8uXScpKcnUr1/fue8YY0y3bt3MnDlzjDHG3HXXXebFF190zmvdurV56KGH3Pl6nIYPH246derksj3BwcHmq6++ck5LS0sz99xzj2natKmzfmfPns3y9850+d/QGGNWr15tgoODzY8//uicdvl+CbiruLQhmXW99L/MeJnH4qeeesplvZkzZ5rg4GCzfft257ROnTplG3Pfvn0mODjYfPvtt8YYY/bv32+Cg4PNY489ZgYMGOBcbuTIkaZv377OzxcvXjR2u92lrOPHj5tGjRqZuXPnOqdd7djep08f07ZtW5OYmOictnXrVhMcHOxyTJo+fbpp1qyZycjIuOr3dbnM9jA0NNScOnXKOX3v3r0mODjYzJgxwznt8ccfN7feeqvLNv36668mODjYfPbZZ1eNs2vXLjNmzBjzySefmG+++cbMmzfPtGzZ0jRu3Nj8+uuvzuVmzJhhgoODzW+//eay/sWLF13agMvby/79+5suXbo4P0+ZMsUMGjTIGGPMrFmzTP/+/Z3zxowZY5o0aWLS09Pd+YqMMcYsXLjQ5TjsyX7Vs2dPc//992cp0939I/NvdK3vGLia4tIeZPYpspO5ze+9954xxpgTJ06Y+vXrm7fffttluQMHDpgGDRq4TM88zz979qxzmif9hCeffNIEBwe7/LaN+ee8t1+/flnquGDBAue0jIwMc99992U5DgwePNj06tXLXLx40TnN4XCYe+65x9x2223OaZnnkffee2+WNiI8PNxMmzbtit/ZlWR+HyNHjnSZPnXqVJdjeGJiomncuLF56aWXXJZ7/vnnTdOmTc358+evGufll182L730klmzZo1ZvXq183v897//7XIMb9GihenTp0+W9ZOSklzajkvjHTp0yAQHB5s333zTGGNMenq6adq0qfniiy+MMcbccsst5v3333eWU79+/Sx/62u5/Pj/3//+N8t5fnJysomIiDCdOnVytgmZ5x3ZHfez6z/MmzfPhISEmNjYWOe0y/umxQF3NuXSli1b5Ovr67wFO9OQIUNkjNGWLVtcpoeFhalRo0bOzzfeeKM6d+7sMuZNbl24cCHbAbUzp10+sPfV9O7dWxs2bFBaWprWr18vX1/fLOMmXMl3332n9PR03X///S636l7pNnx3y0xMTFTPnj1drpjbbDY1adLE5S6sy2U+RnH53+ry+hhj9PXXXysiIkLGGJc4t956q5KSkrLcndS3b98sY4gEBATo0KFDOnr0aI629Z577nEZMPHee++Vn5+fcztsNpt69+6tTZs2udzGunLlSoWFhal69epXLX/w4MGaMmWKevfurW7duumpp57SzJkzdfToUS1fvty5XHJycrbPkL/22mtq06aN878JEyY455UrV04hISHOK1Xnzp3TkSNHnLe5NmvWzHklO/ORutzeArtlyxZVrlxZvXr1ck4rUaKEBg0apJSUFLduLb/0b3jx4kWdO3dOTZo0kSS370gDPFFU25CqVatqyZIlLv8NGzZM0v87Fj/00EMu62S+5TRzfqZq1aqpXbt2LtMaNGigMmXKOO9i2rlzp2644Qb17dtX//vf/5Samuq82+nSu2X8/f2dV+jtdrv+/vtvlSlTRrVr1872cbTLj+2nT5/Wb7/9pn79+rmME9K2bVvVq1fPZd2AgAClpqa6/ej05bp06eJyZ1JoaKiaNGni8v306dNHp0+fdmn7Vq1apVKlSrk89pKdZs2aafbs2brrrrvUuXNnDR8+XB9//LF8fHxcxmHJbF8ubwe2bNni0gZkPv6eKTw8XH/88Ydz8OGffvrJOTZMs2bN9Ntvvyk1NVXSP1enQ0ND5eeX86FEPd2vsuPp/gFYqai2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u+RwOFzu8ti3b59Kly6dJRN/Lb169dLTTz+tgIAAt6/ISv/cziv9s32XHgjOnTuXJevrrsxyrrvuOo8PiFWrVpXD4dAff/zhcjdT5t8qU6VKlVS2bFk5HI4cH3QzBQYGqn///urfv7/Onz+v+++/X3PmzHEr2XTs2DG1bt3a+fn8+fM6c+ZMlr9B3759NXPmTJ0+fVqrV69Wx44dc3znmDFGsbGxatCggXNax44dtWbNGq1cudI5eKE7Lu1o7Nmzx+UxuaCgIFWtWlW7d+/W7t27Vb9+fZUuXTpHdc5UtWpVHThwIMt+n/n3zdwfr9QRSUhI0Pbt2zVmzBiNHj3aOT2nj0EC7igObcjlMo/Fx44dc3lDzV9//aXExMQs23wlzZs3V3p6ulavXq24uDhnUqlFixbauXOnrrvuOtWqVUvXX3+9c53169erVatWmjFjhktZiYmJbg0wmnkcye7vkN1Auf7+/oqIiFBERIQcDoemTp2qFStWaNSoUdnelXCpK/2tL/9++vTpo8WLF2vTpk3asmWLKlWqpFtvvfWa23IlJ06cUMmSJZ2duvbt28vX11erVq3yKImV+f3v2rVLpUuXVr169RQQEOCcn/k4xKlTp+Tr65vrCw6e7FdXagdyu38AuVHc2gO73a7Vq1erdOnSznPGGjVqyBijatWq5ajs3PQTrqRq1ar6/vvvdf78eZe7my4/5mfGLlGiRK5jV6lSRQMHDtTAgQN19uxZ9evXT++8845byaZjx4659LuOHTsmh8PhcheVr6+vevXqpS+++EITJ07UN998k+0jfe5KTk7W33//7bLfdezYUXv27NGGDRvUo0cPt8u6tP+we/dul7vUGjVqJH9/f+3YsUP79u3zqF96JTfeeGO27be7/YeDBw/q6NGjevHFF9W3b1/n9Jw+Ql/UMGZTLrVv3152u915S1+md999Vz4+Pll+BD/99JPL2C9//vmnNm7cqLZt21qWXb/99tv1119/6euvv3ZOO3funNatW6dOnTpl++z1tcobPXq0nn32WY/WveWWW1SiRAm9//77LlcEPXnt8+XatWuncuXKad68eUpPT88y//LH2y6V+bdYtmyZy/TL6+Pr66tu3bpp/fr12b7R42oxLvX333+7fC5btqxq1Kjh9mtiV6xY4bKNH374oTIyMrLsU7169ZKPj4/++9//6vjx4253BrLbjuXLl+vcuXMuV2S6d++uevXq6a233tKePXuyLSu7K75BQUGqVq2avv/+e/3yyy8uVyakfzoaGzdu1JEjRyy5ot2+fXudOXNGUVFRzmkZGRlatmyZypQp43xjRGZSK/ONJpmu9PvLzf4KXEtxaEMul3myfPlvK/ORLHev3Ga+2XLBggUKDAzUTTfdJOmfE9W9e/fqxx9/dLmrSfrnd3758Wrt2rVuj41RpUoV1a9fX1988YXLo7Xbtm3LMq7D5W2AzWZz3hXrTjvwzTffuNRr37592rt3b5Z94uabb1ZISIg+/fRTff311+rZs6dbYx9l1wbs379fmzZtUtu2bZ0dyxtvvFH9+/fXli1b9P7772db1pXu+mnWrJn279+vbdu2ZdsG7NmzR7t27VJISEiOHvu7lCf7VenSpbO0AVLu9w8gN4pTe2C32zV9+nQdPnxYgwYNcv7+b7vtNvn6+mru3LlZfovGmCzH1cvlpp9wJe3bt1dGRoY+/PBDl/pffjy87rrr1LJlS61YscJ555ense12e5ZhG6677jpVqVLF7f7D5ftPZj0v33/69OmjhIQEPfPMM0pJSXGr/3Dx4sVsHwt76623ZIxx6T/ce++9uv766/XCCy9km8y5UrvRqFEjlSxZUqtWrVJcXJxL2+Hv76+GDRtq+fLlSklJsaT/0KFDB+3bt8/lLdkpKSn6+OOPVbVqVed4jFfqP2S2lZdujzFGS5cuzXXdigLubMqliIgItWrVSq+99ppiY2MVEhKibdu2aePGjRo8eHCW2yWDg4M1dOhQDRo0SP7+/s4D15gxY64Za9OmTdq/f78kKT09XQcOHNBbb73lrEfmbYndunVT06ZNNWnSJP3++++qWLGiPvzwQ9ntdrfiXK58+fI5Wq9SpUoaMmSI5s2bpxEjRqhDhw763//+py1btuT4CmG5cuU0depUPfHEE7rzzjvVo0cPVapUSSdPnlR0dLSaNWumZ555Jtt169evr169emn58uVKSkpSWFiYvv/++2yvDE2YMEE7duzQ3XffrQEDBqhevXpKSEjQr7/+qu3bt+uHH364Zl179uypli1bqmHDhgoMDNTPP/+s9evXZxlQ8ErS09P14IMPqnv37jpy5IiWL1+u8PBwde7c2WW5SpUqqV27dlq3bp0CAgLUsWNHt8rv1KmTevTooeDgYPn7+2v37t1as2aN6tevr3vuuce5XIkSJTR37lwNHTpU9913n7p27armzZurdOnSiouL06ZNm3Ty5MlsO4jh4eH66quvJCnLAOBhYWFavXq1c7ncuueee7RixQpFRkbq119/VdWqVbV+/Xrt3r1bkydPdp7IlCpVSvXq1dPatWtVq1YtZyc1ODhYLVq00MKFC5Wenq6goCBt27Yty2tyASsVhzbkcjfffLP69eunFStWKDExUS1atNDPP/+sL774Ql26dHG5o/NqSpcurYYNG2rPnj3q1KmT86pjixYtlJKSopSUlCzJpo4dO+rNN9/UpEmTFBYWpoMHD2rVqlUe3Yb/+OOPa8SIEbrvvvvUv39/xcfH6/3339dNN93kMj7F008/rYSEBLVu3VpBQUE6efKk3n//fdWvX9/lzpsrqVGjhu69917de++9SktL09KlSxUYGOgcaP1Slz6a5+4Fh3HjxqlUqVIKCwvTddddp99//10ff/yxSpUq5RxbKdPkyZN14sQJPf/881qzZo06deqk6667Tn///bd2796tzZs3Z3sXQnh4uD7//HP9/PPPWQatDQsLU1JSkpKSkrIMiJwTnuxXDRs21Icffqi33npLNWvWVKVKldSmTRtL9g8gp4pqe5CUlOQ8F7xw4YKOHTumDRs26I8//lDPnj01duxY57I1atTQuHHj9Morryg2NlZdunRR2bJldeLECefdN0OHDr1irNz0E64kIiJCzZo1c9apXr16+vrrr7Mdy/PZZ5/Vfffdp969e+vuu+9W9erV9ddff2nPnj06depUto8cX+r8+fPq0KGDunXrpptvvlllypTRd999p59//lmRkZFu1ffEiRMaOXKk2rVrpz179mjlypXq1atXlsfXGjRooODgYK1bt05169ZVw4YNr1n2mTNn1K9fP/Xs2dP5lMjWrVsVHR2tdu3aufRRAgMDNXfuXI0cOVJ9+vRRz5491ahRI5UoUUJ//vmn1q1bJ0n617/+5RLD399fjRs31s6dO+Xv7+8yCL70T9uxePFiSdb0H4YPH641a9bo4Ycf1qBBg1ShQgV9+eWXOnHihObMmeNMJtWoUUMBAQH66KOPVLZsWZUpU0ahoaGqU6eOatSooRdffFFxcXEqV66c1q9fn+0FjeKIZFMu2Ww2vf3225o9e7aioqL0+eefq2rVqnriiSecb0C5VIsWLdS0aVO9+eabOnnypOrVq6cXXnjBrUGjv/76a33xxRfOz//73/+cg5HecMMNzjJ8fX01f/58zZo1S8uWLdPFixfVuHFjvfDCC1kGw/a2cePGyd/fXx999JF27Nih0NBQLV68WCNGjMhxmb1791aVKlU0f/58LVq0SGlpaQoKClLz5s115513XnXdGTNmqGLFilq1apU2btyoVq1aaf78+VkSJddff70++eQTvfnmm9qwYYM+/PBDBQYGql69ellOwq9k0KBB2rRpk7Zt26a0tDTdeOONGjdu3FUbyUs988wzWrVqlWbPnq309HT17NlTTz/9dLa3cfbp00ebN29W9+7d3b7K1Lt3b/30009av369s37Dhg3TyJEjszzSVrt2bX311VdaunSpvvnmG23ZskXp6em6/vrrFRoaqtGjRzsHC79UZrIp87G5S12afLKisShVqpSWLVuml19+WV988YWSk5NVu3ZtvfDCC1n2i+nTp+v555/XCy+8oPT0dI0ePVrBwcF65ZVX9Pzzz2v58uUyxqht27ZasGDBFZ+9B3KruLYh06dPV7Vq1fTFF1/om2++0fXXX68RI0a4PMLqjvDwcO3Zs8flGFK5cmXVrFlTx44dy5JsGjlypFJTU7Vq1SpFRUWpQYMGmjdvnsvb166lffv2euONN/T666/rlVdeUY0aNfTCCy9o48aNLhci7rjjDn388cdavny5EhMTVblyZXXv3l1jxozJ8iKD7PTt21c2m03vvfeezp49q9DQUE2ZMiXbMVJ69+6tl19+WdWrV1doaKhb29GlSxetWrVK7777rpKTk1WxYkV17dpVo0ePzvKIX+nSpbVw4UJ99dVX+uqrr7Ro0SIlJyerfPnyuvnmm/Xss89mO8bhpX+Xy+9suummmxQQEKDExMRcv400k7v71aOPPqqTJ09q4cKFOn/+vFq2bKk2bdpYsn8AOVVU24NTp07piSeekPTPmEtVqlRR06ZNNXXqVLVt2zbL8sOHD1etWrX07rvv6s0333TWqW3btlneepmd3PQTspP5d5kxY4ZWrlwpHx8fRUREKDIy0uWxKemfsVQ/++wzzZ07V1988YXi4+NVqVIlNWjQQI8++ug1Y5UqVUr33nuvtm3bpq+//lrGGNWoUcOZxHLH66+/rjfeeEOvvPKK/Pz8dP/99zu//8v16dNHL730ktsDg2de1P7uu+/05Zdfym63q2bNmnr88cc1ZMiQLG1b5oXlJUuWKDo6WlFRUXI4HAoKClJ4eLief/75LO209E/bsXPnTjVs2DBLv6ZZs2ZavHixypYt6/ZLl67m+uuv10cffaSXXnpJ77//vi5evKiQkBC98847LhfwS5QooZkzZ+rVV1/V1KlTlZGR4exjvPPOO5o+fbrmzZunkiVLqmvXrho4cGCOB1wvSnwMIx7mmZCQEA0cONDjjDpwLd98840effRRffDBB9ketAEUfrQhuJLMx59HjRrlVocGQOFGewArvPfee3rhhRe0adMm59hEgJUYswkoAj755BNVr17dsrf5AAAKjy+++EJ2u52rqAAAtxhj9Omnn6pFixYkmuA1PEYHFGJr1qzRgQMH9O233+qpp57K1SufAQCFy/bt23X48GG988476tKli8vbhgAAuFxKSoo2bdqkHTt26ODBg86xugBvINkEFGKPP/64ypQpo7vuusvtZ7kBAEXDW2+9pZ9++klhYWGaMmVKflcHAFDAnTt3ThMmTFBAQIBGjhyZ5cVDgJUYswkAAAAAAACWYcwmAAAAAAAAWIZkEwAAAAAAACxDsgkAAAAAAACWKVQDhBtj5HB4f4gpm80nT+IU97j5GZu4xC3McW02H948mI2i3kbkZ2ziEpe4hScubUT28qqNkIr+PkZc4hK38MbNyzaiUCWbHA6jc+fOezWGn59NFSuWVWJiijIyHF6NVZzj5mds4hK3sMetVKmsfH3pSFyuKLcR+RmbuMQlbuGKSxuRvbxoI6TisY8Rl7jELbxx87KN4DE6AAAAAAAAWIZkEwAAAAAAACxDsgkAAAAAAACWIdkEAAAAAAAAy5BsAgAAAAAAgGVINgEAAAAAAMAyJJsAAAAAAABgGZJNAAAAAAAAsAzJJgAAAAAAAFiGZBMAAAAAAAAsQ7IJAAAAAAAAliHZBAAAAAAAAMuQbAIAAAAAAIBlSDYBAAAAAADAMiSbAAAAAAAAYBmSTQAAAAAAALAMySYAAAAAAABYhmQTAAAAAAAALOOX3xXICzabj2w2H7eW9fW1ufzrDofDyOEwOaobABQV0dHRWrBggX7//XclJycrKChIXbp00ejRo1W+fHlJUmRkpL744oss6y5YsEDt27fP6ypLoo0AAFwd7QQAeK7IJ5tsNh8FBpbx6IAvSQEBpd1e1m53KD4+hUYCQLEWHx+v0NBQDRo0SIGBgTp06JDmzJmjQ4cOafHixc7lqlevrpdfftll3bp16+Z1dSXRRgAAro52AgByxqNkU2G8am2z+cjX16aXP9ilE3FJlpdfLai8Jg4Ml83mQwMBoFjr06ePy+dWrVrJ399fU6ZMUVxcnIKCgiRJpUqVUtOmTfOhhlnRRgAAroZ2AgByxqNkU2G8ap3pRFySDscm5GsdAKC4CQwMlCSlp6fnb0WugTYCAHA1tBMA4BmPkk2F8ao1ACBv2e12ZWRk6Pfff9ebb76piIgIVatWzTn/2LFjCg8P18WLFxUcHKxRo0apS5cu+VhjAAAAAFbK9ZhNheWqNQAgb3Tq1ElxcXGSpHbt2umVV15xzqtfv74aN26sevXqKSkpSR9++KEeffRRvfHGG7r99ttzHdvPz7MxNTwdgyOnrIiTk0FnrUBc4hK38MYFACC/5CjZxFVrAMCVzJ8/X6mpqfr999/19ttva+TIkVqyZIl8fX01ePBgl2UjIiL073//W7Nnz851sslm81HFimVzVYa3eDJQbF6WRVziErd4xAUAIK/lKNnEVWvr4xTHK23FbZuJS9zi4uabb5YkhYWFqXHjxurTp482bNiQbRtgs9l022236aWXXtKFCxdUqlSpHMd1OIwSE1M8WsfX15Ynnb/ExFTZ7Y5clZFZVyvKIi5xiVt04wYElKYtAgDkuxwlm7hqnZVVnZXieKWtuG0zcYlbnISEhKhEiRL6448/8iReRkbedR49Ybc7LKublWURl7jELR5xAQDIazlKNnHVOqvcXqkqDlfaCkps4hK3sMctTFet9+7dq/T0dJdHrS/lcDi0bt063XTTTblqHwAAAAAUHLkeIJyr1v+w6kpVcbzSVty2mbjELapGjx6tRo0aKSQkRKVKldL+/fu1aNEihYSEqEuXLoqNjVVkZKR69uypmjVrKiEhQR9++KF++eUXzZkzJ7+rDwAAAMAiuU42cdUaACBJoaGhioqK0vz582WMUdWqVTVgwAANHTpU/v7+Klu2rMqVK6e3335bZ8+eVYkSJdSoUSMtWLBA7dq1y+/qAwAAALCIR8kmrloDAK5k+PDhGj58+BXnBwYG6u23387DGgEAAADIDx4lm7hqDQAAAAAAgKvxKNnEVWsAAAAAAABcTeF4nREAAAAAAAAKBZJNAAAAAAAAsAzJJgAAAAAAAFiGZBMAAAAAt6xdu1aPPPKI2rdvr6ZNm6pPnz769NNPZYxxWe6TTz5Rt27d1LhxY91xxx3avHmzW+XHxcVpzJgxCgsLU8uWLfXUU08pOTnZG5sCAPAikk0AAAAA3PLuu++qdOnSioyM1Ntvv6327dtrypQpevPNN53LrFmzRlOmTFH37t21YMECNW3aVKNHj9aePXuuWnZ6erqGDRumo0eP6pVXXtHUqVO1detWTZgwwctbBQCwmkdvowMAAABQfL399tuqVKmS83ObNm0UHx+vJUuWaNSoUbLZbJo9e7Z69uypcePGSZJat26tgwcP6s0339SCBQuuWPb69et16NAhRUVFqU6dOpKkgIAADR06VPv27VNoaKhXtw0AYB3ubAIAAADglksTTZnq16+v5ORkpaSk6Pjx4zp69Ki6d+/uskyPHj20fft2paWlXbHsLVu2KCQkxJlokqS2bdsqMDBQ0dHR1m0EAMDrSDYBAAAAyLFdu3YpKChI5cqVU0xMjCSpdu3aLsvUrVtX6enpOn78+BXLiYmJcUk0SZKPj49q167tLBcAUDjwGB0AAACAHNm5c6eioqL05JNPSpISEhIk/fP426UyP2fOz05iYqLKly+fZXqFChWuup67/Pw8v87u65s31+ZzGydz/byqL3GJS9zCH9fbSDYBAAAA8NipU6c0fvx4tWrVSg888EB+V+eqbDYfVaxYNr+rcUUBAaULVDnEJS5xi09cbyHZBAAAAMAjiYmJevjhhxUYGKg5c+bIZvvninyFChUkSUlJSapcubLL8pfOz05AQICSk5OzTE9ISNC//vWvXNXX4TBKTEzxeD1fX1uedAATE1NltztyvH5mPXNbDnGJS9yiHTcgoHSe3UFFsgkAAACA2y5cuKARI0YoKSlJK1ascHn0LXPMpcvHX4qJiVGJEiVUvXr1K5Zbp04dHTx40GWaMUZHjhxR27Ztc13vjIy86zx6ym53WFI/q8ohLnGJW3ziekvReigQAAAAgNdkZGRo3LhxiomJ0cKFCxUUFOQyv3r16qpVq5bWrVvnMj0qKkpt2rSRv7//Fctu37699u/fr6NHjzqnbd++XfHx8erQoYOl2wEA8C6STQAAAADcMm3aNG3evFkjR45UcnKy9uzZ4/wvLS1NkjRmzBitXr1as2fP1o4dO/Tss89q3759GjVqlLOc2NhYNWjQQHPnznVO69atm2666SaNGTNGmzdvVlRUlCZPnqyOHTsqNDQ0z7cVAJBzPEYHAAAAwC3btm2TJM2cOTPLvI0bN6patWrq1auXUlNTtWDBAs2fP1+1a9fW3LlzFRYW5lzWGCO73S5jjHNaiRIltHDhQk2fPl2PP/64/Pz81LVrV02ePNn7GwYAsBTJJgAAAABu2bRpk1vLDRgwQAMGDLji/GrVqunAgQNZpgcFBWnOnDk5rh8AoGDgMToAAAAAAABYhmQTAAAAAAAALEOyCQAAAAAAAJYh2QQAAAAAAADLkGwCAAAAAACAZUg2AQAAAAAAwDIkmwAAAAAAAGAZkk0AAAAAAACwDMkmAAAAAAAAWIZkEwAAAAAAACxDsgkAAAAAAACWIdkEAAAAAAAAy5BsAgAAAAAAgGVINgEAAAAAAMAyJJsAAAAAAABgGZJNAAAAAAAAsAzJJgAAAAAAAFiGZBMAAAAAAAAsQ7IJAAAAAAAAlvHL7woAAAAAAFzZbD6y2XzcWtbX1+byrzscDiOHwxSYuACKFpJNAAAAAFCA2Gw+Cgws41ESR5ICAkq7vazd7lB8fIpL4ie/4gIoekg2AQAAAEABYrP5yNfXppc/2KUTcUmWl18tqLwmDgyXzeaTJdmUH3EBFD0kmwAAAACgADoRl6TDsQnFJi6AooMBwgEAAAAAAGAZkk0AAAAAAACwDMkmAAAAAAAAWIZkEwAAAAAAACxDsgkAAAAAAACWIdkEAAAAAAAAy5BsAgBYIjo6Wvfff79at26tRo0aqXPnznrhhReUlJTkstymTZt0xx13qHHjxurWrZs+++yzfKoxAAAAAG/w82Th6OhoLViwQL///ruSk5MVFBSkLl26aPTo0SpfvrxzuU2bNun111/XkSNHdOONN2r48OHq37+/5ZUHABQc8fHxCg0N1aBBgxQYGKhDhw5pzpw5OnTokBYvXixJ2rlzp0aPHq277rpLkydP1vfff6+nnnpKZcuW1e23357PWwAAAADACh4lm+hIAACupE+fPi6fW7VqJX9/f02ZMkVxcXEKCgrS22+/rdDQUD333HOSpNatW+v48eOaPXs2bQQAAMWYzeYjm83HrWV9fW0u/7rD4TByOEyBiQsUdR4lm+hIAAA8ERgYKElKT09XWlqaduzYoYkTJ7os06NHD61evVonTpxQtWrV8qGWAAAgP9lsPgoMLONREkeSAgJKu72s3e5QfHyKS+Inv+ICxYFHyabs0JEAAFzKbrcrIyNDv//+u958801FRESoWrVq+v3335Wenq46deq4LF+3bl1JUkxMDG0EAADFkM3mI19fm17+YJdOxCVdewUPVQsqr4kDw2Wz+WRJNuVHXKA4yFGyiY4EAOBKOnXqpLi4OElSu3bt9Morr0iSEhISJEkBAQEuy2d+zpyfG35+nl2Z9PRKZk5ZEScnt+5bgbjEJW7hjQsUNifiknQ4NvfnA4UlLlCU5SjZREfC+jjF8eSnuG0zcYlbXMyfP1+pqan6/fff9fbbb2vkyJFasmSJ1+PabD6qWLGs1+PkhCe32+dlWcQlLnGLR1wAAPJajpJNdCSysurkoTie/BS3bSYucYu6m2++WZIUFhamxo0bq0+fPtqwYYPq1asnSUpKcr1NPTExUZJUoUKFXMV1OIwSE1M8WsfX15Ynf7PExFTZ7Y5clZFZVyvKIi5xiVt04wYElObCB1AIMDA5irocJZvoSGSV25OH4nDyU1BiE5e4hT1uYepIhISEqESJEvrjjz8UERGhEiVKKCYmRu3atXMuExMTI0lZHsHOiYyMvD2Ouctud1hWNyvLIi5xiVs84lrt2LFjWrRokfbu3atDhw6pTp06Wr16tXP+iRMn1Llz52zX9ff3188//3zFsnfs2KEHHnggy/QePXrotddey33lgQKAgclRHOR6gHA6Ev/I7uTBk2x1TliZrc7Pk5/idsJHXOIWJ3v37lV6erqqVasmf39/tWrVSuvXr9fgwYOdy0RFRalu3bqM6QcAhcShQ4cUHR2tJk2ayOFwyBjX89EqVapoxYoVLtOMMRo2bJhat27tVowXXnjBpe9QsWLF3FccKCAYmBzFQa6TTXQkske2GkBxM3r0aDVq1EghISEqVaqU9u/fr0WLFikkJERdunSRJD3yyCN64IEHNHXqVHXv3l07duzQ6tWruVoNAIVIRESE87geGRmpX375xWW+v7+/mjZt6jJtx44dSk5OVq9evdyKcdNNN6lx48aW1BcoqBiYHEWZR8kmOhLuI1sNoLgJDQ1VVFSU5s+fL2OMqlatqgEDBmjo0KHy9/eXJDVv3lxz5szR66+/rk8//VQ33nijpk+fru7du+dz7QEA7rLZPH+Ue/Xq1SpXrpwiIiK8UCMAQEHjUbKJjoTnyFYDKC6GDx+u4cOHX3O5zp07X3EsDwBA0ZOenq6vv/5aXbt2VcmSJd1aZ/jw4YqPj1flypXVs2dPjR07VqVKlfJyTQEAVvEo2URHAgAAAIAntmzZovj4eLceoStfvryGDRumFi1aqGTJkvr++++1ePFixcTEaN68ebmqh5+f53dk5dULOS6PQ1zieiNuTtfP6xfTELdoyPWYTQAAAABwJatWrdL111+vNm3aXHPZBg0aqEGDBs7Pbdq0UZUqVfTcc89p3759Cg0NzVEdbDYfVaxYNkfr5oW8eHs2cYmb3+UQt2DG9RaSTQAAAAC84vz589q8ebMGDBggX1/fHJXRvXt3Pffcc/rll19ynGxyOIwSE1M8Xs/X15YnHcDExFTZ7f/vbbbEJa434noqs565LYe4BSduQEDpPLuDimQTAAAAAK/YsGGDLly4oN69e+d3VZSRkXedR0/Z7Y58qR9xiZuX5RC3YMb1lqL1UCAAAACAAmP16tWqUaOGmjRpkuMy1qxZI0lq3LixVdUCAHgZdzYBAAAAcFtqaqqio6MlSbGxsUpOTta6deskSS1btlSlSpUkSefOndP27dv18MMPZ1tObGysunbtqlGjRmn06NGSpIkTJ6pmzZpq0KCBc4Dwd999V126dCHZBACFCMkmAAAAAG47e/asxo4d6zIt8/PSpUvVqlUrSdLatWuVkZFxxUfojDGy2+0yxjin3XTTTVq1apUWL16s9PR0Va1aVSNHjnTrjdgAgIKDZBMAAAAAt1WrVk0HDhy45nIDBw7UwIEDPSpnxIgRGjFiRK7rCADIX4zZBAAAAAAAAMuQbAIAAAAAAIBlSDYBAAAAAADAMiSbAAAAAAAAYBmSTQAAAAAAALAMySYAAAAAAABYxi+/KwAAAAAAALzPZvORzebj1rK+vjaXf93hcBg5HIa4+RS3ICHZBAAAAABAEWez+SgwsIxHSQ1JCggo7faydrtD8fEpLokQ4uZN3IKGZBMAAAAAAEWczeYjX1+bXv5gl07EJVlefrWg8po4MFw2m0+W5AtxvR+3oCHZBAAAAABAMXEiLkmHYxOIW0TjFhQMEA4AAAAAAADLkGwCAAAAAACAZUg2AQAAAAAAwDIkmwAAAAAAAGAZkk0AAAAAAACwDMkmAAAAAAAAWIZkEwAAAAAAACxDsgkAAAAAAACWIdkEAAAAAAAAy5BsAgAAAAAAgGVINgEAAAAAAMAyJJsAAAAAAABgGZJNAAAAAAAAsAzJJgAAAAAAAFiGZBMAAAAAAAAsQ7IJAAAAAAAAliHZBAAAAAAAAMuQbAIAAAAAAIBlSDYBAAAAAADAMiSbAAAAAAAAYBmSTQAAAAAAALAMySYAAAAAAABYhmQTAAAAAAAALEOyCQAAAAAAAJYh2QQAAAAAAADLkGwCAAAAAACAZUg2AQAAAAAAwDJ++V0BWM9m85HN5uPWsr6+Npd/3eVwGDkcxuO6AQAAoHA7duyYFi1apL179+rQoUOqU6eOVq9e7bLMoEGD9MMPP2RZNyoqSnXr1r1q+XFxcZo+fbq2bt2qEiVKqGvXrpo0aZLKlStn6XYAALyHZFMRY7P5KDCwjMfJo4CA0h4tb7c7FB+fQsIJgNPatWu1cuVK/frrr0pMTFTNmjU1aNAg9e/fXz4+/yTAc9P5AAAUDIcOHVJ0dLSaNGkih8MhY7I/H2zWrJmefPJJl2nVqlW7atnp6ekaNmyYJOmVV17RhQsX9OKLL2rChAmaN2+eNRsAAPA6j5JNdCQKPpvNR76+Nr38wS6diEvySoxqQeU1cWC4bDYfkk0AnN59911VrVpVkZGRqlixor777jtNmTJFp06d0ujRo53L5aTzAQAoOCIiItSlSxdJUmRkpH755ZdslwsICFDTpk09Knv9+vU6dOiQoqKiVKdOHWc5Q4cO1b59+xQaGpqrugMA8oZHySY6EoXHibgkHY5NyO9qAChG3n77bVWqVMn5uU2bNoqPj9eSJUs0atQo2Wz/3HGZk84HAKDgyDyee8OWLVsUEhLiTDRJUtu2bRUYGKjo6GiSTQBQSHiUbKIjAQC4kkvbh0z169fXxx9/rJSUFMbaAIBi5ocfflDTpk1lt9vVpEkTjR07Vi1atLjqOjExMS6JJkny8fFR7dq1FRMT483qAgAs5FGyiY4EAMATu3btUlBQkEv7kJPOBwCgcGnRooX69OmjWrVq6fTp01q0aJEeeughLVu2TGFhYVdcLzExUeXLl88yvUKFCkpIyN1d+35+nt+R5ek4qDl1eRziEpe4xPU0bkGT6wHC6UgAALKzc+dORUVFuTxWndPOh7s87UgUppOBnL49lLjEJW7xjZufHnvsMZfPHTt2VK9evfTWW29pwYIFeV4fm81HFSuWzfO47vL0ZT3EJS5xiZtfcd2Vq2QTHYkrxynqca2IVdxO+IhL3OLk1KlTGj9+vFq1aqUHHnjAOd2bnY+C3JGw8mSguJ3QEJe4xC0aypQpow4dOmj9+vVXXS4gIEDJyclZpickJOhf//pXjuM7HEaJiSker+fra8uTv1tiYqrsdgdxiUtc4uY4rjsCAkrnWX8lx8kmOhKuiuNJi1Wxi9t3R1ziFnWJiYl6+OGHFRgYqDlz5lx1IFl3Ox/uyElHoiCfDFwus65WlEVc4hK36MbNy46EN9SpU0cHDx50mWaM0ZEjR9S2bdtclZ2RkXd/c0/Z7Y58qR9xiUtc4npLjpJNdCSyKijZzLyKm11sTxWHEz7iEtcbCnJH4sKFCxoxYoSSkpK0YsWKbMfd8KaC2uBaeTJQ3E5oiEtc4hYNKSkp+vbbb9W4ceOrLte+fXutXLlSR48eVa1atSRJ27dvV3x8vDp06JAHNQUAWMHjZBMdiewVx5MWq2IXt++OuMQtqjIyMjRu3DjFxMTogw8+UFBQ0DXXcbfzAQAoOFJTUxUdHS1Jio2NVXJystatWydJatmypWJiYrRw4UJ17dpVVatW1enTp7VkyRKdOXNGb7zxhrOc2NhYde3aVaNGjdLo0aMlSd26ddO8efM0ZswYPf7440pNTdWsWbPUsWNHhYaG5v3GAgByxKNkEx0JAMCVTJs2TZs3b1ZkZKSSk5O1Z88e57wGDRpo3759bnU+AAAF29mzZzV27FiXaZmfly5dqhtuuEHp6el67bXXFB8fr9KlSyssLEzTpk1zSRgZY2S322WMcU4rUaKEFi5cqOnTp+vxxx+Xn5+funbtqsmTJ+fNxgEALOFRsomOBADgSrZt2yZJmjlzZpZ5GzduVOXKld3qfAAACrZq1arpwIEDV11m0aJFOS4nKChIc+bMyXH9AAD5z6NkEx0JAMCVbNq06ZrLuNP5AAAAAFC4eZRsoiMBAAAAAACAqymYrzMCAAAAAABAoUSyCQAAAAAAAJYh2QQAAAAAAADLeDRmE3AtNpuPbDYft5b19bW5/OsOh8PI4TDXXhAAAAAAAOQLkk2wjM3mo8DAMh4ljyQpIKC028va7Q7Fx6eQcAIAAAAAoIAi2QTL2Gw+8vW16eUPdulEXJLl5VcLKq+JA8Nls/mQbAIAAAAAoIAi2QTLnYhL0uHYhPyuBgAAAAAAyAcMEA4AAAAAAADLkGwCAAAAAACAZXiMDkUCb8EDAAAAAKBgINmEQo+34AEAAAAAUHCQbEKhx1vwAAAAAAAoOEg2ocjgLXgAAAAAAOQ/BggHAAAAAACAZUg2AQAAAAAAwDI8RgfkAm/BA5AbHEMAAABQFJFsAnKIt+AByA2OIQAAACiqSDYBOcRb8ADkBscQAAAAFFUkm4Bc4i14AHKDYwgAAACKGgYIBwAAAAAAgGVINgEAAAAAAMAyJJsAAAAAAABgGZJNAAAAAAAAsAzJJgAAAAAAAFiGZBMAAAAAAAAs45ffFQDgOZvNRzabj1vL+vraXP51h8Nh5HCYHNUNAAAAAFC8kWwCChmbzUeBgWU8Sh5JUkBAabeXtdsdio9PIeEEAAAAAPAYySagkLHZfOTra9PLH+zSibgky8uvFlReEweGy2bzIdkEFFHcHQkAAABvItkEFFIn4pJ0ODYhv6sBoJDh7kgAAAB4G8kmAACKEe6OBAAAgLeRbAIAoBji7kgAAAB4C8kmAACQJxgrCgAAoHgg2QQAALyOsaIAAACKD5JNAADA6xgrCgAAoPgg2QQAAPIMY0UBhd+xY8e0aNEi7d27V4cOHVKdOnW0evVq5/zk5GQtWbJE0dHROnr0qPz9/RUaGqrx48crJCTkqmXv2LFDDzzwQJbpPXr00GuvvWb5tgAAvINkEwAAAAC3HTp0SNHR0WrSpIkcDoeMcb2b8OTJk1qxYoX69++vcePG6eLFi1q8eLHuueceffbZZ6pbt+41Y7zwwguqU6eO83PFihUt3w4AgPeQbAIAAEUaA5MD1oqIiFCXLl0kSZGRkfrll19c5lerVk0bNmxQ6dL/b8y11q1bKyIiQsuXL9eUKVOuGeOmm25S48aNra04ACDPkGwCAABFVn4OTE6SC0WVzXb1/bRMmTJZppUtW1Y1atTQ6dOnvVUtAEABQrIJAAAUWfk1MDlv3wNcJSYm6tChQ7rlllvcWn748OGKj49X5cqV1bNnT40dO1alSpXyci0BAFYh2QQAAIq8vB6YnLfvAa5eeukl+fj46N57773qcuXLl9ewYcPUokULlSxZUt9//70WL16smJgYzZs3L1d18PPzLPkreXa3YW5cHoe4xCUucT2NW9CQbAIAAPAS3r4HSJ999pk+/vhjzZw5UzfccMNVl23QoIEaNGjg/NymTRtVqVJFzz33nPbt26fQ0NAc1cFm81HFimVztG5e8OSuRuISl7jEzc+47iLZBMBtjD8CAAA8ER0drWeeeUajRo1Sv379clRG9+7d9dxzz+mXX37JcbLJ4TBKTEzxeD1fX1uedOgSE1NltzuIS1ziEjfHcd0REFA6z+6IItkEwC2MPwIAADyxZ88ejR07Vn379tXYsWPzuzrKyPCsU5aX7HZHvtSPuMQlLnG9hWQTALcw/ggAAHDX77//rhEjRqh169aaNm1arspas2aNJKlx48ZWVA0AkAdINgHwCOOPAABQvKWmpio6OlqSFBsbq+TkZK1bt06S1LJlSxljNHToUJUsWVKDBw/WL7/84ly3XLlyqlevnnPdrl27atSoURo9erQkaeLEiapZs6YaNGjgHCD83XffVZcuXUg2AUAhQrIJQIGXX2NFMUaVZ9auXauVK1fq119/VWJiomrWrKlBgwapf//+8vH5f9/jJ598ooULF+rkyZOqXbu2xo8fr06dOuVjzQEAnjh79myWx+IyPy9dulSSdOrUKUnSgw8+6LJcy5YttWzZMkmSMUZ2u13G/L+28KabbtKqVau0ePFipaenq2rVqho5cqSGDx/urc0BAHiBR8kmOhIA8lp+jRXFGFWee/fdd1W1alVFRkaqYsWK+u677zRlyhSdOnXKecV6zZo1mjJlikaOHKnWrVsrKipKo0eP1gcffKCmTZvm7wYAANxSrVo1HThw4KrLXGv+lcoZMWKERowYkav6AQDyn0fJJjoSAPJafo0VxRhVnnv77bdVqVIl5+c2bdooPj5eS5Ys0ahRo2Sz2TR79mz17NlT48aNkyS1bt1aBw8e1JtvvqkFCxbkU80BAAAAWMmjZBMdCQD5Jb/GimKMKvdd2j5kql+/vj7++GOlpKTo77//1tGjR/Wf//zHZZkePXpo1qxZSktLk7+/f15VFwAAAICXePR8yJU6EsnJyUpJSdHx48d19OhRde/e3WWZHj16aPv27UpLS8tdbQEAhcquXbsUFBSkcuXKKSYmRpJUu3Ztl2Xq1q2r9PR0HT9+PD+qCAAAAMBiuR4g/NKOxK5duyRdvSNRt27d3IYEABQCO3fuVFRUlJ588klJUkLCP3eIBQQEuCyX+Tlzfm74+Xk2xpanY3LlVHZx8is2cYt23Jyun1f1JW7exgUAIL/kKtlER+LKcYp63PyMTVziFuW4RcWpU6c0fvx4tWrVSg888ECexLTZfFSxYtk8ieUpTwaOLyqxiVu44hb2+hMXAICCJcfJJjoSrorjSUtx22biErcoxfWmxMREPfzwwwoMDNScOXNks/2TUKtQoYIkKSkpSZUrV3ZZ/tL5OeVwGCUmpni0jq+vLU/+BomJqbLbHQUiNnGLdlxPZdYzt+UQt+DEDQgoXWQvZAAACo8cJZvoSGRVUE4y8ypufsYmLnGLclx3FOSOxIULFzRixAglJSVpxYoVKl++vHNenTp1JEkxMTHO/8/8XKJECVWvXj3X8TMy8q7z6Am73ZFvdcuv2MQtXHELe/2JCwBAweJxsomORPaK40lLcdtm4hK3KMX1hoyMDI0bN04xMTH64IMPFBQU5DK/evXqqlWrltatW6cuXbo4p0dFRalNmza8iQ4AAAAoIjxKNtGRAABcybRp07R582ZFRkYqOTlZe/bscc5r0KCB/P39NWbMGE2cOFE1atRQq1atFBUVpX379un999/Pv4oDAAAAsJRHySY6EgCAK9m2bZskaebMmVnmbdy4UdWqVVOvXr2UmpqqBQsWaP78+apdu7bmzp2rsLCwvK4uAAAAAC/xKNlERwIAcCWbNm1ya7kBAwZowIABXq4NAAAAgPziUbKJjgQAAAAAAACupmC+zggAAAAAAACFEskmAAAAAAAAWIZkEwAAAAAAACxDsgkAAAAAAACWIdkEAAAAAAAAy3j0NjoAAAAUbDabj2w2H7eW9fW1ufzrDofDyOEwOaobAAAoHkg2AQAAFBE2m48CA8t4lDySpICA0m4va7c7FB+fQsIJAABcEckmAACAIsJm85Gvr00vf7BLJ+KSLC+/WlB5TRwYLpvNh2QTAAC4IpJNAAAARcyJuCQdjk3I72oAAIBiigHCAQAAAAAAYBmSTQAAAAAAALAMySYAAAAAAABYhmQTAAAAAAAALEOyCQAAAAAAAJYh2QQAAAAAAADL+OV3BQAAAFD42Ww+stl83FrW19fm8q87HA4jh8PkqG4AACBvkWwCAABArthsPgoMLONR8kiSAgJKu72s3e5QfHwKCScAAAoBkk0AAADIFZvNR76+Nr38wS6diEuyvPxqQeU1cWC4bDYfkk0AABQCJJsAAABgiRNxSTocm5Df1QAAAPmMAcIBAAAAAABgGZJNAAAAAAAAsAzJJgAAAAAAAFiGZBMAAAAAAAAsQ7IJAAAAAAAAliHZBAAAAAAAAMv45XcFAAAAgJyy2Xxks/m4tayvr83lX3c4HEYOhykwcQuCY8eOadGiRdq7d68OHTqkOnXqaPXq1VmW++STT7Rw4UKdPHlStWvX1vjx49WpU6drlh8XF6fp06dr69atKlGihLp27apJkyapXLly3tgcAIAXkGwCAABAoWSz+SgwsIxHSRxJCggo7faydrtD8fEpLomf/IpbUBw6dEjR0dFq0qSJHA6HjMlaxzVr1mjKlCkaOXKkWrduraioKI0ePVoffPCBmjZtesWy09PTNWzYMEnSK6+8ogsXLujFF1/UhAkTNG/ePG9tEgDAYiSbAAAAUCjZbD7y9bXp5Q926URckuXlVwsqr4kDw2Wz+WRJNuVH3IIiIiJCXbp0kSRFRkbql19+ybLM7Nmz1bNnT40bN06S1Lp1ax08eFBvvvmmFixYcMWy169fr0OHDikqKkp16tSRJAUEBGjo0KHat2+fQkNDrd8gAIDlSDYBAACgUDsRl6TDsQnFJm5+s9mufkfX8ePHdfToUf3nP/9xmd6jRw/NmjVLaWlp8vf3z3bdLVu2KCQkxJlokqS2bdsqMDBQ0dHRJJsAoJBggHAAAAAAlomJiZEk1a5d22V63bp1lZ6eruPHj1913UsTTZLk4+Oj2rVrO8sFABR83NkEAAAAwDIJCf/c7RUQEOAyPfNz5vzsJCYmqnz58lmmV6hQ4arrucPPz/Pr7J6Oy5VTl8chLnGJS1xP4xY0JJsAAAAAFGk2m48qViyb39W4Ik8GjycucYlL3PyM6y6STQAAAAAsU6FCBUlSUlKSKleu7JyemJjoMj87AQEBSk5OzjI9ISFB//rXv3JcJ4fDKDExxeP1fH1tedKhS0xMld3uIC5xiUvcHMd1R0BA6Ty7I4pkEwAAAADLZI65dPn4SzExMSpRooSqV69+1XUPHjzoMs0YoyNHjqht27a5qldGhmedsrxktzvypX7EJS5xiestBfshPwAAAACFSvXq1VWrVi2tW7fOZXpUVJTatGlzxTfRSVL79u21f/9+HT161Dlt+/btio+PV4cOHbxVZQCAxbizCQAAAIDbUlNTFR0dLUmKjY1VcnKyM7HUsmVLVapUSWPGjNHEiRNVo0YNtWrVSlFRUdq3b5/ef/99ZzmxsbHq2rWrRo0apdGjR0uSunXrpnnz5mnMmDF6/PHHlZqaqlmzZqljx44KDQ3N+40FAOQIySYAAAAAbjt79qzGjh3rMi3z89KlS9WqVSv16tVLqampWrBggebPn6/atWtr7ty5CgsLc65jjJHdbpcxxjmtRIkSWrhwoaZPn67HH39cfn5+6tq1qyZPnpw3GwcAsATJJgAAAABuq1atmg4cOHDN5QYMGKABAwZ4XE5QUJDmzJmTqzoCAPIXYzYBAAAAAADAMiSbAAAAAAAAYBmSTQAAAAAAALAMySYAAAAAAABYhmQTAAAAAAAALEOyCQAAAAAAAJYh2QQAAAAAAADLkGwCAAAAAACAZfw8XeHYsWNatGiR9u7dq0OHDqlOnTpavXq1yzKDBg3SDz/8kGXdqKgo1a1bN+e1BQAUaLQRAAAAADxONh06dEjR0dFq0qSJHA6HjDHZLtesWTM9+eSTLtOqVauWs1oCAAoF2ggAAAAAHiebIiIi1KVLF0lSZGSkfvnll2yXCwgIUNOmTXNVOQBA4UIbAQAAAMDjMZtsNoZ5AgBkjzYCAAAAgNd6BT/88IOaNm2qxo0b6/7779ePP/7orVAAgEKGNgIAAAAoujx+jM4dLVq0UJ8+fVSrVi2dPn1aixYt0kMPPaRly5YpLCwsV2X7+XmWH/P1zZur7JfHKepx8zM2cYlblOMWB7QR+RubuMQlbuGNCwBAYeGVZNNjjz3m8rljx47q1auX3nrrLS1YsCDH5dpsPqpYsWxuq+cVAQGli1Xc/IxNXOISt3CjjSgesYlLXOIW3rgAAOSWV5JNlytTpow6dOig9evX56och8MoMTHFo3V8fW150lAnJqbKbncUm7j5GZu4xC3Kcd0REFC6SF3tLo5tRH7GJi5xiVt447qjqLURAIDCKU+STVbKyPCswc0rdrsjX+qWX3HzMzZxiUtcXElB/S45VhOXuMQtTHEBAMitPLnskZKSom+//VaNGzfOi3AAgEKENgIAAAAoWjy+syk1NVXR0dGSpNjYWCUnJ2vdunWSpJYtWyomJkYLFy5U165dVbVqVZ0+fVpLlizRmTNn9MYbb1hbewBAgUIbAQAAAMDjZNPZs2c1duxYl2mZn5cuXaobbrhB6enpeu211xQfH6/SpUsrLCxM06ZNU2hoqDW1BgAUSLQRAAAAADxONlWrVk0HDhy46jKLFi3KcYUAAIUXbQQAAAAAXlUBAAAAAAAAy5BsAgAAAAAAgGVINgEAAAAAAMAyJJsAAAAAAABgGZJNAAAAAAAAsAzJJgAAAAAAAFiGZBMAAAAAAAAsQ7IJAAAAAAAAliHZBAAAAAAAAMuQbAIAAAAAAIBlSDYBAAAAAADAMiSbAAAAAAAAYBmSTQAAAAAAALAMySYAAAAAAABYhmQTAAAAAAAALEOyCQAAAAAAAJbxy+8KAAAAAChaBg0apB9++CHbea+++qp69uyZ7byIiAjFxsZmmb5v3z6VLFnS0joCALyHZBMAAAAASz377LNKTk52mfbee+/p66+/Vps2ba66brdu3TRkyBCXaf7+/pbXEQDgPSSbAAAAAFiqXr16WaZNmDBBbdu2VaVKla667vXXX6+mTZt6qWYAgLzAmE0AAAAAvGr37t06ceKEevfund9VAQDkAZJNAAAAALxq9erVKlOmjDp37nzNZVetWqVGjRopLCxMDz/8sA4cOJAHNQQAWInH6AAAAAB4TUZGhtauXauIiAiVKVPmqstGREQoNDRUN954o44fP6533nlH9913n7788ktVr149V/Xw8/P8Oruvb95cm788DnGJS1ziehq3oCHZBAAAAMBrtm3bpnPnzqlXr17XXPbpp592/n/z5s3Vtm1bde/eXYsWLdLUqVNzXAebzUcVK5bN8freFhBQmrjEJS5xC0Vcd5FsAgAAAOA1q1evVmBgoG699VaP161SpYrCw8P166+/5qoODodRYmKKx+v5+trypEOXmJgqu91BXOISl7g5juuOgIDSeXZHFMkmAAAAAF5x4cIFffPNN7rjjjtUokSJfK1LRoZnnbK8ZLc78qV+xCUucYnrLQX7IT8AAAAAhdamTZuUkpKS47fQxcXFadeuXWrcuLHFNQMAeBN3NgEAAADwilWrVunGG29UeHh4lnmDBw/WyZMntWHDBkn/PG63efNmdejQQVWqVNHx48c1f/58+fr66qGHHsrrqgMAcoFkEwAAAADLJSQk6P/+7/80ePBg+fj4ZJnvcDhkt9udn6tVq6bTp09rxowZSkpKUvny5dW6dWs99thjuX4THQAgb5FsAgAAAGC5ChUq6Jdffrni/GXLlrl8btq0aZZpAIDCiTGbAAAAAAAAYBmSTQAAAAAAALAMySYAAAAAAABYhmQTAAAAAAAALEOyCQAAAAAAAJYh2QQAAAAAAADLkGwCAAAAAACAZUg2AQAAAAAAwDIkmwAAAAAAAGAZkk0AAAAAAACwDMkmAAAAAAAAWIZkEwAAAAAAACxDsgkAAAAAAACWIdkEAAAAAAAAy5BsAgAAAAAAgGVINgEAAAAAAMAyJJsAAAAAAABgGY+TTceOHdMzzzyjPn36qEGDBurVq1e2y33yySfq1q2bGjdurDvuuEObN2/OdWUBAAUbbQQAAAAAj5NNhw4dUnR0tGrWrKm6detmu8yaNWs0ZcoUde/eXQsWLFDTpk01evRo7dmzJ7f1BQAUYLQRAAAAAPw8XSEiIkJdunSRJEVGRuqXX37Jsszs2bPVs2dPjRs3TpLUunVrHTx4UG+++aYWLFiQuxoDAAos2ggAAAAAHt/ZZLNdfZXjx4/r6NGj6t69u8v0Hj16aPv27UpLS/M0JACgkKCNAAAAAGD5AOExMTGSpNq1a7tMr1u3rtLT03X8+HGrQwIACgnaCAAAAKDo8/gxumtJSEiQJAUEBLhMz/ycOT+n/Pw8y4/5+ubNC/cuj1PU4+ZnbOIStyjHLepoI/I/NnGJS9zCGxcAgMLC8mSTN9lsPqpYsWx+VyNbAQGli1Xc/IxNXOISF9mhjShYsYlLXOIW3rgAAOSW5cmmChUqSJKSkpJUuXJl5/TExESX+TnhcBglJqZ4tI6vry1PGurExFTZ7Y5iEzc/YxOXuEU5rjsCAkoX2qvdtBH5H5u4xCVu4Y3rjsLcRgAAig7Lk0116tSR9M+4HJn/n/m5RIkSql69eq7Kz8jwrMHNK3a7I1/qll9x8zM2cYlL3MKLNqL4xCYucYlbeOMCAJBbll/2qF69umrVqqV169a5TI+KilKbNm3k7+9vdUgAQCFBGwEAAAAUfR7f2ZSamqro6GhJUmxsrJKTk52dhpYtW6pSpUoaM2aMJk6cqBo1aqhVq1aKiorSvn379P7771tbewBAgUIbAQAAAMDjZNPZs2c1duxYl2mZn5cuXapWrVqpV69eSk1N1YIFCzR//nzVrl1bc+fOVVhYmDW1BgAUSLQRAAAAADxONlWrVk0HDhy45nIDBgzQgAEDclQpAEDhRBsBAAAAgFdVAAAAAAAAwDIkmwAAAAAAAGAZkk0AAAAAAACwDMkmAAAAAAAAWIZkEwAAAAAAACxDsgkAAAAAAACWIdkEAAAAwFKff/65QkJCsvz38ssvX3U9Y4zmz5+vjh07KjQ0VPfcc4/27NmTN5UGAFjGL78rAAAAAKBoWrhwocqXL+/8HBQUdNXlFyxYoNmzZ2vixIkKCQnRBx98oCFDhuirr75S9erVvV1dAIBFSDYBAAAA8IqGDRuqUqVKbi178eJFzZs3T0OGDNGDDz4oSQoPD9ftt9+uRYsWaerUqd6rKADAUjxGBwAAACDf7d69W8nJyerevbtzmr+/v7p27aotW7bkY80AAJ4i2QQAAADAK3r16qX69eurc+fOmjdvnux2+xWXjYmJkSTVqVPHZXrdunV18uRJXbhwwat1BQBYh8foAAAAAFiqcuXKGjNmjJo0aSIfHx9t2rRJr7/+uuLi4vTMM89ku05iYqL8/f1VsmRJl+kBAQEyxighIUGlSpXKcZ38/Dy/zu7rmzfX5i+PQ1ziEpe4nsYtaEg2AQAAALBUu3bt1K5dO+fnW2+9VSVLltR7772nkSNHqkqVKnlaH5vNRxUrls3TmJ4ICChNXOISl7iFIq67SDYBAAAA8Lru3btr8eLF+u2337JNNgUEBCgtLU0XL150ubspMTFRPj4+qlChQo5jOxxGiYkpHq/n62vLkw5dYmKq7HYHcYlLXOLmOK47AgJK59kdUSSbAAAAAOS7zLGajhw5optvvtk5PSYmRjfeeGOuHqGTpIwMzzpleclud+RL/YhLXOIS11sK9kN+AAAAAIqEqKgo+fr6qkGDBtnOb9asmcqVK6e1a9c6p6Wnp+vrr79W+/bt86qaAAALcGcTAAAAAEsNHTpUrVq1UkhIiCRp48aN+vjjj/XAAw+ocuXKkqTBgwfr5MmT2rBhgySpZMmSGjFihObMmaNKlSopODhYH374oeLj4zV06NB82xYAgOdINgEAAACwVO3atfXZZ5/p1KlTcjgcqlWrliZPnqxBgwY5l3E4HLLb7S7rPfzwwzLGaPHixTp37pzq16+vRYsWqXr16nm9CQCAXCDZBAAAAMBSTz/99DWXWbZsWZZpPj4+GjFihEaMGOGNagEA8ghjNgEAAAAAAMAyJJsAAAAAAABgGZJNAAAAAAAAsAzJJgAAAAAAAFiGZBMAAAAAAAAsQ7IJAAAAAAAAliHZBAAAAAAAAMuQbAIAAAAAAIBlSDYBAAAAAADAMiSbAAAAAAAAYBmSTQAAAAAAALAMySYAAAAAAABYhmQTAAAAAAAALEOyCQAAAAAAAJYh2QQAAAAAAADLkGwCAAAAAACAZUg2AQAAAAAAwDIkmwAAAAAAAGAZkk0AAAAAAACwDMkmAAAAAAAAWIZkEwAAAAAAACxDsgkAAAAAAACWIdkEAAAAAAAAy5BsAgAAAAAAgGVINgEAAAAAAMAyJJsAAAAAAABgGZJNAAAAAAAAsIxXkk2ff/65QkJCsvz38ssveyMcAKAQoY0AAAAAijY/bxa+cOFClS9f3vk5KCjIm+EAAIUIbQQAAABQNHk12dSwYUNVqlTJmyEAAIUUbQQAAABQNDFmEwAAAAAAACzj1WRTr169VL9+fXXu3Fnz5s2T3W73ZjgAQCFCGwEAAAAUTV55jK5y5coaM2aMmjRpIh8fH23atEmvv/664uLi9Mwzz+SqbD8/z/Jjvr55c/PW5XGKetz8jE1c4hbluMUBbUT+xiYucYlbeOMCAFBYeCXZ1K5dO7Vr1875+dZbb1XJkiX13nvvaeTIkapSpUqOyrXZfFSxYlmrqmmpgIDSxSpufsYmLnGJW7jRRhSP2MQlLnELb1wAAHLLqwOEX6p79+5avHixfvvttxx3JBwOo8TEFI/W8fW15UlDnZiYKrvdUWzi5mds4hK3KMd1R0BA6SJ3tbu4tRH5GZu4xCVu4Y3rjqLYRgAACp88SzZZJSPDswY3r9jtjnypW37Fzc/YxCUucXElBfW75FhNXOIStzDFBQAgt/LsskdUVJR8fX3VoEGDvAoJACgkaCMAAACAosMrdzYNHTpUrVq1UkhIiCRp48aN+vjjj/XAAw+ocuXK3ggJACgkaCMAoOhbu3atVq5cqV9//VWJiYmqWbOmBg0apP79+8vHx+eK60VERCg2NjbL9H379qlkyZLerDIAwEJeSTbVrl1bn332mU6dOiWHw6FatWpp8uTJGjRokDfCAQAKEdoIACj63n33XVWtWlWRkZGqWLGivvvuO02ZMkWnTp3S6NGjr7put27dNGTIEJdp/v7+3qwuAMBiXkk2Pf30094oFgBQBNBGAEDR9/bbb6tSpUrOz23atFF8fLyWLFmiUaNGyWa78mge119/vZo2bZoHtQQAeAuvqgAAAABgqUsTTZnq16+v5ORkpaR49uZQAEDhQ7IJAAAAgNft2rVLQUFBKleu3FWXW7VqlRo1aqSwsDA9/PDDOnDgQB7VEABgFa88RgcAAAAAmXbu3KmoqCg9+eSTV10uIiJCoaGhuvHGG3X8+HG98847uu+++/Tll1+qevXquaqDn5/n19l9ffPm2vzlcYhLXOIS19O4BQ3JJgAAAABec+rUKY0fP16tWrXSAw88cNVlLx3Xr3nz5mrbtq26d++uRYsWaerUqTmug83mo4oVy+Z4fW8LCChNXOISl7iFIq67SDYBAAAA8IrExEQ9/PDDCgwM1Jw5c646MHh2qlSpovDwcP3666+5qofDYZSY6PlYUb6+tjzp0CUmpspudxCXuMQlbo7juiMgoHSe3RFFsgkAAACA5S5cuKARI0YoKSlJK1asUPny5fO1PhkZnnXK8pLd7siX+hGXuMQlrrcU7If8AAAAABQ6GRkZGjdunGJiYrRw4UIFBQXlqJy4uDjt2rVLjRs3triGAABv4s4mAAAAAJaaNm2aNm/erMjISCUnJ2vPnj3OeQ0aNJC/v78GDx6skydPasOGDZKk1atXa/PmzerQoYOqVKmi48ePa/78+fL19dVDDz2UT1sCAMgJkk0AAAAALLVt2zZJ0syZM7PM27hxo6pVqyaHwyG73e6cXq1aNZ0+fVozZsxQUlKSypcvr9atW+uxxx7L9ZvoAAB5i2QTAAAAAEtt2rTpmsssW7bM5XPTpk2zTAMAFE6M2QQAAAAAAADLkGwCAAAAAACAZUg2AQAAAAAAwDIkmwAAAAAAAGAZkk0AAAAAAACwDMkmAAAAAAAAWIZkEwAAAAAAACxDsgkAAAAAAACWIdkEAAAAAAAAy5BsAgAAAAAAgGVINgEAAAAAAMAyJJsAAAAAAABgGZJNAAAAAAAAsAzJJgAAAAAAAFiGZBMAAAAAAAAsQ7IJAAAAAAAAliHZBAAAAAAAAMuQbAIAAAAAAIBlSDYBAAAAAADAMiSbAAAAAAAAYBmSTQAAAAAAALAMySYAAAAAAABYhmQTAAAAAAAALEOyCQAAAAAAAJYh2QQAAAAAAADLkGwCAAAAAACAZUg2AQAAAAAAwDIkmwAAAAAAAGAZkk0AAAAAAACwDMkmAAAAAAAAWIZkEwAAAAAAACxDsgkAAAAAAACWIdkEAAAAAAAAy5BsAgAAAAAAgGVINgEAAAAAAMAyJJsAAAAAAABgGZJNAAAAAAAAsIzXkk2HDx/WQw89pKZNm6pt27aaNWuW0tLSvBUOAFCI0EYAQNGX02O9MUbz589Xx44dFRoaqnvuuUd79uzxfoUBAJbxSrIpISFBgwcPVnp6uubMmaPx48fr448/1syZM70RDgBQiNBGAEDRl5tj/YIFCzR79mw9+OCDmjdvnipXrqwhQ4bo+PHjeVBzAIAV/LxR6EcffaTz589r7ty5CgwMlCTZ7XZNmzZNI0aMUFBQkDfCAgAKAdoIACj6cnqsv3jxoubNm6chQ4bowQcflCSFh4fr9ttv16JFizR16tS82QAAQK545c6mLVu2qE2bNs6GRZK6d+8uh8Ohbdu2eSMkAKCQoI0AgKIvp8f63bt3Kzk5Wd27d3dO8/f3V9euXbVlyxZvVhkAYCGvJJtiYmJUp04dl2kBAQGqXLmyYmJivBESAFBI0EYAQNGX02N95rzL161bt65OnjypCxcuWF9ZAIDlfIwxxupCGzZsqLFjx2r48OEu03v16qWwsDA9//zzOSrXGCOHw7Pq+vhINptN8UkXlWF35Cju1fj52hRYvqQcDocu/SaLatz8jE1c4haHuO6w2Xzk4+NjeZ3yCm1E/sYmLnGJW3jjuqOgtBE5Pda//fbbeuutt/Tzzz+7TF+3bp3Gjh2rLVu25Ohx65y0EVLx28eIS1ziFt647sjLNsIrYzZ5i4+Pj3x9c/bFBJYvaXFtXNls2d8kVlTj5mds4hK3OMSF5wpjG5GfsYlLXOIW3rjwXG7aCKn47WPEJS5xC2/cgsIrtQsICFBSUlKW6QkJCapQoYI3QgIACgnaCAAo+nJ6rA8ICFBaWpouXrzoMj0xMVE+Pj60EwBQSHgl2VSnTp0sz2InJSXpzJkzWZ6/BgAUL7QRAFD05fRYnznvyJEjLtNjYmJ04403qlSpUtZXFgBgOa8km9q3b6/vvvtOiYmJzmnr1q2TzWZT27ZtvRESAFBI0EYAQNGX02N9s2bNVK5cOa1du9Y5LT09XV9//bXat2/v1ToDAKzjlWTTv//9b5UtW1aPPvqotm7dqs8++0yzZs3Sv//97xwN6AcAKDpoIwCg6HP3WD948GB17drV+blkyZIaMWKEFi9erPfee0/bt2/XhAkTFB8fr6FDh+bHpgAAcsArb6OTpMOHD+v555/XTz/9pLJly6pPnz4aP368/P39vREOAFCI0EYAQNHnzrF+0KBBio2N1aZNm5zTjDGaP3++li9frnPnzql+/fqaNGmSwsLC8mMzAAA54LVkEwAAAAAAAIqfgv2uPAAAAAAAABQqJJsAAAAAAABgGZJNAAAAAAAAsAzJJgAAAAAAAFiGZBMAAAAAAAAsQ7IJAAAAAAAAliHZBAAAAAAWczgc+V0FSDLG5HcVgGKJZBOAa6KRBoCCj44tUDDs2bNHGRkZstnoamXn0vNKb55j7t+/X6mpqfLx8fFaDABXxhEQwFWlpKTozTff1KFDh/K7KkChl5qaqq1bt+Z3NVAEZXZs09LSdPr06fyuDlBsHThwQE888YQSExPzuyoFkt1ud0n+eCsR9Pfff2v48OFasWKFc1p+XzxNTU3V4sWL9eeff+ZrPYDs2O12y8sk2ZQD2f0huJpYsPH3ybnNmzdr7ty5WrZsmWJiYvK7OkChZYzRa6+9pmHDhmndunX5XZ0c88bJSFGQn99LRkaG/Pz8dP78efXt21cvvPBCvtUlP12prc/vDmZu5dVdILBG5cqVlZaWpr/++iu/q1LgGGPk6+srSRo8eLBeffVVr8UqWbKk5s+frwcffFAXL17UxYsX5ePjk6+/oQ8++ECzZs3S0qVLFRcX59VYxpgCdbwoSHXxlsK8jRkZGfL19dWFCxe0cuVKy8r1s6ykYiItLU3+/v6SpH379qlkyZKqXLmyKlWqJIfDka+3y14pvjEmR1cN8nt7rGK3250N2/bt21WlShXVrVvXrXUv/Q5y+j1eq04FXc+ePRUfH6+XXnpJdrtdQ4YMcfv7K6gK+vd/pfpZuQ8i7/n4+KhLly46efKkpk+fLrvdrp49e+ZLXbLbx651zM/c/zLXe/bZZ3XnnXeqSZMmXq2rOy7dnvxouy6NP3/+fF133XXq379/nsTOTDQlJyerf//++vPPP5WQkKA///xT//rXv3JdvtXnFt6S+T2kp6crLi5OSUlJCgoKUqVKlZwdzNzU99L183LbC3p7BVcOh0Nly5ZV+fLlVapUKUnS4cOH5evrKz8/P1WrVi2fa5h/v91L9+VPP/1Up0+fVrNmzSzfx/fv36+yZcuqevXquvnmm+VwODRy5EidOnVKn3/+uUqXLp1v38GwYcN05swZffXVV7Lb7Ro6dKiCgoIsKfvy7zG/j89Xqo+3v/v8arMu3d5z586pYsWK+f43cNel5xH33XefYmNjVatWLYWGhua6bJJNbkhNTVVUVJS6deumcuXKSZL+85//aMuWLbLb7QoMDNSrr75qyR8kpy7dwXfv3q0LFy7Ix8dHbdq0ydGOfml5x48f119//aU6deqodOnSzmRbYXDpdkRGRurAgQO666679K9//UtlypRxe93k5GTZ7XZVqFDB0jp9+OGHiouLU+3atXXrrbfquuuuy3X5VspMrg4cOFA2m00vv/yy/P39df/991uecLrayYa3En1r165VRkaGgoKC1LJlS0vKz61L67d582aVKFFCAQEBCg0NtaTDhPxjjFHLli1VsmRJLV26VC+88IL8/f3VtWvXPK1H5knFhQsXtGPHDmVkZKhVq1bO9u1yaWlpunDhggICApz75+7du7V27Vo98cQTeVr37DgcDudvZunSpTp69Kjq1aunVq1aOY9T3vzdXBp//Pjx+u233xQWFqZOnTp5/WTz0hPEO+64Q/Xq1dNjjz2mSZMm6fz587ku/9Lj0Z49e/TXX38pMDBQoaGh8vf3LzAXpex2u/N7eOSRR3Ty5EnFxsbqpptuUkREhMaPH5+r42d6erpKlCgh6Z/fQ1pa2hV/L1a69PufO3eu/ve//8nHx0f169fX8OHDC9X5WHFhs9lUsmRJ3XXXXapWrZqeeuop7dy5U3///bdKliypQYMG6a677lKlSpXypX6X7lPGGKWnp8vf3z9Pzi0y40ZHR+vXX39Vp06d1LZtW0sTTWfOnNF//vMf3XnnnXrooYck/fP77devn1555RUNGzZMCxcuzJeEU+Z3P2nSJDkcDq1atUqSLEk4Xfp3fe+993Ty5EklJiaqb9++CgkJUWBgYG6rn+P6bNiwQadPn5YxRrfddpuqVKnitbiZbWJaWpqOHTum8+fPq2bNms622Ftt1qXbO336dP311196+OGH1aBBgwJ/zn75eURAQIBsNpv+/PNPkk155bXXXtPy5ct17tw5PfDAA/riiy+0d+9eTZkyRYmJifr66681ePBgvf766+rQoUOe1+/SE92JEyfqp59+0qlTp+Tn56fw8HCNGzdODRs2dPtgfukPZvLkydqzZ4+OHj2qm266SZ06ddLQoUNVvnx5r22PlTK3Y8KECfr55581ceJENWvWLEui6fIG59LbfKdOnardu3fr4sWL6t+/v4YMGSI/v5z/dDLLHTt2rLZu3aoKFSro5MmT6tChg4YPH67w8PAcl20lh8PhPJGdPXu2ypQpo9TUVH322WdKS0vTsGHDVLt2bUtiXbrPffnllzp9+rQyMjLUrVs31a5dWzabzbKTgsw4jz32mLZt2yZJOn/+vEaMGKGHH344TzoQV5NZv3HjxmnHjh1KSkpS5cqVdffdd+uRRx4h4VRIXbqPJyYmKiAgQOnp6Zo0aZLzjqe8knlSMXDgQMXGxurChQuqUqWKXnzxRTVv3txl30pLS9OYMWPk7++v5557ThUrVpQk57HhwoULKlOmTL7uj5knjuPHj9fWrVtVpUoVLV++XM2bN9eDDz6oLl26ePV3kxn/2Wef1d69e/Xyyy+rXr16CggIkMPh8Op3k/m37NKli+rXr6///ve/Sk9PV/ny5XXu3DlJubu7+dJzi99++01//vmnatasqSpVquj1119X6dKlC8SdN5m3/g8cOFABAQEaM2aMAgMD9eWXX2rZsmU6efKkXnrpJY++h7S0NMXFxal69erORNP06dO1b98+Xbx4Uffff78GDBjgrU2S5Hq+sHfvXrVo0ULSP4/ifP/99xozZoxatmxJe1AADR48WNOnT1d0dLQmT54sPz8/JSQkaMqUKTpy5IjGjx/v1U53di49t33xxRd18OBBpaWl6eGHH1b79u3zpA4bNmzQmDFjVLZsWY0ePdr527JK5cqV9eyzz6p58+a6ePGi4uPjFRQUpC5duqhUqVJ67rnnNHToUC1atCjPE06+vr7O4+VTTz0lY4xlCafMv+vo0aO1b98+Va9eXRcuXNCYMWPUu3dv3X333QoJCbFkO67l0v0s89iVmpoqSXrjjTf05JNPqlu3bpb3JS+96PDQQw8pISFBf/zxhxo0aKDWrVvriSeesLQ/kenS7X3sscecNzZcd911+XI3rCcu/c769OmjqlWraurUqRo2bJgSEhKsCWJwTenp6Wb06NGmQ4cOZuHCheb55583ixYtcs4/cuSIGTNmjAkNDTXffvttvtXzmWeeMe3btzdff/21+fHHH83q1atNly5dzO23325+/PFHj8v7z3/+Yzp37mzWrFljkpKSTL9+/UybNm3MlClTTEJCghe2wDs2b95sbr31VrN161aTkZFhjDEmPj7e/Pbbb2bv3r3O5RwOhzHGGLvd7pz2zDPPmI4dO5rnn3/eTJgwwdSvX99ERkaav/76y+N6XFru0aNHTb9+/cyuXbtMQkKC+eGHH0zz5s3N/fffb7Zv357TTfWKxx9/3HTs2NF88MEH5qOPPjLPPvusCQkJMZMmTTIxMTG5Lv/S7yUz1n333Wfatm1r+vbta1asWOH8u2X+jXIiswxjjPnuu+9Mr169zA8//GD27NljFi1aZBo2bGimTp1q/v777xzHyI1L6/fFF1+Y7t27my1btphNmzaZqVOnmvr165uXX37ZuUxuvgvkn0ceecT06tXLjBkzxkyePNk0bdrUtGnTxqxZs8brsS/9Hc2aNcsMGTLE7Nixw3z77bdmyJAhpmXLlmbDhg0u+6Ixxjz11FPmtttuM5MnTzZnz541xhizd+9e07p1a/PXX3+Z9PR0r9f9cg6HI8sx9a677jI//vijsdvtZu/evaZXr15mwIABJioqyuv1OXLkiLn99tvNZ5995px25swZs3TpUrNo0SLz22+/udTXSmvWrDEjRowwp06dMsYYk5KSYlq0aOFSF2NMjuNPnjzZdOrUyWzdutWkpqaaMWPGmJCQEHPXXXeZ5ORkY4zJss/kpcxjYVRUlOnQoYP55ZdfnNNOnz5tFixYYMLCwszrr7/udpnp6elm5MiR5p577jG///67McaYyMhI07FjRxMZGWlGjBhhQkJCzMyZM71+PvTVV1+ZTp06me3btzt/a99++60JCQkx77//fr78/nBtv//+u+nVq5dZuXKlSUtLM8YYc+rUKRMSEmKeeeYZc/HixTytz6W//4kTJ5r27dubRx991Nxzzz0mJCTELFmyxKSmpuZJXRYuXGhCQkJMv379LDmPzHTpNmZkZJgxY8aY2267zfzxxx/GGGPOnz9v1q9fb9q2bWvuvfdek5KSYozx/vnU1Y6Pzz//vGndurX573//6zyG59SSJUtMu3btzJ49e0xiYqIxxpgZM2aYm2++2Xz66ad5ft74yiuvmFtvvdVs27bN/Pnnn2b//v3miSeeMA0bNjTvv/++cTgcltfpwoULpn///mbQoEHm22+/NXv27DHvvPOOCQkJMRMnTrQ01uXeeust06FDB7N7925z4cIFY4wxqampxm6359lvKyfOnz9vbr31VjN48GDnPtivXz8zc+ZMY0zOzx0ykWy6hsxGPCMjw4wYMcJ07NjRdO7c2WzevNlluT/++CNfE06nTp0yffv2NQsXLnT54Z46dcp0797d3HPPPR6V9+WXX5p+/fqZHTt2GGOMWbZsmalfv74ZMmSIadOmjXn22WedB7KC7uOPPzYtW7Y0xvzzo9++fbvp1q2bueWWW0xYWJjzx3S5/fv3m6lTp5ro6GhjzD/7wKpVq0xoaKiZOHFijhJOxhjz7LPPmv/+97/miSeecB6MjDFmz549pk2bNgUq4fS///3PtG7d2nz66acu05csWeJMOB0+fNiSWNOmTTMRERFm165dxhhj3nzzTRMSEmJuv/128+GHHzoPdrltmJYtW2aee+4588wzzzh/33a73XzyySemQYMG+ZpwMsaYjRs3mpkzZ5pXX33VWb9Tp06Z119/3YSEhJBwKsQ+//xzEx4ebn788UdnR+P//u//zLBhw8wtt9xi1q9f7/U6pKammqVLl5rHH3/crFq1yjn97Nmz5tFHHzXNmzd3JpwuPcGYOXOmiYiIMJGRkebs2bNm7969pl27dnmeZMjstF3q6aefNv/973/NhAkTXE7o9u7da/r27ZsnCac//vjDdOzY0SxZssScOHHCfPHFF6Zly5amQ4cOJiQkxHTv3t3Z4cmty3/3KSkpLp2m8+fPm/bt25slS5Y4lzlx4oSZN2+eiYuL8yjWpk2bTL9+/czWrVuNMf8c+zOPk23btjV33323M3Ze7wuZ8TJ/S8uWLTPNmjUzf/75p8v806dPmzFjxpg+ffqY+Ph4t8t/6623zO23325GjBhhdu/ebSZPnmy+++47Z8z333/f1K9f3zz//POWJpwu//u+8sorpk+fPs7E3uHDh03r1q3NuHHjCnQHpri5fP/fuXOnadCggXOfOXLkiGnRooUZN26c8zfzyy+/5EndLt2njh49av7zn/+YnTt3GrvdbpKSkswrr7xibr75ZjN//nxL96mrHRMyEwAzZsxw/mattmjRItO7d29z7733Zptwuu+++7yecLr0O9i2bZv58ssvTXR0tDOJbYwxzz33nCUJpylTpphHH33UeUw8fvy4adOmjUvb6I1jRnp6uklKSnJ+djgcJiUlxTz44INm6tSp2dbz/2PvPeOiyrL14d1humf6zp25d273zPwm/OfeO3fmIEUoUpFDEQok56BIMgBKESUIgigqYMCAophoFUUxYMKEAVvFgKIYGgMmRAUUDEUq0vN+4D176hCUjHbzfOn2VFEn7b322s9a61l8Pn/I9g+yOHPmDExNTXHt2jXqQ+/cuRPy8vJYu3Yt57sDfecSiQQLFy7kHGtvb4dYLEZ4eDg9Vl5ejqCgIEyYMAGxsbEoKysb0PmGG5WVlZg9ezZn7Hl4eCAqKorzPXYN6i/GyKY+gDUUbW1tCA4OBsMwCA0N5UwsoNPZDAsLA8Mw1DEbKbx48QKqqqrYsGEDPcZuFC5evAgej4fc3Nxe/77rgrB//36kp6cDAHbs2AFFRUUcPXoUADB16lQwDIPExETU1dUN9a0MCj0ZjrKyMigoKMDT0xPTpk2DgoICZs6ciUOHDmHhwoXQ19fH3bt3OX+zbNkyWFhYwMTEhC5QstFTJSUlREZG9ptwYqPvioqKCA4OBtBppFmDeP36dWhpacHb2xtnz57t9/0PFux1sNGG0tJSMAxDCSDZjR7rnMybN2/QBrS0tBTe3t6UqF2zZg3k5eWRk5MDa2traGtrY8eOHYPOcDp//jwEAgEMDAzo+Jb9LZZwSkpKGpWxffr0aTAMA3V1dc5GEejcMC1btgwMwyAtLW3Er20Mg8f3338PbW1tVFZWco5fvHgRJiYmUFNTw4kTJ4b1GhYvXgx1dXXo6+tTZ5edV69fv8aMGTOgoaGBEydO9Eo4xcfH48CBAxAKhSgqKsKDBw9QXl6O58+fo66uDjdv3uy2Pg4Fmpqa4OrqynlGVVVV8PPzA8Mw8PX1RWtrK+e6WcLJ3d0d+/btG5Lr6CnKJ5FIMGXKFAiFQhgYGEBTUxMpKSl48eIFzWbYvn37oM8tS5DX19ejra2N2rCOjg76Lp2cnJCcnAygc8Ph5OQEoVD4wQilrD3s6OhAcXExNm7ciI6ODuzevRtKSkrIz89Hc3MzUlNTwTAMPD09h+V99+U63717h4kTJ+LOnTs4c+YM5OTkqP/V1tZGn0dBQQEYhum21r/vt4HOOWtubo5JkyZBJBJ12xTn5ORg3LhxmD9//pAQTrLvh12DFi1aBAcHBwDAw4cPKWHR0NAAAFi5ciWys7MHfe4xDA3OnDmD1tZWXL9+HQKBAFevXkVFRQU0NDQQEhJC58rx48fh5uaGp0+fjti1LV26FC4uLrC0tMTLly/p8ZaWFixbtmxICSfZfUVBQQFyc3Nx7NgxDunOBtGSk5MHTTj1Ztu2bdsGS0tLuLu7dyOc9PX1YWFhMWxZZrK2JDQ0FNra2uDz+WAYBnZ2dti8eTP9nM1wSklJwfPnzz/42z1lNE6dOhWenp4AwBlzrK3Ytm0bzp8/P9jb4kAqlcLR0RHp6ekcMr+pqQk2NjacbCL2HVVVVcHExASJiYmDzm7q+hx27twJTU1NmhBx4MABMAyDzMxMAJ1rdUFBwYDPB3QmZHh5eXWbJ/Hx8bC0tEReXh5WrFgBBQUFTJw4ETNmzIBQKERqaipaW1tHPVDc01xh93fsvGUzeFlUVlYiNDR0QH7UGNnUC3ozWizhpKuri8zMTDqBWTx+/BgxMTEcxnqo0XWQdnR0oKamBiKRCKGhod0cnlevXkFbWxtr1qz54G/v2LEDDQ0NkEqlqKqqwtu3b2FtbY2VK1fSey0pKYFAIICOjg7mz58/bKUB/UVXwkz2OR0+fBhubm6IjY1FXl4ePX7w4EEYGxt32/xlZ2dj/Pjx4PF4PRKHhw8fhqqqKgIDA2lZSV9x4cIF+Pv7Q05OjhJKbW1t1GCWlpZCTk4O/v7+NOIy0khOTsb58+dRXV0NU1NTzJs3j2ZhsYvyzZs3oaysDIZhkJSU1GPGQV/x5s0brFixAhKJBEeOHOGUgDx69Ajq6upwcnLCxo0bBz3esrOzoaurCwMDA9y8ebPb53v27KHlEaMxtrds2QKGYeDm5tYtvbympgYrV64EwzCULBvDp4Nt27ZBSUmJOtWyDm5mZibk5eUhLy9Pif3hwKtXrxAZGQmGYRAVFUXtJjvWX79+Tcuk2PJr2bmdkpICkUgEOzs7MAwDR0dHKCoqQl5eHgKBAAKBANra2v22i33BnTt3kJaW1o3YKCsrQ0xMDMaNG0fLEdvb2zmEk1AohI+Pz6BJEdl15vr165RkAzqzwzZt2oSdO3dSh76jowNPnjyBtbX1oDPX2HNLJBKIxWI4OTnB2toaSUlJNELMfsfPzw/Tp0/H8+fP4ebmBmtra/oe3+ffsGDX+8bGRtTW1qK5uRkeHh5ITU2l61JNTQ2EQiEYhsGECROGpSTifdfZ2toKsVgMT09PlJWVoba2Fl5eXhAKhZwASEdHB3JzcyESifq0iQO4zygrKwumpqZQUlKimSiy95mTkwNFRUXExsYOWcZ3REQEJSfZzdL27duhqakJsVhMI8wvXryAWCxGSkrKiJdl/Vzxvmyd5ORkeHh40H97enrC2NgYampqCA8Pp37Uq1evEBMTg2nTpo1oJnViYiKMjIygra1NsxjYsd7a2orly5dDQUEBK1euHBThJDs/xGIxdHR0YGRkBHl5eXh6enJIlvT0dDAMg0WLFnXzxfsK1n+WSqW4ePEi7ty5wwkGZ2dn90g47d+/H/7+/kOeldnVDqakpMDIyAhnzpxBbW0tLly4gICAAOjq6nKSBJKTkyEnJ4elS5f2eE3t7e04ceIELl68SI+lpqbSCoy0tDSMHz8e+fn5lGhibVJFRQW8vb3x/fffD7lvO3XqVCgpKWHTpk2UcJJKpQgICIBIJMKjR4843+/o6ICDgwMiIiIGdL53796hrq6O3kd9fT0l5wsLCzFu3Dg8evSIlhuzGU1tbW3IyclBXFzcgKtTgM51kV1PZRM5Tp8+DR8fH/D5fDg4OGD9+vX0s+nTp8PPz2/A5xwqyM6VsrIy3LlzBzU1Nd2+t3z5cowfPx5NTU2orKyEi4sLRCLRgMq2x8imHiA7wZ89e4aHDx9ySCW2lt/Q0LBHwmk46+dlr63r5n7z5s2Qk5PD1q1bOSRFRUUFxo8fj23btgHgal20t7dTo7hr1y4YGhpyrr+8vBzq6uocPZG9e/di4sSJSElJwZMnT4b+JgcA2eeSlpYGsVgMR0dHrF+/Hnfu3AHQObFkF89Xr15h1qxZcHd373Gx379/P4yMjODq6opr1651+3zfvn3Q1dXtNeX1feRXcXExJk2aBD6fT1OsZQmnmzdvDmkd+4fQ9fmpqamhtLQUzc3NiImJgZmZGQ4dOsQp+7t8+TLCw8OxefPmfpGrvS3q7Hhm2XT2nbx79w6mpqbg8/lwcnLqc/T4fc7Dtm3bYGpqiilTpvSYlbV///5hJYyB91/fxo0bKYnX1fmqqqrCmjVrcP/+/WG9vjEMHL2925qaGlhYWMDT05NuDNnvZmZmws3NDbNnz+7mmA31ddTV1SE8PBxCoRBpaWmc9YC9zqVLl/a6li1cuBBGRkZwcnJCUVERHj9+jMuXL+Pq1asoKioa8IahL2CvMSUlheOk3717F2KxGDweD6dOnaLfZb9/69atQZexydrwyMhI6OjoQFVVFY6OjjRw0NWJr6ysRHx8PIyNjfHs2bNBnR/o3CBZWFjAxcUFGRkZmDNnDiZNmgRNTU261gGdEVZHR0c4Ojpi/Pjx1L729k5lx8rq1auxePFizvXW1tbCyMiIo3t0+vRpuLu7Iy8vb8hKBPuKpqYmlJSUIDAwEGfOnKHv5tixY7C3t4eRkRF++OEHVFRU4Pr163B2doafn98HyTDZz2V9rG3btkFbWxteXl64d+9et+9mZWVBU1OTky3S1/vo+uwaGxthbGxMy+k7OjoQEhJCs8hY21FVVYWYmBgYGxt/NL7YzwUNDQ1YtGhRN1I9KSkJsbGx9N8lJSVwc3ODoqIiSktL0dDQQHVrtLS0hnUd722sp6eng8/nIygoiJbVst9tbW1FcnIyBALBkGR3L1myBEKhEMXFxairq6OZiBoaGhzJkVWrVoFhGCxbtqzfeyj22iUSCRwdHaGrqwt5eXkEBQVREgbomXBqamqifz8UhFNPQVepVAo3NzfMnz+fc4779+8jLCwM5ubmVLIE6Mw+683/r6qqQkJCAgwNDVFUVIQZM2bA0NCQjqNnz55BS0sLDMPA39+f2ora2lrExsbC3Nx8SDPpuuqA8Xg8bNq0iY6du3fvQk1NDWKxmJO5VlNTAzc3NyxZsqTfQYq2tjbk5ubC19cX1dXVqK+vB5/PR0REBNra2vD8+XNMnDgR5ubmYBiGQ2yWl5fD3d0dSUlJQ3LPFy5c6KYF9fTpU5SXl+Px48f0WF1dHQICApCYmDiowPxgIRuwcnd3h1AohKamJnR1dZGXl8fJTNu8eTN0dXXx4MEDTJgwgROw6u9cGSObukD2Ac6bN4+W8BgZGaGwsJBugGUJp3Xr1g24jrE/kB3gK1euRHh4OJKTk1FaWko/mzt3LuTl5TF//nycO3cOly9fpk4xa2Cam5vh7u6OH374gfO7mzdvhrW1Nec8b968gY6ODuLi4tDc3Ixnz54hPj4eCxYsGFVB0N4gFouhr6+PuLg4iMVi2Nvbw97evpuO1vHjxxEdHQ01NTVKNrx8+RIVFRWc6GBubi7Gjx8Pb2/vHgmn3qLkss8mOzsb8fHxiI+Px9atW+nxkpIS+Pj4QEVFhUM4jeZzvXTpEtLS0rBnzx46DhoaGmBrawszMzOsWrUK7969w507dxATEwMvL69+Xa/sd+/evYsff/yR8zkr7Dd58mR67MmTJwgLC0NZWVmfN2tdxbZXrVqFnTt30ucMdG4ORCJRr4TTcEL2+k6fPo3du3dj//79HJJhzZo1YBgG8+bN67Z5/xjn3hg6IftuTp48iYKCAjrO29rasHPnThgZGWHKlCmQSCTo6OjA69evER0djVWrVnULXgwUrMPe1NSEkydPYsuWLSgqKqJO9suXLxEaGgpTU1MO4STrCG3YsAFxcXG0xFU2EpicnAwLCwvExcWNiH6f7Abk+fPnmDBhAgwNDZGTk0OP37t3r0fCaSiybWTfa1ZWFkxMTHDgwAFs2rQJPj4+UFBQoOsMe75169YhNDQUOjo6g7Yx7G+uXr0aDg4OHHIhLS0NDMNgx44d9NjmzZvBMAxsbW0/SDTJrvnBwcEwNTXFunXrOPZWIpHAxsYGnp6euHbtGh48eICEhAQEBwcP2ZjtDbdv3+7W5ITNvjM0NOQ49UBnyY6vry8YhgGfz4eBgQFcXFz6ldkFoFumELtm+Pv7U8JJFv0to+vo6EBQUBC0tbU5wY2XL19CVVWVs17dvn0boaGhkJeXR0pKCmJjYzF16lRoamp+tDogP2WcO3cODMMgPDycE6yMjY3F3Llz6b+lUinOnz8PBwcHCAQCCIVC2NnZwczMbFjfm+xYrq+vx7t37zjjfsmSJTAxMUFkZGSPhNNQZKa2t7fDz88PycnJNABeV1cHPp+PuLg4NDY2cmxzZmZmv8k3WZkTsVgMLy8vnDp1iu5nnJyccPz4cfr9nginocrIbG5uhpmZGadEq62tDbW1tVBXV0dGRgYA7hp77do1KCsrc/YG77tPoLPsnt076Ojo0PuQrY7Q0tKCvb09MjMzsXHjRvj7+0MgEAzLmJO9toiICEo4sWMoPz8fKioqcHV1xcaNG7Fnzx6EhIRAQ0NjwEH1H3/8ESKRCJaWljAwMICfnx8n8J+bmwtjY2OIRCJcv34dUqkUFy5cgIuLC5ycnDiSIf2B7PclEgmkUim2bdsGPp/P0WqSxe3btxEXFweBQDDsQey+oLm5Gfb29vD09ERhYSHOnTtHNXLT09PpvraoqAjKysowMDCAubn5B/2I92GMbOoFbNR37969KC8vh0gkgoGBAXJzc6lDwXapU1ZWRlZW1ojVYMbExEAgEMDPzw/KysowNzfHrl27qFOdkZEBFRUV8Hg86OvrQyQScQzMjz/+CHt7ewgEAk4q5saNG+Ht7U3/zS5Me/bsoR2TzMzMhs1g9RddnzebiVRSUkKdxB07doBhGCxdupTeT0FBAXx8fODs7Ez1G2JjY2Fraws5OTl4eXlxSpRYwsnLywvXr1/v1zWKxWLo6urSMgY22sAaxeLiYvj4+EAgEFDyb7SwefNmKCsrg8/n02gQm8lUX1+PGTNmQEdHBwzDQEdHZ1DjIDw8HAKBAIqKinB1dUVpaSk1ZGwZ2caNG3H27FnExMTA1NS0z458T+nb1tbW0NHRgYWFBdUxATodD3bzMBpCncHBwdDR0YG6ujoYhoG1tTWtKwc6nS+GYTB//vwRzxwYw+AQEhICVVVV8Pl86nwBnXPq+++/h7GxMXR0dODh4QE7Ozvw+fwhc0RYW8cSBPr6+uDxeFBWVoalpSXNmGAJJzMzMyxfvpzjRISEhMDMzAzh4eEIDw8Hn8/HypUrOeMwOTkZIpEIYrF4xDTO2HKxa9eu0S6xslpILOHE5/OHpRzx2rVrmDdvHr7//nt67Pbt25g+fToYhqG28+3bt5g6dSrEYvGg3mtXYmTmzJnw9vam9vLw4cPUXgKd7/z169d48uQJMjIy6Dvti4O4YMECmJiY4OrVqzSA1t7eTv+2rKwMAoEAfD4furq60NLSGnZfQCqV0md7+fJlevz58+fw8fGhXbRks26BznLQwsJC5ObmUv0xoG+ZXatWrUJwcDCsrKyQnZ3NGfOyhNNQZKVcu3YN1tbWsLa2pr9XV1cHTU1NXLlyhfPduro6ZGZmYsqUKfD09ERqauqwCOyO4cNobW3FkSNHoKKigtDQUGr//P39ERMTA+Bfc5dd8/Py8pCdnY3CwsJBdx17H7oGzSdOnAhtbW1ERUVxqhQWL15MCSe2jGaoOv4Cndk0Ghoa1Kdh9caCg4Mp+ZSfn9+jnEF/0NjYiNu3b2P27NkcgrawsJCur10JJ2trawQEBAxpuXd5eTkyMjJ6DELPmDEDIpGIvndZItvKyoqOmZ5QX1+PwMBATvZTQEAAxo0bBwMDAxpYAf71Dh4+fIiAgADY2dnBxsYGERERQ55FJztWZO8nPDyc+jxsIKqkpAR2dnbQ0tKCvr4+XFxcBr12XL58GQzDQE1NjfNsWOTm5sLT0xPKyspUm8vLy2vA2TmySEpKwooVKwB0rjXbtm2DoqIiIiMjOd9bt24dfH19h51c7g9Onz4NKysrTjd2VtNQ1pe6e/cuGIaBjY1Nv/yInvCzJ5u6lg8AnYbI1tYWJSUlADoHi4KCAtzc3KCkpITc3FxOhlN4ePiQlT287xrZCPiUKVOoQX3z5g2to9y+fTudPHfv3sWFCxdQXFzcY1r31atX4evrCxUVFapJtGzZMkycOJHel2xqaklJCZ1co+3cNDU1Uedd9r2tWbMGNjY2NA2woqICAoEAM2fOpAvbmzdvIJFIcP36dfpcoqKiYGhoiOzsbOzfvx8LFy6EhoYGwsLC6G/v2bMHNjY2cHBwwI0bN/p0nVu2bIG+vj4uXryIjo4OSCQSHDt2DNra2py63eLiYjg5OcHQ0LBbpGckcfnyZUyfPh3jxo3jkG3sIiKVSnHr1i3s2LED+/fvH3Aq7tatWzF+/Hjk5eVhz549tOShsLAQ7e3tePHiBebOnQuGYaiYd1+MdNfntnr1ahgbG+Py5ctoaWmBVCpFYmIiGIbhdKbKzs6GpqYmQkJCRlTzIjU1FQYGBrhw4QKqqqpQXl6OyZMnw8zMjPP82ZK6RYsWjbW4/ogh67icOnUKlpaWKCoqwsWLF5GWlkZ1GNrb29HW1oaysjIkJydj+vTpiI2NHfKIl1Qqhbe3N7y8vHDt2jW0tbXhwIED8Pb2hoKCAiWcamtrERERAT6fTzNjUlNTIRKJqDOybds2MAwDHo+H1NRUztyPj4+HnZ1dv7ucDQRZWVlQUFCgzmJpaSmmT5/ejXC6f/8+fH19oa2tPeCsY9Zey2LTpk1gGAbGxsbdOtKWlZVh+vTpkJOToxlODQ0Ng9KIkhVuZ0sBgoOD4e7uDgA4cuQIR/hUKpUiPT2dQ4QBfXMQ2bT6ZcuW0WMVFRVYunQpoqOjceTIEXps48aNyM7OHrHSrfv378Pf3x9qamqcTq1VVVVwdnaGkZERioqKPrh56O1z2bWDJVnnzJmDFStWYNy4cUhMTOSsQVlZWbC0tMTEiROHZN7eunUL48ePh6WlJcrLy1FbWwsLC4tefa0PZWiNYWjR23NubW1Ffn4++Hw+goODUV9fj6ioKCxYsKDH7490RnJYWBj09fWxevVqLFu2DGKxGKqqqjTwAXSWbIlEIgQGBva7BJRFV99r2bJldI0IDAyEWCxGcXExBAIBRyD9+vXr8PPzG3QH74SEBDAMA11d3W7Z8mfPnoWHhwccHBw4GUcbN26Ejo4Oh6gZKGQzldj/nz17Ng0AAJ1Eo7GxMcLDwzn6OM+fP4elpSXWrVvX6+/fvXsX4eHhnAzSnTt3IicnB5MmTYKpqSmnaYZsBopUKkVDQ8OQl259KAs0LCwM8vLy2LRpE90vNzY24vHjx6ioqBhwNjR73qamJuTn58PDwwMikQjW1tbUFsuOx2fPnuHMmTPIy8tDcXExR59sMEhISICGhgb1e3ojnPbv348NGzZ8VMHibdu2QVVVlY7DrgLqr1+/ps+ypKTkg4GavuBnTTb1Vk62c+dOWs+5detWKCoq4tChQ5BIJPDy8oKmpib27NkzLAKoXSE7oSUSCX788UfMmDGDY6xqa2vphMvOzn7vgiY7Ca9cuUIJp7KyMuzevRs2NjZoaGhAc3Mz57tdo4ajhba2NkRFRUFdXR23b9+mx4DOKLuhoSGATtHMrl0Ydu/ejQ0bNnCM7o0bN6ihZo3ltWvXwOPxEB4eztF4ys7OhouLS7dSrt7IodmzZ8PNza2bkT9z5gwUFRU5HcWuX78+JHoefUVvztP169cxZcoU8Pl8jujdYBaqruNx/fr1nIW1pqYG7u7u0NPTo1kBra2tKCsrw6VLl3oUrpOF7LXJ3tf06dMRFRVF3z87JqKjo7uVfezcuXNENS/a2trg5eWFhIQEzvVXVVUhKCgIFhYWnEjNli1bxjSaPhHs2LEDCxYsQHJyMqc0bf369ZCTk0NaWlo34dXhIJifPn0KAwMDKrTPorS0FF5eXrC2tqYOUG1tLVauXIm2tjY8efIE3t7eOHDgAIDO+SovL48ffvgBixcvhpycHJYsWcKZL4MR2nwfutqpiooKmJubY/bs2fSZ3bhxo0fCqby8fFDdjVJTUzFp0qRuDharnRMbG8vRNwA6BczZ8q7BdhNl76+5uRl2dnaYNm0aXr16hcOHD0NXVxfh4eGQk5PD+vXr6XO6ceMGPDw8OBoVvaHrs62uroa2tjYWLVqE0tJSZGdng8/nQyQSwdzcHHJycjh58uSg7mkwePjwIUJDQyEQCDgZP1VVVbCzs4OpqSmHcBrInEpLS4O5uTnNYM7JyQHDMGAYhpZys8jIyICDg0OfBcc/hJs3b2L8+PGws7NDQUEBFBUVsXr1ahw5cgSFhYU4ffo0CgsLcfjw4W4b6jEMH9hx1NjYiOLi4m6kulQqRX5+PpSVlREUFARfX1/o6OhALBbDz8+PZjdOmTIF8+bN43SPHE788MMPMDY2RlFREfVtz5w5A4ZhEBMTw/Hpk5KSYGdn1+9sq9bW1m7EZ35+PjQ1Nel3srKyoKysDCUlJUyfPp0ef/PmDWJjY+Ho6DjoLK/Hjx8jKiqKZmZ0tW1nz56Fp6cn9PX1qV/1/PlzCASCbutjfyGVSuHv74+FCxfSY8+fP4e/vz94PB5nTWIzyZydnXH27FkcOHCAVqp0LQVmwY4V9p7S09M5WVpnz57tkXBqbm4etkwaWZ9+0aJFmDp1KkQiEVasWMHxW8PDwynhNBT7ZfZZNDQ0QEdHB5mZmaioqKBkvZWVVTc/uTeR9f6gJ5KlsbERzs7O8PX1pXPp7du3lHCKiop679+PBmQzLDU1NfH27Vvk5+dziKb29nasXr0aYrGYEygb7D38rMmm3srJmpub8erVK7x8+RIikQhr1qyhg4nVQWAYBnv37h2x7ivx8fGwtbWFg4MDRCJRN6KFJZwsLS2xadOm906mrkLVXl5eUFFRgZubG3R1dWFhYQFTU1OYm5vDzMwM48ePx+TJk0e8tXFvOHToENzd3WFubs5Jvy0sLIShoSEWLVoEDQ0NhIeH09KrZ8+eISAgAIsXL+Yw8OfOnYOKigrVX3jw4AEEAgHCw8NpNpTs2OjKxjc2NmLFihVYt24d/Yx99pGRkXBwcEB9fT3nmTc1NUEsFmPixIkjonXSFbLGt7y8HCUlJZzo7LVr1+Dv7w+hUIhdu3bR4wOJosqe6+DBgygoKIBYLKZi9ayjUldXB3d3d+jq6uLMmTN9zjCSSqWwsbHB4sWLOccaGxthbm6O1NRUep8s+ci+123btg06ojYQdHR04N27d9DW1kZKSgo9xhrziooKqKqqjnWb+wRx8uRJaGhowMDAAFlZWQC42bMs4bRixYpuRMVQg+1qyY5x2c3Fvn37oKysjEuXLnWb121tbTh06BBevHiBs2fPQkNDg9qB+vp6ODg4QFtbG0lJScNKkMteFxsZbW5uxurVq2Fvb88pO7558yamT58OExMT+twHi3fv3lFSULY0GwCCgoKgoKCAbdu2dVsXb9++jYiIiCEpnWtvb6drNPt7VVVVCAgIgKKiIqZNmwag853dvXsXrq6u8PT07FeGT1lZGT0fm7mlpaUFPT09LF++HBKJBDU1NbC2tkZiYuKA72kgYK+zubkZmZmZiI+PpxkMsiV1LOFkZmaGCxcufNAxlkgkHHF5oDPo4e/vTzXANm7cCHl5eZw7dw67d+8GwzCIjo6mvheAAXcR6+n9tLW14ebNm7C0tISGhgbU1NRgYWEBLS0tqKqqQlVVFZqamtDW1u51YzqG4YFUKsX48ePBMAx8fX2xa9cujj1obm5Gfn4+BAIBJXMiIyMRFRWFmJgYhIaGIiAggCPgP9zIy8uDrq4u1Xt8/Phxt0x/2evpLxnQ3NyMadOmISMjg/MsTpw4AaFQyFlvFixYAIZhMHv2bJSWlqKgoAARERFQV1fv9zPpzQ+tqKiAv78/NDQ0euwgfeLECcyZM4fOvcLCQujq6g56Lr18+RLTpk2Dubk5x2djdU15PB6ys7Pp8a1bt8LNzY3KUdja2vaZFKqsrISqqiqcnZ05JeJnzpzBpEmTqF5Uc3MzEhMTMWnSpGHdYwQHB8PQ0BBz5sxBUlISLCws4ObmxtEOjIiIgLKyMlavXt1vTTtZyAYRCgsL4e3tzXl3LFlvZWVFdaBevnyJ4ODgIev2OH/+fJw8eZJey8GDB2FtbY3du3dzKoHYIEV8fPyQnHeg6M0PaGxshJ6eHqysrDBu3Dga/O/o6MC9e/fg6emJBQsWDCm38bMmmwBuORlbmsYasytXrkBJSYlTA7xjxw5ER0cjOTl5WIW+ZAdJUlISDA0NkZiYSGthY2JiqJPLXm9tbS2sra3h6OjYbVK/z/m8dOkSAgMDwePxEBoailOnTmH37t3YsmULMjMzkZWVRbWNRhOyA//EiRPw8fHh6FHV1tbCz88PDMPA2dmZLoA1NTWIjY2FkZERNU6sM3rx4kUwDIMHDx7gzZs3lJBgSy9OnDiB6OjoHlMgJRIJXF1dYWdnh8DAQE4HQADUQWVLMWTfQXx8PGxsbEa0bEu2MxMAREdHw8zMDAzDQE9PD1OnTqX3XVJSAn9/fxgZGQ048iP7vmbMmAE1NTUoKChAQUGBU0bIvou6ujp4enpCUVGxR2ehJ7x69YpuQNasWcP5LD4+HhYWFigqKoKmpiaCg4PpnCkrK0NgYCD27ds37KUIvc296OhomJqa0ii1rJCxs7Nzr2KDY/i4kZmZCQ0NDZibm9PyatnoJLuhz8jIGLLFvKdsjtbWVlhYWFBCAvgX4dTc3Awej0dJX6AzVb9rydnKlSvh6urK0WOaMmUKhEIhVFVVhy2jSRYxMTFwd3en5cuvX7+GjY0NAgMDOd+7desWzdh6+/btkD3b3NxcMAyDvLw8ThbitGnTwOfzeySchsKuS6VSODo6YsKECZyMAKBTlyogIAB6enrw8/PD5MmTYWdnB0dHxw/qUXRdh3x9fTmbg6KiIpw9e5aj51BVVQUnJ6chI/L6g4aGBpiZmcHLywtLly7FvHnzIBQKoa6uzgkEVVVVwcHBAXw+/4MaMFlZWZgwYUK393Tp0iVUVlbSkp+dO3eipaUFHR0dmDp1Ks1e6UkcvK+Qff6lpaWcFu2tra00O01bWxtlZWVoa2vD69ev8ebNGzQ1NY1IRv0YusPT0xMMw8DR0RE8Hg/u7u7YuHEj530eOXIEGhoaiI+PH/XgbG5uLpSUlAB0+kkaGhoIDQ2lNv7QoUOYN2/egG14Y2Mj7OzsIBKJ8P3339O5dPjwYYhEIrS1tXEIp7S0NPrsRCIRPD09+000sb5iS0sLKioqUF5ezhE3r6iowJQpUyAQCN6bWdrR0YGqqqoPZs1/COwaU1VVhZkzZ8LCwoJThlxWVoaoqKhuhBMrSVFZWfleIqSnNezmzZuwsLCAs7MzLW0GOjPZfH19IS8vD3t7e6ipqXGI8aHG0aNHYWhoiOLiYhqUOXjwIBiGwYoVKzjv3t/fH1paWoMmfZqbmxEcHAwfHx8kJCR0ez63bt2CpaUljI2NsWLFCri5uUFLS2tIMotYTSOGYZCWlkZ5genTp8PV1ZWz53737h127do1qmLgrF1qaGjAtm3bsHbtWty/f59WdRw5cgRmZmYwNTVFZWUlamtrcfnyZbi4uMDFxWXAAuq94WdLNnUtJ+vaFQzodOiEQiEWLFiA9vZ2qm0xmJaJ/UVZWRnS0tJo+rpEIsH27dvB4/E4Cxq7Ya6rq+umpSO7GBYUFGDr1q3Iz8/nOExFRUXw9/eHqqoqJ2L4MUH2Pi5fvow5c+aAz+fDwsKCbtifP38OT09PmJmZISgoCHPnzoW3tzdHyHTFihXIysqi79TT0xMODg5QUVFBZGQkfaavXr1CeHh4t3RCoHMC29jYwMvLCzdu3KALrSxx0dLSgqCgICq4zX728uVLTJkyZcQ0gnoqgYuLi4ORkRF2796NixcvYsWKFTAwMICVlRXdWF65cgUzZswAn8/H/v37+3VO2XdVVFQEJycnXLp0CdeuXUNycjJ4PB6io6Ppd1jDVltbi8mTJ/dLA626uhopKSndCKeCggKYm5uDx+NxNtyvX7/GrFmzYGtrO2QlEL1B9jlkZGRwNmuHDx+GgYEBIiMjOWRuTU0NbG1tqfjgGD5OvI+kXLduHYRCIcRiMafjDft3W7ZsGTJHhJ07DQ0NSElJwQ8//ID6+np6HnV19W5rVnFxMfT09GjW0+zZs+Ho6IgTJ05wHLO5c+dCIBDQf1dVVdEWxoOJUvYVb968gYWFBRiGgYKCAjIyMvDixQuUlZXRxhyyKCsrG1TpHMCdsx0dHXj79i1mzZoFJSWlHgknZWVl5OTkDPnmUiKRUCLdwcEBVVVV3bQoDh8+jJCQECQmJuL7779/r7ZCV6cxJCQEQqEQhw4deq8drKysxOzZs2FoaDiiuhPs9a5cuRKmpqacNeHGjRvw9fWFurp6N9HwmJiYD2Z2vX37lq69siUpLL7//ntYWVlxNuIRERFwcHCAmprakIg7z5w5EwKBAGpqajAxMaGle2yGk0gkgpWVFcrLy0dNx3EM/7Lzly5dgoaGBmJjY3H+/HlYW1tDUVGRylewZcX5+flQVVWFWCzmjJ/heoe9jfVHjx5RIXt1dXVERETQLJfq6moEBwfTjnD9PR+7YZVIJPDx8YGxsTGysrIglUqRl5cHc3PzHq+vrq4OZWVlqK2t7XfGjWzLdj8/P9opfOLEiZRYkiWcNDU1cf78+W6/M5TvQdbOlpaWYvLkyRAKhVi7di093hvh9D7/gdV1ZNH1Hd+4cQMikagb4VRaWootW7YgNTV1WHWEgU7C3tzcnK57Dx8+hJaWFqcqRHa9GAqbWVRURDM/ly5dCgDdylLLy8sxceJEWFlZISAgYMBi4D19Pzw8HLq6uggICICvry9WrFiB58+fQ01NjUMyAsM33/uDhoYGWFlZQUdHB2pqalBSUsLq1atRW1tLGxzo6upCKBRCS0sLdnZ28PT0HBIB9a742ZJNQPdysq6EU0NDA+bMmQMjIyOYmprCzc0N6urqI6adkpmZCRUVFWhra3M6ZUmlUuzcuZMSTrJdY7pC9lh4eDgMDQ1hbW0NXV1deHp6cjpTXLp0iXZGG43yor4iMDAQjo6O8Pb2pu2NZcVsq6qqsGnTJvj7+8PX1xcpKSk0rVIqlcLDwwOurq7U2dy2bRuEQiEMDAxw7do1AJ0GKyYmBjo6Oj1uCtmI/4ccwSdPnmDKlCmQk5NDeHg4Zs+eTYVOBxMd7SskEgn09PQ4gtisE7Jz5056rLm5GUVFRTA2Nqbis0An4TQYAfzs7GzMnj0bM2fOpM/71atXyMjIAJ/P5xBO/RU9ld30FRcXIzIyEgzDcMRxV61aBWNjY7i6uqKoqAg7duxAWFgY1NTUhr0zhOx9hISEwMLCArGxsZxFNyMjA7q6unB1dcX+/fuxb98+zJw5ExoaGsPuLIxh4JBdhG/evIkLFy7g4cOHnOOrV6+Gqalpj4TTUKFr1zkHBwds2bKFzo2amhokJSVBTU0NU6ZMQUFBAXbu3AkXFxc4OzvTdtFmZmbYvXt3t7K4oqIi6OrqwtvbG9u3b0dISAh0dXWHjaTt6ty0trZi586dCA0Nxfz58+Hq6oqpU6di9erVSE9Ph4ODQ787hPYVcXFxNCu1trYWs2bNAo/H60Y4BQYGgmEY7Nq1a8jf76tXr7B06VIwDIMNGzb0yfnr+p2e/mbr1q0wNDTkdAFls2ZkAyDLly+Hr68v9PX1R00nKDk5GSYmJt2y7kpLSyEUCqGrq9utaxvQ8313dHRwjh8/fpxGqmWRmZkJeXl5WupaU1ODoKAg3L17t5veWl8he97s7GyYmpri4MGD2LZtG7y9vcHn86nofEdHB27evAlra2vo6emNelOWMXT6lW5ubnB0dERjYyNev36NAwcOYOrUqVBSUoKBgQF27NiB27dv44cffqDldEOZOd11TMvaoatXr+LatWs0cNXW1oa0tDSoq6vDzMyMEl+VlZWIiYmBvr5+v9vOS6VSuLu7Izc3l5IMEokE3t7eMDY2Rk5ODnJycmgg7+3bt3j9+jUlpwbaVIYFG+SdMGECLl++jJMnT0JLSwt8Pp+Kf7OE07Rp08AwDCdDcygha+sjIiIgFothYGAARUVF8Pl8TkkdSzjx+fz3Zof2FHxesWIFwsPDERMTg5s3b1IipzfCaTjQ0xhet24dDUSxeqihoaH0Xefm5mLTpk1DHoQ5duwY7O3toaioSPWhepKzefbsGT02mMwmWZ+osLAQYWFhyMrKQn5+PoyNjeHm5oaJEydCIBBQzdnRBnvfO3fuxNSpU3H//n28evUKixYtAsMwSElJofagoaEB+/fvx549e3D58uUhE1Dvip8d2fQ+Z+3y5cuUcGIZ8Tdv3mDr1q2IiopCXFzcsKbFdZ3Qhw8fho+PD8aNG9cts4QlnPh8PsLDwz/YcSc+Ph4mJiY07XzOnDng8XiwtbWlQrDAx9MZrTds3rwZAoEA165do07f7t27qZYVS8q9z8hUVVVBVVWVI+i3efNmODs7Q0NDA46OjrCxsYGxsXGvDnZAQACCgoK6HT9x4gQWLVqEhIQEKrDd2tqKjIwMODo6wtbWFmKxeESIJqlUSg2hrMF/8OABFBUVkZeXB+Bfc0IqlWL79u1QV1fn6KEMVBz+3r174PF4UFNTQ1xcHOez2tpaSjjNmjWr378tOy6jo6Ph5eUFR0dHmua6atUq+nlubi78/f1pFpy/v/+IPH8Wc+fOhVAoxNWrV+l7kHUq8vLyaIq+np4eHBwcPpoWqWPoDlk7HRsbCxMTE2hra2PcuHFYsWIFJxjBEk5hYWHDprPS3NwMZ2dnTJo0CY8ePaJji50jrGilSCSCnJwchEIhpk6dipaWFuzcuZOmwrMbF4lEgqqqKprhuG3bNhpF7o++xGCQn59PNyYvXryAh4cHVqxYgaqqKmzcuBFmZmbg8/kwMDDAkiVLBtXAQiqVcrKh2tvbUVVVBYFAwLnX9xFOoaGhg/IN3kcQ1dbWYsGCBRg3bhyys7M540+29Lantbq+vh7R0dHdysoWL16MCRMm0DW0tLQUHh4eMDc3h4WFBS1vycrKQmxs7KgQ3+z9pKenQ19fn16D7P3PmTOH2vz3lc61tbV12/Q8f/4cra2tWLlyJeTl5TmEU2lpKaysrDB+/HgsX74cgYGB0NbWHpLMrrNnz2LevHmcTlWPHj2CWCyGkpISh3C6fv06XFxcPqpORj9nHD58GAzDYN++fZzjIpEIfD4fDMPA2toaYWFhyM3NHRaSkN0cypZThoSEQFNTkxId8+bNo+M7JSWFaq/6+/vD1dUVenp6AyKPpVIpPD09IRAIcODAgW6Ek0gkgru7O5Wy0NTUhEAggFAohKGhIaysrAZMPrS1tWHevHmYNGkS3SiHhoZCT08P7u7uUFRUpJ3lOjo68PjxY6SkpAy7OHNSUhJ0dXVx8eJFVFRU4O7duzTba+XKlfR7d+7cwYwZM6Ctrd1jmXdLSwvc3Nwwe/Zseiw4OBiamprw8fGBlpYWDAwMOEQfSzi5ublx9nFDCdm1SNZvPnPmDAwMDLB48WIIBAKEhYVxMucCAwOxYMGCAVdvdF0TZe3+8ePH4eDggPHjx6O4uBjAvwinrs91MGTvhg0bICcnh927d6O+vh7Nzc2IioqincpbWloQExMDa2trMAyDuLi4EZVG6YqupW+ZmZndKiSWL18OhmGQmppK9dy6YjikRX5WZFNfyslkCSdWN2Yo2v71ByUlJfT/f/jhB7i4uFDhZFlIpVJs2bIF2tratPa4J4ezuLgY3t7eNFtp7dq1kJeXx4oVKzB+/HiIRCJO5svVq1dHtDNaf8C2ae2qW3Dw4EEIBAKOo8xOmI6ODqxZswZPnjyhRjorKwtCoZCTQs925FuyZAkOHDjQ6zNobW3FtGnTMGXKFPp7NTU1VLR13Lhx4PF4kJOT4xApb9++RXt7+4h19nvw4AFEIhEOHjwIoDMb69q1a6iuroampiaSk5MBcMWpa2trMW7cOCqSOlhcvHgRRkZG0NDQ6NbJqLa2FpmZmWAYBnPmzBnQ76ekpEBHRwdnz57FmzdvUFpaipiYGDAM001gu6KiAk1NTd060Q0V6uvrOZ04gM6oiJWVFSd9uqqqCpmZmUhLS6NRN6lUiocPH45YedIYBo+oqCgIhUI6rtkujvHx8RziYc2aNdDQ0EBMTMyQriGsrT979izMzMw42a/FxcVYvnw51qxZQzfhqampYBgGW7ZsoX+bkpICa2tr+nelpaVwc3ODUCiEk5MTzex58+YNysvLOdpNQwnZ55KTkwNTU1NYWFjQNbisrAwKCgo0E7eqqopmFBkbGw94A9Pe3g4XFxd4e3tzuus9fPgQfD6/m1ahLOG0b9++IXEsZbUVli1bhsDAQCQkJHACTLW1tZg/f36PhFNvkEqlWLduHcRicbdSmdTUVKipqVHRbR6Ph8mTJ2PFihVwdHSEg4MD/e5IrVe9BQJZ4o918GWRkpKChIQErFq16r1zq7CwENOmTaMZeZMnT8aECRPQ1taG2tpapKend8twOnDgACZPngwjIyO4ubkNCcn6/fffQ0FBASYmJt2yxysqKijhxH7W0dExqpuXMXAhkUgwadIkiEQiSniEh4fTcs5z585BLBZDKBQOG0G4ZMkSMAyDrKws1NfXY8uWLTAxMcHRo0dx5swZZGdnQ1FREZ6ennj06BFaW1tx/vx5pKSkICYmBllZWYO6NqlUCrFYDFVV1W6Ek4+PD5SVleHr64sDBw7g5MmTyMvLw549e5CTk9Nv8k3WJkilUqxdu5auATNnzoSenh7u37+Py5cvQyAQgMfj9ViVMRzrLnt9rq6u3db2yspKBAQEQENDg3b5AjrJmp7KyZqbm3H69GkqDZKamor29nZMnTqVNqdob2+Hp6cn9PT0ODqBN2/ehKamJry9vYc8i6irvl/X5IQZM2aAYRi4urrS+VBVVYXY2FgYGhoOOEghKw2wbNkyiMVixMfHczQmjx49CldXV1haWnIIp6FEcXExUlJSMG7cOIjFYpw/fx4NDQ3Q0tLiBLRPnz7dze8babA+QX19PWJiYhAfHw83Nze6D+qascwwDBYvXtwr4TTU+NmQTf0pJ2MJp65pcSOR5ZOeng6hUMhxNAsLCzFx4kSIRKIeCSd2c9pTZzSgk3RYsWIFpFIpDh06BDU1NezduxdAZyYOqwkhW1b1sSIlJQV6enrUGMlOoFmzZtFOOrJRm+3bt9N7XLNmDe7evQuJRAJPT09ERUUNSHDz2rVrGDduHIKCghATEwNDQ0Pw+XxERkaivLwc5eXlCAwMhIKCAn1nwy1E3RVPnz6FmpoawsPD4e3tDSMjI5o2vXr16h4jdHfu3IGJiUmPOhbvw/syBouKimBoaAhPT89uwt+1tbXYuHHjgIx0W1sbPDw8EBERwTleWVmJxMREMAyDTZs20ePDSRa3tbUhJCQE4eHhnGfx7NkzmJqaYvXq1SgvL8fu3buhrq4OoVAIZWVl6OnpjWiW1Rj6j57GzYEDB+Dg4EDLdzIzM6GgoIDo6GjadUc2w2nDhg1DltnUNXp18eJFKCoq4ujRo6ioqMDixYsxbtw4mJubQ01NDd7e3nj48CGqqqoQFhZGsxrb29uRk5MDAwMDxMfHIzExEQoKCvD390dmZiacnJzg4+Mzoh0zExISsHnzZhw9ehQRERFgGAaJiYkoLS1Fbm4ufHx8qOhpR0cH8vLyOCTRQHD48GHw+XwEBwfTd1RdXQ0dHR26OZJd+2trazF79mwwDINDhw4N6tyyDqKlpSVcXFwwa9YsBAcHQ1lZmZP9wmY4KSgoYN26de/1R1gSTSwW0zVy/fr1nI1YQEAAtLW14enpia1bt9LjK1euhIODw4iRTMC/xnRTUxMNBP7444/UET5w4AAUFBRoBtnbt29x//59uLu7Y/369d1+pytu3boFa2trGBgYwNvbG0KhkJbMA+AQTkuWLKHHGxsbUVVVNWRzoLW1FcHBwWAYBqGhod02hxUVFQgLCwPDMO8VOB7D6CErKwsKCgq0s65AIMC5c+c4mkLDIQ4u6z/OnDkTPB4P27dvx+zZs5Gens75vKSkBHw+HzNnzhzy6wA6/e6goKBuhFN9fT18fHxgY2PDIQYGg/r6ero/Kysrg1Qqxblz5yAUCmkWIADMmzcPSkpKYBgGFy5cGJJzd4Wsb8f60kZGRkhISKCfszbo0aNHUFVVhYGBAe063BNYW+3v74/KykpKbvj7+8PLy6ubgLuvr283wunHH38c9Dr4PoSGhsLExAR5eXndiEp/f3/o6upiypQpiIyMxMSJE6GtrT3gsmt2Xauvr4eFhQXGjx8PLy8vWFlZQV5eHsHBwfS7hw8fhpubG6ytrTl6ywPB+/Ywp06dgpeXFwwNDbF48WJkZ2fDysqKoxc4UskoPYGd+83NzTA3N4eVlRXs7e2hr68PXV1dSvrJZmOvXLkSDMNwAuHDiZ8N2cTiYy8nu379OhwcHODi4sIhnE6fPk0JJ9kSJxYf6ozGGqUZM2Zw0h0bGhqoXpGnp+eod9Bg0dvEv3v3LjQ0NDhlWewkT0lJgZubG2bMmMExvDU1NTA2Noa2tjbmzJkDGxsbFBYW4vjx45CXl6e13v01FpcvX4apqSlUVVURGBiIwsJCTtZMRUUFGIYZFRKPNT5FRUWQk5ODiooKzVIAOjWpQkJCwDAM1q5di3v37tGsID09vX5pssi+q9zcXCxbtgwpKSk4deoUfR6FhYWUcOrqRA+EhGMzxJycnBAZGQmAa0jv3LkDFRUVMAyD5cuX9/v3B4KrV6/S+2UzIlpbWxESEgJDQ0Po6upCR0cHixcvxsuXL9HQ0ABlZWXadnQMHx+kUins7Oy6pSKfO3cOMTExAEDLmVl7nZKSAnl5eSxYsGBIS85k16D6+nrExsaitrYWjx49oo0IhEIh9PT0sHfvXrS1teHw4cPg8Xi4evUqgE5bGBISAh6Ph8OHD0MqlSIpKQnGxsbw8/PjbBAyMzMxfvz4YSWbuurYaGho4ObNm/T4rl27YGVlBQcHBwQEBCAgIABbtmwZMuFK1vacPHkSioqKVF/r8ePHMDY27jW7tba2FomJiUMSyZRKpZg8eTJ8fHxohjKbJScnJ4fVq1dzzhsTE4MJEyZ80CfZuXMn5OXlsWfPHtTW1oJhGPj4+HCc8qqqKk6HoLdv3yIkJAQzZswYMbJJVnfM2tqadpoTCATw9/enDv2hQ4egra0NXV1dGBkZ0YBhX9ftW7duQVFREQoKCjSY0pVE7CnDabD31RVtbW0IDg6Grq4uMjMzu2XaPn78GDExMaMaJR9Dd8iOFQcHBzAMQ8unhlJItytkNYdkx3pwcDB4PB709fWpJEJ7ezv9Tn5+PhiG6RbgG+xeRnZj2xPhxJbUmZmZYc2aNf3KzOvanAHozELsSprt3LkTOjo6NKDT3t6OyMhIzJw5ExkZGcO+8Wc1lNra2mgZGUteywpWu7m5QSQSwdXV9b1BbdZWHzlyBG1tbUhNTYW2tjasra3pb8naY19fXwiFQprdNpw4duwYhEIhCgsLOdUiss+YLbdms2MHW3bd3t6O2NhYuLq60t+qq6vDzp07oaKigpCQEM71mZqadgs69wey427r1q1ITU1FSkoKZ0/38OFD5OTkQFdXFyoqKtDV1UVSUtKo75llNZZKSkogFotRVVWF+vp6FBYWwtraGqamptSXkd0n5ebmjhhJ9pMlmz6FcrLealJv374NBwcHODk5cTJPTp8+DS8vLwgEAo7D2JfOaO3t7ZBIJBCJRJya4Dt37sDf3x/Hjx8fsXS6D0H2uVy5cgXFxcXUUDc0NCA9PR06OjqYN28e/d67d+8QHh6OrKysHif/kSNH4Obmhq1bt2Lr1q2Ql5dHamoqhEIhhELhgO+9vr6+x+5H7e3tKCwshJ6eHqc980hj+fLlUFBQwLhx4xAeHs7Jrrh79y7tDMfn86Gnp/denaqeIDvPgoKCoKOjA2tra2hoaEBbWxtisZhm3p05cwaGhobw8fHhRKT6ex7Z/09NTYWysjKNtsg6Nv7+/rCxsYFAIEBtbe2wEMZNTU3d0rZZYX/2HqVSKXJycnDgwAE6Fjo6OvD06VPY2tr2u9PfGEYOtbW1iI+Ph7y8PCeDAujsatjS0gJnZ2ekpKRQp+/ChQtQUFAAwzBISkrqsRtkf1BXV0e1dVibnpmZCUtLS/qdu3fvYv/+/di/fz+nVKG4uBhWVlYcEe2amhq6UWGJdolEwmkDXVtbi7CwMAQGBg5b2aksDh48iC1btnBKDljcuHEDy5cvh56eHhiGgZqa2qA7zvVEBJw4cQKKiooICwvD/v37wTAMTp48ieLiYpSVleHBgwcoKyvD5cuXB03Aydqia9euQSwWU0KQFZo9ffo0bXogKyr77t07jtPfG2pqajBjxgwYGhri5cuXuHTpErW/XTegQOemdtasWRAIBMPaBKUnWy6VSuHr6wsfHx9a9llUVAQzMzMYGRnh5cuX9J4yMjKwePFirF27ljrK79vss8/q1KlTsLKygkgkgoGBAV0Lu+pjrVq1CgzDICMjY8D32DW79eHDh5x51NraioCAABgaGvZIOI1mlHwMvYMdr1u3boWGhgbS0tKGNRB97949WFhYoK6ursexzmbz+/r6orq6mvP5ixcvoKWlxWmYMhC8b241NzdDLBZDRUUF+/fv52Q4OTk5wc7Ojorsfwi3b9/GzJkzu5EyU6ZMoaVA7LXk5uZCUVERBQUFePXqFSorKzFp0iROwsBQzqGuEixCoRBXrlxBe3s7rly5Qkuxb9y4Qb9XXV2NgIAAHD16lLO29oSamhoEBgbC0NCQlquzZe/z58+n35MlnJycnDB+/Phhl13IzMyEvr5+twyr4a7UcHNzQ1RUFOdYY2MjcnJywOPxsGPHDnr88uXLQ0L4snsYT09PCIVCqr8mu6d88+YNwsPDwTAMjIyMRpxs6om0ZEtbnZ2dOZ23W1tbcfHiRVhZWcHExITyGV0J4JFYb36SZNOnVk7Gam20t7fTCXzr1i2qnSCbqn/8+HFMmzaNk7nT185oQKeYnYqKCk6ePImLFy8iPj4e9vb2I7Kh6C/Cw8Npu0ZdXV26ea+ursaiRYugqqoKBwcHBAUFYcKECeDz+ZQFT0lJgaGhIS5dugSJRILXr18jIiICqampADod/MDAQCrstmjRokEbT9lN5Zs3bzBr1iw4OjpSR3kkIPv+W1paUFRUhKqqKhw/fpwSTrKb0Y6ODpSVlSEvLw+FhYUDbk/KLkglJSVoampCe3s7li9fDlNTU0ybNo1uxM+fPw8+nw9/f/8+t9ztqRU5i5cvX8LOzg6mpqaca3/+/DnVDeirs9NfdHR0IDw8HEKhkFOGe/ToUXh6esLc3LybThWLp0+fIj4+HkZGRoPu0DKG4UV1dTVSUlLAMEw3wunJkyfg8/m0GQDQmcUXHx+PXbt2DbpE8sGDB9DT00NOTg6nC9batWvh6uoKoGfCQSqV4u7du3Bzc4O3t3c32yZLOLFRcRbFxcWIiYmBhoZGN82i4UBBQQEVeWbLXltbWzn31dTUhPLycri5uYHH4w1Yc6S9vR35+fkcgjgkJIQGb1jCydraGjweDwYGBlBSUoKioiKUlJSgoKAATU3NQQVmZCORTU1NqKmpwdGjR9HR0YF169ZBKBRSDYrS0lL6bNi1q+vvsGhtbeVkKQGdz1ZTUxNJSUkAOgNW+vr68PX15ZSabNu2Debm5rC2th6V5gRPnz6l3dlYR/jYsWMYN24cHRO9ZUj0tsno+nzevn2LmpoaFBcXw97eHgYGBrQURva7jY2NWLNmzYAJN9nrmTdvHhXXNzIyQmFhIX1HsoTTunXrhj1DYQxDhxcvXkBfXx8BAQHDep6nT59CW1ubEyQ8c+YMZ1/DalRmZmZyfM3Hjx9DT09vUGUysj7tvn37sHz5cqSnp3OyrdgMp54Ip/4E648ePQqGYRAeHs6xY1OmTKFku+zcmjZtGhQVFWFjYwMTExPY2Nh0KzEfaqxbtw5ZWVlYsGAB5xy5ubmwt7eHsbExtm/fjh07diA8PBx6eno9kgO92WotLS0kJSWhra0NVVVVSElJAY/Hw6JFi+j3ZAmn4UyGYG3ikiVLIBQK8e7dO3R0dHSzq0Od2ccmRlhbW9Nu1bLjsK6uDhYWFpg3b1639zyY69i4cSOEQiGuX79O15qFCxeCYRia8c3ee3t7O5UtGEksWrSoR33buro6eHt7Q0tLCx4eHpzP2tvbcfHiRVhbW0MkEo1as4mfHNn0qZWTsXpCbIlTV8JJV1cXFhYWVOSZvVZZfKgzWmJiIp0stbW1VFhVU1MTurq6o9bSuCtkDcWePXsgEolw7NgxHD58mApn7t69G0Dnezx37hwCAgLg4eGB6dOn041da2srLly4AB8fH+jq6iIhIQEVFRUoKSnhZIVVVVXRjn9DmbJ+/fp1xMTEQF1dnYqVjwRkDXJ9fX03Q8w67+Hh4f1uefshzJw5E35+fmhqauJEq1kSauvWrfT4pUuX+pRm27VN9aJFi+Dp6QltbW1ER0dTIuf8+fMYP348BAIBNmzYgI0bNyI0NBSGhoYDJs/6iuvXr8PZ2RlOTk696qx1zXxatWoVLaMY6zr3aYB1/LoSTvX19fDw8ICrqytevnyJp0+fIiYmZkg3IXZ2dtDW1saePXvoerZ+/Xp4eXkB6L4Jf/PmDdauXQtHR0c4OztTu9AT4RQSEgIFBQVKOG3atAkTJ06EjY3NiNmuqqoqpKenQ1NTE1OnTqXHe3Icm5ubB0Xet7e3Uwf++PHjCAgIAJ/PpzpQQCcho6amBgcHB1y4cAG1tbV4/vw5ysvLUVlZOeisKqDznU2YMIGuRew7nDp1KiIiIug7k0qlsLW1xaRJk+Dt7d3rJqqpqQkeHh4IDw/n3AsALFiwAIqKipTAKigo6EY4VVVVYe/evcPeGOTBgwdYv349kpKSOBkXxcXFYBiGBkL27dtHS7yBzvV+27ZtNHvjQ5AdO/fv38ejR48oqd/R0YErV67Azs4OBgYG1Plubm7GypUrh8wXYAMRe/fuRXl5Oc2oys3NpQGT1tZWBAUFQVlZGVlZWR9d998x9I5du3aBYZhha3fOjgV3d3fqrx07dgwMw2DDhg2cPUpYWBjk5OQQHR2N27dv4/Tp04iNjYWGhka/N5dNTU3dOjuGhIRAJBLBxcUFvr6+UFJSop3fgH8RTgKBgNMtrT9obW3FkSNHwOfzERoairq6OrS1tcHBwYGTZShLtixduhRxcXGcrnPDVdL4448/0o6D8fHx9JpZnDlzhuoMampqwsLCokf/7kO2WklJiWpBVlRUIDU1FQoKCpxgw3A0Degt2H758mUwDEPttWxWbVlZGdzd3Qell9TbeVeuXAk5OTlKbMrubyZOnDiosrmeMGvWLPj7+9OxW1VVBXV1dcTExFC/a7QzTjMyMmjgqOu1vHr1CuHh4VBWVsbSpUs5n7W3t+PSpUvQ0tLiaF6NJH5SZNOnWE527949hIWFQUFBgUM4sQNp7969UFNTg5WVFSd7gkVfO6ONGzeOo3N05swZ/PDDD0PiOA818vPzsWjRIqxZs4Yee/fuHWJjY6GgoIA9e/Z06wjRW6nKqlWr4OHhAYFAgMLCQkRHR8PCwoKTEjpUBqSlpQU+Pj5wcnKCo6PjiGzWpFJpt/GakpICZ2dnTJ48mVN+AXAJp4EKFnddzNmWrT4+Ppxj7Hft7e37tfnuyVkIDg6GoaEh4uPjsXjxYhgYGEAkEtH7e/ToESIjI6GlpQVtbW3Y2NgMO4nK2pfbt2/DyckJbm5unCwRWZ011iFtaWlBaGgowsLChqUt8hiGFrJ2pjfCKTc3FyKRCDweDyKRCAKBYEhIRFm7NHHiRGhoaGD37t1oaWlBeno6Z77JXufFixcxc+ZMzJ8/n/5GbzZOlnA6ceIEJBIJDh06NGzrQm+OZXV1NXUuZddlWVswlGn7oaGhUFZWhkAgoOVrwL+e4+nTp8Hj8RAUFDRsBIypqSn8/f3pvyUSCZydnSEWi+n7Ki0thZ+fH65evUqvrSdC4sKFC1BWVoa2tjY0NDSwbds2GlGXSqVwcHCAhYUFDVSdOHEC+vr6mDx5co8ldcOB4uJi6Ovrw9LSEhoaGmAYBv7+/nj79i0aGhqgr6+P1atX4+DBg2AYhrP+79u3D0FBQX0igmTHSXR0NEQiETQ0NKCnp4e1a9fSAOPVq1fh4OAAfX19ZGdnIzIyEnJycv3OaJKNdrPIzs6Gra0t7Sy8bt06KCgowM3NDUpKSsjNzeVkOIWHhw9a52QMI4sXL17AxcVl2N9bWloaJSdbWlqQlpYGHo/XjXCKiooCwzBQV1eHp6cnxGJxv9ehjo4OuLq6wtPTkx5LTEyEqakpJUAWLVoEhmEgJyfHCYI3NzfDx8cHhoaGAw7Wt7a2Ij8/nxJOtbW1mDBhQo/l1ez33/fvoURzczMKCgpga2sLExMT6nd33Xs8f/4cL1686Ja5xKIvtnr8+PGU4KisrERqair4fD4SExOH5d5k19l79+5xyMaWlhbaEEO2dO358+eIj4+HhYVFvzReZSHb6OnZs2cc+15VVQVXV1doaGhwMunu378PMzMzTje4wYDN1nJ1daVJG48fP4aGhgZCQkLomrlr1y4cOXJkSM45UGzfvh0TJ04E0PnOmpub0dTURPci1dXVEIvFMDMzw8qVKzl/297ejtu3bw+rvtz78JMimz72crLeXvKDBw8QEhICeXl5jogz0BlpdnNzw6RJk3qNUPS1MxqPx/voO5zs2bMH6urqMDAwoOSabGvouLg4Golvamqin3V0dODYsWPIyspCbm4upwX9zZs3kZqaCnl5eTg6OkIgEGDlypXDEh24fv06Nm/ePCIkXltbG6ytrREYGEiJo/j4eOjr6yMmJgaenp7g8/m0UwaLY8eOQVFREf7+/n2OerHlJ7LdFwICAuhGLTs7G0pKShzng3030dHRcHNz65ORYzdcbBQe6MwS0tbWRlFREafTR1BQEMzMzDh1+hUVFaipqel1oR8qyN7LzZs3kZSUBE1NTdjY2HBIYVnCic1wamtrGyuZ+IjxvnH67NkzSjixDnBHRweKi4uRmZmJNWvWDFnXua4p6x4eHtDQ0MC+ffuQmJgIDw8P1NTUoKamBs+ePaO6Hk+fPuWUmn5o3tXU1FANAlbDaTggex1Pnz5FaWkp3r17x3GUVq5cCWVlZRo57vp3QwV2Y8bn83HgwAHOWsD6DidPnoSqqir8/PyGNPWcfac7duyAmZkZJzNi06ZNYBgG8+bNQ2ZmJiXx2WvqjXBjBeM9PT2xefNmaGhoICoqitqigoIC6OjoICUlhW6OTp8+DUVFRcyYMaPPJc0DxdWrV8Hj8ZCUlISHDx/i6dOnWL9+PRQVFem7jo2NhZ6eHuTk5CjR1N7ejkePHsHDwwMzZ87sV+YP6wvl5+fj6NGjyM3NBcMwiI6ORl1dHTo6OnD9+nX4+vpCV1cXtra2/d6cNzc3w93dnTZtYd/Pzp07aQR669atUFRUxKFDhyCRSODl5QVNTU0q3D6GTxfD4UOy6EpisOdiCSc5ObluhFNCQgIt+xko4ZObm0vLq2tra+Hl5UWlPDZs2AB5eXls3rwZwcHBkJOT43QulkqlffZ9y8rKcOLEiW62VSqVIj8/H8rKypg2bRpsbGxgZGQER0dHWFtbw9bWFs7OzjA3N6fNX4Y6I7A3O9vY2IiCggIYGhrC2dmZPmPZfciH0FdbnZqaSv3d58+fIzExETo6Onj16tWwZUBGRERAU1MTDMPA1dWV+uGPHz+m+oETJ06El5cXDeIPNLDG3oNEIoGbmxu0tbXp77NB29LSUri5uUFOTg7h4eEIDw+Hvb097OzsBkQsvi9gtXbtWpiZmWHv3r0QCAQICQmhgYny8nJMmzYN27dvH/Gu4rIoKCjAjh07IJVKER4eDhcXF4hEIsTHx1M5nqqqKko4sVpnXTEahNNPimz6mMvJZF/umTNnUFBQgBMnTtBjT58+RXBwMOTl5XHgwAE0NDTg9evXiIuLw969ez+4qPW1M5osM/0xoqmpiXYI9PHxocacneANDQ2Ij48HwzCcsqXg4GD6HuXl5WnXL1lcuHABkyZNAsMwcHJyGrYN/0imwm/duhUMwyAqKgpXrlyBWCymm5fa2lpkZmZCXl6ek9UGdHb2EQgEfS4za2hoQHJyMhQUFHDx4kXMmDEDKioqNAJy584dTJw4Efb29jh69Cj9uzdv3sDT0xPR0dEfNNISiQRCoRCTJk3iZJ7l5uZCIBBwIsFAp16OtbU1/Pz8+rXYDyWCgoJgaWmJ0NBQzJw5EwoKCrC2tu7WSZIV9v/Yyd6fO2Tt9I4dO5CSkoLFixdzHOqeCCcWQzX+ZEsCZMvGJkyYAE1NTTg5OYFhGJiamlItITU1NSgqKmLy5Mn9vp6qqqph7YAl+1xjY2NhZWUFOTk5ODg4ID09nZO6zhJOwxXFBTqzEUtLS2k3pf3793M0sVgcOXIEurq6Aw4edO3aI4uqqioYGxt3s80rV66EQCCAkZERfH19ey2D7IoXL15AXV0dOTk5ePHiBWJiYuDo6Ii5c+dCIpFgxowZsLS05BD5Z8+eHfbMjOvXr4NhGMTExHDu4c2bNwgLC4OysjLevn2L58+fw8PDA7q6uli2bBkqKyuRl5cHNzc3zuaiL85+eXk5rK2tceDAAfr8qqqqwDAMEhISOKU4LS0tuHfv3oCInx9//BH29vYQCAScRiDNzc149eoVXr58CZFIhDVr1tBzbt68mepw7d27Fx0dHWPlcz9zvO/95+bmUj+N/Z4s4bRx40ZOcCEmJmZQMglsYwEjIyOcOnUKR44cgUQiwfHjx6Gqqoo9e/YA6BTwZxgGioqK3XT/PoQXL17QOeDs7IwtW7agrq6Oft7c3Iz8/HxoaWmBYRikp6cjPT2dakYtW7YMCxcuHJZMJtm16vr16zh69Chu3rxJ7QNLOOnr68PFxYWuXf2ZwwOx1VVVVd1EugcL2XvdsGEDTE1NsXv3buTl5dGsT3af+u7dOxw+fBjTpk3D1KlTkZKSMuBxxp63ra0NkyZNgqenJ3bu3ImTJ0/C1dUVIpGIiu/X1NRg9erVcHBwwKRJkzB37tx+l0w2NjZyOhf2hOLiYohEIowbNw7e3t70eF1dHWJjYzF+/PiPQl+V7ZBsb2+PlJQUzJw5E2ZmZhAIBDQZoKqqCsHBwTA3N0dycvIoX3EnfjJk08dcTiZrhNg26JqamuDz+fD09MSFCxfQ0dGByspKzJo1C3JycrC2tqZdvfqa1v2xd0brit4mvVQqxdy5c6Gvr4958+ZR0oz9fn19PZKSkujGaNmyZTAyMkJRURGamppw7949JCUlYdy4cUhJSeH89rNnz7B79+5PPmVddkzt3r2bliS4u7tzFu26ujqsX7++27gH0CeyTVZwsba2FmKxGMrKytDS0upWb37mzBm4ublRkcPly5djxowZUFVV/eAmViKRwNjYGF5eXt10OQ4fPgyGYSix1dHRQTcQ7Gcj1SZadszm5eWBz+fj0qVLlAy+fv06rKysYGtry8lw6knYfwwfF2TfLav55e/vDzc3NxgbG3PSklnCicfjdUtXHizYOVdfX4+oqCikpKRwoofe3t60090PP/yA0tJSFBcXo6ioCAUFBQN2wEdCj2DmzJkwMTHBoUOHUFdXBzs7O+jq6lInG+h0lNiOYAsXLhz0Od/nkEqlUipuu2/fPjqPm5qaqDj6QIISNTU1nMyChoYGnDhxohuhlZeXB0VFxW6aF0+fPkV1dTVHTFwWDQ0NHO0fFkeOHIGenh6uXLmCpqYmnDx5EkKhEH5+fsjKysK4ceO6ZboON9jOfrNmzaL2j30na9asga6uLi1JYUlPtizV2tqaU1bY27vsevzKlSuQl5enz/XRo0fQ0NBAaGgozeLqqkszUFy9ehW+vr5QUVGh52Pf25UrV6CkpMR5vzt27EB0dDSSk5NHbN0aw8cLduxKpVJcu3YNhYWFdJ4UFhZCQUEBUVFRNOjA+n5NTU2Ii4sDj8fDtm3bBpzN3ZtYta6uLhYsWECJrqioKAQFBXGC2O7u7jA2NoZAIOhXJlVbWxvc3NzAMAy8vLygqKgIOzs7LF++nEMEHzlyBKqqqpg9e3avdngo1y1ZH2DmzJkQiURQVVWFlZUVAgMDaRaWLOHk7u7+3nv/FGz16dOnkZmZiZycHHqsvr4e7u7u0NHRQUFBAV0be5KnGQiam5tx+vRpzJgxg1MmxyZZmJubc0jMgXbsbG9vpyL6rM3v7doPHz4MfX19SoBmZWUhKCgIGhoao66vytqJlStXwtLSkpMRWFRURDNm2X3Zy5cv4e3tjZCQkI8imPGTIZuAj7+cbP78+TA0NMTFixdx79491NXVQV9fHxYWFnQSSCQS5OXlISwsDHPnzh2wM/IxdEZ7H2SdwydPnuD27dscY9Lc3Iz4+HiYmJggKSmpG+EkGzH28/PDzJkzOb9ZXV2NJUuWQENDg5Npw/7tp46u98CWCMjLy9PaehavX7+mJQuhoaF9PkdTUxNEIhHHUZ45cyYYhoGKiko34WugM+01NTUVurq6EIlE8PPz+2BHK1acPyAgAFVVVZzyIbaTgpWVFcRicTeyZteuXdDV1e2zcOxA0NjYyFn0ZNvP6+np0bHJjscbN25ATU0N48ePf6+w/xg+TsyfPx9mZma0RDQtLQ3y8vLQ0tLiiHQ+f/4cCQkJUFdXH7KyTXZe19fXw8LCAh4eHjhw4ADHAQc6NZwMDAyQl5fXY9braAtZ9oS9e/fC3t6eljhnZ2dDTk4O3t7e0NHRQVJSEnXaX7x4gczMzEFvxvvaTUksFkNNTQ27du3CnTt3EBcXBy0trQGVolRUVMDU1BRpaWn075ctWwaGYeDj48PR+6qqqoKDgwOSkpLQ0tLSo/ZgT45xZmYmGIaBn58fh9Surq7G7NmzER0dTaPgUqkUoaGhmDx5MlRVVcEwDPbt29fv+xoMdu7cCYZhEBsby3mnDg4O8PPzA8DdREskEly/fp1TMtKXMX3mzBm0trbi+vXrVI+roqKC6m+w7+P48eNwc3MbVKRadg2+cuUKfHx8OIQT0Kl/IhQKsWDBArS3t6O2thYRERG0xG4MP2+wPitbXslm8giFQmzYsAEAkJ6eDlNTUw7hxP7duXPnwOPxwDAMNm/e3G/f9n1i1UlJSeDz+dSf9PPzw6RJk+g8vHfvHjw9PfHDDz/0KyuQvfaTJ09CTU0NS5YswfXr1+Hq6gplZWUYGRkhIyOD2on8/HxoaGhALBaP2P5l1qxZMDExoVUCAQEBkJeXh5ubG83maWxsxMmTJ6GoqMgpde6Kj91W5+bmQklJCerq6rTjN+tTNDc302zTgoICTrBkMPuotrY2hISEQCgUwtDQkPpP7Hlfv34NZ2dnjnaY7DrY33OzDXs0NTVx48aN9/5eYWEhZs2aBX19fdja2iI0NHTAnUkHgp7uTfZaY2Ji4OTkhObmZs53i4qKYGJigrlz51I/4s2bN5w982jiJ0U2AR9vOZlEIoGnpycyMzM5E0pNTQ2zZs3qppkwVKnVo9UZ7X2QJYUSEhJgbm4ONTU1aGlpcVKGm5qaKOE0d+5cbN++HevXr+eUKL179w5mZmZUVFZ24/X48WMYGBh0K6f71CH7/N6+fUvHCSusGhIS0k18+vXr17TjU1+JmadPn2LJkiWcDVdRURHOnj2LwMBAqKmp0cWp61itr69HU1NTj6UpXbFixQowDIOtW7dy7k8qlcLDwwMnT55ERkYG7ULHkldVVVWIioqCg4MD3rx506d76i86OjqQnp4OhmGwceNGzmd5eXmcDkrt7e3UyG/YsAFqamqwtrbuUdh/DB8nysvLIRaLqUZFZmYmxo0bh+zsbEREREBJSQkrVqyg33/x4sWwpLaHh4fDzc0NFRUVHGFo2Q23p6cnNDU1kZ2dPazaIQPF8+fPUVNTQ/+9f/9++uxycnKgqKiIY8eOobW1lWZrzZ8/n0aAB6orMNBuSiEhIbQ0UVdXlzqlA4Gfnx+EQiEyMjKoDSwuLsb06dOhra0Na2tr5OTkoLGxEdu3bwefz6dZyX1Z95ubm3HmzBkIhULo6ekhIiKCnuf8+fMwNTXlaNkBoF1dFRQURiUTlO28m5CQgKqqKgQEBMDY2JhuVNva2nq9975E0ZOTkzltnz09PWFsbAw1NTWEh4dTwvbVq1eIiYnBtGnTBk0Sy15XcXFxN8KpoaEBc+bMgZGREUxNTeHm5gZ1dfUR3byM4eOELNFkbGwMHx8f7NmzB4WFhbC2toaioiINlC5evBgmJiaIioriSB+cOXMGMTEx2LBhw4DGVF/Eqi0tLSGVSrFu3Tqoq6tjzZo1OH78OOLi4mBraztg3bGKigpYW1tTQuHNmzc4deoUwsPDwePxoKGhgQ0bNqC4uBhnzpwBwzBUo2k4cfr0abi4uFAdNjbLaPbs2TA1NYW7uzsnw6mwsPC9lRIfu60uLy9HTEwMeDweRytRNpPJ09MTPB6P+vtDgT179sDa2hoMw3B8ZPa8R48epf71QPfCXckYd3f3XgknWX+jpaWF7slH0rdir6eiogJ5eXmIiorqtl9jm17IXiuLsLAwWFpadgtOjqbOFIufHNkEfJzlZNXV1VBTU6Pdsx4/fgx1dXUEBwfTQX306NFuqZYDxWh0RusvIiIiYGxsjIMHD0IikcDOzg56enpYvXo1h3CKjY2FnJwcNDU1oaKiAgMDA07by6SkJKipqdEFQNY4eHp6wt/ff9RZ3aGCrEFcvHgx0tLSOFpjbElddHR0t3rqN2/e9Mm5bmxsxPfff88hmeLj4znZPc+fP0dAQADU1NQ4m7ampqZ+L45VVVUIDw/n1P5LpVJYW1vDysqKlgWmp6fD2NgYKioqcHJygo2NzZB1/nofZDMdZDV6bt++DUtLS0RERHTrxrF8+XLY29u/V9h/DB8famtrkZ2dDYlEgtOnT9NWzkCnzVZVVYWamtqwprc3NzfD1tYWS5cu7eYkdLVjFhYWmDx58kdj35qamrB27Vp4e3tDQ0MDGhoaiI6OplmQdXV1ePXqFaysrLBq1Sq69l2+fBkCgYCKWA802DKYbkpApwOcm5s74Dkra5/FYjH09PSQkZFB1/W6ujr8+OOPmDZtGoRCIUxNTbFlyxaoq6sjKiqq166qvYEt5xQIBBCJRHTTkpWVBT6f302T7+3btyMuSi37HlnCSUdHB0ZGRnSt6A+x2NDQgEWLFnW7j6SkJMTGxtJ/l5SUwM3NDYqKiigtLUVDQwPu3LmDqKgoaGlpDZjwed+1Xr58mRJO58+fB9C57m7duhVRUVGIi4sbK50bA0XXrG52bNXU1EBXVxdhYWH0u4sWLYKJiQmCgoLw9OlTPH36FHFxcQgLC+u33WDRF7FqTU1NKjQcGRkJNTU1qKmpwdjYeNA6t3v27OnWmKKlpQUaGhowNjYGj8eDiYkJ/Pz8cPTo0WHXaAKAS5cuUT9v7969UFZWpuvEkiVLqIh1f+3Hx2Cre8vmefLkCaKjo6Gurs4RlZbNcJoyZcqA5UdkzyX7DgsKCmBqagpra2tqL1ls3bp1UHqJPZ27N8JJ9jsVFRXIzc2ljV5Gyrdi301JSQmV0XFzc8Phw4c5n1+6dKlbZ0L2GpOSkjBx4sSPMvj4kySbZPExlJN1dHTg9evXsLGxwZIlS1BWVtYtrfvatWtwdXUdUhJsJDuj9Re5ublwcHCgpSobN26EgoICJk2aBDk5OUo4saLRBgYGOHnyJF68eIE1a9bA0NCQsuzXrl2DSCSCk5MTJy2+uroajo6OP5nMJlmjFxwcDBMTE6xZs4aTPQCA03Wnv4sDKz7H6l3V1tbi7du38PDwgKKiIicCUVlZicDAQGhoaOD48eN49OgR4uLioKysjIaGhn4ZadkW7Lt374a9vT1cXV3x7Nkzzu+cO3cOa9asQWhoKFauXDns2luy3e/mzZsHHR0dfP/99/Tz9PR06OnpIT4+npb4vXz5ElFRUbRrxBg+Tsg6XrL/z0aF5s2bB09PT47D5+rqCnt7e9ja2g7bGlJTUwNFRUUamOgpa1C25GG0xPG7gu0q4+rqipCQEGRkZCAuLg58Ph8CgYB2GHv8+DH4fD6nvDk3NxcTJkzA/PnzB61rNphuSoNBT+VewcHB0NfXx6pVq7oFks6fP485c+ZAQUEBDMNALBYP6B02NjaipKQEkyZNgqKiIoKCglBaWoro6GgEBwd/FJ0ve9IYlNVA6Q9++OEHMAyD8PBwTvAkNjYWc+fOpf+WSqU4f/48HBwcIBAIIBQKYWdnBzMzswEHKGQ3ptnZ2YiPj0d8fDzNygU6NZy8vb2hoqKCc+fOcf7uYyxvHcPooKOjo1tWNwCa9TJ79myEhIRwNDizsrJgamoKhmFgbGwMDQ2NQQeS+yJWLRKJ6JwpLi5GSUlJn5vLvA81NTU0IN7U1IQ3b97A0tIS9vb2qKioQElJCWJjYzlNYIZrDm3evJkGP16+fInW1lZ4eHhgwYIF9Pjr169hZGQEbW1t+Pj4QCqV9stmj6atlrVdtbW1nIx8AHj48CGio6NhYGDQI+E02PO2trZCKpV2Gzf5+fmwsrKClZUV8vPzUVNTgytXrsDZ2RleXl5DkpXzIcKJRUVFBaZNm9Yj+TecYK+vpKSENke5fv16j999+/YtFixYAG1tbcyZMwdAJ2n96NEjWFtbY9asWSN12f3CT55sYjFS5WTvi3qlp6dTofLQ0FD63bq6OsTFxcHNza0bcTBYjPYGpDfs2bOHlr5t27YNSkpKlMiYPn06VFVVsWrVKhgYGNCoD7vIVFRUQFNTEwUFBXj37h3a29uxd+9eWFtbQ1tbG9u3b0dWVhYiIiKgrq7eraTsU8eiRYtgYGBAo7UAV8gb6NTIkJOTw4wZM/rViv3p06fg8/mQk5ODq6srkpOT0djYiCdPnmDGjBlQUFCgGzegk3ASi8VgGAYWFhbQ1dXl6KH0By9fvkRoaCgUFBRgZGTEmUuj0apT9pzHjx9HQkICdHV1wTAMh3BasmQJzM3NoampCW9vb9ja2kJVVRX37t0b8WseQ98g+24bGhq6ORZSqRRTpkyBu7s7nVPPnz/H1KlTcfLkySEvnWPR0dEBqVQKb29veHh4dIuutbe3Iy8vD0uWLOGQYKMxP2QhkUhgYmICb29v3Lhxg+MgXr9+Hc7OzuDz+VizZg0aGhqgq6uLxMRESKVSPH/+HLNnz0ZqauqQ3MdAuikNRhejurq623iQddBlCaeeNKCuXLmCdevWdbPhA0F6ejotwXF3d4ejoyMOHz78UfgBstewY8cOMAyDuLi4Pq9PjY2NlGTNz88Hn89HaGgo3Yz7+/sjJiYGALrpVOTl5SE7OxuFhYVDsokQi8XQ1dWFm5sbLQXx9/env82W1AkEAqr7Ins9YxgDwM3qlpWHADrHs0AggL6+Pnx9fbFhwwbU1tbi8uXL2LdvH9avX99vsnYwYtVdG8wMFdLT08Hn83HgwAFYWFjAwcEB5eXldK7ISowM1zp39+5dMAyDXbt20WMvX76kdpvFmTNn4O7ujuzs7EF3JhtJWy373BITE2FrawsejwdXV1fs3buXPuMHDx4gOjoa+vr6yMjIGLLz1tfXQywWw87OjmblyAbM8vPzKYmqp6eH6dOnY/LkyYMWI+8tk4slnAQCAb2Ohw8f0oZGt27dGtD5BoPKykpYW1sjISGB4yfIlsSx1/rixQskJyeDz+fD1NQUdnZ2MDc3h62t7ZD4EcOBnzzZNBLlZD0x7hs3bkRiYiKWLFmCI0eO0OOJiYlgGAYZGRm4c+cOioqKEB4eDg0NjQ8KKX+qkB30spO/pqYG7969g6WlJVauXEmJk/z8fDAMg3/+85/45z//SYUP2ef84sUL6Ovrw8bGBpqamnBzc0NhYSGOHDmC8PBwKCkp0S4Ro91BYKghkUjg6+uLtLQ0euzJkyeIjY1FeHg4Fi9eTLP5srOzoaqq2mfnmn1Pubm5MDc3h5eXF0xNTZGSkoKGhgY8efIEgYGB3QintrY25Obm4vvvvx90VkJ1dTUiIyOhoKBAna/Rbg09Y8YMWFhYIDY2FmlpadDX14e6ujqnpO7UqVNYtmwZ/Pz8EBcXN6bJ8RFD1vFKTk6Gk5MT1NTU4Ofnh8uXL9P5c+DAATAMg6VLl2LXrl2IiYmBUCgcstT29znO2dnZ4PF4SE5Optl7bW1tePz4MVxdXTnaCqONrqUgsuL+7Ly9c+cOXF1doa6ujqNHj2LXrl1QVFSEnp4eRCIRBALBgNfm0eimxOLevXsQCASwsbHpRmTIZlWzhNPq1avpeXp6/wON2suuqyUlJVi4cCFtLR4aGvrRZFj2VFI3e/bsD5aWtbe3Iy4uDkpKSrQd+KFDh8Dn82lGQFRUFBYsWNDj3w/lJnXLli3Q19fHxYsX0dHRAYlEgmPHjkFbW5uKnQOdhJOTkxMMDQ3R2Nj40Tn/Y/g4IJvVzfo86enp4PF4lEA1NzcHwzDQ1NSEg4NDt+6VfcVgxaplpRQGC3Y+sJIJDMNQPSRZncKu3x8OSKVShIWFwcfHh6OR4+rqCldXV5SVleHOnTtISEhAUFBQN02c/mA0bXV4eDhMTU2xc+dOVFZWwsDAAJaWlli/fj2HcIqNjYWioiLWrVs34HPJNjuxsrKCl5cX9u7di+PHj9NMXtaWA50BXUtLSzg6Ovao4fQh9NTNEfgw4cQmLkRGRoLP5w+6NLS/YK/p8OHDEIlEKCkpoZ/J+gP+/v5gGIbyCRKJBMXFxYiNjUV8fDzWrFlDv/8xZtD+5MkmYHjLyaRSKZydnbF37156jO1s4+TkBB0dHejq6kIsFgPoHPjJyckQCARQV1eHubk5nJ2df3KkCAtZJ4+N2svi1q1bUFJS4kT/9u/fj/j4eMyZMwfTpk3jaPk0NzfT1vLZ2dn4/vvvYW1tDQMDA5qy/uDBA7x+/Rrv3r0b/hscYbS2tsLd3R2enp64e/cuMjMzoaioCAcHBzg4OMDY2Bhr166lBqyvz0D2Pd28eRN+fn44ePAgFixYAF1dXaSmpnYjnLoKXw+VMyDrfMk6N6PhrB87dgxqamooKiqim8dbt24hIiICAoEAmzZt4ny/ra3toxDjG0N3yBLWABAaGgpTU1Ns2rQJpaWlUFNTg7u7Ow4fPkztVGZmJuTl5aGpqQkTE5Mhs9OsM9DQ0IA1a9YgOjoaK1as4OgWLF68GAoKCnBzc0NmZiZSUlJgb28Pe3v7jyp61VMpSE8OHvuMWbHmixcvIj4+HmlpaQPOPh2Nbkqy97V3716q/8Tj8TBhwgRkZWVxOmqyEIvF3QinobQVXcfCqVOn4OrqOmIZlr059V2vq6cMJ1nivjecPHkS3t7eEAqFHMJJSUkJQUFB8PX1hY6ODsRiMfz8/DB16lSIxWJMmTIF8+bNe68AeU/o7buzZ8+Gm5tbN52cM2fOQFFRkRMIun79Op49e9bnc47h5wlZnycgIACKioo4ePAgJQDevn2LW7duITk5GW5ubgOe0x+bWDW7JmdkZEBdXZ2zhgwXZH0AWZt18OBB8Pl8KgwOAGVlZTAxMYG8vDx0dHSgqak5JD7AcNvqlpYWPHr0iNMxetu2bbCzs6Pr4bZt2yAnJwdra2toampi06ZNdLzdv38fiYmJg5apaG1tRWRkJPz8/OgaO3PmTAgEAvB4PHh6enIIpwMHDsDGxgYTJkzgHP8Qeurm2FtmVlfCadKkSTTDeaSJJlkkJCRg/PjxPX42bdo06OnpwdfXF3w+/71Nh0Y7y703/CzIJmD4nPLnz59j4sSJdADU1tbC3t4ely9fBtDpDG/atAk6OjqYNm0a/bv79++jpKQEjx49GrZOWqMN2WeekpICPz8/eHp6coilly9fwtjYGOHh4QD+1WGMFeDtTctHNn341q1bMDIywqRJkwB8HMr7Q4Ge7qO9vR0HDhyAUCiEkpISRCIRTfNlRdZlsx4+NO57ixrExsbCzs4ObW1tSElJgb6+fjfCic/nD2mkSxay772r8zOSyMvLg6qqKnWy2OdZVlYGBwcHMAyD7OzsUbu+MXwYDQ0NVBuOfX8bNmyAjY0NjSJlZ2dj3Lhx0NXVhVAo5IiRlpeXo7y8fMhK59h5LZFIYGNjAxsbG4SFhWH8+PGwtbXFli1b6Hezs7MxefJk8Pl8ODo6Ijo6+qOLXvVWCtJTRmtqairk5eUHXYLAYjS7KQGd925ubg57e3uqQ8gwDBwdHZGZmcnRWwE6CScjIyMsWrSoWwfa4cBIZTTJjkmJRNLt/b5P6L6goOC9Y1n2s7Nnz8LT07Mb4SQQCMAwDGJiYhAZGYmoqCjExMQgNDQUAQEB/c6aa2xsxIoVK7Bu3ToasGHvITIyEg4ODqivr+fcR1NTE8RiMSZOnPiTDHSNYXjx8uVLREREQEFBgdOAouvc6EuH3w/hYxCrlsXTp08hEAgQGRkJYGSCKD1tyv39/eHg4MCxzbW1tcjKykJubu6gM/ffh6Gy1fX19ZgxYwbs7e0hEoloBua6detoN7/s7GwoKCjgxIkTaGlpgaWlJbS1tbFx40aqGzVQ0XlZ1NbWYsaMGVTkOjw8HPr6+qiqqsL58+dp9t6lS5fo3+Tn58Pe3h7W1tZ9Ipx66+aooqLCSQJh0XVsnTx5EiEhIaMue5Gamgo9Pb1ufuaZM2cwceJElJWVobq6mnYOPHnyJICPI+DYF/xsyKahBtuxi918T58+HQoKCpg9ezamTp3KEXprbGxETk4O9PX1sWHDhlG86pGDrHM5c+ZMGBgYYMaMGXBzcwPDMMjKykJTUxNaW1uRkZEBHR0daGlpwcbGppvoYW9aPux/pVIpJkyYAHd395G9yWGE7EL45MkTPHr0iGbmNTU14dGjR7hw4QKn9PLt27fw8fFBWlpan0rPGhoaaLlcYWEhp6NabW0tbGxssHPnTgCd3egMDQ2RmpqKxsZGVFRUYNKkSdDV1YVEIhkWg1dTU4Pw8PBurVFHEidOnICcnBwV62tpaaH3evDgQSgpKdHxPIaPDx0dHZg7dy4YhsHZs2cBdNqLlJQULFmyBECnMCjb1vfVq1cwMjKClZUVJ8NpqCGVSuHl5QVvb2+atu/n5wdlZWWIRCKOJphUKsWrV6841/KxEE0sZMlhWf0jWa0pANi1axd4PN6QRchHs5sSe0/79u0DwzC4evUqGhsbcfr0aTg4OEBDQwMGBgbYtm0bR+zTz89vxDqkjuSmTSKRwN/fHyKRCHJycpg6dSonGNGVcOr6765jurcxfubMmW6E05EjR6Curo74+PgBlUPKQiKRwNXVFXZ2dggMDOxGCrIC58eOHQPAXavj4+NhY2Pz0ZQtjuHTQnV1NcLDwzkldcDwSAl8bI0FNm7cCIZhcO3atSH9XalUioKCAixdupQGl1JSUqCjo4ODBw9yNOPy8/NhYGBAu+ON5Do7FO9XIpFAJBLB29sbBw4cgEQiobaooaEBz58/R1VVFUxNTZGZmUnfcV5eHpUf2bJly6C6wXbF48eP0dzcjCNHjkBXVxfnz59Ha2srOjo6MHXqVDAMAwcHB07GWF5eHtzc3FBZWfne832om6Ns13KA+z5lS+9lS+tHC6w2GruuyEI2aPXo0SMaNPuUMEY2DQBsxy45OTksWrQI9fX1ePLkCcRiMfh8PlxcXOhkYgd3Y2MjXFxcaDndTxmyBufx48eIjIzElStX0N7eDolEgqVLl0JOTo6mztfX16OgoACJiYlISUnpsaSiJy0foNPRq6mpgaenJ+bNm9etjeWniJ7E/HR1daGrq4uCgoIe76+8vByzZ8+GtrZ2n1Nf2fIXtn7awcEBR44coYYtKSmJo0HBEk5LlixBQ0MDKioqhr3TYVVVFWJiYoa9XXRv2XDv3r2Dp6cnLCws6L2yz3/btm1wc3NDSkrKsHfFG8PAcfnyZdphhE0rf/fuHSoqKlBRUQEDAwNKfgOdehkMw8DAwAAnTpwY9PkfPXrUrXPd2bNnERgYSEn16dOnUyfXwcEB2tranIy53kqUPib0RjjJXntKSgrGjx8/JNF5FqPZTQnoDAaMHz8e3t7enOh/Tk4OGIaBQCCgHX4ePnwIoLuA9aeOxsZGWFpawtPTE5mZmcjNzYWlpSVEIhGns1Ff0dDQAE9PTwQHB+PEiRPdhJDZaK8s4XTw4EEoKysjNDSUEx3uzzNuaGiAjY0NvLy8cOPGjR4FaltaWhAUFAQ+n48zZ87Qz16+fIkpU6YgJCRkjGwaw4DRk4bTcONjaCxQUVGBkJCQIS0Dkkgk8Pb2hr29PQwNDXHy5EnU1dXh6NGjCA4Oho6ODqytrbF9+3aajeju7s7xez8VGy2VSjF16lR4enpyujh3lXa4cuUKVFVVabY30El0TJkyBWKxuN++7K1bt3Dw4EH6796eV1paGqysrDjdc8PDwxEbGwsvL69u770vQYO+dHPsKctULBZj1qxZI9px7kNoaGigAvnsXqMnP6GoqAgeHh64cOHCqFznQDFGNg0Ash27nJ2dqYDygwcPEBwcDIZhkJubC6DnqNfH0Ip4uCA7KRYvXgwXFxdYWlpyNlstLS1YtmwZ5OTksHbt2j53HetpMyORSBAXFwcdHZ2f3IY/PDwcRkZGOHjwIG7dugUbGxsoKytjx44dnOe0ZcsWeHl5QSgU9que/MWLF4iLi4O6ujpmzZqFLVu2gM/nIzAwELt378bz58+hqKhIxzIAzJ07F3w+HytWrBixRXi4o0uyz/Lhw4e4f/8+ZywdPnyYtuMtLy9Ha2srXr58iVmzZtHSwjF83Lh27Rr8/Pw4hBPQmUItEAg4ZGZGRgbCwsLg5uZGyYGBQiKRQF9fHx4eHhwb+PTpU0ompaenQygUUuevpKQEPB4P1tbWWL169aDOP9J4X4bT48eP4efnh/nz5w94Tn+M3ZQAYPXq1eDxeJT4kEgkMDc3h7e3N7Zu3YqoqCgwDIPg4GD6N59iuXdvNj83NxdCoRD37t2j33n27BlCQ0MhEon6vWletmwZDYTY29tDQ0MDCQkJyM3Npfa6tLSUZjixZRhsc5GYmJgBPd+VK1fC1dWV0w2rJzx58gRTpkyBnJwcwsPDMXv2bPj7+0NNTW3UyzHG8OljpLK6P9bGAkNBONXX10MkEsHLywvnzp3rMcBRWFiI+Ph4yMnJwcXFBZs2bcLp06chEAhGLZt+oCgrK4OlpSUOHjz4Xtv36NEj8Hg8mhlTU1OD6OjoPunmdUVLSwtmzpwJhmE4chc92c6srCxOVnN5eXm3Jk791dXrazfHKVOmID09Ha9evcLLly8RHh4OTU3NYS0N7Q/Ye96/fz/U1NQwceJEDmHI4vHjx/Dw8EBAQMAn5z98ScbQLwAgf/nLX0hsbCzZuHEj+eabb8iJEycIIYSIxWISERFBpFIpiY+PJ1999RWxs7MjhBBSV1dHHj16RP70pz+RX/ziF6N5C8OG9vZ28sUXXxBCCKmvryft7e3k5cuXRCqVkvb2dkIIIR0dHeQXv/gFCQoKIp999hlZtWoVkUqlZMqUKeSbb76hf98TvvvuOxIXF0cIIWT27NmkpaWFPHz4kBw8eJDk5OSQ//7v/x72exwp5OTkkHv37pFly5YRPp9PNmzYQB4/fkz4fD6ZN28e+eyzz4ijoyNpaWkh7e3tRFlZmcybN4/87W9/6/M5/vjHP5Lg4GDS3NxMDh48SCwtLUl+fj7ZuXMnWbRoEfnnP/9J/uu//oucPHmSGBkZke+++44kJCSQr776itja2pLPPvtsGJ/Av/Dll8NnpmTHbEJCArlx4wZ58eIF+Y//+A/i5eVFJk6cSMaPH0+kUinZtm0bcXBwIH/7299Ia2srqa6uJjt37iTffPPNsF3fGAYOAIQQQj777DPC5/NJTEwMSUlJIaGhoSQjI4Noa2uT3/zmN+Tdu3fk2rVr5O9//zt59eoVuXfvHtHR0SEuLi6DvoZvvvmGJCQkkMTERDJr1iyycOFC8t1335G//OUvxN3dnRBCSHFxMTEwMCA8Ho8QQsjvf/978pvf/IY0NTWRR48eEQAjNtcGi642+rPPPiO2trakoaGBrFu3jjx58oTMmTNnwHM6OzubpKWlkaNHjxInJydiaWlJCCFEVVWVGBkZkV27dpH//u//JsbGxkRPT49ER0eTc+fOkV/96ldk9+7dRF1dndjb2/frnO97/h0dHeTzzz8nEyZMIPv37ycbNmwg/+///T/i5+dHvvnmGzJnzhzyP//zP4QQQgIDA8lf//pX+reff/75gJ7BaEIqlZJf/vKX3Y4/ffqUACD/+Mc/CCGEtLa2kj/96U9k5syZZOrUqeTw4cPE1ta2z+dxd3cnr169IseOHSPy8vLEx8eHbNy4kezbt4+sX7+eKCsrk0mTJhFbW1ty+vRpEhMTQ5YtW0YsLS3Jl19+Sf7+978P6Pn++OOP5Pe//z35+9//zjl+8uRJUlJSQurr64mCggJxcXEha9asIevXrycnTpwgbW1t5G9/+xvJycmhz2AMYxgovvvuOxIVFUW++uorwjDMsJ3n888/p/ZNRUWFqKioEC0tLbJ27Voyffp08tVXXw3bud+H9+0D+oLW1lYyc+ZM8vvf/54sXLiQ/PnPf6bH2f3XrVu3iLq6OjE0NCTOzs4kOzubbNy4kdTX15Pm5mZy5coVYmZm9sns1+7cuUMeP35MlJWVe7V9AMhf//pX4ufnR9LT00leXh751a9+RZ4/f078/Pz6fc5f/OIXJDIyknR0dJDY2FjS0dFB7OzsyGeffdZt3RQIBERBQYFMmDCBqKiokEePHpFf//rXHHvZ3/f+hz/8gcTExJD29nbqd9ja2pJVq1aRc+fOET09PfKf//mf5Nq1a+TChQtk8+bN5K9//Svx8PAgcXFx5He/+12/73k4wD4nY2Nj8vr1a7J69Wri7+9P/Pz8iLa2Nvnqq6/o9Tc3N5MtW7aQzz//nPofnwRGj+f69NDXjl0VFRUICAgAwzCYOXMmZs+ejbCwMKipqQ24vfPHDlkG1sPDA2KxGFKpFKtWrQKfz0dQUBDVJmG/29raSjvzdRVSfR9koz48Hg+3bt0a2psZQfTWrnPv3r1YvHgxgM7MJUVFReTn56Oqqgq+vr5QVFSk4netra2DikDV1NQgODgYPB4Px48fB9BZIxwfHw8XFxf4+/ujrq7uk2PSPwTZ+RwREQFDQ0McO3YMN27coNpish0tKioq8P3332PWrFm9lnuOYXTR0NDAyVzq2gFTJBJBQUGB03UmLCwMKioq8PT0xIQJE7plOg0W7e3tKCwshEAgwJQpUzitlevq6qCnp4fExER67Nq1awgPD0dZWdknW24lm+GUm5uL1NRUKCkpDbqTz2h0U2IzF99n/1pbW5GSkgIlJSXaifb+/fvdNKuAj7dbzIdQV1eHhIQEjtYFi9zcXMjLy+PGjRv0GCswu337dvB4PDx//rzfUeuIiAjweDyqt3bv3j3MmTMHTk5OUFJSgrW1NUQiEQQCAfh8/qB8gdbWVkybNg1TpkyhJRw1NTW0O9i4cePA4/EgJyeHWbNm0b97+/Yt2tvbB9UOfQxj6Amjpc33qZeB3rt3D1ZWVsjLy6O2V9YGr1u3DioqKkhLS6N7D7axQWxsLCwsLIZdumGosWvXLigrK1Odo57WK3btOXXqFAoKChAeHo45c+YM+l4/pNnI4sKFC0hMTISXlxcSExPp+B7smtifbo4TJkz4qLNPJRIJjh8/TqV6+Hw+VFRUMH78eEyfPv2jaxDTV4yRTX3AQDp2VVRUICgoiA6SCxcuDLok42OFrKE4d+4cnJ2dkC7tcwAAIj1JREFUORu+tLQ0mJiYIDIyskfCaSCpjFVVVUhMTPzkFgRZvK9dZ319PWpra1FdXQ1LS0usXbuWjsOtW7fSVGfZErfBQJZw2rNnD4DO91pZWTnsukwjicbGRmRlZXHGXG5uLqysrGhL2KysLCgpKcHf3x8Mw2Dt2rWjdblj6CcWLVrESelmF+SmpiZYWVnBzc0NBQUFtMPb1atX8e7dO6xatQoTJ05EWFjYsDgiXQmnmpoa+tmqVatoWntOTg7c3Nzg6+vL+dtPEcMZFBipbkoPHjyArq4uLY9737uora2FiYkJdHV1OYTiTwGvX79GUVERHB0de3yOJSUlEIlECAkJ4fg5HR0dWLVqFSwtLQdUblxTUwOxWAwej8cRG+/o6MCpU6ewatUqmJiYQE5ODgzDDLqU/tq1axg3bhyCgoIQExMDQ0ND8Pl8REZG0q6UgYGBUFBQoF11P9X5OYYx9IZPLbjRFfv27YO8vHw3rTcAWLp0KXg8HhwdHWFkZISVK1d2I9A/xW6St2/fhoKCAhYtWkSP9fYePTw8cOTIEY6u8GDRG+Ekuz+8du0alixZwglKDNX5R7Kb40igra0Nhw8fxvbt27Fjxw6UlpbSteZTI5qAMbLpgxhox66GhgY8fPgQU6ZMga6u7oi0OR5tZGdnIyYmBjNmzIBUKuU4YUuXLqWEE7vRGuyC9ilOOBa9tevk8/kcp7q0tBRKSkocoeKcnByEhYUhPT19SMk22cWip5ahnzpYYX8ej4eUlBS6acrPz8eqVasAdBJ5PB4Phw8fRmVlJSZPngyGYbB58+bRvPQx9BGyNfzsGJZKpbC0tISrqyslAWQ1nFi9l9bW1iHJTujNrvWW4VRVVUW1MgwMDODp6UmzQj51p384gwIj0U2puLgYdnZ20NbWpp2M3hcxXr16NRQVFTnBlk8dZWVlEIlEcHd3p919Hj16hCtXrnACEWvXroWWlhaCg4NRWloKAPjxxx/h7OwMsVg84LEsuy7Jro0sJBIJioqKOL7ZYHD58mWYmppCVVUVgYGBKCws5BBlFRUVYBiG+n1jGMMYPi7s2bMHfD6f2gTWZj979gze3t40gz8qKgp6enpYtmwZpFLpJ72nePPmDVxcXKCnp0e76QHd16uioiLY2tpSGz2U6I1wam1tpQEJMzOzYcvYHslujv3F+7K3ul7b+wIYn2pwY4xs+gAG07Grvr4eFRUVQ+YEfcy4d+8eeDweVFRUOO0mZbPCli5dCpFIhMDAwG7dmX5O6E+7zps3b8LExASLFi3C69ev8ebNG0RGRmLu3LnDsjDKLhZdy1E+dcgK+7u6umLhwoV48+YN6uvr8fLlS9TU1MDa2hqZmZl03B48eBDjxo0DwzBYt27dKN/BGPoC2TG8e/du2Nvbw9XVFc+ePeN879q1a5g2bRoYhsG5c+cGfd47d+7QDJi+EE6TJ0/mdM168OABHj58+ElHr3rCSNzHcHZTunz5Mjw9PaGhofFewgkArl+/Dg0NDSQmJn6y5XJdkZWVBV1dXUgkErS0tGDq1KmwsLDAuHHj4OnpiaysLPrdzMxMmJubg2EY6OnpwcDAAA4ODpQ8Haij3Nsmhv3doUZ9fX2PGb3s/NXT08PFixeH5dxjGMMYBodbt25BUVERS5Ys4RxnKylk1yQzMzPMnDlzpC9xWPDjjz+Cz+fDwcEBp06d6vb527dvMWvWLLi5uQ2bOLasrWa71JWUlGD8+PGwtbUd9FrQn/OPVDfHD0E2w/748ePIysrCuXPn8PjxY/qd0SbDhhtjAuEfgKurK6mpqSHHjh0jv/71r4mDgwOZNWsW0dbWJiYmJmTy5MnE3Nyc7Nq1i7i4uJB58+aRefPmkezsbPKLX/yCiMXiT0bcdTD4xz/+QTZu3EhiYmJIQUEBOX78OBGJROSrr76ionzh4eGksbGRXLlyhQqG/xyxYcMGKsj3hz/8gRBCSHNzM/nuu++IUCgkEomEvHv3jvzmN78hCgoKxMzMjBw4cIAcP36c/Md//Ad59OgR2bFjx7AIZ7MCv1988QWJjIwkX3zxBRXh/ZSBLsL+v/zlL0lhYSH5/PPPSUBAAPn2229JWVkZefbsGfnjH/9IhTEbGxuJgYEBEQgExNDQcJTvYgx9wXfffUfFqRMTE8m3335LTpw4QcUnWVFFPp9Ppk6dSr7++mvyxz/+cVDnrK+vJ4sXLybXr18na9asIRoaGj0KS3/++edEX1+fLFq0iERFRZHo6GiSkpJCvv32W/K///u/9HsdHR3DKow/khjO+2DfZVBQENHV1SVHjx4lmzdvJoQQcvz4cWJiYjJgkVv2/WloaJCgoCCyatUq4u/vTzIzM4mKigo9t2yTAWVlZaKnp0cePHgwaJHbjwUWFhbk7du35Je//CVxc3MjX3/9NVm0aBH58ssvSUBAAFmzZg2RSCRELBaTadOmEU1NTfLo0SPy7Nkz8uc//5nY2NiQL774grS1tQ14LHQVnv/888+JjY3NsIn3/tu//Rv5t3/7N0IIV1RYIpGQY8eO9SgiPoYxjOHjwJ///GciJydH9u/fT5SVlYmpqSkhpHMtYkWh29vbSWVlJfnv//5vwufzCSHvbwbxKWDcuHFkxYoVJCQkhCQlJZHbt28TLy8v8vnnn5Nbt26Rffv2kYKCArJ9+/ZhE8eWtdWxsbHk4cOHpLCwkHzxxRdk9+7d5Be/+MWg1oK+nv+LL74gUVFR5MsvvxzVPQzry9XX15MJEyaQN2/eEIlEQpqbm4mCggKZPHkysbCw6FFU/SeFUaW6PhFUV1fTWtCzZ8/i2bNnSEtLg0AggKenJ4yMjODv78/R4UhOTh60fsDHivdFbIuKimBoaAhPT09OtoBsBPJjaTc5Wuhru05fX19s2rQJtbW1yMjIwOLFixETEzMiOlVVVVUjdq7hxvuE/fX19ZGcnIy6ujo8efIEurq6WLJkCZ49e4bXr18jJiYG8+bNGxN//QRRXV2NyMhIToSLTaeWjSIN1bs9ffo0fH19Oa3Y+5Lh5O/v3ycR6jH0jK7P+NSpU3B1dR0S7S3Z37548WK3DCfWtrx8+RLr168H0Dnu2OOferRSdjxmZGRg4sSJVA8rPDwcurq6mDZtGrS0tGgr7Z4wVFleI9USvidcv34dMTExUFdX/8k2ehnDGH4q+FCWz5s3bxAXFwcrK6tuWc+fOm7evAlbW1vIy8tDTU0NGhoaEIlEsLe3H3STjr6ipqYGERERYBgGVlZWdA84Uhnbo7WH6cmHa2lpgbe3NyZNmkS1l44ePQpfX1/o6+vj6NGjI3qNo4HPgP+/P/QY3ouXL1+S+fPnk5MnT5Jly5YRMzMz8vr1a7Js2TJy584d8rvf/Y4kJyeT3/72t59OK8IBQDaKm52dTZ4/f04AEC0tLaKhoUG++eYbcubMGTJnzhzy17/+lfj7+xM9PT1CCDdC+HPHy5cvyYIFC8jJkyfJggULaLvOtWvXctp1Pn78mHz77bfk97//PYmLiyNqamojdo3DGX0YCbS0tPSY1RAXF0du375N9uzZQ5YsWUKOHDlCLC0tSUREBNm4cSNZuXIl+dOf/kRbwubk5JD/+7//G4U7GMNgITvPkpKSaNt7dtkbiiiSrF07d+4cWbduHamsrCQpKSlEIBBwolWy/9/a2kp++OEHEhkZScaPH08WLFgw6GsZQyd6m/sDgew7u3TpElm1ahW5e/cuzXBi22wfO3aMJCUlERcXF0II+bTaEn8ATU1NJCcnh/zhD38gVlZWZNasWeTcuXNk69atpL29nQQGBpLKykoSGhpKpk2bNqzXUl1dTZYvX06mTJkyItlFra2tZNq0aUQikRAAZOHChcPajn4MYxjD0OCHH34gISEh5D//8z+Jk5MT8fb2JoQQcv36dbJ//35y6tQpsm3bNiInJzfKVzr0qKurIw8ePCClpaWkra2NKCsrk3/84x/k22+/HbFrqKqqInl5eWTq1Knkyy+/HPE9xUiej/UT3r59S377299yPquuribu7u5k+vTpxNnZmfoTJSUlJD09nTQ2NpIlS5aQv/71ryNyraOCUaO5PkH8XDp29QbZKG1QUBB0dHTg6ekJoVAIa2trhIWF0S4O58+fh6GhIXx8fHD69OlRuuKPG31t17lw4UK4ubl91O06Pzb0V9jfwMCA1vcfOnQICQkJQ9ISdgyjj+HSIestQ/PMmTOYNGlStwwnNrLX0NBAMz2kUinWrVsHPp+P27dvD9m1/dwx1BlFH8pwevLkCRISEn4yOk09obKyElKpFCUlJRAKhSgoKKD3m5WVBT09PfB4vCHrkPo+jLSe2fXr17F58+afhZ83hjH8lHDjxg3Y2NhAXl4e6urqNMvH2dl5LENxBPFT0aB8H+7duwdVVVXcv3+fHmtvb8etW7c42qCyWsZHjhyBnJzcT14D8NNNWxgFyGqBzJkzh3z22WfEwcGB/PnPfx7tSxs2tLa2EgDkq6++omzspk2byO3bt0lGRgYZN24c+eqrr0hycjLZvHkzUVNTIxMmTCA6Ojpk4cKFZMaMGeTrr78mmpqa5Fe/+tUo383HBXY8ffnll+TYsWPE0dGRWFtbE0I6Gfnf/OY3hMfjER6PR5qbm8kvf/nLUb7iTwcbNmwgjx8/Jo8fPya//e1vSWVlJdUT+d3vfkcEAgE5duwYcXV1JfPmzSMJCQnkwIED5PPPPydTp04lVlZWP6nMhJ8zhkOH7NatW2TatGlUU01ZWZn885//JIQQYmBgQD7//HOydu1aEhMTQ5KTk4mmpib5xS9+QV69ekUmT55M9PX1SVhYGPnqq6/In/70J/Lv//7vVCNmDIPHUOseyOopaGpqEkII1XDKyMgg6urqZM6cOeTzzz//5DNCZbOXZW0g6+e8ePGCNDQ0kD/+8Y/kiy++IB0dHaSiooLw+XyirKxMHB0dh/0aR/r5KisrEyUlpZ+unsYYxvAThaKiIvn+++9JeXk5uXnzJmlvbyd8Pp/83//937DpFn0sQC9Z1aOBT3lN7CsaGxtJREQE+b//+z+6dn7++eeEYRjyz3/+k6xbt46oq6uTr7/+mmZfGxsbk6+//pqUl5dT3+KniJ/+2x9iyIqfJSQkkC+//JLY2NiM8lUND+rr64m9vT2JiYmhAnuEEFJeXk7++c9/kr///e/kq6++ItXV1WTv3r3EwcGBODo6ks8++4y0tLQQHR0dsmbNGvLHP/5xjGjqBd9++y2JiooiAMjevXuJmpoasbW1JV9++SWn1GeMaOofBirsv2XLFvLZZ58RsVg8RjT9hPDdd9+RqKgo8tVXXw26BKa1tZXs2LGD1NXVkR9++IG8ffuWJCUlEaFQSJSUlIirqyvR09Mjv/nNb8jSpUvJrFmzyMKFC4mWlhb5/PPPyd27d8m3335LPvvsM9La2kp+/PFH8qtf/Yr8+te/HqK7HcNwoCfCKT09ncycOZOsW7eOko2fslPNEk0NDQ1k+fLl5MmTJ+TLL78kKioqxMvLi3z99dfk3//938nbt2/JrVu3yHfffUeamprI/fv3iaOjI3FwcOD8zk8JY0TTGMbwaYINMAoEgtG+lBGFrM0as1/DD2VlZaKsrExaWlqIl5cXmTx5MjEzMyMAiLW1NcnJyaHNYb7++msCgNy6dYv8+te/Jn/6059G+/KHFWOaTQPEy5cvSUpKCsnPzydpaWk/iY5dsqivryeOjo7kd7/7HVm5ciX5/e9/TwjpjHR6eHiQ3//+9yQ9PZ08efKEuLi40Eymb775huzevZt88803xMLCYmzD3kf0pOE0hsGhpqaGLFq0iBw7doysWbOG/O///i/ZuXMn2bFjB/nnP/9JKisrCcMwJCkpiXz33XeEEEJSUlKIh4cH+dvf/jbKVz+G4cBQZZ1UV1eT9PR0cuzYMeLi4kIEAgHZuHEjuXXrFvnNb35D/vGPfxAfHx9SXl5OLl68SO7fv09SUlKIhoYGefv2Lfn1r39NvvjiCyKRSEhWVhaxtLQc0wX7RCAbIT5z5gxZtGgR0dTUJLNmzSJffvnlJ+XU9xTtbmhoII6OjuSrr74i//M//0MqKyvJixcvyJ///GeyefNm8m//9m8kNTWVZGVlkT/96U+kpaWF/Nd//RfZs2fPJ020jWEMY/jp4mPK8hnDTw+yWcB37twhCQkJ5OHDh2TJkiXEyMiI1NfXk+TkZHLhwgXyl7/8hUyePJk8e/aMHDhwgLS3t5MdO3b85AI0shgjmwaBkRaqHCnU19cTW1tb8v/+3/8jqamp5A9/+APHOK9Zs4bs3buXTJ8+naSkpBBtbW2SlJRE/v3f/508ePCALFq0iBgZGRFXV9ef9OQZavzUCczRwJiw/xiGC9XV1ZTMZIX9X7x4QXbt2kWuXr1Kbt26RX7729+S1tZW8vbtWwKA7Nq1i4qRssLiP8UskJ86ZNfDKVOmEABk48aNo3xV/UdjYyP55ptvSEdHByGkM/qdlJREbty4QZYvX07+8pe/EEIIycvLIytXriTffvstyc7OJl9//TU5ePAg+fHHH8l//Md/kMmTJ5Mvv/xybCyPYQxjGMMYflZgiSbZYGZJSQlZu3YtKS4uJkuXLiXGxsakvr6e7Nixgxw6dIjcuXOH/PnPfyZ///vfyerVq3/yvuAY2TRIfOr6DF3R0NBAbGxsyJ/+9CeyYsUK8l//9V/0Htvb28nLly/J27dvSXBwMHn69CkRCATk+++/J4QQ8vr1a7JkyRJy7do1sm7dOuqojqHv+KkSmKMJWcJp3rx5xNHRkbT/f+3dfUyV9f/H8ee5VRBREDUzbxqSWFa6vGkjpak5TBKTvMmJSwQpNHGhTALMqah5g3e5JNAN8bY27xBrM2/ItWbzNqdDHRiZluE0kQN6Dge+f7RzfvKt/PUt9OQ5r8dfunN59j7swuu6Xuf9eX+cTn7++WdMJhOPPfaYp0uUR1RlZSXz58/n4MGDzJ8/n9dff90dRHz77beUlZWxbds2Kioq6NSpE7t27fLamwlf09DQgM1mIy0tjYCAABYsWIDFYnlkvjEvLy9n4sSJrFy5kj59+rhvmCdPnkzz5s1ZvXo1RqPRvdyzqKiIDz/8kLfffptJkyb97v287V5IRETkflz3e3a7nZkzZ9KzZ0/3jqzHjx8nNze3UeBUV1eH0Wjk4sWLBAcHu0cqePv103s/2UPibSdHSUkJV69eZdCgQe6bZrPZzN27dxkzZgx9+/YlMzOTGTNmsGjRImw2m3v74+PHj3P06FE2btyooOlvat++PfPnz/e688qTfHGwvzwcbdu2JSsrC6PRyJw5czAYDIwcORLAPSNi5MiRXLp0ifDwcIxGo1d/e+VLDAYDt2/f5sKFC+Tm5mK1Wj1d0v/kxo0bhISEMH36dNauXUvv3r2x2+3cunULi8XiPkfr6uqwWCyMGjWKgoICTp48+Ydhk65ZIiLiK1wBUV1dHcePH+fixYucP3+e4OBg3njjDV544QWSkpIASE1NZcWKFbz88ssAhIWFuVdT1NfXe/31U+tGpJFXX32VtLQ0Nm3axPr167Hb7TidTmJjY7FarcTHxwMwbNgw5s+fT1hYGJ988gm7du3CbDazZcsW9zIR+Xu8/T8dT3AN9h88eDBz5syhqKjI0yWJl7j33MrKymL37t3u1xwOB35+fjz99NMKmrxQhw4dKCoqeiS7UPv06UNGRgahoaEkJSVx7NgxrFYro0aN4vDhw+zYsQOg0WYVHTt2pKGhATXEi4iIr3IFRNXV1cTFxbF161bq6+upqKhg5cqVbNmyBcAdOPXr14/U1FT2798P0Ghshy+M8NBTrfxOfHw8TqeT5cuX09DQwFdffUVAQACrVq2iffv27uMiIyOJjIykurqaFi1a4HA4Hrlvd8V3uEIBk8nErFmzMJlMmoslTeLeXUqzsrIwGAyMGDECi8XS6DgFTd7nUdxp1dX637dvX6ZNm8ZHH31EcnIy+fn5xMbGUlJSQk5ODg0NDcTGxuJ0Orly5QplZWUMGTLkkVkqKCIi0tSMRiMOh4MpU6ZgMplITk6ma9eunDlzhpycHAoKCgAYP368O3C6efMmmzdv5pVXXvFw9Q+fZjbJn8rLy2P58uW0atWKgoICd8fSn+3qoB0e5FGguVjyoFy/fp1FixZRXFxMXl4eAwYM8HRJIn/o3uv10aNHWbNmDRcvXqSwsJCAgADmzZvH4cOHeemllzCZTPz0008A7NixQ923IiLic+69bl67do3Y2FiSkpKIi4tzH3Pu3DnmzZvHjz/+SEpKCqNHjwbg/PnzjZbP+RKFTXJfhYWFZGdnM2XKFN566y2Cg4M9XZLIP+btw/jEc65du8a2bduYOnWqzjH5V/vvwGnVqlWUlZWxceNGnnzySXbu3MnOnTtp3bo1Xbt2ZebMme4ZFTq3RUTEV7iue1VVVdy6dQt/f38iIiL48MMPiYmJweFwYDab3RvETJw4kS5dujBp0iTGjRvnfh/XZhy+RGGTANx3loirwykhIYH4+HgFTiIif4EeyuXf7s8Cp7y8PJ577jnsdnuj5fE6p0VExBfV1NQwYcIEBg0aRHJyMlOnTuWHH35g3bp1dOrUCYfDgcVi4fbt28TExNC2bVsMBgOzZ8+mV69eni7fY3wrWhMA7ty5w44dO8jPz2fPnj3Ab7NEnE7nHx6fmJhIamoq+fn5FBQUcP369YdZrojII0kP5fJvZzAY3AO/+/fvT0pKCmFhYSQmJnLixAmsVqt7KHhDQ4POaRER8Rl1dXXuP2/YsIFmzZoxYsQIjEYjMTExGI1Gli5dyuXLl91zOisqKujevTuTJ0+mrKyMEydOeKr8fwXdNfgY1+R8h8PB1atXadmyJSUlJSxfvvy+w2sTExPdv1AWi4Xk5GSfawMUERHxNq7AyWAw0L9/fwDWrFlDamoqubm5PPXUUx6uUERE5OEzm83U1NTw8ccfY7fbiYqKonPnzgBERUVRUVHB3r17SUxMJD4+nqqqKvbt20dgYCBDhw4lNzeXU6dO+fRcY6UFPqS6upqYmBgCAwNZtmwZ+/bt48033+T48eOUlJS4j6uvrwcap7kAkydP5v333ycqKkpBk4iIiJf47w6nxMRE/P392bZtGw6HA01cEBERX/TNN9+Ql5dHQUGBOzByOBwAJCUlMW3aNLp168YHH3xAYWEhQUFB5OXlUVVVRXV1NaGhoT4bNIFmNvmMmpoaoqOj6d69O3PnzqVNmzaYzWYuX77M6NGjyc7Opnfv3rRq1ep3HU6nT5/m+eef91DlIiIi8jDc++1rQkICDQ0NrF+/3sNViYiIPDz3Xgtv377NgQMHyMnJoWPHjqxfvx5/f3/3jCaXK1eu0KpVKwICArDZbCxYsIDDhw+zdetWunbt6qFP4nlqT/ER+fn5XL16lYiICNq3b+/+BbJYLFitVlatWsVrr73G6NGjKSkpoaamBoD09HTGjh3LoUOHPFm+iIiIPGCuDqfq6mqsVitt2rTBbrers0lERLyea37xvZ1ILVu2ZNCgQcyYMYPz58+TlpYG/PYMfe+848cff5yAgAD279/P7NmzOXLkCBs2bPDpoAkUNvmMsWPHMnz4cJYsWcKuXbswmUzcvXuXhIQEgoKCGDt2LFOmTMHpdJKens7JkycB6NWrF507d6Zbt24e/gQiIiLyoBkMBm7fvs2FCxdISkrCarX69BIAERHxfnV1dZhMJmpqali3bh3Z2dmsWLGC77//nsDAQKKjo8nMzOTrr79m2rRpwG8bbLm+jHFdJzt37kyvXr3YvHkzPXr08Njn+bfQMjofUllZSXZ2NgcOHGDu3Lls2rQJq9XKsmXL6NSpEwBnz57l3XffpWPHjhQWFgJgs9lo0aKFJ0sXERGRh6i2thY/Pz9PlyEiIvJAuZbN2Ww2YmNj8fPzc+/CevnyZdLS0oiOjsZsNrNv3z6ys7OJiIhg9erVf/h+Tqfzvhtv+RLtRudD2rZtS2ZmJgaDgblz5xISEsKXX36JyWRy/1KEhYXRoUOHRsPB/f39PVi1iIiIPGwKmkRExBcYDAacTidZWVkEBQWxePFi2rdvT/PmzRk3bhxr1qyhV69ehIeHExUVhcFgID09nZycHN57773fvZ+Cpv+jsMnHhISEkJ6ejsVi4fPPP6e4uJgRI0a4A6dbt25hNBoJDw+nvr4eg8Gg9nkRERERERF5ZNXX12M0GhsNAHex2WyUl5czfPhwunTpAkBxcTFnzpwhJSXF/Wzs7+/PkCFDCA4OJiIiwhMf45GimU0+qF27dsyaNYvBgweTkZHB7t27gd9a5letWkV5eTlxcXEYjUYFTSIiIiIiIvLIcgVNFRUVFBYWUlpa2uh1u91OVVWVe4e5vXv3kpqaSkpKClOmTKG6upqFCxdy/fp1WrZsSWRkJGazudFqIPk9dTb5qLZt25KRkQFAZmYmdrud8vJyioqKfH6LRhEREREREXn0uYKmU6dOkZGRQW1tLbW1tYSHh7uPCQwMpHXr1pw4cYLg4GDS0tKYMWMGiYmJAJw7d44TJ05w7tw5Bg4c6P53ZrPilPvRgHAfV1lZyeLFiykuLsZsNrN9+3aeeeYZT5clIiIiIiIi8re5lsydPn2ahIQEhg0bxpgxY+jZs6f7GFcYdeTIEWbMmIHNZiM1NdUdNJWVlZGRkUFQUBBr167FaNTisL9KYZNw7do11q1bx4QJEwgNDfV0OSIiIiIiIiL/2M2bN3nnnXfo1q0bqampBAUF/eFxd+7c4dNPP2X16tX069ePoUOH8ssvv/DFF1/Q0NDAZ599htlsdodT8v9T2CQA1NXVqQ1QREREREREvEZZWRkJCQlkZWUxaNAg93Pvr7/+Snl5OceOHeOJJ57g2WefpVOnTpSUlLBixQpqa2tp06YN3bp1Y86cOe4ZTXpm/uv0kxJA601FRERERETEu1RVVVFVVcWdO3eA3557S0tLWbBgAd999x12ux2A0NBQFi5cSGRkJC+++CI2mw0/Pz/8/PwANWf8HepsEhERERERERGvc/36dcaPH09QUBADBgzA4XBQUFBAs2bNGDZsGOPGjePgwYPk5eXRr18/li5dSmBgYKP3cM1+kv+NwiYRERERERER8UqlpaVMnz6dyspKamtrGTFiBNHR0Y12lktPT+fQoUPs2bOHdu3aebBa76E+MBERERERERHxSuHh4WzZsoUbN27gdDrp0aOH+zXX8jiLxULXrl0JCAjwYKXeRWGTiIiIiIiIiHitkJAQQkJC3H93Op2YTCbMZjOXLl3i7Nmz9O7dG39/fw9W6V20jE5EREREREREfIJrBpPdbufMmTMsXboUh8PB9u3bMZvNmtHURNTZJCIiIiIiIiI+wWAwUFpaypIlS9y7zhUWFmI2m90dT/LPKWwSEREREREREZ9hsViwWq0MHDiQuLg4TCaTe36TNA0toxMRERERERERn2K327FarQDqaHoAFDaJiIiIiIiIiE/SjKYHw+jpAkREREREREREPEFB04OhsElERERERERERJqMwiYREREREREREWkyCptERERERERERKTJKGwSEREREREREZEmo7BJRERERERERESajMImERERERERERFpMgqbRERERERERESkyShsEhERERERERGRJqOwSUREREREREREmozCJhERERERERERaTL/AXXR+hZTrESsAAAAAElFTkSuQmCC\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import pandas as pd\n",
        "import matplotlib.pyplot as plt\n",
        "\n",
        "# Assuming you have already loaded the DataFrame named 'Top50'\n",
        "\n",
        "# Filter the DataFrame by position type\n",
        "midfielders = Top50[Top50['pos'] == 'M']\n",
        "forwards = Top50[Top50['pos'] == 'F']\n",
        "defenders = Top50[Top50['pos'] == 'D']\n",
        "\n",
        "# Sort the filtered DataFrames by '5GW Total' in descending order\n",
        "midfielders = midfielders.sort_values(by='5GW Total', ascending=False)\n",
        "forwards = forwards.sort_values(by='5GW Total', ascending=False)\n",
        "defenders = defenders.sort_values(by='5GW Total', ascending=False)\n",
        "\n",
        "# Create a list of colors for each chart\n",
        "colors = ['blue', 'green', 'red']\n",
        "\n",
        "# Plotting the horizontal bar charts with different colors\n",
        "plt.figure(figsize=(10, 6))\n",
        "\n",
        "# Midfielders chart\n",
        "plt.barh(midfielders['name'][:10], midfielders['5GW Total'][:10], color=colors[0])\n",
        "plt.title('Top 10 Midfielders by 5GW Total')\n",
        "plt.xlabel('5GW Total')\n",
        "plt.gca().invert_yaxis()  # Invert y-axis to have higher values at the top\n",
        "\n",
        "# Forwards chart\n",
        "plt.figure(figsize=(10, 6))\n",
        "plt.barh(forwards['name'][:10], forwards['5GW Total'][:10], color=colors[1])\n",
        "plt.title('Top 10 Forwards by 5GW Total')\n",
        "plt.xlabel('5GW Total')\n",
        "plt.gca().invert_yaxis()  # Invert y-axis to have higher values at the top\n",
        "\n",
        "# Defenders chart\n",
        "plt.figure(figsize=(10, 6))\n",
        "plt.barh(defenders['name'][:10], defenders['5GW Total'][:10], color=colors[2])\n",
        "plt.title('Top 10 Defenders by 5GW Total')\n",
        "plt.xlabel('5GW Total')\n",
        "plt.gca().invert_yaxis()  # Invert y-axis to have higher values at the top\n",
        "\n",
        "plt.tight_layout()\n",
        "plt.show()\n"
      ],
      "metadata": {
        "id": "VSYcUse-SrV-",
        "outputId": "7c34af78-9562-422c-abca-d91f3552f73a",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        }
      },
      "execution_count": 68,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1000x600 with 1 Axes>"
            ],
            "image/png": "iVBORw0KGgoAAAANSUhEUgAAA4YAAAIsCAYAAACug7cxAAAAOXRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjcuMSwgaHR0cHM6Ly9tYXRwbG90bGliLm9yZy/bCgiHAAAACXBIWXMAAA9hAAAPYQGoP6dpAABr0ElEQVR4nO3de3zP9f//8fv23sYc3phjzqfMMGzDnOd8lohPikWUQ+2jRDUp0YmUSkMkRXNI9ZGcIodCKskm5ZScylnMZths7/f794ff3l9vG4bxfu39ul0vF5dL7+f7+Xq+H6/3w7vt7nV4ezkcDocAAAAAAKbl7e4CAAAAAADuRTAEAAAAAJMjGAIAAACAyREMAQAAAMDkCIYAAAAAYHIEQwAAAAAwOYIhAAAAAJgcwRAAAAAATI5gCAAAAAAmRzAEAJjSokWLFBgYqMOHD99wbqtWrRQdHe0ydvDgQQ0YMEBhYWEKDAzUmjVrbmrNq8XExCgwMDBbcwMDAxUTE3PTr3EnZOzz77//7u5ScA238/cSgHn4uLsAAEDOyW6w+PTTTxUeHn5Ha5k/f75+/vlnbd++XceOHVP37t01YcKELOcmJSXprbfe0urVq5WSkqLg4GBFR0erZs2aN3ydyMhI/fLLL6pQoYK+/fbbTM9v2rRJAwYMkCRNnjxZHTp0uL0d+/+io6N1+PBhDR8+XAULFlStWrX0448/5sjayCwmJkZTpkzJNO7n55dlKE1OTlZsbKxWr16tQ4cOKTU1VcWLF1edOnV0//33q0WLFpKk7du3q1evXho1apT69+/vssbQoUO1bt06vfHGG3rggQdcnuvTp4/+/vtvbdy4MdNrHz58WK1bt87Wfq1du1Zly5a95vMXL17URx99pAYNGtzxzywAcyMYAoAHmThxosvjr7/+Wps2bco0XqVKlTtey0cffaTz588rODhYp06duuY8u92uQYMGac+ePRo4cKCKFCmi+fPnKzIyUosWLVLFihVv+Fp58uTRoUOHtH37dtWuXdvluaVLlypPnjxKTU11Ge/WrZs6d+4sPz+/m963lJQUxcfHa8iQIerbt2+OrInsGTt2rPLly+d8bLFYMs05dOiQBg4cqKNHj6pNmza6//77lS9fPh0/flzr16/X4MGD9eabb+r+++9XjRo15O/vr61bt2YKhvHx8fLx8VFcXJxLMLx06ZJ+//13tWzZMssaAwICMn3mPvnkEx0/flyjRo3KNPd6Ll68qClTpigqKopgCOCOIhgCgAfp1q2by+PffvtNmzZtyjR+N8TGxqp06dLy8vJSSEjINeetXLlS8fHxLkfzOnbsqPbt2ysmJkaTJk264WuVL19e6enpWrZsmUswTE1N1erVq9WiRQutWrXKZRuLxZJlqMiOM2fOSJKsVmuOrekuqamp8vX1lbd37ri6pH379tcNU+np6YqKitLp06cVGxursLAwl+ejoqL0ww8/yGazSZJ8fHxUu3ZtxcXFuczbv3+/EhIS1KVLF23dutXluR07dig1NTXT2hny5cuX6TO3YsUKJSUlueWzCADZkTt+CgAAcsyFCxc0YcIERUREqFatWmrfvr1mzZolh8PhMi8wMFCvvPKKlixZovbt2ys4OFg9evTQli1bsvU6ZcqUkZeX1w3nrVq1SsWKFVO7du2cYwEBAerYsaPWrl2rS5cuZev1unTpohUrVshutzvH1q1bp5SUlCxPH83quiuHw6Fp06apefPmqlOnjiIjI7V3716X7WJiYpxHiiZOnKjAwEC1atXqmmtK0vr16/Xwww+rbt26CgkJ0aBBgzKtm5VLly7pjTfeUMOGDRUSEqIhQ4bo+PHjWc49ceKERo0apcaNG6tWrVrq3LmzvvzyS5c5mzdvVmBgoJYvX653331XzZo1U506dZScnKy0tDRNmTJF7dq1U3BwsMLDw/XQQw9p06ZNN6xTunwUdcyYMQoPD1doaKiee+45JSYmOp9//vnnFR4errS0tEzbDhgwQO3bt8/W60iXTxO9+u9rhpUrV+rPP//U0KFDrxncmjZtqoiICOfjsLAw/fvvvzp06JBzLC4uTgUKFNCDDz6oAwcOOP8xIOO5jO1ux+nTp/XCCy+ocePGCg4O1n333aevvvrK+fzhw4fVqFEjSdKUKVMUGBjocn3p7t27FR0drdatWys4OFhNmjTRqFGjlJCQcFt1ATAnjhgCgIk4HA4NHTpUmzdvVs+ePRUUFKSNGzdq4sSJOnHihF544QWX+Vu2bNGKFSsUGRkpPz8/LViwQI899pi++OILVatWLUdq2rVrl2rUqJHpiFVwcLAWLlyoAwcOZOvayS5duigmJkabN292/jK9bNkyNWzYUEWLFs1WLZMnT9YHH3ygiIgIRUREaMeOHRowYIBLmGnbtq0KFiyo8ePHq0uXLmrevLny589/zTUXL16s6OhoNW3aVCNHjtTFixe1YMECPfzww/rqq6+ue33Z6NGjtWTJEnXp0kWhoaH6+eefNWjQoEzz/v33X/3nP/+Rl5eX+vTpo4CAAG3YsEGjR49WcnJyplMkp02bJl9fXw0cOFCXLl2Sr6+vpkyZohkzZqhXr16qXbu2kpOT9ccff2jHjh1q0qTJDd+7V155RVarVVFRUTpw4IAWLFigo0ePKjY2Vl5eXurWrZsWL16sH374weUUzFOnTunnn3/Wk08+ecPXkKTWrVvrwoULypcvn1q3bq3o6GgVK1bM+fx3330nKfPR8+vJCHhbt25VhQoVJF0Of3Xr1lWdOnXk6+ur+Ph453WDcXFxyp8/v6pXr57t17haSkqKIiMj9ffff6tPnz4qW7asVq5cqejoaCUlJalfv34KCAjQ2LFjNXbsWLVt21Zt27aV9H/XEv/444/6559/1KNHDxUvXlx79+7V559/rr/++kuff/55tv5hBgAyEAwBwETWrl2rn3/+WU8//bSGDh0q6fJNNIYNG6ZPP/1Uffv2Vfny5Z3z//zzT/3vf/9TrVq1JEmdO3dWhw4d9P7772d5I5BbcerUKdWrVy/TeIkSJSRJJ0+ezFYwrFixomrVqqVly5apUaNGSkpK0vr16/Xaa69lq44zZ87oo48+UosWLTR9+nTnL9Xvvvuupk+f7pxXvXp1FShQQOPHj1eNGjWuG0DOnz+v119/Xb169dKrr77qHO/evbs6dOigGTNmuIxfaffu3VqyZIkefvhhvfzyy5Iu92rEiBHas2ePy9x3331XNptNS5cuVZEiRSRJDz30kJ555hlNmTJFvXv3Vt68eZ3zU1NT9b///c9l7Pvvv1dERMQ167kRX19fzZ49W76+vpKk0qVL66233tK6devUunVrNWzYUKVKldKSJUtcguHy5ctlt9t13333XXd9q9Wqvn37qm7duvLz89Ovv/6q+fPn6/fff9f//vc/FShQQNLlU0CtVqtKlizpsv2FCxeUkpLifOzn5+fcpm7durJYLNq6dat69Ogh6XL469Kli/LkyaOgoCBt3brVJRhmbHOrFi5cqH379umtt95y7nvv3r0VGRmp9957Tw888IAKFCig9u3ba+zYsQoMDMz0d+3hhx923lgpQ926dfXM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GxQUpC5dumj+/Pk6d+6cQkJC9PPPP2d5FHfEiBHavHmz/vOf/6hXr16qWrWqEhMTtWPHDv3000/65Zdfblhr586d1aBBA9WsWVOFCxfW77//rlWrVqlv377Z2te0tDT1799fHTt21IEDBzR//nyFhYU57+SZISAgQM2aNdPKlStltVrVokWLbK3fsmVLderUSdWqVZOfn5/i4uK0fPlyBQUF6cEHH3TOy/jqjYEDB+rhhx9W27ZtVa9ePfn7++vEiRNat26djh496vI9hhnCwsL09ddfS1Kmm8uEhIRo2bJlznm368EHH9TChQsVHR2tHTt2qEyZMlq1apXi4uL0wgsvOI/o582bV1WrVtU333yjihUrqnDhwrr33ntVrVo11a9fXx999JHS0tJUsmRJbdq0KdN3aAJAdhEMAcBEvL299cEHH+j999/XihUrtGjRIpUpU0bPPfdcptveS5evO6tbt66mTp2qo0ePqmrVqho/fny2bkjy7bffunxZ986dO7Vz505Jl68Ly1jDYrHoww8/1MSJExUbG6vU1FQFBwdr/PjxmW60cqc9/fTT8vPz02effabNmzerdu3a+vjjjzV48OBbXrNr164qUaKEPvzwQ82aNUuXLl1SyZIlVa9ePedXI1zLG2+8oSJFimjp0qVau3atwsPD9eGHH2YKNcWKFdMXX3yhqVOnavXq1VqwYIEKFy6sqlWrauTIkdmqMzIyUuvWrdOmTZt06dIllS5dWk8//bQGDhyYre3HjBmjpUuX6v3331daWpo6d+6sF198MctTIbt166bvvvtOHTt2zPZR3a5duyo+Pl6rVq1y1vfYY49pyJAhmU7rrFSpkr7++mt9+umnWrNmjTZs2KC0tDQVK1ZMtWvXVlRUlMtXZmTICIYZp45e6cqgmBPBMG/evIqNjdXbb7+tr776SsnJyapUqZLGjx+f6e/Fa6+9pldffVXjx49XWlqaoqKiVK1aNU2aNEmvvvqq5s+fL4fDoSZNmmjmzJkuR1ABILu8HFydDADIQmBgoPr06XPNI1rArVqzZo2efPJJzZs3j+/aAwCD4BpDAABwV33xxRcqV65cjhx5AwDkDE4lBQAAd8Xy5cu1Z88eff/99xo9evQ177gJALj7CIYAAOCueOaZZ5QvXz717NlTDz/8sLvLAQBcgWsMAQAAAMDkuMYQAAAAAEyO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goODNWrUKNWqVcs5p1WrVmrRooXuuecezZ8/X8eOHdOPP/6op556Svny5VP37t317rvv6uTJkwoODtZrr72m8uXLO7d/++23tX79eh0+fFgFChRQ/fr1FR0drRIlSjjnREZGZmutEydO6OWXX9ZPP/0kq9WqRx555Jb3a+3atZo6daoOHDggi8Wi8uXL66mnnlJERMRtvacAAAAAcCO3HAwzQmDGqaTffvutBg8efMPt7Ha7S4D09vaWt7e3EhMT9fDDDytfvnx66aWXVLBgQcXGxqpfv3769ttvVbRoUec23377rSpUqKDRo0fL29tb+fLlkyTt2rVLZ86c0ciRI2Wz2TRhwgQ9++yzWrhwoXPb06dPa/DgwSpRooTOnDmjTz75RJGRkVq+fLl8fP7v7cjOWk888YROnDihsWPHqmDBgpo5c6aOHTvmsk529uvvv//WU089pc6dO2vEiBGy2+3avXu3EhMTb6EzAAAAAHBzbikYXrhwQTVr1nQZ69Sp0w1PI5Wk4cOHuzxu1KiRZs+erTlz5igpKUlffPGFMwQ2atRI7du316xZs/Tcc885t0lLS9PMmTOdgTDDuXPntHjxYgUEBDjrHDVqlI4fP65SpUpJksaPH++cb7PZFBISoubNm+vnn39W06ZNs73Whg0b9Mcff2j27Nlq1KiRJCk8PFwREREqXLiwc53s7NfOnTuVlpaml156SQUKFJAkNWvW7IbvJQAA8GwWS85cKpOxTk6th5xFf4zNLP255ZvPzJ07V9Lla/x27Nih999/Xy+++KJL8MrKyJEj1bBhQ+fjjCC0adMmhYeHq1ChQs4jit7e3qpfv75+//13lzXCw8MzhUJJql69ujPISVLVqlUlySUYrl+/Xh988IH27t2r5ORk59yDBw+6BMMbrbV9+3YVLFjQGQolqWDBgmrcuLF27tzpHMvOfgUGBspisWjkyJH6z3/+o/r166tgwYLXfR8BAIDns1r9Db0echb9MTZP788t33zmyq+XCAsLc55u+eijj6patWrX3LZcuXJZfjVFQkKCtm3blulIpCSX6/okuZxWeiWr1ery2NfXV5KUmpoqSdq+fbueeOIJtW7dWo8//riKFi0qLy8v/ec//3HOye5aJ0+edAmO16otO/tVqVIlTZ8+XTNmzFBUVJS8vb3VtGlTjRkzRqVLl85yXwEAgOdL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vXr10pw5c1zmTJkyRSdPnrxr9QIAAACAUXhUMGzevLmWL1/uMr58+XLde++9Kl++vHOsVKlSql279t0uEQAAAAAMyWOCoSR16dJFq1atUlpamnNs2bJl6tKli8u8K08l3bx5sx555BFJUs+ePRUYGKjAwEDn3CNHjmjYsGEKCwtT3bp1NXDgQO3Zs8dlvVatWumVV17R7NmzFRERoZCQEEVHR+vSpUvatWuXevfurbp166pnz56Ztv3444/1wAMPKCwsTI0aNdLgwYN14MCBHH1fAAAAAOB6PCoYtmzZUpcuXdKmTZskSX/99Zf27NmjTp06XXObmjVrasyYMZKk8ePHa+HChVq4cKEkKTk5WZGRkdq5c6fGjRunt956SwkJCerbt6+OHTvmss7atWv1ww8/6JVXXtGIESO0bNkyvfrqq3ruuefUq1cvTZ48WampqXrqqadcroM8fvy4+vbtq2nTpum1116T3W5X7969dfbs2Rx+dwAAAAAgaz7uLiAn+fv7q1WrVlq+fLlatGihZcuWKSQkROXKlbvmNgUKFFDVqlUlSffee6+Cg4Odzy1atEhHjx7V8uXLVaVKFUlS/fr11bJlS82ZM8d5M5sM06ZNk5+fnyTpl19+0eeff66ZM2eqefPmkiS73a4hQ4bozz//VPXq1SVJL7zwgnN7m82mJk2aqFGjRlq1apUefPDBHHhXAADIfSwWj/q3a7fLeD95X42J/hibWfrjUcFQunw66YgRI5SSkqIVK1YoMjLyltf69ddfde+99zpDoSQVLlxYjRs31tatW13m1q9f3xkKJalixYry9vZWw4YNXcYk6dixY85guG3bNk2ePFk7d+50OUp48ODBW64bAIDczmr1d3cJHon31djoj7F5en88Lhg2bdpUvr6+mjx5sg4fPqyOHTve8lpJSUkqVqxYpvGiRYtq7969LmNWq9Xlsa+vr/LmzesSFn19fSVJqampkqSjR49qwIABqlWrlsaNG6cSJUrI19dXgwcPds4BAMCMkpIuymbL/BVUuDUWi7esVn/eV4OiP8aW2/tjtfpn62inxwVDX19ftWvXTrNnz1ajRo2yDHbZVahQoSxvBHP69GkVKlTodsqUJG3cuFEXLlzQlClTnMEyPT1diYmJt702AAC5mc1mV3p67vsFzOh4X42N/hibp/fHI0+U7dWrl1q2bOm8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LkcG//nnH506dUp9+/ZVnjx5XJ7btWuXLly44NzuVqWnp2vq1Klq06aNatWqpVatWumdd95xnuYqXT4lde/evfrll1+cp59GRkZKks6ePas333xTXbt2VUhIiEJDQ/XYY49p9+7dt1UXAODO4oghAAC3adSoUbpw4YIsFovCwsL03HPPuZxaumHDBtlsNt13333ZXrNu3bry8fHR1q1b1atXL0nS1q1blS9fPgUHB6tWrVqKi4tT+/btJf1fgLzdYPjiiy/qq6++Uvv27fXoo49q+/btmjFjhvbt26epU6dKunxK6quvvqp8+fJpyJAhkqRixYpJuhxe16xZow4dOqhs2bL6999/tXDhQvXt21fLly9XyZIlb6s+AMCdQTAEAOAW+fr6qn379mrevLmKFCmiffv2adasWerTp48+++wz1ahRQ5K0f/9+SVK1atVctr906ZKSk5Odj728vJzX+vn7+ysoKEhbt251Ph8XF6fg4GD5+PgoJCREmzdvdj63detW+fv7O1/zVuzevVtfffWVevXqpddee02S1KdPHwUEBOjjjz/Wzz//rIYNG6pNmzZ67733VKRIEXXr1s1ljcDAQK1atUre3v93UlK3bt3UsWNHffnll3ryySdvuT4AwJ3DqaQAANyi0NBQvf/+++rZs6dat26tQYMG6fPPP5eXl5cmTZrknJcR/vLly+ey/YYNG9SoUSPnn1atWrk8HxYWpr///lunTp2SJMXHxyskJMT52rt27dLFixclXQ6NtWvXlo/Prf+b7/r16yVJjz76qMv4gAEDXJ6/Hj8/P2cotNlsSkhIUL58+VSpUiXt3LnzlmsDANxZBEMAAHJQhQoV1Lp1a23evFk2m02SlD9/fknShQsXXOaGhobqk08+0SeffKKmTZtmWuvK6wyTkpK0d+9e5x1DQ0JCnDecybj28HZPIz1y5Ii8vb0z3VG1ePHislqtOnLkyA3XsNvtmj17ttq1a6fg4GA1bNhQjRo10p49e3Tu3Lnbqg8AcOdwKikAADmsVKlSSktL08WLF1WgQAFVrlxZkvTnn3+qevXqznkBAQFq3LixJGnJkiWZ1skIelu3blXevHklyXnEMCAgQBUrVtTWrVt17Ngxl/m3y8vL65a3nT59uiZPnqwHHnhATz31lAoVKiRvb2+98cYbcjgcOVIfACDnEQwBAMhhhw8fVp48eZynjjZv3lwWi0VLly69qRvQFC1a1Bn+/P39VbVqVVmtVufzISEhiouL0/Hjx53ffXg7ypQpI7vdrkOHDrl8Rca///6rpKQklSlTxjl2rfC4atUqhYeH64033nAZT0pKcvmuRACAsXAqKQAAt+jMmTOZxnbv3q1169apSZMmzmvtSpcurQceeEAbNmzQ3Llzs1zrWkfTQkNDtXv3bm3atMl5tDBDSEiItm3bpq1btyowMFAFChS4rf2JiIiQJM2ZM8dl/JNPPnF5Xrp8c5ykpKRMa1gslkz78s033+jEiRO3VRsA4M7iiCEAALfo6aefVt68eRUSEqKiRYvqr7/+0ueff668efNq5MiRLnNfeOEFHT58WK+++qqWL1+uli1bqmjRokpISFBcXJy+++47VapUKdNrhIWFadGiRfr9999dvudQuhwMz507p3Pnzjm/R/B2VK9eXd27d9fChQuVlJSk+vXr6/fff9dXX32lNm3aqGHDhs65NWvW1IIFCzRt2jRVqFBBAQEBatSokVq0aKGpU6dq1KhRCgkJ0Z9//qmlS5eqXLlyt10fAODOIRgCAHCL2rRpo6VLl2r27NlKTk5WkSJF1LZtW0VFRalChQouc/39/fXRRx/p66+/1tdff61Zs2YpOTlZBQsWVPXq1fXyyy+re/fumV7jyusGrz5ieO+998pqtSopKcl5U5rb9dprr6ls2bL66quvtGbNGhUrVkyDBw9WVFSUy7wnn3xSR48e1UcffaTz58+rQYMGatSokYYMGaKLFy9q6dKlWrFihWrUqKEZM2a43KUVAGA8Xg6uBAcAAAAAU+MaQwAAAAAwOYIhAAAAAJgcwRAAAAAATI5gCAAAAAAmRzAEAAAAAJMjGAIAAACAyREMAQAAAMDkCIYAAAAAYHIEQwAAAAAwOYIhAAAAAJgcwRAAAAAATI5gCAAAAAAmRzAEAAAAAJP7f6M9PUXeryi5AAAAAElFTkSuQmCC\n"
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1000x600 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1000x600 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import pandas as pd\n",
        "import seaborn as sns\n",
        "import matplotlib.pyplot as plt\n",
        "\n",
        "# Assuming you have already loaded the DataFrame named 'gwadjustments26'\n",
        "\n",
        "# Set the index column\n",
        "gwadjustments26.set_index('team', inplace=True)\n",
        "\n",
        "# Create a color map\n",
        "cmap = sns.diverging_palette(240, 10, as_cmap=True)\n",
        "\n",
        "# Plot the heatmap\n",
        "plt.figure(figsize=(8, 6))\n",
        "sns.heatmap(gwadjustments26, annot=True, cmap=cmap, center=0)\n",
        "plt.title('Color-Coded Table of GW Adjustments')\n",
        "plt.show()\n"
      ],
      "metadata": {
        "id": "X2DQdb15YZfr",
        "outputId": "95435221-82c6-4a45-dbd9-f7367eab6382",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 245
        }
      },
      "execution_count": 69,
      "outputs": [
        {
          "output_type": "error",
          "ename": "NameError",
          "evalue": "ignored",
          "traceback": [
            "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
            "\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)",
            "\u001b[0;32m<ipython-input-69-41580282a9ec>\u001b[0m in \u001b[0;36m<cell line: 8>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      6\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      7\u001b[0m \u001b[0;31m# Set the index column\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 8\u001b[0;31m \u001b[0mgwadjustments26\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mset_index\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m'team'\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0minplace\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mTrue\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      9\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     10\u001b[0m \u001b[0;31m# Create a color map\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;31mNameError\u001b[0m: name 'gwadjustments26' is not defined"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "plt.figure(figsize=(10, 6))\n",
        "\n",
        "scores_columns = ['gw2adjustment', 'gw3adjustment', 'gw4adjustment', 'gw5adjustment', 'gw6adjustment']\n",
        "\n",
        "bottom = [0] * len(gwadjustments26)\n",
        "\n",
        "for score_col in scores_columns:\n",
        "    plt.bar(gwadjustments26.index, gwadjustments26[score_col], bottom=bottom, label=score_col)\n",
        "    bottom += gwadjustments26[score_col]\n",
        "\n",
        "plt.xlabel('Teams')\n",
        "plt.ylabel('Score Adjustments')\n",
        "plt.title('Stacked GW Adjustments for Different Teams')\n",
        "plt.xticks(rotation=45)\n",
        "plt.legend()\n",
        "plt.tight_layout()\n",
        "\n",
        "plt.show()\n"
      ],
      "metadata": {
        "id": "z7T7SgQSYyL8",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 262
        },
        "outputId": "f572cae4-07e9-405c-e54b-527c2a146d51"
      },
      "execution_count": 70,
      "outputs": [
        {
          "output_type": "error",
          "ename": "NameError",
          "evalue": "ignored",
          "traceback": [
            "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
            "\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)",
            "\u001b[0;32m<ipython-input-70-34a67219a3b7>\u001b[0m in \u001b[0;36m<cell line: 5>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      3\u001b[0m \u001b[0mscores_columns\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m[\u001b[0m\u001b[0;34m'gw2adjustment'\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m'gw3adjustment'\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m'gw4adjustment'\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m'gw5adjustment'\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m'gw6adjustment'\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      4\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 5\u001b[0;31m \u001b[0mbottom\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m[\u001b[0m\u001b[0;36m0\u001b[0m\u001b[0;34m]\u001b[0m \u001b[0;34m*\u001b[0m \u001b[0mlen\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mgwadjustments26\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      6\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      7\u001b[0m \u001b[0;32mfor\u001b[0m \u001b[0mscore_col\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mscores_columns\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;31mNameError\u001b[0m: name 'gwadjustments26' is not defined"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1000x600 with 0 Axes>"
            ]
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "plt.figure(figsize=(10, 6))\n",
        "\n",
        "# Calculate the total score adjustments for each team\n",
        "gwadjustments26['Total'] = gwadjustments26.sum(axis=1)\n",
        "\n",
        "# Sort the DataFrame by the 'Total' column in descending order\n",
        "gwadjustments26 = gwadjustments26.sort_values(by='Total', ascending=False)\n",
        "\n",
        "# Get the scores columns\n",
        "scores_columns = ['gw2adjustment', 'gw3adjustment', 'gw4adjustment', 'gw5adjustment', 'gw6adjustment']\n",
        "\n",
        "bottom = [0] * len(gwadjustments26)\n",
        "\n",
        "for score_col in scores_columns:\n",
        "    plt.bar(gwadjustments26.index, gwadjustments26[score_col], bottom=bottom, label=score_col)\n",
        "    bottom += gwadjustments26[score_col]\n",
        "\n",
        "plt.xlabel('Teams')\n",
        "plt.ylabel('Score Adjustments')\n",
        "plt.title('Stacked GW Adjustments for Different Teams')\n",
        "plt.xticks(rotation=45)\n",
        "plt.legend()\n",
        "plt.tight_layout()\n",
        "\n",
        "plt.show()\n"
      ],
      "metadata": {
        "id": "XxE_pa9xZB8N",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 262
        },
        "outputId": "be0cf6f0-d59e-4d1f-d57f-711b4055bf2a"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "error",
          "ename": "NameError",
          "evalue": "ignored",
          "traceback": [
            "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
            "\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)",
            "\u001b[0;32m<ipython-input-86-af3019cce511>\u001b[0m in \u001b[0;36m<cell line: 4>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      2\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      3\u001b[0m \u001b[0;31m# Calculate the total score adjustments for each team\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 4\u001b[0;31m \u001b[0mgwadjustments26\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'Total'\u001b[0m\u001b[0;34m]\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mgwadjustments26\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0msum\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0maxis\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;36m1\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      5\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      6\u001b[0m \u001b[0;31m# Sort the DataFrame by the 'Total' column in descending order\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;31mNameError\u001b[0m: name 'gwadjustments26' is not defined"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1000x600 with 0 Axes>"
            ]
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import pandas as pd\n",
        "import seaborn as sns\n",
        "import matplotlib.pyplot as plt\n",
        "\n",
        "# Assuming you have already loaded the DataFrame named 'gwadjustments26'\n",
        "\n",
        "# Set the index column\n",
        "gwadjustments26.set_index('team', inplace=True)\n",
        "\n",
        "# Create a custom color map\n",
        "cmap = sns.diverging_palette(240, 10, n=21, as_cmap=True)\n",
        "colors = ['red', 'orange', 'green']\n",
        "\n",
        "# Define color thresholds\n",
        "color_thresholds = [0.9, 1.1, 2.0]\n",
        "\n",
        "# Normalize values for coloring\n",
        "normalized_values = (gwadjustments26 - 0.9) / (2.0 - 0.9)\n",
        "\n",
        "# Apply color map and thresholds\n",
        "colored_values = pd.cut(normalized_values, bins=color_thresholds, labels=colors)\n",
        "\n",
        "# Plot the heatmap with customized color coding\n",
        "plt.figure(figsize=(8, 6))\n",
        "sns.heatmap(normalized_values, annot=True, cmap=cmap, center=1, cbar=False, fmt=\".2f\", linewidths=0.5, linecolor='white')\n",
        "plt.title('Custom Color-Coded Table of GW Adjustments')\n",
        "plt.xticks(rotation=45)\n",
        "plt.show()\n"
      ],
      "metadata": {
        "id": "_YnxO1yMZekH",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 245
        },
        "outputId": "706096b5-1fac-4888-8789-a1953c3402ab"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "error",
          "ename": "NameError",
          "evalue": "ignored",
          "traceback": [
            "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
            "\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)",
            "\u001b[0;32m<ipython-input-87-6a2b296170b4>\u001b[0m in \u001b[0;36m<cell line: 8>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      6\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      7\u001b[0m \u001b[0;31m# Set the index column\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 8\u001b[0;31m \u001b[0mgwadjustments26\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mset_index\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m'team'\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0minplace\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mTrue\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      9\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     10\u001b[0m \u001b[0;31m# Create a custom color map\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;31mNameError\u001b[0m: name 'gwadjustments26' is not defined"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "plt.figure(figsize=(10, 8))\n",
        "\n",
        "# Calculate the total score adjustments for each team\n",
        "gwadjustments26['Total'] = gwadjustments26.sum(axis=1)\n",
        "\n",
        "# Sort the DataFrame by the 'Total' column in descending order\n",
        "gwadjustments26 = gwadjustments26.sort_values(by='Total', ascending=False)\n",
        "\n",
        "# Get the scores columns\n",
        "scores_columns = ['gw2adjustment', 'gw3adjustment', 'gw4adjustment', 'gw5adjustment', 'gw6adjustment']\n",
        "\n",
        "# Define color thresholds and corresponding colors\n",
        "color_thresholds = [0.9, 1.1, 2.0]\n",
        "colors = ['red', 'orange', 'green']\n",
        "\n",
        "bottom = [0] * len(gwadjustments26)\n",
        "\n",
        "for score_col in scores_columns:\n",
        "    adjusted_values = gwadjustments26[score_col]\n",
        "\n",
        "    # Create a color list based on thresholds\n",
        "    colors_for_col = [colors[-1] if val is None else\n",
        "                      colors[0] if val < color_thresholds[0] else\n",
        "                      colors[1] if val <= color_thresholds[1] else\n",
        "                      colors[2]\n",
        "                      for val in adjusted_values]\n",
        "\n",
        "    for i, (val, color) in enumerate(zip(adjusted_values, colors_for_col)):\n",
        "        plt.barh(gwadjustments26.index[i], val, color=color, edgecolor='white')\n",
        "\n",
        "    bottom += adjusted_values\n",
        "\n",
        "plt.xlabel('Score Adjustments')\n",
        "plt.ylabel('Teams')\n",
        "plt.title('Horizontally Stacked GW Adjustments for Different Teams')\n",
        "plt.legend(labels=scores_columns)\n",
        "plt.gca().invert_yaxis()  # Invert y-axis to have higher values at the top\n",
        "plt.tight_layout()\n",
        "\n",
        "plt.show()\n"
      ],
      "metadata": {
        "id": "5agSlfUragM2",
        "outputId": "8abcf64b-966c-4794-832d-035e14d3caea",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 262
        }
      },
      "execution_count": 71,
      "outputs": [
        {
          "output_type": "error",
          "ename": "NameError",
          "evalue": "ignored",
          "traceback": [
            "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
            "\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)",
            "\u001b[0;32m<ipython-input-71-2d5ab370e1c4>\u001b[0m in \u001b[0;36m<cell line: 4>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      2\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      3\u001b[0m \u001b[0;31m# Calculate the total score adjustments for each team\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 4\u001b[0;31m \u001b[0mgwadjustments26\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'Total'\u001b[0m\u001b[0;34m]\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mgwadjustments26\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0msum\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0maxis\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;36m1\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      5\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      6\u001b[0m \u001b[0;31m# Sort the DataFrame by the 'Total' column in descending order\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;31mNameError\u001b[0m: name 'gwadjustments26' is not defined"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1000x800 with 0 Axes>"
            ]
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import requests\n",
        "import pandas as pd\n",
        "from urllib.request import urlopen\n",
        "from json import loads\n",
        "from csv import writer\n",
        "\n",
        "def team_converter(team_id):\n",
        "    '''Converts a team's ID to their actual name'''\n",
        "    team_map = {\n",
        "        1: \"Arsenal\",\n",
        "        2: \"Aston Villa\",\n",
        "        3: \"Bournemouth\",\n",
        "        4: \"Brentford\",\n",
        "        5: \"Brighton\",\n",
        "        6: \"Burnley\",\n",
        "        7: \"Chelsea\",\n",
        "        8: \"Crystal Palace\",\n",
        "        9: \"Everton\",\n",
        "        10: \"Fulham\",\n",
        "        11: \"Liverpool\",\n",
        "        12: \"Luton Town\",\n",
        "        13: \"Manchester City\",\n",
        "        14: \"Manchester United\",\n",
        "        15: \"Newcastle United\",\n",
        "        16: \"Nottingham Forest\",\n",
        "        17: \"Sheffield United\",\n",
        "        18: \"Tottenham\",\n",
        "        19: \"West Ham\",\n",
        "        20: \"Wolverhampton Wanderers\",\n",
        "        None: None\n",
        "    }\n",
        "    return team_map.get(team_id, None)  # Use get to handle missing team IDs\n",
        "\n",
        "def position_converter(position):\n",
        "    '''Converts a player's element_type to their actual position'''\n",
        "    position_map = {\n",
        "        1: \"Goalkeeper\",\n",
        "        2: \"Defender\",\n",
        "        3: \"Midfielder\",\n",
        "        4: \"Forward\"\n",
        "    }\n",
        "    return position_map.get(position, None)  # Use get to handle missing positions\n",
        "\n",
        "def main():\n",
        "    team_entry_id = 6388102\n",
        "    url = f'https://fantasy.premierleague.com/api/entry/{team_entry_id}/transfers'\n",
        "\n",
        "    try:\n",
        "        response = requests.get(url)\n",
        "        response.raise_for_status()  # Check for any HTTP errors\n",
        "\n",
        "        transfers_data = response.json()\n",
        "\n",
        "        # Get player names from the provided API\n",
        "        player_ids_in = [transfer['element_in'] for transfer in transfers_data]\n",
        "        player_ids_out = [transfer.get('element_out', None) for transfer in transfers_data]\n",
        "\n",
        "        all_data = loads(urlopen(\"https://fantasy.premierleague.com/api/bootstrap-static/\").read())\n",
        "        players = all_data[\"elements\"]\n",
        "\n",
        "        # Build a dictionary of player names for players transferred in\n",
        "        player_names_in = {}\n",
        "        for player in players:\n",
        "            if player['id'] in player_ids_in:\n",
        "                player_names_in[player['id']] = f\"{player['first_name']} {player['second_name']}\"\n",
        "\n",
        "        # Build a dictionary of player names for players transferred out\n",
        "        player_names_out = {}\n",
        "        for player in players:\n",
        "            if player['id'] in player_ids_out:\n",
        "                player_names_out[player['id']] = f\"{player['first_name']} {player['second_name']}\"\n",
        "\n",
        "        # Replace player IDs with names and add additional data\n",
        "        transfer_data_with_info = []\n",
        "        for transfer in transfers_data:\n",
        "            player_in_name = player_names_in.get(transfer['element_in'], 'Unknown Player')\n",
        "            player_out_name = player_names_out.get(transfer['element_out'], 'Unknown Player') if transfer['element_out'] is not None else 'N/A'\n",
        "            transfer_info = {\n",
        "                'week': transfer['event'],\n",
        "                'player_in': player_in_name,\n",
        "                'player_out': player_out_name,\n",
        "                'cost_in': transfer['element_in_cost'] / 10,  # Convert to actual cost\n",
        "                'cost_out': transfer.get('element_out_cost', 0) / 10  # Convert to actual cost\n",
        "            }\n",
        "            transfer_data_with_info.append(transfer_info)\n",
        "\n",
        "        # Create a DataFrame\n",
        "        df = pd.DataFrame(transfer_data_with_info)\n",
        "\n",
        "        print(\"Transfers made by team entry\", team_entry_id)\n",
        "        print(df)\n",
        "\n",
        "    except requests.exceptions.HTTPError as errh:\n",
        "        print(\"HTTP Error:\", errh)\n",
        "    except requests.exceptions.ConnectionError as errc:\n",
        "        print(\"Error connecting:\", errc)\n",
        "    except requests.exceptions.Timeout as errt:\n",
        "        print(\"Timeout error:\", errt)\n",
        "    except requests.exceptions.RequestException as err:\n",
        "        print(\"An error occurred:\", err)\n",
        "\n",
        "if __name__ == \"__main__\":\n",
        "    main()\n"
      ],
      "metadata": {
        "id": "syMCbGo_mDoe",
        "outputId": "0a678a8f-8936-43c5-ad97-40fc9850a325",
        "colab": {
          "base_uri": "https://localhost:8080/"
        }
      },
      "execution_count": 72,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Transfers made by team entry 6388102\n",
            "    week           player_in                    player_out  cost_in  cost_out\n",
            "0     10         Bukayo Saka                 Son Heung-min      8.6       9.4\n",
            "1     10  Dominik Szoboszlai            Morgan Gibbs-White      7.0       5.8\n",
            "2      8       Ollie Watkins                Julián Álvarez      8.1       6.8\n",
            "3      8        Divin Mubama                Carlton Morris      4.3       5.6\n",
            "4      8         Jordan Ayew               Marcus Rashford      5.5       8.8\n",
            "5      8  Morgan Gibbs-White        Bruno Borges Fernandes      5.8       8.4\n",
            "6      8       Mohamed Salah                  Eberechi Eze     12.6       6.2\n",
            "7      8       Son Heung-min                   Bukayo Saka      9.4       8.5\n",
            "8      8            Dan Burn                   Sven Botman      4.6       4.6\n",
            "9      8          Pau Torres                   Kyle Walker      4.5       5.2\n",
            "10     8          Matty Cash                  Ben Chilwell      5.0       5.5\n",
            "11     8    Timothy Castagne              Pervis Estupiñán      4.5       5.1\n",
            "12     8         Pedro Porro                 Ethan Pinnock      5.1       4.5\n",
            "13     8     Alphonse Areola                 Sam Johnstone      4.2       4.5\n",
            "14     7      Carlton Morris                 William Osula      5.6       4.4\n",
            "15     6        Eberechi Eze      Gabriel Martinelli Silva      6.3       7.9\n",
            "16     5      Julián Álvarez                 Ollie Watkins      6.7       8.0\n",
            "17     5         Kyle Walker                George Baldock      5.2       4.0\n",
            "18     3       Ethan Pinnock  Gabriel dos Santos Magalhães      4.5       4.9\n",
            "19     3        Ben Chilwell                   John Stones      5.7       5.3\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import requests\n",
        "import pandas as pd\n",
        "from urllib.request import urlopen\n",
        "from json import loads\n",
        "from csv import writer\n",
        "\n",
        "def team_converter(team_id):\n",
        "    '''Converts a team's ID to their actual name'''\n",
        "    team_map = {\n",
        "        1: \"Arsenal\",\n",
        "        2: \"Aston Villa\",\n",
        "        3: \"Bournemouth\",\n",
        "        4: \"Brentford\",\n",
        "        5: \"Brighton\",\n",
        "        6: \"Burnley\",\n",
        "        7: \"Chelsea\",\n",
        "        8: \"Crystal Palace\",\n",
        "        9: \"Everton\",\n",
        "        10: \"Fulham\",\n",
        "        11: \"Liverpool\",\n",
        "        12: \"Luton Town\",\n",
        "        13: \"Manchester City\",\n",
        "        14: \"Manchester United\",\n",
        "        15: \"Newcastle United\",\n",
        "        16: \"Nottingham Forest\",\n",
        "        17: \"Sheffield United\",\n",
        "        18: \"Tottenham\",\n",
        "        19: \"West Ham\",\n",
        "        20: \"Wolverhampton Wanderers\",\n",
        "        None: None\n",
        "    }\n",
        "    return team_map.get(team_id, None)  # Use get to handle missing team IDs\n",
        "\n",
        "def position_converter(position):\n",
        "    '''Converts a player's element_type to their actual position'''\n",
        "    position_map = {\n",
        "        1: \"Goalkeeper\",\n",
        "        2: \"Defender\",\n",
        "        3: \"Midfielder\",\n",
        "        4: \"Forward\"\n",
        "    }\n",
        "    return position_map.get(position, None)  # Use get to handle missing positions\n",
        "\n",
        "def main():\n",
        "    team_entry_id = 275269\n",
        "    url = f'https://fantasy.premierleague.com/api/entry/{team_entry_id}/transfers'\n",
        "\n",
        "    try:\n",
        "        response = requests.get(url)\n",
        "        response.raise_for_status()  # Check for any HTTP errors\n",
        "\n",
        "        transfers_data = response.json()\n",
        "\n",
        "        # Get player names from the provided API\n",
        "        player_ids_in = [transfer['element_in'] for transfer in transfers_data]\n",
        "        player_ids_out = [transfer.get('element_out', None) for transfer in transfers_data]\n",
        "\n",
        "        all_data = loads(urlopen(\"https://fantasy.premierleague.com/api/bootstrap-static/\").read())\n",
        "        players = all_data[\"elements\"]\n",
        "\n",
        "        # Build a dictionary of player names for players transferred in\n",
        "        player_names_in = {}\n",
        "        for player in players:\n",
        "            if player['id'] in player_ids_in:\n",
        "                player_names_in[player['id']] = f\"{player['first_name']} {player['second_name']}\"\n",
        "\n",
        "        # Build a dictionary of player names for players transferred out\n",
        "        player_names_out = {}\n",
        "        for player in players:\n",
        "            if player['id'] in player_ids_out:\n",
        "                player_names_out[player['id']] = f\"{player['first_name']} {player['second_name']}\"\n",
        "\n",
        "        # Replace player IDs with names and add additional data\n",
        "        transfer_data_with_info = []\n",
        "        for transfer in transfers_data:\n",
        "            player_in_name = player_names_in.get(transfer['element_in'], 'Unknown Player')\n",
        "            player_out_name = player_names_out.get(transfer['element_out'], 'Unknown Player') if transfer['element_out'] is not None else 'N/A'\n",
        "            transfer_info = {\n",
        "                'week': transfer['event'],\n",
        "                'player_in': player_in_name,\n",
        "                'player_out': player_out_name,\n",
        "                'cost_in': transfer['element_in_cost'] / 10,  # Convert to actual cost\n",
        "                'cost_out': transfer.get('element_out_cost', 0) / 10  # Convert to actual cost\n",
        "            }\n",
        "            transfer_data_with_info.append(transfer_info)\n",
        "\n",
        "        # Create a DataFrame\n",
        "        df = pd.DataFrame(transfer_data_with_info)\n",
        "\n",
        "        print(\"Transfers made by team entry\", team_entry_id)\n",
        "        print(df)\n",
        "\n",
        "    except requests.exceptions.HTTPError as errh:\n",
        "        print(\"HTTP Error:\", errh)\n",
        "    except requests.exceptions.ConnectionError as errc:\n",
        "        print(\"Error connecting:\", errc)\n",
        "    except requests.exceptions.Timeout as errt:\n",
        "        print(\"Timeout error:\", errt)\n",
        "    except requests.exceptions.RequestException as err:\n",
        "        print(\"An error occurred:\", err)\n",
        "\n",
        "if __name__ == \"__main__\":\n",
        "    main()\n"
      ],
      "metadata": {
        "id": "NxkG0V2Eq5BY",
        "outputId": "4a7cf161-614d-43d2-b047-40e7162f6acd",
        "colab": {
          "base_uri": "https://localhost:8080/"
        }
      },
      "execution_count": 73,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Transfers made by team entry 275269\n",
            "    week               player_in                    player_out  cost_in  \\\n",
            "0     11          Julián Álvarez               Dominic Solanke      7.2   \n",
            "1     11   Konstantinos Tsimikas                    Matty Cash      4.6   \n",
            "2     10             Bukayo Saka        Bruno Borges Fernandes      8.6   \n",
            "3      8         Dominic Solanke                Carlton Morris      6.4   \n",
            "4      8  Bruno Borges Fernandes                  Jarrod Bowen      8.4   \n",
            "5      8     Oleksandr Zinchenko              Pervis Estupiñán      4.9   \n",
            "6      8   Alisson Ramses Becker               Thomas Kaminski      5.5   \n",
            "7      8             Pedro Porro                 Alfie Doughty      5.0   \n",
            "8      8          James Maddison        Bruno Borges Fernandes      7.9   \n",
            "9      8           Ollie Watkins                Erling Haaland      7.9   \n",
            "10     8            Jarrod Bowen               Marcus Rashford      7.2   \n",
            "11     8           Mohamed Salah                   Bukayo Saka     12.5   \n",
            "12     8         Kieran Trippier         Rúben Gato Alves Dias      6.7   \n",
            "13     8                Dan Burn                    Rico Henry      4.5   \n",
            "14     8              Matty Cash  Gabriel dos Santos Magalhães      4.8   \n",
            "15     8         Alphonse Areola               Jordan Pickford      4.2   \n",
            "16     7           Alfie Doughty                  Ben Chilwell      4.4   \n",
            "17     7         Thomas Kaminski                   Matt Turner      4.5   \n",
            "18     5          Carlton Morris               Nicolas Jackson      5.5   \n",
            "19     5           Son Heung-min        Richarlison de Andrade      9.1   \n",
            "20     3   Rúben Gato Alves Dias                     Luke Shaw      5.5   \n",
            "21     2            Ben Chilwell                   Reece James      5.6   \n",
            "\n",
            "    cost_out  \n",
            "0        6.4  \n",
            "1        5.0  \n",
            "2        8.3  \n",
            "3        5.5  \n",
            "4        7.2  \n",
            "5        5.1  \n",
            "6        4.5  \n",
            "7        4.4  \n",
            "8        8.4  \n",
            "9       14.0  \n",
            "10       8.9  \n",
            "11       8.6  \n",
            "12       5.5  \n",
            "13       4.5  \n",
            "14       4.7  \n",
            "15       4.4  \n",
            "16       5.6  \n",
            "17       4.0  \n",
            "18       7.1  \n",
            "19       6.8  \n",
            "20       5.5  \n",
            "21       5.5  \n"
          ]
        }
      ]
    }
  ]
}