{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "authorship_tag": "ABX9TyOg7dml4OA6vWQKo3LvlD1a",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/huricane85/FPL-API-Fixture-modeler/blob/main/FPL_Model_v1.2%20API%20data%2029.11.2023\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 1,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "b6S0KMo-gSGQ",
        "outputId": "85361009-c11f-49e0-b104-6e3f1b2c8a69"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Cloning into 'UnderstatScraper'...\n",
            "remote: Enumerating objects: 34, done.\u001b[K\n",
            "remote: Counting objects: 100% (34/34), done.\u001b[K\n",
            "remote: Compressing objects: 100% (31/31), done.\u001b[K\n",
            "remote: Total 34 (delta 11), reused 25 (delta 2), pack-reused 0\u001b[K\n",
            "Receiving objects: 100% (34/34), 268.30 KiB | 1.28 MiB/s, done.\n",
            "Resolving deltas: 100% (11/11), done.\n"
          ]
        }
      ],
      "source": [
        "!git clone https://github.com/doughagey/UnderstatScraper"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#!/usr/bin/env python3\n",
        "# -*- coding: utf-8 -*-\n",
        "\"\"\"\n",
        "Created on Mar 1 17:50:36 2020\n",
        "@author: doug hagey\n",
        "\"\"\"\n",
        "\n",
        "import pandas as pd\n",
        "import requests\n",
        "\n",
        "def scrape_understat(payload):\n",
        "    #Build request using url, headers (mimicking what Firefox does normally)\n",
        "    #Works best with verify=True as you won't get the ssl errors. Payload is\n",
        "    #taylored for each request\n",
        "    url = 'https://understat.com/main/getPlayersStats/'\n",
        "    headers = {'content-type':'application/json; charset=utf-8',\n",
        "    'Host': 'understat.com',\n",
        "    'User-Agent': 'Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:73.0) Gecko/20100101 Firefox/73.0',\n",
        "    'Accept': 'application/json, text/javascript, */*; q=0.01',\n",
        "    'Accept-Encoding': 'gzip, deflate, br',\n",
        "    'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8',\n",
        "    'X-Requested-With': 'XMLHttpRequest',\n",
        "    'Content-Length': '310',\n",
        "    'Origin': 'https: // understat.com',\n",
        "    'Connection': 'keep - alive',\n",
        "    'Referer': 'https: // understat.com / league / EPL'\n",
        "    }\n",
        "    response = requests.post(url, data=payload, headers = headers, verify=True)\n",
        "    response_json = response.json()\n",
        "    inner_wrapper = response_json['response']\n",
        "    json_player_data = inner_wrapper['players']\n",
        "    return json_player_data\n",
        "\n",
        "def clean_df(player_df, weeks):\n",
        "    # Get rid of the columns that we don't care about\n",
        "    #player_df.drop(['yellow_cards','red_cards', 'xGChain','xGBuildup','games','time'], axis=1, inplace=True)\n",
        "    player_df  = player_df.rename(columns={'goals':'goals_'+weeks,'xG':'xG_'+weeks,'assists':'assists_'+weeks, 'xA':'xA_'+weeks, 'shots':'shots_'+weeks, 'key_passes':\n",
        "        'key_passes_'+weeks,'npg':'npg_'+weeks,'npxG':'npxG_'+weeks})\n",
        "    if weeks != '1wks':\n",
        "        player_df.drop(['position','team_title'], axis=1, inplace=True)\n",
        "    return(player_df)\n",
        "\n",
        "#Creprint('Getting data for last 1 matches')\n",
        "json_player_data = scrape_understat({'league':'EPL', 'season':'2023', 'n_last_matches': '13'})\n",
        "one_game_table = pd.DataFrame(json_player_data)\n",
        "one_game_df = clean_df(one_game_table,'6wks')\n",
        "\n",
        "\n",
        "print('Getting data for the whole season')\n",
        "json_player_data = scrape_understat({'league':'EPL', 'season':'2023'})\n",
        "season_table = pd.DataFrame(json_player_data)\n",
        "season_df = clean_df(season_table, 'season')\n",
        "\n",
        "print('Getting data for last 1 matches')\n",
        "json_player_data = scrape_understat({'league':'EPL', 'season':'2023', 'n_last_matches': '13'})\n",
        "one_game_table = pd.DataFrame(json_player_data)\n",
        "one_game_df = clean_df(one_game_table, '1wks')\n",
        "\n",
        "print('Merging Tables')\n",
        "EPL_player_df = pd.merge(one_game_df, season_df, on=['id','player_name'])\n",
        "EPL_player_df = pd.merge(EPL_player_df, one_game_df, on=['id','player_name'])\n",
        "\n",
        "\n",
        "print('Writing CSV File')\n",
        "EPL_player_df.to_csv('Understat_EPL_Player_Data_Combined 2021.csv', encoding='utf-8', index=False)\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "D7aK55NHgZOt",
        "outputId": "fca358ee-c0ea-4534-c1a9-8411ed2bb198"
      },
      "execution_count": 2,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Getting data for the whole season\n",
            "Getting data for last 1 matches\n",
            "Merging Tables\n",
            "Writing CSV File\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "EPL_player_df = EPL_player_df.round(2)\n",
        "EPL_player_df"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 600
        },
        "id": "n__CYp9pmkGz",
        "outputId": "5450182c-47f8-4bea-a6bc-9a2695beec85"
      },
      "execution_count": 3,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "        id      player_name games_x time_x goals_1wks_x          xG_1wks_x  \\\n",
              "0     8260   Erling Haaland      13   1125           14  14.88079109787941   \n",
              "1     1250    Mohamed Salah      13   1155           10  8.706683784723282   \n",
              "2      453    Son Heung-Min      13   1109            8  5.040519125759602   \n",
              "3     1776     Jarrod Bowen      12   1080            8   5.48050481826067   \n",
              "4      468    Callum Wilson      10    475            7  7.311267621815205   \n",
              "..     ...              ...     ...    ...          ...                ...   \n",
              "473  12187     Jordan Clark       2     42            0                  0   \n",
              "474  12198    Ben Parkinson       1     18            0                  0   \n",
              "475  12199      Alex Murphy       1      1            0                  0   \n",
              "476  12200    Amadou Diallo       1      1            0                  0   \n",
              "477  12215  Michael Ndiweni       1      1            0                  0   \n",
              "\n",
              "    assists_1wks_x             xA_1wks_x shots_1wks_x key_passes_1wks_x  ...  \\\n",
              "0                3    2.7648311872035265           51                14  ...   \n",
              "1                5     6.265935506671667           38                29  ...   \n",
              "2                1     4.216130625456572           33                23  ...   \n",
              "3                1    1.9357469864189625           33                 9  ...   \n",
              "4                0  0.015900330618023872           21                 1  ...   \n",
              "..             ...                   ...          ...               ...  ...   \n",
              "473              0  0.028225945308804512            0                 1  ...   \n",
              "474              0                     0            0                 0  ...   \n",
              "475              0                     0            0                 0  ...   \n",
              "476              0                     0            0                 0  ...   \n",
              "477              0                     0            0                 0  ...   \n",
              "\n",
              "    shots_1wks_y key_passes_1wks_y yellow_cards red_cards position_y  \\\n",
              "0             51                14            0         0          F   \n",
              "1             38                29            1         0          F   \n",
              "2             33                23            0         0        F M   \n",
              "3             33                 9            1         0        F M   \n",
              "4             21                 1            1         0        F S   \n",
              "..           ...               ...          ...       ...        ...   \n",
              "473            0                 1            1         0          S   \n",
              "474            0                 0            0         0          S   \n",
              "475            0                 0            0         0          S   \n",
              "476            0                 0            0         0          S   \n",
              "477            0                 0            0         0          S   \n",
              "\n",
              "         team_title_y npg_1wks_y         npxG_1wks_y               xGChain  \\\n",
              "0     Manchester City         11  11.836115926504135     13.89440406113863   \n",
              "1           Liverpool          7   5.662082687020302    12.492922991514206   \n",
              "2           Tottenham          8   5.040519125759602    11.066001996397972   \n",
              "3            West Ham          8    5.48050481826067     5.945915225893259   \n",
              "4    Newcastle United          5  5.7889300510287285     6.403569312766194   \n",
              "..                ...        ...                 ...                   ...   \n",
              "473             Luton          0                   0  0.028225945308804512   \n",
              "474  Newcastle United          0                   0                     0   \n",
              "475  Newcastle United          0                   0                     0   \n",
              "476  Newcastle United          0                   0                     0   \n",
              "477  Newcastle United          0                   0                     0   \n",
              "\n",
              "              xGBuildup  \n",
              "0     1.295404177159071  \n",
              "1     3.551269993185997  \n",
              "2    3.0345652382820845  \n",
              "3    1.3222410827875137  \n",
              "4    0.8389131352305412  \n",
              "..                  ...  \n",
              "473                   0  \n",
              "474                   0  \n",
              "475                   0  \n",
              "476                   0  \n",
              "477                   0  \n",
              "\n",
              "[478 rows x 48 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-6d284b15-1139-4a34-9f8e-2cd637845ef7\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>player_name</th>\n",
              "      <th>games_x</th>\n",
              "      <th>time_x</th>\n",
              "      <th>goals_1wks_x</th>\n",
              "      <th>xG_1wks_x</th>\n",
              "      <th>assists_1wks_x</th>\n",
              "      <th>xA_1wks_x</th>\n",
              "      <th>shots_1wks_x</th>\n",
              "      <th>key_passes_1wks_x</th>\n",
              "      <th>...</th>\n",
              "      <th>shots_1wks_y</th>\n",
              "      <th>key_passes_1wks_y</th>\n",
              "      <th>yellow_cards</th>\n",
              "      <th>red_cards</th>\n",
              "      <th>position_y</th>\n",
              "      <th>team_title_y</th>\n",
              "      <th>npg_1wks_y</th>\n",
              "      <th>npxG_1wks_y</th>\n",
              "      <th>xGChain</th>\n",
              "      <th>xGBuildup</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>8260</td>\n",
              "      <td>Erling Haaland</td>\n",
              "      <td>13</td>\n",
              "      <td>1125</td>\n",
              "      <td>14</td>\n",
              "      <td>14.88079109787941</td>\n",
              "      <td>3</td>\n",
              "      <td>2.7648311872035265</td>\n",
              "      <td>51</td>\n",
              "      <td>14</td>\n",
              "      <td>...</td>\n",
              "      <td>51</td>\n",
              "      <td>14</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>F</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>11</td>\n",
              "      <td>11.836115926504135</td>\n",
              "      <td>13.89440406113863</td>\n",
              "      <td>1.295404177159071</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>1250</td>\n",
              "      <td>Mohamed Salah</td>\n",
              "      <td>13</td>\n",
              "      <td>1155</td>\n",
              "      <td>10</td>\n",
              "      <td>8.706683784723282</td>\n",
              "      <td>5</td>\n",
              "      <td>6.265935506671667</td>\n",
              "      <td>38</td>\n",
              "      <td>29</td>\n",
              "      <td>...</td>\n",
              "      <td>38</td>\n",
              "      <td>29</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>F</td>\n",
              "      <td>Liverpool</td>\n",
              "      <td>7</td>\n",
              "      <td>5.662082687020302</td>\n",
              "      <td>12.492922991514206</td>\n",
              "      <td>3.551269993185997</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>453</td>\n",
              "      <td>Son Heung-Min</td>\n",
              "      <td>13</td>\n",
              "      <td>1109</td>\n",
              "      <td>8</td>\n",
              "      <td>5.040519125759602</td>\n",
              "      <td>1</td>\n",
              "      <td>4.216130625456572</td>\n",
              "      <td>33</td>\n",
              "      <td>23</td>\n",
              "      <td>...</td>\n",
              "      <td>33</td>\n",
              "      <td>23</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>F M</td>\n",
              "      <td>Tottenham</td>\n",
              "      <td>8</td>\n",
              "      <td>5.040519125759602</td>\n",
              "      <td>11.066001996397972</td>\n",
              "      <td>3.0345652382820845</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>1776</td>\n",
              "      <td>Jarrod Bowen</td>\n",
              "      <td>12</td>\n",
              "      <td>1080</td>\n",
              "      <td>8</td>\n",
              "      <td>5.48050481826067</td>\n",
              "      <td>1</td>\n",
              "      <td>1.9357469864189625</td>\n",
              "      <td>33</td>\n",
              "      <td>9</td>\n",
              "      <td>...</td>\n",
              "      <td>33</td>\n",
              "      <td>9</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>F M</td>\n",
              "      <td>West Ham</td>\n",
              "      <td>8</td>\n",
              "      <td>5.48050481826067</td>\n",
              "      <td>5.945915225893259</td>\n",
              "      <td>1.3222410827875137</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>468</td>\n",
              "      <td>Callum Wilson</td>\n",
              "      <td>10</td>\n",
              "      <td>475</td>\n",
              "      <td>7</td>\n",
              "      <td>7.311267621815205</td>\n",
              "      <td>0</td>\n",
              "      <td>0.015900330618023872</td>\n",
              "      <td>21</td>\n",
              "      <td>1</td>\n",
              "      <td>...</td>\n",
              "      <td>21</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>F S</td>\n",
              "      <td>Newcastle United</td>\n",
              "      <td>5</td>\n",
              "      <td>5.7889300510287285</td>\n",
              "      <td>6.403569312766194</td>\n",
              "      <td>0.8389131352305412</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>473</th>\n",
              "      <td>12187</td>\n",
              "      <td>Jordan Clark</td>\n",
              "      <td>2</td>\n",
              "      <td>42</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.028225945308804512</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>S</td>\n",
              "      <td>Luton</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.028225945308804512</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>474</th>\n",
              "      <td>12198</td>\n",
              "      <td>Ben Parkinson</td>\n",
              "      <td>1</td>\n",
              "      <td>18</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>S</td>\n",
              "      <td>Newcastle United</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>475</th>\n",
              "      <td>12199</td>\n",
              "      <td>Alex Murphy</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>S</td>\n",
              "      <td>Newcastle United</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>476</th>\n",
              "      <td>12200</td>\n",
              "      <td>Amadou Diallo</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>S</td>\n",
              "      <td>Newcastle United</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>477</th>\n",
              "      <td>12215</td>\n",
              "      <td>Michael Ndiweni</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>S</td>\n",
              "      <td>Newcastle United</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>478 rows × 48 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-6d284b15-1139-4a34-9f8e-2cd637845ef7')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-6d284b15-1139-4a34-9f8e-2cd637845ef7 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-6d284b15-1139-4a34-9f8e-2cd637845ef7');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-8c9d9b9d-a42f-4c90-a196-53d19e3c506c\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-8c9d9b9d-a42f-4c90-a196-53d19e3c506c')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-8c9d9b9d-a42f-4c90-a196-53d19e3c506c button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 3
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "one_game_df.to_csv('one_game_df.csv', encoding='utf-8', index=False)\n",
        "one_game_df['time'] = one_game_df['time'].astype(int)\n",
        "one_game_df = one_game_df[one_game_df['time'] > 40]\n",
        "one_game_df['goals_1wks'] = one_game_df['goals_1wks'].astype(int)\n",
        "one_game_df['xG_1wks'] = one_game_df['xG_1wks'].astype(float)\n",
        "one_game_df['xgdifference'] = one_game_df.goals_1wks - one_game_df.xG_1wks\n",
        "one_game_df['assists_1wks'] = one_game_df['assists_1wks'].astype(int)\n",
        "one_game_df['xA_1wks'] = one_game_df['xA_1wks'].astype(float)\n",
        "one_game_df['xAdifference'] = one_game_df.assists_1wks - one_game_df.xA_1wks\n",
        "seasonedit = one_game_df.drop(columns=[ 'yellow_cards','red_cards','time'])\n",
        "sortXgDifference = seasonedit.sort_values('xgdifference')\n",
        "sortXgDifference.head(10)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "id": "IrXPzyJNg3ui",
        "outputId": "0acaf588-a8a6-4ae1-b066-b828f9e24c5f"
      },
      "execution_count": 4,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "<ipython-input-4-30b8c2331977>:4: SettingWithCopyWarning: \n",
            "A value is trying to be set on a copy of a slice from a DataFrame.\n",
            "Try using .loc[row_indexer,col_indexer] = value instead\n",
            "\n",
            "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
            "  one_game_df['goals_1wks'] = one_game_df['goals_1wks'].astype(int)\n",
            "<ipython-input-4-30b8c2331977>:5: SettingWithCopyWarning: \n",
            "A value is trying to be set on a copy of a slice from a DataFrame.\n",
            "Try using .loc[row_indexer,col_indexer] = value instead\n",
            "\n",
            "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
            "  one_game_df['xG_1wks'] = one_game_df['xG_1wks'].astype(float)\n",
            "<ipython-input-4-30b8c2331977>:6: SettingWithCopyWarning: \n",
            "A value is trying to be set on a copy of a slice from a DataFrame.\n",
            "Try using .loc[row_indexer,col_indexer] = value instead\n",
            "\n",
            "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
            "  one_game_df['xgdifference'] = one_game_df.goals_1wks - one_game_df.xG_1wks\n",
            "<ipython-input-4-30b8c2331977>:7: SettingWithCopyWarning: \n",
            "A value is trying to be set on a copy of a slice from a DataFrame.\n",
            "Try using .loc[row_indexer,col_indexer] = value instead\n",
            "\n",
            "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
            "  one_game_df['assists_1wks'] = one_game_df['assists_1wks'].astype(int)\n",
            "<ipython-input-4-30b8c2331977>:8: SettingWithCopyWarning: \n",
            "A value is trying to be set on a copy of a slice from a DataFrame.\n",
            "Try using .loc[row_indexer,col_indexer] = value instead\n",
            "\n",
            "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
            "  one_game_df['xA_1wks'] = one_game_df['xA_1wks'].astype(float)\n",
            "<ipython-input-4-30b8c2331977>:9: SettingWithCopyWarning: \n",
            "A value is trying to be set on a copy of a slice from a DataFrame.\n",
            "Try using .loc[row_indexer,col_indexer] = value instead\n",
            "\n",
            "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
            "  one_game_df['xAdifference'] = one_game_df.assists_1wks - one_game_df.xA_1wks\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "        id         player_name games  goals_1wks   xG_1wks  assists_1wks  \\\n",
              "24   10720        Darwin Núñez    12           4  7.359475             4   \n",
              "53     556     Marcus Rashford    12           2  5.070473             1   \n",
              "420  11055      Rasmus Højlund     9           0  3.012474             0   \n",
              "106   3621         Neal Maupay    10           1  3.819788             2   \n",
              "430  11356      Enzo Fernández    12           0  2.603510             0   \n",
              "7     8865       Ollie Watkins    13           7  9.277923             5   \n",
              "10   10048     Nicolas Jackson    12           6  8.140226             0   \n",
              "35    5786         Yoane Wissa    13           3  4.986425             1   \n",
              "17    1726  Abdoulaye Doucouré    13           4  5.952107             0   \n",
              "112   6026         Richarlison    10           1  2.951672             3   \n",
              "\n",
              "      xA_1wks shots_1wks key_passes_1wks position         team_title npg_1wks  \\\n",
              "24   2.115555         39               8      F S          Liverpool        4   \n",
              "53   1.562463         37              14      F M  Manchester United        1   \n",
              "420  0.467619         14               7      F S  Manchester United        0   \n",
              "106  0.980366         20               5      F S  Brentford,Everton        1   \n",
              "430  1.619420         22              14        M            Chelsea        0   \n",
              "7    3.203844         39              21        F        Aston Villa        7   \n",
              "10   0.735105         33               7      F S            Chelsea        6   \n",
              "35   1.429829         32              12        F          Brentford        3   \n",
              "17   1.706072         22              19        M            Everton        4   \n",
              "112  0.880545         22               7    F M S          Tottenham        1   \n",
              "\n",
              "              npxG_1wks             xGChain           xGBuildup  xgdifference  \\\n",
              "24    7.359475486911833   9.754888013005257   1.656997974961996     -3.359475   \n",
              "53     4.30930445343256   7.992390006780624  2.7305994369089603     -3.070473   \n",
              "420  3.0124735310673714  3.0765266567468643  0.6217476911842823     -3.012474   \n",
              "106   3.819787848740816   5.625621799379587  1.3032503798604012     -2.819788   \n",
              "430  1.8423407915979624   6.478746071457863   4.448107570409775     -2.603510   \n",
              "7     9.277923479676247  13.212159842252731   1.670118359848857     -2.277923   \n",
              "10    8.140225995332003   9.027558777481318   1.306454386562109     -2.140226   \n",
              "35    4.986424524337053  7.1532596461474895  2.1846176758408546     -1.986425   \n",
              "17    5.952106729149818   7.417679753154516   3.023614801466465     -1.952107   \n",
              "112   2.951672403141856   4.184897594153881  0.7647342011332512     -1.951672   \n",
              "\n",
              "     xAdifference  \n",
              "24       1.884445  \n",
              "53      -0.562463  \n",
              "420     -0.467619  \n",
              "106      1.019634  \n",
              "430     -1.619420  \n",
              "7        1.796156  \n",
              "10      -0.735105  \n",
              "35      -0.429829  \n",
              "17      -1.706072  \n",
              "112      2.119455  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-7a16ad87-6cd1-4cd5-b52a-f48c285a41e9\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>player_name</th>\n",
              "      <th>games</th>\n",
              "      <th>goals_1wks</th>\n",
              "      <th>xG_1wks</th>\n",
              "      <th>assists_1wks</th>\n",
              "      <th>xA_1wks</th>\n",
              "      <th>shots_1wks</th>\n",
              "      <th>key_passes_1wks</th>\n",
              "      <th>position</th>\n",
              "      <th>team_title</th>\n",
              "      <th>npg_1wks</th>\n",
              "      <th>npxG_1wks</th>\n",
              "      <th>xGChain</th>\n",
              "      <th>xGBuildup</th>\n",
              "      <th>xgdifference</th>\n",
              "      <th>xAdifference</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>24</th>\n",
              "      <td>10720</td>\n",
              "      <td>Darwin Núñez</td>\n",
              "      <td>12</td>\n",
              "      <td>4</td>\n",
              "      <td>7.359475</td>\n",
              "      <td>4</td>\n",
              "      <td>2.115555</td>\n",
              "      <td>39</td>\n",
              "      <td>8</td>\n",
              "      <td>F S</td>\n",
              "      <td>Liverpool</td>\n",
              "      <td>4</td>\n",
              "      <td>7.359475486911833</td>\n",
              "      <td>9.754888013005257</td>\n",
              "      <td>1.656997974961996</td>\n",
              "      <td>-3.359475</td>\n",
              "      <td>1.884445</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>53</th>\n",
              "      <td>556</td>\n",
              "      <td>Marcus Rashford</td>\n",
              "      <td>12</td>\n",
              "      <td>2</td>\n",
              "      <td>5.070473</td>\n",
              "      <td>1</td>\n",
              "      <td>1.562463</td>\n",
              "      <td>37</td>\n",
              "      <td>14</td>\n",
              "      <td>F M</td>\n",
              "      <td>Manchester United</td>\n",
              "      <td>1</td>\n",
              "      <td>4.30930445343256</td>\n",
              "      <td>7.992390006780624</td>\n",
              "      <td>2.7305994369089603</td>\n",
              "      <td>-3.070473</td>\n",
              "      <td>-0.562463</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>420</th>\n",
              "      <td>11055</td>\n",
              "      <td>Rasmus Højlund</td>\n",
              "      <td>9</td>\n",
              "      <td>0</td>\n",
              "      <td>3.012474</td>\n",
              "      <td>0</td>\n",
              "      <td>0.467619</td>\n",
              "      <td>14</td>\n",
              "      <td>7</td>\n",
              "      <td>F S</td>\n",
              "      <td>Manchester United</td>\n",
              "      <td>0</td>\n",
              "      <td>3.0124735310673714</td>\n",
              "      <td>3.0765266567468643</td>\n",
              "      <td>0.6217476911842823</td>\n",
              "      <td>-3.012474</td>\n",
              "      <td>-0.467619</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>106</th>\n",
              "      <td>3621</td>\n",
              "      <td>Neal Maupay</td>\n",
              "      <td>10</td>\n",
              "      <td>1</td>\n",
              "      <td>3.819788</td>\n",
              "      <td>2</td>\n",
              "      <td>0.980366</td>\n",
              "      <td>20</td>\n",
              "      <td>5</td>\n",
              "      <td>F S</td>\n",
              "      <td>Brentford,Everton</td>\n",
              "      <td>1</td>\n",
              "      <td>3.819787848740816</td>\n",
              "      <td>5.625621799379587</td>\n",
              "      <td>1.3032503798604012</td>\n",
              "      <td>-2.819788</td>\n",
              "      <td>1.019634</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>430</th>\n",
              "      <td>11356</td>\n",
              "      <td>Enzo Fernández</td>\n",
              "      <td>12</td>\n",
              "      <td>0</td>\n",
              "      <td>2.603510</td>\n",
              "      <td>0</td>\n",
              "      <td>1.619420</td>\n",
              "      <td>22</td>\n",
              "      <td>14</td>\n",
              "      <td>M</td>\n",
              "      <td>Chelsea</td>\n",
              "      <td>0</td>\n",
              "      <td>1.8423407915979624</td>\n",
              "      <td>6.478746071457863</td>\n",
              "      <td>4.448107570409775</td>\n",
              "      <td>-2.603510</td>\n",
              "      <td>-1.619420</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>8865</td>\n",
              "      <td>Ollie Watkins</td>\n",
              "      <td>13</td>\n",
              "      <td>7</td>\n",
              "      <td>9.277923</td>\n",
              "      <td>5</td>\n",
              "      <td>3.203844</td>\n",
              "      <td>39</td>\n",
              "      <td>21</td>\n",
              "      <td>F</td>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>7</td>\n",
              "      <td>9.277923479676247</td>\n",
              "      <td>13.212159842252731</td>\n",
              "      <td>1.670118359848857</td>\n",
              "      <td>-2.277923</td>\n",
              "      <td>1.796156</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10</th>\n",
              "      <td>10048</td>\n",
              "      <td>Nicolas Jackson</td>\n",
              "      <td>12</td>\n",
              "      <td>6</td>\n",
              "      <td>8.140226</td>\n",
              "      <td>0</td>\n",
              "      <td>0.735105</td>\n",
              "      <td>33</td>\n",
              "      <td>7</td>\n",
              "      <td>F S</td>\n",
              "      <td>Chelsea</td>\n",
              "      <td>6</td>\n",
              "      <td>8.140225995332003</td>\n",
              "      <td>9.027558777481318</td>\n",
              "      <td>1.306454386562109</td>\n",
              "      <td>-2.140226</td>\n",
              "      <td>-0.735105</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>35</th>\n",
              "      <td>5786</td>\n",
              "      <td>Yoane Wissa</td>\n",
              "      <td>13</td>\n",
              "      <td>3</td>\n",
              "      <td>4.986425</td>\n",
              "      <td>1</td>\n",
              "      <td>1.429829</td>\n",
              "      <td>32</td>\n",
              "      <td>12</td>\n",
              "      <td>F</td>\n",
              "      <td>Brentford</td>\n",
              "      <td>3</td>\n",
              "      <td>4.986424524337053</td>\n",
              "      <td>7.1532596461474895</td>\n",
              "      <td>2.1846176758408546</td>\n",
              "      <td>-1.986425</td>\n",
              "      <td>-0.429829</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>17</th>\n",
              "      <td>1726</td>\n",
              "      <td>Abdoulaye Doucouré</td>\n",
              "      <td>13</td>\n",
              "      <td>4</td>\n",
              "      <td>5.952107</td>\n",
              "      <td>0</td>\n",
              "      <td>1.706072</td>\n",
              "      <td>22</td>\n",
              "      <td>19</td>\n",
              "      <td>M</td>\n",
              "      <td>Everton</td>\n",
              "      <td>4</td>\n",
              "      <td>5.952106729149818</td>\n",
              "      <td>7.417679753154516</td>\n",
              "      <td>3.023614801466465</td>\n",
              "      <td>-1.952107</td>\n",
              "      <td>-1.706072</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>112</th>\n",
              "      <td>6026</td>\n",
              "      <td>Richarlison</td>\n",
              "      <td>10</td>\n",
              "      <td>1</td>\n",
              "      <td>2.951672</td>\n",
              "      <td>3</td>\n",
              "      <td>0.880545</td>\n",
              "      <td>22</td>\n",
              "      <td>7</td>\n",
              "      <td>F M S</td>\n",
              "      <td>Tottenham</td>\n",
              "      <td>1</td>\n",
              "      <td>2.951672403141856</td>\n",
              "      <td>4.184897594153881</td>\n",
              "      <td>0.7647342011332512</td>\n",
              "      <td>-1.951672</td>\n",
              "      <td>2.119455</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-7a16ad87-6cd1-4cd5-b52a-f48c285a41e9')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-7a16ad87-6cd1-4cd5-b52a-f48c285a41e9 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-7a16ad87-6cd1-4cd5-b52a-f48c285a41e9');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-7676cbaf-128e-4cef-8259-288cf4c1878f\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-7676cbaf-128e-4cef-8259-288cf4c1878f')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-7676cbaf-128e-4cef-8259-288cf4c1878f button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 4
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "sortXgDifference.tail(10)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 502
        },
        "id": "UxuLfRINhwx7",
        "outputId": "06ddb1e3-6f67-4c0c-ec8d-46d1bf332869"
      },
      "execution_count": 5,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "       id      player_name games  goals_1wks   xG_1wks  assists_1wks  \\\n",
              "74   9912   Cameron Archer    11           2  0.519985             0   \n",
              "28   2496            Rodri    11           3  1.423486             2   \n",
              "30   3635   Bernardo Silva    10           3  1.151179             3   \n",
              "34   5560  Scott McTominay    10           3  1.126487             0   \n",
              "14   6122     Douglas Luiz    13           5  2.964310             2   \n",
              "6    8845   Hee-Chan Hwang    13           7  4.612692             2   \n",
              "3    1776     Jarrod Bowen    12           8  5.480505             1   \n",
              "42   7166   Mathias Jensen    12           3  0.475169             2   \n",
              "2     453    Son Heung-Min    13           8  5.040519             1   \n",
              "11  10177    Evan Ferguson    12           6  2.590489             0   \n",
              "\n",
              "     xA_1wks shots_1wks key_passes_1wks position  \\\n",
              "74  1.051102         10              10      F S   \n",
              "28  2.103703         20              12        M   \n",
              "30  3.139744          7              20      M S   \n",
              "34  0.036888         11               1      M S   \n",
              "14  1.156587         20              16        M   \n",
              "6   2.051958         21              11    F M S   \n",
              "3   1.935747         33               9      F M   \n",
              "42  2.500248          7              20        M   \n",
              "2   4.216131         33              23      F M   \n",
              "11  0.559289         19               4      F S   \n",
              "\n",
              "                      team_title npg_1wks            npxG_1wks  \\\n",
              "74  Aston Villa,Sheffield United        2   0.5199847482144833   \n",
              "28               Manchester City        3    1.423485530540347   \n",
              "30               Manchester City        3   1.1511792689561844   \n",
              "34             Manchester United        3   1.1264873836189508   \n",
              "14                   Aston Villa        2   0.6808030409738421   \n",
              "6        Wolverhampton Wanderers        6     3.85152318328619   \n",
              "3                       West Ham        8     5.48050481826067   \n",
              "42                     Brentford        3  0.47516870498657227   \n",
              "2                      Tottenham        8    5.040519125759602   \n",
              "11                      Brighton        6   2.5904888343065977   \n",
              "\n",
              "               xGChain           xGBuildup  xgdifference  xAdifference  \n",
              "74   2.204303334467113  0.6332168290391564      1.480015     -1.051102  \n",
              "28  10.773196816444397   9.544605821371078      1.576514     -0.103703  \n",
              "30   8.386326586827636   5.791346138343215      1.848821     -0.139744  \n",
              "34  1.2722102086991072  0.6640248671174049      1.873513     -0.036888  \n",
              "14   7.596752915531397   7.015871906653047      2.035690      0.843413  \n",
              "6    6.081193865276873  1.6883518742397428      2.387308     -0.051958  \n",
              "3    5.945915225893259  1.3222410827875137      2.519495     -0.935747  \n",
              "42  5.3663221672177315    4.68579095415771      2.524831     -0.500248  \n",
              "2   11.066001996397972  3.0345652382820845      2.959481     -3.216131  \n",
              "11  4.9372129291296005   1.907409641891718      3.409511     -0.559289  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-9895e870-acea-49d6-80fc-6b45157fa1fa\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>player_name</th>\n",
              "      <th>games</th>\n",
              "      <th>goals_1wks</th>\n",
              "      <th>xG_1wks</th>\n",
              "      <th>assists_1wks</th>\n",
              "      <th>xA_1wks</th>\n",
              "      <th>shots_1wks</th>\n",
              "      <th>key_passes_1wks</th>\n",
              "      <th>position</th>\n",
              "      <th>team_title</th>\n",
              "      <th>npg_1wks</th>\n",
              "      <th>npxG_1wks</th>\n",
              "      <th>xGChain</th>\n",
              "      <th>xGBuildup</th>\n",
              "      <th>xgdifference</th>\n",
              "      <th>xAdifference</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>74</th>\n",
              "      <td>9912</td>\n",
              "      <td>Cameron Archer</td>\n",
              "      <td>11</td>\n",
              "      <td>2</td>\n",
              "      <td>0.519985</td>\n",
              "      <td>0</td>\n",
              "      <td>1.051102</td>\n",
              "      <td>10</td>\n",
              "      <td>10</td>\n",
              "      <td>F S</td>\n",
              "      <td>Aston Villa,Sheffield United</td>\n",
              "      <td>2</td>\n",
              "      <td>0.5199847482144833</td>\n",
              "      <td>2.204303334467113</td>\n",
              "      <td>0.6332168290391564</td>\n",
              "      <td>1.480015</td>\n",
              "      <td>-1.051102</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>28</th>\n",
              "      <td>2496</td>\n",
              "      <td>Rodri</td>\n",
              "      <td>11</td>\n",
              "      <td>3</td>\n",
              "      <td>1.423486</td>\n",
              "      <td>2</td>\n",
              "      <td>2.103703</td>\n",
              "      <td>20</td>\n",
              "      <td>12</td>\n",
              "      <td>M</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>3</td>\n",
              "      <td>1.423485530540347</td>\n",
              "      <td>10.773196816444397</td>\n",
              "      <td>9.544605821371078</td>\n",
              "      <td>1.576514</td>\n",
              "      <td>-0.103703</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>30</th>\n",
              "      <td>3635</td>\n",
              "      <td>Bernardo Silva</td>\n",
              "      <td>10</td>\n",
              "      <td>3</td>\n",
              "      <td>1.151179</td>\n",
              "      <td>3</td>\n",
              "      <td>3.139744</td>\n",
              "      <td>7</td>\n",
              "      <td>20</td>\n",
              "      <td>M S</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>3</td>\n",
              "      <td>1.1511792689561844</td>\n",
              "      <td>8.386326586827636</td>\n",
              "      <td>5.791346138343215</td>\n",
              "      <td>1.848821</td>\n",
              "      <td>-0.139744</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>34</th>\n",
              "      <td>5560</td>\n",
              "      <td>Scott McTominay</td>\n",
              "      <td>10</td>\n",
              "      <td>3</td>\n",
              "      <td>1.126487</td>\n",
              "      <td>0</td>\n",
              "      <td>0.036888</td>\n",
              "      <td>11</td>\n",
              "      <td>1</td>\n",
              "      <td>M S</td>\n",
              "      <td>Manchester United</td>\n",
              "      <td>3</td>\n",
              "      <td>1.1264873836189508</td>\n",
              "      <td>1.2722102086991072</td>\n",
              "      <td>0.6640248671174049</td>\n",
              "      <td>1.873513</td>\n",
              "      <td>-0.036888</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>14</th>\n",
              "      <td>6122</td>\n",
              "      <td>Douglas Luiz</td>\n",
              "      <td>13</td>\n",
              "      <td>5</td>\n",
              "      <td>2.964310</td>\n",
              "      <td>2</td>\n",
              "      <td>1.156587</td>\n",
              "      <td>20</td>\n",
              "      <td>16</td>\n",
              "      <td>M</td>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>2</td>\n",
              "      <td>0.6808030409738421</td>\n",
              "      <td>7.596752915531397</td>\n",
              "      <td>7.015871906653047</td>\n",
              "      <td>2.035690</td>\n",
              "      <td>0.843413</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>8845</td>\n",
              "      <td>Hee-Chan Hwang</td>\n",
              "      <td>13</td>\n",
              "      <td>7</td>\n",
              "      <td>4.612692</td>\n",
              "      <td>2</td>\n",
              "      <td>2.051958</td>\n",
              "      <td>21</td>\n",
              "      <td>11</td>\n",
              "      <td>F M S</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>6</td>\n",
              "      <td>3.85152318328619</td>\n",
              "      <td>6.081193865276873</td>\n",
              "      <td>1.6883518742397428</td>\n",
              "      <td>2.387308</td>\n",
              "      <td>-0.051958</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>1776</td>\n",
              "      <td>Jarrod Bowen</td>\n",
              "      <td>12</td>\n",
              "      <td>8</td>\n",
              "      <td>5.480505</td>\n",
              "      <td>1</td>\n",
              "      <td>1.935747</td>\n",
              "      <td>33</td>\n",
              "      <td>9</td>\n",
              "      <td>F M</td>\n",
              "      <td>West Ham</td>\n",
              "      <td>8</td>\n",
              "      <td>5.48050481826067</td>\n",
              "      <td>5.945915225893259</td>\n",
              "      <td>1.3222410827875137</td>\n",
              "      <td>2.519495</td>\n",
              "      <td>-0.935747</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>42</th>\n",
              "      <td>7166</td>\n",
              "      <td>Mathias Jensen</td>\n",
              "      <td>12</td>\n",
              "      <td>3</td>\n",
              "      <td>0.475169</td>\n",
              "      <td>2</td>\n",
              "      <td>2.500248</td>\n",
              "      <td>7</td>\n",
              "      <td>20</td>\n",
              "      <td>M</td>\n",
              "      <td>Brentford</td>\n",
              "      <td>3</td>\n",
              "      <td>0.47516870498657227</td>\n",
              "      <td>5.3663221672177315</td>\n",
              "      <td>4.68579095415771</td>\n",
              "      <td>2.524831</td>\n",
              "      <td>-0.500248</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>453</td>\n",
              "      <td>Son Heung-Min</td>\n",
              "      <td>13</td>\n",
              "      <td>8</td>\n",
              "      <td>5.040519</td>\n",
              "      <td>1</td>\n",
              "      <td>4.216131</td>\n",
              "      <td>33</td>\n",
              "      <td>23</td>\n",
              "      <td>F M</td>\n",
              "      <td>Tottenham</td>\n",
              "      <td>8</td>\n",
              "      <td>5.040519125759602</td>\n",
              "      <td>11.066001996397972</td>\n",
              "      <td>3.0345652382820845</td>\n",
              "      <td>2.959481</td>\n",
              "      <td>-3.216131</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>11</th>\n",
              "      <td>10177</td>\n",
              "      <td>Evan Ferguson</td>\n",
              "      <td>12</td>\n",
              "      <td>6</td>\n",
              "      <td>2.590489</td>\n",
              "      <td>0</td>\n",
              "      <td>0.559289</td>\n",
              "      <td>19</td>\n",
              "      <td>4</td>\n",
              "      <td>F S</td>\n",
              "      <td>Brighton</td>\n",
              "      <td>6</td>\n",
              "      <td>2.5904888343065977</td>\n",
              "      <td>4.9372129291296005</td>\n",
              "      <td>1.907409641891718</td>\n",
              "      <td>3.409511</td>\n",
              "      <td>-0.559289</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-9895e870-acea-49d6-80fc-6b45157fa1fa')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-9895e870-acea-49d6-80fc-6b45157fa1fa button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-9895e870-acea-49d6-80fc-6b45157fa1fa');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-a43ec5a1-517e-4e14-a175-fa77639b53bf\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-a43ec5a1-517e-4e14-a175-fa77639b53bf')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-a43ec5a1-517e-4e14-a175-fa77639b53bf button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 5
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "one_game_df"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 548
        },
        "id": "NDPdgpJUVBBZ",
        "outputId": "393cc5c7-779d-4044-875e-ee858315ef78"
      },
      "execution_count": 6,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "        id     player_name games  time  goals_1wks    xG_1wks  assists_1wks  \\\n",
              "0     8260  Erling Haaland    13  1125          14  14.880791             3   \n",
              "1     1250   Mohamed Salah    13  1155          10   8.706684             5   \n",
              "2      453   Son Heung-Min    13  1109           8   5.040519             1   \n",
              "3     1776    Jarrod Bowen    12  1080           8   5.480505             1   \n",
              "4      468   Callum Wilson    10   475           7   7.311268             0   \n",
              "..     ...             ...   ...   ...         ...        ...           ...   \n",
              "466  12094     Mike Trésor     6   225           0   0.598051             0   \n",
              "468  12123         Murillo     7   619           0   0.580795             0   \n",
              "469  12149      Alex Scott     3   194           0   0.082303             0   \n",
              "470  12151    Gabriel Osho     4   328           0   0.000000             0   \n",
              "473  12187    Jordan Clark     2    42           0   0.000000             0   \n",
              "\n",
              "      xA_1wks shots_1wks key_passes_1wks yellow_cards red_cards position  \\\n",
              "0    2.764831         51              14            0         0        F   \n",
              "1    6.265936         38              29            1         0        F   \n",
              "2    4.216131         33              23            0         0      F M   \n",
              "3    1.935747         33               9            1         0      F M   \n",
              "4    0.015900         21               1            1         0      F S   \n",
              "..        ...        ...             ...          ...       ...      ...   \n",
              "466  0.480966          3               4            0         0    F M S   \n",
              "468  0.493345          4               4            1         0        D   \n",
              "469  0.089547          2               1            1         0        M   \n",
              "470  0.000000          0               0            1         0        D   \n",
              "473  0.028226          0               1            1         0        S   \n",
              "\n",
              "            team_title npg_1wks            npxG_1wks               xGChain  \\\n",
              "0      Manchester City       11   11.836115926504135     13.89440406113863   \n",
              "1            Liverpool        7    5.662082687020302    12.492922991514206   \n",
              "2            Tottenham        8    5.040519125759602    11.066001996397972   \n",
              "3             West Ham        8     5.48050481826067     5.945915225893259   \n",
              "4     Newcastle United        5   5.7889300510287285     6.403569312766194   \n",
              "..                 ...      ...                  ...                   ...   \n",
              "466            Burnley        0   0.5980505794286728    0.8063931241631508   \n",
              "468  Nottingham Forest        0   0.5807948000729084     2.620275741443038   \n",
              "469        Bournemouth        0  0.08230337873101234    0.9122739285230637   \n",
              "470              Luton        0                    0                     0   \n",
              "473              Luton        0                    0  0.028225945308804512   \n",
              "\n",
              "               xGBuildup  xgdifference  xAdifference  \n",
              "0      1.295404177159071     -0.880791      0.235169  \n",
              "1      3.551269993185997      1.293316     -1.265936  \n",
              "2     3.0345652382820845      2.959481     -3.216131  \n",
              "3     1.3222410827875137      2.519495     -0.935747  \n",
              "4     0.8389131352305412     -0.311268     -0.015900  \n",
              "..                   ...           ...           ...  \n",
              "466  0.16356592625379562     -0.598051     -0.480966  \n",
              "468   2.3173015769571066     -0.580795     -0.493345  \n",
              "469   0.8663346916437149     -0.082303     -0.089547  \n",
              "470                    0      0.000000      0.000000  \n",
              "473                    0      0.000000     -0.028226  \n",
              "\n",
              "[426 rows x 20 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-0dfe0e9c-c9e1-49a3-892f-6681db02316f\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>player_name</th>\n",
              "      <th>games</th>\n",
              "      <th>time</th>\n",
              "      <th>goals_1wks</th>\n",
              "      <th>xG_1wks</th>\n",
              "      <th>assists_1wks</th>\n",
              "      <th>xA_1wks</th>\n",
              "      <th>shots_1wks</th>\n",
              "      <th>key_passes_1wks</th>\n",
              "      <th>yellow_cards</th>\n",
              "      <th>red_cards</th>\n",
              "      <th>position</th>\n",
              "      <th>team_title</th>\n",
              "      <th>npg_1wks</th>\n",
              "      <th>npxG_1wks</th>\n",
              "      <th>xGChain</th>\n",
              "      <th>xGBuildup</th>\n",
              "      <th>xgdifference</th>\n",
              "      <th>xAdifference</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>8260</td>\n",
              "      <td>Erling Haaland</td>\n",
              "      <td>13</td>\n",
              "      <td>1125</td>\n",
              "      <td>14</td>\n",
              "      <td>14.880791</td>\n",
              "      <td>3</td>\n",
              "      <td>2.764831</td>\n",
              "      <td>51</td>\n",
              "      <td>14</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>F</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>11</td>\n",
              "      <td>11.836115926504135</td>\n",
              "      <td>13.89440406113863</td>\n",
              "      <td>1.295404177159071</td>\n",
              "      <td>-0.880791</td>\n",
              "      <td>0.235169</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>1250</td>\n",
              "      <td>Mohamed Salah</td>\n",
              "      <td>13</td>\n",
              "      <td>1155</td>\n",
              "      <td>10</td>\n",
              "      <td>8.706684</td>\n",
              "      <td>5</td>\n",
              "      <td>6.265936</td>\n",
              "      <td>38</td>\n",
              "      <td>29</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>F</td>\n",
              "      <td>Liverpool</td>\n",
              "      <td>7</td>\n",
              "      <td>5.662082687020302</td>\n",
              "      <td>12.492922991514206</td>\n",
              "      <td>3.551269993185997</td>\n",
              "      <td>1.293316</td>\n",
              "      <td>-1.265936</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>453</td>\n",
              "      <td>Son Heung-Min</td>\n",
              "      <td>13</td>\n",
              "      <td>1109</td>\n",
              "      <td>8</td>\n",
              "      <td>5.040519</td>\n",
              "      <td>1</td>\n",
              "      <td>4.216131</td>\n",
              "      <td>33</td>\n",
              "      <td>23</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>F M</td>\n",
              "      <td>Tottenham</td>\n",
              "      <td>8</td>\n",
              "      <td>5.040519125759602</td>\n",
              "      <td>11.066001996397972</td>\n",
              "      <td>3.0345652382820845</td>\n",
              "      <td>2.959481</td>\n",
              "      <td>-3.216131</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>1776</td>\n",
              "      <td>Jarrod Bowen</td>\n",
              "      <td>12</td>\n",
              "      <td>1080</td>\n",
              "      <td>8</td>\n",
              "      <td>5.480505</td>\n",
              "      <td>1</td>\n",
              "      <td>1.935747</td>\n",
              "      <td>33</td>\n",
              "      <td>9</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>F M</td>\n",
              "      <td>West Ham</td>\n",
              "      <td>8</td>\n",
              "      <td>5.48050481826067</td>\n",
              "      <td>5.945915225893259</td>\n",
              "      <td>1.3222410827875137</td>\n",
              "      <td>2.519495</td>\n",
              "      <td>-0.935747</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>468</td>\n",
              "      <td>Callum Wilson</td>\n",
              "      <td>10</td>\n",
              "      <td>475</td>\n",
              "      <td>7</td>\n",
              "      <td>7.311268</td>\n",
              "      <td>0</td>\n",
              "      <td>0.015900</td>\n",
              "      <td>21</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>F S</td>\n",
              "      <td>Newcastle United</td>\n",
              "      <td>5</td>\n",
              "      <td>5.7889300510287285</td>\n",
              "      <td>6.403569312766194</td>\n",
              "      <td>0.8389131352305412</td>\n",
              "      <td>-0.311268</td>\n",
              "      <td>-0.015900</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>466</th>\n",
              "      <td>12094</td>\n",
              "      <td>Mike Trésor</td>\n",
              "      <td>6</td>\n",
              "      <td>225</td>\n",
              "      <td>0</td>\n",
              "      <td>0.598051</td>\n",
              "      <td>0</td>\n",
              "      <td>0.480966</td>\n",
              "      <td>3</td>\n",
              "      <td>4</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>F M S</td>\n",
              "      <td>Burnley</td>\n",
              "      <td>0</td>\n",
              "      <td>0.5980505794286728</td>\n",
              "      <td>0.8063931241631508</td>\n",
              "      <td>0.16356592625379562</td>\n",
              "      <td>-0.598051</td>\n",
              "      <td>-0.480966</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>468</th>\n",
              "      <td>12123</td>\n",
              "      <td>Murillo</td>\n",
              "      <td>7</td>\n",
              "      <td>619</td>\n",
              "      <td>0</td>\n",
              "      <td>0.580795</td>\n",
              "      <td>0</td>\n",
              "      <td>0.493345</td>\n",
              "      <td>4</td>\n",
              "      <td>4</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>D</td>\n",
              "      <td>Nottingham Forest</td>\n",
              "      <td>0</td>\n",
              "      <td>0.5807948000729084</td>\n",
              "      <td>2.620275741443038</td>\n",
              "      <td>2.3173015769571066</td>\n",
              "      <td>-0.580795</td>\n",
              "      <td>-0.493345</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>469</th>\n",
              "      <td>12149</td>\n",
              "      <td>Alex Scott</td>\n",
              "      <td>3</td>\n",
              "      <td>194</td>\n",
              "      <td>0</td>\n",
              "      <td>0.082303</td>\n",
              "      <td>0</td>\n",
              "      <td>0.089547</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>M</td>\n",
              "      <td>Bournemouth</td>\n",
              "      <td>0</td>\n",
              "      <td>0.08230337873101234</td>\n",
              "      <td>0.9122739285230637</td>\n",
              "      <td>0.8663346916437149</td>\n",
              "      <td>-0.082303</td>\n",
              "      <td>-0.089547</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>470</th>\n",
              "      <td>12151</td>\n",
              "      <td>Gabriel Osho</td>\n",
              "      <td>4</td>\n",
              "      <td>328</td>\n",
              "      <td>0</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>D</td>\n",
              "      <td>Luton</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>473</th>\n",
              "      <td>12187</td>\n",
              "      <td>Jordan Clark</td>\n",
              "      <td>2</td>\n",
              "      <td>42</td>\n",
              "      <td>0</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0</td>\n",
              "      <td>0.028226</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>S</td>\n",
              "      <td>Luton</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.028225945308804512</td>\n",
              "      <td>0</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>-0.028226</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>426 rows × 20 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-0dfe0e9c-c9e1-49a3-892f-6681db02316f')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-0dfe0e9c-c9e1-49a3-892f-6681db02316f button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-0dfe0e9c-c9e1-49a3-892f-6681db02316f');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-219f7390-c4f2-4980-9ceb-353ac1dbd0c9\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-219f7390-c4f2-4980-9ceb-353ac1dbd0c9')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-219f7390-c4f2-4980-9ceb-353ac1dbd0c9 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 6
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "onegamedftidy = one_game_df.drop(columns=[\n",
        " 'time',\n",
        " 'goals_1wks',\n",
        " 'assists_1wks',\n",
        " 'shots_1wks',\n",
        " 'key_passes_1wks',\n",
        " 'yellow_cards',\n",
        " 'red_cards',\n",
        " 'npg_1wks',\n",
        " 'npxG_1wks',\n",
        " 'xGChain',\n",
        " 'xGBuildup',\n",
        " 'xgdifference',\n",
        " 'xAdifference'])\n",
        "onegamedftidy"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 424
        },
        "id": "RKf0tUGEh8FV",
        "outputId": "53e6e212-7ce6-4abe-8b5e-ce31ec1adad4"
      },
      "execution_count": 7,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "        id     player_name games    xG_1wks   xA_1wks position  \\\n",
              "0     8260  Erling Haaland    13  14.880791  2.764831        F   \n",
              "1     1250   Mohamed Salah    13   8.706684  6.265936        F   \n",
              "2      453   Son Heung-Min    13   5.040519  4.216131      F M   \n",
              "3     1776    Jarrod Bowen    12   5.480505  1.935747      F M   \n",
              "4      468   Callum Wilson    10   7.311268  0.015900      F S   \n",
              "..     ...             ...   ...        ...       ...      ...   \n",
              "466  12094     Mike Trésor     6   0.598051  0.480966    F M S   \n",
              "468  12123         Murillo     7   0.580795  0.493345        D   \n",
              "469  12149      Alex Scott     3   0.082303  0.089547        M   \n",
              "470  12151    Gabriel Osho     4   0.000000  0.000000        D   \n",
              "473  12187    Jordan Clark     2   0.000000  0.028226        S   \n",
              "\n",
              "            team_title  \n",
              "0      Manchester City  \n",
              "1            Liverpool  \n",
              "2            Tottenham  \n",
              "3             West Ham  \n",
              "4     Newcastle United  \n",
              "..                 ...  \n",
              "466            Burnley  \n",
              "468  Nottingham Forest  \n",
              "469        Bournemouth  \n",
              "470              Luton  \n",
              "473              Luton  \n",
              "\n",
              "[426 rows x 7 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-9412b086-4981-498c-a8fc-db1f9e436067\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>player_name</th>\n",
              "      <th>games</th>\n",
              "      <th>xG_1wks</th>\n",
              "      <th>xA_1wks</th>\n",
              "      <th>position</th>\n",
              "      <th>team_title</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>8260</td>\n",
              "      <td>Erling Haaland</td>\n",
              "      <td>13</td>\n",
              "      <td>14.880791</td>\n",
              "      <td>2.764831</td>\n",
              "      <td>F</td>\n",
              "      <td>Manchester City</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>1250</td>\n",
              "      <td>Mohamed Salah</td>\n",
              "      <td>13</td>\n",
              "      <td>8.706684</td>\n",
              "      <td>6.265936</td>\n",
              "      <td>F</td>\n",
              "      <td>Liverpool</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>453</td>\n",
              "      <td>Son Heung-Min</td>\n",
              "      <td>13</td>\n",
              "      <td>5.040519</td>\n",
              "      <td>4.216131</td>\n",
              "      <td>F M</td>\n",
              "      <td>Tottenham</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>1776</td>\n",
              "      <td>Jarrod Bowen</td>\n",
              "      <td>12</td>\n",
              "      <td>5.480505</td>\n",
              "      <td>1.935747</td>\n",
              "      <td>F M</td>\n",
              "      <td>West Ham</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>468</td>\n",
              "      <td>Callum Wilson</td>\n",
              "      <td>10</td>\n",
              "      <td>7.311268</td>\n",
              "      <td>0.015900</td>\n",
              "      <td>F S</td>\n",
              "      <td>Newcastle United</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>466</th>\n",
              "      <td>12094</td>\n",
              "      <td>Mike Trésor</td>\n",
              "      <td>6</td>\n",
              "      <td>0.598051</td>\n",
              "      <td>0.480966</td>\n",
              "      <td>F M S</td>\n",
              "      <td>Burnley</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>468</th>\n",
              "      <td>12123</td>\n",
              "      <td>Murillo</td>\n",
              "      <td>7</td>\n",
              "      <td>0.580795</td>\n",
              "      <td>0.493345</td>\n",
              "      <td>D</td>\n",
              "      <td>Nottingham Forest</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>469</th>\n",
              "      <td>12149</td>\n",
              "      <td>Alex Scott</td>\n",
              "      <td>3</td>\n",
              "      <td>0.082303</td>\n",
              "      <td>0.089547</td>\n",
              "      <td>M</td>\n",
              "      <td>Bournemouth</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>470</th>\n",
              "      <td>12151</td>\n",
              "      <td>Gabriel Osho</td>\n",
              "      <td>4</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>D</td>\n",
              "      <td>Luton</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>473</th>\n",
              "      <td>12187</td>\n",
              "      <td>Jordan Clark</td>\n",
              "      <td>2</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.028226</td>\n",
              "      <td>S</td>\n",
              "      <td>Luton</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>426 rows × 7 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-9412b086-4981-498c-a8fc-db1f9e436067')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-9412b086-4981-498c-a8fc-db1f9e436067 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-9412b086-4981-498c-a8fc-db1f9e436067');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-69209369-ac4e-4c37-a292-4c59b4571baf\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-69209369-ac4e-4c37-a292-4c59b4571baf')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-69209369-ac4e-4c37-a292-4c59b4571baf button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 7
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "!git clone https://github.com/pratos/fpl-mappers\n",
        "!git clone https://github.com/ChrisMusson/FPL-ID-Map\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "B9kCj8OeiKGn",
        "outputId": "69569bbb-ec30-4888-b143-12f2709960a2"
      },
      "execution_count": 8,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Cloning into 'fpl-mappers'...\n",
            "remote: Enumerating objects: 94, done.\u001b[K\n",
            "remote: Counting objects: 100% (94/94), done.\u001b[K\n",
            "remote: Compressing objects: 100% (56/56), done.\u001b[K\n",
            "remote: Total 94 (delta 32), reused 89 (delta 30), pack-reused 0\u001b[K\n",
            "Receiving objects: 100% (94/94), 217.69 KiB | 1.07 MiB/s, done.\n",
            "Resolving deltas: 100% (32/32), done.\n",
            "Cloning into 'FPL-ID-Map'...\n",
            "remote: Enumerating objects: 242, done.\u001b[K\n",
            "remote: Counting objects: 100% (242/242), done.\u001b[K\n",
            "remote: Compressing objects: 100% (120/120), done.\u001b[K\n",
            "remote: Total 242 (delta 176), reused 188 (delta 122), pack-reused 0\u001b[K\n",
            "Receiving objects: 100% (242/242), 273.05 KiB | 1.37 MiB/s, done.\n",
            "Resolving deltas: 100% (176/176), done.\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "data1 = pd.read_csv('/content/FPL-ID-Map/Understat.csv', on_bad_lines='skip')\n",
        "data2 = pd.read_csv('/content/FPL-ID-Map/FPL/22-23.csv', on_bad_lines='skip')\n",
        "understatwithfplid1 = pd.merge(data2,\n",
        "                     data1,\n",
        "                     on ='code',\n",
        "                     how ='left')\n",
        "understatid = understatwithfplid1.drop(columns=[\n",
        "'code',\n",
        " 'first_name_x',\n",
        " 'second_name_x',\n",
        " 'web_name_x',\n",
        " 'first_name_y',\n",
        " 'second_name_y',\n",
        " 'web_name_y',])\n",
        "one_game_df.rename(columns={'id': 'understat'}, inplace=True)\n",
        "one_game_df"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 548
        },
        "id": "SaX7692EiQA7",
        "outputId": "a68731dd-917e-49a8-c9b4-e7fcb0c3c1db"
      },
      "execution_count": 9,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "    understat     player_name games  time  goals_1wks    xG_1wks  \\\n",
              "0        8260  Erling Haaland    13  1125          14  14.880791   \n",
              "1        1250   Mohamed Salah    13  1155          10   8.706684   \n",
              "2         453   Son Heung-Min    13  1109           8   5.040519   \n",
              "3        1776    Jarrod Bowen    12  1080           8   5.480505   \n",
              "4         468   Callum Wilson    10   475           7   7.311268   \n",
              "..        ...             ...   ...   ...         ...        ...   \n",
              "466     12094     Mike Trésor     6   225           0   0.598051   \n",
              "468     12123         Murillo     7   619           0   0.580795   \n",
              "469     12149      Alex Scott     3   194           0   0.082303   \n",
              "470     12151    Gabriel Osho     4   328           0   0.000000   \n",
              "473     12187    Jordan Clark     2    42           0   0.000000   \n",
              "\n",
              "     assists_1wks   xA_1wks shots_1wks key_passes_1wks yellow_cards red_cards  \\\n",
              "0               3  2.764831         51              14            0         0   \n",
              "1               5  6.265936         38              29            1         0   \n",
              "2               1  4.216131         33              23            0         0   \n",
              "3               1  1.935747         33               9            1         0   \n",
              "4               0  0.015900         21               1            1         0   \n",
              "..            ...       ...        ...             ...          ...       ...   \n",
              "466             0  0.480966          3               4            0         0   \n",
              "468             0  0.493345          4               4            1         0   \n",
              "469             0  0.089547          2               1            1         0   \n",
              "470             0  0.000000          0               0            1         0   \n",
              "473             0  0.028226          0               1            1         0   \n",
              "\n",
              "    position         team_title npg_1wks            npxG_1wks  \\\n",
              "0          F    Manchester City       11   11.836115926504135   \n",
              "1          F          Liverpool        7    5.662082687020302   \n",
              "2        F M          Tottenham        8    5.040519125759602   \n",
              "3        F M           West Ham        8     5.48050481826067   \n",
              "4        F S   Newcastle United        5   5.7889300510287285   \n",
              "..       ...                ...      ...                  ...   \n",
              "466    F M S            Burnley        0   0.5980505794286728   \n",
              "468        D  Nottingham Forest        0   0.5807948000729084   \n",
              "469        M        Bournemouth        0  0.08230337873101234   \n",
              "470        D              Luton        0                    0   \n",
              "473        S              Luton        0                    0   \n",
              "\n",
              "                  xGChain            xGBuildup  xgdifference  xAdifference  \n",
              "0       13.89440406113863    1.295404177159071     -0.880791      0.235169  \n",
              "1      12.492922991514206    3.551269993185997      1.293316     -1.265936  \n",
              "2      11.066001996397972   3.0345652382820845      2.959481     -3.216131  \n",
              "3       5.945915225893259   1.3222410827875137      2.519495     -0.935747  \n",
              "4       6.403569312766194   0.8389131352305412     -0.311268     -0.015900  \n",
              "..                    ...                  ...           ...           ...  \n",
              "466    0.8063931241631508  0.16356592625379562     -0.598051     -0.480966  \n",
              "468     2.620275741443038   2.3173015769571066     -0.580795     -0.493345  \n",
              "469    0.9122739285230637   0.8663346916437149     -0.082303     -0.089547  \n",
              "470                     0                    0      0.000000      0.000000  \n",
              "473  0.028225945308804512                    0      0.000000     -0.028226  \n",
              "\n",
              "[426 rows x 20 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-c3071ee0-ff00-473d-a66d-fac1ab2b5bca\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>understat</th>\n",
              "      <th>player_name</th>\n",
              "      <th>games</th>\n",
              "      <th>time</th>\n",
              "      <th>goals_1wks</th>\n",
              "      <th>xG_1wks</th>\n",
              "      <th>assists_1wks</th>\n",
              "      <th>xA_1wks</th>\n",
              "      <th>shots_1wks</th>\n",
              "      <th>key_passes_1wks</th>\n",
              "      <th>yellow_cards</th>\n",
              "      <th>red_cards</th>\n",
              "      <th>position</th>\n",
              "      <th>team_title</th>\n",
              "      <th>npg_1wks</th>\n",
              "      <th>npxG_1wks</th>\n",
              "      <th>xGChain</th>\n",
              "      <th>xGBuildup</th>\n",
              "      <th>xgdifference</th>\n",
              "      <th>xAdifference</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>8260</td>\n",
              "      <td>Erling Haaland</td>\n",
              "      <td>13</td>\n",
              "      <td>1125</td>\n",
              "      <td>14</td>\n",
              "      <td>14.880791</td>\n",
              "      <td>3</td>\n",
              "      <td>2.764831</td>\n",
              "      <td>51</td>\n",
              "      <td>14</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>F</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>11</td>\n",
              "      <td>11.836115926504135</td>\n",
              "      <td>13.89440406113863</td>\n",
              "      <td>1.295404177159071</td>\n",
              "      <td>-0.880791</td>\n",
              "      <td>0.235169</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>1250</td>\n",
              "      <td>Mohamed Salah</td>\n",
              "      <td>13</td>\n",
              "      <td>1155</td>\n",
              "      <td>10</td>\n",
              "      <td>8.706684</td>\n",
              "      <td>5</td>\n",
              "      <td>6.265936</td>\n",
              "      <td>38</td>\n",
              "      <td>29</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>F</td>\n",
              "      <td>Liverpool</td>\n",
              "      <td>7</td>\n",
              "      <td>5.662082687020302</td>\n",
              "      <td>12.492922991514206</td>\n",
              "      <td>3.551269993185997</td>\n",
              "      <td>1.293316</td>\n",
              "      <td>-1.265936</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>453</td>\n",
              "      <td>Son Heung-Min</td>\n",
              "      <td>13</td>\n",
              "      <td>1109</td>\n",
              "      <td>8</td>\n",
              "      <td>5.040519</td>\n",
              "      <td>1</td>\n",
              "      <td>4.216131</td>\n",
              "      <td>33</td>\n",
              "      <td>23</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>F M</td>\n",
              "      <td>Tottenham</td>\n",
              "      <td>8</td>\n",
              "      <td>5.040519125759602</td>\n",
              "      <td>11.066001996397972</td>\n",
              "      <td>3.0345652382820845</td>\n",
              "      <td>2.959481</td>\n",
              "      <td>-3.216131</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>1776</td>\n",
              "      <td>Jarrod Bowen</td>\n",
              "      <td>12</td>\n",
              "      <td>1080</td>\n",
              "      <td>8</td>\n",
              "      <td>5.480505</td>\n",
              "      <td>1</td>\n",
              "      <td>1.935747</td>\n",
              "      <td>33</td>\n",
              "      <td>9</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>F M</td>\n",
              "      <td>West Ham</td>\n",
              "      <td>8</td>\n",
              "      <td>5.48050481826067</td>\n",
              "      <td>5.945915225893259</td>\n",
              "      <td>1.3222410827875137</td>\n",
              "      <td>2.519495</td>\n",
              "      <td>-0.935747</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>468</td>\n",
              "      <td>Callum Wilson</td>\n",
              "      <td>10</td>\n",
              "      <td>475</td>\n",
              "      <td>7</td>\n",
              "      <td>7.311268</td>\n",
              "      <td>0</td>\n",
              "      <td>0.015900</td>\n",
              "      <td>21</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>F S</td>\n",
              "      <td>Newcastle United</td>\n",
              "      <td>5</td>\n",
              "      <td>5.7889300510287285</td>\n",
              "      <td>6.403569312766194</td>\n",
              "      <td>0.8389131352305412</td>\n",
              "      <td>-0.311268</td>\n",
              "      <td>-0.015900</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>466</th>\n",
              "      <td>12094</td>\n",
              "      <td>Mike Trésor</td>\n",
              "      <td>6</td>\n",
              "      <td>225</td>\n",
              "      <td>0</td>\n",
              "      <td>0.598051</td>\n",
              "      <td>0</td>\n",
              "      <td>0.480966</td>\n",
              "      <td>3</td>\n",
              "      <td>4</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>F M S</td>\n",
              "      <td>Burnley</td>\n",
              "      <td>0</td>\n",
              "      <td>0.5980505794286728</td>\n",
              "      <td>0.8063931241631508</td>\n",
              "      <td>0.16356592625379562</td>\n",
              "      <td>-0.598051</td>\n",
              "      <td>-0.480966</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>468</th>\n",
              "      <td>12123</td>\n",
              "      <td>Murillo</td>\n",
              "      <td>7</td>\n",
              "      <td>619</td>\n",
              "      <td>0</td>\n",
              "      <td>0.580795</td>\n",
              "      <td>0</td>\n",
              "      <td>0.493345</td>\n",
              "      <td>4</td>\n",
              "      <td>4</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>D</td>\n",
              "      <td>Nottingham Forest</td>\n",
              "      <td>0</td>\n",
              "      <td>0.5807948000729084</td>\n",
              "      <td>2.620275741443038</td>\n",
              "      <td>2.3173015769571066</td>\n",
              "      <td>-0.580795</td>\n",
              "      <td>-0.493345</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>469</th>\n",
              "      <td>12149</td>\n",
              "      <td>Alex Scott</td>\n",
              "      <td>3</td>\n",
              "      <td>194</td>\n",
              "      <td>0</td>\n",
              "      <td>0.082303</td>\n",
              "      <td>0</td>\n",
              "      <td>0.089547</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>M</td>\n",
              "      <td>Bournemouth</td>\n",
              "      <td>0</td>\n",
              "      <td>0.08230337873101234</td>\n",
              "      <td>0.9122739285230637</td>\n",
              "      <td>0.8663346916437149</td>\n",
              "      <td>-0.082303</td>\n",
              "      <td>-0.089547</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>470</th>\n",
              "      <td>12151</td>\n",
              "      <td>Gabriel Osho</td>\n",
              "      <td>4</td>\n",
              "      <td>328</td>\n",
              "      <td>0</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>D</td>\n",
              "      <td>Luton</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>473</th>\n",
              "      <td>12187</td>\n",
              "      <td>Jordan Clark</td>\n",
              "      <td>2</td>\n",
              "      <td>42</td>\n",
              "      <td>0</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0</td>\n",
              "      <td>0.028226</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>S</td>\n",
              "      <td>Luton</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.028225945308804512</td>\n",
              "      <td>0</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>-0.028226</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>426 rows × 20 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-c3071ee0-ff00-473d-a66d-fac1ab2b5bca')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-c3071ee0-ff00-473d-a66d-fac1ab2b5bca button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-c3071ee0-ff00-473d-a66d-fac1ab2b5bca');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-51bd2a8e-d584-484c-8402-123998d4963d\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-51bd2a8e-d584-484c-8402-123998d4963d')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-51bd2a8e-d584-484c-8402-123998d4963d button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 9
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "!git clone https://github.com/huricane85/FPL-API-Fixture-modeler"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "dU1giLdZir3J",
        "outputId": "603dc398-2fba-4993-9432-ddaab42ed5e9"
      },
      "execution_count": 10,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Cloning into 'FPL-API-Fixture-modeler'...\n",
            "remote: Enumerating objects: 93, done.\u001b[K\n",
            "remote: Counting objects: 100% (93/93), done.\u001b[K\n",
            "remote: Compressing objects: 100% (93/93), done.\u001b[K\n",
            "remote: Total 93 (delta 49), reused 0 (delta 0), pack-reused 0\u001b[K\n",
            "Receiving objects: 100% (93/93), 4.81 MiB | 2.67 MiB/s, done.\n",
            "Resolving deltas: 100% (49/49), done.\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import pandas as pd\n",
        "\n",
        "# read the CSV file from GitHub into a DataFrame\n",
        "url = \"https://raw.githubusercontent.com/ChrisMusson/FPL-ID-Map/main/Master.csv\"\n",
        "df = pd.read_csv(url)\n",
        "\n",
        "# rename the \"22-23\" column to \"id\"\n",
        "df.rename(columns={'22-23': 'id'}, inplace=True)\n",
        "\n",
        "# convert \"id\" and \"understat\" columns to int64 and float64 respectively\n",
        "df['id'] = pd.to_numeric(df['id'], errors='coerce', downcast='integer').astype('Int64')\n",
        "df['understat'] = pd.to_numeric(df['understat'], errors='coerce', downcast='integer').astype('Int64')\n",
        "\n",
        "# filter out rows where \"understat\" is null\n",
        "df = df.dropna(subset=['understat'])\n",
        "\n",
        "# change data type of \"id\" column to float64\n",
        "df['id'] = df['id'].astype('float64')\n",
        "\n",
        "# create a new DataFrame with only the \"understat\" and \"id\" columns\n",
        "new_df = df[['understat', 'id']].dropna(subset=['id']).copy()\n",
        "\n",
        "# display the new DataFrame\n",
        "\n",
        "new_df\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 424
        },
        "id": "WRijWphEVPuN",
        "outputId": "7cd2712f-f12c-475a-bbe3-554d2b2c6842"
      },
      "execution_count": 11,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "      understat     id\n",
              "37         7821  760.0\n",
              "38         1697  627.0\n",
              "55         2371  326.0\n",
              "62          489  274.0\n",
              "77         8158  502.0\n",
              "...         ...    ...\n",
              "1933      11301  695.0\n",
              "1934      11146  632.0\n",
              "1935      11189  646.0\n",
              "1936      11302  696.0\n",
              "1937      11195  650.0\n",
              "\n",
              "[763 rows x 2 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-d509cfd2-72d4-4699-af40-739441220510\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>understat</th>\n",
              "      <th>id</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>37</th>\n",
              "      <td>7821</td>\n",
              "      <td>760.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>38</th>\n",
              "      <td>1697</td>\n",
              "      <td>627.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>55</th>\n",
              "      <td>2371</td>\n",
              "      <td>326.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>62</th>\n",
              "      <td>489</td>\n",
              "      <td>274.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>77</th>\n",
              "      <td>8158</td>\n",
              "      <td>502.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1933</th>\n",
              "      <td>11301</td>\n",
              "      <td>695.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1934</th>\n",
              "      <td>11146</td>\n",
              "      <td>632.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1935</th>\n",
              "      <td>11189</td>\n",
              "      <td>646.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1936</th>\n",
              "      <td>11302</td>\n",
              "      <td>696.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1937</th>\n",
              "      <td>11195</td>\n",
              "      <td>650.0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>763 rows × 2 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-d509cfd2-72d4-4699-af40-739441220510')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-d509cfd2-72d4-4699-af40-739441220510 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-d509cfd2-72d4-4699-af40-739441220510');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-f8c41e6b-6ac1-4136-a041-2f0660b85f9b\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-f8c41e6b-6ac1-4136-a041-2f0660b85f9b')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-f8c41e6b-6ac1-4136-a041-2f0660b85f9b button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 11
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "new_df"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 424
        },
        "id": "NhQ4dZKdUv36",
        "outputId": "bd22fc92-c606-4d80-842c-af02de5bb7fd"
      },
      "execution_count": 12,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "      understat     id\n",
              "37         7821  760.0\n",
              "38         1697  627.0\n",
              "55         2371  326.0\n",
              "62          489  274.0\n",
              "77         8158  502.0\n",
              "...         ...    ...\n",
              "1933      11301  695.0\n",
              "1934      11146  632.0\n",
              "1935      11189  646.0\n",
              "1936      11302  696.0\n",
              "1937      11195  650.0\n",
              "\n",
              "[763 rows x 2 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-25ae8249-9730-41c4-9700-d0eefc110e27\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>understat</th>\n",
              "      <th>id</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>37</th>\n",
              "      <td>7821</td>\n",
              "      <td>760.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>38</th>\n",
              "      <td>1697</td>\n",
              "      <td>627.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>55</th>\n",
              "      <td>2371</td>\n",
              "      <td>326.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>62</th>\n",
              "      <td>489</td>\n",
              "      <td>274.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>77</th>\n",
              "      <td>8158</td>\n",
              "      <td>502.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1933</th>\n",
              "      <td>11301</td>\n",
              "      <td>695.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1934</th>\n",
              "      <td>11146</td>\n",
              "      <td>632.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1935</th>\n",
              "      <td>11189</td>\n",
              "      <td>646.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1936</th>\n",
              "      <td>11302</td>\n",
              "      <td>696.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1937</th>\n",
              "      <td>11195</td>\n",
              "      <td>650.0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>763 rows × 2 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-25ae8249-9730-41c4-9700-d0eefc110e27')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-25ae8249-9730-41c4-9700-d0eefc110e27 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-25ae8249-9730-41c4-9700-d0eefc110e27');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-65ea6fd6-cce6-4811-8e76-494f771aa226\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-65ea6fd6-cce6-4811-8e76-494f771aa226')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-65ea6fd6-cce6-4811-8e76-494f771aa226 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 12
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "one_game_df[\"understat\"] = one_game_df[\"understat\"].astype(str).astype(int)\n",
        "understatid2 = new_df\n",
        "understatwithfplid = pd.merge(one_game_df,\n",
        "                     understatid2,\n",
        "                     on ='understat',\n",
        "                     how ='left')\n",
        "understatwithfplid"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 548
        },
        "id": "KmDbXEnfi2v1",
        "outputId": "eb85cd7b-86fe-4c77-ac4f-87210e505463"
      },
      "execution_count": 13,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "     understat     player_name games  time  goals_1wks    xG_1wks  \\\n",
              "0         8260  Erling Haaland    13  1125          14  14.880791   \n",
              "1         1250   Mohamed Salah    13  1155          10   8.706684   \n",
              "2          453   Son Heung-Min    13  1109           8   5.040519   \n",
              "3         1776    Jarrod Bowen    12  1080           8   5.480505   \n",
              "4          468   Callum Wilson    10   475           7   7.311268   \n",
              "..         ...             ...   ...   ...         ...        ...   \n",
              "421      12094     Mike Trésor     6   225           0   0.598051   \n",
              "422      12123         Murillo     7   619           0   0.580795   \n",
              "423      12149      Alex Scott     3   194           0   0.082303   \n",
              "424      12151    Gabriel Osho     4   328           0   0.000000   \n",
              "425      12187    Jordan Clark     2    42           0   0.000000   \n",
              "\n",
              "     assists_1wks   xA_1wks shots_1wks key_passes_1wks  ... red_cards  \\\n",
              "0               3  2.764831         51              14  ...         0   \n",
              "1               5  6.265936         38              29  ...         0   \n",
              "2               1  4.216131         33              23  ...         0   \n",
              "3               1  1.935747         33               9  ...         0   \n",
              "4               0  0.015900         21               1  ...         0   \n",
              "..            ...       ...        ...             ...  ...       ...   \n",
              "421             0  0.480966          3               4  ...         0   \n",
              "422             0  0.493345          4               4  ...         0   \n",
              "423             0  0.089547          2               1  ...         0   \n",
              "424             0  0.000000          0               0  ...         0   \n",
              "425             0  0.028226          0               1  ...         0   \n",
              "\n",
              "    position         team_title npg_1wks            npxG_1wks  \\\n",
              "0          F    Manchester City       11   11.836115926504135   \n",
              "1          F          Liverpool        7    5.662082687020302   \n",
              "2        F M          Tottenham        8    5.040519125759602   \n",
              "3        F M           West Ham        8     5.48050481826067   \n",
              "4        F S   Newcastle United        5   5.7889300510287285   \n",
              "..       ...                ...      ...                  ...   \n",
              "421    F M S            Burnley        0   0.5980505794286728   \n",
              "422        D  Nottingham Forest        0   0.5807948000729084   \n",
              "423        M        Bournemouth        0  0.08230337873101234   \n",
              "424        D              Luton        0                    0   \n",
              "425        S              Luton        0                    0   \n",
              "\n",
              "                  xGChain            xGBuildup xgdifference  xAdifference  \\\n",
              "0       13.89440406113863    1.295404177159071    -0.880791      0.235169   \n",
              "1      12.492922991514206    3.551269993185997     1.293316     -1.265936   \n",
              "2      11.066001996397972   3.0345652382820845     2.959481     -3.216131   \n",
              "3       5.945915225893259   1.3222410827875137     2.519495     -0.935747   \n",
              "4       6.403569312766194   0.8389131352305412    -0.311268     -0.015900   \n",
              "..                    ...                  ...          ...           ...   \n",
              "421    0.8063931241631508  0.16356592625379562    -0.598051     -0.480966   \n",
              "422     2.620275741443038   2.3173015769571066    -0.580795     -0.493345   \n",
              "423    0.9122739285230637   0.8663346916437149    -0.082303     -0.089547   \n",
              "424                     0                    0     0.000000      0.000000   \n",
              "425  0.028225945308804512                    0     0.000000     -0.028226   \n",
              "\n",
              "        id  \n",
              "0    318.0  \n",
              "1    283.0  \n",
              "2    428.0  \n",
              "3    465.0  \n",
              "4    356.0  \n",
              "..     ...  \n",
              "421    NaN  \n",
              "422    NaN  \n",
              "423    NaN  \n",
              "424    NaN  \n",
              "425    NaN  \n",
              "\n",
              "[426 rows x 21 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-8a9c3fa9-a174-4ba1-b0b9-ace5cef5f785\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>understat</th>\n",
              "      <th>player_name</th>\n",
              "      <th>games</th>\n",
              "      <th>time</th>\n",
              "      <th>goals_1wks</th>\n",
              "      <th>xG_1wks</th>\n",
              "      <th>assists_1wks</th>\n",
              "      <th>xA_1wks</th>\n",
              "      <th>shots_1wks</th>\n",
              "      <th>key_passes_1wks</th>\n",
              "      <th>...</th>\n",
              "      <th>red_cards</th>\n",
              "      <th>position</th>\n",
              "      <th>team_title</th>\n",
              "      <th>npg_1wks</th>\n",
              "      <th>npxG_1wks</th>\n",
              "      <th>xGChain</th>\n",
              "      <th>xGBuildup</th>\n",
              "      <th>xgdifference</th>\n",
              "      <th>xAdifference</th>\n",
              "      <th>id</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>8260</td>\n",
              "      <td>Erling Haaland</td>\n",
              "      <td>13</td>\n",
              "      <td>1125</td>\n",
              "      <td>14</td>\n",
              "      <td>14.880791</td>\n",
              "      <td>3</td>\n",
              "      <td>2.764831</td>\n",
              "      <td>51</td>\n",
              "      <td>14</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>F</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>11</td>\n",
              "      <td>11.836115926504135</td>\n",
              "      <td>13.89440406113863</td>\n",
              "      <td>1.295404177159071</td>\n",
              "      <td>-0.880791</td>\n",
              "      <td>0.235169</td>\n",
              "      <td>318.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>1250</td>\n",
              "      <td>Mohamed Salah</td>\n",
              "      <td>13</td>\n",
              "      <td>1155</td>\n",
              "      <td>10</td>\n",
              "      <td>8.706684</td>\n",
              "      <td>5</td>\n",
              "      <td>6.265936</td>\n",
              "      <td>38</td>\n",
              "      <td>29</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>F</td>\n",
              "      <td>Liverpool</td>\n",
              "      <td>7</td>\n",
              "      <td>5.662082687020302</td>\n",
              "      <td>12.492922991514206</td>\n",
              "      <td>3.551269993185997</td>\n",
              "      <td>1.293316</td>\n",
              "      <td>-1.265936</td>\n",
              "      <td>283.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>453</td>\n",
              "      <td>Son Heung-Min</td>\n",
              "      <td>13</td>\n",
              "      <td>1109</td>\n",
              "      <td>8</td>\n",
              "      <td>5.040519</td>\n",
              "      <td>1</td>\n",
              "      <td>4.216131</td>\n",
              "      <td>33</td>\n",
              "      <td>23</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>F M</td>\n",
              "      <td>Tottenham</td>\n",
              "      <td>8</td>\n",
              "      <td>5.040519125759602</td>\n",
              "      <td>11.066001996397972</td>\n",
              "      <td>3.0345652382820845</td>\n",
              "      <td>2.959481</td>\n",
              "      <td>-3.216131</td>\n",
              "      <td>428.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>1776</td>\n",
              "      <td>Jarrod Bowen</td>\n",
              "      <td>12</td>\n",
              "      <td>1080</td>\n",
              "      <td>8</td>\n",
              "      <td>5.480505</td>\n",
              "      <td>1</td>\n",
              "      <td>1.935747</td>\n",
              "      <td>33</td>\n",
              "      <td>9</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>F M</td>\n",
              "      <td>West Ham</td>\n",
              "      <td>8</td>\n",
              "      <td>5.48050481826067</td>\n",
              "      <td>5.945915225893259</td>\n",
              "      <td>1.3222410827875137</td>\n",
              "      <td>2.519495</td>\n",
              "      <td>-0.935747</td>\n",
              "      <td>465.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>468</td>\n",
              "      <td>Callum Wilson</td>\n",
              "      <td>10</td>\n",
              "      <td>475</td>\n",
              "      <td>7</td>\n",
              "      <td>7.311268</td>\n",
              "      <td>0</td>\n",
              "      <td>0.015900</td>\n",
              "      <td>21</td>\n",
              "      <td>1</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>F S</td>\n",
              "      <td>Newcastle United</td>\n",
              "      <td>5</td>\n",
              "      <td>5.7889300510287285</td>\n",
              "      <td>6.403569312766194</td>\n",
              "      <td>0.8389131352305412</td>\n",
              "      <td>-0.311268</td>\n",
              "      <td>-0.015900</td>\n",
              "      <td>356.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>421</th>\n",
              "      <td>12094</td>\n",
              "      <td>Mike Trésor</td>\n",
              "      <td>6</td>\n",
              "      <td>225</td>\n",
              "      <td>0</td>\n",
              "      <td>0.598051</td>\n",
              "      <td>0</td>\n",
              "      <td>0.480966</td>\n",
              "      <td>3</td>\n",
              "      <td>4</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>F M S</td>\n",
              "      <td>Burnley</td>\n",
              "      <td>0</td>\n",
              "      <td>0.5980505794286728</td>\n",
              "      <td>0.8063931241631508</td>\n",
              "      <td>0.16356592625379562</td>\n",
              "      <td>-0.598051</td>\n",
              "      <td>-0.480966</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>422</th>\n",
              "      <td>12123</td>\n",
              "      <td>Murillo</td>\n",
              "      <td>7</td>\n",
              "      <td>619</td>\n",
              "      <td>0</td>\n",
              "      <td>0.580795</td>\n",
              "      <td>0</td>\n",
              "      <td>0.493345</td>\n",
              "      <td>4</td>\n",
              "      <td>4</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>D</td>\n",
              "      <td>Nottingham Forest</td>\n",
              "      <td>0</td>\n",
              "      <td>0.5807948000729084</td>\n",
              "      <td>2.620275741443038</td>\n",
              "      <td>2.3173015769571066</td>\n",
              "      <td>-0.580795</td>\n",
              "      <td>-0.493345</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>423</th>\n",
              "      <td>12149</td>\n",
              "      <td>Alex Scott</td>\n",
              "      <td>3</td>\n",
              "      <td>194</td>\n",
              "      <td>0</td>\n",
              "      <td>0.082303</td>\n",
              "      <td>0</td>\n",
              "      <td>0.089547</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>M</td>\n",
              "      <td>Bournemouth</td>\n",
              "      <td>0</td>\n",
              "      <td>0.08230337873101234</td>\n",
              "      <td>0.9122739285230637</td>\n",
              "      <td>0.8663346916437149</td>\n",
              "      <td>-0.082303</td>\n",
              "      <td>-0.089547</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>424</th>\n",
              "      <td>12151</td>\n",
              "      <td>Gabriel Osho</td>\n",
              "      <td>4</td>\n",
              "      <td>328</td>\n",
              "      <td>0</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>D</td>\n",
              "      <td>Luton</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>425</th>\n",
              "      <td>12187</td>\n",
              "      <td>Jordan Clark</td>\n",
              "      <td>2</td>\n",
              "      <td>42</td>\n",
              "      <td>0</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0</td>\n",
              "      <td>0.028226</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>S</td>\n",
              "      <td>Luton</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.028225945308804512</td>\n",
              "      <td>0</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>-0.028226</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>426 rows × 21 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-8a9c3fa9-a174-4ba1-b0b9-ace5cef5f785')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-8a9c3fa9-a174-4ba1-b0b9-ace5cef5f785 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-8a9c3fa9-a174-4ba1-b0b9-ace5cef5f785');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-1065379d-3477-4920-b750-e0f97e7a89e7\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-1065379d-3477-4920-b750-e0f97e7a89e7')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-1065379d-3477-4920-b750-e0f97e7a89e7 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 13
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "from urllib.request import urlopen\n",
        "from json import loads\n",
        "from csv import writer\n",
        "\n",
        "\n",
        "def team_converter(team_id):\n",
        "    '''Converts a team's ID to their actual name'''\n",
        "    team_map = {\n",
        "        1: \"Arsenal\",\n",
        "        2: \"Aston Villa\",\n",
        "        3: \"Bournemouth\",\n",
        "        4: \"Brentford\",\n",
        "        5: \"Brighton\",\n",
        "        6: \"Burnley\",\n",
        "        7: \"Chelsea\",\n",
        "        8: \"Crystal Palace\",\n",
        "        9: \"Everton\",\n",
        "        10: \"Fulham\",\n",
        "        11: \"Liverpool\",\n",
        "        12: \"Luton Town\",\n",
        "        13: \"Manchester City\",\n",
        "        14: \"Manchester United\",\n",
        "        15: \"Newcastle United\",\n",
        "        16: \"Nottingham Forest\",\n",
        "        17: \"Sheffield United\",\n",
        "        18: \"Tottenham\",\n",
        "        19: \"West Ham\",\n",
        "        20: \"Wolverhampton Wanderers\",\n",
        "        None: None\n",
        "    }\n",
        "    return team_map[team_id]\n",
        "\n",
        "\n",
        "def position_converter(position):\n",
        "    '''Converts a player's element_type to their actual position'''\n",
        "    position_map = {\n",
        "        1: \"Goalkeeper\",\n",
        "        2: \"Defender\",\n",
        "        3: \"Midfielder\",\n",
        "        4: \"Forward\"\n",
        "    }\n",
        "    return position_map[position]\n",
        "\n",
        "\n",
        "def main():\n",
        "    all_data = loads(urlopen(\"https://fantasy.premierleague.com/api/fixtures/\").read())\n",
        "    fixtures = all_data\n",
        "\n",
        "    important_data = [\n",
        "        [\n",
        "            x[\"event\"],\n",
        "            team_converter(x[\"team_h\"]),\n",
        "            team_converter(x[\"team_a\"]),\n",
        "            x[\"kickoff_time\"],\n",
        "\n",
        "        ]\n",
        "        for x in fixtures\n",
        "    ]\n",
        "\n",
        "    with open(\"/fixtures_data.csv\", \"w\", encoding=\"utf-8\", newline=\"\") as out:\n",
        "        headers = [\"event\",\"team_h\",\"team_a\",\"kickoff_time\"]\n",
        "        w = writer(out)\n",
        "        w.writerow(headers)\n",
        "        w.writerows(important_data)\n",
        "\n",
        "if __name__ == \"__main__\":\n",
        "    main()"
      ],
      "metadata": {
        "id": "Y_cV1kyak7XX"
      },
      "execution_count": 14,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "import pandas as pd\n",
        "import scipy\n",
        "import numpy as np\n",
        "from numpy import random\n",
        "import matplotlib.pyplot as plt\n",
        "import seaborn as sns\n",
        "import matplotlib"
      ],
      "metadata": {
        "id": "DXejj-4jjUI-"
      },
      "execution_count": 15,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "from urllib.request import urlopen\n",
        "from json import loads\n",
        "from csv import writer\n",
        "\n",
        "\n",
        "def team_converter(team_id):\n",
        "    '''Converts a team's ID to their actual name'''\n",
        "    team_map = {\n",
        "        1: \"Arsenal\",\n",
        "        2: \"Aston Villa\",\n",
        "        3: \"Bournemouth\",\n",
        "        4: \"Brentford\",\n",
        "        5: \"Brighton\",\n",
        "        6: \"Burnley\",\n",
        "        7: \"Chelsea\",\n",
        "        8: \"Crystal Palace\",\n",
        "        9: \"Everton\",\n",
        "        10: \"Fulham\",\n",
        "        11: \"Liverpool\",\n",
        "        12: \"Luton Town\",\n",
        "        13: \"Manchester City\",\n",
        "        14: \"Manchester United\",\n",
        "        15: \"Newcastle United\",\n",
        "        16: \"Nottingham Forest\",\n",
        "        17: \"Sheffield United\",\n",
        "        18: \"Tottenham\",\n",
        "        19: \"West Ham\",\n",
        "        20: \"Wolverhampton Wanderers\",\n",
        "        None: None\n",
        "    }\n",
        "    return team_map[team_id]\n",
        "\n",
        "\n",
        "def position_converter(position):\n",
        "    '''Converts a player's element_type to their actual position'''\n",
        "    position_map = {\n",
        "        1: \"Goalkeeper\",\n",
        "        2: \"Defender\",\n",
        "        3: \"Midfielder\",\n",
        "        4: \"Forward\"\n",
        "    }\n",
        "    return position_map[position]\n",
        "\n",
        "\n",
        "def main():\n",
        "    all_data = loads(urlopen(\"https://fantasy.premierleague.com/api/bootstrap-static/\").read())\n",
        "    players = all_data[\"elements\"]\n",
        "\n",
        "    important_data = [\n",
        "        [\n",
        "            x[\"id\"],\n",
        "            team_converter(x[\"team\"]),\n",
        "            position_converter(x[\"element_type\"])[0],\n",
        "            x[\"web_name\"],\n",
        "            x[\"now_cost\"] / 10,\n",
        "            x[\"selected_by_percent\"],\n",
        "            float(x[\"expected_goals\"]),  # Convert to float\n",
        "            float(x[\"expected_assists\"]),  # Convert to float\n",
        "            x[\"goals_scored\"],\n",
        "            x[\"assists\"],\n",
        "            x[\"bps\"],\n",
        "            x[\"ict_index\"],\n",
        "            x[\"total_points\"],\n",
        "            x[\"points_per_game\"],\n",
        "            x[\"minutes\"]\n",
        "        ]\n",
        "        for x in players\n",
        "    ]\n",
        "\n",
        "    with open(\"players_data.csv\", \"w\", encoding=\"utf-8\", newline=\"\") as out:\n",
        "        headers = [\"id\",\"team\", \"pos\", \"name\", \"cost\", \"selected_by_percent\", \"expected_goals\", \"expected_assists\", \"goals_scored\", \"assists\", \"bps\", \"ict_index\",\"points\", \"points_per_game\", \"minutes\"]\n",
        "        w = writer(out)\n",
        "        w.writerow(headers)\n",
        "        w.writerows(important_data)\n",
        "\n",
        "if __name__ == \"__main__\":\n",
        "    main()"
      ],
      "metadata": {
        "id": "CKZZPD0xQGLu"
      },
      "execution_count": 16,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "import pandas as pd\n",
        "playerdata = pd.read_csv(\"/content/players_data.csv\")\n",
        "master = playerdata\n",
        "#master = master.dropna()\n",
        "master['apppoint'] = 2\n",
        "master['assistvalue'] = 3\n",
        "#master['BPS90'] = master.bps/(master.minutes/90)\n",
        "master"
      ],
      "metadata": {
        "id": "VOx8tP0bjttO",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 424
        },
        "outputId": "59a5d20f-2a0a-4a3f-f536-f14374d51837"
      },
      "execution_count": 17,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "      id                     team pos          name  cost  \\\n",
              "0      1                  Arsenal   F       Balogun   4.4   \n",
              "1      2                  Arsenal   D        Cédric   3.9   \n",
              "2      3                  Arsenal   M      M.Elneny   4.4   \n",
              "3      4                  Arsenal   M  Fábio Vieira   5.4   \n",
              "4      5                  Arsenal   D       Gabriel   4.9   \n",
              "..   ...                      ...  ..           ...   ...   \n",
              "742  598  Wolverhampton Wanderers   D       Doherty   4.3   \n",
              "743  697  Wolverhampton Wanderers   D       S.Bueno   4.5   \n",
              "744  698  Wolverhampton Wanderers   M      González   5.0   \n",
              "745  704  Wolverhampton Wanderers   F        Fraser   4.5   \n",
              "746  715  Wolverhampton Wanderers   M    Bellegarde   4.9   \n",
              "\n",
              "     selected_by_percent  expected_goals  expected_assists  goals_scored  \\\n",
              "0                    0.2            0.00              0.00             0   \n",
              "1                    0.4            0.00              0.00             0   \n",
              "2                    0.1            0.00              0.00             0   \n",
              "3                    0.1            1.20              0.35             1   \n",
              "4                   15.5            0.40              0.13             0   \n",
              "..                   ...             ...               ...           ...   \n",
              "742                  0.2            0.25              0.44             0   \n",
              "743                  0.0            0.00              0.00             0   \n",
              "744                  0.0            0.00              0.00             0   \n",
              "745                  0.1            0.00              0.00             0   \n",
              "746                  0.0            0.21              0.26             1   \n",
              "\n",
              "     assists  bps  ict_index  points  points_per_game  minutes  apppoint  \\\n",
              "0          0    0        0.0       0              0.0        0         2   \n",
              "1          0    0        0.0       0              0.0        0         2   \n",
              "2          1   12        0.4       4              4.0        1         2   \n",
              "3          3   62       21.9      21              2.6      236         2   \n",
              "4          0  165       23.4      35              3.2      834         2   \n",
              "..       ...  ...        ...     ...              ...      ...       ...   \n",
              "742        0   32       15.6       6              0.9      320         2   \n",
              "743        0   16        2.5       1              1.0       90         2   \n",
              "744        0    0        0.0       0              0.0        0         2   \n",
              "745        0    0        0.0       0              0.0        0         2   \n",
              "746        1   53       19.4      14              2.8      276         2   \n",
              "\n",
              "     assistvalue  \n",
              "0              3  \n",
              "1              3  \n",
              "2              3  \n",
              "3              3  \n",
              "4              3  \n",
              "..           ...  \n",
              "742            3  \n",
              "743            3  \n",
              "744            3  \n",
              "745            3  \n",
              "746            3  \n",
              "\n",
              "[747 rows x 17 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-54892f51-40e8-4260-a90c-4a88f65ba0c6\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>team</th>\n",
              "      <th>pos</th>\n",
              "      <th>name</th>\n",
              "      <th>cost</th>\n",
              "      <th>selected_by_percent</th>\n",
              "      <th>expected_goals</th>\n",
              "      <th>expected_assists</th>\n",
              "      <th>goals_scored</th>\n",
              "      <th>assists</th>\n",
              "      <th>bps</th>\n",
              "      <th>ict_index</th>\n",
              "      <th>points</th>\n",
              "      <th>points_per_game</th>\n",
              "      <th>minutes</th>\n",
              "      <th>apppoint</th>\n",
              "      <th>assistvalue</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>1</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>F</td>\n",
              "      <td>Balogun</td>\n",
              "      <td>4.4</td>\n",
              "      <td>0.2</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>2</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>D</td>\n",
              "      <td>Cédric</td>\n",
              "      <td>3.9</td>\n",
              "      <td>0.4</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>3</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>M</td>\n",
              "      <td>M.Elneny</td>\n",
              "      <td>4.4</td>\n",
              "      <td>0.1</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>12</td>\n",
              "      <td>0.4</td>\n",
              "      <td>4</td>\n",
              "      <td>4.0</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>4</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>M</td>\n",
              "      <td>Fábio Vieira</td>\n",
              "      <td>5.4</td>\n",
              "      <td>0.1</td>\n",
              "      <td>1.20</td>\n",
              "      <td>0.35</td>\n",
              "      <td>1</td>\n",
              "      <td>3</td>\n",
              "      <td>62</td>\n",
              "      <td>21.9</td>\n",
              "      <td>21</td>\n",
              "      <td>2.6</td>\n",
              "      <td>236</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>5</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>D</td>\n",
              "      <td>Gabriel</td>\n",
              "      <td>4.9</td>\n",
              "      <td>15.5</td>\n",
              "      <td>0.40</td>\n",
              "      <td>0.13</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>165</td>\n",
              "      <td>23.4</td>\n",
              "      <td>35</td>\n",
              "      <td>3.2</td>\n",
              "      <td>834</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>742</th>\n",
              "      <td>598</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>D</td>\n",
              "      <td>Doherty</td>\n",
              "      <td>4.3</td>\n",
              "      <td>0.2</td>\n",
              "      <td>0.25</td>\n",
              "      <td>0.44</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>32</td>\n",
              "      <td>15.6</td>\n",
              "      <td>6</td>\n",
              "      <td>0.9</td>\n",
              "      <td>320</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>743</th>\n",
              "      <td>697</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>D</td>\n",
              "      <td>S.Bueno</td>\n",
              "      <td>4.5</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>16</td>\n",
              "      <td>2.5</td>\n",
              "      <td>1</td>\n",
              "      <td>1.0</td>\n",
              "      <td>90</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>744</th>\n",
              "      <td>698</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>M</td>\n",
              "      <td>González</td>\n",
              "      <td>5.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>745</th>\n",
              "      <td>704</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>F</td>\n",
              "      <td>Fraser</td>\n",
              "      <td>4.5</td>\n",
              "      <td>0.1</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>746</th>\n",
              "      <td>715</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>M</td>\n",
              "      <td>Bellegarde</td>\n",
              "      <td>4.9</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.21</td>\n",
              "      <td>0.26</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>53</td>\n",
              "      <td>19.4</td>\n",
              "      <td>14</td>\n",
              "      <td>2.8</td>\n",
              "      <td>276</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>747 rows × 17 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-54892f51-40e8-4260-a90c-4a88f65ba0c6')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-54892f51-40e8-4260-a90c-4a88f65ba0c6 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-54892f51-40e8-4260-a90c-4a88f65ba0c6');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-0ff115ba-2b06-4e7c-9c63-ceddf33dc987\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-0ff115ba-2b06-4e7c-9c63-ceddf33dc987')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-0ff115ba-2b06-4e7c-9c63-ceddf33dc987 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 17
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import pandas as pd\n",
        "gwfixtures = pd.read_csv(\"/fixtures_data.csv\")\n",
        "import requests\n",
        "import pandas as pd\n",
        "url = 'https://projects.fivethirtyeight.com/soccer-api/club/spi_global_rankings.csv'\n",
        "r = requests.get(url)\n",
        "open('temp.csv', 'wb').write(r.content)\n",
        "spi = pd.read_csv('temp.csv')\n",
        "spi['team_h'] = spi['name']\n",
        "spi['team_a'] = spi['name']\n",
        "spi= spi.replace('Newcastle', 'Newcastle United')\n",
        "spi= spi.replace('Wolverhampton','Wolverhampton Wanderers')\n",
        "spi= spi.replace('Tottenham Hotspur','Tottenham')\n",
        "spi= spi.replace('Leeds United','Leeds')\n",
        "spi= spi.replace('Leicester City','Leicester')\n",
        "spi= spi.replace('West Ham United','West Ham')\n",
        "spi= spi.replace('Brighton and Hove Albion','Brighton')\n",
        "spi= spi.replace('Norwich City','Norwich')\n",
        "spi= spi.replace('AFC Bournemouth','Bournemouth')\n",
        "Left_join = pd.merge(gwfixtures,\n",
        "                     spi,\n",
        "                     on ='team_h',\n",
        "                     how ='left')\n",
        "homespi = Left_join.drop(columns=[\n",
        " 'rank',\n",
        " 'prev_rank',\n",
        " 'league',\n",
        "  'off',\n",
        " 'def',\n",
        " 'name',\n",
        " 'team_a_y',])\n",
        "homespi.rename(columns = {'team_a_x':'team_a', 'spi':'Home SPI'}, inplace = True)\n",
        "away_join = pd.merge(homespi,\n",
        "                     spi,\n",
        "                     on ='team_a',\n",
        "                     how ='left')\n",
        "homesawayspi = away_join.drop(columns=[\n",
        " 'rank',\n",
        " 'prev_rank',\n",
        " 'name',\n",
        " 'league',\n",
        " 'off',\n",
        " 'def',\n",
        " 'team_h_y'])\n",
        "homesawayspi.rename(columns = {'team_h_x':'team_h', 'spi':'Away SPI'}, inplace = True)\n",
        "homesawayspi['Event'] = homesawayspi['event'].astype(str)\n",
        "gw14 = homesawayspi.query('Event==\"14.0\"')\n",
        "PLSPI = spi.query('league==\"Barclays Premier League\"')\n",
        "PLSPI['League Average']  = PLSPI[\"spi\"].mean()\n",
        "laverage = PLSPI[\"spi\"].mean()\n",
        "PLSPI['League Average'].astype(int)\n",
        "gw14['League_Average']  = laverage\n",
        "gw14.rename(columns = {'Home SPI':'HomeSPI', 'Away SPI':'AwaySPI'}, inplace = True)\n",
        "gw14['home_difference'] = gw14.HomeSPI - gw14.League_Average\n",
        "gw14['away_difference'] = gw14.AwaySPI - gw14.League_Average\n",
        "gw14['home_adjustment'] = (gw14.home_difference + gw14.League_Average)/gw14.League_Average\n",
        "gw14['away_adjustment'] = (gw14.away_difference + gw14.League_Average)/gw14.League_Average\n",
        "gw14adjustments = gw14[['team_h', 'home_adjustment']].append(gw14[['team_a','away_adjustment']].set_axis(['team_h', 'home_adjustment'], axis=1)).reset_index(drop=True)\n",
        "gw14adjustments.rename(columns = {'team_h':'team'}, inplace = True)\n",
        "gw14adjustments"
      ],
      "metadata": {
        "id": "0oqPsFQJjyR0",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "outputId": "8c35e534-63c8-4dbf-f229-63d7526c5cba"
      },
      "execution_count": 18,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "<ipython-input-18-6017ca230d98>:49: SettingWithCopyWarning: \n",
            "A value is trying to be set on a copy of a slice from a DataFrame.\n",
            "Try using .loc[row_indexer,col_indexer] = value instead\n",
            "\n",
            "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
            "  PLSPI['League Average']  = PLSPI[\"spi\"].mean()\n",
            "<ipython-input-18-6017ca230d98>:52: SettingWithCopyWarning: \n",
            "A value is trying to be set on a copy of a slice from a DataFrame.\n",
            "Try using .loc[row_indexer,col_indexer] = value instead\n",
            "\n",
            "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
            "  gw14['League_Average']  = laverage\n",
            "<ipython-input-18-6017ca230d98>:53: SettingWithCopyWarning: \n",
            "A value is trying to be set on a copy of a slice from a DataFrame\n",
            "\n",
            "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
            "  gw14.rename(columns = {'Home SPI':'HomeSPI', 'Away SPI':'AwaySPI'}, inplace = True)\n",
            "<ipython-input-18-6017ca230d98>:54: SettingWithCopyWarning: \n",
            "A value is trying to be set on a copy of a slice from a DataFrame.\n",
            "Try using .loc[row_indexer,col_indexer] = value instead\n",
            "\n",
            "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
            "  gw14['home_difference'] = gw14.HomeSPI - gw14.League_Average\n",
            "<ipython-input-18-6017ca230d98>:55: SettingWithCopyWarning: \n",
            "A value is trying to be set on a copy of a slice from a DataFrame.\n",
            "Try using .loc[row_indexer,col_indexer] = value instead\n",
            "\n",
            "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
            "  gw14['away_difference'] = gw14.AwaySPI - gw14.League_Average\n",
            "<ipython-input-18-6017ca230d98>:56: SettingWithCopyWarning: \n",
            "A value is trying to be set on a copy of a slice from a DataFrame.\n",
            "Try using .loc[row_indexer,col_indexer] = value instead\n",
            "\n",
            "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
            "  gw14['home_adjustment'] = (gw14.home_difference + gw14.League_Average)/gw14.League_Average\n",
            "<ipython-input-18-6017ca230d98>:57: SettingWithCopyWarning: \n",
            "A value is trying to be set on a copy of a slice from a DataFrame.\n",
            "Try using .loc[row_indexer,col_indexer] = value instead\n",
            "\n",
            "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
            "  gw14['away_adjustment'] = (gw14.away_difference + gw14.League_Average)/gw14.League_Average\n",
            "<ipython-input-18-6017ca230d98>:58: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  gw14adjustments = gw14[['team_h', 'home_adjustment']].append(gw14[['team_a','away_adjustment']].set_axis(['team_h', 'home_adjustment'], axis=1)).reset_index(drop=True)\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                       team  home_adjustment\n",
              "0                   Arsenal         1.166179\n",
              "1                 Brentford         1.071962\n",
              "2                   Burnley         0.874634\n",
              "3         Nottingham Forest         0.780000\n",
              "4          Newcastle United         1.163122\n",
              "5               Bournemouth         0.827943\n",
              "6                   Chelsea         1.053063\n",
              "7                 Liverpool         1.166318\n",
              "8                  West Ham         0.988306\n",
              "9           Manchester City         1.278461\n",
              "10  Wolverhampton Wanderers         0.820717\n",
              "11               Luton Town         0.770968\n",
              "12         Sheffield United         0.786115\n",
              "13                  Everton         0.884223\n",
              "14        Manchester United         1.098921\n",
              "15              Aston Villa         1.101978\n",
              "16                 Brighton         1.123934\n",
              "17                   Fulham         0.948007\n",
              "18           Crystal Palace         1.020824\n",
              "19                Tottenham         1.002480"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-af186ae9-9293-4386-a9ae-cc1c9bfe31e0\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>team</th>\n",
              "      <th>home_adjustment</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>Arsenal</td>\n",
              "      <td>1.166179</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Brentford</td>\n",
              "      <td>1.071962</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>Burnley</td>\n",
              "      <td>0.874634</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>Nottingham Forest</td>\n",
              "      <td>0.780000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>Newcastle United</td>\n",
              "      <td>1.163122</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>Bournemouth</td>\n",
              "      <td>0.827943</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>Chelsea</td>\n",
              "      <td>1.053063</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>Liverpool</td>\n",
              "      <td>1.166318</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>West Ham</td>\n",
              "      <td>0.988306</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>Manchester City</td>\n",
              "      <td>1.278461</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10</th>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>0.820717</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>11</th>\n",
              "      <td>Luton Town</td>\n",
              "      <td>0.770968</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>12</th>\n",
              "      <td>Sheffield United</td>\n",
              "      <td>0.786115</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>13</th>\n",
              "      <td>Everton</td>\n",
              "      <td>0.884223</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>14</th>\n",
              "      <td>Manchester United</td>\n",
              "      <td>1.098921</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>15</th>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>1.101978</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>16</th>\n",
              "      <td>Brighton</td>\n",
              "      <td>1.123934</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>17</th>\n",
              "      <td>Fulham</td>\n",
              "      <td>0.948007</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>18</th>\n",
              "      <td>Crystal Palace</td>\n",
              "      <td>1.020824</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>19</th>\n",
              "      <td>Tottenham</td>\n",
              "      <td>1.002480</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-af186ae9-9293-4386-a9ae-cc1c9bfe31e0')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-af186ae9-9293-4386-a9ae-cc1c9bfe31e0 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-af186ae9-9293-4386-a9ae-cc1c9bfe31e0');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-e66375b5-16c8-4b07-a9ea-70acad8ba1b7\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-e66375b5-16c8-4b07-a9ea-70acad8ba1b7')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-e66375b5-16c8-4b07-a9ea-70acad8ba1b7 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 18
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "rawdf = pd.merge(master,\n",
        "                     gw14adjustments,\n",
        "                     on ='team',\n",
        "                     how ='left')\n",
        "rawfwd = rawdf.query('pos==\"F\"')\n",
        "rawfwd['xP'] = ((rawfwd.expected_goals * 4/13)+(rawfwd.expected_assists * 3/13) + (rawfwd.apppoint)) * rawfwd.home_adjustment\n",
        "rawfwd = rawfwd.drop(columns=[\n",
        " 'expected_goals',\n",
        " 'team',\n",
        " 'expected_assists',\n",
        " 'apppoint',\n",
        " 'assistvalue',\n",
        "'home_adjustment'])\n",
        "rawmd = rawdf.query('pos==\"M\"')\n",
        "rawmd['xP'] = ((rawmd.expected_goals * 5/13)+(rawmd.expected_assists * 3/13) + (rawmd.apppoint)) * rawmd.home_adjustment\n",
        "rawmd = rawmd.drop(columns=[\n",
        " 'expected_goals',\n",
        " 'team',\n",
        " 'expected_assists',\n",
        " 'apppoint',\n",
        " 'assistvalue',\n",
        "'home_adjustment'])\n",
        "fbref = pd.read_html('https://fbref.com/en/comps/9/Premier-League-Stats')\n",
        "epltable = fbref[0]\n",
        "epltabledef = epltable.drop(columns=[ 'Rk',\n",
        " 'MP',\n",
        " 'W',\n",
        " 'D',\n",
        " 'L',\n",
        " 'GF',\n",
        " 'GA',\n",
        " 'GD',\n",
        " 'xG',\n",
        " 'xGD',\n",
        " 'xGD/90',\n",
        " 'Pts',\n",
        " 'Pts/MP',\n",
        " 'Last 5',\n",
        " 'Attendance',\n",
        " 'Top Team Scorer',\n",
        " 'Goalkeeper',\n",
        " 'Notes'])\n",
        "epltabledef= epltabledef.replace('Newcastle Utd', 'Newcastle United')\n",
        "epltabledef= epltabledef.replace('Wolves','Wolverhampton Wanderers')\n",
        "epltabledef= epltabledef.replace('Leeds United','Leeds')\n",
        "epltabledef= epltabledef.replace('Leicester City','Leicester')\n",
        "epltabledef= epltabledef.replace('Manchester Utd','Manchester United')\n",
        "epltabledef['Squad'] = epltabledef['Squad'].str.replace(r\"[\\\"\\',]\", '')\n",
        "epltabledef= epltabledef.replace('Nottham Forest','Nottingham Forest')\n",
        "epltabledef['xCSP'] = (4 - (epltabledef.xGA * 4/13))/4\n",
        "epltabledef.rename(columns={'Squad': 'team'}, inplace=True)\n",
        "rawdfcs = pd.merge(rawdf,\n",
        "                     epltabledef,\n",
        "                     on ='team',\n",
        "                     how ='left')\n",
        "rawgk= rawdfcs.query('pos==\"G\"')\n",
        "rawgk['xP'] = ((rawgk.xCSP)+ (rawgk.apppoint)) * rawgk.home_adjustment\n",
        "#rawgk['xP'] = rawgk.apppoint * rawgk.home_adjustment\n",
        "rawgk = rawgk.drop(columns=[\n",
        " 'expected_goals',\n",
        " 'team',\n",
        " 'expected_assists',\n",
        " 'apppoint',\n",
        " 'assistvalue',\n",
        "  'xGA',\n",
        "'home_adjustment'])\n",
        "rawdef= rawdfcs.query('pos==\"D\"')\n",
        "rawdef['xP'] = ((rawdef.expected_goals * 6/13)+(rawdef.expected_assists * 3/13) +(rawdef.xCSP)+ (rawdef.apppoint) * rawdef.home_adjustment)\n",
        "#rawdef['xP'] = ((rawdef.expected_goals * 6/3)+(rawdef.expected_assists * 3/3) + (rawdef.apppoint) * rawdef.home_adjustment)\n",
        "rawdef = rawdef.drop(columns=[\n",
        " 'expected_goals',\n",
        " 'team',\n",
        " 'expected_assists',\n",
        " 'apppoint',\n",
        " 'assistvalue',\n",
        "  'xGA',\n",
        " 'home_adjustment'])\n",
        "rawallplayers = pd.concat([rawfwd, rawmd, rawdef, rawgk], ignore_index=True)\n",
        "rawallplayers\n",
        "\n",
        "\n",
        "\n"
      ],
      "metadata": {
        "id": "AWnYpVh5kDzO",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 366
        },
        "outputId": "ff4fbc2a-97cd-4193-c818-aeac524a852d"
      },
      "execution_count": 67,
      "outputs": [
        {
          "output_type": "error",
          "ename": "AttributeError",
          "evalue": "ignored",
          "traceback": [
            "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
            "\u001b[0;31mAttributeError\u001b[0m                            Traceback (most recent call last)",
            "\u001b[0;32m<ipython-input-67-752090406538>\u001b[0m in \u001b[0;36m<cell line: 6>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      4\u001b[0m                      how ='left')\n\u001b[1;32m      5\u001b[0m \u001b[0mrawfwd\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mrawdf\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mquery\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m'pos==\"F\"'\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 6\u001b[0;31m \u001b[0mrawfwd\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'xP'\u001b[0m\u001b[0;34m]\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m(\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mrawfwd\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mexpected_goals\u001b[0m \u001b[0;34m*\u001b[0m \u001b[0;36m4\u001b[0m\u001b[0;34m/\u001b[0m\u001b[0;36m13\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m+\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mrawfwd\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mexpected_assists\u001b[0m \u001b[0;34m*\u001b[0m \u001b[0;36m3\u001b[0m\u001b[0;34m/\u001b[0m\u001b[0;36m13\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;34m+\u001b[0m \u001b[0;34m(\u001b[0m\u001b[0mrawfwd\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mapppoint\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;34m*\u001b[0m \u001b[0mrawfwd\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mhome_adjustment\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      7\u001b[0m rawfwd = rawfwd.drop(columns=[\n\u001b[1;32m      8\u001b[0m  \u001b[0;34m'expected_goals'\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.10/dist-packages/pandas/core/generic.py\u001b[0m in \u001b[0;36m__getattr__\u001b[0;34m(self, name)\u001b[0m\n\u001b[1;32m   5900\u001b[0m         ):\n\u001b[1;32m   5901\u001b[0m             \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mname\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 5902\u001b[0;31m         \u001b[0;32mreturn\u001b[0m \u001b[0mobject\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m__getattribute__\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mname\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   5903\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   5904\u001b[0m     \u001b[0;32mdef\u001b[0m \u001b[0m__setattr__\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mname\u001b[0m\u001b[0;34m:\u001b[0m \u001b[0mstr\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mvalue\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;34m->\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;31mAttributeError\u001b[0m: 'DataFrame' object has no attribute 'home_adjustment'"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "rawgk1= rawdfcs.query('pos==\"G\"')\n",
        "rawgk1"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 493
        },
        "id": "z3FgmhoCb3GG",
        "outputId": "2e25eed4-f1a9-4500-d5cd-677e5b547afd"
      },
      "execution_count": 21,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "      id                     team pos       name  cost  selected_by_percent  \\\n",
              "15    17                  Arsenal   G   Ramsdale   4.7                  7.6   \n",
              "16    18                  Arsenal   G  Rúnarsson   4.0                  0.1   \n",
              "26   113                  Arsenal   G       Raya   4.9                  4.4   \n",
              "30   646                  Arsenal   G       Hein   4.0                  0.1   \n",
              "50    49              Aston Villa   G   Martinez   4.9                  7.0   \n",
              "..   ...                      ...  ..        ...   ...                  ...   \n",
              "709  647                 West Ham   G      Anang   4.0                  0.1   \n",
              "715  546  Wolverhampton Wanderers   G    Bentley   3.9                  0.6   \n",
              "731  564  Wolverhampton Wanderers   G       King   4.0                  0.7   \n",
              "735  569  Wolverhampton Wanderers   G    José Sá   5.0                  1.6   \n",
              "737  571  Wolverhampton Wanderers   G     Šarkić   4.0                  0.3   \n",
              "\n",
              "     expected_goals  expected_assists  goals_scored  assists  bps  ict_index  \\\n",
              "15              0.0              0.01             0        0   77        5.6   \n",
              "16              0.0              0.00             0        0    0        0.0   \n",
              "26              0.0              0.00             0        0  152       11.1   \n",
              "30              0.0              0.00             0        0    0        0.0   \n",
              "50              0.0              0.00             0        0  208       28.6   \n",
              "..              ...               ...           ...      ...  ...        ...   \n",
              "709             0.0              0.00             0        0    0        0.0   \n",
              "715             0.0              0.00             0        0    0        0.0   \n",
              "731             0.0              0.00             0        0    0        0.0   \n",
              "735             0.0              0.00             0        0  220       33.5   \n",
              "737             0.0              0.00             0        0    0        0.0   \n",
              "\n",
              "     points  points_per_game  minutes  apppoint  assistvalue  home_adjustment  \\\n",
              "15       17              3.4      450         2            3         1.166179   \n",
              "16        0              0.0        0         2            3         1.166179   \n",
              "26       35              4.4      720         2            3         1.166179   \n",
              "30        0              0.0        0         2            3         1.166179   \n",
              "50       34              2.8     1080         2            3         1.101978   \n",
              "..      ...              ...      ...       ...          ...              ...   \n",
              "709       0              0.0        0         2            3         0.988306   \n",
              "715       0              0.0        0         2            3         0.820717   \n",
              "731       0              0.0        0         2            3         0.820717   \n",
              "735      38              2.9     1170         2            3         0.820717   \n",
              "737       0              0.0        0         2            3         0.820717   \n",
              "\n",
              "      xGA      xCSP  \n",
              "15   10.3  0.207692  \n",
              "16   10.3  0.207692  \n",
              "26   10.3  0.207692  \n",
              "30   10.3  0.207692  \n",
              "50   18.2 -0.400000  \n",
              "..    ...       ...  \n",
              "709  23.5 -0.807692  \n",
              "715  22.4 -0.723077  \n",
              "731  22.4 -0.723077  \n",
              "735  22.4 -0.723077  \n",
              "737  22.4 -0.723077  \n",
              "\n",
              "[85 rows x 20 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-2aebbf8a-27e8-4a53-9906-17de78aec714\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>team</th>\n",
              "      <th>pos</th>\n",
              "      <th>name</th>\n",
              "      <th>cost</th>\n",
              "      <th>selected_by_percent</th>\n",
              "      <th>expected_goals</th>\n",
              "      <th>expected_assists</th>\n",
              "      <th>goals_scored</th>\n",
              "      <th>assists</th>\n",
              "      <th>bps</th>\n",
              "      <th>ict_index</th>\n",
              "      <th>points</th>\n",
              "      <th>points_per_game</th>\n",
              "      <th>minutes</th>\n",
              "      <th>apppoint</th>\n",
              "      <th>assistvalue</th>\n",
              "      <th>home_adjustment</th>\n",
              "      <th>xGA</th>\n",
              "      <th>xCSP</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>15</th>\n",
              "      <td>17</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>G</td>\n",
              "      <td>Ramsdale</td>\n",
              "      <td>4.7</td>\n",
              "      <td>7.6</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.01</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>77</td>\n",
              "      <td>5.6</td>\n",
              "      <td>17</td>\n",
              "      <td>3.4</td>\n",
              "      <td>450</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "      <td>1.166179</td>\n",
              "      <td>10.3</td>\n",
              "      <td>0.207692</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>16</th>\n",
              "      <td>18</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>G</td>\n",
              "      <td>Rúnarsson</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.1</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "      <td>1.166179</td>\n",
              "      <td>10.3</td>\n",
              "      <td>0.207692</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>26</th>\n",
              "      <td>113</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>G</td>\n",
              "      <td>Raya</td>\n",
              "      <td>4.9</td>\n",
              "      <td>4.4</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>152</td>\n",
              "      <td>11.1</td>\n",
              "      <td>35</td>\n",
              "      <td>4.4</td>\n",
              "      <td>720</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "      <td>1.166179</td>\n",
              "      <td>10.3</td>\n",
              "      <td>0.207692</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>30</th>\n",
              "      <td>646</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>G</td>\n",
              "      <td>Hein</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.1</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "      <td>1.166179</td>\n",
              "      <td>10.3</td>\n",
              "      <td>0.207692</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>50</th>\n",
              "      <td>49</td>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>G</td>\n",
              "      <td>Martinez</td>\n",
              "      <td>4.9</td>\n",
              "      <td>7.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>208</td>\n",
              "      <td>28.6</td>\n",
              "      <td>34</td>\n",
              "      <td>2.8</td>\n",
              "      <td>1080</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "      <td>1.101978</td>\n",
              "      <td>18.2</td>\n",
              "      <td>-0.400000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>709</th>\n",
              "      <td>647</td>\n",
              "      <td>West Ham</td>\n",
              "      <td>G</td>\n",
              "      <td>Anang</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.1</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "      <td>0.988306</td>\n",
              "      <td>23.5</td>\n",
              "      <td>-0.807692</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>715</th>\n",
              "      <td>546</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>G</td>\n",
              "      <td>Bentley</td>\n",
              "      <td>3.9</td>\n",
              "      <td>0.6</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "      <td>0.820717</td>\n",
              "      <td>22.4</td>\n",
              "      <td>-0.723077</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>731</th>\n",
              "      <td>564</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>G</td>\n",
              "      <td>King</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.7</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "      <td>0.820717</td>\n",
              "      <td>22.4</td>\n",
              "      <td>-0.723077</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>735</th>\n",
              "      <td>569</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>G</td>\n",
              "      <td>José Sá</td>\n",
              "      <td>5.0</td>\n",
              "      <td>1.6</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>220</td>\n",
              "      <td>33.5</td>\n",
              "      <td>38</td>\n",
              "      <td>2.9</td>\n",
              "      <td>1170</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "      <td>0.820717</td>\n",
              "      <td>22.4</td>\n",
              "      <td>-0.723077</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>737</th>\n",
              "      <td>571</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>G</td>\n",
              "      <td>Šarkić</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.3</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "      <td>0.820717</td>\n",
              "      <td>22.4</td>\n",
              "      <td>-0.723077</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>85 rows × 20 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-2aebbf8a-27e8-4a53-9906-17de78aec714')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-2aebbf8a-27e8-4a53-9906-17de78aec714 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-2aebbf8a-27e8-4a53-9906-17de78aec714');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-1f640bbe-3280-4a5b-a889-fdbacb057786\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-1f640bbe-3280-4a5b-a889-fdbacb057786')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-1f640bbe-3280-4a5b-a889-fdbacb057786 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 21
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "from pandas import ExcelWriter"
      ],
      "metadata": {
        "id": "ONZy1SvCDu6y"
      },
      "execution_count": 22,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "writer = ExcelWriter('notes.xlsx')"
      ],
      "metadata": {
        "id": "iubZBRlVEhiz"
      },
      "execution_count": 23,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "rawallplayers.to_excel(writer, sheet_name='Sheet1')\n",
        "gw14adjustments.to_excel(writer, sheet_name='Sheet2')\n",
        "#fplwithunderstat.to_excel(writer, sheet_name='Sheet3')\n",
        "\n",
        "# Close the Pandas Excel writer and output the Excel file.\n",
        "writer.save()"
      ],
      "metadata": {
        "id": "slYEIma_E0uP",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "ba55dd12-9ea2-4ab9-c504-3434039c580a"
      },
      "execution_count": 25,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "<ipython-input-25-25d786f0e66f>:6: FutureWarning: save is not part of the public API, usage can give unexpected results and will be removed in a future version\n",
            "  writer.save()\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "gwfixtures"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 424
        },
        "id": "3udskoGrT73A",
        "outputId": "9d8671b8-def4-4e8b-c279-10aad81d18d3"
      },
      "execution_count": 26,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "     event            team_h                   team_a          kickoff_time\n",
              "0      NaN   Manchester City                Brentford                   NaN\n",
              "1      1.0           Burnley          Manchester City  2023-08-11T19:00:00Z\n",
              "2      1.0           Arsenal        Nottingham Forest  2023-08-12T12:00:00Z\n",
              "3      1.0       Bournemouth                 West Ham  2023-08-12T14:00:00Z\n",
              "4      1.0          Brighton               Luton Town  2023-08-12T14:00:00Z\n",
              "..     ...               ...                      ...                   ...\n",
              "375   38.0    Crystal Palace              Aston Villa  2024-05-19T15:00:00Z\n",
              "376   38.0         Liverpool  Wolverhampton Wanderers  2024-05-19T15:00:00Z\n",
              "377   38.0        Luton Town                   Fulham  2024-05-19T15:00:00Z\n",
              "378   38.0   Manchester City                 West Ham  2024-05-19T15:00:00Z\n",
              "379   38.0  Sheffield United                Tottenham  2024-05-19T15:00:00Z\n",
              "\n",
              "[380 rows x 4 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-09d84e91-cbb1-4feb-a11f-a6524d92ced4\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>event</th>\n",
              "      <th>team_h</th>\n",
              "      <th>team_a</th>\n",
              "      <th>kickoff_time</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>NaN</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>Brentford</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>1.0</td>\n",
              "      <td>Burnley</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>2023-08-11T19:00:00Z</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>1.0</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>Nottingham Forest</td>\n",
              "      <td>2023-08-12T12:00:00Z</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>1.0</td>\n",
              "      <td>Bournemouth</td>\n",
              "      <td>West Ham</td>\n",
              "      <td>2023-08-12T14:00:00Z</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>1.0</td>\n",
              "      <td>Brighton</td>\n",
              "      <td>Luton Town</td>\n",
              "      <td>2023-08-12T14:00:00Z</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>375</th>\n",
              "      <td>38.0</td>\n",
              "      <td>Crystal Palace</td>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>2024-05-19T15:00:00Z</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>376</th>\n",
              "      <td>38.0</td>\n",
              "      <td>Liverpool</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>2024-05-19T15:00:00Z</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>377</th>\n",
              "      <td>38.0</td>\n",
              "      <td>Luton Town</td>\n",
              "      <td>Fulham</td>\n",
              "      <td>2024-05-19T15:00:00Z</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>378</th>\n",
              "      <td>38.0</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>West Ham</td>\n",
              "      <td>2024-05-19T15:00:00Z</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>379</th>\n",
              "      <td>38.0</td>\n",
              "      <td>Sheffield United</td>\n",
              "      <td>Tottenham</td>\n",
              "      <td>2024-05-19T15:00:00Z</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>380 rows × 4 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-09d84e91-cbb1-4feb-a11f-a6524d92ced4')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-09d84e91-cbb1-4feb-a11f-a6524d92ced4 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-09d84e91-cbb1-4feb-a11f-a6524d92ced4');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-47421838-4ad3-41e5-b2fc-82ff0977c017\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-47421838-4ad3-41e5-b2fc-82ff0977c017')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-47421838-4ad3-41e5-b2fc-82ff0977c017 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 26
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "rawdfallgw = pd.merge(master,\n",
        "                     gw14adjustments,\n",
        "                     on ='team',\n",
        "                     how ='left')\n",
        "rawfwdallgw = rawdfallgw.query('pos==\"F\"')\n",
        "rawfwdallgw['xPallgw'] = ((rawfwdallgw.expected_goals * 4/13)+(rawfwdallgw.expected_assists * 3/13) + (rawfwdallgw.apppoint))\n",
        "rawfwdallgw = rawfwdallgw.drop(columns=[\n",
        " 'expected_goals',\n",
        " 'expected_assists',\n",
        " 'apppoint',\n",
        " 'assistvalue',\n",
        "])\n",
        "rawmdallgw = rawdfallgw.query('pos==\"M\"')\n",
        "rawmdallgw['xPallgw'] = ((rawmdallgw.expected_goals * 5/13)+(rawmdallgw.expected_assists * 3/13) + (rawmdallgw.apppoint))\n",
        "rawmdallgw = rawmdallgw.drop(columns=[\n",
        " 'expected_goals',\n",
        " 'expected_assists',\n",
        " 'apppoint',\n",
        " 'assistvalue',\n",
        "])\n",
        "fbref = pd.read_html('https://fbref.com/en/comps/9/Premier-League-Stats')\n",
        "epltable = fbref[0]\n",
        "epltabledef = epltable.drop(columns=[ 'Rk',\n",
        " 'MP',\n",
        " 'W',\n",
        " 'D',\n",
        " 'L',\n",
        " 'GF',\n",
        " 'GA',\n",
        " 'GD',\n",
        " 'xG',\n",
        " 'xGD',\n",
        " 'xGD/90',\n",
        " 'Pts',\n",
        " 'Pts/MP',\n",
        " 'Last 5',\n",
        " 'Attendance',\n",
        " 'Top Team Scorer',\n",
        " 'Goalkeeper',\n",
        " 'Notes'])\n",
        "epltabledef= epltabledef.replace('Newcastle Utd', 'Newcastle United')\n",
        "epltabledef= epltabledef.replace('Wolves','Wolverhampton Wanderers')\n",
        "epltabledef= epltabledef.replace('Leeds United','Leeds')\n",
        "epltabledef= epltabledef.replace('Leicester City','Leicester')\n",
        "epltabledef= epltabledef.replace('Manchester Utd','Manchester United')\n",
        "epltabledef['Squad'] = epltabledef['Squad'].str.replace(r\"[\\\"\\',]\", '')\n",
        "epltabledef= epltabledef.replace('Nottham Forest','Nottingham Forest')\n",
        "epltabledef['xCSP'] = ((4 - (epltabledef.xGA * 4/13))/4) + 0.75\n",
        "epltabledef.rename(columns={'Squad': 'team'}, inplace=True)\n",
        "rawdfcs = pd.merge(rawdf,\n",
        "                     epltabledef,\n",
        "                     on ='team',\n",
        "                     how ='left')\n",
        "rawgkallgw= rawdfcs.query('pos==\"G\"')\n",
        "#rawgkallgw['xPallgw'] = (rawgkallgw.apppoint)\n",
        "rawgkallgw['xPallgw'] = ((rawgkallgw.xCSP)+ (rawgkallgw.apppoint))\n",
        "rawgkallgw = rawgkallgw.drop(columns=[\n",
        " 'expected_goals',\n",
        "  'expected_assists',\n",
        " 'apppoint',\n",
        " 'assistvalue',\n",
        "  'xGA',\n",
        "])\n",
        "rawdefallgw= rawdfcs.query('pos==\"D\"')\n",
        "rawdefallgw['xPallgw'] = (rawdefallgw.expected_goals * 6/13)+(rawdefallgw.expected_assists * 3/13) +(rawdefallgw.xCSP)+ (rawdefallgw.apppoint)\n",
        "#rawdefallgw['xPallgw'] = (rawdefallgw.expected_goals * 6/3)+(rawdefallgw.expected_assists * 3/3) + (rawdefallgw.apppoint)\n",
        "rawdefallgw = rawdefallgw.drop(columns=[\n",
        " 'expected_goals',\n",
        " 'expected_assists',\n",
        " 'apppoint',\n",
        " 'assistvalue',\n",
        "  'xGA',])\n",
        "rawallplayersallgw = pd.concat([rawfwdallgw, rawmdallgw, rawdefallgw, rawgkallgw], ignore_index=True)\n",
        "rawallplayersallgw\n",
        "\n",
        "\n",
        "\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 458
        },
        "id": "xxPTwE3TZZC0",
        "outputId": "6668026f-5663-4601-db79-eb159fe4cd2e"
      },
      "execution_count": 151,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "<ipython-input-151-7d83da46fa57>:46: FutureWarning: The default value of regex will change from True to False in a future version.\n",
            "  epltabledef['Squad'] = epltabledef['Squad'].str.replace(r\"[\\\"\\',]\", '')\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "      id                     team pos     name  cost  selected_by_percent  \\\n",
              "0      1                  Arsenal   F  Balogun   4.4                  0.2   \n",
              "1      8                  Arsenal   F  G.Jesus   7.8                  2.3   \n",
              "2     13                  Arsenal   F  Nketiah   5.7                  9.8   \n",
              "3     39              Aston Villa   F    Davis   4.9                  0.1   \n",
              "4     44              Aston Villa   F    Duran   5.0                  0.2   \n",
              "..   ...                      ...  ..      ...   ...                  ...   \n",
              "742  647                 West Ham   G    Anang   4.0                  0.1   \n",
              "743  546  Wolverhampton Wanderers   G  Bentley   3.9                  0.6   \n",
              "744  564  Wolverhampton Wanderers   G     King   4.0                  0.7   \n",
              "745  569  Wolverhampton Wanderers   G  José Sá   5.0                  1.6   \n",
              "746  571  Wolverhampton Wanderers   G   Šarkić   4.0                  0.3   \n",
              "\n",
              "     goals_scored  assists  bps  ict_index  points  points_per_game  minutes  \\\n",
              "0               0        0    0        0.0       0              0.0        0   \n",
              "1               1        1   51       32.3      20              2.5      427   \n",
              "2               5        2  162       55.9      51              3.9      790   \n",
              "3               0        0    0        0.0       0              0.0        0   \n",
              "4               2        0   57       13.9      16              2.3       69   \n",
              "..            ...      ...  ...        ...     ...              ...      ...   \n",
              "742             0        0    0        0.0       0              0.0        0   \n",
              "743             0        0    0        0.0       0              0.0        0   \n",
              "744             0        0    0        0.0       0              0.0        0   \n",
              "745             0        0  220       33.5      38              2.9     1170   \n",
              "746             0        0    0        0.0       0              0.0        0   \n",
              "\n",
              "     gw14adjustment   xPallgw      xCSP  \n",
              "0          1.345463  2.000000       NaN  \n",
              "1          1.345463  2.754615       NaN  \n",
              "2          1.345463  3.050000       NaN  \n",
              "3          1.274035  2.000000       NaN  \n",
              "4          1.274035  2.230000       NaN  \n",
              "..              ...       ...       ...  \n",
              "742        0.967483  1.942308 -0.057692  \n",
              "743        0.654537  2.026923  0.026923  \n",
              "744        0.654537  2.026923  0.026923  \n",
              "745        0.654537  2.026923  0.026923  \n",
              "746        0.654537  2.026923  0.026923  \n",
              "\n",
              "[747 rows x 16 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-42cd46c2-bff5-43f0-b1f0-ece170016bf2\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>team</th>\n",
              "      <th>pos</th>\n",
              "      <th>name</th>\n",
              "      <th>cost</th>\n",
              "      <th>selected_by_percent</th>\n",
              "      <th>goals_scored</th>\n",
              "      <th>assists</th>\n",
              "      <th>bps</th>\n",
              "      <th>ict_index</th>\n",
              "      <th>points</th>\n",
              "      <th>points_per_game</th>\n",
              "      <th>minutes</th>\n",
              "      <th>gw14adjustment</th>\n",
              "      <th>xPallgw</th>\n",
              "      <th>xCSP</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>1</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>F</td>\n",
              "      <td>Balogun</td>\n",
              "      <td>4.4</td>\n",
              "      <td>0.2</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>1.345463</td>\n",
              "      <td>2.000000</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>8</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>F</td>\n",
              "      <td>G.Jesus</td>\n",
              "      <td>7.8</td>\n",
              "      <td>2.3</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>51</td>\n",
              "      <td>32.3</td>\n",
              "      <td>20</td>\n",
              "      <td>2.5</td>\n",
              "      <td>427</td>\n",
              "      <td>1.345463</td>\n",
              "      <td>2.754615</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>13</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>F</td>\n",
              "      <td>Nketiah</td>\n",
              "      <td>5.7</td>\n",
              "      <td>9.8</td>\n",
              "      <td>5</td>\n",
              "      <td>2</td>\n",
              "      <td>162</td>\n",
              "      <td>55.9</td>\n",
              "      <td>51</td>\n",
              "      <td>3.9</td>\n",
              "      <td>790</td>\n",
              "      <td>1.345463</td>\n",
              "      <td>3.050000</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>39</td>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>F</td>\n",
              "      <td>Davis</td>\n",
              "      <td>4.9</td>\n",
              "      <td>0.1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>1.274035</td>\n",
              "      <td>2.000000</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>44</td>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>F</td>\n",
              "      <td>Duran</td>\n",
              "      <td>5.0</td>\n",
              "      <td>0.2</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>57</td>\n",
              "      <td>13.9</td>\n",
              "      <td>16</td>\n",
              "      <td>2.3</td>\n",
              "      <td>69</td>\n",
              "      <td>1.274035</td>\n",
              "      <td>2.230000</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>742</th>\n",
              "      <td>647</td>\n",
              "      <td>West Ham</td>\n",
              "      <td>G</td>\n",
              "      <td>Anang</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.967483</td>\n",
              "      <td>1.942308</td>\n",
              "      <td>-0.057692</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>743</th>\n",
              "      <td>546</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>G</td>\n",
              "      <td>Bentley</td>\n",
              "      <td>3.9</td>\n",
              "      <td>0.6</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.654537</td>\n",
              "      <td>2.026923</td>\n",
              "      <td>0.026923</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>744</th>\n",
              "      <td>564</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>G</td>\n",
              "      <td>King</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.7</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.654537</td>\n",
              "      <td>2.026923</td>\n",
              "      <td>0.026923</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>745</th>\n",
              "      <td>569</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>G</td>\n",
              "      <td>José Sá</td>\n",
              "      <td>5.0</td>\n",
              "      <td>1.6</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>220</td>\n",
              "      <td>33.5</td>\n",
              "      <td>38</td>\n",
              "      <td>2.9</td>\n",
              "      <td>1170</td>\n",
              "      <td>0.654537</td>\n",
              "      <td>2.026923</td>\n",
              "      <td>0.026923</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>746</th>\n",
              "      <td>571</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>G</td>\n",
              "      <td>Šarkić</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.3</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.654537</td>\n",
              "      <td>2.026923</td>\n",
              "      <td>0.026923</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>747 rows × 16 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-42cd46c2-bff5-43f0-b1f0-ece170016bf2')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-42cd46c2-bff5-43f0-b1f0-ece170016bf2 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-42cd46c2-bff5-43f0-b1f0-ece170016bf2');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-cfa682c0-0a29-43e8-b2e4-71c7956b178e\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-cfa682c0-0a29-43e8-b2e4-71c7956b178e')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-cfa682c0-0a29-43e8-b2e4-71c7956b178e button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 151
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "rawmdallgw"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 424
        },
        "id": "ZtNrmQMhefCc",
        "outputId": "cc11fd15-b033-4bc1-a5ba-01e5746538e9"
      },
      "execution_count": 152,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "      id                     team pos             name  cost  \\\n",
              "2      3                  Arsenal   M         M.Elneny   4.4   \n",
              "3      4                  Arsenal   M     Fábio Vieira   5.4   \n",
              "5      6                  Arsenal   M          Havertz   7.1   \n",
              "7      9                  Arsenal   M         Jorginho   5.3   \n",
              "9     11                  Arsenal   M       Marquinhos   4.5   \n",
              "..   ...                      ...  ..              ...   ...   \n",
              "734  568  Wolverhampton Wanderers   M          Podence   5.3   \n",
              "736  570  Wolverhampton Wanderers   M          Sarabia   4.7   \n",
              "740  574  Wolverhampton Wanderers   M  Boubacar Traore   4.4   \n",
              "744  698  Wolverhampton Wanderers   M         González   5.0   \n",
              "746  715  Wolverhampton Wanderers   M       Bellegarde   4.9   \n",
              "\n",
              "     selected_by_percent  goals_scored  assists  bps  ict_index  points  \\\n",
              "2                    0.1             0        1   12        0.4       4   \n",
              "3                    0.1             1        3   62       21.9      21   \n",
              "5                    1.5             2        1   86       44.6      31   \n",
              "7                    0.2             0        0   63       12.4      14   \n",
              "9                    0.0             0        0    0        0.0       0   \n",
              "..                   ...           ...      ...  ...        ...     ...   \n",
              "734                  0.0             0        0    0        0.0       0   \n",
              "736                  0.2             1        2   65       29.4      20   \n",
              "740                  0.4             0        0   39        6.9       8   \n",
              "744                  0.0             0        0    0        0.0       0   \n",
              "746                  0.0             1        1   53       19.4      14   \n",
              "\n",
              "     points_per_game  minutes  gw14adjustment   xPallgw  \n",
              "2                4.0        1        1.345463  2.000000  \n",
              "3                2.6      236        1.345463  2.542308  \n",
              "5                2.4      722        1.345463  3.166923  \n",
              "7                1.4      382        1.345463  2.103846  \n",
              "9                0.0        0        1.345463  2.000000  \n",
              "..               ...      ...             ...       ...  \n",
              "734              0.0        0        0.654537  2.000000  \n",
              "736              3.3      190        0.654537  2.516923  \n",
              "740              1.0      254        0.654537  2.047692  \n",
              "744              0.0        0        0.654537  2.000000  \n",
              "746              2.8      276        0.654537  2.140769  \n",
              "\n",
              "[322 rows x 15 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-9f46e633-c689-468a-8f08-89e80c226e59\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>team</th>\n",
              "      <th>pos</th>\n",
              "      <th>name</th>\n",
              "      <th>cost</th>\n",
              "      <th>selected_by_percent</th>\n",
              "      <th>goals_scored</th>\n",
              "      <th>assists</th>\n",
              "      <th>bps</th>\n",
              "      <th>ict_index</th>\n",
              "      <th>points</th>\n",
              "      <th>points_per_game</th>\n",
              "      <th>minutes</th>\n",
              "      <th>gw14adjustment</th>\n",
              "      <th>xPallgw</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>3</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>M</td>\n",
              "      <td>M.Elneny</td>\n",
              "      <td>4.4</td>\n",
              "      <td>0.1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>12</td>\n",
              "      <td>0.4</td>\n",
              "      <td>4</td>\n",
              "      <td>4.0</td>\n",
              "      <td>1</td>\n",
              "      <td>1.345463</td>\n",
              "      <td>2.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>4</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>M</td>\n",
              "      <td>Fábio Vieira</td>\n",
              "      <td>5.4</td>\n",
              "      <td>0.1</td>\n",
              "      <td>1</td>\n",
              "      <td>3</td>\n",
              "      <td>62</td>\n",
              "      <td>21.9</td>\n",
              "      <td>21</td>\n",
              "      <td>2.6</td>\n",
              "      <td>236</td>\n",
              "      <td>1.345463</td>\n",
              "      <td>2.542308</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>6</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>M</td>\n",
              "      <td>Havertz</td>\n",
              "      <td>7.1</td>\n",
              "      <td>1.5</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>86</td>\n",
              "      <td>44.6</td>\n",
              "      <td>31</td>\n",
              "      <td>2.4</td>\n",
              "      <td>722</td>\n",
              "      <td>1.345463</td>\n",
              "      <td>3.166923</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>9</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>M</td>\n",
              "      <td>Jorginho</td>\n",
              "      <td>5.3</td>\n",
              "      <td>0.2</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>63</td>\n",
              "      <td>12.4</td>\n",
              "      <td>14</td>\n",
              "      <td>1.4</td>\n",
              "      <td>382</td>\n",
              "      <td>1.345463</td>\n",
              "      <td>2.103846</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>11</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>M</td>\n",
              "      <td>Marquinhos</td>\n",
              "      <td>4.5</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>1.345463</td>\n",
              "      <td>2.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>734</th>\n",
              "      <td>568</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>M</td>\n",
              "      <td>Podence</td>\n",
              "      <td>5.3</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.654537</td>\n",
              "      <td>2.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>736</th>\n",
              "      <td>570</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>M</td>\n",
              "      <td>Sarabia</td>\n",
              "      <td>4.7</td>\n",
              "      <td>0.2</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>65</td>\n",
              "      <td>29.4</td>\n",
              "      <td>20</td>\n",
              "      <td>3.3</td>\n",
              "      <td>190</td>\n",
              "      <td>0.654537</td>\n",
              "      <td>2.516923</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>740</th>\n",
              "      <td>574</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>M</td>\n",
              "      <td>Boubacar Traore</td>\n",
              "      <td>4.4</td>\n",
              "      <td>0.4</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>39</td>\n",
              "      <td>6.9</td>\n",
              "      <td>8</td>\n",
              "      <td>1.0</td>\n",
              "      <td>254</td>\n",
              "      <td>0.654537</td>\n",
              "      <td>2.047692</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>744</th>\n",
              "      <td>698</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>M</td>\n",
              "      <td>González</td>\n",
              "      <td>5.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.654537</td>\n",
              "      <td>2.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>746</th>\n",
              "      <td>715</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>M</td>\n",
              "      <td>Bellegarde</td>\n",
              "      <td>4.9</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>53</td>\n",
              "      <td>19.4</td>\n",
              "      <td>14</td>\n",
              "      <td>2.8</td>\n",
              "      <td>276</td>\n",
              "      <td>0.654537</td>\n",
              "      <td>2.140769</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>322 rows × 15 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-9f46e633-c689-468a-8f08-89e80c226e59')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-9f46e633-c689-468a-8f08-89e80c226e59 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-9f46e633-c689-468a-8f08-89e80c226e59');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-66077943-d1ed-4d1f-927f-351110386a68\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-66077943-d1ed-4d1f-927f-351110386a68')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-66077943-d1ed-4d1f-927f-351110386a68 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 152
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "gw2blanks = [['Burnley', 0], ['Luton Town', 0]]\n",
        "\n",
        "# Create the pandas DataFrame\n",
        "blanks2 = pd.DataFrame(gw2blanks, columns=['team', 'gw2adjustment'])\n",
        "blanks2"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 112
        },
        "id": "xkGffHD0iXWI",
        "outputId": "7cfc9884-2dc2-4922-8b3b-eb4023af379c"
      },
      "execution_count": 153,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "         team  gw2adjustment\n",
              "0     Burnley              0\n",
              "1  Luton Town              0"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-9ab619ba-4ec1-4bee-ba13-60515da157e0\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>team</th>\n",
              "      <th>gw2adjustment</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>Burnley</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Luton Town</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-9ab619ba-4ec1-4bee-ba13-60515da157e0')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-9ab619ba-4ec1-4bee-ba13-60515da157e0 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-9ab619ba-4ec1-4bee-ba13-60515da157e0');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-17d8d627-4b58-400c-a4c2-4ddee54527f1\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-17d8d627-4b58-400c-a4c2-4ddee54527f1')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-17d8d627-4b58-400c-a4c2-4ddee54527f1 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 153
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#gw2adjustments = pd.concat([gw2adjustments, blanks2])\n",
        "#gw2adjustments = gw2adjustments.reset_index(drop=True)\n",
        "#gw2adjustments"
      ],
      "metadata": {
        "id": "JNr3eV5Rir58"
      },
      "execution_count": 154,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "##gw3blanks = [['Newcastle United', 0], ['Manchester United', 0], ['Brentford', 0], ['Brighton', 0]]\n",
        "\n",
        "# Create the pandas DataFrame\n",
        "##blanks = pd.DataFrame(gw3blanks, columns=['team', 'gw3adjustment'])\n",
        "##blanks"
      ],
      "metadata": {
        "id": "iCizQgwMD84B"
      },
      "execution_count": 155,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "gw14 = homesawayspi.query('Event==\"14.0\"')\n",
        "pd.options.mode.chained_assignment = None  # default='warn'\n",
        "PLSPI = spi.query('league==\"Barclays Premier League\"')\n",
        "PLSPI['League Average']  = PLSPI[\"spi\"].mean()\n",
        "laverage = PLSPI[\"spi\"].mean()\n",
        "PLSPI['League Average'].astype(int)\n",
        "gw14['League_Average']  = laverage\n",
        "gw14.rename(columns = {'Home SPI':'HomeSPI', 'Away SPI':'AwaySPI'}, inplace = True)\n",
        "gw14['home_difference'] = gw14.HomeSPI - gw14.League_Average\n",
        "gw14['away_difference'] = gw14.AwaySPI - gw14.League_Average\n",
        "gw14['home_adjustment'] = (gw14.home_difference - gw14.away_difference + gw14.League_Average)/gw14.League_Average\n",
        "gw14['away_adjustment'] = (gw14.away_difference - gw14.home_difference+ gw14.League_Average)/gw14.League_Average\n",
        "gw14adjustments = gw14[['team_h', 'home_adjustment']].append(gw14[['team_a','away_adjustment']].set_axis(['team_h', 'home_adjustment'], axis=1)).reset_index(drop=True)\n",
        "gw14adjustments.rename(columns = {'team_h':'team'}, inplace = True)\n",
        "gw14adjustments.rename(columns = {'home_adjustment':'gw14adjustment'}, inplace = True)\n",
        "gw14adjustments"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 711
        },
        "id": "pzyah3Z-kgct",
        "outputId": "d98e740e-7847-44c8-d5b9-208023dcafdc"
      },
      "execution_count": 156,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "<ipython-input-156-2f72f87c9387>:13: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  gw14adjustments = gw14[['team_h', 'home_adjustment']].append(gw14[['team_a','away_adjustment']].set_axis(['team_h', 'home_adjustment'], axis=1)).reset_index(drop=True)\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                       team  gw14adjustment\n",
              "0                   Arsenal        1.345463\n",
              "1                 Brentford        1.300994\n",
              "2                   Burnley        1.088520\n",
              "3         Nottingham Forest        0.895778\n",
              "4          Newcastle United        1.064201\n",
              "5               Bournemouth        0.725965\n",
              "6                   Chelsea        0.929129\n",
              "7                 Liverpool        1.218311\n",
              "8                  West Ham        0.967483\n",
              "9           Manchester City        1.275981\n",
              "10  Wolverhampton Wanderers        0.654537\n",
              "11               Luton Town        0.699006\n",
              "12         Sheffield United        0.911480\n",
              "13                  Everton        1.104222\n",
              "14        Manchester United        0.935799\n",
              "15              Aston Villa        1.274035\n",
              "16                 Brighton        1.070871\n",
              "17                   Fulham        0.781689\n",
              "18           Crystal Palace        1.032517\n",
              "19                Tottenham        0.724019"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-33e6def4-55c0-4729-9453-05bfed6d1ab4\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>team</th>\n",
              "      <th>gw14adjustment</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>Arsenal</td>\n",
              "      <td>1.345463</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Brentford</td>\n",
              "      <td>1.300994</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>Burnley</td>\n",
              "      <td>1.088520</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>Nottingham Forest</td>\n",
              "      <td>0.895778</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>Newcastle United</td>\n",
              "      <td>1.064201</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>Bournemouth</td>\n",
              "      <td>0.725965</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>Chelsea</td>\n",
              "      <td>0.929129</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>Liverpool</td>\n",
              "      <td>1.218311</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>West Ham</td>\n",
              "      <td>0.967483</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>Manchester City</td>\n",
              "      <td>1.275981</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10</th>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>0.654537</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>11</th>\n",
              "      <td>Luton Town</td>\n",
              "      <td>0.699006</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>12</th>\n",
              "      <td>Sheffield United</td>\n",
              "      <td>0.911480</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>13</th>\n",
              "      <td>Everton</td>\n",
              "      <td>1.104222</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>14</th>\n",
              "      <td>Manchester United</td>\n",
              "      <td>0.935799</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>15</th>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>1.274035</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>16</th>\n",
              "      <td>Brighton</td>\n",
              "      <td>1.070871</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>17</th>\n",
              "      <td>Fulham</td>\n",
              "      <td>0.781689</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>18</th>\n",
              "      <td>Crystal Palace</td>\n",
              "      <td>1.032517</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>19</th>\n",
              "      <td>Tottenham</td>\n",
              "      <td>0.724019</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-33e6def4-55c0-4729-9453-05bfed6d1ab4')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-33e6def4-55c0-4729-9453-05bfed6d1ab4 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-33e6def4-55c0-4729-9453-05bfed6d1ab4');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-919ff697-cfd9-46e9-8a25-009a0eced241\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-919ff697-cfd9-46e9-8a25-009a0eced241')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-919ff697-cfd9-46e9-8a25-009a0eced241 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 156
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "gw16 = homesawayspi.query('Event==\"16.0\"')\n",
        "pd.options.mode.chained_assignment = None  # default='warn'\n",
        "PLSPI = spi.query('league==\"Barclays Premier League\"')\n",
        "PLSPI['League Average']  = PLSPI[\"spi\"].mean()\n",
        "laverage = PLSPI[\"spi\"].mean()\n",
        "PLSPI['League Average'].astype(int)\n",
        "gw16['League_Average']  = laverage\n",
        "gw16.rename(columns = {'Home SPI':'HomeSPI', 'Away SPI':'AwaySPI'}, inplace = True)\n",
        "gw16['home_difference'] = gw16.HomeSPI - gw16.League_Average\n",
        "gw16['away_difference'] = gw16.AwaySPI - gw16.League_Average\n",
        "gw16['home_adjustment'] = (gw16.home_difference - gw16.away_difference + gw16.League_Average)/gw16.League_Average\n",
        "gw16['away_adjustment'] = (gw16.away_difference - gw16.home_difference+ gw16.League_Average)/gw16.League_Average\n",
        "gw16adjustments = gw16[['team_h', 'home_adjustment']].append(gw16[['team_a','away_adjustment']].set_axis(['team_h', 'home_adjustment'], axis=1)).reset_index(drop=True)\n",
        "gw16adjustments.rename(columns = {'team_h':'team'}, inplace = True)\n",
        "gw16adjustments.rename(columns = {'home_adjustment':'gw16adjustment'}, inplace = True)\n",
        "gw16adjustments"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 711
        },
        "id": "7uE1H7R4Gems",
        "outputId": "cf1908bf-81fa-4620-a3bc-a9b1b2482fb5"
      },
      "execution_count": 157,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "<ipython-input-157-8dce2bce55c2>:13: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  gw16adjustments = gw16[['team_h', 'home_adjustment']].append(gw16[['team_a','away_adjustment']].set_axis(['team_h', 'home_adjustment'], axis=1)).reset_index(drop=True)\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                       team  gw16adjustment\n",
              "0            Crystal Palace        0.854506\n",
              "1                  Brighton        1.249300\n",
              "2         Manchester United        1.270978\n",
              "3          Sheffield United        0.714153\n",
              "4   Wolverhampton Wanderers        1.040716\n",
              "5               Aston Villa        0.935799\n",
              "6                   Everton        0.831160\n",
              "7                    Fulham        0.959701\n",
              "8                Luton Town        0.492506\n",
              "9                 Tottenham        0.839359\n",
              "10                Liverpool        1.145494\n",
              "11                  Burnley        0.750700\n",
              "12              Bournemouth        0.729022\n",
              "13                Brentford        1.285847\n",
              "14        Nottingham Forest        0.959284\n",
              "15                  Arsenal        1.064201\n",
              "16                  Chelsea        1.168840\n",
              "17                 West Ham        1.040299\n",
              "18          Manchester City        1.507494\n",
              "19         Newcastle United        1.160641"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-e5faefd5-909b-4390-943b-a74076bda766\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>team</th>\n",
              "      <th>gw16adjustment</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>Crystal Palace</td>\n",
              "      <td>0.854506</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Brighton</td>\n",
              "      <td>1.249300</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>Manchester United</td>\n",
              "      <td>1.270978</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>Sheffield United</td>\n",
              "      <td>0.714153</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>1.040716</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>0.935799</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>Everton</td>\n",
              "      <td>0.831160</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>Fulham</td>\n",
              "      <td>0.959701</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>Luton Town</td>\n",
              "      <td>0.492506</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>Tottenham</td>\n",
              "      <td>0.839359</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10</th>\n",
              "      <td>Liverpool</td>\n",
              "      <td>1.145494</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>11</th>\n",
              "      <td>Burnley</td>\n",
              "      <td>0.750700</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>12</th>\n",
              "      <td>Bournemouth</td>\n",
              "      <td>0.729022</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>13</th>\n",
              "      <td>Brentford</td>\n",
              "      <td>1.285847</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>14</th>\n",
              "      <td>Nottingham Forest</td>\n",
              "      <td>0.959284</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>15</th>\n",
              "      <td>Arsenal</td>\n",
              "      <td>1.064201</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>16</th>\n",
              "      <td>Chelsea</td>\n",
              "      <td>1.168840</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>17</th>\n",
              "      <td>West Ham</td>\n",
              "      <td>1.040299</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>18</th>\n",
              "      <td>Manchester City</td>\n",
              "      <td>1.507494</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>19</th>\n",
              "      <td>Newcastle United</td>\n",
              "      <td>1.160641</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-e5faefd5-909b-4390-943b-a74076bda766')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-e5faefd5-909b-4390-943b-a74076bda766 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-e5faefd5-909b-4390-943b-a74076bda766');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-0ab2723c-107b-4a50-ae66-a524e68dc40b\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-0ab2723c-107b-4a50-ae66-a524e68dc40b')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-0ab2723c-107b-4a50-ae66-a524e68dc40b button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 157
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#gw5blanks = [['Chelsea', 0], ['Manchester United', 0], ['Manchester City', 0], ['Brighton', 0]]\n",
        "\n",
        "# Create the pandas DataFrame\n",
        "#blanks32 = pd.DataFrame(gw5blanks, columns=['team', 'gw5adjustment'])\n",
        "#blanks32"
      ],
      "metadata": {
        "id": "p00QYlZ7UbAu"
      },
      "execution_count": 158,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "#gw5adjustments = pd.concat([gw5adjustments, blanks32])\n",
        "#gw5adjustments = gw5adjustments.reset_index(drop=True)\n",
        "#gw5adjustments"
      ],
      "metadata": {
        "id": "xh_AhxKJU0VW"
      },
      "execution_count": 159,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "gw15= homesawayspi.query('Event==\"15.0\"')\n",
        "pd.options.mode.chained_assignment = None  # default='warn'\n",
        "PLSPI = spi.query('league==\"Barclays Premier League\"')\n",
        "PLSPI['League Average']  = PLSPI[\"spi\"].mean()\n",
        "laverage = PLSPI[\"spi\"].mean()\n",
        "PLSPI['League Average'].astype(int)\n",
        "gw15['League_Average']  = laverage\n",
        "gw15.rename(columns = {'Home SPI':'HomeSPI', 'Away SPI':'AwaySPI'}, inplace = True)\n",
        "gw15['home_difference'] = gw15.HomeSPI - gw15.League_Average\n",
        "gw15['away_difference'] = gw15.AwaySPI - gw15.League_Average\n",
        "gw15['home_adjustment'] = (gw15.home_difference - gw15.away_difference + gw15.League_Average)/gw15.League_Average\n",
        "gw15['away_adjustment'] = (gw15.away_difference - gw15.home_difference+ gw15.League_Average)/gw15.League_Average\n",
        "gw15adjustments = gw15[['team_h', 'home_adjustment']].append(gw15[['team_a','away_adjustment']].set_axis(['team_h', 'home_adjustment'], axis=1)).reset_index(drop=True)\n",
        "gw15adjustments.rename(columns = {'team_h':'team'}, inplace = True)\n",
        "gw15adjustments.rename(columns = {'home_adjustment':'gw15adjustment'}, inplace = True)\n",
        "gw15adjustments"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 711
        },
        "id": "OPB6Pz8sGZNe",
        "outputId": "08d65020-0547-4474-9864-179bb766dfab"
      },
      "execution_count": 160,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "<ipython-input-160-d1ec8aa9b32e>:13: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  gw15adjustments = gw15[['team_h', 'home_adjustment']].append(gw15[['team_a','away_adjustment']].set_axis(['team_h', 'home_adjustment'], axis=1)).reset_index(drop=True)\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                       team  gw15adjustment\n",
              "0   Wolverhampton Wanderers        0.946082\n",
              "1                Luton Town        0.604789\n",
              "2                  Brighton        1.051972\n",
              "3            Crystal Palace        1.192881\n",
              "4                    Fulham        1.168007\n",
              "5          Sheffield United        0.619797\n",
              "6               Aston Villa        0.823517\n",
              "7         Manchester United        1.045858\n",
              "8                   Everton        0.721101\n",
              "9                 Tottenham        1.014174\n",
              "10                  Burnley        1.053918\n",
              "11                  Arsenal        1.395211\n",
              "12                Brentford        0.948028\n",
              "13              Bournemouth        0.807119\n",
              "14        Nottingham Forest        0.831993\n",
              "15                Liverpool        1.380203\n",
              "16          Manchester City        1.176483\n",
              "17                  Chelsea        0.954142\n",
              "18         Newcastle United        1.278899\n",
              "19                 West Ham        0.985826"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-18152f41-d8e9-4933-a31c-d1e191b0bf95\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>team</th>\n",
              "      <th>gw15adjustment</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>0.946082</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Luton Town</td>\n",
              "      <td>0.604789</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>Brighton</td>\n",
              "      <td>1.051972</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>Crystal Palace</td>\n",
              "      <td>1.192881</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>Fulham</td>\n",
              "      <td>1.168007</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>Sheffield United</td>\n",
              "      <td>0.619797</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>0.823517</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>Manchester United</td>\n",
              "      <td>1.045858</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>Everton</td>\n",
              "      <td>0.721101</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>Tottenham</td>\n",
              "      <td>1.014174</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10</th>\n",
              "      <td>Burnley</td>\n",
              "      <td>1.053918</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>11</th>\n",
              "      <td>Arsenal</td>\n",
              "      <td>1.395211</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>12</th>\n",
              "      <td>Brentford</td>\n",
              "      <td>0.948028</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>13</th>\n",
              "      <td>Bournemouth</td>\n",
              "      <td>0.807119</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>14</th>\n",
              "      <td>Nottingham Forest</td>\n",
              "      <td>0.831993</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>15</th>\n",
              "      <td>Liverpool</td>\n",
              "      <td>1.380203</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>16</th>\n",
              "      <td>Manchester City</td>\n",
              "      <td>1.176483</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>17</th>\n",
              "      <td>Chelsea</td>\n",
              "      <td>0.954142</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>18</th>\n",
              "      <td>Newcastle United</td>\n",
              "      <td>1.278899</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>19</th>\n",
              "      <td>West Ham</td>\n",
              "      <td>0.985826</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-18152f41-d8e9-4933-a31c-d1e191b0bf95')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-18152f41-d8e9-4933-a31c-d1e191b0bf95 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-18152f41-d8e9-4933-a31c-d1e191b0bf95');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-4c356672-1f7a-4fb2-9032-2d42856ba8e5\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-4c356672-1f7a-4fb2-9032-2d42856ba8e5')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-4c356672-1f7a-4fb2-9032-2d42856ba8e5 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 160
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "gw17= homesawayspi.query('Event==\"17.0\"')\n",
        "pd.options.mode.chained_assignment = None  # default='warn'\n",
        "PLSPI = spi.query('league==\"Barclays Premier League\"')\n",
        "PLSPI['League Average']  = PLSPI[\"spi\"].mean()\n",
        "laverage = PLSPI[\"spi\"].mean()\n",
        "PLSPI['League Average'].astype(int)\n",
        "gw17['League_Average']  = laverage\n",
        "gw17.rename(columns = {'Home SPI':'HomeSPI', 'Away SPI':'AwaySPI'}, inplace = True)\n",
        "gw17['home_difference'] = gw17.HomeSPI - gw17.League_Average\n",
        "gw17['away_difference'] = gw17.AwaySPI - gw17.League_Average\n",
        "gw17['home_adjustment'] = (gw17.home_difference - gw17.away_difference + gw17.League_Average)/gw17.League_Average\n",
        "gw17['away_adjustment'] = (gw17.away_difference - gw17.home_difference+ gw17.League_Average)/gw17.League_Average\n",
        "gw17adjustments = gw17[['team_h', 'home_adjustment']].append(gw17[['team_a','away_adjustment']].set_axis(['team_h', 'home_adjustment'], axis=1)).reset_index(drop=True)\n",
        "gw17adjustments.rename(columns = {'team_h':'team'}, inplace = True)\n",
        "gw17adjustments.rename(columns = {'home_adjustment':'gw17adjustment'}, inplace = True)\n",
        "gw17adjustments = gw17adjustments.groupby('team', as_index=False)['gw17adjustment'].aggregate('sum')\n",
        "gw17adjustments"
      ],
      "metadata": {
        "id": "Ns7V93Gobs3z",
        "outputId": "9c1ac7c4-fb25-4c66-b9b2-00a3cb31db0e",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 711
        }
      },
      "execution_count": 161,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "<ipython-input-161-b9fb9397d6d1>:13: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  gw17adjustments = gw17[['team_h', 'home_adjustment']].append(gw17[['team_a','away_adjustment']].set_axis(['team_h', 'home_adjustment'], axis=1)).reset_index(drop=True)\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                       team  gw17adjustment\n",
              "0                   Arsenal        1.042245\n",
              "1               Aston Villa        1.030016\n",
              "2               Bournemouth        1.056975\n",
              "3                 Brentford        0.969984\n",
              "4                  Brighton        0.957755\n",
              "5                   Burnley        0.990412\n",
              "6                   Chelsea        1.266948\n",
              "7            Crystal Palace        0.742362\n",
              "8                   Everton        1.009588\n",
              "9                    Fulham        0.784885\n",
              "10                Liverpool        1.067397\n",
              "11               Luton Town        0.943025\n",
              "12          Manchester City        1.257638\n",
              "13        Manchester United        0.932603\n",
              "14         Newcastle United        1.215115\n",
              "15        Nottingham Forest        0.777520\n",
              "16         Sheffield United        0.733052\n",
              "17                Tottenham        1.222480\n",
              "18                 West Ham        1.167590\n",
              "19  Wolverhampton Wanderers        0.832410"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-5448892f-1d8d-4a23-9eb3-db56d1359855\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>team</th>\n",
              "      <th>gw17adjustment</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>Arsenal</td>\n",
              "      <td>1.042245</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>1.030016</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>Bournemouth</td>\n",
              "      <td>1.056975</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>Brentford</td>\n",
              "      <td>0.969984</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>Brighton</td>\n",
              "      <td>0.957755</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>Burnley</td>\n",
              "      <td>0.990412</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>Chelsea</td>\n",
              "      <td>1.266948</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>Crystal Palace</td>\n",
              "      <td>0.742362</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>Everton</td>\n",
              "      <td>1.009588</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>Fulham</td>\n",
              "      <td>0.784885</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10</th>\n",
              "      <td>Liverpool</td>\n",
              "      <td>1.067397</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>11</th>\n",
              "      <td>Luton Town</td>\n",
              "      <td>0.943025</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>12</th>\n",
              "      <td>Manchester City</td>\n",
              "      <td>1.257638</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>13</th>\n",
              "      <td>Manchester United</td>\n",
              "      <td>0.932603</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>14</th>\n",
              "      <td>Newcastle United</td>\n",
              "      <td>1.215115</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>15</th>\n",
              "      <td>Nottingham Forest</td>\n",
              "      <td>0.777520</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>16</th>\n",
              "      <td>Sheffield United</td>\n",
              "      <td>0.733052</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>17</th>\n",
              "      <td>Tottenham</td>\n",
              "      <td>1.222480</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>18</th>\n",
              "      <td>West Ham</td>\n",
              "      <td>1.167590</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>19</th>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>0.832410</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-5448892f-1d8d-4a23-9eb3-db56d1359855')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-5448892f-1d8d-4a23-9eb3-db56d1359855 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-5448892f-1d8d-4a23-9eb3-db56d1359855');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-cb683527-9915-4ac8-877c-6b27223597f4\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-cb683527-9915-4ac8-877c-6b27223597f4')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-cb683527-9915-4ac8-877c-6b27223597f4 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 161
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "gw18= homesawayspi.query('Event==\"18.0\"')\n",
        "pd.options.mode.chained_assignment = None  # default='warn'\n",
        "PLSPI = spi.query('league==\"Barclays Premier League\"')\n",
        "PLSPI['League Average']  = PLSPI[\"spi\"].mean()\n",
        "laverage = PLSPI[\"spi\"].mean()\n",
        "PLSPI['League Average'].astype(int)\n",
        "gw18['League_Average']  = laverage\n",
        "gw18.rename(columns = {'Home SPI':'HomeSPI', 'Away SPI':'AwaySPI'}, inplace = True)\n",
        "gw18['home_difference'] = gw18.HomeSPI - gw18.League_Average\n",
        "gw18['away_difference'] = gw18.AwaySPI - gw18.League_Average\n",
        "gw18['home_adjustment'] = (gw18.home_difference - gw18.away_difference + gw18.League_Average)/gw18.League_Average\n",
        "gw18['away_adjustment'] = (gw18.away_difference - gw18.home_difference+ gw18.League_Average)/gw18.League_Average\n",
        "gw18adjustments = gw18[['team_h', 'home_adjustment']].append(gw18[['team_a','away_adjustment']].set_axis(['team_h', 'home_adjustment'], axis=1)).reset_index(drop=True)\n",
        "gw18adjustments.rename(columns = {'team_h':'team'}, inplace = True)\n",
        "gw18adjustments.rename(columns = {'home_adjustment':'gw18adjustment'}, inplace = True)\n",
        "gw18adjustments"
      ],
      "metadata": {
        "id": "wlvV4OeQb34Z",
        "outputId": "fb48b8ad-54d0-462c-ea0e-dfb1dfe792fb",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 649
        }
      },
      "execution_count": 162,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "<ipython-input-162-d2e28518c3dd>:13: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  gw18adjustments = gw18[['team_h', 'home_adjustment']].append(gw18[['team_a','away_adjustment']].set_axis(['team_h', 'home_adjustment'], axis=1)).reset_index(drop=True)\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                       team  gw18adjustment\n",
              "0            Crystal Palace        0.896889\n",
              "1               Aston Villa        1.315863\n",
              "2                  West Ham        0.889385\n",
              "3                    Fulham        1.073373\n",
              "4                Luton Town        0.607846\n",
              "5         Nottingham Forest        0.952058\n",
              "6                 Tottenham        1.118258\n",
              "7                 Liverpool        1.000139\n",
              "8   Wolverhampton Wanderers        0.767654\n",
              "9                  Brighton        1.103111\n",
              "10         Sheffield United        0.684137\n",
              "11        Manchester United        1.110615\n",
              "12                  Burnley        0.926627\n",
              "13         Newcastle United        1.392154\n",
              "14              Bournemouth        1.047942\n",
              "15                  Everton        0.881742\n",
              "16                  Arsenal        0.999861\n",
              "17                  Chelsea        1.232346"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-0d3d9564-26cc-463a-9c43-c648dc16a9bf\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>team</th>\n",
              "      <th>gw18adjustment</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>Crystal Palace</td>\n",
              "      <td>0.896889</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>1.315863</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>West Ham</td>\n",
              "      <td>0.889385</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>Fulham</td>\n",
              "      <td>1.073373</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>Luton Town</td>\n",
              "      <td>0.607846</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>Nottingham Forest</td>\n",
              "      <td>0.952058</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>Tottenham</td>\n",
              "      <td>1.118258</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>Liverpool</td>\n",
              "      <td>1.000139</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>0.767654</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>Brighton</td>\n",
              "      <td>1.103111</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10</th>\n",
              "      <td>Sheffield United</td>\n",
              "      <td>0.684137</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>11</th>\n",
              "      <td>Manchester United</td>\n",
              "      <td>1.110615</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>12</th>\n",
              "      <td>Burnley</td>\n",
              "      <td>0.926627</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>13</th>\n",
              "      <td>Newcastle United</td>\n",
              "      <td>1.392154</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>14</th>\n",
              "      <td>Bournemouth</td>\n",
              "      <td>1.047942</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>15</th>\n",
              "      <td>Everton</td>\n",
              "      <td>0.881742</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>16</th>\n",
              "      <td>Arsenal</td>\n",
              "      <td>0.999861</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>17</th>\n",
              "      <td>Chelsea</td>\n",
              "      <td>1.232346</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-0d3d9564-26cc-463a-9c43-c648dc16a9bf')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-0d3d9564-26cc-463a-9c43-c648dc16a9bf button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-0d3d9564-26cc-463a-9c43-c648dc16a9bf');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-2f8d1a24-18be-416f-8587-de745a079751\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-2f8d1a24-18be-416f-8587-de745a079751')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-2f8d1a24-18be-416f-8587-de745a079751 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 162
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "gw18blanks = [['Brentford', 0], ['Manchester City', 0]]\n",
        "\n",
        "# Create the pandas DataFrame\n",
        "blanks18 = pd.DataFrame(gw18blanks, columns=['team', 'gw18adjustment'])\n",
        "blanks18"
      ],
      "metadata": {
        "id": "1jYqDQfTYSo9",
        "outputId": "8c787bbf-32c0-4eec-d983-fe05019739b5",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 112
        }
      },
      "execution_count": 163,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "              team  gw18adjustment\n",
              "0        Brentford               0\n",
              "1  Manchester City               0"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-b2e060a3-6ba3-45c1-97bb-747c1e6d35e0\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>team</th>\n",
              "      <th>gw18adjustment</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>Brentford</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Manchester City</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-b2e060a3-6ba3-45c1-97bb-747c1e6d35e0')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-b2e060a3-6ba3-45c1-97bb-747c1e6d35e0 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-b2e060a3-6ba3-45c1-97bb-747c1e6d35e0');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-9f2074c3-3f55-479b-81a7-7a08d2ce66ac\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-9f2074c3-3f55-479b-81a7-7a08d2ce66ac')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-9f2074c3-3f55-479b-81a7-7a08d2ce66ac button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 163
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "gw18adjustments = pd.concat([gw18adjustments, blanks18])\n",
        "gw18adjustments = gw18adjustments.reset_index(drop=True)\n",
        "gw18adjustments"
      ],
      "metadata": {
        "id": "6Bcop9gVZCW7",
        "outputId": "4b4c6485-ca0e-4e83-89b1-9f07e994a2f2",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 677
        }
      },
      "execution_count": 164,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                       team  gw18adjustment\n",
              "0            Crystal Palace        0.896889\n",
              "1               Aston Villa        1.315863\n",
              "2                  West Ham        0.889385\n",
              "3                    Fulham        1.073373\n",
              "4                Luton Town        0.607846\n",
              "5         Nottingham Forest        0.952058\n",
              "6                 Tottenham        1.118258\n",
              "7                 Liverpool        1.000139\n",
              "8   Wolverhampton Wanderers        0.767654\n",
              "9                  Brighton        1.103111\n",
              "10         Sheffield United        0.684137\n",
              "11        Manchester United        1.110615\n",
              "12                  Burnley        0.926627\n",
              "13         Newcastle United        1.392154\n",
              "14              Bournemouth        1.047942\n",
              "15                  Everton        0.881742\n",
              "16                  Arsenal        0.999861\n",
              "17                  Chelsea        1.232346\n",
              "18                Brentford        0.000000\n",
              "19          Manchester City        0.000000"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-ddadb83c-199e-45af-b31e-fa33544f045a\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>team</th>\n",
              "      <th>gw18adjustment</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>Crystal Palace</td>\n",
              "      <td>0.896889</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>1.315863</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>West Ham</td>\n",
              "      <td>0.889385</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>Fulham</td>\n",
              "      <td>1.073373</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>Luton Town</td>\n",
              "      <td>0.607846</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>Nottingham Forest</td>\n",
              "      <td>0.952058</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>Tottenham</td>\n",
              "      <td>1.118258</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>Liverpool</td>\n",
              "      <td>1.000139</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>0.767654</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>Brighton</td>\n",
              "      <td>1.103111</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10</th>\n",
              "      <td>Sheffield United</td>\n",
              "      <td>0.684137</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>11</th>\n",
              "      <td>Manchester United</td>\n",
              "      <td>1.110615</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>12</th>\n",
              "      <td>Burnley</td>\n",
              "      <td>0.926627</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>13</th>\n",
              "      <td>Newcastle United</td>\n",
              "      <td>1.392154</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>14</th>\n",
              "      <td>Bournemouth</td>\n",
              "      <td>1.047942</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>15</th>\n",
              "      <td>Everton</td>\n",
              "      <td>0.881742</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>16</th>\n",
              "      <td>Arsenal</td>\n",
              "      <td>0.999861</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>17</th>\n",
              "      <td>Chelsea</td>\n",
              "      <td>1.232346</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>18</th>\n",
              "      <td>Brentford</td>\n",
              "      <td>0.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>19</th>\n",
              "      <td>Manchester City</td>\n",
              "      <td>0.000000</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-ddadb83c-199e-45af-b31e-fa33544f045a')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-ddadb83c-199e-45af-b31e-fa33544f045a button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-ddadb83c-199e-45af-b31e-fa33544f045a');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-b10486c1-ad7e-4205-983f-4deef7a3e7fd\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-b10486c1-ad7e-4205-983f-4deef7a3e7fd')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-b10486c1-ad7e-4205-983f-4deef7a3e7fd button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 164
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "gwadjustments1418 = pd.merge(gw14adjustments,gw15adjustments, on ='team')\n",
        "gwadjustments1418 = pd.merge(gwadjustments1418,gw16adjustments, on ='team')\n",
        "gwadjustments1418 = pd.merge(gwadjustments1418,gw17adjustments, on ='team')\n",
        "gwadjustments1418 = pd.merge(gwadjustments1418,gw18adjustments, on ='team')\n",
        "gwadjustments1418"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 677
        },
        "id": "P6_WVsnNkztJ",
        "outputId": "e9700f18-0644-425b-a829-737e6c23315a"
      },
      "execution_count": 165,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                       team  gw14adjustment  gw15adjustment  gw16adjustment  \\\n",
              "0                   Arsenal        1.345463        1.395211        1.064201   \n",
              "1                 Brentford        1.300994        0.948028        1.285847   \n",
              "2                   Burnley        1.088520        1.053918        0.750700   \n",
              "3         Nottingham Forest        0.895778        0.831993        0.959284   \n",
              "4          Newcastle United        1.064201        1.278899        1.160641   \n",
              "5               Bournemouth        0.725965        0.807119        0.729022   \n",
              "6                   Chelsea        0.929129        0.954142        1.168840   \n",
              "7                 Liverpool        1.218311        1.380203        1.145494   \n",
              "8                  West Ham        0.967483        0.985826        1.040299   \n",
              "9           Manchester City        1.275981        1.176483        1.507494   \n",
              "10  Wolverhampton Wanderers        0.654537        0.946082        1.040716   \n",
              "11               Luton Town        0.699006        0.604789        0.492506   \n",
              "12         Sheffield United        0.911480        0.619797        0.714153   \n",
              "13                  Everton        1.104222        0.721101        0.831160   \n",
              "14        Manchester United        0.935799        1.045858        1.270978   \n",
              "15              Aston Villa        1.274035        0.823517        0.935799   \n",
              "16                 Brighton        1.070871        1.051972        1.249300   \n",
              "17                   Fulham        0.781689        1.168007        0.959701   \n",
              "18           Crystal Palace        1.032517        1.192881        0.854506   \n",
              "19                Tottenham        0.724019        1.014174        0.839359   \n",
              "\n",
              "    gw17adjustment  gw18adjustment  \n",
              "0         1.042245        0.999861  \n",
              "1         0.969984        0.000000  \n",
              "2         0.990412        0.926627  \n",
              "3         0.777520        0.952058  \n",
              "4         1.215115        1.392154  \n",
              "5         1.056975        1.047942  \n",
              "6         1.266948        1.232346  \n",
              "7         1.067397        1.000139  \n",
              "8         1.167590        0.889385  \n",
              "9         1.257638        0.000000  \n",
              "10        0.832410        0.767654  \n",
              "11        0.943025        0.607846  \n",
              "12        0.733052        0.684137  \n",
              "13        1.009588        0.881742  \n",
              "14        0.932603        1.110615  \n",
              "15        1.030016        1.315863  \n",
              "16        0.957755        1.103111  \n",
              "17        0.784885        1.073373  \n",
              "18        0.742362        0.896889  \n",
              "19        1.222480        1.118258  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-81d1bf61-4d9f-4b7b-870c-5c271ee71530\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>team</th>\n",
              "      <th>gw14adjustment</th>\n",
              "      <th>gw15adjustment</th>\n",
              "      <th>gw16adjustment</th>\n",
              "      <th>gw17adjustment</th>\n",
              "      <th>gw18adjustment</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>Arsenal</td>\n",
              "      <td>1.345463</td>\n",
              "      <td>1.395211</td>\n",
              "      <td>1.064201</td>\n",
              "      <td>1.042245</td>\n",
              "      <td>0.999861</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Brentford</td>\n",
              "      <td>1.300994</td>\n",
              "      <td>0.948028</td>\n",
              "      <td>1.285847</td>\n",
              "      <td>0.969984</td>\n",
              "      <td>0.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>Burnley</td>\n",
              "      <td>1.088520</td>\n",
              "      <td>1.053918</td>\n",
              "      <td>0.750700</td>\n",
              "      <td>0.990412</td>\n",
              "      <td>0.926627</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>Nottingham Forest</td>\n",
              "      <td>0.895778</td>\n",
              "      <td>0.831993</td>\n",
              "      <td>0.959284</td>\n",
              "      <td>0.777520</td>\n",
              "      <td>0.952058</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>Newcastle United</td>\n",
              "      <td>1.064201</td>\n",
              "      <td>1.278899</td>\n",
              "      <td>1.160641</td>\n",
              "      <td>1.215115</td>\n",
              "      <td>1.392154</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>Bournemouth</td>\n",
              "      <td>0.725965</td>\n",
              "      <td>0.807119</td>\n",
              "      <td>0.729022</td>\n",
              "      <td>1.056975</td>\n",
              "      <td>1.047942</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>Chelsea</td>\n",
              "      <td>0.929129</td>\n",
              "      <td>0.954142</td>\n",
              "      <td>1.168840</td>\n",
              "      <td>1.266948</td>\n",
              "      <td>1.232346</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>Liverpool</td>\n",
              "      <td>1.218311</td>\n",
              "      <td>1.380203</td>\n",
              "      <td>1.145494</td>\n",
              "      <td>1.067397</td>\n",
              "      <td>1.000139</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>West Ham</td>\n",
              "      <td>0.967483</td>\n",
              "      <td>0.985826</td>\n",
              "      <td>1.040299</td>\n",
              "      <td>1.167590</td>\n",
              "      <td>0.889385</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>Manchester City</td>\n",
              "      <td>1.275981</td>\n",
              "      <td>1.176483</td>\n",
              "      <td>1.507494</td>\n",
              "      <td>1.257638</td>\n",
              "      <td>0.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10</th>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>0.654537</td>\n",
              "      <td>0.946082</td>\n",
              "      <td>1.040716</td>\n",
              "      <td>0.832410</td>\n",
              "      <td>0.767654</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>11</th>\n",
              "      <td>Luton Town</td>\n",
              "      <td>0.699006</td>\n",
              "      <td>0.604789</td>\n",
              "      <td>0.492506</td>\n",
              "      <td>0.943025</td>\n",
              "      <td>0.607846</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>12</th>\n",
              "      <td>Sheffield United</td>\n",
              "      <td>0.911480</td>\n",
              "      <td>0.619797</td>\n",
              "      <td>0.714153</td>\n",
              "      <td>0.733052</td>\n",
              "      <td>0.684137</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>13</th>\n",
              "      <td>Everton</td>\n",
              "      <td>1.104222</td>\n",
              "      <td>0.721101</td>\n",
              "      <td>0.831160</td>\n",
              "      <td>1.009588</td>\n",
              "      <td>0.881742</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>14</th>\n",
              "      <td>Manchester United</td>\n",
              "      <td>0.935799</td>\n",
              "      <td>1.045858</td>\n",
              "      <td>1.270978</td>\n",
              "      <td>0.932603</td>\n",
              "      <td>1.110615</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>15</th>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>1.274035</td>\n",
              "      <td>0.823517</td>\n",
              "      <td>0.935799</td>\n",
              "      <td>1.030016</td>\n",
              "      <td>1.315863</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>16</th>\n",
              "      <td>Brighton</td>\n",
              "      <td>1.070871</td>\n",
              "      <td>1.051972</td>\n",
              "      <td>1.249300</td>\n",
              "      <td>0.957755</td>\n",
              "      <td>1.103111</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>17</th>\n",
              "      <td>Fulham</td>\n",
              "      <td>0.781689</td>\n",
              "      <td>1.168007</td>\n",
              "      <td>0.959701</td>\n",
              "      <td>0.784885</td>\n",
              "      <td>1.073373</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>18</th>\n",
              "      <td>Crystal Palace</td>\n",
              "      <td>1.032517</td>\n",
              "      <td>1.192881</td>\n",
              "      <td>0.854506</td>\n",
              "      <td>0.742362</td>\n",
              "      <td>0.896889</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>19</th>\n",
              "      <td>Tottenham</td>\n",
              "      <td>0.724019</td>\n",
              "      <td>1.014174</td>\n",
              "      <td>0.839359</td>\n",
              "      <td>1.222480</td>\n",
              "      <td>1.118258</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-81d1bf61-4d9f-4b7b-870c-5c271ee71530')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-81d1bf61-4d9f-4b7b-870c-5c271ee71530 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-81d1bf61-4d9f-4b7b-870c-5c271ee71530');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-77bcdc0f-4235-4bbd-b1c6-10ac574bbeb4\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-77bcdc0f-4235-4bbd-b1c6-10ac574bbeb4')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-77bcdc0f-4235-4bbd-b1c6-10ac574bbeb4 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 165
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "rawdfgw228x = pd.merge(rawallplayersallgw,\n",
        "                     gwadjustments1418,\n",
        "                     on ='team',\n",
        "                     how ='left')\n",
        "rawdfgw228x.rename(columns = {'gw14adjustment_y':'gw14adjustment'}, inplace = True)\n",
        "rawdfgw228x = rawdfgw228x.round(1)\n",
        "rawdfgw228x"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 513
        },
        "id": "-b-0jux2PKIX",
        "outputId": "6deebd1b-755c-4a29-c8ca-cddfa38414cf"
      },
      "execution_count": 197,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "      id                     team pos     name  cost  selected_by_percent  \\\n",
              "0      1                  Arsenal   F  Balogun   4.4                  0.2   \n",
              "1      8                  Arsenal   F  G.Jesus   7.8                  2.3   \n",
              "2     13                  Arsenal   F  Nketiah   5.7                  9.8   \n",
              "3     39              Aston Villa   F    Davis   4.9                  0.1   \n",
              "4     44              Aston Villa   F    Duran   5.0                  0.2   \n",
              "..   ...                      ...  ..      ...   ...                  ...   \n",
              "742  647                 West Ham   G    Anang   4.0                  0.1   \n",
              "743  546  Wolverhampton Wanderers   G  Bentley   3.9                  0.6   \n",
              "744  564  Wolverhampton Wanderers   G     King   4.0                  0.7   \n",
              "745  569  Wolverhampton Wanderers   G  José Sá   5.0                  1.6   \n",
              "746  571  Wolverhampton Wanderers   G   Šarkić   4.0                  0.3   \n",
              "\n",
              "     goals_scored  assists  bps  ict_index  ...  points_per_game  minutes  \\\n",
              "0               0        0    0        0.0  ...              0.0        0   \n",
              "1               1        1   51       32.3  ...              2.5      427   \n",
              "2               5        2  162       55.9  ...              3.9      790   \n",
              "3               0        0    0        0.0  ...              0.0        0   \n",
              "4               2        0   57       13.9  ...              2.3       69   \n",
              "..            ...      ...  ...        ...  ...              ...      ...   \n",
              "742             0        0    0        0.0  ...              0.0        0   \n",
              "743             0        0    0        0.0  ...              0.0        0   \n",
              "744             0        0    0        0.0  ...              0.0        0   \n",
              "745             0        0  220       33.5  ...              2.9     1170   \n",
              "746             0        0    0        0.0  ...              0.0        0   \n",
              "\n",
              "     gw14adjustment_x  xPallgw  xCSP  gw14adjustment  gw15adjustment  \\\n",
              "0                 1.3      2.0   NaN             1.3             1.4   \n",
              "1                 1.3      2.8   NaN             1.3             1.4   \n",
              "2                 1.3      3.0   NaN             1.3             1.4   \n",
              "3                 1.3      2.0   NaN             1.3             0.8   \n",
              "4                 1.3      2.2   NaN             1.3             0.8   \n",
              "..                ...      ...   ...             ...             ...   \n",
              "742               1.0      1.9  -0.1             1.0             1.0   \n",
              "743               0.7      2.0   0.0             0.7             0.9   \n",
              "744               0.7      2.0   0.0             0.7             0.9   \n",
              "745               0.7      2.0   0.0             0.7             0.9   \n",
              "746               0.7      2.0   0.0             0.7             0.9   \n",
              "\n",
              "     gw16adjustment  gw17adjustment  gw18adjustment  \n",
              "0               1.1             1.0             1.0  \n",
              "1               1.1             1.0             1.0  \n",
              "2               1.1             1.0             1.0  \n",
              "3               0.9             1.0             1.3  \n",
              "4               0.9             1.0             1.3  \n",
              "..              ...             ...             ...  \n",
              "742             1.0             1.2             0.9  \n",
              "743             1.0             0.8             0.8  \n",
              "744             1.0             0.8             0.8  \n",
              "745             1.0             0.8             0.8  \n",
              "746             1.0             0.8             0.8  \n",
              "\n",
              "[747 rows x 21 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-3ba9fb79-66ca-48d3-a3d5-8cd109dc187f\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>team</th>\n",
              "      <th>pos</th>\n",
              "      <th>name</th>\n",
              "      <th>cost</th>\n",
              "      <th>selected_by_percent</th>\n",
              "      <th>goals_scored</th>\n",
              "      <th>assists</th>\n",
              "      <th>bps</th>\n",
              "      <th>ict_index</th>\n",
              "      <th>...</th>\n",
              "      <th>points_per_game</th>\n",
              "      <th>minutes</th>\n",
              "      <th>gw14adjustment_x</th>\n",
              "      <th>xPallgw</th>\n",
              "      <th>xCSP</th>\n",
              "      <th>gw14adjustment</th>\n",
              "      <th>gw15adjustment</th>\n",
              "      <th>gw16adjustment</th>\n",
              "      <th>gw17adjustment</th>\n",
              "      <th>gw18adjustment</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>1</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>F</td>\n",
              "      <td>Balogun</td>\n",
              "      <td>4.4</td>\n",
              "      <td>0.2</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>1.3</td>\n",
              "      <td>2.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1.3</td>\n",
              "      <td>1.4</td>\n",
              "      <td>1.1</td>\n",
              "      <td>1.0</td>\n",
              "      <td>1.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>8</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>F</td>\n",
              "      <td>G.Jesus</td>\n",
              "      <td>7.8</td>\n",
              "      <td>2.3</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>51</td>\n",
              "      <td>32.3</td>\n",
              "      <td>...</td>\n",
              "      <td>2.5</td>\n",
              "      <td>427</td>\n",
              "      <td>1.3</td>\n",
              "      <td>2.8</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1.3</td>\n",
              "      <td>1.4</td>\n",
              "      <td>1.1</td>\n",
              "      <td>1.0</td>\n",
              "      <td>1.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>13</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>F</td>\n",
              "      <td>Nketiah</td>\n",
              "      <td>5.7</td>\n",
              "      <td>9.8</td>\n",
              "      <td>5</td>\n",
              "      <td>2</td>\n",
              "      <td>162</td>\n",
              "      <td>55.9</td>\n",
              "      <td>...</td>\n",
              "      <td>3.9</td>\n",
              "      <td>790</td>\n",
              "      <td>1.3</td>\n",
              "      <td>3.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1.3</td>\n",
              "      <td>1.4</td>\n",
              "      <td>1.1</td>\n",
              "      <td>1.0</td>\n",
              "      <td>1.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>39</td>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>F</td>\n",
              "      <td>Davis</td>\n",
              "      <td>4.9</td>\n",
              "      <td>0.1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>1.3</td>\n",
              "      <td>2.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1.3</td>\n",
              "      <td>0.8</td>\n",
              "      <td>0.9</td>\n",
              "      <td>1.0</td>\n",
              "      <td>1.3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>44</td>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>F</td>\n",
              "      <td>Duran</td>\n",
              "      <td>5.0</td>\n",
              "      <td>0.2</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>57</td>\n",
              "      <td>13.9</td>\n",
              "      <td>...</td>\n",
              "      <td>2.3</td>\n",
              "      <td>69</td>\n",
              "      <td>1.3</td>\n",
              "      <td>2.2</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1.3</td>\n",
              "      <td>0.8</td>\n",
              "      <td>0.9</td>\n",
              "      <td>1.0</td>\n",
              "      <td>1.3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>742</th>\n",
              "      <td>647</td>\n",
              "      <td>West Ham</td>\n",
              "      <td>G</td>\n",
              "      <td>Anang</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>1.9</td>\n",
              "      <td>-0.1</td>\n",
              "      <td>1.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>1.2</td>\n",
              "      <td>0.9</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>743</th>\n",
              "      <td>546</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>G</td>\n",
              "      <td>Bentley</td>\n",
              "      <td>3.9</td>\n",
              "      <td>0.6</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.7</td>\n",
              "      <td>2.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.7</td>\n",
              "      <td>0.9</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.8</td>\n",
              "      <td>0.8</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>744</th>\n",
              "      <td>564</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>G</td>\n",
              "      <td>King</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.7</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.7</td>\n",
              "      <td>2.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.7</td>\n",
              "      <td>0.9</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.8</td>\n",
              "      <td>0.8</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>745</th>\n",
              "      <td>569</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>G</td>\n",
              "      <td>José Sá</td>\n",
              "      <td>5.0</td>\n",
              "      <td>1.6</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>220</td>\n",
              "      <td>33.5</td>\n",
              "      <td>...</td>\n",
              "      <td>2.9</td>\n",
              "      <td>1170</td>\n",
              "      <td>0.7</td>\n",
              "      <td>2.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.7</td>\n",
              "      <td>0.9</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.8</td>\n",
              "      <td>0.8</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>746</th>\n",
              "      <td>571</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>G</td>\n",
              "      <td>Šarkić</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.3</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.7</td>\n",
              "      <td>2.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.7</td>\n",
              "      <td>0.9</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.8</td>\n",
              "      <td>0.8</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>747 rows × 21 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-3ba9fb79-66ca-48d3-a3d5-8cd109dc187f')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-3ba9fb79-66ca-48d3-a3d5-8cd109dc187f button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-3ba9fb79-66ca-48d3-a3d5-8cd109dc187f');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-672a0dc6-69e0-41b2-89b9-45051417ce3f\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-672a0dc6-69e0-41b2-89b9-45051417ce3f')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-672a0dc6-69e0-41b2-89b9-45051417ce3f button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 197
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#gw3adjustments = gw3adjustments.groupby('team', as_index=False)['gw3adjustment'].aggregate('sum')\n",
        "#gw3adjustments"
      ],
      "metadata": {
        "id": "6x3Lj7jPTCVC"
      },
      "execution_count": 198,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "rawdfgw228x['gw14'] = (((rawdfgw228x.xPallgw - 2)*rawdfgw228x.gw14adjustment)+2)\n",
        "rawdfgw228x['gw15'] = (((rawdfgw228x.xPallgw - 2)*rawdfgw228x.gw15adjustment)+2)\n",
        "rawdfgw228x['gw16'] = (((rawdfgw228x.xPallgw - 2)*rawdfgw228x.gw16adjustment)+2)\n",
        "rawdfgw228x['gw17'] = (((rawdfgw228x.xPallgw - 2)*rawdfgw228x.gw17adjustment)+2)\n",
        "rawdfgw228x['gw18'] = (((rawdfgw228x.xPallgw - 2)*rawdfgw228x.gw18adjustment)+2)\n",
        "\n",
        "rawdfgw228x['5GW Total'] = rawdfgw228x.gw15 + rawdfgw228x.gw16 + rawdfgw228x.gw17 + rawdfgw228x.gw18 + rawdfgw228x.gw14\n",
        "rawdfgw228x['3GW Total'] = rawdfgw228x.gw15 + rawdfgw228x.gw16 + rawdfgw228x.gw14\n",
        "rawdfgw228x = rawdfgw228x.drop(columns=[\n",
        "  'gw14adjustment',\n",
        "  'gw15adjustment',\n",
        "  'gw16adjustment',\n",
        "  'gw17adjustment',\n",
        "  'gw18adjustment'\n",
        "  ])\n",
        "rawdfgw228x"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 424
        },
        "id": "Dgw1xB0YUN9D",
        "outputId": "c9f24064-b53b-46d0-a14d-b47e9f775cf9"
      },
      "execution_count": 199,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "      id                     team pos     name  cost  selected_by_percent  \\\n",
              "0      1                  Arsenal   F  Balogun   4.4                  0.2   \n",
              "1      8                  Arsenal   F  G.Jesus   7.8                  2.3   \n",
              "2     13                  Arsenal   F  Nketiah   5.7                  9.8   \n",
              "3     39              Aston Villa   F    Davis   4.9                  0.1   \n",
              "4     44              Aston Villa   F    Duran   5.0                  0.2   \n",
              "..   ...                      ...  ..      ...   ...                  ...   \n",
              "742  647                 West Ham   G    Anang   4.0                  0.1   \n",
              "743  546  Wolverhampton Wanderers   G  Bentley   3.9                  0.6   \n",
              "744  564  Wolverhampton Wanderers   G     King   4.0                  0.7   \n",
              "745  569  Wolverhampton Wanderers   G  José Sá   5.0                  1.6   \n",
              "746  571  Wolverhampton Wanderers   G   Šarkić   4.0                  0.3   \n",
              "\n",
              "     goals_scored  assists  bps  ict_index  ...  gw14adjustment_x  xPallgw  \\\n",
              "0               0        0    0        0.0  ...               1.3      2.0   \n",
              "1               1        1   51       32.3  ...               1.3      2.8   \n",
              "2               5        2  162       55.9  ...               1.3      3.0   \n",
              "3               0        0    0        0.0  ...               1.3      2.0   \n",
              "4               2        0   57       13.9  ...               1.3      2.2   \n",
              "..            ...      ...  ...        ...  ...               ...      ...   \n",
              "742             0        0    0        0.0  ...               1.0      1.9   \n",
              "743             0        0    0        0.0  ...               0.7      2.0   \n",
              "744             0        0    0        0.0  ...               0.7      2.0   \n",
              "745             0        0  220       33.5  ...               0.7      2.0   \n",
              "746             0        0    0        0.0  ...               0.7      2.0   \n",
              "\n",
              "     xCSP  gw14  gw15  gw16  gw17  gw18  5GW Total  3GW Total  \n",
              "0     NaN  2.00  2.00  2.00  2.00  2.00      10.00       6.00  \n",
              "1     NaN  3.04  3.12  2.88  2.80  2.80      14.64       9.04  \n",
              "2     NaN  3.30  3.40  3.10  3.00  3.00      15.80       9.80  \n",
              "3     NaN  2.00  2.00  2.00  2.00  2.00      10.00       6.00  \n",
              "4     NaN  2.26  2.16  2.18  2.20  2.26      11.06       6.60  \n",
              "..    ...   ...   ...   ...   ...   ...        ...        ...  \n",
              "742  -0.1  1.90  1.90  1.90  1.88  1.91       9.49       5.70  \n",
              "743   0.0  2.00  2.00  2.00  2.00  2.00      10.00       6.00  \n",
              "744   0.0  2.00  2.00  2.00  2.00  2.00      10.00       6.00  \n",
              "745   0.0  2.00  2.00  2.00  2.00  2.00      10.00       6.00  \n",
              "746   0.0  2.00  2.00  2.00  2.00  2.00      10.00       6.00  \n",
              "\n",
              "[747 rows x 23 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-6f48369a-9572-4a82-9784-f919cdfebe6b\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>team</th>\n",
              "      <th>pos</th>\n",
              "      <th>name</th>\n",
              "      <th>cost</th>\n",
              "      <th>selected_by_percent</th>\n",
              "      <th>goals_scored</th>\n",
              "      <th>assists</th>\n",
              "      <th>bps</th>\n",
              "      <th>ict_index</th>\n",
              "      <th>...</th>\n",
              "      <th>gw14adjustment_x</th>\n",
              "      <th>xPallgw</th>\n",
              "      <th>xCSP</th>\n",
              "      <th>gw14</th>\n",
              "      <th>gw15</th>\n",
              "      <th>gw16</th>\n",
              "      <th>gw17</th>\n",
              "      <th>gw18</th>\n",
              "      <th>5GW Total</th>\n",
              "      <th>3GW Total</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>1</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>F</td>\n",
              "      <td>Balogun</td>\n",
              "      <td>4.4</td>\n",
              "      <td>0.2</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>1.3</td>\n",
              "      <td>2.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>10.00</td>\n",
              "      <td>6.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>8</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>F</td>\n",
              "      <td>G.Jesus</td>\n",
              "      <td>7.8</td>\n",
              "      <td>2.3</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>51</td>\n",
              "      <td>32.3</td>\n",
              "      <td>...</td>\n",
              "      <td>1.3</td>\n",
              "      <td>2.8</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.04</td>\n",
              "      <td>3.12</td>\n",
              "      <td>2.88</td>\n",
              "      <td>2.80</td>\n",
              "      <td>2.80</td>\n",
              "      <td>14.64</td>\n",
              "      <td>9.04</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>13</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>F</td>\n",
              "      <td>Nketiah</td>\n",
              "      <td>5.7</td>\n",
              "      <td>9.8</td>\n",
              "      <td>5</td>\n",
              "      <td>2</td>\n",
              "      <td>162</td>\n",
              "      <td>55.9</td>\n",
              "      <td>...</td>\n",
              "      <td>1.3</td>\n",
              "      <td>3.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.30</td>\n",
              "      <td>3.40</td>\n",
              "      <td>3.10</td>\n",
              "      <td>3.00</td>\n",
              "      <td>3.00</td>\n",
              "      <td>15.80</td>\n",
              "      <td>9.80</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>39</td>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>F</td>\n",
              "      <td>Davis</td>\n",
              "      <td>4.9</td>\n",
              "      <td>0.1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>1.3</td>\n",
              "      <td>2.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>10.00</td>\n",
              "      <td>6.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>44</td>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>F</td>\n",
              "      <td>Duran</td>\n",
              "      <td>5.0</td>\n",
              "      <td>0.2</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>57</td>\n",
              "      <td>13.9</td>\n",
              "      <td>...</td>\n",
              "      <td>1.3</td>\n",
              "      <td>2.2</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2.26</td>\n",
              "      <td>2.16</td>\n",
              "      <td>2.18</td>\n",
              "      <td>2.20</td>\n",
              "      <td>2.26</td>\n",
              "      <td>11.06</td>\n",
              "      <td>6.60</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>742</th>\n",
              "      <td>647</td>\n",
              "      <td>West Ham</td>\n",
              "      <td>G</td>\n",
              "      <td>Anang</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>1.0</td>\n",
              "      <td>1.9</td>\n",
              "      <td>-0.1</td>\n",
              "      <td>1.90</td>\n",
              "      <td>1.90</td>\n",
              "      <td>1.90</td>\n",
              "      <td>1.88</td>\n",
              "      <td>1.91</td>\n",
              "      <td>9.49</td>\n",
              "      <td>5.70</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>743</th>\n",
              "      <td>546</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>G</td>\n",
              "      <td>Bentley</td>\n",
              "      <td>3.9</td>\n",
              "      <td>0.6</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0.7</td>\n",
              "      <td>2.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>10.00</td>\n",
              "      <td>6.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>744</th>\n",
              "      <td>564</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>G</td>\n",
              "      <td>King</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.7</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0.7</td>\n",
              "      <td>2.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>10.00</td>\n",
              "      <td>6.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>745</th>\n",
              "      <td>569</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>G</td>\n",
              "      <td>José Sá</td>\n",
              "      <td>5.0</td>\n",
              "      <td>1.6</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>220</td>\n",
              "      <td>33.5</td>\n",
              "      <td>...</td>\n",
              "      <td>0.7</td>\n",
              "      <td>2.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>10.00</td>\n",
              "      <td>6.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>746</th>\n",
              "      <td>571</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>G</td>\n",
              "      <td>Šarkić</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.3</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0.7</td>\n",
              "      <td>2.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>10.00</td>\n",
              "      <td>6.00</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>747 rows × 23 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-6f48369a-9572-4a82-9784-f919cdfebe6b')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-6f48369a-9572-4a82-9784-f919cdfebe6b button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-6f48369a-9572-4a82-9784-f919cdfebe6b');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-46c8793d-bbdb-4656-ac48-27f66fa1b13e\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-46c8793d-bbdb-4656-ac48-27f66fa1b13e')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-46c8793d-bbdb-4656-ac48-27f66fa1b13e button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 199
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "rawdfgw228x.drop_duplicates(subset='name', keep='last', inplace=True)\n",
        "rawdfgw228x"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 424
        },
        "id": "Jud88GRHgLWf",
        "outputId": "83f39c72-9cc5-40c4-c64a-c14a9b330e88"
      },
      "execution_count": 200,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "      id                     team pos     name  cost  selected_by_percent  \\\n",
              "0      1                  Arsenal   F  Balogun   4.4                  0.2   \n",
              "1      8                  Arsenal   F  G.Jesus   7.8                  2.3   \n",
              "2     13                  Arsenal   F  Nketiah   5.7                  9.8   \n",
              "3     39              Aston Villa   F    Davis   4.9                  0.1   \n",
              "4     44              Aston Villa   F    Duran   5.0                  0.2   \n",
              "..   ...                      ...  ..      ...   ...                  ...   \n",
              "742  647                 West Ham   G    Anang   4.0                  0.1   \n",
              "743  546  Wolverhampton Wanderers   G  Bentley   3.9                  0.6   \n",
              "744  564  Wolverhampton Wanderers   G     King   4.0                  0.7   \n",
              "745  569  Wolverhampton Wanderers   G  José Sá   5.0                  1.6   \n",
              "746  571  Wolverhampton Wanderers   G   Šarkić   4.0                  0.3   \n",
              "\n",
              "     goals_scored  assists  bps  ict_index  ...  gw14adjustment_x  xPallgw  \\\n",
              "0               0        0    0        0.0  ...               1.3      2.0   \n",
              "1               1        1   51       32.3  ...               1.3      2.8   \n",
              "2               5        2  162       55.9  ...               1.3      3.0   \n",
              "3               0        0    0        0.0  ...               1.3      2.0   \n",
              "4               2        0   57       13.9  ...               1.3      2.2   \n",
              "..            ...      ...  ...        ...  ...               ...      ...   \n",
              "742             0        0    0        0.0  ...               1.0      1.9   \n",
              "743             0        0    0        0.0  ...               0.7      2.0   \n",
              "744             0        0    0        0.0  ...               0.7      2.0   \n",
              "745             0        0  220       33.5  ...               0.7      2.0   \n",
              "746             0        0    0        0.0  ...               0.7      2.0   \n",
              "\n",
              "     xCSP  gw14  gw15  gw16  gw17  gw18  5GW Total  3GW Total  \n",
              "0     NaN  2.00  2.00  2.00  2.00  2.00      10.00       6.00  \n",
              "1     NaN  3.04  3.12  2.88  2.80  2.80      14.64       9.04  \n",
              "2     NaN  3.30  3.40  3.10  3.00  3.00      15.80       9.80  \n",
              "3     NaN  2.00  2.00  2.00  2.00  2.00      10.00       6.00  \n",
              "4     NaN  2.26  2.16  2.18  2.20  2.26      11.06       6.60  \n",
              "..    ...   ...   ...   ...   ...   ...        ...        ...  \n",
              "742  -0.1  1.90  1.90  1.90  1.88  1.91       9.49       5.70  \n",
              "743   0.0  2.00  2.00  2.00  2.00  2.00      10.00       6.00  \n",
              "744   0.0  2.00  2.00  2.00  2.00  2.00      10.00       6.00  \n",
              "745   0.0  2.00  2.00  2.00  2.00  2.00      10.00       6.00  \n",
              "746   0.0  2.00  2.00  2.00  2.00  2.00      10.00       6.00  \n",
              "\n",
              "[724 rows x 23 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-2dc96a91-fe26-4b4b-90be-52fa8ff2e16d\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>team</th>\n",
              "      <th>pos</th>\n",
              "      <th>name</th>\n",
              "      <th>cost</th>\n",
              "      <th>selected_by_percent</th>\n",
              "      <th>goals_scored</th>\n",
              "      <th>assists</th>\n",
              "      <th>bps</th>\n",
              "      <th>ict_index</th>\n",
              "      <th>...</th>\n",
              "      <th>gw14adjustment_x</th>\n",
              "      <th>xPallgw</th>\n",
              "      <th>xCSP</th>\n",
              "      <th>gw14</th>\n",
              "      <th>gw15</th>\n",
              "      <th>gw16</th>\n",
              "      <th>gw17</th>\n",
              "      <th>gw18</th>\n",
              "      <th>5GW Total</th>\n",
              "      <th>3GW Total</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>1</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>F</td>\n",
              "      <td>Balogun</td>\n",
              "      <td>4.4</td>\n",
              "      <td>0.2</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>1.3</td>\n",
              "      <td>2.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>10.00</td>\n",
              "      <td>6.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>8</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>F</td>\n",
              "      <td>G.Jesus</td>\n",
              "      <td>7.8</td>\n",
              "      <td>2.3</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>51</td>\n",
              "      <td>32.3</td>\n",
              "      <td>...</td>\n",
              "      <td>1.3</td>\n",
              "      <td>2.8</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.04</td>\n",
              "      <td>3.12</td>\n",
              "      <td>2.88</td>\n",
              "      <td>2.80</td>\n",
              "      <td>2.80</td>\n",
              "      <td>14.64</td>\n",
              "      <td>9.04</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>13</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>F</td>\n",
              "      <td>Nketiah</td>\n",
              "      <td>5.7</td>\n",
              "      <td>9.8</td>\n",
              "      <td>5</td>\n",
              "      <td>2</td>\n",
              "      <td>162</td>\n",
              "      <td>55.9</td>\n",
              "      <td>...</td>\n",
              "      <td>1.3</td>\n",
              "      <td>3.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.30</td>\n",
              "      <td>3.40</td>\n",
              "      <td>3.10</td>\n",
              "      <td>3.00</td>\n",
              "      <td>3.00</td>\n",
              "      <td>15.80</td>\n",
              "      <td>9.80</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>39</td>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>F</td>\n",
              "      <td>Davis</td>\n",
              "      <td>4.9</td>\n",
              "      <td>0.1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>1.3</td>\n",
              "      <td>2.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>10.00</td>\n",
              "      <td>6.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>44</td>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>F</td>\n",
              "      <td>Duran</td>\n",
              "      <td>5.0</td>\n",
              "      <td>0.2</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>57</td>\n",
              "      <td>13.9</td>\n",
              "      <td>...</td>\n",
              "      <td>1.3</td>\n",
              "      <td>2.2</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2.26</td>\n",
              "      <td>2.16</td>\n",
              "      <td>2.18</td>\n",
              "      <td>2.20</td>\n",
              "      <td>2.26</td>\n",
              "      <td>11.06</td>\n",
              "      <td>6.60</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>742</th>\n",
              "      <td>647</td>\n",
              "      <td>West Ham</td>\n",
              "      <td>G</td>\n",
              "      <td>Anang</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>1.0</td>\n",
              "      <td>1.9</td>\n",
              "      <td>-0.1</td>\n",
              "      <td>1.90</td>\n",
              "      <td>1.90</td>\n",
              "      <td>1.90</td>\n",
              "      <td>1.88</td>\n",
              "      <td>1.91</td>\n",
              "      <td>9.49</td>\n",
              "      <td>5.70</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>743</th>\n",
              "      <td>546</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>G</td>\n",
              "      <td>Bentley</td>\n",
              "      <td>3.9</td>\n",
              "      <td>0.6</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0.7</td>\n",
              "      <td>2.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>10.00</td>\n",
              "      <td>6.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>744</th>\n",
              "      <td>564</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>G</td>\n",
              "      <td>King</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.7</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0.7</td>\n",
              "      <td>2.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>10.00</td>\n",
              "      <td>6.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>745</th>\n",
              "      <td>569</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>G</td>\n",
              "      <td>José Sá</td>\n",
              "      <td>5.0</td>\n",
              "      <td>1.6</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>220</td>\n",
              "      <td>33.5</td>\n",
              "      <td>...</td>\n",
              "      <td>0.7</td>\n",
              "      <td>2.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>10.00</td>\n",
              "      <td>6.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>746</th>\n",
              "      <td>571</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>G</td>\n",
              "      <td>Šarkić</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.3</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0.7</td>\n",
              "      <td>2.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>10.00</td>\n",
              "      <td>6.00</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>724 rows × 23 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-2dc96a91-fe26-4b4b-90be-52fa8ff2e16d')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-2dc96a91-fe26-4b4b-90be-52fa8ff2e16d button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-2dc96a91-fe26-4b4b-90be-52fa8ff2e16d');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-85cfc86c-0c20-4ecb-9b8b-f59d1ec01171\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-85cfc86c-0c20-4ecb-9b8b-f59d1ec01171')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-85cfc86c-0c20-4ecb-9b8b-f59d1ec01171 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 200
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "from pandas import ExcelWriter\n",
        "writer = ExcelWriter('API model.xlsx')\n",
        "rawdfgw228x.to_excel(writer, sheet_name='Sheet1')\n",
        "gwadjustments1418.to_excel(writer, sheet_name='Sheet2')\n",
        "#fplwithunderstat.to_excel(writer, sheet_name='Sheet3')\n",
        "\n",
        "# Close the Pandas Excel writer and output the Excel file.\n",
        "writer.save()"
      ],
      "metadata": {
        "id": "tdXsMsuwaWa4",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "c8a51738-5049-4fb4-afd8-8e2d52600bdc"
      },
      "execution_count": 201,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "<ipython-input-201-bfcfa676ed92>:8: FutureWarning:\n",
            "\n",
            "save is not part of the public API, usage can give unexpected results and will be removed in a future version\n",
            "\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#from google.colab import drive\n",
        "#drive.mount('/content/drive')"
      ],
      "metadata": {
        "id": "GzSzE5_Ckuq3"
      },
      "execution_count": 202,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "import shutil"
      ],
      "metadata": {
        "id": "xSIwXnyAk2op"
      },
      "execution_count": 203,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "#shutil.copy(\"/content/API model.xlsx\",\"/content/drive/MyDrive/FPL\")"
      ],
      "metadata": {
        "id": "O724A90vk3b4"
      },
      "execution_count": 204,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "rawdfgw228x.nlargest(50, '5GW Total')"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "id": "4ULMO_eqJXIT",
        "outputId": "376e6b1f-db90-4949-c4b4-2aba5d6d18fe"
      },
      "execution_count": 205,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "      id                     team pos              name  cost  \\\n",
              "273  308                Liverpool   M             Salah  13.0   \n",
              "62   355          Manchester City   F           Haaland  14.0   \n",
              "157  108                Brentford   M            Mbeumo   7.0   \n",
              "107   19                  Arsenal   M              Saka   8.8   \n",
              "5     60              Aston Villa   F           Watkins   8.5   \n",
              "30   211                  Chelsea   F         N.Jackson   6.9   \n",
              "215  362                  Chelsea   M            Palmer   5.3   \n",
              "431   36              Aston Villa   D              Cash   5.1   \n",
              "67   415         Newcastle United   F              Isak   7.4   \n",
              "394  526                 West Ham   M             Bowen   7.6   \n",
              "391  516                Tottenham   M               Son   9.6   \n",
              "316  373        Manchester United   M       B.Fernandes   8.3   \n",
              "325  396        Manchester United   M          Rashford   8.6   \n",
              "50   293                Liverpool   F            Darwin   7.6   \n",
              "588  430         Newcastle United   D          Trippier   7.0   \n",
              "335  412         Newcastle United   M            Gordon   5.9   \n",
              "238  249                  Everton   M        A.Doucoure   5.5   \n",
              "61   343          Manchester City   F         J.Alvarez   7.1   \n",
              "213  216                  Chelsea   M          Sterling   7.0   \n",
              "179  143                 Brighton   M            Mitoma   6.5   \n",
              "386  504                Tottenham   M          Maddison   7.9   \n",
              "9     85              Bournemouth   F           Solanke   6.5   \n",
              "119   43              Aston Villa   M      Douglas Luiz   5.6   \n",
              "128  599              Aston Villa   M             Diaby   6.8   \n",
              "304  353          Manchester City   M             Foden   7.5   \n",
              "16   135                 Brighton   F        João Pedro   5.3   \n",
              "403  664                 West Ham   M       Ward-Prowse   6.2   \n",
              "423   20                  Arsenal   D            Saliba   5.5   \n",
              "426   29                  Arsenal   D             White   5.7   \n",
              "427   31                  Arsenal   D         Zinchenko   5.1   \n",
              "226  226           Crystal Palace   M               Eze   6.2   \n",
              "555  342          Manchester City   D               Aké   5.0   \n",
              "462  129                 Brighton   D              Dunk   5.0   \n",
              "400  542                 West Ham   M            Souček   4.9   \n",
              "410  557  Wolverhampton Wanderers   M          Hee Chan   5.6   \n",
              "104   14                  Arsenal   M          Ødegaard   8.3   \n",
              "271  303                Liverpool   M         Luis Díaz   7.4   \n",
              "581  407         Newcastle United   D              Burn   4.5   \n",
              "208  199                  Chelsea   M              Enzo   4.8   \n",
              "12   119                Brentford   F             Wissa   5.9   \n",
              "399  539                 West Ham   M         L.Paquetá   6.0   \n",
              "35   225           Crystal Palace   F           Edouard   5.5   \n",
              "100    6                  Arsenal   M           Havertz   7.1   \n",
              "266  294                Liverpool   M          Diogo J.   7.7   \n",
              "421    5                  Arsenal   D           Gabriel   4.9   \n",
              "425   25                  Arsenal   D          Tomiyasu   4.5   \n",
              "530  290                Liverpool   D  Alexander-Arnold   7.9   \n",
              "115   34              Aston Villa   M            Bailey   5.5   \n",
              "261  591                   Fulham   M           Willian   5.3   \n",
              "586  427         Newcastle United   D             Schär   5.2   \n",
              "\n",
              "     selected_by_percent  goals_scored  assists  bps  ict_index  ...  \\\n",
              "273                 48.4            10        5  323      142.6  ...   \n",
              "62                  82.7            14        3  400      147.0  ...   \n",
              "157                 26.9             6        3  216      111.3  ...   \n",
              "107                 53.4             4        7  293      121.7  ...   \n",
              "5                   43.8             7        8  289      118.3  ...   \n",
              "30                   6.1             6        0  158       83.4  ...   \n",
              "215                 12.2             4        3  179       65.7  ...   \n",
              "431                 29.6             2        1  201       60.6  ...   \n",
              "67                  12.0             7        0  198       60.6  ...   \n",
              "394                 24.6             8        1  227       99.3  ...   \n",
              "391                 39.2             8        1  264      106.9  ...   \n",
              "316                 15.0             3        3  246      115.6  ...   \n",
              "325                 12.6             2        2  120       73.8  ...   \n",
              "50                  17.1             4        6  165       78.0  ...   \n",
              "588                 49.7             0        6  333       93.7  ...   \n",
              "335                 13.7             5        5  210       76.2  ...   \n",
              "238                  0.8             4        2  178       88.0  ...   \n",
              "61                  30.9             4        6  286      102.5  ...   \n",
              "213                  9.4             5        4  185       95.5  ...   \n",
              "179                 24.7             3        4  173       86.9  ...   \n",
              "386                 11.3             3        6  230      109.6  ...   \n",
              "9                    5.7             6        1  163       89.0  ...   \n",
              "119                 11.8             5        2  299       78.3  ...   \n",
              "128                 15.1             3        6  202       85.7  ...   \n",
              "304                  9.8             3        3  238       99.3  ...   \n",
              "16                   8.6             4        1  153       65.8  ...   \n",
              "403                 11.4             2        5  284       91.8  ...   \n",
              "423                 34.2             1        1  272       36.0  ...   \n",
              "426                 12.9             1        1  239       48.2  ...   \n",
              "427                  9.1             1        0  223       46.4  ...   \n",
              "226                  5.4             2        2  148       80.9  ...   \n",
              "555                  5.1             2        1  168       37.5  ...   \n",
              "462                  3.4             1        0  171       48.0  ...   \n",
              "400                  1.6             4        1  162       64.8  ...   \n",
              "410                  5.7             7        2  197       70.9  ...   \n",
              "104                 13.2             3        2  171       69.4  ...   \n",
              "271                  6.9             3        1  108       45.0  ...   \n",
              "581                  4.1             1        0  175       36.4  ...   \n",
              "208                  2.6             0        1  130       58.7  ...   \n",
              "12                   8.6             3        2  166       66.0  ...   \n",
              "399                  1.7             2        1  176       62.8  ...   \n",
              "35                   4.5             5        0  165       81.3  ...   \n",
              "100                  1.5             2        1   86       44.6  ...   \n",
              "266                  1.9             4        2  131       65.5  ...   \n",
              "421                 15.5             0        0  165       23.4  ...   \n",
              "425                  0.5             1        0  101       17.3  ...   \n",
              "530                  8.8             1        1  217       59.4  ...   \n",
              "115                  1.0             3        3  118       46.5  ...   \n",
              "261                  0.4             3        1  163       62.2  ...   \n",
              "586                  7.6             0        1  253       35.7  ...   \n",
              "\n",
              "     gw14adjustment_x  xPallgw  xCSP  gw14  gw15  gw16  gw17  gw18  5GW Total  \\\n",
              "273               1.2      6.2   NaN  7.04  7.88  6.62  6.62  6.20      34.36   \n",
              "62                1.3      6.3   NaN  7.59  7.16  8.45  7.59  2.00      32.79   \n",
              "157               1.3      5.7   NaN  6.81  5.33  6.81  5.70  2.00      26.65   \n",
              "107               1.3      4.5   NaN  5.25  5.50  4.75  4.50  4.50      24.50   \n",
              "5                 1.3      4.7   NaN  5.51  4.16  4.43  4.70  5.51      24.31   \n",
              "30                0.9      4.5   NaN  4.25  4.50  5.00  5.25  5.00      24.00   \n",
              "215               0.9      4.2   NaN  3.98  4.20  4.64  4.86  4.64      22.32   \n",
              "431               1.3      4.3   0.4  4.99  3.84  4.07  4.30  4.99      22.19   \n",
              "67                1.1      3.9   NaN  4.09  4.47  4.28  4.28  4.66      21.78   \n",
              "394               1.0      4.3   NaN  4.30  4.30  4.30  4.76  4.07      21.73   \n",
              "391               0.7      4.4   NaN  3.68  4.40  3.92  4.88  4.64      21.52   \n",
              "316               0.9      4.2   NaN  3.98  4.20  4.86  3.98  4.42      21.44   \n",
              "325               0.9      4.2   NaN  3.98  4.20  4.86  3.98  4.42      21.44   \n",
              "50                1.2      3.9   NaN  4.28  4.66  4.09  4.09  3.90      21.02   \n",
              "588               1.1      3.7   0.7  3.87  4.21  4.04  4.04  4.38      20.54   \n",
              "335               1.1      3.6   NaN  3.76  4.08  3.92  3.92  4.24      19.92   \n",
              "238               1.1      4.1   NaN  4.31  3.47  3.68  4.10  3.89      19.45   \n",
              "61                1.3      3.7   NaN  4.21  4.04  4.55  4.21  2.00      19.01   \n",
              "213               0.9      3.6   NaN  3.44  3.60  3.92  4.08  3.92      18.96   \n",
              "179               1.1      3.6   NaN  3.76  3.76  3.92  3.60  3.76      18.80   \n",
              "386               0.7      3.8   NaN  3.26  3.80  3.44  4.16  3.98      18.64   \n",
              "9                 0.7      4.0   NaN  3.40  3.60  3.40  4.20  4.00      18.60   \n",
              "119               1.3      3.6   NaN  4.08  3.28  3.44  3.60  4.08      18.48   \n",
              "128               1.3      3.6   NaN  4.08  3.28  3.44  3.60  4.08      18.48   \n",
              "304               1.3      3.6   NaN  4.08  3.92  4.40  4.08  2.00      18.48   \n",
              "16                1.1      3.5   NaN  3.65  3.65  3.80  3.50  3.65      18.25   \n",
              "403               1.0      3.6   NaN  3.60  3.60  3.60  3.92  3.44      18.16   \n",
              "423               1.3      3.4   1.0  3.82  3.96  3.54  3.40  3.40      18.12   \n",
              "426               1.3      3.4   1.0  3.82  3.96  3.54  3.40  3.40      18.12   \n",
              "427               1.3      3.4   1.0  3.82  3.96  3.54  3.40  3.40      18.12   \n",
              "226               1.0      3.7   NaN  3.70  4.04  3.53  3.19  3.53      17.99   \n",
              "555               1.3      3.5   0.9  3.95  3.80  4.25  3.95  2.00      17.95   \n",
              "462               1.1      3.4   0.3  3.54  3.54  3.68  3.40  3.54      17.70   \n",
              "400               1.0      3.5   NaN  3.50  3.50  3.50  3.80  3.35      17.65   \n",
              "410               0.7      3.8   NaN  3.26  3.62  3.80  3.44  3.44      17.56   \n",
              "104               1.3      3.3   NaN  3.69  3.82  3.43  3.30  3.30      17.54   \n",
              "271               1.2      3.3   NaN  3.56  3.82  3.43  3.43  3.30      17.54   \n",
              "581               1.1      3.2   0.7  3.32  3.56  3.44  3.44  3.68      17.44   \n",
              "208               0.9      3.3   NaN  3.17  3.30  3.56  3.69  3.56      17.28   \n",
              "12                1.3      3.6   NaN  4.08  3.44  4.08  3.60  2.00      17.20   \n",
              "399               1.0      3.4   NaN  3.40  3.40  3.40  3.68  3.26      17.14   \n",
              "35                1.0      3.5   NaN  3.50  3.80  3.35  3.05  3.35      17.05   \n",
              "100               1.3      3.2   NaN  3.56  3.68  3.32  3.20  3.20      16.96   \n",
              "266               1.2      3.2   NaN  3.44  3.68  3.32  3.32  3.20      16.96   \n",
              "421               1.3      3.2   1.0  3.56  3.68  3.32  3.20  3.20      16.96   \n",
              "425               1.3      3.2   1.0  3.56  3.68  3.32  3.20  3.20      16.96   \n",
              "530               1.2      3.2   0.5  3.44  3.68  3.32  3.32  3.20      16.96   \n",
              "115               1.3      3.3   NaN  3.69  3.04  3.17  3.30  3.69      16.89   \n",
              "261               0.8      3.4   NaN  3.12  3.68  3.40  3.12  3.54      16.86   \n",
              "586               1.1      3.1   0.7  3.21  3.43  3.32  3.32  3.54      16.82   \n",
              "\n",
              "     3GW Total  \n",
              "273      21.54  \n",
              "62       23.20  \n",
              "157      18.95  \n",
              "107      15.50  \n",
              "5        14.10  \n",
              "30       13.75  \n",
              "215      12.82  \n",
              "431      12.90  \n",
              "67       12.84  \n",
              "394      12.90  \n",
              "391      12.00  \n",
              "316      13.04  \n",
              "325      13.04  \n",
              "50       13.03  \n",
              "588      12.12  \n",
              "335      11.76  \n",
              "238      11.46  \n",
              "61       12.80  \n",
              "213      10.96  \n",
              "179      11.44  \n",
              "386      10.50  \n",
              "9        10.40  \n",
              "119      10.80  \n",
              "128      10.80  \n",
              "304      12.40  \n",
              "16       11.10  \n",
              "403      10.80  \n",
              "423      11.32  \n",
              "426      11.32  \n",
              "427      11.32  \n",
              "226      11.27  \n",
              "555      12.00  \n",
              "462      10.76  \n",
              "400      10.50  \n",
              "410      10.68  \n",
              "104      10.94  \n",
              "271      10.81  \n",
              "581      10.32  \n",
              "208      10.03  \n",
              "12       11.60  \n",
              "399      10.20  \n",
              "35       10.65  \n",
              "100      10.56  \n",
              "266      10.44  \n",
              "421      10.56  \n",
              "425      10.56  \n",
              "530      10.44  \n",
              "115       9.90  \n",
              "261      10.20  \n",
              "586       9.96  \n",
              "\n",
              "[50 rows x 23 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-30ebb586-5b73-4d22-b991-ae46bf3185fb\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>team</th>\n",
              "      <th>pos</th>\n",
              "      <th>name</th>\n",
              "      <th>cost</th>\n",
              "      <th>selected_by_percent</th>\n",
              "      <th>goals_scored</th>\n",
              "      <th>assists</th>\n",
              "      <th>bps</th>\n",
              "      <th>ict_index</th>\n",
              "      <th>...</th>\n",
              "      <th>gw14adjustment_x</th>\n",
              "      <th>xPallgw</th>\n",
              "      <th>xCSP</th>\n",
              "      <th>gw14</th>\n",
              "      <th>gw15</th>\n",
              "      <th>gw16</th>\n",
              "      <th>gw17</th>\n",
              "      <th>gw18</th>\n",
              "      <th>5GW Total</th>\n",
              "      <th>3GW Total</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>273</th>\n",
              "      <td>308</td>\n",
              "      <td>Liverpool</td>\n",
              "      <td>M</td>\n",
              "      <td>Salah</td>\n",
              "      <td>13.0</td>\n",
              "      <td>48.4</td>\n",
              "      <td>10</td>\n",
              "      <td>5</td>\n",
              "      <td>323</td>\n",
              "      <td>142.6</td>\n",
              "      <td>...</td>\n",
              "      <td>1.2</td>\n",
              "      <td>6.2</td>\n",
              "      <td>NaN</td>\n",
              "      <td>7.04</td>\n",
              "      <td>7.88</td>\n",
              "      <td>6.62</td>\n",
              "      <td>6.62</td>\n",
              "      <td>6.20</td>\n",
              "      <td>34.36</td>\n",
              "      <td>21.54</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>62</th>\n",
              "      <td>355</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>F</td>\n",
              "      <td>Haaland</td>\n",
              "      <td>14.0</td>\n",
              "      <td>82.7</td>\n",
              "      <td>14</td>\n",
              "      <td>3</td>\n",
              "      <td>400</td>\n",
              "      <td>147.0</td>\n",
              "      <td>...</td>\n",
              "      <td>1.3</td>\n",
              "      <td>6.3</td>\n",
              "      <td>NaN</td>\n",
              "      <td>7.59</td>\n",
              "      <td>7.16</td>\n",
              "      <td>8.45</td>\n",
              "      <td>7.59</td>\n",
              "      <td>2.00</td>\n",
              "      <td>32.79</td>\n",
              "      <td>23.20</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>157</th>\n",
              "      <td>108</td>\n",
              "      <td>Brentford</td>\n",
              "      <td>M</td>\n",
              "      <td>Mbeumo</td>\n",
              "      <td>7.0</td>\n",
              "      <td>26.9</td>\n",
              "      <td>6</td>\n",
              "      <td>3</td>\n",
              "      <td>216</td>\n",
              "      <td>111.3</td>\n",
              "      <td>...</td>\n",
              "      <td>1.3</td>\n",
              "      <td>5.7</td>\n",
              "      <td>NaN</td>\n",
              "      <td>6.81</td>\n",
              "      <td>5.33</td>\n",
              "      <td>6.81</td>\n",
              "      <td>5.70</td>\n",
              "      <td>2.00</td>\n",
              "      <td>26.65</td>\n",
              "      <td>18.95</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>107</th>\n",
              "      <td>19</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>M</td>\n",
              "      <td>Saka</td>\n",
              "      <td>8.8</td>\n",
              "      <td>53.4</td>\n",
              "      <td>4</td>\n",
              "      <td>7</td>\n",
              "      <td>293</td>\n",
              "      <td>121.7</td>\n",
              "      <td>...</td>\n",
              "      <td>1.3</td>\n",
              "      <td>4.5</td>\n",
              "      <td>NaN</td>\n",
              "      <td>5.25</td>\n",
              "      <td>5.50</td>\n",
              "      <td>4.75</td>\n",
              "      <td>4.50</td>\n",
              "      <td>4.50</td>\n",
              "      <td>24.50</td>\n",
              "      <td>15.50</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>60</td>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>F</td>\n",
              "      <td>Watkins</td>\n",
              "      <td>8.5</td>\n",
              "      <td>43.8</td>\n",
              "      <td>7</td>\n",
              "      <td>8</td>\n",
              "      <td>289</td>\n",
              "      <td>118.3</td>\n",
              "      <td>...</td>\n",
              "      <td>1.3</td>\n",
              "      <td>4.7</td>\n",
              "      <td>NaN</td>\n",
              "      <td>5.51</td>\n",
              "      <td>4.16</td>\n",
              "      <td>4.43</td>\n",
              "      <td>4.70</td>\n",
              "      <td>5.51</td>\n",
              "      <td>24.31</td>\n",
              "      <td>14.10</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>30</th>\n",
              "      <td>211</td>\n",
              "      <td>Chelsea</td>\n",
              "      <td>F</td>\n",
              "      <td>N.Jackson</td>\n",
              "      <td>6.9</td>\n",
              "      <td>6.1</td>\n",
              "      <td>6</td>\n",
              "      <td>0</td>\n",
              "      <td>158</td>\n",
              "      <td>83.4</td>\n",
              "      <td>...</td>\n",
              "      <td>0.9</td>\n",
              "      <td>4.5</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4.25</td>\n",
              "      <td>4.50</td>\n",
              "      <td>5.00</td>\n",
              "      <td>5.25</td>\n",
              "      <td>5.00</td>\n",
              "      <td>24.00</td>\n",
              "      <td>13.75</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>215</th>\n",
              "      <td>362</td>\n",
              "      <td>Chelsea</td>\n",
              "      <td>M</td>\n",
              "      <td>Palmer</td>\n",
              "      <td>5.3</td>\n",
              "      <td>12.2</td>\n",
              "      <td>4</td>\n",
              "      <td>3</td>\n",
              "      <td>179</td>\n",
              "      <td>65.7</td>\n",
              "      <td>...</td>\n",
              "      <td>0.9</td>\n",
              "      <td>4.2</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.98</td>\n",
              "      <td>4.20</td>\n",
              "      <td>4.64</td>\n",
              "      <td>4.86</td>\n",
              "      <td>4.64</td>\n",
              "      <td>22.32</td>\n",
              "      <td>12.82</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>431</th>\n",
              "      <td>36</td>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>D</td>\n",
              "      <td>Cash</td>\n",
              "      <td>5.1</td>\n",
              "      <td>29.6</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>201</td>\n",
              "      <td>60.6</td>\n",
              "      <td>...</td>\n",
              "      <td>1.3</td>\n",
              "      <td>4.3</td>\n",
              "      <td>0.4</td>\n",
              "      <td>4.99</td>\n",
              "      <td>3.84</td>\n",
              "      <td>4.07</td>\n",
              "      <td>4.30</td>\n",
              "      <td>4.99</td>\n",
              "      <td>22.19</td>\n",
              "      <td>12.90</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>67</th>\n",
              "      <td>415</td>\n",
              "      <td>Newcastle United</td>\n",
              "      <td>F</td>\n",
              "      <td>Isak</td>\n",
              "      <td>7.4</td>\n",
              "      <td>12.0</td>\n",
              "      <td>7</td>\n",
              "      <td>0</td>\n",
              "      <td>198</td>\n",
              "      <td>60.6</td>\n",
              "      <td>...</td>\n",
              "      <td>1.1</td>\n",
              "      <td>3.9</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4.09</td>\n",
              "      <td>4.47</td>\n",
              "      <td>4.28</td>\n",
              "      <td>4.28</td>\n",
              "      <td>4.66</td>\n",
              "      <td>21.78</td>\n",
              "      <td>12.84</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>394</th>\n",
              "      <td>526</td>\n",
              "      <td>West Ham</td>\n",
              "      <td>M</td>\n",
              "      <td>Bowen</td>\n",
              "      <td>7.6</td>\n",
              "      <td>24.6</td>\n",
              "      <td>8</td>\n",
              "      <td>1</td>\n",
              "      <td>227</td>\n",
              "      <td>99.3</td>\n",
              "      <td>...</td>\n",
              "      <td>1.0</td>\n",
              "      <td>4.3</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4.30</td>\n",
              "      <td>4.30</td>\n",
              "      <td>4.30</td>\n",
              "      <td>4.76</td>\n",
              "      <td>4.07</td>\n",
              "      <td>21.73</td>\n",
              "      <td>12.90</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>391</th>\n",
              "      <td>516</td>\n",
              "      <td>Tottenham</td>\n",
              "      <td>M</td>\n",
              "      <td>Son</td>\n",
              "      <td>9.6</td>\n",
              "      <td>39.2</td>\n",
              "      <td>8</td>\n",
              "      <td>1</td>\n",
              "      <td>264</td>\n",
              "      <td>106.9</td>\n",
              "      <td>...</td>\n",
              "      <td>0.7</td>\n",
              "      <td>4.4</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.68</td>\n",
              "      <td>4.40</td>\n",
              "      <td>3.92</td>\n",
              "      <td>4.88</td>\n",
              "      <td>4.64</td>\n",
              "      <td>21.52</td>\n",
              "      <td>12.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>316</th>\n",
              "      <td>373</td>\n",
              "      <td>Manchester United</td>\n",
              "      <td>M</td>\n",
              "      <td>B.Fernandes</td>\n",
              "      <td>8.3</td>\n",
              "      <td>15.0</td>\n",
              "      <td>3</td>\n",
              "      <td>3</td>\n",
              "      <td>246</td>\n",
              "      <td>115.6</td>\n",
              "      <td>...</td>\n",
              "      <td>0.9</td>\n",
              "      <td>4.2</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.98</td>\n",
              "      <td>4.20</td>\n",
              "      <td>4.86</td>\n",
              "      <td>3.98</td>\n",
              "      <td>4.42</td>\n",
              "      <td>21.44</td>\n",
              "      <td>13.04</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>325</th>\n",
              "      <td>396</td>\n",
              "      <td>Manchester United</td>\n",
              "      <td>M</td>\n",
              "      <td>Rashford</td>\n",
              "      <td>8.6</td>\n",
              "      <td>12.6</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>120</td>\n",
              "      <td>73.8</td>\n",
              "      <td>...</td>\n",
              "      <td>0.9</td>\n",
              "      <td>4.2</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.98</td>\n",
              "      <td>4.20</td>\n",
              "      <td>4.86</td>\n",
              "      <td>3.98</td>\n",
              "      <td>4.42</td>\n",
              "      <td>21.44</td>\n",
              "      <td>13.04</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>50</th>\n",
              "      <td>293</td>\n",
              "      <td>Liverpool</td>\n",
              "      <td>F</td>\n",
              "      <td>Darwin</td>\n",
              "      <td>7.6</td>\n",
              "      <td>17.1</td>\n",
              "      <td>4</td>\n",
              "      <td>6</td>\n",
              "      <td>165</td>\n",
              "      <td>78.0</td>\n",
              "      <td>...</td>\n",
              "      <td>1.2</td>\n",
              "      <td>3.9</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4.28</td>\n",
              "      <td>4.66</td>\n",
              "      <td>4.09</td>\n",
              "      <td>4.09</td>\n",
              "      <td>3.90</td>\n",
              "      <td>21.02</td>\n",
              "      <td>13.03</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>588</th>\n",
              "      <td>430</td>\n",
              "      <td>Newcastle United</td>\n",
              "      <td>D</td>\n",
              "      <td>Trippier</td>\n",
              "      <td>7.0</td>\n",
              "      <td>49.7</td>\n",
              "      <td>0</td>\n",
              "      <td>6</td>\n",
              "      <td>333</td>\n",
              "      <td>93.7</td>\n",
              "      <td>...</td>\n",
              "      <td>1.1</td>\n",
              "      <td>3.7</td>\n",
              "      <td>0.7</td>\n",
              "      <td>3.87</td>\n",
              "      <td>4.21</td>\n",
              "      <td>4.04</td>\n",
              "      <td>4.04</td>\n",
              "      <td>4.38</td>\n",
              "      <td>20.54</td>\n",
              "      <td>12.12</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>335</th>\n",
              "      <td>412</td>\n",
              "      <td>Newcastle United</td>\n",
              "      <td>M</td>\n",
              "      <td>Gordon</td>\n",
              "      <td>5.9</td>\n",
              "      <td>13.7</td>\n",
              "      <td>5</td>\n",
              "      <td>5</td>\n",
              "      <td>210</td>\n",
              "      <td>76.2</td>\n",
              "      <td>...</td>\n",
              "      <td>1.1</td>\n",
              "      <td>3.6</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.76</td>\n",
              "      <td>4.08</td>\n",
              "      <td>3.92</td>\n",
              "      <td>3.92</td>\n",
              "      <td>4.24</td>\n",
              "      <td>19.92</td>\n",
              "      <td>11.76</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>238</th>\n",
              "      <td>249</td>\n",
              "      <td>Everton</td>\n",
              "      <td>M</td>\n",
              "      <td>A.Doucoure</td>\n",
              "      <td>5.5</td>\n",
              "      <td>0.8</td>\n",
              "      <td>4</td>\n",
              "      <td>2</td>\n",
              "      <td>178</td>\n",
              "      <td>88.0</td>\n",
              "      <td>...</td>\n",
              "      <td>1.1</td>\n",
              "      <td>4.1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4.31</td>\n",
              "      <td>3.47</td>\n",
              "      <td>3.68</td>\n",
              "      <td>4.10</td>\n",
              "      <td>3.89</td>\n",
              "      <td>19.45</td>\n",
              "      <td>11.46</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>61</th>\n",
              "      <td>343</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>F</td>\n",
              "      <td>J.Alvarez</td>\n",
              "      <td>7.1</td>\n",
              "      <td>30.9</td>\n",
              "      <td>4</td>\n",
              "      <td>6</td>\n",
              "      <td>286</td>\n",
              "      <td>102.5</td>\n",
              "      <td>...</td>\n",
              "      <td>1.3</td>\n",
              "      <td>3.7</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4.21</td>\n",
              "      <td>4.04</td>\n",
              "      <td>4.55</td>\n",
              "      <td>4.21</td>\n",
              "      <td>2.00</td>\n",
              "      <td>19.01</td>\n",
              "      <td>12.80</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>213</th>\n",
              "      <td>216</td>\n",
              "      <td>Chelsea</td>\n",
              "      <td>M</td>\n",
              "      <td>Sterling</td>\n",
              "      <td>7.0</td>\n",
              "      <td>9.4</td>\n",
              "      <td>5</td>\n",
              "      <td>4</td>\n",
              "      <td>185</td>\n",
              "      <td>95.5</td>\n",
              "      <td>...</td>\n",
              "      <td>0.9</td>\n",
              "      <td>3.6</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.44</td>\n",
              "      <td>3.60</td>\n",
              "      <td>3.92</td>\n",
              "      <td>4.08</td>\n",
              "      <td>3.92</td>\n",
              "      <td>18.96</td>\n",
              "      <td>10.96</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>179</th>\n",
              "      <td>143</td>\n",
              "      <td>Brighton</td>\n",
              "      <td>M</td>\n",
              "      <td>Mitoma</td>\n",
              "      <td>6.5</td>\n",
              "      <td>24.7</td>\n",
              "      <td>3</td>\n",
              "      <td>4</td>\n",
              "      <td>173</td>\n",
              "      <td>86.9</td>\n",
              "      <td>...</td>\n",
              "      <td>1.1</td>\n",
              "      <td>3.6</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.76</td>\n",
              "      <td>3.76</td>\n",
              "      <td>3.92</td>\n",
              "      <td>3.60</td>\n",
              "      <td>3.76</td>\n",
              "      <td>18.80</td>\n",
              "      <td>11.44</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>386</th>\n",
              "      <td>504</td>\n",
              "      <td>Tottenham</td>\n",
              "      <td>M</td>\n",
              "      <td>Maddison</td>\n",
              "      <td>7.9</td>\n",
              "      <td>11.3</td>\n",
              "      <td>3</td>\n",
              "      <td>6</td>\n",
              "      <td>230</td>\n",
              "      <td>109.6</td>\n",
              "      <td>...</td>\n",
              "      <td>0.7</td>\n",
              "      <td>3.8</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.26</td>\n",
              "      <td>3.80</td>\n",
              "      <td>3.44</td>\n",
              "      <td>4.16</td>\n",
              "      <td>3.98</td>\n",
              "      <td>18.64</td>\n",
              "      <td>10.50</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>85</td>\n",
              "      <td>Bournemouth</td>\n",
              "      <td>F</td>\n",
              "      <td>Solanke</td>\n",
              "      <td>6.5</td>\n",
              "      <td>5.7</td>\n",
              "      <td>6</td>\n",
              "      <td>1</td>\n",
              "      <td>163</td>\n",
              "      <td>89.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0.7</td>\n",
              "      <td>4.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.40</td>\n",
              "      <td>3.60</td>\n",
              "      <td>3.40</td>\n",
              "      <td>4.20</td>\n",
              "      <td>4.00</td>\n",
              "      <td>18.60</td>\n",
              "      <td>10.40</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>119</th>\n",
              "      <td>43</td>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>M</td>\n",
              "      <td>Douglas Luiz</td>\n",
              "      <td>5.6</td>\n",
              "      <td>11.8</td>\n",
              "      <td>5</td>\n",
              "      <td>2</td>\n",
              "      <td>299</td>\n",
              "      <td>78.3</td>\n",
              "      <td>...</td>\n",
              "      <td>1.3</td>\n",
              "      <td>3.6</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4.08</td>\n",
              "      <td>3.28</td>\n",
              "      <td>3.44</td>\n",
              "      <td>3.60</td>\n",
              "      <td>4.08</td>\n",
              "      <td>18.48</td>\n",
              "      <td>10.80</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>128</th>\n",
              "      <td>599</td>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>M</td>\n",
              "      <td>Diaby</td>\n",
              "      <td>6.8</td>\n",
              "      <td>15.1</td>\n",
              "      <td>3</td>\n",
              "      <td>6</td>\n",
              "      <td>202</td>\n",
              "      <td>85.7</td>\n",
              "      <td>...</td>\n",
              "      <td>1.3</td>\n",
              "      <td>3.6</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4.08</td>\n",
              "      <td>3.28</td>\n",
              "      <td>3.44</td>\n",
              "      <td>3.60</td>\n",
              "      <td>4.08</td>\n",
              "      <td>18.48</td>\n",
              "      <td>10.80</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>304</th>\n",
              "      <td>353</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>M</td>\n",
              "      <td>Foden</td>\n",
              "      <td>7.5</td>\n",
              "      <td>9.8</td>\n",
              "      <td>3</td>\n",
              "      <td>3</td>\n",
              "      <td>238</td>\n",
              "      <td>99.3</td>\n",
              "      <td>...</td>\n",
              "      <td>1.3</td>\n",
              "      <td>3.6</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4.08</td>\n",
              "      <td>3.92</td>\n",
              "      <td>4.40</td>\n",
              "      <td>4.08</td>\n",
              "      <td>2.00</td>\n",
              "      <td>18.48</td>\n",
              "      <td>12.40</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>16</th>\n",
              "      <td>135</td>\n",
              "      <td>Brighton</td>\n",
              "      <td>F</td>\n",
              "      <td>João Pedro</td>\n",
              "      <td>5.3</td>\n",
              "      <td>8.6</td>\n",
              "      <td>4</td>\n",
              "      <td>1</td>\n",
              "      <td>153</td>\n",
              "      <td>65.8</td>\n",
              "      <td>...</td>\n",
              "      <td>1.1</td>\n",
              "      <td>3.5</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.65</td>\n",
              "      <td>3.65</td>\n",
              "      <td>3.80</td>\n",
              "      <td>3.50</td>\n",
              "      <td>3.65</td>\n",
              "      <td>18.25</td>\n",
              "      <td>11.10</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>403</th>\n",
              "      <td>664</td>\n",
              "      <td>West Ham</td>\n",
              "      <td>M</td>\n",
              "      <td>Ward-Prowse</td>\n",
              "      <td>6.2</td>\n",
              "      <td>11.4</td>\n",
              "      <td>2</td>\n",
              "      <td>5</td>\n",
              "      <td>284</td>\n",
              "      <td>91.8</td>\n",
              "      <td>...</td>\n",
              "      <td>1.0</td>\n",
              "      <td>3.6</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.60</td>\n",
              "      <td>3.60</td>\n",
              "      <td>3.60</td>\n",
              "      <td>3.92</td>\n",
              "      <td>3.44</td>\n",
              "      <td>18.16</td>\n",
              "      <td>10.80</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>423</th>\n",
              "      <td>20</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>D</td>\n",
              "      <td>Saliba</td>\n",
              "      <td>5.5</td>\n",
              "      <td>34.2</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>272</td>\n",
              "      <td>36.0</td>\n",
              "      <td>...</td>\n",
              "      <td>1.3</td>\n",
              "      <td>3.4</td>\n",
              "      <td>1.0</td>\n",
              "      <td>3.82</td>\n",
              "      <td>3.96</td>\n",
              "      <td>3.54</td>\n",
              "      <td>3.40</td>\n",
              "      <td>3.40</td>\n",
              "      <td>18.12</td>\n",
              "      <td>11.32</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>426</th>\n",
              "      <td>29</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>D</td>\n",
              "      <td>White</td>\n",
              "      <td>5.7</td>\n",
              "      <td>12.9</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>239</td>\n",
              "      <td>48.2</td>\n",
              "      <td>...</td>\n",
              "      <td>1.3</td>\n",
              "      <td>3.4</td>\n",
              "      <td>1.0</td>\n",
              "      <td>3.82</td>\n",
              "      <td>3.96</td>\n",
              "      <td>3.54</td>\n",
              "      <td>3.40</td>\n",
              "      <td>3.40</td>\n",
              "      <td>18.12</td>\n",
              "      <td>11.32</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>427</th>\n",
              "      <td>31</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>D</td>\n",
              "      <td>Zinchenko</td>\n",
              "      <td>5.1</td>\n",
              "      <td>9.1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>223</td>\n",
              "      <td>46.4</td>\n",
              "      <td>...</td>\n",
              "      <td>1.3</td>\n",
              "      <td>3.4</td>\n",
              "      <td>1.0</td>\n",
              "      <td>3.82</td>\n",
              "      <td>3.96</td>\n",
              "      <td>3.54</td>\n",
              "      <td>3.40</td>\n",
              "      <td>3.40</td>\n",
              "      <td>18.12</td>\n",
              "      <td>11.32</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>226</th>\n",
              "      <td>226</td>\n",
              "      <td>Crystal Palace</td>\n",
              "      <td>M</td>\n",
              "      <td>Eze</td>\n",
              "      <td>6.2</td>\n",
              "      <td>5.4</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>148</td>\n",
              "      <td>80.9</td>\n",
              "      <td>...</td>\n",
              "      <td>1.0</td>\n",
              "      <td>3.7</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.70</td>\n",
              "      <td>4.04</td>\n",
              "      <td>3.53</td>\n",
              "      <td>3.19</td>\n",
              "      <td>3.53</td>\n",
              "      <td>17.99</td>\n",
              "      <td>11.27</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>555</th>\n",
              "      <td>342</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>D</td>\n",
              "      <td>Aké</td>\n",
              "      <td>5.0</td>\n",
              "      <td>5.1</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>168</td>\n",
              "      <td>37.5</td>\n",
              "      <td>...</td>\n",
              "      <td>1.3</td>\n",
              "      <td>3.5</td>\n",
              "      <td>0.9</td>\n",
              "      <td>3.95</td>\n",
              "      <td>3.80</td>\n",
              "      <td>4.25</td>\n",
              "      <td>3.95</td>\n",
              "      <td>2.00</td>\n",
              "      <td>17.95</td>\n",
              "      <td>12.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>462</th>\n",
              "      <td>129</td>\n",
              "      <td>Brighton</td>\n",
              "      <td>D</td>\n",
              "      <td>Dunk</td>\n",
              "      <td>5.0</td>\n",
              "      <td>3.4</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>171</td>\n",
              "      <td>48.0</td>\n",
              "      <td>...</td>\n",
              "      <td>1.1</td>\n",
              "      <td>3.4</td>\n",
              "      <td>0.3</td>\n",
              "      <td>3.54</td>\n",
              "      <td>3.54</td>\n",
              "      <td>3.68</td>\n",
              "      <td>3.40</td>\n",
              "      <td>3.54</td>\n",
              "      <td>17.70</td>\n",
              "      <td>10.76</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>400</th>\n",
              "      <td>542</td>\n",
              "      <td>West Ham</td>\n",
              "      <td>M</td>\n",
              "      <td>Souček</td>\n",
              "      <td>4.9</td>\n",
              "      <td>1.6</td>\n",
              "      <td>4</td>\n",
              "      <td>1</td>\n",
              "      <td>162</td>\n",
              "      <td>64.8</td>\n",
              "      <td>...</td>\n",
              "      <td>1.0</td>\n",
              "      <td>3.5</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.50</td>\n",
              "      <td>3.50</td>\n",
              "      <td>3.50</td>\n",
              "      <td>3.80</td>\n",
              "      <td>3.35</td>\n",
              "      <td>17.65</td>\n",
              "      <td>10.50</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>410</th>\n",
              "      <td>557</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>M</td>\n",
              "      <td>Hee Chan</td>\n",
              "      <td>5.6</td>\n",
              "      <td>5.7</td>\n",
              "      <td>7</td>\n",
              "      <td>2</td>\n",
              "      <td>197</td>\n",
              "      <td>70.9</td>\n",
              "      <td>...</td>\n",
              "      <td>0.7</td>\n",
              "      <td>3.8</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.26</td>\n",
              "      <td>3.62</td>\n",
              "      <td>3.80</td>\n",
              "      <td>3.44</td>\n",
              "      <td>3.44</td>\n",
              "      <td>17.56</td>\n",
              "      <td>10.68</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>104</th>\n",
              "      <td>14</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>M</td>\n",
              "      <td>Ødegaard</td>\n",
              "      <td>8.3</td>\n",
              "      <td>13.2</td>\n",
              "      <td>3</td>\n",
              "      <td>2</td>\n",
              "      <td>171</td>\n",
              "      <td>69.4</td>\n",
              "      <td>...</td>\n",
              "      <td>1.3</td>\n",
              "      <td>3.3</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.69</td>\n",
              "      <td>3.82</td>\n",
              "      <td>3.43</td>\n",
              "      <td>3.30</td>\n",
              "      <td>3.30</td>\n",
              "      <td>17.54</td>\n",
              "      <td>10.94</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>271</th>\n",
              "      <td>303</td>\n",
              "      <td>Liverpool</td>\n",
              "      <td>M</td>\n",
              "      <td>Luis Díaz</td>\n",
              "      <td>7.4</td>\n",
              "      <td>6.9</td>\n",
              "      <td>3</td>\n",
              "      <td>1</td>\n",
              "      <td>108</td>\n",
              "      <td>45.0</td>\n",
              "      <td>...</td>\n",
              "      <td>1.2</td>\n",
              "      <td>3.3</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.56</td>\n",
              "      <td>3.82</td>\n",
              "      <td>3.43</td>\n",
              "      <td>3.43</td>\n",
              "      <td>3.30</td>\n",
              "      <td>17.54</td>\n",
              "      <td>10.81</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>581</th>\n",
              "      <td>407</td>\n",
              "      <td>Newcastle United</td>\n",
              "      <td>D</td>\n",
              "      <td>Burn</td>\n",
              "      <td>4.5</td>\n",
              "      <td>4.1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>175</td>\n",
              "      <td>36.4</td>\n",
              "      <td>...</td>\n",
              "      <td>1.1</td>\n",
              "      <td>3.2</td>\n",
              "      <td>0.7</td>\n",
              "      <td>3.32</td>\n",
              "      <td>3.56</td>\n",
              "      <td>3.44</td>\n",
              "      <td>3.44</td>\n",
              "      <td>3.68</td>\n",
              "      <td>17.44</td>\n",
              "      <td>10.32</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>208</th>\n",
              "      <td>199</td>\n",
              "      <td>Chelsea</td>\n",
              "      <td>M</td>\n",
              "      <td>Enzo</td>\n",
              "      <td>4.8</td>\n",
              "      <td>2.6</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>130</td>\n",
              "      <td>58.7</td>\n",
              "      <td>...</td>\n",
              "      <td>0.9</td>\n",
              "      <td>3.3</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.17</td>\n",
              "      <td>3.30</td>\n",
              "      <td>3.56</td>\n",
              "      <td>3.69</td>\n",
              "      <td>3.56</td>\n",
              "      <td>17.28</td>\n",
              "      <td>10.03</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>12</th>\n",
              "      <td>119</td>\n",
              "      <td>Brentford</td>\n",
              "      <td>F</td>\n",
              "      <td>Wissa</td>\n",
              "      <td>5.9</td>\n",
              "      <td>8.6</td>\n",
              "      <td>3</td>\n",
              "      <td>2</td>\n",
              "      <td>166</td>\n",
              "      <td>66.0</td>\n",
              "      <td>...</td>\n",
              "      <td>1.3</td>\n",
              "      <td>3.6</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4.08</td>\n",
              "      <td>3.44</td>\n",
              "      <td>4.08</td>\n",
              "      <td>3.60</td>\n",
              "      <td>2.00</td>\n",
              "      <td>17.20</td>\n",
              "      <td>11.60</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>399</th>\n",
              "      <td>539</td>\n",
              "      <td>West Ham</td>\n",
              "      <td>M</td>\n",
              "      <td>L.Paquetá</td>\n",
              "      <td>6.0</td>\n",
              "      <td>1.7</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>176</td>\n",
              "      <td>62.8</td>\n",
              "      <td>...</td>\n",
              "      <td>1.0</td>\n",
              "      <td>3.4</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.40</td>\n",
              "      <td>3.40</td>\n",
              "      <td>3.40</td>\n",
              "      <td>3.68</td>\n",
              "      <td>3.26</td>\n",
              "      <td>17.14</td>\n",
              "      <td>10.20</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>35</th>\n",
              "      <td>225</td>\n",
              "      <td>Crystal Palace</td>\n",
              "      <td>F</td>\n",
              "      <td>Edouard</td>\n",
              "      <td>5.5</td>\n",
              "      <td>4.5</td>\n",
              "      <td>5</td>\n",
              "      <td>0</td>\n",
              "      <td>165</td>\n",
              "      <td>81.3</td>\n",
              "      <td>...</td>\n",
              "      <td>1.0</td>\n",
              "      <td>3.5</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.50</td>\n",
              "      <td>3.80</td>\n",
              "      <td>3.35</td>\n",
              "      <td>3.05</td>\n",
              "      <td>3.35</td>\n",
              "      <td>17.05</td>\n",
              "      <td>10.65</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>100</th>\n",
              "      <td>6</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>M</td>\n",
              "      <td>Havertz</td>\n",
              "      <td>7.1</td>\n",
              "      <td>1.5</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>86</td>\n",
              "      <td>44.6</td>\n",
              "      <td>...</td>\n",
              "      <td>1.3</td>\n",
              "      <td>3.2</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.56</td>\n",
              "      <td>3.68</td>\n",
              "      <td>3.32</td>\n",
              "      <td>3.20</td>\n",
              "      <td>3.20</td>\n",
              "      <td>16.96</td>\n",
              "      <td>10.56</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>266</th>\n",
              "      <td>294</td>\n",
              "      <td>Liverpool</td>\n",
              "      <td>M</td>\n",
              "      <td>Diogo J.</td>\n",
              "      <td>7.7</td>\n",
              "      <td>1.9</td>\n",
              "      <td>4</td>\n",
              "      <td>2</td>\n",
              "      <td>131</td>\n",
              "      <td>65.5</td>\n",
              "      <td>...</td>\n",
              "      <td>1.2</td>\n",
              "      <td>3.2</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.44</td>\n",
              "      <td>3.68</td>\n",
              "      <td>3.32</td>\n",
              "      <td>3.32</td>\n",
              "      <td>3.20</td>\n",
              "      <td>16.96</td>\n",
              "      <td>10.44</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>421</th>\n",
              "      <td>5</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>D</td>\n",
              "      <td>Gabriel</td>\n",
              "      <td>4.9</td>\n",
              "      <td>15.5</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>165</td>\n",
              "      <td>23.4</td>\n",
              "      <td>...</td>\n",
              "      <td>1.3</td>\n",
              "      <td>3.2</td>\n",
              "      <td>1.0</td>\n",
              "      <td>3.56</td>\n",
              "      <td>3.68</td>\n",
              "      <td>3.32</td>\n",
              "      <td>3.20</td>\n",
              "      <td>3.20</td>\n",
              "      <td>16.96</td>\n",
              "      <td>10.56</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>425</th>\n",
              "      <td>25</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>D</td>\n",
              "      <td>Tomiyasu</td>\n",
              "      <td>4.5</td>\n",
              "      <td>0.5</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>101</td>\n",
              "      <td>17.3</td>\n",
              "      <td>...</td>\n",
              "      <td>1.3</td>\n",
              "      <td>3.2</td>\n",
              "      <td>1.0</td>\n",
              "      <td>3.56</td>\n",
              "      <td>3.68</td>\n",
              "      <td>3.32</td>\n",
              "      <td>3.20</td>\n",
              "      <td>3.20</td>\n",
              "      <td>16.96</td>\n",
              "      <td>10.56</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>530</th>\n",
              "      <td>290</td>\n",
              "      <td>Liverpool</td>\n",
              "      <td>D</td>\n",
              "      <td>Alexander-Arnold</td>\n",
              "      <td>7.9</td>\n",
              "      <td>8.8</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>217</td>\n",
              "      <td>59.4</td>\n",
              "      <td>...</td>\n",
              "      <td>1.2</td>\n",
              "      <td>3.2</td>\n",
              "      <td>0.5</td>\n",
              "      <td>3.44</td>\n",
              "      <td>3.68</td>\n",
              "      <td>3.32</td>\n",
              "      <td>3.32</td>\n",
              "      <td>3.20</td>\n",
              "      <td>16.96</td>\n",
              "      <td>10.44</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>115</th>\n",
              "      <td>34</td>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>M</td>\n",
              "      <td>Bailey</td>\n",
              "      <td>5.5</td>\n",
              "      <td>1.0</td>\n",
              "      <td>3</td>\n",
              "      <td>3</td>\n",
              "      <td>118</td>\n",
              "      <td>46.5</td>\n",
              "      <td>...</td>\n",
              "      <td>1.3</td>\n",
              "      <td>3.3</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.69</td>\n",
              "      <td>3.04</td>\n",
              "      <td>3.17</td>\n",
              "      <td>3.30</td>\n",
              "      <td>3.69</td>\n",
              "      <td>16.89</td>\n",
              "      <td>9.90</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>261</th>\n",
              "      <td>591</td>\n",
              "      <td>Fulham</td>\n",
              "      <td>M</td>\n",
              "      <td>Willian</td>\n",
              "      <td>5.3</td>\n",
              "      <td>0.4</td>\n",
              "      <td>3</td>\n",
              "      <td>1</td>\n",
              "      <td>163</td>\n",
              "      <td>62.2</td>\n",
              "      <td>...</td>\n",
              "      <td>0.8</td>\n",
              "      <td>3.4</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.12</td>\n",
              "      <td>3.68</td>\n",
              "      <td>3.40</td>\n",
              "      <td>3.12</td>\n",
              "      <td>3.54</td>\n",
              "      <td>16.86</td>\n",
              "      <td>10.20</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>586</th>\n",
              "      <td>427</td>\n",
              "      <td>Newcastle United</td>\n",
              "      <td>D</td>\n",
              "      <td>Schär</td>\n",
              "      <td>5.2</td>\n",
              "      <td>7.6</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>253</td>\n",
              "      <td>35.7</td>\n",
              "      <td>...</td>\n",
              "      <td>1.1</td>\n",
              "      <td>3.1</td>\n",
              "      <td>0.7</td>\n",
              "      <td>3.21</td>\n",
              "      <td>3.43</td>\n",
              "      <td>3.32</td>\n",
              "      <td>3.32</td>\n",
              "      <td>3.54</td>\n",
              "      <td>16.82</td>\n",
              "      <td>9.96</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>50 rows × 23 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-30ebb586-5b73-4d22-b991-ae46bf3185fb')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-30ebb586-5b73-4d22-b991-ae46bf3185fb button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-30ebb586-5b73-4d22-b991-ae46bf3185fb');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-b036af4f-8a8c-4f22-afd4-2d5b7829fb00\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-b036af4f-8a8c-4f22-afd4-2d5b7829fb00')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-b036af4f-8a8c-4f22-afd4-2d5b7829fb00 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 205
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "rawdfgw228x.nlargest(50, '3GW Total')"
      ],
      "metadata": {
        "id": "6NQhOGTZgSrO",
        "outputId": "d0b2c85c-0dee-4675-9266-697d7c3d3662",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 611
        }
      },
      "execution_count": 206,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "      id                     team pos              name  cost  \\\n",
              "62   355          Manchester City   F           Haaland  14.0   \n",
              "273  308                Liverpool   M             Salah  13.0   \n",
              "157  108                Brentford   M            Mbeumo   7.0   \n",
              "107   19                  Arsenal   M              Saka   8.8   \n",
              "5     60              Aston Villa   F           Watkins   8.5   \n",
              "30   211                  Chelsea   F         N.Jackson   6.9   \n",
              "316  373        Manchester United   M       B.Fernandes   8.3   \n",
              "325  396        Manchester United   M          Rashford   8.6   \n",
              "50   293                Liverpool   F            Darwin   7.6   \n",
              "431   36              Aston Villa   D              Cash   5.1   \n",
              "394  526                 West Ham   M             Bowen   7.6   \n",
              "67   415         Newcastle United   F              Isak   7.4   \n",
              "215  362                  Chelsea   M            Palmer   5.3   \n",
              "61   343          Manchester City   F         J.Alvarez   7.1   \n",
              "304  353          Manchester City   M             Foden   7.5   \n",
              "588  430         Newcastle United   D          Trippier   7.0   \n",
              "391  516                Tottenham   M               Son   9.6   \n",
              "555  342          Manchester City   D               Aké   5.0   \n",
              "335  412         Newcastle United   M            Gordon   5.9   \n",
              "12   119                Brentford   F             Wissa   5.9   \n",
              "238  249                  Everton   M        A.Doucoure   5.5   \n",
              "179  143                 Brighton   M            Mitoma   6.5   \n",
              "423   20                  Arsenal   D            Saliba   5.5   \n",
              "426   29                  Arsenal   D             White   5.7   \n",
              "427   31                  Arsenal   D         Zinchenko   5.1   \n",
              "226  226           Crystal Palace   M               Eze   6.2   \n",
              "16   135                 Brighton   F        João Pedro   5.3   \n",
              "213  216                  Chelsea   M          Sterling   7.0   \n",
              "104   14                  Arsenal   M          Ødegaard   8.3   \n",
              "271  303                Liverpool   M         Luis Díaz   7.4   \n",
              "119   43              Aston Villa   M      Douglas Luiz   5.6   \n",
              "128  599              Aston Villa   M             Diaby   6.8   \n",
              "403  664                 West Ham   M       Ward-Prowse   6.2   \n",
              "554  341          Manchester City   D            Akanji   4.9   \n",
              "557  350          Manchester City   D             Rúben   5.5   \n",
              "562  369          Manchester City   D            Walker   5.3   \n",
              "462  129                 Brighton   D              Dunk   5.0   \n",
              "410  557  Wolverhampton Wanderers   M          Hee Chan   5.6   \n",
              "35   225           Crystal Palace   F           Edouard   5.5   \n",
              "100    6                  Arsenal   M           Havertz   7.1   \n",
              "421    5                  Arsenal   D           Gabriel   4.9   \n",
              "425   25                  Arsenal   D          Tomiyasu   4.5   \n",
              "386  504                Tottenham   M          Maddison   7.9   \n",
              "400  542                 West Ham   M            Souček   4.9   \n",
              "266  294                Liverpool   M          Diogo J.   7.7   \n",
              "530  290                Liverpool   D  Alexander-Arnold   7.9   \n",
              "9     85              Bournemouth   F           Solanke   6.5   \n",
              "563  616          Manchester City   D          Gvardiol   4.9   \n",
              "581  407         Newcastle United   D              Burn   4.5   \n",
              "13   258                Brentford   F            Maupay   4.9   \n",
              "\n",
              "     selected_by_percent  goals_scored  assists  bps  ict_index  ...  \\\n",
              "62                  82.7            14        3  400      147.0  ...   \n",
              "273                 48.4            10        5  323      142.6  ...   \n",
              "157                 26.9             6        3  216      111.3  ...   \n",
              "107                 53.4             4        7  293      121.7  ...   \n",
              "5                   43.8             7        8  289      118.3  ...   \n",
              "30                   6.1             6        0  158       83.4  ...   \n",
              "316                 15.0             3        3  246      115.6  ...   \n",
              "325                 12.6             2        2  120       73.8  ...   \n",
              "50                  17.1             4        6  165       78.0  ...   \n",
              "431                 29.6             2        1  201       60.6  ...   \n",
              "394                 24.6             8        1  227       99.3  ...   \n",
              "67                  12.0             7        0  198       60.6  ...   \n",
              "215                 12.2             4        3  179       65.7  ...   \n",
              "61                  30.9             4        6  286      102.5  ...   \n",
              "304                  9.8             3        3  238       99.3  ...   \n",
              "588                 49.7             0        6  333       93.7  ...   \n",
              "391                 39.2             8        1  264      106.9  ...   \n",
              "555                  5.1             2        1  168       37.5  ...   \n",
              "335                 13.7             5        5  210       76.2  ...   \n",
              "12                   8.6             3        2  166       66.0  ...   \n",
              "238                  0.8             4        2  178       88.0  ...   \n",
              "179                 24.7             3        4  173       86.9  ...   \n",
              "423                 34.2             1        1  272       36.0  ...   \n",
              "426                 12.9             1        1  239       48.2  ...   \n",
              "427                  9.1             1        0  223       46.4  ...   \n",
              "226                  5.4             2        2  148       80.9  ...   \n",
              "16                   8.6             4        1  153       65.8  ...   \n",
              "213                  9.4             5        4  185       95.5  ...   \n",
              "104                 13.2             3        2  171       69.4  ...   \n",
              "271                  6.9             3        1  108       45.0  ...   \n",
              "119                 11.8             5        2  299       78.3  ...   \n",
              "128                 15.1             3        6  202       85.7  ...   \n",
              "403                 11.4             2        5  284       91.8  ...   \n",
              "554                  5.2             2        0  194       40.0  ...   \n",
              "557                  7.3             0        0  167       30.4  ...   \n",
              "562                 16.4             0        1  246       43.5  ...   \n",
              "462                  3.4             1        0  171       48.0  ...   \n",
              "410                  5.7             7        2  197       70.9  ...   \n",
              "35                   4.5             5        0  165       81.3  ...   \n",
              "100                  1.5             2        1   86       44.6  ...   \n",
              "421                 15.5             0        0  165       23.4  ...   \n",
              "425                  0.5             1        0  101       17.3  ...   \n",
              "386                 11.3             3        6  230      109.6  ...   \n",
              "400                  1.6             4        1  162       64.8  ...   \n",
              "266                  1.9             4        2  131       65.5  ...   \n",
              "530                  8.8             1        1  217       59.4  ...   \n",
              "9                    5.7             6        1  163       89.0  ...   \n",
              "563                  4.1             0        0  155       29.6  ...   \n",
              "581                  4.1             1        0  175       36.4  ...   \n",
              "13                   1.1             1        2   59       40.8  ...   \n",
              "\n",
              "     gw14adjustment_x  xPallgw  xCSP  gw14  gw15  gw16  gw17  gw18  5GW Total  \\\n",
              "62                1.3      6.3   NaN  7.59  7.16  8.45  7.59  2.00      32.79   \n",
              "273               1.2      6.2   NaN  7.04  7.88  6.62  6.62  6.20      34.36   \n",
              "157               1.3      5.7   NaN  6.81  5.33  6.81  5.70  2.00      26.65   \n",
              "107               1.3      4.5   NaN  5.25  5.50  4.75  4.50  4.50      24.50   \n",
              "5                 1.3      4.7   NaN  5.51  4.16  4.43  4.70  5.51      24.31   \n",
              "30                0.9      4.5   NaN  4.25  4.50  5.00  5.25  5.00      24.00   \n",
              "316               0.9      4.2   NaN  3.98  4.20  4.86  3.98  4.42      21.44   \n",
              "325               0.9      4.2   NaN  3.98  4.20  4.86  3.98  4.42      21.44   \n",
              "50                1.2      3.9   NaN  4.28  4.66  4.09  4.09  3.90      21.02   \n",
              "431               1.3      4.3   0.4  4.99  3.84  4.07  4.30  4.99      22.19   \n",
              "394               1.0      4.3   NaN  4.30  4.30  4.30  4.76  4.07      21.73   \n",
              "67                1.1      3.9   NaN  4.09  4.47  4.28  4.28  4.66      21.78   \n",
              "215               0.9      4.2   NaN  3.98  4.20  4.64  4.86  4.64      22.32   \n",
              "61                1.3      3.7   NaN  4.21  4.04  4.55  4.21  2.00      19.01   \n",
              "304               1.3      3.6   NaN  4.08  3.92  4.40  4.08  2.00      18.48   \n",
              "588               1.1      3.7   0.7  3.87  4.21  4.04  4.04  4.38      20.54   \n",
              "391               0.7      4.4   NaN  3.68  4.40  3.92  4.88  4.64      21.52   \n",
              "555               1.3      3.5   0.9  3.95  3.80  4.25  3.95  2.00      17.95   \n",
              "335               1.1      3.6   NaN  3.76  4.08  3.92  3.92  4.24      19.92   \n",
              "12                1.3      3.6   NaN  4.08  3.44  4.08  3.60  2.00      17.20   \n",
              "238               1.1      4.1   NaN  4.31  3.47  3.68  4.10  3.89      19.45   \n",
              "179               1.1      3.6   NaN  3.76  3.76  3.92  3.60  3.76      18.80   \n",
              "423               1.3      3.4   1.0  3.82  3.96  3.54  3.40  3.40      18.12   \n",
              "426               1.3      3.4   1.0  3.82  3.96  3.54  3.40  3.40      18.12   \n",
              "427               1.3      3.4   1.0  3.82  3.96  3.54  3.40  3.40      18.12   \n",
              "226               1.0      3.7   NaN  3.70  4.04  3.53  3.19  3.53      17.99   \n",
              "16                1.1      3.5   NaN  3.65  3.65  3.80  3.50  3.65      18.25   \n",
              "213               0.9      3.6   NaN  3.44  3.60  3.92  4.08  3.92      18.96   \n",
              "104               1.3      3.3   NaN  3.69  3.82  3.43  3.30  3.30      17.54   \n",
              "271               1.2      3.3   NaN  3.56  3.82  3.43  3.43  3.30      17.54   \n",
              "119               1.3      3.6   NaN  4.08  3.28  3.44  3.60  4.08      18.48   \n",
              "128               1.3      3.6   NaN  4.08  3.28  3.44  3.60  4.08      18.48   \n",
              "403               1.0      3.6   NaN  3.60  3.60  3.60  3.92  3.44      18.16   \n",
              "554               1.3      3.2   0.9  3.56  3.44  3.80  3.56  2.00      16.36   \n",
              "557               1.3      3.2   0.9  3.56  3.44  3.80  3.56  2.00      16.36   \n",
              "562               1.3      3.2   0.9  3.56  3.44  3.80  3.56  2.00      16.36   \n",
              "462               1.1      3.4   0.3  3.54  3.54  3.68  3.40  3.54      17.70   \n",
              "410               0.7      3.8   NaN  3.26  3.62  3.80  3.44  3.44      17.56   \n",
              "35                1.0      3.5   NaN  3.50  3.80  3.35  3.05  3.35      17.05   \n",
              "100               1.3      3.2   NaN  3.56  3.68  3.32  3.20  3.20      16.96   \n",
              "421               1.3      3.2   1.0  3.56  3.68  3.32  3.20  3.20      16.96   \n",
              "425               1.3      3.2   1.0  3.56  3.68  3.32  3.20  3.20      16.96   \n",
              "386               0.7      3.8   NaN  3.26  3.80  3.44  4.16  3.98      18.64   \n",
              "400               1.0      3.5   NaN  3.50  3.50  3.50  3.80  3.35      17.65   \n",
              "266               1.2      3.2   NaN  3.44  3.68  3.32  3.32  3.20      16.96   \n",
              "530               1.2      3.2   0.5  3.44  3.68  3.32  3.32  3.20      16.96   \n",
              "9                 0.7      4.0   NaN  3.40  3.60  3.40  4.20  4.00      18.60   \n",
              "563               1.3      3.1   0.9  3.43  3.32  3.65  3.43  2.00      15.83   \n",
              "581               1.1      3.2   0.7  3.32  3.56  3.44  3.44  3.68      17.44   \n",
              "13                1.3      3.2   NaN  3.56  3.08  3.56  3.20  2.00      15.40   \n",
              "\n",
              "     3GW Total  \n",
              "62       23.20  \n",
              "273      21.54  \n",
              "157      18.95  \n",
              "107      15.50  \n",
              "5        14.10  \n",
              "30       13.75  \n",
              "316      13.04  \n",
              "325      13.04  \n",
              "50       13.03  \n",
              "431      12.90  \n",
              "394      12.90  \n",
              "67       12.84  \n",
              "215      12.82  \n",
              "61       12.80  \n",
              "304      12.40  \n",
              "588      12.12  \n",
              "391      12.00  \n",
              "555      12.00  \n",
              "335      11.76  \n",
              "12       11.60  \n",
              "238      11.46  \n",
              "179      11.44  \n",
              "423      11.32  \n",
              "426      11.32  \n",
              "427      11.32  \n",
              "226      11.27  \n",
              "16       11.10  \n",
              "213      10.96  \n",
              "104      10.94  \n",
              "271      10.81  \n",
              "119      10.80  \n",
              "128      10.80  \n",
              "403      10.80  \n",
              "554      10.80  \n",
              "557      10.80  \n",
              "562      10.80  \n",
              "462      10.76  \n",
              "410      10.68  \n",
              "35       10.65  \n",
              "100      10.56  \n",
              "421      10.56  \n",
              "425      10.56  \n",
              "386      10.50  \n",
              "400      10.50  \n",
              "266      10.44  \n",
              "530      10.44  \n",
              "9        10.40  \n",
              "563      10.40  \n",
              "581      10.32  \n",
              "13       10.20  \n",
              "\n",
              "[50 rows x 23 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-19c48ea1-8334-44f5-9de9-1bec45dd4899\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>team</th>\n",
              "      <th>pos</th>\n",
              "      <th>name</th>\n",
              "      <th>cost</th>\n",
              "      <th>selected_by_percent</th>\n",
              "      <th>goals_scored</th>\n",
              "      <th>assists</th>\n",
              "      <th>bps</th>\n",
              "      <th>ict_index</th>\n",
              "      <th>...</th>\n",
              "      <th>gw14adjustment_x</th>\n",
              "      <th>xPallgw</th>\n",
              "      <th>xCSP</th>\n",
              "      <th>gw14</th>\n",
              "      <th>gw15</th>\n",
              "      <th>gw16</th>\n",
              "      <th>gw17</th>\n",
              "      <th>gw18</th>\n",
              "      <th>5GW Total</th>\n",
              "      <th>3GW Total</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>62</th>\n",
              "      <td>355</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>F</td>\n",
              "      <td>Haaland</td>\n",
              "      <td>14.0</td>\n",
              "      <td>82.7</td>\n",
              "      <td>14</td>\n",
              "      <td>3</td>\n",
              "      <td>400</td>\n",
              "      <td>147.0</td>\n",
              "      <td>...</td>\n",
              "      <td>1.3</td>\n",
              "      <td>6.3</td>\n",
              "      <td>NaN</td>\n",
              "      <td>7.59</td>\n",
              "      <td>7.16</td>\n",
              "      <td>8.45</td>\n",
              "      <td>7.59</td>\n",
              "      <td>2.00</td>\n",
              "      <td>32.79</td>\n",
              "      <td>23.20</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>273</th>\n",
              "      <td>308</td>\n",
              "      <td>Liverpool</td>\n",
              "      <td>M</td>\n",
              "      <td>Salah</td>\n",
              "      <td>13.0</td>\n",
              "      <td>48.4</td>\n",
              "      <td>10</td>\n",
              "      <td>5</td>\n",
              "      <td>323</td>\n",
              "      <td>142.6</td>\n",
              "      <td>...</td>\n",
              "      <td>1.2</td>\n",
              "      <td>6.2</td>\n",
              "      <td>NaN</td>\n",
              "      <td>7.04</td>\n",
              "      <td>7.88</td>\n",
              "      <td>6.62</td>\n",
              "      <td>6.62</td>\n",
              "      <td>6.20</td>\n",
              "      <td>34.36</td>\n",
              "      <td>21.54</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>157</th>\n",
              "      <td>108</td>\n",
              "      <td>Brentford</td>\n",
              "      <td>M</td>\n",
              "      <td>Mbeumo</td>\n",
              "      <td>7.0</td>\n",
              "      <td>26.9</td>\n",
              "      <td>6</td>\n",
              "      <td>3</td>\n",
              "      <td>216</td>\n",
              "      <td>111.3</td>\n",
              "      <td>...</td>\n",
              "      <td>1.3</td>\n",
              "      <td>5.7</td>\n",
              "      <td>NaN</td>\n",
              "      <td>6.81</td>\n",
              "      <td>5.33</td>\n",
              "      <td>6.81</td>\n",
              "      <td>5.70</td>\n",
              "      <td>2.00</td>\n",
              "      <td>26.65</td>\n",
              "      <td>18.95</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>107</th>\n",
              "      <td>19</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>M</td>\n",
              "      <td>Saka</td>\n",
              "      <td>8.8</td>\n",
              "      <td>53.4</td>\n",
              "      <td>4</td>\n",
              "      <td>7</td>\n",
              "      <td>293</td>\n",
              "      <td>121.7</td>\n",
              "      <td>...</td>\n",
              "      <td>1.3</td>\n",
              "      <td>4.5</td>\n",
              "      <td>NaN</td>\n",
              "      <td>5.25</td>\n",
              "      <td>5.50</td>\n",
              "      <td>4.75</td>\n",
              "      <td>4.50</td>\n",
              "      <td>4.50</td>\n",
              "      <td>24.50</td>\n",
              "      <td>15.50</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>60</td>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>F</td>\n",
              "      <td>Watkins</td>\n",
              "      <td>8.5</td>\n",
              "      <td>43.8</td>\n",
              "      <td>7</td>\n",
              "      <td>8</td>\n",
              "      <td>289</td>\n",
              "      <td>118.3</td>\n",
              "      <td>...</td>\n",
              "      <td>1.3</td>\n",
              "      <td>4.7</td>\n",
              "      <td>NaN</td>\n",
              "      <td>5.51</td>\n",
              "      <td>4.16</td>\n",
              "      <td>4.43</td>\n",
              "      <td>4.70</td>\n",
              "      <td>5.51</td>\n",
              "      <td>24.31</td>\n",
              "      <td>14.10</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>30</th>\n",
              "      <td>211</td>\n",
              "      <td>Chelsea</td>\n",
              "      <td>F</td>\n",
              "      <td>N.Jackson</td>\n",
              "      <td>6.9</td>\n",
              "      <td>6.1</td>\n",
              "      <td>6</td>\n",
              "      <td>0</td>\n",
              "      <td>158</td>\n",
              "      <td>83.4</td>\n",
              "      <td>...</td>\n",
              "      <td>0.9</td>\n",
              "      <td>4.5</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4.25</td>\n",
              "      <td>4.50</td>\n",
              "      <td>5.00</td>\n",
              "      <td>5.25</td>\n",
              "      <td>5.00</td>\n",
              "      <td>24.00</td>\n",
              "      <td>13.75</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>316</th>\n",
              "      <td>373</td>\n",
              "      <td>Manchester United</td>\n",
              "      <td>M</td>\n",
              "      <td>B.Fernandes</td>\n",
              "      <td>8.3</td>\n",
              "      <td>15.0</td>\n",
              "      <td>3</td>\n",
              "      <td>3</td>\n",
              "      <td>246</td>\n",
              "      <td>115.6</td>\n",
              "      <td>...</td>\n",
              "      <td>0.9</td>\n",
              "      <td>4.2</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.98</td>\n",
              "      <td>4.20</td>\n",
              "      <td>4.86</td>\n",
              "      <td>3.98</td>\n",
              "      <td>4.42</td>\n",
              "      <td>21.44</td>\n",
              "      <td>13.04</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>325</th>\n",
              "      <td>396</td>\n",
              "      <td>Manchester United</td>\n",
              "      <td>M</td>\n",
              "      <td>Rashford</td>\n",
              "      <td>8.6</td>\n",
              "      <td>12.6</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>120</td>\n",
              "      <td>73.8</td>\n",
              "      <td>...</td>\n",
              "      <td>0.9</td>\n",
              "      <td>4.2</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.98</td>\n",
              "      <td>4.20</td>\n",
              "      <td>4.86</td>\n",
              "      <td>3.98</td>\n",
              "      <td>4.42</td>\n",
              "      <td>21.44</td>\n",
              "      <td>13.04</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>50</th>\n",
              "      <td>293</td>\n",
              "      <td>Liverpool</td>\n",
              "      <td>F</td>\n",
              "      <td>Darwin</td>\n",
              "      <td>7.6</td>\n",
              "      <td>17.1</td>\n",
              "      <td>4</td>\n",
              "      <td>6</td>\n",
              "      <td>165</td>\n",
              "      <td>78.0</td>\n",
              "      <td>...</td>\n",
              "      <td>1.2</td>\n",
              "      <td>3.9</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4.28</td>\n",
              "      <td>4.66</td>\n",
              "      <td>4.09</td>\n",
              "      <td>4.09</td>\n",
              "      <td>3.90</td>\n",
              "      <td>21.02</td>\n",
              "      <td>13.03</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>431</th>\n",
              "      <td>36</td>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>D</td>\n",
              "      <td>Cash</td>\n",
              "      <td>5.1</td>\n",
              "      <td>29.6</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>201</td>\n",
              "      <td>60.6</td>\n",
              "      <td>...</td>\n",
              "      <td>1.3</td>\n",
              "      <td>4.3</td>\n",
              "      <td>0.4</td>\n",
              "      <td>4.99</td>\n",
              "      <td>3.84</td>\n",
              "      <td>4.07</td>\n",
              "      <td>4.30</td>\n",
              "      <td>4.99</td>\n",
              "      <td>22.19</td>\n",
              "      <td>12.90</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>394</th>\n",
              "      <td>526</td>\n",
              "      <td>West Ham</td>\n",
              "      <td>M</td>\n",
              "      <td>Bowen</td>\n",
              "      <td>7.6</td>\n",
              "      <td>24.6</td>\n",
              "      <td>8</td>\n",
              "      <td>1</td>\n",
              "      <td>227</td>\n",
              "      <td>99.3</td>\n",
              "      <td>...</td>\n",
              "      <td>1.0</td>\n",
              "      <td>4.3</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4.30</td>\n",
              "      <td>4.30</td>\n",
              "      <td>4.30</td>\n",
              "      <td>4.76</td>\n",
              "      <td>4.07</td>\n",
              "      <td>21.73</td>\n",
              "      <td>12.90</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>67</th>\n",
              "      <td>415</td>\n",
              "      <td>Newcastle United</td>\n",
              "      <td>F</td>\n",
              "      <td>Isak</td>\n",
              "      <td>7.4</td>\n",
              "      <td>12.0</td>\n",
              "      <td>7</td>\n",
              "      <td>0</td>\n",
              "      <td>198</td>\n",
              "      <td>60.6</td>\n",
              "      <td>...</td>\n",
              "      <td>1.1</td>\n",
              "      <td>3.9</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4.09</td>\n",
              "      <td>4.47</td>\n",
              "      <td>4.28</td>\n",
              "      <td>4.28</td>\n",
              "      <td>4.66</td>\n",
              "      <td>21.78</td>\n",
              "      <td>12.84</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>215</th>\n",
              "      <td>362</td>\n",
              "      <td>Chelsea</td>\n",
              "      <td>M</td>\n",
              "      <td>Palmer</td>\n",
              "      <td>5.3</td>\n",
              "      <td>12.2</td>\n",
              "      <td>4</td>\n",
              "      <td>3</td>\n",
              "      <td>179</td>\n",
              "      <td>65.7</td>\n",
              "      <td>...</td>\n",
              "      <td>0.9</td>\n",
              "      <td>4.2</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.98</td>\n",
              "      <td>4.20</td>\n",
              "      <td>4.64</td>\n",
              "      <td>4.86</td>\n",
              "      <td>4.64</td>\n",
              "      <td>22.32</td>\n",
              "      <td>12.82</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>61</th>\n",
              "      <td>343</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>F</td>\n",
              "      <td>J.Alvarez</td>\n",
              "      <td>7.1</td>\n",
              "      <td>30.9</td>\n",
              "      <td>4</td>\n",
              "      <td>6</td>\n",
              "      <td>286</td>\n",
              "      <td>102.5</td>\n",
              "      <td>...</td>\n",
              "      <td>1.3</td>\n",
              "      <td>3.7</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4.21</td>\n",
              "      <td>4.04</td>\n",
              "      <td>4.55</td>\n",
              "      <td>4.21</td>\n",
              "      <td>2.00</td>\n",
              "      <td>19.01</td>\n",
              "      <td>12.80</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>304</th>\n",
              "      <td>353</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>M</td>\n",
              "      <td>Foden</td>\n",
              "      <td>7.5</td>\n",
              "      <td>9.8</td>\n",
              "      <td>3</td>\n",
              "      <td>3</td>\n",
              "      <td>238</td>\n",
              "      <td>99.3</td>\n",
              "      <td>...</td>\n",
              "      <td>1.3</td>\n",
              "      <td>3.6</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4.08</td>\n",
              "      <td>3.92</td>\n",
              "      <td>4.40</td>\n",
              "      <td>4.08</td>\n",
              "      <td>2.00</td>\n",
              "      <td>18.48</td>\n",
              "      <td>12.40</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>588</th>\n",
              "      <td>430</td>\n",
              "      <td>Newcastle United</td>\n",
              "      <td>D</td>\n",
              "      <td>Trippier</td>\n",
              "      <td>7.0</td>\n",
              "      <td>49.7</td>\n",
              "      <td>0</td>\n",
              "      <td>6</td>\n",
              "      <td>333</td>\n",
              "      <td>93.7</td>\n",
              "      <td>...</td>\n",
              "      <td>1.1</td>\n",
              "      <td>3.7</td>\n",
              "      <td>0.7</td>\n",
              "      <td>3.87</td>\n",
              "      <td>4.21</td>\n",
              "      <td>4.04</td>\n",
              "      <td>4.04</td>\n",
              "      <td>4.38</td>\n",
              "      <td>20.54</td>\n",
              "      <td>12.12</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>391</th>\n",
              "      <td>516</td>\n",
              "      <td>Tottenham</td>\n",
              "      <td>M</td>\n",
              "      <td>Son</td>\n",
              "      <td>9.6</td>\n",
              "      <td>39.2</td>\n",
              "      <td>8</td>\n",
              "      <td>1</td>\n",
              "      <td>264</td>\n",
              "      <td>106.9</td>\n",
              "      <td>...</td>\n",
              "      <td>0.7</td>\n",
              "      <td>4.4</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.68</td>\n",
              "      <td>4.40</td>\n",
              "      <td>3.92</td>\n",
              "      <td>4.88</td>\n",
              "      <td>4.64</td>\n",
              "      <td>21.52</td>\n",
              "      <td>12.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>555</th>\n",
              "      <td>342</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>D</td>\n",
              "      <td>Aké</td>\n",
              "      <td>5.0</td>\n",
              "      <td>5.1</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>168</td>\n",
              "      <td>37.5</td>\n",
              "      <td>...</td>\n",
              "      <td>1.3</td>\n",
              "      <td>3.5</td>\n",
              "      <td>0.9</td>\n",
              "      <td>3.95</td>\n",
              "      <td>3.80</td>\n",
              "      <td>4.25</td>\n",
              "      <td>3.95</td>\n",
              "      <td>2.00</td>\n",
              "      <td>17.95</td>\n",
              "      <td>12.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>335</th>\n",
              "      <td>412</td>\n",
              "      <td>Newcastle United</td>\n",
              "      <td>M</td>\n",
              "      <td>Gordon</td>\n",
              "      <td>5.9</td>\n",
              "      <td>13.7</td>\n",
              "      <td>5</td>\n",
              "      <td>5</td>\n",
              "      <td>210</td>\n",
              "      <td>76.2</td>\n",
              "      <td>...</td>\n",
              "      <td>1.1</td>\n",
              "      <td>3.6</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.76</td>\n",
              "      <td>4.08</td>\n",
              "      <td>3.92</td>\n",
              "      <td>3.92</td>\n",
              "      <td>4.24</td>\n",
              "      <td>19.92</td>\n",
              "      <td>11.76</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>12</th>\n",
              "      <td>119</td>\n",
              "      <td>Brentford</td>\n",
              "      <td>F</td>\n",
              "      <td>Wissa</td>\n",
              "      <td>5.9</td>\n",
              "      <td>8.6</td>\n",
              "      <td>3</td>\n",
              "      <td>2</td>\n",
              "      <td>166</td>\n",
              "      <td>66.0</td>\n",
              "      <td>...</td>\n",
              "      <td>1.3</td>\n",
              "      <td>3.6</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4.08</td>\n",
              "      <td>3.44</td>\n",
              "      <td>4.08</td>\n",
              "      <td>3.60</td>\n",
              "      <td>2.00</td>\n",
              "      <td>17.20</td>\n",
              "      <td>11.60</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>238</th>\n",
              "      <td>249</td>\n",
              "      <td>Everton</td>\n",
              "      <td>M</td>\n",
              "      <td>A.Doucoure</td>\n",
              "      <td>5.5</td>\n",
              "      <td>0.8</td>\n",
              "      <td>4</td>\n",
              "      <td>2</td>\n",
              "      <td>178</td>\n",
              "      <td>88.0</td>\n",
              "      <td>...</td>\n",
              "      <td>1.1</td>\n",
              "      <td>4.1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4.31</td>\n",
              "      <td>3.47</td>\n",
              "      <td>3.68</td>\n",
              "      <td>4.10</td>\n",
              "      <td>3.89</td>\n",
              "      <td>19.45</td>\n",
              "      <td>11.46</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>179</th>\n",
              "      <td>143</td>\n",
              "      <td>Brighton</td>\n",
              "      <td>M</td>\n",
              "      <td>Mitoma</td>\n",
              "      <td>6.5</td>\n",
              "      <td>24.7</td>\n",
              "      <td>3</td>\n",
              "      <td>4</td>\n",
              "      <td>173</td>\n",
              "      <td>86.9</td>\n",
              "      <td>...</td>\n",
              "      <td>1.1</td>\n",
              "      <td>3.6</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.76</td>\n",
              "      <td>3.76</td>\n",
              "      <td>3.92</td>\n",
              "      <td>3.60</td>\n",
              "      <td>3.76</td>\n",
              "      <td>18.80</td>\n",
              "      <td>11.44</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>423</th>\n",
              "      <td>20</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>D</td>\n",
              "      <td>Saliba</td>\n",
              "      <td>5.5</td>\n",
              "      <td>34.2</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>272</td>\n",
              "      <td>36.0</td>\n",
              "      <td>...</td>\n",
              "      <td>1.3</td>\n",
              "      <td>3.4</td>\n",
              "      <td>1.0</td>\n",
              "      <td>3.82</td>\n",
              "      <td>3.96</td>\n",
              "      <td>3.54</td>\n",
              "      <td>3.40</td>\n",
              "      <td>3.40</td>\n",
              "      <td>18.12</td>\n",
              "      <td>11.32</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>426</th>\n",
              "      <td>29</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>D</td>\n",
              "      <td>White</td>\n",
              "      <td>5.7</td>\n",
              "      <td>12.9</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>239</td>\n",
              "      <td>48.2</td>\n",
              "      <td>...</td>\n",
              "      <td>1.3</td>\n",
              "      <td>3.4</td>\n",
              "      <td>1.0</td>\n",
              "      <td>3.82</td>\n",
              "      <td>3.96</td>\n",
              "      <td>3.54</td>\n",
              "      <td>3.40</td>\n",
              "      <td>3.40</td>\n",
              "      <td>18.12</td>\n",
              "      <td>11.32</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>427</th>\n",
              "      <td>31</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>D</td>\n",
              "      <td>Zinchenko</td>\n",
              "      <td>5.1</td>\n",
              "      <td>9.1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>223</td>\n",
              "      <td>46.4</td>\n",
              "      <td>...</td>\n",
              "      <td>1.3</td>\n",
              "      <td>3.4</td>\n",
              "      <td>1.0</td>\n",
              "      <td>3.82</td>\n",
              "      <td>3.96</td>\n",
              "      <td>3.54</td>\n",
              "      <td>3.40</td>\n",
              "      <td>3.40</td>\n",
              "      <td>18.12</td>\n",
              "      <td>11.32</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>226</th>\n",
              "      <td>226</td>\n",
              "      <td>Crystal Palace</td>\n",
              "      <td>M</td>\n",
              "      <td>Eze</td>\n",
              "      <td>6.2</td>\n",
              "      <td>5.4</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>148</td>\n",
              "      <td>80.9</td>\n",
              "      <td>...</td>\n",
              "      <td>1.0</td>\n",
              "      <td>3.7</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.70</td>\n",
              "      <td>4.04</td>\n",
              "      <td>3.53</td>\n",
              "      <td>3.19</td>\n",
              "      <td>3.53</td>\n",
              "      <td>17.99</td>\n",
              "      <td>11.27</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>16</th>\n",
              "      <td>135</td>\n",
              "      <td>Brighton</td>\n",
              "      <td>F</td>\n",
              "      <td>João Pedro</td>\n",
              "      <td>5.3</td>\n",
              "      <td>8.6</td>\n",
              "      <td>4</td>\n",
              "      <td>1</td>\n",
              "      <td>153</td>\n",
              "      <td>65.8</td>\n",
              "      <td>...</td>\n",
              "      <td>1.1</td>\n",
              "      <td>3.5</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.65</td>\n",
              "      <td>3.65</td>\n",
              "      <td>3.80</td>\n",
              "      <td>3.50</td>\n",
              "      <td>3.65</td>\n",
              "      <td>18.25</td>\n",
              "      <td>11.10</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>213</th>\n",
              "      <td>216</td>\n",
              "      <td>Chelsea</td>\n",
              "      <td>M</td>\n",
              "      <td>Sterling</td>\n",
              "      <td>7.0</td>\n",
              "      <td>9.4</td>\n",
              "      <td>5</td>\n",
              "      <td>4</td>\n",
              "      <td>185</td>\n",
              "      <td>95.5</td>\n",
              "      <td>...</td>\n",
              "      <td>0.9</td>\n",
              "      <td>3.6</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.44</td>\n",
              "      <td>3.60</td>\n",
              "      <td>3.92</td>\n",
              "      <td>4.08</td>\n",
              "      <td>3.92</td>\n",
              "      <td>18.96</td>\n",
              "      <td>10.96</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>104</th>\n",
              "      <td>14</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>M</td>\n",
              "      <td>Ødegaard</td>\n",
              "      <td>8.3</td>\n",
              "      <td>13.2</td>\n",
              "      <td>3</td>\n",
              "      <td>2</td>\n",
              "      <td>171</td>\n",
              "      <td>69.4</td>\n",
              "      <td>...</td>\n",
              "      <td>1.3</td>\n",
              "      <td>3.3</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.69</td>\n",
              "      <td>3.82</td>\n",
              "      <td>3.43</td>\n",
              "      <td>3.30</td>\n",
              "      <td>3.30</td>\n",
              "      <td>17.54</td>\n",
              "      <td>10.94</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>271</th>\n",
              "      <td>303</td>\n",
              "      <td>Liverpool</td>\n",
              "      <td>M</td>\n",
              "      <td>Luis Díaz</td>\n",
              "      <td>7.4</td>\n",
              "      <td>6.9</td>\n",
              "      <td>3</td>\n",
              "      <td>1</td>\n",
              "      <td>108</td>\n",
              "      <td>45.0</td>\n",
              "      <td>...</td>\n",
              "      <td>1.2</td>\n",
              "      <td>3.3</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.56</td>\n",
              "      <td>3.82</td>\n",
              "      <td>3.43</td>\n",
              "      <td>3.43</td>\n",
              "      <td>3.30</td>\n",
              "      <td>17.54</td>\n",
              "      <td>10.81</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>119</th>\n",
              "      <td>43</td>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>M</td>\n",
              "      <td>Douglas Luiz</td>\n",
              "      <td>5.6</td>\n",
              "      <td>11.8</td>\n",
              "      <td>5</td>\n",
              "      <td>2</td>\n",
              "      <td>299</td>\n",
              "      <td>78.3</td>\n",
              "      <td>...</td>\n",
              "      <td>1.3</td>\n",
              "      <td>3.6</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4.08</td>\n",
              "      <td>3.28</td>\n",
              "      <td>3.44</td>\n",
              "      <td>3.60</td>\n",
              "      <td>4.08</td>\n",
              "      <td>18.48</td>\n",
              "      <td>10.80</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>128</th>\n",
              "      <td>599</td>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>M</td>\n",
              "      <td>Diaby</td>\n",
              "      <td>6.8</td>\n",
              "      <td>15.1</td>\n",
              "      <td>3</td>\n",
              "      <td>6</td>\n",
              "      <td>202</td>\n",
              "      <td>85.7</td>\n",
              "      <td>...</td>\n",
              "      <td>1.3</td>\n",
              "      <td>3.6</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4.08</td>\n",
              "      <td>3.28</td>\n",
              "      <td>3.44</td>\n",
              "      <td>3.60</td>\n",
              "      <td>4.08</td>\n",
              "      <td>18.48</td>\n",
              "      <td>10.80</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>403</th>\n",
              "      <td>664</td>\n",
              "      <td>West Ham</td>\n",
              "      <td>M</td>\n",
              "      <td>Ward-Prowse</td>\n",
              "      <td>6.2</td>\n",
              "      <td>11.4</td>\n",
              "      <td>2</td>\n",
              "      <td>5</td>\n",
              "      <td>284</td>\n",
              "      <td>91.8</td>\n",
              "      <td>...</td>\n",
              "      <td>1.0</td>\n",
              "      <td>3.6</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.60</td>\n",
              "      <td>3.60</td>\n",
              "      <td>3.60</td>\n",
              "      <td>3.92</td>\n",
              "      <td>3.44</td>\n",
              "      <td>18.16</td>\n",
              "      <td>10.80</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>554</th>\n",
              "      <td>341</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>D</td>\n",
              "      <td>Akanji</td>\n",
              "      <td>4.9</td>\n",
              "      <td>5.2</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>194</td>\n",
              "      <td>40.0</td>\n",
              "      <td>...</td>\n",
              "      <td>1.3</td>\n",
              "      <td>3.2</td>\n",
              "      <td>0.9</td>\n",
              "      <td>3.56</td>\n",
              "      <td>3.44</td>\n",
              "      <td>3.80</td>\n",
              "      <td>3.56</td>\n",
              "      <td>2.00</td>\n",
              "      <td>16.36</td>\n",
              "      <td>10.80</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>557</th>\n",
              "      <td>350</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>D</td>\n",
              "      <td>Rúben</td>\n",
              "      <td>5.5</td>\n",
              "      <td>7.3</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>167</td>\n",
              "      <td>30.4</td>\n",
              "      <td>...</td>\n",
              "      <td>1.3</td>\n",
              "      <td>3.2</td>\n",
              "      <td>0.9</td>\n",
              "      <td>3.56</td>\n",
              "      <td>3.44</td>\n",
              "      <td>3.80</td>\n",
              "      <td>3.56</td>\n",
              "      <td>2.00</td>\n",
              "      <td>16.36</td>\n",
              "      <td>10.80</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>562</th>\n",
              "      <td>369</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>D</td>\n",
              "      <td>Walker</td>\n",
              "      <td>5.3</td>\n",
              "      <td>16.4</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>246</td>\n",
              "      <td>43.5</td>\n",
              "      <td>...</td>\n",
              "      <td>1.3</td>\n",
              "      <td>3.2</td>\n",
              "      <td>0.9</td>\n",
              "      <td>3.56</td>\n",
              "      <td>3.44</td>\n",
              "      <td>3.80</td>\n",
              "      <td>3.56</td>\n",
              "      <td>2.00</td>\n",
              "      <td>16.36</td>\n",
              "      <td>10.80</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>462</th>\n",
              "      <td>129</td>\n",
              "      <td>Brighton</td>\n",
              "      <td>D</td>\n",
              "      <td>Dunk</td>\n",
              "      <td>5.0</td>\n",
              "      <td>3.4</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>171</td>\n",
              "      <td>48.0</td>\n",
              "      <td>...</td>\n",
              "      <td>1.1</td>\n",
              "      <td>3.4</td>\n",
              "      <td>0.3</td>\n",
              "      <td>3.54</td>\n",
              "      <td>3.54</td>\n",
              "      <td>3.68</td>\n",
              "      <td>3.40</td>\n",
              "      <td>3.54</td>\n",
              "      <td>17.70</td>\n",
              "      <td>10.76</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>410</th>\n",
              "      <td>557</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>M</td>\n",
              "      <td>Hee Chan</td>\n",
              "      <td>5.6</td>\n",
              "      <td>5.7</td>\n",
              "      <td>7</td>\n",
              "      <td>2</td>\n",
              "      <td>197</td>\n",
              "      <td>70.9</td>\n",
              "      <td>...</td>\n",
              "      <td>0.7</td>\n",
              "      <td>3.8</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.26</td>\n",
              "      <td>3.62</td>\n",
              "      <td>3.80</td>\n",
              "      <td>3.44</td>\n",
              "      <td>3.44</td>\n",
              "      <td>17.56</td>\n",
              "      <td>10.68</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>35</th>\n",
              "      <td>225</td>\n",
              "      <td>Crystal Palace</td>\n",
              "      <td>F</td>\n",
              "      <td>Edouard</td>\n",
              "      <td>5.5</td>\n",
              "      <td>4.5</td>\n",
              "      <td>5</td>\n",
              "      <td>0</td>\n",
              "      <td>165</td>\n",
              "      <td>81.3</td>\n",
              "      <td>...</td>\n",
              "      <td>1.0</td>\n",
              "      <td>3.5</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.50</td>\n",
              "      <td>3.80</td>\n",
              "      <td>3.35</td>\n",
              "      <td>3.05</td>\n",
              "      <td>3.35</td>\n",
              "      <td>17.05</td>\n",
              "      <td>10.65</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>100</th>\n",
              "      <td>6</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>M</td>\n",
              "      <td>Havertz</td>\n",
              "      <td>7.1</td>\n",
              "      <td>1.5</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>86</td>\n",
              "      <td>44.6</td>\n",
              "      <td>...</td>\n",
              "      <td>1.3</td>\n",
              "      <td>3.2</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.56</td>\n",
              "      <td>3.68</td>\n",
              "      <td>3.32</td>\n",
              "      <td>3.20</td>\n",
              "      <td>3.20</td>\n",
              "      <td>16.96</td>\n",
              "      <td>10.56</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>421</th>\n",
              "      <td>5</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>D</td>\n",
              "      <td>Gabriel</td>\n",
              "      <td>4.9</td>\n",
              "      <td>15.5</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>165</td>\n",
              "      <td>23.4</td>\n",
              "      <td>...</td>\n",
              "      <td>1.3</td>\n",
              "      <td>3.2</td>\n",
              "      <td>1.0</td>\n",
              "      <td>3.56</td>\n",
              "      <td>3.68</td>\n",
              "      <td>3.32</td>\n",
              "      <td>3.20</td>\n",
              "      <td>3.20</td>\n",
              "      <td>16.96</td>\n",
              "      <td>10.56</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>425</th>\n",
              "      <td>25</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>D</td>\n",
              "      <td>Tomiyasu</td>\n",
              "      <td>4.5</td>\n",
              "      <td>0.5</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>101</td>\n",
              "      <td>17.3</td>\n",
              "      <td>...</td>\n",
              "      <td>1.3</td>\n",
              "      <td>3.2</td>\n",
              "      <td>1.0</td>\n",
              "      <td>3.56</td>\n",
              "      <td>3.68</td>\n",
              "      <td>3.32</td>\n",
              "      <td>3.20</td>\n",
              "      <td>3.20</td>\n",
              "      <td>16.96</td>\n",
              "      <td>10.56</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>386</th>\n",
              "      <td>504</td>\n",
              "      <td>Tottenham</td>\n",
              "      <td>M</td>\n",
              "      <td>Maddison</td>\n",
              "      <td>7.9</td>\n",
              "      <td>11.3</td>\n",
              "      <td>3</td>\n",
              "      <td>6</td>\n",
              "      <td>230</td>\n",
              "      <td>109.6</td>\n",
              "      <td>...</td>\n",
              "      <td>0.7</td>\n",
              "      <td>3.8</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.26</td>\n",
              "      <td>3.80</td>\n",
              "      <td>3.44</td>\n",
              "      <td>4.16</td>\n",
              "      <td>3.98</td>\n",
              "      <td>18.64</td>\n",
              "      <td>10.50</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>400</th>\n",
              "      <td>542</td>\n",
              "      <td>West Ham</td>\n",
              "      <td>M</td>\n",
              "      <td>Souček</td>\n",
              "      <td>4.9</td>\n",
              "      <td>1.6</td>\n",
              "      <td>4</td>\n",
              "      <td>1</td>\n",
              "      <td>162</td>\n",
              "      <td>64.8</td>\n",
              "      <td>...</td>\n",
              "      <td>1.0</td>\n",
              "      <td>3.5</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.50</td>\n",
              "      <td>3.50</td>\n",
              "      <td>3.50</td>\n",
              "      <td>3.80</td>\n",
              "      <td>3.35</td>\n",
              "      <td>17.65</td>\n",
              "      <td>10.50</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>266</th>\n",
              "      <td>294</td>\n",
              "      <td>Liverpool</td>\n",
              "      <td>M</td>\n",
              "      <td>Diogo J.</td>\n",
              "      <td>7.7</td>\n",
              "      <td>1.9</td>\n",
              "      <td>4</td>\n",
              "      <td>2</td>\n",
              "      <td>131</td>\n",
              "      <td>65.5</td>\n",
              "      <td>...</td>\n",
              "      <td>1.2</td>\n",
              "      <td>3.2</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.44</td>\n",
              "      <td>3.68</td>\n",
              "      <td>3.32</td>\n",
              "      <td>3.32</td>\n",
              "      <td>3.20</td>\n",
              "      <td>16.96</td>\n",
              "      <td>10.44</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>530</th>\n",
              "      <td>290</td>\n",
              "      <td>Liverpool</td>\n",
              "      <td>D</td>\n",
              "      <td>Alexander-Arnold</td>\n",
              "      <td>7.9</td>\n",
              "      <td>8.8</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>217</td>\n",
              "      <td>59.4</td>\n",
              "      <td>...</td>\n",
              "      <td>1.2</td>\n",
              "      <td>3.2</td>\n",
              "      <td>0.5</td>\n",
              "      <td>3.44</td>\n",
              "      <td>3.68</td>\n",
              "      <td>3.32</td>\n",
              "      <td>3.32</td>\n",
              "      <td>3.20</td>\n",
              "      <td>16.96</td>\n",
              "      <td>10.44</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>85</td>\n",
              "      <td>Bournemouth</td>\n",
              "      <td>F</td>\n",
              "      <td>Solanke</td>\n",
              "      <td>6.5</td>\n",
              "      <td>5.7</td>\n",
              "      <td>6</td>\n",
              "      <td>1</td>\n",
              "      <td>163</td>\n",
              "      <td>89.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0.7</td>\n",
              "      <td>4.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.40</td>\n",
              "      <td>3.60</td>\n",
              "      <td>3.40</td>\n",
              "      <td>4.20</td>\n",
              "      <td>4.00</td>\n",
              "      <td>18.60</td>\n",
              "      <td>10.40</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>563</th>\n",
              "      <td>616</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>D</td>\n",
              "      <td>Gvardiol</td>\n",
              "      <td>4.9</td>\n",
              "      <td>4.1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>155</td>\n",
              "      <td>29.6</td>\n",
              "      <td>...</td>\n",
              "      <td>1.3</td>\n",
              "      <td>3.1</td>\n",
              "      <td>0.9</td>\n",
              "      <td>3.43</td>\n",
              "      <td>3.32</td>\n",
              "      <td>3.65</td>\n",
              "      <td>3.43</td>\n",
              "      <td>2.00</td>\n",
              "      <td>15.83</td>\n",
              "      <td>10.40</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>581</th>\n",
              "      <td>407</td>\n",
              "      <td>Newcastle United</td>\n",
              "      <td>D</td>\n",
              "      <td>Burn</td>\n",
              "      <td>4.5</td>\n",
              "      <td>4.1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>175</td>\n",
              "      <td>36.4</td>\n",
              "      <td>...</td>\n",
              "      <td>1.1</td>\n",
              "      <td>3.2</td>\n",
              "      <td>0.7</td>\n",
              "      <td>3.32</td>\n",
              "      <td>3.56</td>\n",
              "      <td>3.44</td>\n",
              "      <td>3.44</td>\n",
              "      <td>3.68</td>\n",
              "      <td>17.44</td>\n",
              "      <td>10.32</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>13</th>\n",
              "      <td>258</td>\n",
              "      <td>Brentford</td>\n",
              "      <td>F</td>\n",
              "      <td>Maupay</td>\n",
              "      <td>4.9</td>\n",
              "      <td>1.1</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>59</td>\n",
              "      <td>40.8</td>\n",
              "      <td>...</td>\n",
              "      <td>1.3</td>\n",
              "      <td>3.2</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.56</td>\n",
              "      <td>3.08</td>\n",
              "      <td>3.56</td>\n",
              "      <td>3.20</td>\n",
              "      <td>2.00</td>\n",
              "      <td>15.40</td>\n",
              "      <td>10.20</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>50 rows × 23 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-19c48ea1-8334-44f5-9de9-1bec45dd4899')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-19c48ea1-8334-44f5-9de9-1bec45dd4899 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-19c48ea1-8334-44f5-9de9-1bec45dd4899');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-6694d753-4816-4a46-8c13-9a0e3c2e5ab8\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-6694d753-4816-4a46-8c13-9a0e3c2e5ab8')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-6694d753-4816-4a46-8c13-9a0e3c2e5ab8 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 206
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Warning: Total number of columns (23) exceeds max_columns (20) limiting to first (20) columns.\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "Top50 = rawdfgw228x.nlargest(50, '5GW Total')\n",
        "Top50"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "id": "Vuuihhw-Jx7s",
        "outputId": "106c2c93-21db-4168-e622-95d5e3348fcb"
      },
      "execution_count": 207,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "      id                     team pos              name  cost  \\\n",
              "273  308                Liverpool   M             Salah  13.0   \n",
              "62   355          Manchester City   F           Haaland  14.0   \n",
              "157  108                Brentford   M            Mbeumo   7.0   \n",
              "107   19                  Arsenal   M              Saka   8.8   \n",
              "5     60              Aston Villa   F           Watkins   8.5   \n",
              "30   211                  Chelsea   F         N.Jackson   6.9   \n",
              "215  362                  Chelsea   M            Palmer   5.3   \n",
              "431   36              Aston Villa   D              Cash   5.1   \n",
              "67   415         Newcastle United   F              Isak   7.4   \n",
              "394  526                 West Ham   M             Bowen   7.6   \n",
              "391  516                Tottenham   M               Son   9.6   \n",
              "316  373        Manchester United   M       B.Fernandes   8.3   \n",
              "325  396        Manchester United   M          Rashford   8.6   \n",
              "50   293                Liverpool   F            Darwin   7.6   \n",
              "588  430         Newcastle United   D          Trippier   7.0   \n",
              "335  412         Newcastle United   M            Gordon   5.9   \n",
              "238  249                  Everton   M        A.Doucoure   5.5   \n",
              "61   343          Manchester City   F         J.Alvarez   7.1   \n",
              "213  216                  Chelsea   M          Sterling   7.0   \n",
              "179  143                 Brighton   M            Mitoma   6.5   \n",
              "386  504                Tottenham   M          Maddison   7.9   \n",
              "9     85              Bournemouth   F           Solanke   6.5   \n",
              "119   43              Aston Villa   M      Douglas Luiz   5.6   \n",
              "128  599              Aston Villa   M             Diaby   6.8   \n",
              "304  353          Manchester City   M             Foden   7.5   \n",
              "16   135                 Brighton   F        João Pedro   5.3   \n",
              "403  664                 West Ham   M       Ward-Prowse   6.2   \n",
              "423   20                  Arsenal   D            Saliba   5.5   \n",
              "426   29                  Arsenal   D             White   5.7   \n",
              "427   31                  Arsenal   D         Zinchenko   5.1   \n",
              "226  226           Crystal Palace   M               Eze   6.2   \n",
              "555  342          Manchester City   D               Aké   5.0   \n",
              "462  129                 Brighton   D              Dunk   5.0   \n",
              "400  542                 West Ham   M            Souček   4.9   \n",
              "410  557  Wolverhampton Wanderers   M          Hee Chan   5.6   \n",
              "104   14                  Arsenal   M          Ødegaard   8.3   \n",
              "271  303                Liverpool   M         Luis Díaz   7.4   \n",
              "581  407         Newcastle United   D              Burn   4.5   \n",
              "208  199                  Chelsea   M              Enzo   4.8   \n",
              "12   119                Brentford   F             Wissa   5.9   \n",
              "399  539                 West Ham   M         L.Paquetá   6.0   \n",
              "35   225           Crystal Palace   F           Edouard   5.5   \n",
              "100    6                  Arsenal   M           Havertz   7.1   \n",
              "266  294                Liverpool   M          Diogo J.   7.7   \n",
              "421    5                  Arsenal   D           Gabriel   4.9   \n",
              "425   25                  Arsenal   D          Tomiyasu   4.5   \n",
              "530  290                Liverpool   D  Alexander-Arnold   7.9   \n",
              "115   34              Aston Villa   M            Bailey   5.5   \n",
              "261  591                   Fulham   M           Willian   5.3   \n",
              "586  427         Newcastle United   D             Schär   5.2   \n",
              "\n",
              "     selected_by_percent  goals_scored  assists  bps  ict_index  ...  \\\n",
              "273                 48.4            10        5  323      142.6  ...   \n",
              "62                  82.7            14        3  400      147.0  ...   \n",
              "157                 26.9             6        3  216      111.3  ...   \n",
              "107                 53.4             4        7  293      121.7  ...   \n",
              "5                   43.8             7        8  289      118.3  ...   \n",
              "30                   6.1             6        0  158       83.4  ...   \n",
              "215                 12.2             4        3  179       65.7  ...   \n",
              "431                 29.6             2        1  201       60.6  ...   \n",
              "67                  12.0             7        0  198       60.6  ...   \n",
              "394                 24.6             8        1  227       99.3  ...   \n",
              "391                 39.2             8        1  264      106.9  ...   \n",
              "316                 15.0             3        3  246      115.6  ...   \n",
              "325                 12.6             2        2  120       73.8  ...   \n",
              "50                  17.1             4        6  165       78.0  ...   \n",
              "588                 49.7             0        6  333       93.7  ...   \n",
              "335                 13.7             5        5  210       76.2  ...   \n",
              "238                  0.8             4        2  178       88.0  ...   \n",
              "61                  30.9             4        6  286      102.5  ...   \n",
              "213                  9.4             5        4  185       95.5  ...   \n",
              "179                 24.7             3        4  173       86.9  ...   \n",
              "386                 11.3             3        6  230      109.6  ...   \n",
              "9                    5.7             6        1  163       89.0  ...   \n",
              "119                 11.8             5        2  299       78.3  ...   \n",
              "128                 15.1             3        6  202       85.7  ...   \n",
              "304                  9.8             3        3  238       99.3  ...   \n",
              "16                   8.6             4        1  153       65.8  ...   \n",
              "403                 11.4             2        5  284       91.8  ...   \n",
              "423                 34.2             1        1  272       36.0  ...   \n",
              "426                 12.9             1        1  239       48.2  ...   \n",
              "427                  9.1             1        0  223       46.4  ...   \n",
              "226                  5.4             2        2  148       80.9  ...   \n",
              "555                  5.1             2        1  168       37.5  ...   \n",
              "462                  3.4             1        0  171       48.0  ...   \n",
              "400                  1.6             4        1  162       64.8  ...   \n",
              "410                  5.7             7        2  197       70.9  ...   \n",
              "104                 13.2             3        2  171       69.4  ...   \n",
              "271                  6.9             3        1  108       45.0  ...   \n",
              "581                  4.1             1        0  175       36.4  ...   \n",
              "208                  2.6             0        1  130       58.7  ...   \n",
              "12                   8.6             3        2  166       66.0  ...   \n",
              "399                  1.7             2        1  176       62.8  ...   \n",
              "35                   4.5             5        0  165       81.3  ...   \n",
              "100                  1.5             2        1   86       44.6  ...   \n",
              "266                  1.9             4        2  131       65.5  ...   \n",
              "421                 15.5             0        0  165       23.4  ...   \n",
              "425                  0.5             1        0  101       17.3  ...   \n",
              "530                  8.8             1        1  217       59.4  ...   \n",
              "115                  1.0             3        3  118       46.5  ...   \n",
              "261                  0.4             3        1  163       62.2  ...   \n",
              "586                  7.6             0        1  253       35.7  ...   \n",
              "\n",
              "     gw14adjustment_x  xPallgw  xCSP  gw14  gw15  gw16  gw17  gw18  5GW Total  \\\n",
              "273               1.2      6.2   NaN  7.04  7.88  6.62  6.62  6.20      34.36   \n",
              "62                1.3      6.3   NaN  7.59  7.16  8.45  7.59  2.00      32.79   \n",
              "157               1.3      5.7   NaN  6.81  5.33  6.81  5.70  2.00      26.65   \n",
              "107               1.3      4.5   NaN  5.25  5.50  4.75  4.50  4.50      24.50   \n",
              "5                 1.3      4.7   NaN  5.51  4.16  4.43  4.70  5.51      24.31   \n",
              "30                0.9      4.5   NaN  4.25  4.50  5.00  5.25  5.00      24.00   \n",
              "215               0.9      4.2   NaN  3.98  4.20  4.64  4.86  4.64      22.32   \n",
              "431               1.3      4.3   0.4  4.99  3.84  4.07  4.30  4.99      22.19   \n",
              "67                1.1      3.9   NaN  4.09  4.47  4.28  4.28  4.66      21.78   \n",
              "394               1.0      4.3   NaN  4.30  4.30  4.30  4.76  4.07      21.73   \n",
              "391               0.7      4.4   NaN  3.68  4.40  3.92  4.88  4.64      21.52   \n",
              "316               0.9      4.2   NaN  3.98  4.20  4.86  3.98  4.42      21.44   \n",
              "325               0.9      4.2   NaN  3.98  4.20  4.86  3.98  4.42      21.44   \n",
              "50                1.2      3.9   NaN  4.28  4.66  4.09  4.09  3.90      21.02   \n",
              "588               1.1      3.7   0.7  3.87  4.21  4.04  4.04  4.38      20.54   \n",
              "335               1.1      3.6   NaN  3.76  4.08  3.92  3.92  4.24      19.92   \n",
              "238               1.1      4.1   NaN  4.31  3.47  3.68  4.10  3.89      19.45   \n",
              "61                1.3      3.7   NaN  4.21  4.04  4.55  4.21  2.00      19.01   \n",
              "213               0.9      3.6   NaN  3.44  3.60  3.92  4.08  3.92      18.96   \n",
              "179               1.1      3.6   NaN  3.76  3.76  3.92  3.60  3.76      18.80   \n",
              "386               0.7      3.8   NaN  3.26  3.80  3.44  4.16  3.98      18.64   \n",
              "9                 0.7      4.0   NaN  3.40  3.60  3.40  4.20  4.00      18.60   \n",
              "119               1.3      3.6   NaN  4.08  3.28  3.44  3.60  4.08      18.48   \n",
              "128               1.3      3.6   NaN  4.08  3.28  3.44  3.60  4.08      18.48   \n",
              "304               1.3      3.6   NaN  4.08  3.92  4.40  4.08  2.00      18.48   \n",
              "16                1.1      3.5   NaN  3.65  3.65  3.80  3.50  3.65      18.25   \n",
              "403               1.0      3.6   NaN  3.60  3.60  3.60  3.92  3.44      18.16   \n",
              "423               1.3      3.4   1.0  3.82  3.96  3.54  3.40  3.40      18.12   \n",
              "426               1.3      3.4   1.0  3.82  3.96  3.54  3.40  3.40      18.12   \n",
              "427               1.3      3.4   1.0  3.82  3.96  3.54  3.40  3.40      18.12   \n",
              "226               1.0      3.7   NaN  3.70  4.04  3.53  3.19  3.53      17.99   \n",
              "555               1.3      3.5   0.9  3.95  3.80  4.25  3.95  2.00      17.95   \n",
              "462               1.1      3.4   0.3  3.54  3.54  3.68  3.40  3.54      17.70   \n",
              "400               1.0      3.5   NaN  3.50  3.50  3.50  3.80  3.35      17.65   \n",
              "410               0.7      3.8   NaN  3.26  3.62  3.80  3.44  3.44      17.56   \n",
              "104               1.3      3.3   NaN  3.69  3.82  3.43  3.30  3.30      17.54   \n",
              "271               1.2      3.3   NaN  3.56  3.82  3.43  3.43  3.30      17.54   \n",
              "581               1.1      3.2   0.7  3.32  3.56  3.44  3.44  3.68      17.44   \n",
              "208               0.9      3.3   NaN  3.17  3.30  3.56  3.69  3.56      17.28   \n",
              "12                1.3      3.6   NaN  4.08  3.44  4.08  3.60  2.00      17.20   \n",
              "399               1.0      3.4   NaN  3.40  3.40  3.40  3.68  3.26      17.14   \n",
              "35                1.0      3.5   NaN  3.50  3.80  3.35  3.05  3.35      17.05   \n",
              "100               1.3      3.2   NaN  3.56  3.68  3.32  3.20  3.20      16.96   \n",
              "266               1.2      3.2   NaN  3.44  3.68  3.32  3.32  3.20      16.96   \n",
              "421               1.3      3.2   1.0  3.56  3.68  3.32  3.20  3.20      16.96   \n",
              "425               1.3      3.2   1.0  3.56  3.68  3.32  3.20  3.20      16.96   \n",
              "530               1.2      3.2   0.5  3.44  3.68  3.32  3.32  3.20      16.96   \n",
              "115               1.3      3.3   NaN  3.69  3.04  3.17  3.30  3.69      16.89   \n",
              "261               0.8      3.4   NaN  3.12  3.68  3.40  3.12  3.54      16.86   \n",
              "586               1.1      3.1   0.7  3.21  3.43  3.32  3.32  3.54      16.82   \n",
              "\n",
              "     3GW Total  \n",
              "273      21.54  \n",
              "62       23.20  \n",
              "157      18.95  \n",
              "107      15.50  \n",
              "5        14.10  \n",
              "30       13.75  \n",
              "215      12.82  \n",
              "431      12.90  \n",
              "67       12.84  \n",
              "394      12.90  \n",
              "391      12.00  \n",
              "316      13.04  \n",
              "325      13.04  \n",
              "50       13.03  \n",
              "588      12.12  \n",
              "335      11.76  \n",
              "238      11.46  \n",
              "61       12.80  \n",
              "213      10.96  \n",
              "179      11.44  \n",
              "386      10.50  \n",
              "9        10.40  \n",
              "119      10.80  \n",
              "128      10.80  \n",
              "304      12.40  \n",
              "16       11.10  \n",
              "403      10.80  \n",
              "423      11.32  \n",
              "426      11.32  \n",
              "427      11.32  \n",
              "226      11.27  \n",
              "555      12.00  \n",
              "462      10.76  \n",
              "400      10.50  \n",
              "410      10.68  \n",
              "104      10.94  \n",
              "271      10.81  \n",
              "581      10.32  \n",
              "208      10.03  \n",
              "12       11.60  \n",
              "399      10.20  \n",
              "35       10.65  \n",
              "100      10.56  \n",
              "266      10.44  \n",
              "421      10.56  \n",
              "425      10.56  \n",
              "530      10.44  \n",
              "115       9.90  \n",
              "261      10.20  \n",
              "586       9.96  \n",
              "\n",
              "[50 rows x 23 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-463dac3a-71e6-4a3d-9d97-c50a80fecd02\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>team</th>\n",
              "      <th>pos</th>\n",
              "      <th>name</th>\n",
              "      <th>cost</th>\n",
              "      <th>selected_by_percent</th>\n",
              "      <th>goals_scored</th>\n",
              "      <th>assists</th>\n",
              "      <th>bps</th>\n",
              "      <th>ict_index</th>\n",
              "      <th>...</th>\n",
              "      <th>gw14adjustment_x</th>\n",
              "      <th>xPallgw</th>\n",
              "      <th>xCSP</th>\n",
              "      <th>gw14</th>\n",
              "      <th>gw15</th>\n",
              "      <th>gw16</th>\n",
              "      <th>gw17</th>\n",
              "      <th>gw18</th>\n",
              "      <th>5GW Total</th>\n",
              "      <th>3GW Total</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>273</th>\n",
              "      <td>308</td>\n",
              "      <td>Liverpool</td>\n",
              "      <td>M</td>\n",
              "      <td>Salah</td>\n",
              "      <td>13.0</td>\n",
              "      <td>48.4</td>\n",
              "      <td>10</td>\n",
              "      <td>5</td>\n",
              "      <td>323</td>\n",
              "      <td>142.6</td>\n",
              "      <td>...</td>\n",
              "      <td>1.2</td>\n",
              "      <td>6.2</td>\n",
              "      <td>NaN</td>\n",
              "      <td>7.04</td>\n",
              "      <td>7.88</td>\n",
              "      <td>6.62</td>\n",
              "      <td>6.62</td>\n",
              "      <td>6.20</td>\n",
              "      <td>34.36</td>\n",
              "      <td>21.54</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>62</th>\n",
              "      <td>355</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>F</td>\n",
              "      <td>Haaland</td>\n",
              "      <td>14.0</td>\n",
              "      <td>82.7</td>\n",
              "      <td>14</td>\n",
              "      <td>3</td>\n",
              "      <td>400</td>\n",
              "      <td>147.0</td>\n",
              "      <td>...</td>\n",
              "      <td>1.3</td>\n",
              "      <td>6.3</td>\n",
              "      <td>NaN</td>\n",
              "      <td>7.59</td>\n",
              "      <td>7.16</td>\n",
              "      <td>8.45</td>\n",
              "      <td>7.59</td>\n",
              "      <td>2.00</td>\n",
              "      <td>32.79</td>\n",
              "      <td>23.20</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>157</th>\n",
              "      <td>108</td>\n",
              "      <td>Brentford</td>\n",
              "      <td>M</td>\n",
              "      <td>Mbeumo</td>\n",
              "      <td>7.0</td>\n",
              "      <td>26.9</td>\n",
              "      <td>6</td>\n",
              "      <td>3</td>\n",
              "      <td>216</td>\n",
              "      <td>111.3</td>\n",
              "      <td>...</td>\n",
              "      <td>1.3</td>\n",
              "      <td>5.7</td>\n",
              "      <td>NaN</td>\n",
              "      <td>6.81</td>\n",
              "      <td>5.33</td>\n",
              "      <td>6.81</td>\n",
              "      <td>5.70</td>\n",
              "      <td>2.00</td>\n",
              "      <td>26.65</td>\n",
              "      <td>18.95</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>107</th>\n",
              "      <td>19</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>M</td>\n",
              "      <td>Saka</td>\n",
              "      <td>8.8</td>\n",
              "      <td>53.4</td>\n",
              "      <td>4</td>\n",
              "      <td>7</td>\n",
              "      <td>293</td>\n",
              "      <td>121.7</td>\n",
              "      <td>...</td>\n",
              "      <td>1.3</td>\n",
              "      <td>4.5</td>\n",
              "      <td>NaN</td>\n",
              "      <td>5.25</td>\n",
              "      <td>5.50</td>\n",
              "      <td>4.75</td>\n",
              "      <td>4.50</td>\n",
              "      <td>4.50</td>\n",
              "      <td>24.50</td>\n",
              "      <td>15.50</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>60</td>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>F</td>\n",
              "      <td>Watkins</td>\n",
              "      <td>8.5</td>\n",
              "      <td>43.8</td>\n",
              "      <td>7</td>\n",
              "      <td>8</td>\n",
              "      <td>289</td>\n",
              "      <td>118.3</td>\n",
              "      <td>...</td>\n",
              "      <td>1.3</td>\n",
              "      <td>4.7</td>\n",
              "      <td>NaN</td>\n",
              "      <td>5.51</td>\n",
              "      <td>4.16</td>\n",
              "      <td>4.43</td>\n",
              "      <td>4.70</td>\n",
              "      <td>5.51</td>\n",
              "      <td>24.31</td>\n",
              "      <td>14.10</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>30</th>\n",
              "      <td>211</td>\n",
              "      <td>Chelsea</td>\n",
              "      <td>F</td>\n",
              "      <td>N.Jackson</td>\n",
              "      <td>6.9</td>\n",
              "      <td>6.1</td>\n",
              "      <td>6</td>\n",
              "      <td>0</td>\n",
              "      <td>158</td>\n",
              "      <td>83.4</td>\n",
              "      <td>...</td>\n",
              "      <td>0.9</td>\n",
              "      <td>4.5</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4.25</td>\n",
              "      <td>4.50</td>\n",
              "      <td>5.00</td>\n",
              "      <td>5.25</td>\n",
              "      <td>5.00</td>\n",
              "      <td>24.00</td>\n",
              "      <td>13.75</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>215</th>\n",
              "      <td>362</td>\n",
              "      <td>Chelsea</td>\n",
              "      <td>M</td>\n",
              "      <td>Palmer</td>\n",
              "      <td>5.3</td>\n",
              "      <td>12.2</td>\n",
              "      <td>4</td>\n",
              "      <td>3</td>\n",
              "      <td>179</td>\n",
              "      <td>65.7</td>\n",
              "      <td>...</td>\n",
              "      <td>0.9</td>\n",
              "      <td>4.2</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.98</td>\n",
              "      <td>4.20</td>\n",
              "      <td>4.64</td>\n",
              "      <td>4.86</td>\n",
              "      <td>4.64</td>\n",
              "      <td>22.32</td>\n",
              "      <td>12.82</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>431</th>\n",
              "      <td>36</td>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>D</td>\n",
              "      <td>Cash</td>\n",
              "      <td>5.1</td>\n",
              "      <td>29.6</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>201</td>\n",
              "      <td>60.6</td>\n",
              "      <td>...</td>\n",
              "      <td>1.3</td>\n",
              "      <td>4.3</td>\n",
              "      <td>0.4</td>\n",
              "      <td>4.99</td>\n",
              "      <td>3.84</td>\n",
              "      <td>4.07</td>\n",
              "      <td>4.30</td>\n",
              "      <td>4.99</td>\n",
              "      <td>22.19</td>\n",
              "      <td>12.90</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>67</th>\n",
              "      <td>415</td>\n",
              "      <td>Newcastle United</td>\n",
              "      <td>F</td>\n",
              "      <td>Isak</td>\n",
              "      <td>7.4</td>\n",
              "      <td>12.0</td>\n",
              "      <td>7</td>\n",
              "      <td>0</td>\n",
              "      <td>198</td>\n",
              "      <td>60.6</td>\n",
              "      <td>...</td>\n",
              "      <td>1.1</td>\n",
              "      <td>3.9</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4.09</td>\n",
              "      <td>4.47</td>\n",
              "      <td>4.28</td>\n",
              "      <td>4.28</td>\n",
              "      <td>4.66</td>\n",
              "      <td>21.78</td>\n",
              "      <td>12.84</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>394</th>\n",
              "      <td>526</td>\n",
              "      <td>West Ham</td>\n",
              "      <td>M</td>\n",
              "      <td>Bowen</td>\n",
              "      <td>7.6</td>\n",
              "      <td>24.6</td>\n",
              "      <td>8</td>\n",
              "      <td>1</td>\n",
              "      <td>227</td>\n",
              "      <td>99.3</td>\n",
              "      <td>...</td>\n",
              "      <td>1.0</td>\n",
              "      <td>4.3</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4.30</td>\n",
              "      <td>4.30</td>\n",
              "      <td>4.30</td>\n",
              "      <td>4.76</td>\n",
              "      <td>4.07</td>\n",
              "      <td>21.73</td>\n",
              "      <td>12.90</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>391</th>\n",
              "      <td>516</td>\n",
              "      <td>Tottenham</td>\n",
              "      <td>M</td>\n",
              "      <td>Son</td>\n",
              "      <td>9.6</td>\n",
              "      <td>39.2</td>\n",
              "      <td>8</td>\n",
              "      <td>1</td>\n",
              "      <td>264</td>\n",
              "      <td>106.9</td>\n",
              "      <td>...</td>\n",
              "      <td>0.7</td>\n",
              "      <td>4.4</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.68</td>\n",
              "      <td>4.40</td>\n",
              "      <td>3.92</td>\n",
              "      <td>4.88</td>\n",
              "      <td>4.64</td>\n",
              "      <td>21.52</td>\n",
              "      <td>12.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>316</th>\n",
              "      <td>373</td>\n",
              "      <td>Manchester United</td>\n",
              "      <td>M</td>\n",
              "      <td>B.Fernandes</td>\n",
              "      <td>8.3</td>\n",
              "      <td>15.0</td>\n",
              "      <td>3</td>\n",
              "      <td>3</td>\n",
              "      <td>246</td>\n",
              "      <td>115.6</td>\n",
              "      <td>...</td>\n",
              "      <td>0.9</td>\n",
              "      <td>4.2</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.98</td>\n",
              "      <td>4.20</td>\n",
              "      <td>4.86</td>\n",
              "      <td>3.98</td>\n",
              "      <td>4.42</td>\n",
              "      <td>21.44</td>\n",
              "      <td>13.04</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>325</th>\n",
              "      <td>396</td>\n",
              "      <td>Manchester United</td>\n",
              "      <td>M</td>\n",
              "      <td>Rashford</td>\n",
              "      <td>8.6</td>\n",
              "      <td>12.6</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>120</td>\n",
              "      <td>73.8</td>\n",
              "      <td>...</td>\n",
              "      <td>0.9</td>\n",
              "      <td>4.2</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.98</td>\n",
              "      <td>4.20</td>\n",
              "      <td>4.86</td>\n",
              "      <td>3.98</td>\n",
              "      <td>4.42</td>\n",
              "      <td>21.44</td>\n",
              "      <td>13.04</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>50</th>\n",
              "      <td>293</td>\n",
              "      <td>Liverpool</td>\n",
              "      <td>F</td>\n",
              "      <td>Darwin</td>\n",
              "      <td>7.6</td>\n",
              "      <td>17.1</td>\n",
              "      <td>4</td>\n",
              "      <td>6</td>\n",
              "      <td>165</td>\n",
              "      <td>78.0</td>\n",
              "      <td>...</td>\n",
              "      <td>1.2</td>\n",
              "      <td>3.9</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4.28</td>\n",
              "      <td>4.66</td>\n",
              "      <td>4.09</td>\n",
              "      <td>4.09</td>\n",
              "      <td>3.90</td>\n",
              "      <td>21.02</td>\n",
              "      <td>13.03</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>588</th>\n",
              "      <td>430</td>\n",
              "      <td>Newcastle United</td>\n",
              "      <td>D</td>\n",
              "      <td>Trippier</td>\n",
              "      <td>7.0</td>\n",
              "      <td>49.7</td>\n",
              "      <td>0</td>\n",
              "      <td>6</td>\n",
              "      <td>333</td>\n",
              "      <td>93.7</td>\n",
              "      <td>...</td>\n",
              "      <td>1.1</td>\n",
              "      <td>3.7</td>\n",
              "      <td>0.7</td>\n",
              "      <td>3.87</td>\n",
              "      <td>4.21</td>\n",
              "      <td>4.04</td>\n",
              "      <td>4.04</td>\n",
              "      <td>4.38</td>\n",
              "      <td>20.54</td>\n",
              "      <td>12.12</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>335</th>\n",
              "      <td>412</td>\n",
              "      <td>Newcastle United</td>\n",
              "      <td>M</td>\n",
              "      <td>Gordon</td>\n",
              "      <td>5.9</td>\n",
              "      <td>13.7</td>\n",
              "      <td>5</td>\n",
              "      <td>5</td>\n",
              "      <td>210</td>\n",
              "      <td>76.2</td>\n",
              "      <td>...</td>\n",
              "      <td>1.1</td>\n",
              "      <td>3.6</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.76</td>\n",
              "      <td>4.08</td>\n",
              "      <td>3.92</td>\n",
              "      <td>3.92</td>\n",
              "      <td>4.24</td>\n",
              "      <td>19.92</td>\n",
              "      <td>11.76</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>238</th>\n",
              "      <td>249</td>\n",
              "      <td>Everton</td>\n",
              "      <td>M</td>\n",
              "      <td>A.Doucoure</td>\n",
              "      <td>5.5</td>\n",
              "      <td>0.8</td>\n",
              "      <td>4</td>\n",
              "      <td>2</td>\n",
              "      <td>178</td>\n",
              "      <td>88.0</td>\n",
              "      <td>...</td>\n",
              "      <td>1.1</td>\n",
              "      <td>4.1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4.31</td>\n",
              "      <td>3.47</td>\n",
              "      <td>3.68</td>\n",
              "      <td>4.10</td>\n",
              "      <td>3.89</td>\n",
              "      <td>19.45</td>\n",
              "      <td>11.46</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>61</th>\n",
              "      <td>343</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>F</td>\n",
              "      <td>J.Alvarez</td>\n",
              "      <td>7.1</td>\n",
              "      <td>30.9</td>\n",
              "      <td>4</td>\n",
              "      <td>6</td>\n",
              "      <td>286</td>\n",
              "      <td>102.5</td>\n",
              "      <td>...</td>\n",
              "      <td>1.3</td>\n",
              "      <td>3.7</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4.21</td>\n",
              "      <td>4.04</td>\n",
              "      <td>4.55</td>\n",
              "      <td>4.21</td>\n",
              "      <td>2.00</td>\n",
              "      <td>19.01</td>\n",
              "      <td>12.80</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>213</th>\n",
              "      <td>216</td>\n",
              "      <td>Chelsea</td>\n",
              "      <td>M</td>\n",
              "      <td>Sterling</td>\n",
              "      <td>7.0</td>\n",
              "      <td>9.4</td>\n",
              "      <td>5</td>\n",
              "      <td>4</td>\n",
              "      <td>185</td>\n",
              "      <td>95.5</td>\n",
              "      <td>...</td>\n",
              "      <td>0.9</td>\n",
              "      <td>3.6</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.44</td>\n",
              "      <td>3.60</td>\n",
              "      <td>3.92</td>\n",
              "      <td>4.08</td>\n",
              "      <td>3.92</td>\n",
              "      <td>18.96</td>\n",
              "      <td>10.96</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>179</th>\n",
              "      <td>143</td>\n",
              "      <td>Brighton</td>\n",
              "      <td>M</td>\n",
              "      <td>Mitoma</td>\n",
              "      <td>6.5</td>\n",
              "      <td>24.7</td>\n",
              "      <td>3</td>\n",
              "      <td>4</td>\n",
              "      <td>173</td>\n",
              "      <td>86.9</td>\n",
              "      <td>...</td>\n",
              "      <td>1.1</td>\n",
              "      <td>3.6</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.76</td>\n",
              "      <td>3.76</td>\n",
              "      <td>3.92</td>\n",
              "      <td>3.60</td>\n",
              "      <td>3.76</td>\n",
              "      <td>18.80</td>\n",
              "      <td>11.44</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>386</th>\n",
              "      <td>504</td>\n",
              "      <td>Tottenham</td>\n",
              "      <td>M</td>\n",
              "      <td>Maddison</td>\n",
              "      <td>7.9</td>\n",
              "      <td>11.3</td>\n",
              "      <td>3</td>\n",
              "      <td>6</td>\n",
              "      <td>230</td>\n",
              "      <td>109.6</td>\n",
              "      <td>...</td>\n",
              "      <td>0.7</td>\n",
              "      <td>3.8</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.26</td>\n",
              "      <td>3.80</td>\n",
              "      <td>3.44</td>\n",
              "      <td>4.16</td>\n",
              "      <td>3.98</td>\n",
              "      <td>18.64</td>\n",
              "      <td>10.50</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>85</td>\n",
              "      <td>Bournemouth</td>\n",
              "      <td>F</td>\n",
              "      <td>Solanke</td>\n",
              "      <td>6.5</td>\n",
              "      <td>5.7</td>\n",
              "      <td>6</td>\n",
              "      <td>1</td>\n",
              "      <td>163</td>\n",
              "      <td>89.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0.7</td>\n",
              "      <td>4.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.40</td>\n",
              "      <td>3.60</td>\n",
              "      <td>3.40</td>\n",
              "      <td>4.20</td>\n",
              "      <td>4.00</td>\n",
              "      <td>18.60</td>\n",
              "      <td>10.40</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>119</th>\n",
              "      <td>43</td>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>M</td>\n",
              "      <td>Douglas Luiz</td>\n",
              "      <td>5.6</td>\n",
              "      <td>11.8</td>\n",
              "      <td>5</td>\n",
              "      <td>2</td>\n",
              "      <td>299</td>\n",
              "      <td>78.3</td>\n",
              "      <td>...</td>\n",
              "      <td>1.3</td>\n",
              "      <td>3.6</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4.08</td>\n",
              "      <td>3.28</td>\n",
              "      <td>3.44</td>\n",
              "      <td>3.60</td>\n",
              "      <td>4.08</td>\n",
              "      <td>18.48</td>\n",
              "      <td>10.80</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>128</th>\n",
              "      <td>599</td>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>M</td>\n",
              "      <td>Diaby</td>\n",
              "      <td>6.8</td>\n",
              "      <td>15.1</td>\n",
              "      <td>3</td>\n",
              "      <td>6</td>\n",
              "      <td>202</td>\n",
              "      <td>85.7</td>\n",
              "      <td>...</td>\n",
              "      <td>1.3</td>\n",
              "      <td>3.6</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4.08</td>\n",
              "      <td>3.28</td>\n",
              "      <td>3.44</td>\n",
              "      <td>3.60</td>\n",
              "      <td>4.08</td>\n",
              "      <td>18.48</td>\n",
              "      <td>10.80</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>304</th>\n",
              "      <td>353</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>M</td>\n",
              "      <td>Foden</td>\n",
              "      <td>7.5</td>\n",
              "      <td>9.8</td>\n",
              "      <td>3</td>\n",
              "      <td>3</td>\n",
              "      <td>238</td>\n",
              "      <td>99.3</td>\n",
              "      <td>...</td>\n",
              "      <td>1.3</td>\n",
              "      <td>3.6</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4.08</td>\n",
              "      <td>3.92</td>\n",
              "      <td>4.40</td>\n",
              "      <td>4.08</td>\n",
              "      <td>2.00</td>\n",
              "      <td>18.48</td>\n",
              "      <td>12.40</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>16</th>\n",
              "      <td>135</td>\n",
              "      <td>Brighton</td>\n",
              "      <td>F</td>\n",
              "      <td>João Pedro</td>\n",
              "      <td>5.3</td>\n",
              "      <td>8.6</td>\n",
              "      <td>4</td>\n",
              "      <td>1</td>\n",
              "      <td>153</td>\n",
              "      <td>65.8</td>\n",
              "      <td>...</td>\n",
              "      <td>1.1</td>\n",
              "      <td>3.5</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.65</td>\n",
              "      <td>3.65</td>\n",
              "      <td>3.80</td>\n",
              "      <td>3.50</td>\n",
              "      <td>3.65</td>\n",
              "      <td>18.25</td>\n",
              "      <td>11.10</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>403</th>\n",
              "      <td>664</td>\n",
              "      <td>West Ham</td>\n",
              "      <td>M</td>\n",
              "      <td>Ward-Prowse</td>\n",
              "      <td>6.2</td>\n",
              "      <td>11.4</td>\n",
              "      <td>2</td>\n",
              "      <td>5</td>\n",
              "      <td>284</td>\n",
              "      <td>91.8</td>\n",
              "      <td>...</td>\n",
              "      <td>1.0</td>\n",
              "      <td>3.6</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.60</td>\n",
              "      <td>3.60</td>\n",
              "      <td>3.60</td>\n",
              "      <td>3.92</td>\n",
              "      <td>3.44</td>\n",
              "      <td>18.16</td>\n",
              "      <td>10.80</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>423</th>\n",
              "      <td>20</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>D</td>\n",
              "      <td>Saliba</td>\n",
              "      <td>5.5</td>\n",
              "      <td>34.2</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>272</td>\n",
              "      <td>36.0</td>\n",
              "      <td>...</td>\n",
              "      <td>1.3</td>\n",
              "      <td>3.4</td>\n",
              "      <td>1.0</td>\n",
              "      <td>3.82</td>\n",
              "      <td>3.96</td>\n",
              "      <td>3.54</td>\n",
              "      <td>3.40</td>\n",
              "      <td>3.40</td>\n",
              "      <td>18.12</td>\n",
              "      <td>11.32</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>426</th>\n",
              "      <td>29</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>D</td>\n",
              "      <td>White</td>\n",
              "      <td>5.7</td>\n",
              "      <td>12.9</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>239</td>\n",
              "      <td>48.2</td>\n",
              "      <td>...</td>\n",
              "      <td>1.3</td>\n",
              "      <td>3.4</td>\n",
              "      <td>1.0</td>\n",
              "      <td>3.82</td>\n",
              "      <td>3.96</td>\n",
              "      <td>3.54</td>\n",
              "      <td>3.40</td>\n",
              "      <td>3.40</td>\n",
              "      <td>18.12</td>\n",
              "      <td>11.32</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>427</th>\n",
              "      <td>31</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>D</td>\n",
              "      <td>Zinchenko</td>\n",
              "      <td>5.1</td>\n",
              "      <td>9.1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>223</td>\n",
              "      <td>46.4</td>\n",
              "      <td>...</td>\n",
              "      <td>1.3</td>\n",
              "      <td>3.4</td>\n",
              "      <td>1.0</td>\n",
              "      <td>3.82</td>\n",
              "      <td>3.96</td>\n",
              "      <td>3.54</td>\n",
              "      <td>3.40</td>\n",
              "      <td>3.40</td>\n",
              "      <td>18.12</td>\n",
              "      <td>11.32</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>226</th>\n",
              "      <td>226</td>\n",
              "      <td>Crystal Palace</td>\n",
              "      <td>M</td>\n",
              "      <td>Eze</td>\n",
              "      <td>6.2</td>\n",
              "      <td>5.4</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>148</td>\n",
              "      <td>80.9</td>\n",
              "      <td>...</td>\n",
              "      <td>1.0</td>\n",
              "      <td>3.7</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.70</td>\n",
              "      <td>4.04</td>\n",
              "      <td>3.53</td>\n",
              "      <td>3.19</td>\n",
              "      <td>3.53</td>\n",
              "      <td>17.99</td>\n",
              "      <td>11.27</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>555</th>\n",
              "      <td>342</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>D</td>\n",
              "      <td>Aké</td>\n",
              "      <td>5.0</td>\n",
              "      <td>5.1</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>168</td>\n",
              "      <td>37.5</td>\n",
              "      <td>...</td>\n",
              "      <td>1.3</td>\n",
              "      <td>3.5</td>\n",
              "      <td>0.9</td>\n",
              "      <td>3.95</td>\n",
              "      <td>3.80</td>\n",
              "      <td>4.25</td>\n",
              "      <td>3.95</td>\n",
              "      <td>2.00</td>\n",
              "      <td>17.95</td>\n",
              "      <td>12.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>462</th>\n",
              "      <td>129</td>\n",
              "      <td>Brighton</td>\n",
              "      <td>D</td>\n",
              "      <td>Dunk</td>\n",
              "      <td>5.0</td>\n",
              "      <td>3.4</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>171</td>\n",
              "      <td>48.0</td>\n",
              "      <td>...</td>\n",
              "      <td>1.1</td>\n",
              "      <td>3.4</td>\n",
              "      <td>0.3</td>\n",
              "      <td>3.54</td>\n",
              "      <td>3.54</td>\n",
              "      <td>3.68</td>\n",
              "      <td>3.40</td>\n",
              "      <td>3.54</td>\n",
              "      <td>17.70</td>\n",
              "      <td>10.76</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>400</th>\n",
              "      <td>542</td>\n",
              "      <td>West Ham</td>\n",
              "      <td>M</td>\n",
              "      <td>Souček</td>\n",
              "      <td>4.9</td>\n",
              "      <td>1.6</td>\n",
              "      <td>4</td>\n",
              "      <td>1</td>\n",
              "      <td>162</td>\n",
              "      <td>64.8</td>\n",
              "      <td>...</td>\n",
              "      <td>1.0</td>\n",
              "      <td>3.5</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.50</td>\n",
              "      <td>3.50</td>\n",
              "      <td>3.50</td>\n",
              "      <td>3.80</td>\n",
              "      <td>3.35</td>\n",
              "      <td>17.65</td>\n",
              "      <td>10.50</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>410</th>\n",
              "      <td>557</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>M</td>\n",
              "      <td>Hee Chan</td>\n",
              "      <td>5.6</td>\n",
              "      <td>5.7</td>\n",
              "      <td>7</td>\n",
              "      <td>2</td>\n",
              "      <td>197</td>\n",
              "      <td>70.9</td>\n",
              "      <td>...</td>\n",
              "      <td>0.7</td>\n",
              "      <td>3.8</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.26</td>\n",
              "      <td>3.62</td>\n",
              "      <td>3.80</td>\n",
              "      <td>3.44</td>\n",
              "      <td>3.44</td>\n",
              "      <td>17.56</td>\n",
              "      <td>10.68</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>104</th>\n",
              "      <td>14</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>M</td>\n",
              "      <td>Ødegaard</td>\n",
              "      <td>8.3</td>\n",
              "      <td>13.2</td>\n",
              "      <td>3</td>\n",
              "      <td>2</td>\n",
              "      <td>171</td>\n",
              "      <td>69.4</td>\n",
              "      <td>...</td>\n",
              "      <td>1.3</td>\n",
              "      <td>3.3</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.69</td>\n",
              "      <td>3.82</td>\n",
              "      <td>3.43</td>\n",
              "      <td>3.30</td>\n",
              "      <td>3.30</td>\n",
              "      <td>17.54</td>\n",
              "      <td>10.94</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>271</th>\n",
              "      <td>303</td>\n",
              "      <td>Liverpool</td>\n",
              "      <td>M</td>\n",
              "      <td>Luis Díaz</td>\n",
              "      <td>7.4</td>\n",
              "      <td>6.9</td>\n",
              "      <td>3</td>\n",
              "      <td>1</td>\n",
              "      <td>108</td>\n",
              "      <td>45.0</td>\n",
              "      <td>...</td>\n",
              "      <td>1.2</td>\n",
              "      <td>3.3</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.56</td>\n",
              "      <td>3.82</td>\n",
              "      <td>3.43</td>\n",
              "      <td>3.43</td>\n",
              "      <td>3.30</td>\n",
              "      <td>17.54</td>\n",
              "      <td>10.81</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>581</th>\n",
              "      <td>407</td>\n",
              "      <td>Newcastle United</td>\n",
              "      <td>D</td>\n",
              "      <td>Burn</td>\n",
              "      <td>4.5</td>\n",
              "      <td>4.1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>175</td>\n",
              "      <td>36.4</td>\n",
              "      <td>...</td>\n",
              "      <td>1.1</td>\n",
              "      <td>3.2</td>\n",
              "      <td>0.7</td>\n",
              "      <td>3.32</td>\n",
              "      <td>3.56</td>\n",
              "      <td>3.44</td>\n",
              "      <td>3.44</td>\n",
              "      <td>3.68</td>\n",
              "      <td>17.44</td>\n",
              "      <td>10.32</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>208</th>\n",
              "      <td>199</td>\n",
              "      <td>Chelsea</td>\n",
              "      <td>M</td>\n",
              "      <td>Enzo</td>\n",
              "      <td>4.8</td>\n",
              "      <td>2.6</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>130</td>\n",
              "      <td>58.7</td>\n",
              "      <td>...</td>\n",
              "      <td>0.9</td>\n",
              "      <td>3.3</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.17</td>\n",
              "      <td>3.30</td>\n",
              "      <td>3.56</td>\n",
              "      <td>3.69</td>\n",
              "      <td>3.56</td>\n",
              "      <td>17.28</td>\n",
              "      <td>10.03</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>12</th>\n",
              "      <td>119</td>\n",
              "      <td>Brentford</td>\n",
              "      <td>F</td>\n",
              "      <td>Wissa</td>\n",
              "      <td>5.9</td>\n",
              "      <td>8.6</td>\n",
              "      <td>3</td>\n",
              "      <td>2</td>\n",
              "      <td>166</td>\n",
              "      <td>66.0</td>\n",
              "      <td>...</td>\n",
              "      <td>1.3</td>\n",
              "      <td>3.6</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4.08</td>\n",
              "      <td>3.44</td>\n",
              "      <td>4.08</td>\n",
              "      <td>3.60</td>\n",
              "      <td>2.00</td>\n",
              "      <td>17.20</td>\n",
              "      <td>11.60</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>399</th>\n",
              "      <td>539</td>\n",
              "      <td>West Ham</td>\n",
              "      <td>M</td>\n",
              "      <td>L.Paquetá</td>\n",
              "      <td>6.0</td>\n",
              "      <td>1.7</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>176</td>\n",
              "      <td>62.8</td>\n",
              "      <td>...</td>\n",
              "      <td>1.0</td>\n",
              "      <td>3.4</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.40</td>\n",
              "      <td>3.40</td>\n",
              "      <td>3.40</td>\n",
              "      <td>3.68</td>\n",
              "      <td>3.26</td>\n",
              "      <td>17.14</td>\n",
              "      <td>10.20</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>35</th>\n",
              "      <td>225</td>\n",
              "      <td>Crystal Palace</td>\n",
              "      <td>F</td>\n",
              "      <td>Edouard</td>\n",
              "      <td>5.5</td>\n",
              "      <td>4.5</td>\n",
              "      <td>5</td>\n",
              "      <td>0</td>\n",
              "      <td>165</td>\n",
              "      <td>81.3</td>\n",
              "      <td>...</td>\n",
              "      <td>1.0</td>\n",
              "      <td>3.5</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.50</td>\n",
              "      <td>3.80</td>\n",
              "      <td>3.35</td>\n",
              "      <td>3.05</td>\n",
              "      <td>3.35</td>\n",
              "      <td>17.05</td>\n",
              "      <td>10.65</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>100</th>\n",
              "      <td>6</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>M</td>\n",
              "      <td>Havertz</td>\n",
              "      <td>7.1</td>\n",
              "      <td>1.5</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>86</td>\n",
              "      <td>44.6</td>\n",
              "      <td>...</td>\n",
              "      <td>1.3</td>\n",
              "      <td>3.2</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.56</td>\n",
              "      <td>3.68</td>\n",
              "      <td>3.32</td>\n",
              "      <td>3.20</td>\n",
              "      <td>3.20</td>\n",
              "      <td>16.96</td>\n",
              "      <td>10.56</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>266</th>\n",
              "      <td>294</td>\n",
              "      <td>Liverpool</td>\n",
              "      <td>M</td>\n",
              "      <td>Diogo J.</td>\n",
              "      <td>7.7</td>\n",
              "      <td>1.9</td>\n",
              "      <td>4</td>\n",
              "      <td>2</td>\n",
              "      <td>131</td>\n",
              "      <td>65.5</td>\n",
              "      <td>...</td>\n",
              "      <td>1.2</td>\n",
              "      <td>3.2</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.44</td>\n",
              "      <td>3.68</td>\n",
              "      <td>3.32</td>\n",
              "      <td>3.32</td>\n",
              "      <td>3.20</td>\n",
              "      <td>16.96</td>\n",
              "      <td>10.44</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>421</th>\n",
              "      <td>5</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>D</td>\n",
              "      <td>Gabriel</td>\n",
              "      <td>4.9</td>\n",
              "      <td>15.5</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>165</td>\n",
              "      <td>23.4</td>\n",
              "      <td>...</td>\n",
              "      <td>1.3</td>\n",
              "      <td>3.2</td>\n",
              "      <td>1.0</td>\n",
              "      <td>3.56</td>\n",
              "      <td>3.68</td>\n",
              "      <td>3.32</td>\n",
              "      <td>3.20</td>\n",
              "      <td>3.20</td>\n",
              "      <td>16.96</td>\n",
              "      <td>10.56</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>425</th>\n",
              "      <td>25</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>D</td>\n",
              "      <td>Tomiyasu</td>\n",
              "      <td>4.5</td>\n",
              "      <td>0.5</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>101</td>\n",
              "      <td>17.3</td>\n",
              "      <td>...</td>\n",
              "      <td>1.3</td>\n",
              "      <td>3.2</td>\n",
              "      <td>1.0</td>\n",
              "      <td>3.56</td>\n",
              "      <td>3.68</td>\n",
              "      <td>3.32</td>\n",
              "      <td>3.20</td>\n",
              "      <td>3.20</td>\n",
              "      <td>16.96</td>\n",
              "      <td>10.56</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>530</th>\n",
              "      <td>290</td>\n",
              "      <td>Liverpool</td>\n",
              "      <td>D</td>\n",
              "      <td>Alexander-Arnold</td>\n",
              "      <td>7.9</td>\n",
              "      <td>8.8</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>217</td>\n",
              "      <td>59.4</td>\n",
              "      <td>...</td>\n",
              "      <td>1.2</td>\n",
              "      <td>3.2</td>\n",
              "      <td>0.5</td>\n",
              "      <td>3.44</td>\n",
              "      <td>3.68</td>\n",
              "      <td>3.32</td>\n",
              "      <td>3.32</td>\n",
              "      <td>3.20</td>\n",
              "      <td>16.96</td>\n",
              "      <td>10.44</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>115</th>\n",
              "      <td>34</td>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>M</td>\n",
              "      <td>Bailey</td>\n",
              "      <td>5.5</td>\n",
              "      <td>1.0</td>\n",
              "      <td>3</td>\n",
              "      <td>3</td>\n",
              "      <td>118</td>\n",
              "      <td>46.5</td>\n",
              "      <td>...</td>\n",
              "      <td>1.3</td>\n",
              "      <td>3.3</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.69</td>\n",
              "      <td>3.04</td>\n",
              "      <td>3.17</td>\n",
              "      <td>3.30</td>\n",
              "      <td>3.69</td>\n",
              "      <td>16.89</td>\n",
              "      <td>9.90</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>261</th>\n",
              "      <td>591</td>\n",
              "      <td>Fulham</td>\n",
              "      <td>M</td>\n",
              "      <td>Willian</td>\n",
              "      <td>5.3</td>\n",
              "      <td>0.4</td>\n",
              "      <td>3</td>\n",
              "      <td>1</td>\n",
              "      <td>163</td>\n",
              "      <td>62.2</td>\n",
              "      <td>...</td>\n",
              "      <td>0.8</td>\n",
              "      <td>3.4</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.12</td>\n",
              "      <td>3.68</td>\n",
              "      <td>3.40</td>\n",
              "      <td>3.12</td>\n",
              "      <td>3.54</td>\n",
              "      <td>16.86</td>\n",
              "      <td>10.20</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>586</th>\n",
              "      <td>427</td>\n",
              "      <td>Newcastle United</td>\n",
              "      <td>D</td>\n",
              "      <td>Schär</td>\n",
              "      <td>5.2</td>\n",
              "      <td>7.6</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>253</td>\n",
              "      <td>35.7</td>\n",
              "      <td>...</td>\n",
              "      <td>1.1</td>\n",
              "      <td>3.1</td>\n",
              "      <td>0.7</td>\n",
              "      <td>3.21</td>\n",
              "      <td>3.43</td>\n",
              "      <td>3.32</td>\n",
              "      <td>3.32</td>\n",
              "      <td>3.54</td>\n",
              "      <td>16.82</td>\n",
              "      <td>9.96</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>50 rows × 23 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-463dac3a-71e6-4a3d-9d97-c50a80fecd02')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-463dac3a-71e6-4a3d-9d97-c50a80fecd02 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-463dac3a-71e6-4a3d-9d97-c50a80fecd02');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-b035916a-6809-4ee0-9dd3-3392077667a8\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-b035916a-6809-4ee0-9dd3-3392077667a8')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-b035916a-6809-4ee0-9dd3-3392077667a8 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 207
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import matplotlib.pyplot as plt\n",
        "import pandas as pd\n",
        "import numpy as np\n",
        "import string"
      ],
      "metadata": {
        "id": "JSw3vk9PJvps"
      },
      "execution_count": 208,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "fig, ax = plt.subplots(1, figsize=(10,8))\n",
        "ax.scatter(x=Top50['cost'],y=Top50['5GW Total'],c='DarkBlue')\n",
        "# set labels\n",
        "ax.set_xlabel('cost')\n",
        "ax.set_ylabel('5GW Total')\n",
        "\n",
        "# annotate points in axis\n",
        "for idx, row in Top50.iterrows():\n",
        "    ax.annotate(row['name'], (row['cost'], row['5GW Total']) )\n",
        "# force matplotlib to draw the graph\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 704
        },
        "id": "435FV-_ocWOi",
        "outputId": "01727e75-3bf4-45ba-c84d-3b48b67dc857"
      },
      "execution_count": 209,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1000x800 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "rawdfgw228x"
      ],
      "metadata": {
        "id": "mQ58vdHpUd8O",
        "outputId": "c4d7a4cd-ba2f-43ea-a613-bfc59817418f",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 424
        }
      },
      "execution_count": 178,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "      id                     team pos     name  cost  selected_by_percent  \\\n",
              "0      1                  Arsenal   F  Balogun   4.4                  0.2   \n",
              "1      8                  Arsenal   F  G.Jesus   7.8                  2.3   \n",
              "2     13                  Arsenal   F  Nketiah   5.7                  9.8   \n",
              "3     39              Aston Villa   F    Davis   4.9                  0.1   \n",
              "4     44              Aston Villa   F    Duran   5.0                  0.2   \n",
              "..   ...                      ...  ..      ...   ...                  ...   \n",
              "742  647                 West Ham   G    Anang   4.0                  0.1   \n",
              "743  546  Wolverhampton Wanderers   G  Bentley   3.9                  0.6   \n",
              "744  564  Wolverhampton Wanderers   G     King   4.0                  0.7   \n",
              "745  569  Wolverhampton Wanderers   G  José Sá   5.0                  1.6   \n",
              "746  571  Wolverhampton Wanderers   G   Šarkić   4.0                  0.3   \n",
              "\n",
              "     goals_scored  assists  bps  ict_index  ...  minutes  gw14adjustment_x  \\\n",
              "0               0        0    0        0.0  ...        0               1.3   \n",
              "1               1        1   51       32.3  ...      427               1.3   \n",
              "2               5        2  162       55.9  ...      790               1.3   \n",
              "3               0        0    0        0.0  ...        0               1.3   \n",
              "4               2        0   57       13.9  ...       69               1.3   \n",
              "..            ...      ...  ...        ...  ...      ...               ...   \n",
              "742             0        0    0        0.0  ...        0               1.0   \n",
              "743             0        0    0        0.0  ...        0               0.7   \n",
              "744             0        0    0        0.0  ...        0               0.7   \n",
              "745             0        0  220       33.5  ...     1170               0.7   \n",
              "746             0        0    0        0.0  ...        0               0.7   \n",
              "\n",
              "     xPallgw  xCSP  gw14  gw15  gw16  gw17  gw18  5GW Total  \n",
              "0        2.0   NaN  2.00  2.00  2.00  2.00  2.00      10.00  \n",
              "1        2.8   NaN  3.04  3.12  2.88  2.80  2.80      14.64  \n",
              "2        3.0   NaN  3.30  3.40  3.10  3.00  3.00      15.80  \n",
              "3        2.0   NaN  2.00  2.00  2.00  2.00  2.00      10.00  \n",
              "4        2.2   NaN  2.26  2.16  2.18  2.20  2.26      11.06  \n",
              "..       ...   ...   ...   ...   ...   ...   ...        ...  \n",
              "742      1.9  -0.1  1.90  1.90  1.90  1.88  1.91       9.49  \n",
              "743      2.0   0.0  2.00  2.00  2.00  2.00  2.00      10.00  \n",
              "744      2.0   0.0  2.00  2.00  2.00  2.00  2.00      10.00  \n",
              "745      2.0   0.0  2.00  2.00  2.00  2.00  2.00      10.00  \n",
              "746      2.0   0.0  2.00  2.00  2.00  2.00  2.00      10.00  \n",
              "\n",
              "[724 rows x 22 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-a3f6729e-048f-48dc-93fd-04b83e83c704\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>team</th>\n",
              "      <th>pos</th>\n",
              "      <th>name</th>\n",
              "      <th>cost</th>\n",
              "      <th>selected_by_percent</th>\n",
              "      <th>goals_scored</th>\n",
              "      <th>assists</th>\n",
              "      <th>bps</th>\n",
              "      <th>ict_index</th>\n",
              "      <th>...</th>\n",
              "      <th>minutes</th>\n",
              "      <th>gw14adjustment_x</th>\n",
              "      <th>xPallgw</th>\n",
              "      <th>xCSP</th>\n",
              "      <th>gw14</th>\n",
              "      <th>gw15</th>\n",
              "      <th>gw16</th>\n",
              "      <th>gw17</th>\n",
              "      <th>gw18</th>\n",
              "      <th>5GW Total</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>1</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>F</td>\n",
              "      <td>Balogun</td>\n",
              "      <td>4.4</td>\n",
              "      <td>0.2</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>1.3</td>\n",
              "      <td>2.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>10.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>8</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>F</td>\n",
              "      <td>G.Jesus</td>\n",
              "      <td>7.8</td>\n",
              "      <td>2.3</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>51</td>\n",
              "      <td>32.3</td>\n",
              "      <td>...</td>\n",
              "      <td>427</td>\n",
              "      <td>1.3</td>\n",
              "      <td>2.8</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.04</td>\n",
              "      <td>3.12</td>\n",
              "      <td>2.88</td>\n",
              "      <td>2.80</td>\n",
              "      <td>2.80</td>\n",
              "      <td>14.64</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>13</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>F</td>\n",
              "      <td>Nketiah</td>\n",
              "      <td>5.7</td>\n",
              "      <td>9.8</td>\n",
              "      <td>5</td>\n",
              "      <td>2</td>\n",
              "      <td>162</td>\n",
              "      <td>55.9</td>\n",
              "      <td>...</td>\n",
              "      <td>790</td>\n",
              "      <td>1.3</td>\n",
              "      <td>3.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.30</td>\n",
              "      <td>3.40</td>\n",
              "      <td>3.10</td>\n",
              "      <td>3.00</td>\n",
              "      <td>3.00</td>\n",
              "      <td>15.80</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>39</td>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>F</td>\n",
              "      <td>Davis</td>\n",
              "      <td>4.9</td>\n",
              "      <td>0.1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>1.3</td>\n",
              "      <td>2.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>10.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>44</td>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>F</td>\n",
              "      <td>Duran</td>\n",
              "      <td>5.0</td>\n",
              "      <td>0.2</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>57</td>\n",
              "      <td>13.9</td>\n",
              "      <td>...</td>\n",
              "      <td>69</td>\n",
              "      <td>1.3</td>\n",
              "      <td>2.2</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2.26</td>\n",
              "      <td>2.16</td>\n",
              "      <td>2.18</td>\n",
              "      <td>2.20</td>\n",
              "      <td>2.26</td>\n",
              "      <td>11.06</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>742</th>\n",
              "      <td>647</td>\n",
              "      <td>West Ham</td>\n",
              "      <td>G</td>\n",
              "      <td>Anang</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>1.9</td>\n",
              "      <td>-0.1</td>\n",
              "      <td>1.90</td>\n",
              "      <td>1.90</td>\n",
              "      <td>1.90</td>\n",
              "      <td>1.88</td>\n",
              "      <td>1.91</td>\n",
              "      <td>9.49</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>743</th>\n",
              "      <td>546</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>G</td>\n",
              "      <td>Bentley</td>\n",
              "      <td>3.9</td>\n",
              "      <td>0.6</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0.7</td>\n",
              "      <td>2.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>10.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>744</th>\n",
              "      <td>564</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>G</td>\n",
              "      <td>King</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.7</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0.7</td>\n",
              "      <td>2.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>10.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>745</th>\n",
              "      <td>569</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>G</td>\n",
              "      <td>José Sá</td>\n",
              "      <td>5.0</td>\n",
              "      <td>1.6</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>220</td>\n",
              "      <td>33.5</td>\n",
              "      <td>...</td>\n",
              "      <td>1170</td>\n",
              "      <td>0.7</td>\n",
              "      <td>2.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>10.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>746</th>\n",
              "      <td>571</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>G</td>\n",
              "      <td>Šarkić</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.3</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0.7</td>\n",
              "      <td>2.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>10.00</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>724 rows × 22 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-a3f6729e-048f-48dc-93fd-04b83e83c704')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-a3f6729e-048f-48dc-93fd-04b83e83c704 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-a3f6729e-048f-48dc-93fd-04b83e83c704');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-bd69d6e6-b01f-400c-88d6-e7a1fb13f402\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-bd69d6e6-b01f-400c-88d6-e7a1fb13f402')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-bd69d6e6-b01f-400c-88d6-e7a1fb13f402 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 178
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "apiplayers = master"
      ],
      "metadata": {
        "id": "3bvpGcxtVMyS"
      },
      "execution_count": 179,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "Mostselected = apiplayers.nlargest(20, 'selected_by_percent')\n",
        "Mostselected"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 677
        },
        "id": "O-wNiNtosYZU",
        "outputId": "fcdbb98c-49fd-4bf6-f76a-687ae33801d7"
      },
      "execution_count": 180,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "      id               team pos        name  cost  selected_by_percent  \\\n",
              "462  355    Manchester City   F     Haaland  14.0                 82.7   \n",
              "17    19            Arsenal   M        Saka   8.8                 53.4   \n",
              "547  430   Newcastle United   D    Trippier   7.0                 49.7   \n",
              "390  308          Liverpool   M       Salah  13.0                 48.4   \n",
              "60    60        Aston Villa   F     Watkins   8.5                 43.8   \n",
              "672  516          Tottenham   M         Son   9.6                 39.2   \n",
              "687  524           West Ham   G      Areola   4.3                 37.8   \n",
              "18    20            Arsenal   D      Saliba   5.5                 34.2   \n",
              "451  343    Manchester City   F   J.Alvarez   7.1                 30.9   \n",
              "37    36        Aston Villa   D        Cash   5.1                 29.6   \n",
              "122  108          Brentford   M      Mbeumo   7.0                 26.9   \n",
              "162  143           Brighton   M      Mitoma   6.5                 24.7   \n",
              "689  526           West Ham   M       Bowen   7.6                 24.6   \n",
              "274  220     Crystal Palace   D    Andersen   5.2                 24.5   \n",
              "375  293          Liverpool   F      Darwin   7.6                 17.1   \n",
              "150  131           Brighton   D   Estupiñan   5.0                 16.9   \n",
              "474  369    Manchester City   D      Walker   5.3                 16.4   \n",
              "459  352    Manchester City   G  Ederson M.   5.5                 16.1   \n",
              "561   28  Nottingham Forest   G      Turner   4.1                 16.1   \n",
              "4      5            Arsenal   D     Gabriel   4.9                 15.5   \n",
              "\n",
              "     expected_goals  expected_assists  goals_scored  assists  bps  ict_index  \\\n",
              "462           13.35              0.95            14        3  400      147.0   \n",
              "17             4.15              3.79             4        7  293      121.7   \n",
              "547            0.10              4.06             0        6  333       93.7   \n",
              "390            8.74              3.50            10        5  323      142.6   \n",
              "60             7.56              1.63             7        8  289      118.3   \n",
              "672            4.68              2.67             8        1  264      106.9   \n",
              "687            0.00              0.00             0        0  234       37.0   \n",
              "18             0.71              0.49             1        1  272       36.0   \n",
              "451            3.67              2.65             4        6  286      102.5   \n",
              "37             3.52              1.31             2        1  201       60.6   \n",
              "122            7.30              3.80             6        3  216      111.3   \n",
              "162            2.78              2.46             3        4  173       86.9   \n",
              "689            5.07              1.34             8        1  227       99.3   \n",
              "274            0.90              0.69             2        1  290       69.6   \n",
              "375            5.58              0.99             4        6  165       78.0   \n",
              "150            0.90              1.47             1        3  112       45.0   \n",
              "474            0.16              1.09             0        1  246       43.5   \n",
              "459            0.00              0.02             0        0  211       22.7   \n",
              "561            0.00              0.00             0        0  176       20.2   \n",
              "4              0.40              0.13             0        0  165       23.4   \n",
              "\n",
              "     points  points_per_game  minutes  apppoint  assistvalue  \n",
              "462     103              7.9     1114         2            3  \n",
              "17       79              6.6     1035         2            3  \n",
              "547      70              5.4     1127         2            3  \n",
              "390     106              8.2     1134         2            3  \n",
              "60       85              6.5     1130         2            3  \n",
              "672      84              6.5     1066         2            3  \n",
              "687      43              3.3     1170         2            3  \n",
              "18       61              4.7     1170         2            3  \n",
              "451      68              5.2     1076         2            3  \n",
              "37       45              3.5     1068         2            3  \n",
              "122      76              5.8     1170         2            3  \n",
              "162      53              4.4      980         2            3  \n",
              "689      75              6.2     1080         2            3  \n",
              "274      61              4.7     1170         2            3  \n",
              "375      55              4.6      680         2            3  \n",
              "150      25              4.2      495         2            3  \n",
              "474      45              3.5     1170         2            3  \n",
              "459      39              3.2     1080         2            3  \n",
              "561      27              2.7      900         2            3  \n",
              "4        35              3.2      834         2            3  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-d2be7fc6-bdde-4aef-87c3-3ad435a17a10\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>team</th>\n",
              "      <th>pos</th>\n",
              "      <th>name</th>\n",
              "      <th>cost</th>\n",
              "      <th>selected_by_percent</th>\n",
              "      <th>expected_goals</th>\n",
              "      <th>expected_assists</th>\n",
              "      <th>goals_scored</th>\n",
              "      <th>assists</th>\n",
              "      <th>bps</th>\n",
              "      <th>ict_index</th>\n",
              "      <th>points</th>\n",
              "      <th>points_per_game</th>\n",
              "      <th>minutes</th>\n",
              "      <th>apppoint</th>\n",
              "      <th>assistvalue</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>462</th>\n",
              "      <td>355</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>F</td>\n",
              "      <td>Haaland</td>\n",
              "      <td>14.0</td>\n",
              "      <td>82.7</td>\n",
              "      <td>13.35</td>\n",
              "      <td>0.95</td>\n",
              "      <td>14</td>\n",
              "      <td>3</td>\n",
              "      <td>400</td>\n",
              "      <td>147.0</td>\n",
              "      <td>103</td>\n",
              "      <td>7.9</td>\n",
              "      <td>1114</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>17</th>\n",
              "      <td>19</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>M</td>\n",
              "      <td>Saka</td>\n",
              "      <td>8.8</td>\n",
              "      <td>53.4</td>\n",
              "      <td>4.15</td>\n",
              "      <td>3.79</td>\n",
              "      <td>4</td>\n",
              "      <td>7</td>\n",
              "      <td>293</td>\n",
              "      <td>121.7</td>\n",
              "      <td>79</td>\n",
              "      <td>6.6</td>\n",
              "      <td>1035</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>547</th>\n",
              "      <td>430</td>\n",
              "      <td>Newcastle United</td>\n",
              "      <td>D</td>\n",
              "      <td>Trippier</td>\n",
              "      <td>7.0</td>\n",
              "      <td>49.7</td>\n",
              "      <td>0.10</td>\n",
              "      <td>4.06</td>\n",
              "      <td>0</td>\n",
              "      <td>6</td>\n",
              "      <td>333</td>\n",
              "      <td>93.7</td>\n",
              "      <td>70</td>\n",
              "      <td>5.4</td>\n",
              "      <td>1127</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>390</th>\n",
              "      <td>308</td>\n",
              "      <td>Liverpool</td>\n",
              "      <td>M</td>\n",
              "      <td>Salah</td>\n",
              "      <td>13.0</td>\n",
              "      <td>48.4</td>\n",
              "      <td>8.74</td>\n",
              "      <td>3.50</td>\n",
              "      <td>10</td>\n",
              "      <td>5</td>\n",
              "      <td>323</td>\n",
              "      <td>142.6</td>\n",
              "      <td>106</td>\n",
              "      <td>8.2</td>\n",
              "      <td>1134</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>60</th>\n",
              "      <td>60</td>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>F</td>\n",
              "      <td>Watkins</td>\n",
              "      <td>8.5</td>\n",
              "      <td>43.8</td>\n",
              "      <td>7.56</td>\n",
              "      <td>1.63</td>\n",
              "      <td>7</td>\n",
              "      <td>8</td>\n",
              "      <td>289</td>\n",
              "      <td>118.3</td>\n",
              "      <td>85</td>\n",
              "      <td>6.5</td>\n",
              "      <td>1130</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>672</th>\n",
              "      <td>516</td>\n",
              "      <td>Tottenham</td>\n",
              "      <td>M</td>\n",
              "      <td>Son</td>\n",
              "      <td>9.6</td>\n",
              "      <td>39.2</td>\n",
              "      <td>4.68</td>\n",
              "      <td>2.67</td>\n",
              "      <td>8</td>\n",
              "      <td>1</td>\n",
              "      <td>264</td>\n",
              "      <td>106.9</td>\n",
              "      <td>84</td>\n",
              "      <td>6.5</td>\n",
              "      <td>1066</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>687</th>\n",
              "      <td>524</td>\n",
              "      <td>West Ham</td>\n",
              "      <td>G</td>\n",
              "      <td>Areola</td>\n",
              "      <td>4.3</td>\n",
              "      <td>37.8</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>234</td>\n",
              "      <td>37.0</td>\n",
              "      <td>43</td>\n",
              "      <td>3.3</td>\n",
              "      <td>1170</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>18</th>\n",
              "      <td>20</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>D</td>\n",
              "      <td>Saliba</td>\n",
              "      <td>5.5</td>\n",
              "      <td>34.2</td>\n",
              "      <td>0.71</td>\n",
              "      <td>0.49</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>272</td>\n",
              "      <td>36.0</td>\n",
              "      <td>61</td>\n",
              "      <td>4.7</td>\n",
              "      <td>1170</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>451</th>\n",
              "      <td>343</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>F</td>\n",
              "      <td>J.Alvarez</td>\n",
              "      <td>7.1</td>\n",
              "      <td>30.9</td>\n",
              "      <td>3.67</td>\n",
              "      <td>2.65</td>\n",
              "      <td>4</td>\n",
              "      <td>6</td>\n",
              "      <td>286</td>\n",
              "      <td>102.5</td>\n",
              "      <td>68</td>\n",
              "      <td>5.2</td>\n",
              "      <td>1076</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>37</th>\n",
              "      <td>36</td>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>D</td>\n",
              "      <td>Cash</td>\n",
              "      <td>5.1</td>\n",
              "      <td>29.6</td>\n",
              "      <td>3.52</td>\n",
              "      <td>1.31</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>201</td>\n",
              "      <td>60.6</td>\n",
              "      <td>45</td>\n",
              "      <td>3.5</td>\n",
              "      <td>1068</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>122</th>\n",
              "      <td>108</td>\n",
              "      <td>Brentford</td>\n",
              "      <td>M</td>\n",
              "      <td>Mbeumo</td>\n",
              "      <td>7.0</td>\n",
              "      <td>26.9</td>\n",
              "      <td>7.30</td>\n",
              "      <td>3.80</td>\n",
              "      <td>6</td>\n",
              "      <td>3</td>\n",
              "      <td>216</td>\n",
              "      <td>111.3</td>\n",
              "      <td>76</td>\n",
              "      <td>5.8</td>\n",
              "      <td>1170</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>162</th>\n",
              "      <td>143</td>\n",
              "      <td>Brighton</td>\n",
              "      <td>M</td>\n",
              "      <td>Mitoma</td>\n",
              "      <td>6.5</td>\n",
              "      <td>24.7</td>\n",
              "      <td>2.78</td>\n",
              "      <td>2.46</td>\n",
              "      <td>3</td>\n",
              "      <td>4</td>\n",
              "      <td>173</td>\n",
              "      <td>86.9</td>\n",
              "      <td>53</td>\n",
              "      <td>4.4</td>\n",
              "      <td>980</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>689</th>\n",
              "      <td>526</td>\n",
              "      <td>West Ham</td>\n",
              "      <td>M</td>\n",
              "      <td>Bowen</td>\n",
              "      <td>7.6</td>\n",
              "      <td>24.6</td>\n",
              "      <td>5.07</td>\n",
              "      <td>1.34</td>\n",
              "      <td>8</td>\n",
              "      <td>1</td>\n",
              "      <td>227</td>\n",
              "      <td>99.3</td>\n",
              "      <td>75</td>\n",
              "      <td>6.2</td>\n",
              "      <td>1080</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>274</th>\n",
              "      <td>220</td>\n",
              "      <td>Crystal Palace</td>\n",
              "      <td>D</td>\n",
              "      <td>Andersen</td>\n",
              "      <td>5.2</td>\n",
              "      <td>24.5</td>\n",
              "      <td>0.90</td>\n",
              "      <td>0.69</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>290</td>\n",
              "      <td>69.6</td>\n",
              "      <td>61</td>\n",
              "      <td>4.7</td>\n",
              "      <td>1170</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>375</th>\n",
              "      <td>293</td>\n",
              "      <td>Liverpool</td>\n",
              "      <td>F</td>\n",
              "      <td>Darwin</td>\n",
              "      <td>7.6</td>\n",
              "      <td>17.1</td>\n",
              "      <td>5.58</td>\n",
              "      <td>0.99</td>\n",
              "      <td>4</td>\n",
              "      <td>6</td>\n",
              "      <td>165</td>\n",
              "      <td>78.0</td>\n",
              "      <td>55</td>\n",
              "      <td>4.6</td>\n",
              "      <td>680</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>150</th>\n",
              "      <td>131</td>\n",
              "      <td>Brighton</td>\n",
              "      <td>D</td>\n",
              "      <td>Estupiñan</td>\n",
              "      <td>5.0</td>\n",
              "      <td>16.9</td>\n",
              "      <td>0.90</td>\n",
              "      <td>1.47</td>\n",
              "      <td>1</td>\n",
              "      <td>3</td>\n",
              "      <td>112</td>\n",
              "      <td>45.0</td>\n",
              "      <td>25</td>\n",
              "      <td>4.2</td>\n",
              "      <td>495</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>474</th>\n",
              "      <td>369</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>D</td>\n",
              "      <td>Walker</td>\n",
              "      <td>5.3</td>\n",
              "      <td>16.4</td>\n",
              "      <td>0.16</td>\n",
              "      <td>1.09</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>246</td>\n",
              "      <td>43.5</td>\n",
              "      <td>45</td>\n",
              "      <td>3.5</td>\n",
              "      <td>1170</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>459</th>\n",
              "      <td>352</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>G</td>\n",
              "      <td>Ederson M.</td>\n",
              "      <td>5.5</td>\n",
              "      <td>16.1</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.02</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>211</td>\n",
              "      <td>22.7</td>\n",
              "      <td>39</td>\n",
              "      <td>3.2</td>\n",
              "      <td>1080</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>561</th>\n",
              "      <td>28</td>\n",
              "      <td>Nottingham Forest</td>\n",
              "      <td>G</td>\n",
              "      <td>Turner</td>\n",
              "      <td>4.1</td>\n",
              "      <td>16.1</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>176</td>\n",
              "      <td>20.2</td>\n",
              "      <td>27</td>\n",
              "      <td>2.7</td>\n",
              "      <td>900</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>5</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>D</td>\n",
              "      <td>Gabriel</td>\n",
              "      <td>4.9</td>\n",
              "      <td>15.5</td>\n",
              "      <td>0.40</td>\n",
              "      <td>0.13</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>165</td>\n",
              "      <td>23.4</td>\n",
              "      <td>35</td>\n",
              "      <td>3.2</td>\n",
              "      <td>834</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-d2be7fc6-bdde-4aef-87c3-3ad435a17a10')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-d2be7fc6-bdde-4aef-87c3-3ad435a17a10 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-d2be7fc6-bdde-4aef-87c3-3ad435a17a10');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-eb71c6b2-8c3c-4a41-a1e2-ba2bc1dd7bf4\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-eb71c6b2-8c3c-4a41-a1e2-ba2bc1dd7bf4')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-eb71c6b2-8c3c-4a41-a1e2-ba2bc1dd7bf4 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 180
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "ax = sns.barplot(x='selected_by_percent', y='name', data=Mostselected, hue='pos', dodge=False)\n",
        "sns.set(rc={'figure.figsize':(11.7,8.27)})\n",
        "plt.title(\"Most Selected\")\n",
        "plt.xticks(rotation=90)\n",
        "plt.ylabel(\"selected_by_percent\")\n",
        "plt.legend(bbox_to_anchor=(1.05, 1), loc='upper left', borderaxespad=0)\n",
        "plt.gcf().set_size_inches(30,10)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 603
        },
        "id": "8PBz92opthgG",
        "outputId": "66cc14e3-8a16-4756-ba87-41244d0b80d7"
      },
      "execution_count": 181,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 3000x1000 with 1 Axes>"
            ],
            "image/png": "iVBORw0KGgoAAAANSUhEUgAACksAAANbCAYAAADo3zpoAAAAOXRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjcuMSwgaHR0cHM6Ly9tYXRwbG90bGliLm9yZy/bCgiHAAAACXBIWXMAAA9hAAAPYQGoP6dpAAC8FklEQVR4nOzdZ5RW5aE24HtgcCjTLETADM2KAnpU7AqoBGLEGjW2HOyKJVhOInbUiL1rSAwKGjVqVGLsimDBqMEoNmxERIMJigJSpM18P/yckzlgGwdHX65rrb3WvHs/+3nuvcnKj6w7zy6qqampCQAAAAAAAAAAAECBatLYAQAAAAAAAAAAAACWJWVJAAAAAAAAAAAAoKApSwIAAAAAAAAAAAAFTVkSAAAAAAAAAAAAKGjKkgAAAAAAAAAAAEBBU5YEAAAAAAAAAAAACpqyJAAAAAAAAAAAAFDQlCUBAAAAAAAAAACAgqYsCQAAAAAAAAAAABQ0ZUkAAAAAWE4NGDAgHTt2bOwY9VJUVJQzzjijsWMAAAAAAN8TypIAAAAALHdGjBiRoqKiFBUV5Yknnljiek1NTaqqqlJUVJQdd9xxmWSYOnVqzjjjjDz//PNf+Z4XX3wxP/3pT9OhQ4c0b948q622Wvr06ZMrrrhimWT8pm666aZceumljR0DAAAAAEBZEgAAAIDlV/PmzXPTTTctcf7RRx/Nu+++m5KSkmW29tSpUzNkyJCvXJZ88skns/HGG2fChAk55JBDcuWVV+bggw9OkyZNctllly2znN+EsiQAAAAA8F1R3NgBAAAAAKCx7LDDDrntttty+eWXp7j4f/+nsptuuikbbbRRPvjgg0ZMV9evf/3rVFRU5G9/+1sqKyvrXJs2bVrjhAIAAAAA+J6wsyQAAAAAy629994706dPz0MPPVR7bsGCBfnTn/6UffbZZ6n3zJkzJ8cff3yqqqpSUlKStddeOxdeeGFqamrqjHvooYey1VZbpbKyMqWlpVl77bVz0kknJUnGjh2bHj16JEkOOOCA2k+Cjxgx4nOzTpo0Keutt94SRckk+cEPfrDEuT/84Q/ZaKON0qJFi6y00kr52c9+lnfeeefLXkmqq6tz6aWXZr311kvz5s2z6qqr5rDDDstHH320xNj77rsvPXv2TFlZWcrLy9OjR4/anTp79eqVe+65J2+//Xbt83Xs2LH23vnz5+f000/PGmuskZKSklRVVeWXv/xl5s+fX2eN+fPn59hjj03r1q1TVlaWnXbaKe++++6XPgcAAAAAwH+ysyQAAAAAy62OHTtm8803z80335wf//jHST4tAM6cOTM/+9nPcvnll9cZX1NTk5122iljxozJQQcdlA022CAPPPBA/ud//if//Oc/c8kllyRJXn755ey4447p3r17zjzzzJSUlOTNN9/MuHHjkiRdunTJmWeemdNOOy2HHnpott566yTJFlts8blZO3TokL/+9a956aWX0rVr1y98rl//+tc59dRTs+eee+bggw/O+++/nyuuuCLbbLNNnnvuuaUWLj9z2GGHZcSIETnggANyzDHH5K233sqVV16Z5557LuPGjUuzZs2SJCNGjMiBBx6Y9dZbL4MHD05lZWWee+653H///dlnn31y8sknZ+bMmXn33Xdr30tpaWmSTwuZO+20U5544okceuih6dKlS1588cVccsklef311zNq1KjaPAcffHD+8Ic/ZJ999skWW2yRRx55JD/5yU++8PkBAAAAAP4vZUkAAAAAlmv77LNPBg8enHnz5qVFixa58cYb07Nnz7Rr126JsXfddVceeeSRnH322Tn55JOTJEceeWT22GOPXHbZZTnqqKOy+uqr56GHHsqCBQty3333ZZVVVllinlVXXTU//vGPc9ppp2XzzTfPfvvt96U5TzjhhPz4xz/OBhtskE022SRbb711tttuu/Tu3bu2wJgkb7/9dk4//fScffbZtTtZJsluu+2W//qv/8rVV19d5/x/euKJJ/L73/8+N954Y52dNXv37p1+/frltttuyz777JOZM2fmmGOOySabbJKxY8emefPmtWM/22GzT58+WW211fLRRx8t8Xw33XRTHn744Tz66KPZaqutas937do1hx9+eJ588slsscUWmTBhQv7whz9k4MCBueqqq2rf97777psXXnjhS98ZAAAAAMBnfIYbAAAAgOXannvumXnz5uXuu+/Oxx9/nLvvvvtzP8F97733pmnTpjnmmGPqnD/++ONTU1OT++67L0lqd27885//nOrq6gbJ2adPn/z1r3/NTjvtlAkTJuT8889P3759s9pqq+Wuu+6qHXfHHXekuro6e+65Zz744IPao02bNllzzTUzZsyYz13jtttuS0VFRfr06VPn3o022iilpaW19z700EP5+OOPc+KJJ9YpSiZJUVHRlz7Lbbfdli5dumSdddaps862226bJLXr3HvvvUmyxPseNGjQl78wAAAAAID/YGdJAAAAAJZrrVu3zvbbb5+bbropc+fOzeLFi/PTn/50qWPffvvttGvXLmVlZXXOd+nSpfZ6kuy11175/e9/n4MPPjgnnnhitttuu+y222756U9/miZN6v//X+7Ro0fuuOOOLFiwIBMmTMidd96ZSy65JD/96U/z/PPPZ911180bb7yRmpqarLnmmkud4z93ofy/3njjjcycOTM/+MEPlnp92rRpSZJJkyYlyZd+DvyL1pk4cWJat279heu8/fbbadKkSVZfffU619dee+16rQsAAAAALL+UJQEAAABY7u2zzz455JBD8q9//Ss//vGPa3eGrK8WLVrksccey5gxY3LPPffk/vvvzy233JJtt902Dz74YJo2bfqN5l9hhRXSo0eP9OjRI2uttVYOOOCA3HbbbTn99NNTXV2doqKi3HfffUtdp7S09HPnra6uzg9+8IPceOONS73+eeXGr6u6ujrdunXLxRdfvNTrVVVVDbIOAAAAAMBnlCUBAAAAWO7tuuuuOeyww/LUU0/llltu+dxxHTp0yMMPP5yPP/64zu6Sr776au31zzRp0iTbbbddtttuu1x88cU555xzcvLJJ2fMmDHZfvvtv9Lnqr+KjTfeOEny3nvvJUlWX3311NTUpFOnTllrrbW+1lyrr756Hn744Wy55ZZp0aLFF45LkpdeeilrrLHG5477vGdcffXVM2HChGy33XZf+B46dOiQ6urqTJo0qc5ukq+99tqXPQoAAAAAQB31/+YPAAAAABSI0tLS/OY3v8kZZ5yR/v37f+64HXbYIYsXL86VV15Z5/wll1ySoqKi/PjHP06SfPjhh0vcu8EGGyRJ5s+fnyRp1apVkmTGjBlfKeOYMWNSU1OzxPl77703yf9+mnq33XZL06ZNM2TIkCXG19TUZPr06Z+7xp577pnFixfnrLPOWuLaokWLarP+6Ec/SllZWYYOHZpPPvlkiTU+06pVq8ycOXOp6/zzn//MNddcs8S1efPmZc6cOUlS+z4vv/zyOmMuvfTSz30GAAAAAIClsbMkAAAAACT57//+7y8d079///Tu3Tsnn3xyJk+enPXXXz8PPvhg/vznP2fQoEG1Oy6eeeaZeeyxx/KTn/wkHTp0yLRp03L11Vfnhz/8Ybbaaqskn+6uWFlZmWHDhqWsrCytWrXKpptumk6dOi117aOPPjpz587NrrvumnXWWScLFizIk08+mVtuuSUdO3bMAQccUDvv2WefncGDB2fy5MnZZZddUlZWlrfeeit33nlnDj300JxwwglLXaNnz5457LDDMnTo0Dz//PP50Y9+lGbNmuWNN97Ibbfdlssuuyw//elPU15enksuuSQHH3xwevTokX322ScrrrhiJkyYkLlz52bkyJFJko022ii33HJLjjvuuPTo0SOlpaXp379/9t9//9x66605/PDDM2bMmGy55ZZZvHhxXn311dx666154IEHsvHGG2eDDTbI3nvvnauvvjozZ87MFltskdGjR+fNN9/82v++AAAAAMDyTVkSAAAAAL6iJk2a5K677sppp52WW265Jdddd106duyYCy64IMcff3ztuJ122imTJ0/Otddemw8++CCrrLJKevbsmSFDhqSioiJJ0qxZs4wcOTKDBw/O4YcfnkWLFuW666773LLkhRdemNtuuy333ntvfve732XBggVp3759Bg4cmFNOOSWVlZW1Y0888cSstdZaueSSSzJkyJAkSVVVVX70ox9lp512+sJnHDZsWDbaaKP89re/zUknnZTi4uJ07Ngx++23X7bccsvacQcddFB+8IMf5Nxzz81ZZ52VZs2aZZ111smxxx5bO2bgwIF5/vnnc9111+WSSy5Jhw4d0r9//zRp0iSjRo3KJZdckuuvvz533nlnWrZsmc6dO+cXv/hFnc+HX3vttWndunVuvPHGjBo1Kttuu23uueeeVFVVffV/OAAAAABguVdUs7Rv9wAAAAAAAAAAAAAUiCaNHQAAAAAAAAAAAABgWVKWBAAAAAAAAAAAAAqasiQAAAAAAAAAAABQ0JQlAQAAAAAAAAAAgIKmLAkAAAAAAAAAAAAUNGVJAAAAAAAAAAAAoKAVN3YAGk51dXWmTp2asrKyFBUVNXYcAAAAAAAAAACgkdXU1OTjjz9Ou3bt0qSJvfUKzeLFi7Nw4cLGjtFomjVrlqZNm36lscqSBWTq1Kmpqqpq7BgAAAAAAAAAAMB3zDvvvJMf/vCHjR2DBlJTU5P33nsvM2bMSE1NY6dpPEVFSWVlZdq2bfulGwwqSxaQsrKyJJ/+F1t5eXkjpwEAAAAAAAAAABrbrFmzUlVVVdstojC89957+eijGSkrq0xJSUmS5fFLxDWZP39+PvpoRpKkXbt2XzhaWbKAfNaMLS8vV5YEAAAAAAAAAABqfdmue3x/LF68ODNmfFqULCuraOw4jWqFFZonSWbMmJFVV131Cz/J7SP0AAAAAAAAAAAA8D2xcOHC1NTk/+8oSUlJSWpqPn0vX8TOkgVom1NuTtOSFo0dAwAAAAAAAACAAvPsBT9v7AhALbuFfuqrvQc7SwIAAAAAAAAAAAAFzc6SAAAAAAAAAAAAwLfummuGZfjw3y1xvnPn1XPTTbc16FrKkgAAAAAAAAAAAFAAtj/n9kZZ9+GTdq/3vSUlzXPVVcOWONfQlCUBAAAAAAAAAACARtGkSVG6du2+7NdZ5isAAAAAAAAAAAAANCI7SwIAAAAAAAAAAACNZtGiRXV+N23aNEVFRQ26hrIkAAAAAAAAAAAA0CjmzZuXrbbapM65008/Kz/+8U8adB1lSQAAAAAAAAAAAKBRlJQ0z7Bhv69zrl271Rp8HWVJAAAAAAAAAAAAoFE0aVKULl3WXfbrLPMVCszkyZNTVFSU559/fpmv1bFjx1x66aXLfB0AAAAAAAAAAAAoZAVTlhwwYEB22WWXJc6PHTs2RUVFmTFjxreeCQAAAAAAAAAAAGh8BVOWBAAAAAAAAAAAAFia5aosOX369Oy9995ZbbXV0rJly3Tr1i0333xznTH3339/ttpqq1RWVmbllVfOjjvumEmTJn3unIsXL85BBx2UTp06pUWLFll77bVz2WWX1Rnz2a6XF154Ydq2bZuVV145Rx55ZBYuXFg7Ztq0aenfv39atGiRTp065cYbb2zYhwcAAAAAAAAAAIDlVHFjB/g2ffLJJ9loo43yq1/9KuXl5bnnnnuy//77Z/XVV88mm2ySJJkzZ06OO+64dO/ePbNnz85pp52WXXfdNc8//3yaNFmyW1pdXZ0f/vCHue2227LyyivnySefzKGHHpq2bdtmzz33rB03ZsyYtG3bNmPGjMmbb76ZvfbaKxtssEEOOeSQJJ8WKqdOnZoxY8akWbNmOeaYYzJt2rQvfJ758+dn/vz5tb9nzZrVEK8JAAAAAAAAAACA76GHT9q9sSN8LYcccngOOeTwb2WtgipL3n333SktLa1zbvHixbV/r7baajnhhBNqfx999NF54IEHcuutt9aWJXffve5/WK699tq0bt06r7zySrp27brEms2aNcuQIUNqf3fq1Cl//etfc+utt9YpS6644oq58sor07Rp06yzzjr5yU9+ktGjR+eQQw7J66+/nvvuuy/PPPNMevTokSQZPnx4unTp8oXPO3To0DprAwAAAAAAAAAAAEsqqM9w9+7dO88//3yd4/e//33t9cWLF+ess85Kt27dstJKK6W0tDQPPPBApkyZUjvmjTfeyN57753OnTunvLw8HTt2TJI6Y/6vq666KhtttFFat26d0tLS/O53v1ti/HrrrZemTZvW/m7btm3tzpETJ05McXFxNtpoo9rr66yzTiorK7/weQcPHpyZM2fWHu+8886XviMAAAAAAAAAAABY3hTUzpKtWrXKGmusUefcu+++W/v3BRdckMsuuyyXXnppunXrllatWmXQoEFZsGBB7Zj+/funQ4cOueaaa9KuXbtUV1ena9eudcb8pz/+8Y854YQTctFFF2XzzTdPWVlZLrjggjz99NN1xjVr1qzO76KiolRXV3+j5y0pKUlJSck3mgMAAAAAAAAAAAAKXUGVJb/MuHHjsvPOO2e//fZLklRXV+f111/PuuuumySZPn16XnvttVxzzTXZeuutkyRPPPHEl865xRZbZODAgbXnJk2a9LVyrbPOOlm0aFGeffbZ2s9wv/baa5kxY8bXmgcAAAAAAAAAAABYUkF9hvvLrLnmmnnooYfy5JNPZuLEiTnssMPy73//u/b6iiuumJVXXjm/+93v8uabb+aRRx7Jcccd96Vzjh8/Pg888EBef/31nHrqqfnb3/72tXKtvfba6devXw477LA8/fTTefbZZ3PwwQenRYsW9XpOAAAAAAAAAAAA4H8tV2XJU045JRtuuGH69u2bXr16pU2bNtlll11qrzdp0iR//OMf8+yzz6Zr16459thjc8EFF3zhnIcddlh222237LXXXtl0000zffr0OrtMflXXXXdd2rVrl549e2a33XbLoYcemh/84Adfex4AAAAAAAAAAACgrqKampqaxg5Bw5g1a1YqKiqy/tHD0rTErpQAAAAAAAAAADSsZy/4eWNH4Gv6rFM0c+bMlJeXN3YcGsAnn3ySSZP+kVVWaZMVVihp7DiNbsGC+fngg39l9dU7p3nz5p87brnaWRIAAAAAAAAAAABY/ihLAgAAAAAAAAAAAAVNWRIAAAAAAAAAAAAoaMqSAAAAAAAAAAAAwLfummuGZbPNNkz//n1TXV29xPVDDjkgm222Yc488/RvvFbxN54BAAAAAAAAAAAAaHQfX7FZo6xbdvRT9b63uLg4M2bMyHPP/T0bbbRx7fn33pual156IS1btmyIiHaWBAAAAAAAAAAAABpHs2bNsvnmW+ahh+6vc/6hhx5M586rZ7XVftgg6yhLAgAAAAAAAAAAAI2mT5++eeSR0Vm0aGHtuQcfvC8/+lG/BltDWRIAAAAAAAAAAABoNFtvvU0WLlyQp5/+9HPeb731j7z55hvp06dvg62hLAkAAAAAAAAAAAA0mubNW2TrrXvloYceSJI8+OD96date9q1W63B1ihusJn4znjs7L1TXl7e2DEAAAAAAAAAAADgK/nRj/rmtNNOzieffJKHHnoge+65d4POb2dJAAAAAAAAAAAAoFFtttnmKS4uzjXX/CbvvTc1223Xp0HnV5YEAAAAAAAAAAAAGlVxcbP07r1tbr75xmy0UY+svPLKDTt/g84GAAAAAAAAAAAAUA877bRrPvroo+y8864NPreyJAAAAAAAAAAAANDo1luva84//+JlMrfPcAMAAAAAAAAAAAAFraimpqamsUPQMGbNmpWKiorMnDkz5eXljR0HAAAAAAAAAABoZDpFheeTTz7JpEn/yCqrtMkKK5Q0dpxGt2DB/Hzwwb+y+uqd07x5888d5zPcBeidczdLWfOmjR0DAAAAAIDvgfanvdjYEQAAAACWOZ/hBgAAAAAAAAAAAAqasiQAAAAAAAAAAABQ0JQlAQAAAAAAAAAAgIKmLAkAAAAAAAAAAAAUNGVJAAAAAAAAAAAAoKApSwIAAAAAAAAAAAAFTVkSAAAAAAAAAAAAKGjKkgAAAAAAAAAAAEBBU5YEAAAAAAAAAAAAClpxYwcAAAAAAAAAAAAAlj/XXDMsw4f/LklSVFSUli1bpU2bNvmv/9owu+++Zzp16txgaylLfotGjBiRQYMGZcaMGY0dBQAAAAAAAAAAgAKz4x9+1Cjr3r3fg/W+t6Skea66aliSZM6cuZk06c38+c935M9/vjMnnXRafvzjnzRIRp/h/href//9HHHEEWnfvn1KSkrSpk2b9O3bN+PGjWvsaAAAAAAAAAAAAPC906RJUbp27Z6uXbtn0003yz777Jfrr78566+/Qc4558z885/vNsw6DTLLcmL33XfPc889l5EjR+b111/PXXfdlV69emX69OmNHQ0AAAAAAAAAAAAKQklJSY4//ldZuHBh7rrrzgaZU1nyK5oxY0Yef/zxnHfeeendu3c6dOiQTTbZJIMHD85OO+2UJLn44ovTrVu3tGrVKlVVVRk4cGBmz579uXO+//772XjjjbPrrrtm/vz5mTRpUnbeeeesuuqqKS0tTY8ePfLwww9/W48IAAAAAAAAAAAA3wmdOnVO69Y/yIsvvtgg8ylLfkWlpaUpLS3NqFGjMn/+/KWOadKkSS6//PK8/PLLGTlyZB555JH88pe/XOrYd955J1tvvXW6du2aP/3pTykpKcns2bOzww47ZPTo0XnuuefSr1+/9O/fP1OmTFnqHPPnz8+sWbPqHAAAAAAAAAAAAFAIVl111Uyf/kGDzKUs+RUVFxdnxIgRGTlyZCorK7PlllvmpJNOygsvvFA7ZtCgQendu3c6duyYbbfdNmeffXZuvfXWJeZ67bXXsuWWW6Zv37657rrr0rRp0yTJ+uuvn8MOOyxdu3bNmmuumbPOOiurr7567rrrrqVmGjp0aCoqKmqPqqqqZfPwAAAAAAAAAAAA8C2rqalJUVFRg8ylLPk17L777pk6dWruuuuu9OvXL2PHjs2GG26YESNGJEkefvjhbLfddllttdVSVlaW/fffP9OnT8/cuXNr55g3b1623nrr7Lbbbrnsssvq/EPOnj07J5xwQrp06ZLKysqUlpZm4sSJn7uz5ODBgzNz5sza45133lmmzw8AAAAAAAAAAADflmnTpmXllVdukLmUJb+m5s2bp0+fPjn11FPz5JNPZsCAATn99NMzefLk7LjjjunevXtuv/32PPvss7nqqquSJAsWLKi9v6SkJNtvv33uvvvu/POf/6wz9wknnJA777wz55xzTh5//PE8//zz6datW537/1NJSUnKy8vrHAAAAAAAAAAAAPB9949/TMr7709Lt27rN8h8ypLf0Lrrrps5c+bk2WefTXV1dS666KJsttlmWWuttTJ16tQlxjdp0iQ33HBDNtpoo/Tu3bvOmHHjxmXAgAHZdddd061bt7Rp0yaTJ0/+Fp8GAAAAAAAAAAAAGtf8+fNz0UXnZYUVVshOO+3aIHMWN8gsy4Hp06dnjz32yIEHHpju3bunrKws48ePz/nnn5+dd945a6yxRhYuXJgrrrgi/fv3z7hx4zJs2LClztW0adPceOON2XvvvbPttttm7NixadOmTdZcc83ccccd6d+/f4qKinLqqaemurr6W35SAAAAAAAAAAAA+HZUV9fkpZdeSJLMnTsvkya9kVGj7sjUqf/MqacOSbt27RpkHWXJr6i0tDSbbrppLrnkkkyaNCkLFy5MVVVVDjnkkJx00klp0aJFLr744px33nkZPHhwttlmmwwdOjQ///nPlzpfcXFxbr755uy11161hcmLL744Bx54YLbYYousssoq+dWvfpVZs2Z9y08KAAAAAAAAAADA99Hd+z3Y2BG+tvnzP8nBBw9IkrRs2TJt27ZLjx6b5Kc/3SsdO3ZqsHWKampqahpsNhrVrFmzUlFRkZcGd0lZ86aNHQcAAAAAgO+B9qe92NgRAAAAWIY+6xTNnDkz5eXljR2HBvDJJ59k0qR/ZJVV2mSFFUoaO06jW7Bgfj744F9ZffXOad68+eeOa/ItZgIAAAAAAAAAAAD41ilLAgAAAAAAAAAAAAVNWRIAAAAAAAAAAAAoaMqSAAAAAAAAAAAAQEFTlgQAAAAAAAAAAAAKmrIkAAAAAAAAAAAAUNCUJQEAAAAAAAAAAICCpiwJAAAAAAAAAAAAFLTixg5Aw6s68amUl5c3dgwAAAAAAAAAAAD4TlCWBAAAAAAAAAAAABrNk0+Oy223/TETJ76cjz+enfLy8nTpsm769dsh22//ozRp8s0/oq0sCQAAAAAAAAAAAAXghZ13aJR1u//53nrf+5vfXJGRI69Lz569c/zxv8oqq6ySDz/8MI8+OjZnnHFKysvLs9lmW3zjjMqSAAAAAAAAAAAAwLdu3LjHM3LkdTnooENzyCGH17m23XZ9stdee6e4uGFqjsqSAAAAAAAAAAAAwLfu5pv/kFVWWSUHHHDwUq+vt17XBlvrm3/IGwAAAAAAAAAAAOBrWLRoUV54YUI22qhHg+0e+UXsLAkAAAAAAAAAAAB8q2bOnJkFCxZk1VXb1DlfU1OTxYsX1/5u0qRJmjT55vtC2lkSAAAAAAAAAAAAaBRFRXV/jxkzOltttUntcfHF5zfIOnaWLEB9hvVJcQv/tAAAAADAd9e4o8c1dgQAAAAAGlFFRUVWWGGFTJs2rc75jTfeJNdd94ckyf/8z6AGW0+jDgAAAAAAAAAAAPhWFRcXp3v39TN+/DNZvHhxmjZtmiQpLy9Pefm6/39MswZbz2e4AQAAAAAAAAAAgG/d3nvvl/fffz8jR167zNeysyQAAAAAAAAAAADwrdtyy63z858fkN/97jd5/fXXsv32P8oqq6yS2bNn5/nnn8uHH05Py5atGmQtZUkAAAAAAAAAAACgUQwceHTWX3+D/OlPt+aCC87N7NmzU15ennXW6ZKTTz49ffr0bZB1lCUBAAAAAAAAAACgAHT/872NHaFettxy62y55dbLdI0my3R2AAAAAAAAAAAAgEamLAkAAAAAAAAAAAAUNGVJAAAAAAAAAAAAoKApSwIAAAAAAAAAAAAFTVny/zjjjDOywQYbNPi8HTt2zKWXXtrg8wIAAAAAAAAAAABfrKDLkkVFRV94nHHGGUvcc8IJJ2T06NENnuVvf/tbDj300AafFwAAAAAAAAAAgOVRTWMH+I74au+heBmnaFTvvfde7d+33HJLTjvttLz22mu150pLS2v/rqmpyeLFi1NaWlrnfENp3br1N7p/wYIFWWGFFRooDQAAAAAAAAAAAN9HzZo1S1FRMn/+/KywQvPGjtPo5s+fn6KiT9/LFynonSXbtGlTe1RUVKSoqKj296uvvpqysrLcd9992WijjVJSUpInnnhiic9wDxgwILvsskuGDBmS1q1bp7y8PIcffngWLFhQO6ZXr1456qijctRRR6WioiKrrLJKTj311NTU/G9j9f9+hnvGjBk5+OCDa+fcdtttM2HChNrrn+X4/e9/n06dOqV5c/+hBgAAAAAAAAAAWN41bdo0lZWV+fjjGfn445lZsOCTLFgwfzk8PsnHH8/Mxx/PSGVlZZo2bfqF762gd5b8Kk488cRceOGF6dy5c1ZcccWMHTt2iTGjR49O8+bNM3bs2EyePDkHHHBAVl555fz617+uHTNy5MgcdNBBeeaZZzJ+/Pgceuihad++fQ455JClrrvHHnukRYsWue+++1JRUZHf/va32W677fL6669npZVWSpK8+eabuf3223PHHXcs9R9y/vz5mT9/fu3vWbNmfcO3AQAAAAAAAAAAwHdd27Ztk3y6ad/HHzdymEZUVJSsuGJl7fv4Ist9WfLMM89Mnz59vnDMCiuskGuvvTYtW7bMeuutlzPPPDP/8z//k7POOitNmny6OWdVVVUuueSSFBUVZe21186LL76YSy65ZKllySeeeCLPPPNMpk2blpKSkiTJhRdemFGjRuVPf/pTDj300CSffnr7+uuv/9xPeA8dOjRDhgz5Jo8PAAAAAAAAAADA90xRUVHatWuXVVddNQsXLmzsOI2mWbNmX7qj5GeW+7Lkxhtv/KVj1l9//bRs2bL29+abb57Zs2fnnXfeSYcOHZIkm222WYqKiuqMueiii7J48eIl/jEmTJiQ2bNnZ+WVV65zft68eZk0aVLt7w4dOnxuUTJJBg8enOOOO67296xZs1JVVfWlzwMAAAAAAAAAAMD3X9OmTb9yWXB5t9yXJVu1avWtrzl79uy0bdt2qZ/8rqysrP37y7KVlJTU7kwJAAAAAAAAAAAALN1yX5b8KiZMmJB58+alRYsWSZKnnnoqpaWldXZxfPrpp+vc89RTT2XNNddcamt3ww03zL/+9a8UFxenY8eOyzQ7AAAAAAAAAAAALO+aNHaA74MFCxbkoIMOyiuvvJJ77703p59+eo466qg0afK/r2/KlCk57rjj8tprr+Xmm2/OFVdckV/84hdLnW/77bfP5ptvnl122SUPPvhgJk+enCeffDInn3xyxo8f/209FgAAAAAAAAAAACwX7Cz5FWy33XZZc801s80222T+/PnZe++9c8YZZ9QZ8/Of/zzz5s3LJptskqZNm+YXv/hFDj300KXOV1RUlHvvvTcnn3xyDjjggLz//vtp06ZNttlmm6y66qrfwhMBAAAAAAAAAADA8qOopqamprFDfJcNGDAgM2bMyKhRoz53TK9evbLBBhvk0ksv/dZyLc2sWbNSUVGRTc7bJMUt9GABAAAAgO+ucUePa+wIAAAAsFz4rFM0c+bMlJeXN3YcaDQ+ww0AAAAAAAAAAAAUNGVJAAAAAAAAAAAAoKD5VvOXGDFixJeOGTt27DLPAQAAAAAAAAAAANSPnSUBAAAAAAAAAACAgqYsCQAAAAAAAAAAABQ0ZUkAAAAAAAAAAACgoClLAgAAAAAAAAAAAAVNWRIAAAAAAAAAAAAoaMqSAAAAAAAAAAAAQEErbuwANLyHDn8o5eXljR0DAAAAAAAAAAAAvhPsLAkAAAAAAAAAAAAUNGVJAAAAAAAAAAAAoKApSwIAAAAAAAAAAAAFTVkSAAAAAAAAAAAAKGjKkgAAAAAAAAAAAEBBU5YEAAAAAAAAAAAAClpxYweg4b1z7mYpa960sWMAAAAAAN8x7U97sbEjAAAAAECjsLMkAAAAAAAAAAAAUNCUJQEAAAAAAAAAAICCpiwJAAAAAAAAAAAAFDRlSQAAAAAAAAAAAKCgKUsCAAAAAAAAAAAABU1ZEgAAAAAAAAAAAChoypIAAAAAAAAAAABAQVOWBAAAAAAAAAAAAAqasiQAAAAAAAAAAABQ0JQlAQAAAAAAAAAAgIKmLLmMjBgxIpWVlV/rno4dO+bSSy9dJnkAAAAAAAAAAABgeaUs+Tnef//9HHHEEWnfvn1KSkrSpk2b9O3bN+PGjWvsaAAAAAAAAAAAAMDXUNzYAb6rdt999yxYsCAjR45M586d8+9//zujR4/O9OnTGzsaAAAAAAAAAAAA8DXYWXIpZsyYkccffzznnXdeevfunQ4dOmSTTTbJ4MGDs9NOOyVJLr744nTr1i2tWrVKVVVVBg4cmNmzZ3/unJMmTcrOO++cVVddNaWlpenRo0cefvjhJcbNnTs3Bx54YMrKytK+ffv87ne/W2bPCQAAAAAAAAAAAMsDZcmlKC0tTWlpaUaNGpX58+cvdUyTJk1y+eWX5+WXX87IkSPzyCOP5Je//OXnzjl79uzssMMOGT16dJ577rn069cv/fv3z5QpU+qMu+iii7Lxxhvnueeey8CBA3PEEUfktddeW+qc8+fPz6xZs+ocAAAAAAAAAAAAQF3KkktRXFycESNGZOTIkamsrMyWW26Zk046KS+88ELtmEGDBqV3797p2LFjtt1225x99tm59dZbP3fO9ddfP4cddli6du2aNddcM2eddVZWX3313HXXXXXG7bDDDhk4cGDWWGON/OpXv8oqq6ySMWPGLHXOoUOHpqKiovaoqqpqmBcAAAAAAAAAAAAABURZ8nPsvvvumTp1au66667069cvY8eOzYYbbpgRI0YkSR5++OFst912WW211VJWVpb9998/06dPz9y5c5c63+zZs3PCCSekS5cuqaysTGlpaSZOnLjEzpLdu3ev/buoqCht2rTJtGnTljrn4MGDM3PmzNrjnXfeaZiHBwAAAAAAAAAAgAKiLPkFmjdvnj59+uTUU0/Nk08+mQEDBuT000/P5MmTs+OOO6Z79+65/fbb8+yzz+aqq65KkixYsGCpc51wwgm58847c8455+Txxx/P888/n27dui0xvlmzZnV+FxUVpbq6eqlzlpSUpLy8vM4BAAAAAAAAAAAA1FXc2AG+T9Zdd92MGjUqzz77bKqrq3PRRRelSZNP+6Zf9AnuJBk3blwGDBiQXXfdNcmnO01Onjx5WUcGAAAAAAAAAACA5Z6y5FJMnz49e+yxRw488MB07949ZWVlGT9+fM4///zsvPPOWWONNbJw4cJcccUV6d+/f8aNG5dhw4Z94Zxrrrlm7rjjjvTv3z9FRUU59dRTP3fHSAAAAAAAAAAAAKDhKEsuRWlpaTbddNNccsklmTRpUhYuXJiqqqoccsghOemkk9KiRYtcfPHFOe+88zJ48OBss802GTp0aH7+859/7pwXX3xxDjzwwGyxxRZZZZVV8qtf/SqzZs36Fp8KAAAAAAAAAAAAlk9FNTU1NY0dgoYxa9asVFRU5KXBXVLWvGljxwEAAAAAvmPan/ZiY0cAAAAAvmWfdYpmzpyZ8vLyxo4DjaZJYwcAAAAAAAAAAAAAWJaUJQEAAAAAAAAAAICCpiwJAAAAAAAAAAAAFDRlSQAAAAAAAAAAAKCgKUsCAAAAAAAAAAAABU1ZEgAAAAAAAAAAAChoypIAAAAAAAAAAABAQVOWBAAAAAAAAAAAAApacWMHoOFVnfhUysvLGzsGAAAAAAAAAAAAfCfYWRIAAAAAAAAAAAAoaMqSAAAAAAAAAAAAQEFTlgQAAAAAAAAAAAAKmrIkAAAAAAAAAAAAUNCUJQEAAAAAAAAAAICCpiwJAAAAAAAAAAAAFDRlSQAAAAAAAAAAAKCgFTd2ABreNqfcnKYlLRo7BgAAAADfE89e8PPGjgAAAAAAsEzZWRIAAAAAAAAAAAAoaMqSAAAAAAAAAAAAQEFTlgQAAAAAAAAAAAAKmrIkAAAAAAAAAAAAUNCUJQEAAAAAAAAAAICCpiwJAAAAAAAAAAAAFDRlSQAAAAAAAAAAAKCgKUsCAAAAAAAAAAAABU1ZEgAAAAAAAAAAAChoypLfQK9evTJo0KDPvT5gwIDssssu31oeAAAAAAAAAAAAYEkFV5YcNmxYysrKsmjRotpzs2fPTrNmzdKrV686Y8eOHZuioqJMmjTpC+f8bNyMGTO+VpbLLrssI0aM+Fr3AAAAAAAAAAAAAA2r4MqSvXv3zuzZszN+/Pjac48//njatGmTp59+Op988knt+TFjxqR9+/ZZffXVl0mWioqKVFZWLpO5AQAAAAAAAAAAgK+m4MqSa6+9dtq2bZuxY8fWnhs7dmx23nnndOrUKU899VSd8717984NN9yQjTfeOGVlZWnTpk322WefTJs2LUkyefLk9O7dO0my4oorpqioKAMGDFjq2vfcc08qKipy4403JlnyM9y9evXKMccck1/+8pdZaaWV0qZNm5xxxhm112tqanLGGWekffv2KSkpSbt27XLMMcc0zIsBAAAAAAAAAACA5VTBlSWTT3eXHDNmTO3vMWPGpFevXunZs2ft+Xnz5uXpp59O7969s3Dhwpx11lmZMGFCRo0alcmTJ9cWIquqqnL77bcnSV577bW89957ueyyy5ZY86abbsree++dG2+8Mfvuu+/nZhs5cmRatWqVp59+Oueff37OPPPMPPTQQ0mS22+/PZdcckl++9vf5o033sioUaPSrVu3z51r/vz5mTVrVp0DAAAAAAAAAAAAqKu4sQMsC717986gQYOyaNGizJs3L88991x69uyZhQsXZtiwYUmSv/71r5k/f3569+6d9u3b197buXPnXH755enRo0dmz56d0tLSrLTSSkmSH/zgB0v9rPZVV12Vk08+OX/5y1/Ss2fPL8zWvXv3nH766UmSNddcM1deeWVGjx6dPn36ZMqUKWnTpk223377NGvWLO3bt88mm2zyuXMNHTo0Q4YM+bqvBwAAAAAAAAAAAJYrBbmzZK9evTJnzpz87W9/y+OPP5611lorrVu3Ts+ePfP000/nk08+ydixY9O5c+e0b98+zz77bPr375/27dunrKystvA4ZcqUL13rT3/6U4499tg89NBDX1qUTD4tS/6ntm3b1n7ye4899si8efPSuXPnHHLIIbnzzjuzaNGiz51r8ODBmTlzZu3xzjvvfOn6AAAAAAAAAAAAsLwpyLLkGmuskR/+8IcZM2ZMxowZU1tibNeuXaqqqvLkk09mzJgx2XbbbTNnzpz07ds35eXlufHGG/O3v/0td955Z5JkwYIFX7rWf/3Xf6V169a59tprU1NT86XjmzVrVud3UVFRqqurk3z6ye/XXnstV199dVq0aJGBAwdmm222ycKFC5c6V0lJScrLy+scAAAAAAAAAAAAQF0FWZZMPv0U99ixYzN27Nj06tWr9vw222yT++67L88880x69+6dV199NdOnT8+5556brbfeOuuss07tTo+fWWGFFZIkixcvXmKd1VdfPWPGjMmf//znHH300d84d4sWLdK/f/9cfvnlGTt2bP7617/mxRdf/MbzAgAAAAAAAAAAwPKquLEDLCu9e/fOkUcemYULF9b5PHbPnj1z1FFHZcGCBendu3eKi4uzwgor5Iorrsjhhx+el156KWeddVaduTp06JCioqLcfffd2WGHHdKiRYuUlpbWXl9rrbUyZsyY9OrVK8XFxbn00kvrlXnEiBFZvHhxNt1007Rs2TJ/+MMf0qJFi3To0KFe8wEAAAAAAAAAAAAFvrPkvHnzssYaa2TVVVetPd+zZ898/PHHWXvttdO2bdu0bt06I0aMyG233ZZ111035557bi688MI6c6222moZMmRITjzxxKy66qo56qijllhv7bXXziOPPJKbb745xx9/fL0yV1ZW5pprrsmWW26Z7t275+GHH85f/vKXrLzyyvWaDwAAAAAAAAAAAEiKampqaho7BA1j1qxZqaioyPpHD0vTkhaNHQcAAACA74lnL/h5Y0cAAAAAYBn5rFM0c+bMlJeXN3YcaDQFu7MkAAAAAAAAAAAAQKIsCQAAAAAAAAAAABQ4ZUkAAAAAAAAAAACgoClLAgAAAAAAAAAAAAVNWRIAAAAAAAAAAAAoaMqSAAAAAAAAAAAAQEFTlgQAAAAAAAAAAAAKmrIkAAAAAAAAAAAAUNCUJQEAAAAAAAAAAICCVtzYAWh4j529d8rLyxs7BgAAAAAAAAAAAHwn2FkSAAAAAAAAAAAAKGjKkgAAAAAAAAAAAEBBU5YEAAAAAAAAAAAACpqyJAAAAAAAAAAAAFDQlCUBAAAAAAAAAACAgqYsCQAAAAAAAAAAABS04sYOQMN759zNUta8aWPHAAAAAL7n2p/2YmNHAAAAAACABmFnSQAAAAAAAAAAAKCgKUsCAAAAAAAAAAAABU1ZEgAAAAAAAAAAAChoypIAAAAAAAAAAABAQVOWBAAAAAAAAAAAAAqasiQAAAAAAAAAAABQ0JQlAQAAAAAAAAAAgIKmLAkAAAAAAAAAAAAUNGVJAAAAAAAAAAAAoKApSwIAAAAAAAAAAAAFTVkSAAAAAAAAAAAAKGjKkg3o/fffzxFHHJH27dunpKQkbdq0Sd++fTNu3LjGjgYAAAAAAAAAAADLreLGDlBIdt999yxYsCAjR45M586d8+9//zujR4/O9OnTGzsaAAAAAAAAAAAALLfsLNlAZsyYkccffzznnXdeevfunQ4dOmSTTTbJ4MGDs9NOOyVJpkyZkp133jmlpaUpLy/PnnvumX//+9+1c5xxxhnZYIMNcsMNN6Rjx46pqKjIz372s3z88ceN9VgAAAAAAAAAAADwvacs2UBKS0tTWlqaUaNGZf78+Utcr66uzs4775wPP/wwjz76aB566KH84x//yF577VVn3KRJkzJq1Kjcfffdufvuu/Poo4/m3HPPXeqa8+fPz6xZs+ocAAAAAAAAAAAAQF3Kkg2kuLg4I0aMyMiRI1NZWZktt9wyJ510Ul544YUkyejRo/Piiy/mpptuykYbbZRNN900119/fR599NH87W9/q52nuro6I0aMSNeuXbP11ltn//33z+jRo5e65tChQ1NRUVF7VFVVfSvPCgAAAAAAAAAAAN8nypINaPfdd8/UqVNz1113pV+/fhk7dmw23HDDjBgxIhMnTkxVVVWdQuO6666bysrKTJw4sfZcx44dU1ZWVvu7bdu2mTZt2lLXGzx4cGbOnFl7vPPOO8vu4QAAAAAAAAAAAOB7SlmygTVv3jx9+vTJqaeemieffDIDBgzI6aef/pXvb9asWZ3fRUVFqa6uXurYkpKSlJeX1zkAAAAAAAAAAACAupQll7F11103c+bMSZcuXfLOO+/U2f3xlVdeyYwZM7Luuus2YkIAAAAAAAAAAAAobMWNHaBQTJ8+PXvssUcOPPDAdO/ePWVlZRk/fnzOP//87Lzzztl+++3TrVu37Lvvvrn00kuzaNGiDBw4MD179szGG2/c2PEBAAAAAAAAAACgYClLNpDS0tJsuummueSSSzJp0qQsXLgwVVVVOeSQQ3LSSSelqKgof/7zn3P00Udnm222SZMmTdKvX79cccUVjR0dAAAAAAAAAAAAClpRTU1NTWOHoGHMmjUrFRUVeWlwl5Q1b9rYcQAAAIDvufanvdjYEQAAAACAb+izTtHMmTNTXl7e2HGg0TRp7AAAAAAAAAAAAAAAy5KyJAAAAAAAAAAAAFDQlCUBAAAAAAAAAACAgqYsCQAAAAAAAAAAABQ0ZUkAAAAAAAAAAACgoClLAgAAAAAAAAAAAAVNWRIAAAAAAAAAAAAoaMqSAAAAAAAAAAAAQEErbuwANLyqE59KeXl5Y8cAAAAAAAAAAACA7wQ7SwIAAAAAAAAAAAAFTVkSAAAAAAAAAAAAKGjKkgAAAAAAAAAAAEBBU5YEAAAAAAAAAAAACpqyJAAAAAAAAAAAAFDQlCUBAAAAAAAAAACAgqYsCQAAAAAAAAAAABS04sYOQMN7ot+P06rYPy0AAAB8n/R87NHGjgAAAAAAAAXLzpIAAAAAAAAAAABAQVOWBAAAAAAAAAAAAAqasiQAAAAAAAAAAABQ0JQlAQAAAAAAAAAAgIKmLAkAAAAAAAAAAAAUNGVJAAAAAAAAAAAAoKApSwIAAAAAAAAAAAAFTVkSAAAAAAAAAAAAKGjKkgAAAAAAAAAAAEBBU5ZsJL169cqgQYMaOwYAAAAAAAAAAAAUPGXJJH/961/TtGnT/OQnP2nsKAAAAAAAAAAAAEADU5ZMMnz48Bx99NF57LHHMnXq1M8dV1NTk0WLFn2LyQAAAAAAAAAAAIBvarkvS86ePTu33HJLjjjiiPzkJz/JiBEjaq+NHTs2RUVFue+++7LRRhulpKQkTzzxRKqrqzN06NB06tQpLVq0yPrrr58//elPdeZ99NFHs8kmm6SkpCRt27bNiSee+IVFyxtuuCEbb7xxysrK0qZNm+yzzz6ZNm3asnpsAAAAAAAAAAAAWG4s92XJW2+9Neuss07WXnvt7Lfffrn22mtTU1NTZ8yJJ56Yc889NxMnTkz37t0zdOjQXH/99Rk2bFhefvnlHHvssdlvv/3y6KOPJkn++c9/ZocddkiPHj0yYcKE/OY3v8nw4cNz9tlnf26OhQsX5qyzzsqECRMyatSoTJ48OQMGDPjC7PPnz8+sWbPqHAAAAAAAAAAAAEBdxY0doLENHz48++23X5KkX79+mTlzZh599NH06tWrdsyZZ56ZPn36JPm0oHjOOefk4Ycfzuabb54k6dy5c5544on89re/Tc+ePXP11VenqqoqV155ZYqKirLOOutk6tSp+dWvfpXTTjstTZos2VE98MADa//u3LlzLr/88vTo0SOzZ89OaWnpUrMPHTo0Q4YMaahXAQAAAAAAAAAAAAVpud5Z8rXXXsszzzyTvffeO0lSXFycvfbaK8OHD68zbuONN679+80338zcuXPTp0+flJaW1h7XX399Jk2alCSZOHFiNt988xQVFdXet+WWW2b27Nl59913l5rl2WefTf/+/dO+ffuUlZWlZ8+eSZIpU6Z8bv7Bgwdn5syZtcc777xTvxcBAAAAAAAAAAAABWy53lly+PDhWbRoUdq1a1d7rqamJiUlJbnyyitrz7Vq1ar279mzZydJ7rnnnqy22mp15ispKalXjjlz5qRv377p27dvbrzxxrRu3TpTpkxJ3759s2DBgs+9r6SkpN5rAgAAAAAAAAAAwPJiuS1LLlq0KNdff30uuuii/OhHP6pzbZdddsnNN9+cddZZZ4n71l133ZSUlGTKlCm1uz/+X126dMntt9+empqa2t0lx40bl7Kysvzwhz9cYvyrr76a6dOn59xzz01VVVWSZPz48d/0EQEAAAAAAAAAAIAsx2XJu+++Ox999FEOOuigVFRU1Lm2++67Z/jw4bnggguWuK+srCwnnHBCjj322FRXV2errbbKzJkzM27cuJSXl+e///u/M3DgwFx66aU5+uijc9RRR+W1117L6aefnuOOOy5Nmiz55fP27dtnhRVWyBVXXJHDDz88L730Us4666xl9uwAAAAAAAAAAACwPFmyubecGD58eLbffvslipLJp2XJ8ePH54UXXljqvWeddVZOPfXUDB06NF26dEm/fv1yzz33pFOnTkmS1VZbLffee2+eeeaZrL/++jn88MNz0EEH5ZRTTlnqfK1bt86IESNy2223Zd111825556bCy+8sOEeFgAAAAAAAAAAAJZjRTU1NTWNHYKGMWvWrFRUVOSezbdIq+LldtNQAAAA+F7q+dijjR0BAAAAAChAn3WKZs6cmfLy8saOA41mud1ZEgAAAAAAAAAAAFg+KEsCAAAAAAAAAAAABU1ZEgAAAAAAAAAAAChoypIAAAAAAAAAAABAQVOWBAAAAAAAAAAAAAqasiQAAAAAAAAAAABQ0JQlAQAAAAAAAAAAgIKmLAkAAAAAAAAAAAAUNGVJAAAAAAAAAAAAoKAVN3YAGt5W99+X8vLyxo4BAAAAAAAAAAAA3wl2lgQAAAAAAAAAAAAKmrIkAAAAAAAAAAAAUNCUJQEAAAAAAAAAAICCpiwJAAAAAAAAAAAAFDRlSQAAAAAAAAAAAKCgKUsCAAAAAAAAAAAABa24sQPQ8PoM65PiFv5pAQAA+OrGHT2usSMAAAAAAAAsM3aWBAAAAAAAAAAAAAqasiQAAAAAAAAAAABQ0JQlAQAAAAAAAAAAgIKmLAkAAAAAAAAAAAAUNGVJAAAAAAAAAAAAoKApSwIAAAAAAAAAAAAFTVkSAAAAAAAAAAAAKGjKkgAAAAAAAAAAAEBBU5YEAAAAAAAAAAAACpqyJAAAAAAAAAAAAFDQlCUbyIgRI1JZWVn7+4wzzsgGG2xQ+3vAgAHZZZddvvVcAAAAAAAAAAAAsLxTlvz/3n///RxxxBFp3759SkpK0qZNm/Tt2zfjxo2r13wnnHBCRo8e3cApAQAAAAAAAAAAgK+ruLEDfFfsvvvuWbBgQUaOHJnOnTvn3//+d0aPHp3p06fXa77S0tKUlpY2cEoAAAAAAAAAAADg67KzZJIZM2bk8ccfz3nnnZfevXunQ4cO2WSTTTJ48ODstNNOSZKLL7443bp1S6tWrVJVVZWBAwdm9uzZnzvn//0M92eGDBmS1q1bp7y8PIcffngWLFhQe+3+++/PVlttlcrKyqy88srZcccdM2nSpAZ/XgAAAAAAAAAAAFieKEvmf3eBHDVqVObPn7/UMU2aNMnll1+el19+OSNHjswjjzySX/7yl19rndGjR2fixIkZO3Zsbr755txxxx0ZMmRI7fU5c+bkuOOOy/jx4zN69Og0adIku+66a6qrq5c63/z58zNr1qw6BwAAAAAAAAAAAFCXsmSS4uLijBgxIiNHjkxlZWW23HLLnHTSSXnhhRdqxwwaNCi9e/dOx44ds+222+bss8/Orbfe+rXWWWGFFXLttddmvfXWy09+8pOceeaZufzyy2vLkLvvvnt22223rLHGGtlggw1y7bXX5sUXX8wrr7yy1PmGDh2aioqK2qOqqqr+LwEAAAAAAAAAAAAKlLLk/7f77rtn6tSpueuuu9KvX7+MHTs2G264YUaMGJEkefjhh7PddttltdVWS1lZWfbff/9Mnz49c+fO/cprrL/++mnZsmXt78033zyzZ8/OO++8kyR54403svfee6dz584pLy9Px44dkyRTpkxZ6nyDBw/OzJkza4/P5gEAAAAAAAAAAAD+l7Lkf2jevHn69OmTU089NU8++WQGDBiQ008/PZMnT86OO+6Y7t275/bbb8+zzz6bq666KkmyYMGCBlu/f//++fDDD3PNNdfk6aefztNPP/2Fa5SUlKS8vLzOAQAAAAAAAAAAANSlLPkF1l133cyZMyfPPvtsqqurc9FFF2WzzTbLWmutlalTp37t+SZMmJB58+bV/n7qqadSWlqaqqqqTJ8+Pa+99lpOOeWUbLfddunSpUs++uijhnwcAAAAAAAAAAAAWC4VN3aA74Lp06dnjz32yIEHHpju3bunrKws48ePz/nnn5+dd945a6yxRhYuXJgrrrgi/fv3z7hx4zJs2LCvvc6CBQty0EEH5ZRTTsnkyZNz+umn56ijjkqTJk2y4oorZuWVV87vfve7tG3bNlOmTMmJJ564DJ4WAAAAAAAAAAAAli/KkklKS0uz6aab5pJLLsmkSZOycOHCVFVV5ZBDDslJJ52UFi1a5OKLL855552XwYMHZ5tttsnQoUPz85///Guts91222XNNdfMNttsk/nz52fvvffOGWeckSRp0qRJ/vjHP+aYY45J165ds/baa+fyyy9Pr169Gv6BAQAAAAAAAAAAYDlSVFNTU9PYIWgYs2bNSkVFRTY5b5MUt9CDBQAA4Ksbd/S4xo4AAAAAAMAy8FmnaObMmSkvL2/sONBomjR2AAAAAAAAAAAAAIBlSVkSAAAAAAAAAAAAKGjKkgAAAAAAAAAAAEBBU5YEAAAAAAAAAAAACpqyJAAAAAAAAAAAAFDQlCUBAAAAAAAAAACAgqYsCQAAAAAAAAAAABQ0ZUkAAAAAAAAAAACgoBU3dgAa3kOHP5Ty8vLGjgEAAAAAAAAAAADfCXaWBAAAAAAAAAAAAAqasiQAAAAAAAAAAABQ0JQlAQAAAAAAAAAAgIKmLAkAAAAAAAAAAAAUNGVJAAAAAAAAAAAAoKApSwIAAAAAAAAAAAAFTVkSAAAAAAAAAAAAKGjFjR2AhrfNKTenaUmLxo4BAADQoJ694OeNHQEAAAAAAIDvKTtLAgAAAAAAAAAAAAVNWRIAAAAAAAAAAAAoaMqSAAAAAAAAAAAAQEGrV1nyzDPPzNy5c5c4P2/evJx55pnfOBQAAAAAAAAAAABAQ6lXWXLIkCGZPXv2Eufnzp2bIUOGfONQAAAAAAAAAAAAAA2lXmXJmpqaFBUVLXF+woQJWWmllb5xKAAAAAAAAAAAAICGUvx1Bq+44oopKipKUVFR1lprrTqFycWLF2f27Nk5/PDDGzwkAAAAAAAAAAAAQH19rbLkpZdempqamhx44IEZMmRIKioqaq+tsMIK6dixYzbffPMGDwkAAAAAAAAAAABQX1+rLPnf//3fSZJOnTpliy22SLNmzZZJKAAAAAAAAAAAAICG8rXKkp/p2bNnqqur8/rrr2fatGmprq6uc32bbbZpkHDflo4dO2bQoEEZNGhQY0cBAAAAAAAAAAAAGli9ypJPPfVU9tlnn7z99tupqampc62oqCiLFy9ukHBfxYABAzJjxoyMGjXqC8ets846eeutt/L222+nTZs23044AAAAAAAAAAAAoNE1qc9Nhx9+eDbeeOO89NJL+fDDD/PRRx/VHh9++GFDZ/zGnnjiicybNy8//elPM3LkyEbJsHDhwkZZFwAAAAAAAAAAAJZ39SpLvvHGGznnnHPSpUuXVFZWpqKios7xXTN8+PDss88+2X///XPttdd+4dh99tkne+21V51zCxcuzCqrrJLrr78+SXL//fdnq622SmVlZVZeeeXsuOOOmTRpUu34yZMnp6ioKLfcckt69uyZ5s2b58Ybb0yS/P73v0+XLl3SvHnzrLPOOrn66qtr7zvjjDNSVFS0xDFixIgGehMAAAAAAAAAAACw/KlXWXLTTTfNm2++2dBZlomPP/44t912W/bbb7/06dMnM2fOzOOPP/654/fdd9/85S9/yezZs2vPPfDAA5k7d2523XXXJMmcOXNy3HHHZfz48Rk9enSaNGmSXXfdNdXV1XXmOvHEE/OLX/wiEydOTN++fXPjjTfmtNNOy69//etMnDgx55xzTk499dTa3S5POOGEvPfee7XHhRdemJYtW2bjjTdeatb58+dn1qxZdQ4AAAAAAAAAAACgruL63HT00Ufn+OOPz7/+9a9069YtzZo1q3O9e/fuDRKuIfzxj3/MmmuumfXWWy9J8rOf/SzDhw/P1ltvvdTxffv2TatWrXLnnXdm//33T5LcdNNN2WmnnVJWVpYk2X333evcc+2116Z169Z55ZVX0rVr19rzgwYNym677Vb7+/TTT89FF11Ue65Tp0555ZVX8tvf/jb//d//ndLS0pSWliZJnnrqqZxyyikZOXJknTn/09ChQzNkyJD6vBYAAAAAAAAAAABYbtSrLPlZWfDAAw+sPVdUVJSampoUFRVl8eLFDZOuAVx77bXZb7/9an/vt99+6dmzZ6644ora8uN/Ki4uzp577pkbb7wx+++/f+bMmZM///nP+eMf/1g75o033shpp52Wp59+Oh988EHtjpJTpkypU2z8zx0h58yZk0mTJuWggw7KIYccUnt+0aJFS3y6fMqUKdlll11ywgknZM899/zcZxs8eHCOO+642t+zZs1KVVXVV3ktAAAAAAAAAAAAsNyoV1nyrbfeaugcy8Qrr7ySp556Ks8880x+9atf1Z5fvHhx/vjHP9YpLf6nfffdNz179sy0adPy0EMPpUWLFunXr1/t9f79+6dDhw655ppr0q5du1RXV6dr165ZsGBBnXlatWpV+/dnn/W+5pprsummm9YZ17Rp09q/58yZk5122imbb755zjzzzC98vpKSkpSUlHzJWwAAAAAAAAAAAIDlW73Kkh06dGjoHMvE8OHDs8022+Sqq66qc/66667L8OHDP7csucUWW6Sqqiq33HJL7rvvvuyxxx61nxqfPn16XnvttVxzzTW1n/J+4oknvjTLqquumnbt2uUf//hH9t1336WOqampyX777Zfq6urccMMNKSoq+jqPCwAAAAAAAAAAACxFvcqSSXLDDTdk2LBheeutt/LXv/41HTp0yKWXXppOnTpl5513bsiMX9mVV16ZO++8M6NHj87ChQtzww035Mwzz6zzaewkOfjgg3PxxRfn5ZdfznrrrbfUufbZZ58MGzYsr7/+esaMGVN7fsUVV8zKK6+c3/3ud2nbtm2mTJmSE0888SvlGzJkSI455phUVFSkX79+mT9/fsaPH5+PPvooxx13XM4444w8/PDDefDBBzN79uza3SgrKirSokWLer4VAAAAAAAAAAAAWL41qc9Nv/nNb3Lcccdlhx12yIwZM7J48eIkSWVlZS699NKGzPelqqurU1z8aefzgw8+yKRJk5Ikd911V6ZPn55dd911iXu6dOmSLl26ZPjw4Z8777777ptXXnklq622Wrbccsva802aNMkf//jHPPvss+natWuOPfbYXHDBBV8p68EHH5zf//73ue6669KtW7f07NkzI0aMSKdOnZIkjz76aGbPnp0tttgibdu2rT1uueWWr/w+AAAAAAAAAAAAgLqKampqar7uTeuuu27OOeec7LLLLikrK8uECRPSuXPnvPTSS+nVq1c++OCDZZF1qfr165c11lgjV1555be25nfVrFmzUlFRkfWPHpamJXaiBAAACsuzF/y8sSMAAAAAAMD3zmedopkzZ6a8vLyx40CjqdfOkm+99Vb+67/+a4nzJSUlmTNnzjcO9VV89NFHufvuuzN27Nhsv/3238qaAAAAAAAAAAAAwPdPcX1u6tSpU55//vl06NChzvn7778/Xbp0aZBgX+bAAw/M3/72txx//PHZeeedv5U1AQAAAAAAAAAAgO+fepUljzvuuBx55JH55JNPUlNTk2eeeSY333xzhg4dmt///vcNnXGp7rzzzm9lHQAAAAAAAAAAAOD7rV5lyYMPPjgtWrTIKaeckrlz52afffZJu3btctlll+VnP/tZQ2cEAAAAAAAAAAAAqLd6lSWTZN99982+++6buXPnZvbs2fnBD37QkLkAAAAAAAAAAAAAGkS9ypJvvfVWFi1alDXXXDMtW7ZMy5YtkyRvvPFGmjVrlo4dOzZkRgAAAAAAAAAAAIB6a1KfmwYMGJAnn3xyifNPP/10BgwY8E0zAQAAAAAAAAAAADSYepUln3vuuWy55ZZLnN9ss83y/PPPf9NMAAAAAAAAAAAAAA2mXmXJoqKifPzxx0ucnzlzZhYvXvyNQwEAAAAAAAAAAAA0lKKampqar3tT//7906JFi9x8881p2rRpkmTx4sXZa6+9MmfOnNx3330NHpQvN2vWrFRUVGTmzJkpLy9v7DgAAAAAAAAAAEAj0ymCTxXX56Zzzz03PXv2zNprr52tt946SfL4449n1qxZeeSRRxo0IAAAAAAAAAAAAMA3Ua/PcK+33np54YUXsueee2batGn5+OOP8/Of/zyvvvpqunbt2tAZAQAAAAAAAAAAAOrta+8suXDhwvTr1y/Dhg3LOeecsywyAQAAAAAAAAAAADSYr72zZLNmzfLCCy8siywAAAAAAAAAAAAADa5en+Heb7/9Mnz48IbOAgAAAAAAAAAAANDgvvZnuJNk0aJFufbaa/Pwww9no402SqtWrepcv/jiixskHAAAAAAAAAAAAMA3Va+y5EsvvZQNN9wwSfL666/XuVZUVPTNU/GN9BnWJ8Ut6vVPCwAAUMe4o8c1dgQAAAAAAAD4xurVqBszZkxD5wAAAAAAAAAAAABYJpp8k5vffPPNPPDAA5k3b16SpKampkFCAQAAAAAAAAAAADSUepUlp0+fnu222y5rrbVWdthhh7z33ntJkoMOOijHH398gwYEAAAAAAAAAAAA+CbqVZY89thj06xZs0yZMiUtW7asPb/XXnvl/vvvb7BwAAAAAAAAAAAAAN9UcX1uevDBB/PAAw/khz/8YZ3za665Zt5+++0GCQYAAAAAAAAAAADQEOq1s+ScOXPq7Cj5mQ8//DAlJSXfOBQAAAAAAAAAAABAQ6lXWXLrrbfO9ddfX/u7qKgo1dXVOf/889O7d+8GCwcAAAAAAAAAAADwTdXrM9znn39+tttuu4wfPz4LFizIL3/5y7z88sv58MMPM27cuIbOCAAAAAAAAAAAAFBv9dpZsmvXrnn99dez1VZbZeedd86cOXOy22675bnnnsvqq6/e0BkBAAAAAAAAAAAA6q1eO0smSUVFRU4++eSGzAIAAAAAAAAAAADQ4Opdlvzoo48yfPjwTJw4MUmy7rrr5oADDshKK63UYOGWJ2PHjk3v3r3z0UcfpbKysrHjAAAAAAAAAAAAQMGo12e4H3vssXTs2DGXX355Pvroo3z00Ue5/PLL06lTpzz22GMNnfE741//+leOPvrodO7cOSUlJamqqkr//v0zevToxo4GAAAAAAAAAAAAfI567Sx55JFHZq+99spvfvObNG3aNEmyePHiDBw4MEceeWRefPHFBg35XTB58uRsueWWqayszAUXXJBu3bpl4cKFeeCBB3LkkUfm1VdfbeyIAAAAAAAAAAAAwFLUa2fJN998M8cff3xtUTJJmjZtmuOOOy5vvvlmg4X7Lhk4cGCKioryzDPPZPfdd89aa62V9dZbL8cdd1yeeuqpJMnFF1+cbt26pVWrVqmqqsrAgQMze/bs2jnefvvt9O/fPyuuuGJatWqV9dZbL/fee2+ddZ599tlsvPHGadmyZbbYYou89tpr3+pzAgAAAAAAAAAAQKGpV1lyww03zMSJE5c4P3HixKy//vrfONR3zYcffpj7778/Rx55ZFq1arXE9crKyiRJkyZNcvnll+fll1/OyJEj88gjj+SXv/xl7bgjjzwy8+fPz2OPPZYXX3wx5513XkpLS+vMdfLJJ+eiiy7K+PHjU1xcnAMPPPBzc82fPz+zZs2qcwAAAAAAAAAAAAB11esz3Mccc0x+8Ytf5M0338xmm22WJHnqqady1VVX5dxzz80LL7xQO7Z79+4Nk7QRvfnmm6mpqck666zzheMGDRpU+3fHjh1z9tln5/DDD8/VV1+dJJkyZUp23333dOvWLUnSuXPnJeb49a9/nZ49eyZJTjzxxPzkJz/JJ598kubNmy8xdujQoRkyZEh9HwsAAAAAAAAAAACWC/UqS+69995JUmfXxP+8VlRUlJqamhQVFWXx4sXfLOF3QE1NzVca9/DDD2fo0KF59dVXM2vWrCxatCiffPJJ5s6dm5YtW+aYY47JEUcckQcffDDbb799dt999yXKpP/5u23btkmSadOmpX379kusN3jw4Bx33HG1v2fNmpWqqqr6PCIAAAAAAAAAAAAUrHqVJd96662GzvGdtuaaa6aoqCivvvrq546ZPHlydtxxxxxxxBH59a9/nZVWWilPPPFEDjrooCxYsCAtW7bMwQcfnL59++aee+7Jgw8+mKFDh+aiiy7K0UcfXTtPs2bNav8uKipKklRXVy91zZKSkpSUlDTQUwIAAAAAAAAAAEBhalKfmzp06PCVjoEDB+a9995r6MzfupVWWil9+/bNVVddlTlz5ixxfcaMGXn22WdTXV2diy66KJtttlnWWmutTJ06dYmxVVVVOfzww3PHHXfk+OOPzzXXXPNtPAIAAAAAAAAAAAAst+pVlvyqHnvsscybN29ZLvGtueqqq7J48eJssskmuf322/PGG29k4sSJufzyy7P55ptnjTXWyMKFC3PFFVfkH//4R2644YYMGzaszhyDBg3KAw88kLfeeit///vfM2bMmHTp0qWRnggAAAAAAAAAAACWD8u0LFlIOnfunL///e/p3bt3jj/++HTt2jV9+vTJ6NGj85vf/Cbrr79+Lr744px33nnp2rVrbrzxxgwdOrTOHIsXL86RRx6ZLl26pF+/fllrrbVy9dVXN9ITAQAAAAAAAAAAwPKhqKampmZZTV5WVpYJEyakc+fOy2oJ/sOsWbNSUVGRTc7bJMUtihs7DgAAUADGHT2usSMAAAAAAADfwGedopkzZ6a8vLyx40CjsbMkAAAAAAAAAAAAUNCUJQEAAAAAAAAAAICCpiwJAAAAAAAAAAAAFLR6lSXnzJnzlcaddNJJWWmlleqzBAAAAAAAAAAAAECDqFdZctVVV82BBx6YJ5544gvHDR48OJWVlfVZAgAAAAAAAAAAAKBB1Kss+Yc//CEffvhhtt1226y11lo599xzM3Xq1IbOBgAAAAAAAAAAAPCN1assucsuu2TUqFH55z//mcMPPzw33XRTOnTokB133DF33HFHFi1a1NA5AQAAAAAAAAAAAOqlXmXJz7Ru3TrHHXdcXnjhhVx88cV5+OGH89Of/jTt2rXLaaedlrlz5zZUTgAAAAAAAAAAAIB6Kaqpqamp783//ve/M3LkyIwYMSJvv/12dt111xx00EF59913c95556Vdu3Z58MEHGzIvX2DWrFmpqKjIzJkzU15e3thxAAAAAAAAAACARqZTBJ8qrs9Nd9xxR6677ro88MADWXfddTNw4MDst99+qaysrB2zxRZbpEuXLg2VEwAAAAAAAAAAAKBe6lWWPOCAA/Kzn/0s48aNS48ePZY6pl27djn55JO/UTgAAAAAAAAAAACAb6pen+GeO3duWrZsuSzy8A3YMhcAAAAAAAAAAPhPOkXwqXrtLNmyZcssXrw4d955ZyZOnJgk6dKlS3bZZZcUF9drSgAAAAAAAAAAAIBlol7Nxpdffjn9+/fPv//976y99tpJkvPOOy+tW7fOX/7yl3Tt2rVBQwIAAAAAAAAAAADUV5P63HTwwQena9eueffdd/P3v/89f//73/POO++ke/fuOfTQQxs6IwAAAAAAAAAAAEC91Wtnyeeffz7jx4/PiiuuWHtuxRVXzK9//ev06NGjwcIBAAAAAAAAAAAAfFP1KkuutdZa+fe//5311luvzvlp06ZljTXWaJBg1N87526WsuZNGzsGAAB8L7Q/7cXGjgAAAAAAAAAsY1/5M9yzZs2qPYYOHZpjjjkmf/rTn/Luu+/m3XffzZ/+9KcMGjQo55133rLMCwAAAAAAAAAAAPC1fOWdJSsrK1NUVFT7u6amJnvuuWftuZqamiRJ//79s3jx4gaOCQAAAAAAAAAAAFA/X7ksOWbMmGWZAwAAAAAAAAAAAGCZ+MplyZ49e37tyQcOHJgzzzwz/4+9Ow+3qi70x//ecOAwHhAlBgVBEUUFRMkJlUENnLLpmqYSaXWdJSWNayoqisN1zJSbJKiZQ0l208SURA0HhMQRyVCEewM1B46AAsL5/eHP/e1cRBEPbtzn9Xqe9bTX9FnvtXme3XrqfT5rk002+dTnAgAAAAAAAAAAANSFButz8F/96leprq5en5cAAAAAAAAAAAAA+FjrtSxZU1OzPocHAAAAAAAAAAAA+ETrtSwJAAAAAAAAAAAAUGrKkgAAAAAAAAAAAEBZU5YEAAAAAAAAAAAAylq9KksOGDAgw4cPL3UMAAAAAAAAAAAA4HO0XsuSRxxxRKqqqtbnJTJs2LAUCoUcc8wxq+07/vjjUygUMmzYsPWaAQAAAAAAAAAAANhwVaztgU8//fRaD9qrV68kybXXXvvpE62DTp065dZbb83ll1+epk2bJknee++9/PrXv07nzp0/lwwAAAAAAAAAAADAhmmtZ5bcYYcd0qdPn+J/ftzyedtxxx3TqVOnTJw4sbht4sSJ6dy582p53n///Zxwwglp1apVNtlkk5x55pmpqakp7l+2bFlGjBiRTTfdNM2bN88uu+ySKVOmFPePGjUqO+ywQ60xr7jiinTp0qW4PmzYsHzta1/LBRdckHbt2qV169Y599xz8/777+fHP/5x2rRpk8022yzjx4+vNc4zzzyTQYMGpWnTptl4443zwx/+MIsXL/7sXxAAAAAAAAAAAADUY2tdlnz55Zfz0ksv5eWXX84dd9yRrl275pprrsmTTz6ZJ598Mtdcc0223HLL3HHHHesz7xodddRRtcqH119/fb73ve+tdtwNN9yQioqKTJs2LVdeeWUuu+yyjBs3rrj/hBNOyKOPPppbb701Tz/9dP7t3/4tQ4YMyYsvvvip8vz5z3/OP/7xjzz00EO57LLLcvbZZ+fAAw/MRhttlMcffzzHHHNM/v3f/z3/8z//kyRZsmRJBg8enI022ihPPPFEfvOb3+T+++/PCSecsMZrLFu2LNXV1bUWAAAAAAAAAAAAoLa1fg335ptvXvz8b//2b7nqqquy//77F7f16tUrnTp1yplnnpmvfe1rdRpybRxxxBEZOXJkXnnllSTJ1KlTc+utt9aaFTL54JXdl19+eQqFQrbeeus888wzufzyy/ODH/wg8+bNy/jx4zNv3rx07NgxSTJixIhMmjQp48ePzwUXXLDWedq0aZOrrroqDRo0yNZbb52LL744S5cuzX/8x38kSUaOHJkLL7wwf/nLX3LooYfm17/+dd57773ceOONad68eZLk6quvzkEHHZSLLroo7dq1W+0aY8aMyTnnnLMuXxcAAAAAAAAAAADUG2tdlvxXzzzzTLp27bra9q5du+b555//zKHWRdu2bXPAAQdkwoQJqampyQEHHJBNNtlkteN23XXXFAqF4vpuu+2WSy+9NCtXrswzzzyTlStXpnv37rXOWbZsWTbeeONPlWe77bZLgwb/b+LOdu3aZfvtty+uN2zYMBtvvHFee+21JMmsWbPSu3fvYlEySfr165dVq1Zl9uzZH1mWHDlyZE455ZTienV1dTp16vSpcgIAAAAAAAAAAEC5W6eyZI8ePTJmzJiMGzcujRs3TpIsX748Y8aMSY8ePeo04Kdx1FFHFV9b/fOf//xTn7948eI0bNgwM2bMSMOGDWvta9GiRZKkQYMGqampqbVvxYoVq43VqFGjWuuFQuEjt61atepT5/xQZWVlKisr1/l8AAAAAAAAAAAAqA/WqSw5duzYHHTQQdlss83Sq1evJMnTTz+dQqGQP/zhD3Ua8NMYMmRIli9fnkKhkMGDB3/kMY8//nit9cceeyxbbbVVGjZsmD59+mTlypV57bXXsueee37k+W3bts3ChQtTU1NTnKFy5syZnzl7jx49MmHChCxZsqQ4u+TUqVOLr/EGAAAAAAAAAAAA1k2DTz5kdTvvvHNeeumljB49Or169UqvXr1y/vnn56WXXsrOO+9c1xnXWsOGDTNr1qw8//zzq80M+aF58+bllFNOyezZs3PLLbfkZz/7WU4++eQkSffu3XP44Ydn6NChmThxYl5++eVMmzYtY8aMyd13350kGTBgQF5//fVcfPHFmTNnTn7+85/nnnvu+czZDz/88DRp0iTf/e538+yzz+aBBx7IiSeemCOPPPIjX8ENAAAAAAAAAAAArJ11mlkySZo3b54f/vCHdZmlTlRVVX3s/qFDh+bdd9/NzjvvnIYNG+bkk0+udR/jx4/P6NGjc+qpp+Z///d/s8kmm2TXXXfNgQcemOSDGSCvueaaXHDBBTnvvPPyzW9+MyNGjMgvfvGLz5S7WbNmuffee3PyySfny1/+cpo1a5ZvfvObueyyyz7TuAAAAAAAAAAAAFDfFWpqamrW5cSbbrop//Vf/5WXXnopjz76aDbffPNcfvnl2WKLLXLwwQfXdU7WQnV1dVq1apVnR/ZIyyYfPbMmAABQW+eznil1BAAAAAAAgPXmw07RokWLPnEiOihn6/Qa7muvvTannHJK9ttvv7z11ltZuXJlkmSjjTbKFVdcUZf5AAAAAAAAAAAAAD6TdSpL/uxnP8t1112XM844IxUV/+9N3n379s0zz5iVBQAAAAAAAAAAANhwrFNZ8uWXX06fPn1W215ZWZklS5Z85lAAAAAAAAAAAAAAdWWdypJdu3bNzJkzV9s+adKk9OjR47NmAgAAAAAAAAAAAKgzFZ98yOpOOeWUHH/88XnvvfdSU1OTadOm5ZZbbsmYMWMybty4us4IAAAAAAAAAAAAsM7WqSz5/e9/P02bNs1Pf/rTLF26NN/5znfSsWPHXHnllTn00EPrOiMAAAAAAAAAAADAOlunsmSSHH744Tn88MOzdOnSLF68OF/60pfqMhcAAAAAAAAAAABAnWiwLicNGjQob7/9dpKkWbNmxaJkdXV1Bg0aVGfhAAAAAAAAAAAAAD6rdSpLTpkyJcuXL19t+3vvvZeHH374M4cCAAAAAAAAAAAAqCuf6jXcTz/9dPHz888/n4ULFxbXV65cmUmTJmXTTTetu3Ssk04/eSxVVVWljgEAAAAAAAAAAAAbhE9Vltxhhx1SKBRSKBQ+8nXbTZs2zc9+9rM6CwcAAAAAAAAAAADwWX2qsuTLL7+cmpqabLHFFpk2bVratm1b3Ne4ceN86UtfSsOGDes8JAAAAAAAAAAAAMC6+lRlyc033zxJsmrVqvUSBgAAAAAAAAAAAKCuNViXk8aMGZPrr79+te3XX399Lrroos8cCgAAAAAAAAAAAKCurFNZ8r/+67+yzTbbrLZ9u+22y9ixYz9zKAAAAAAAAAAAAIC6sk5lyYULF6ZDhw6rbW/btm0WLFjwmUMBAAAAAAAAAAAA1JWKdTmpU6dOmTp1arp27Vpr+9SpU9OxY8c6Cca6m3/hrmnZpGGpYwAA8AXW+axnSh0BAAAAAAAAoM6sU1nyBz/4QYYPH54VK1Zk0KBBSZLJkyfntNNOy6mnnlqnAQEAAAAAAAAAAAA+i3UqS/74xz/OG2+8keOOOy7Lly9PkjRp0iSnn356Ro4cWacBAQAAAAAAAAAAAD6LQk1NTc26nrx48eLMmjUrTZs2zVZbbZXKysq6zManVF1dnVatWuXZkT28hhsAgM/Ea7gBAAAAAADKw4edokWLFqWqqqrUcaBkGnyWkxcuXJg333wzW265ZSorK/MZepcAAAAAAAAAAAAA68U6lSXfeOON7L333unevXv233//LFiwIEly9NFH59RTT63TgAAAAAAAAAAAAACfxTqVJX/0ox+lUaNGmTdvXpo1a1bc/u1vfzuTJk2qs3AAAAAAAAAAAAAAn1XFupz0pz/9Kffee28222yzWtu32mqrvPLKK3USDAAAAAAAAAAAAKAurNPMkkuWLKk1o+SH3nzzzVRWVn7mUAAAAAAAAAAAAAB1ZZ3KknvuuWduvPHG4nqhUMiqVaty8cUXZ+DAgXUWDgAAAAAAAAAAAOCzWqfXcF988cXZe++9M3369CxfvjynnXZannvuubz55puZOnVqXWcEAAAAAAAAAAAAWGfrNLPk9ttvn7/97W/ZY489cvDBB2fJkiX5xje+kSeffDJbbrllXWf83AwYMCDDhw8vdQwAAAAAAAAAAACgDq1TWTJJWrVqlTPOOCO33357/vjHP2b06NHp0KFDXWarE8OGDUuhUMgxxxyz2r7jjz8+hUIhw4YNS5JMnDgx5513XnF/ly5dcsUVV3xOSQEAAAAAAAAAAID1Ya1fw/3000+v9aC9evVapzDrS6dOnXLrrbfm8ssvT9OmTZMk7733Xn7961+nc+fOxePatGlTqogAAAAAAAAAAADAerLWM0vusMMO6dOnT3bYYYePXfr06bM+866THXfcMZ06dcrEiROL2yZOnJjOnTvXyvuvr+EeMGBAXnnllfzoRz9KoVBIoVAoHnfHHXdku+22S2VlZbp06ZJLL7201vW6dOmS0aNHZ+jQoWnRokU233zz/Pd//3def/31HHzwwWnRokV69eqV6dOnF8954403cthhh2XTTTdNs2bN0rNnz9xyyy3r6RsBAAAAAAAAAACA+mOty5Ivv/xyXnrppbz88ssfu7z00kvrM+86O+qoozJ+/Pji+vXXX5/vfe97azx+4sSJ2WyzzXLuuedmwYIFWbBgQZJkxowZOeSQQ3LooYfmmWeeyahRo3LmmWdmwoQJtc6//PLL069fvzz55JM54IADcuSRR2bo0KE54ogj8te//jVbbrllhg4dmpqamiQfzHS500475e67786zzz6bH/7whznyyCMzbdq0NWZctmxZqquray0AAAAAAAAAAABAbWv9Gu7NN998feZY74444oiMHDkyr7zySpJk6tSpufXWWzNlypSPPL5NmzZp2LBhWrZsmfbt2xe3X3bZZdl7771z5plnJkm6d++e559/PpdcckmGDRtWPG7//ffPv//7vydJzjrrrFx77bX58pe/nH/7t39Lkpx++unZbbfd8uqrr6Z9+/bZdNNNM2LEiOL5J554Yu69997cfvvt2XnnnT8y45gxY3LOOees83cCAAAAAAAAAAAA9cFazyz5f910003p169fOnbsWCwgXnHFFfn9739fZ+HqUtu2bXPAAQdkwoQJGT9+fA444IBssskmn3qcWbNmpV+/frW29evXLy+++GJWrlxZ3NarV6/i53bt2iVJevbsudq21157LUmycuXKnHfeeenZs2fatGmTFi1a5N577828efPWmGXkyJFZtGhRcZk/f/6nvh8AAAAAAAAAAAAod+tUlrz22mtzyimnZP/998/bb79dLAm2bt06V1xxRV3mq1NHHXVUJkyYkBtuuCFHHXXUer1Wo0aNip8LhcIat61atSpJcskll+TKK6/M6aefngceeCAzZ87M4MGDs3z58jVeo7KyMlVVVbUWAAAAAAAAAAAAoLZ1Kkv+7Gc/y3XXXZczzjgjDRs2LG7v27dvnnnmmToLV9eGDBmS5cuXZ8WKFRk8ePAnHt+4ceNas0UmSY8ePTJ16tRa26ZOnZru3bvX+i4+ralTp+bggw/OEUcckd69e2eLLbbI3/72t3UeDwAAAAAAAAAAAPjAOpUlX3755fTp02e17ZWVlVmyZMlnDrW+NGzYMLNmzcrzzz+/VsXGLl265KGHHsr//u//5p///GeS5NRTT83kyZNz3nnn5W9/+1tuuOGGXH311RkxYsRnyrbVVlvlvvvuyyOPPJJZs2bl3//93/Pqq69+pjEBAAAAAAAAAACAdSxLdu3aNTNnzlxt+6RJk9KjR4/Pmmm9+jSvqz733HMzd+7cbLnllmnbtm2SZMcdd8ztt9+eW2+9Ndtvv33OOuusnHvuuRk2bNhnyvXTn/40O+64YwYPHpwBAwakffv2+drXvvaZxgQAAAAAAAAAAACSQk1NTc2nPWncuHEZNWpULr300hx99NEZN25c5syZkzFjxmTcuHE59NBD10dWPkF1dXVatWqVZ0f2SMsm6/5KcAAA6HzWM6WOAAAAAAAAQB34sFO0aNGitZ5kDspRxbqc9P3vfz9NmzbNT3/60yxdujTf+c53summm+bKK69UlAQAAAAAAAAAAAA2KOtUlnz33Xfz9a9/PYcffniWLl2aZ599NlOnTs1mm21W1/kAAAAAAAAAAAAAPpMG63LSwQcfnBtvvDFJsnz58nz1q1/NZZddlq997Wu59tpr6zQgAAAAAAAAAAAAwGexTmXJv/71r9lzzz2TJL/97W/Trl27vPLKK7nxxhtz1VVX1WlAAAAAAAAAAAAAgM9incqSS5cuTcuWLZMkf/rTn/KNb3wjDRo0yK677ppXXnmlTgMCAAAAAAAAAAAAfBbrVJbs1q1b7rzzzsyfPz/33ntvvvKVryRJXnvttVRVVdVpQAAAAAAAAAAAAIDPYp3KkmeddVZGjBiRLl26ZJdddsluu+2W5INZJvv06VOnAQEAAAAAAAAAAAA+i4p1Oelb3/pW9thjjyxYsCC9e/cubt97773z9a9/vc7CAQAAAAAAAAAAAHxWhZqamppSh6BuVFdXp1WrVlm0aJHXoQMAAAAAAAAAADpF8P9bp9dwAwAAAAAAAAAAAHxRKEsCAAAAAAAAAAAAZU1ZEgAAAAAAAAAAAChrypIAAAAAAAAAAABAWVOWBAAAAAAAAAAAAMqasiQAAAAAAAAAAABQ1pQlAQAAAAAAAAAAgLJWUeoA1L35F+6alk0aljoGAABfMJ3PeqbUEQAAAAAAAADWCzNLAgAAAAAAAAAAAGVNWRIAAAAAAAAAAAAoa8qSAAAAAAAAAAAAQFlTlgQAAAAAAAAAAADKmrIkAAAAAAAAAAAAUNaUJQEAAAAAAAAAAICypiwJAAAAAAAAAAAAlDVlSQAAAAAAAAAAAKCsKUsCAAAAAAAAAAAAZU1ZEgAAAAAAAAAAAChr9bIsOWzYsBQKheKy8cYbZ8iQIXn66adLHQ0AAAAAAAAAAACoY/WyLJkkQ4YMyYIFC7JgwYJMnjw5FRUVOfDAA0sdCwAAAAAAAAAAAKhj9bYsWVlZmfbt26d9+/bZYYcd8pOf/CTz58/P66+/niR55plnMmjQoDRt2jQbb7xxfvjDH2bx4sVJkmeffTYNGjQoHvvmm2+mQYMGOfTQQ4vjjx49OnvssUdx/dlnn81+++2XFi1apF27djnyyCPzz3/+s7h/wIABOemkk3LaaaelTZs2ad++fUaNGvU5fBMAAAAAAAAAAABQ3uptWfJfLV68OL/61a/SrVu3bLzxxlmyZEkGDx6cjTbaKE888UR+85vf5P77788JJ5yQJNluu+2y8cYb58EHH0ySPPzww7XWk+TBBx/MgAEDkiRvv/12Bg0alD59+mT69OmZNGlSXn311RxyyCG1ctxwww1p3rx5Hn/88Vx88cU599xzc999960x97Jly1JdXV1rAQAAAAAAAAAAAGqrt2XJu+66Ky1atEiLFi3SsmXL/Pd//3duu+22NGjQIL/+9a/z3nvv5cYbb8z222+fQYMG5eqrr85NN92UV199NYVCIXvttVemTJmSJJkyZUq+973vZdmyZXnhhReyYsWKPPLII+nfv3+S5Oqrr06fPn1ywQUXZJtttkmfPn1y/fXX54EHHsjf/va3YqZevXrl7LPPzlZbbZWhQ4emb9++mTx58hrvYcyYMWnVqlVx6dSp03r9zgAAAAAAAAAAAOCLqN6WJQcOHJiZM2dm5syZmTZtWgYPHpz99tsvr7zySmbNmpXevXunefPmxeP79euXVatWZfbs2UmS/v37F8uSDz74YAYNGlQsUD7xxBNZsWJF+vXrlyR56qmn8sADDxTLmS1atMg222yTJJkzZ07xGr169aqVsUOHDnnttdfWeA8jR47MokWLisv8+fPr5LsBAAAAAAAAAACAclJR6gCl0rx583Tr1q24Pm7cuLRq1SrXXXfdWp0/YMCADB8+PC+++GKef/757LHHHnnhhRcyZcqUvPXWW+nbt2+aNWuW5IPXfB900EG56KKLVhunQ4cOxc+NGjWqta9QKGTVqlVrzFBZWZnKysq1ygsAAAAAAAAAAAD1Vb0tS/5fhUIhDRo0yLvvvpsePXpkwoQJWbJkSXF2yalTp6ZBgwbZeuutkyQ9e/bMRhttlNGjR2eHHXZIixYtMmDAgFx00UV56623MmDAgOLYO+64Y+6444506dIlFRW+cgAAAAAAAAAAAPg81dvXcC9btiwLFy7MwoULM2vWrJx44onFGSAPP/zwNGnSJN/97nfz7LPP5oEHHsiJJ56YI488Mu3atUvyQblyr732ys0331wsRvbq1SvLli3L5MmT079//+K1jj/++Lz55ps57LDD8sQTT2TOnDm59957873vfS8rV64sxe0DAAAAAAAAAABAvVFvy5KTJk1Khw4d0qFDh+yyyy554okn8pvf/CYDBgxIs2bNcu+99+bNN9/Ml7/85XzrW9/K3nvvnauvvrrWGP3798/KlSuLZckGDRpkr732SqFQSL9+/YrHdezYMVOnTs3KlSvzla98JT179szw4cPTunXrNGhQb/8JAAAAAAAAAAAA4HNRqKmpqSl1COpGdXV1WrVqlWdH9kjLJg1LHQcAgC+Yzmc9U+oIAAAAAAAA1LEPO0WLFi1KVVVVqeNAyZjWEAAAAAAAAAAAAChrypIAAAAAAAAAAABAWVOWBAAAAAAAAAAAAMqasiQAAAAAAAAAAABQ1pQlAQAAAAAAAAAAgLKmLAkAAAAAAAAAAACUNWVJAAAAAAAAAAAAoKwpSwIAAAAAAAAAAABlTVkSAAAAAAAAAAAAKGsVpQ5A3ev0k8dSVVVV6hgAAAAAAAAAAACwQTCzJAAAAAAAAAAAAFDWlCUBAAAAAAAAAACAsqYsCQAAAAAAAAAAAJQ1ZUkAAAAAAAAAAACgrClLAgAAAAAAAAAAAGVNWRIAAAAAAAAAAAAoaxWlDkDd23fsvqlo6p8WAIBPNvXEqaWOAAAAAAAAALDemVkSAAAAAAAAAAAAKGvKkgAAAAAAAAAAAEBZU5YEAAAAAAAAAAAAypqyJAAAAAAAAAAAAFDWlCUBAAAAAAAAAACAsqYsCQAAAAAAAAAAAJQ1ZUkAAAAAAAAAAACgrClLAgAAAAAAAAAAAGVNWRIAAAAAAAAAAAAoa8qSAAAAAAAAAAAAQFmr92XJUaNGZYcddih1DAAAAAAAAAAAAGA9+cKVJR999NE0bNgwBxxwQKmjAAAAAAAAAAAAAF8AX7iy5C9/+cuceOKJeeihh/KPf/yj1HGSJCtWrCh1BAAAAAAAAAAAAGANvlBlycWLF+e2227LsccemwMOOCATJkwo7psyZUoKhUImT56cvn37plmzZtl9990ze/bsWmNceOGFadeuXVq2bJmjjz4677333mrXGTduXHr06JEmTZpkm222yTXXXFPcN3fu3BQKhdx2223p379/mjRpkptvvjmvvPJKDjrooGy00UZp3rx5tttuu/zxj38snvfss89mv/32S4sWLdKuXbsceeSR+ec//1ncP2DAgJx00kk57bTT0qZNm7Rv3z6jRo2quy8PAAAAAAAAAAAA6qkvVFny9ttvzzbbbJOtt946RxxxRK6//vrU1NTUOuaMM87IpZdemunTp6eioiJHHXVUrfNHjRqVCy64INOnT0+HDh1qFSGT5Oabb85ZZ52V888/P7NmzcoFF1yQM888MzfccEOt437yk5/k5JNPzqxZszJ48OAcf/zxWbZsWR566KE888wzueiii9KiRYskydtvv51BgwalT58+mT59eiZNmpRXX301hxxySK0xb7jhhjRv3jyPP/54Lr744px77rm577771vh9LFu2LNXV1bUWAAAAAAAAAAAAoLZCzf9tG27A+vXrl0MOOSQnn3xy3n///XTo0CG/+c1vMmDAgEyZMiUDBw7M/fffn7333jtJ8sc//jEHHHBA3n333TRp0iS77757+vTpk5///OfFMXfddde89957mTlzZpKkW7duOe+883LYYYcVjxk9enT++Mc/5pFHHsncuXPTtWvXXHHFFTn55JOLx/Tq1Svf/OY3c/bZZ6+We/To0Xn44Ydz7733Frf9z//8Tzp16pTZs2ene/fuGTBgQFauXJmHH364eMzOO++cQYMG5cILL/zI72PUqFE555xzVtu+80U7p6JpxVp+qwAA1GdTT5xa6ggAAAAAAACsR9XV1WnVqlUWLVqUqqqqUseBkvnCzCw5e/bsTJs2rVhirKioyLe//e388pe/rHVcr169ip87dOiQJHnttdeSJLNmzcouu+xS6/jddtut+HnJkiWZM2dOjj766LRo0aK4jB49OnPmzKl1Xt++fWutn3TSSRk9enT69euXs88+O08//XRx31NPPZUHHnig1pjbbLNNktQa91+zf5j/w+wfZeTIkVm0aFFxmT9//hqPBQAAAAAAAAAAgPrqCzP94C9/+cu8//776dixY3FbTU1NKisrc/XVVxe3NWrUqPi5UCgkSVatWrVW11i8eHGS5LrrrlutVNmwYcNa682bN6+1/v3vfz+DBw/O3XffnT/96U8ZM2ZMLr300px44olZvHhxDjrooFx00UWrXfPDQuf/zf5h/o/LXllZmcrKyrW6NwAAAAAAAAAAAKivvhAzS77//vu58cYbc+mll2bmzJnF5amnnkrHjh1zyy23rNU4PXr0yOOPP15r22OPPVb83K5du3Ts2DEvvfRSunXrVmvp2rXrJ47fqVOnHHPMMZk4cWJOPfXUXHfddUmSHXfcMc8991y6dOmy2rj/t3QJAAAAAAAAAAAA1K0vxMySd911V956660cffTRadWqVa193/zmN/PLX/4yl1xyySeOc/LJJ2fYsGHp27dv+vXrl5tvvjnPPfdctthii+Ix55xzTk466aS0atUqQ4YMybJlyzJ9+vS89dZbOeWUU9Y49vDhw7Pffvule/fueeutt/LAAw+kR48eSZLjjz8+1113XQ477LCcdtppadOmTf7+97/n1ltvzbhx41abtRIAAAAAAAAAAACoO1+ImSV/+ctfZp999lmtKJl8UJacPn16nn766U8c59vf/nbOPPPMnHbaadlpp53yyiuv5Nhjj611zPe///2MGzcu48ePT8+ePdO/f/9MmDDhE2eWXLlyZY4//vj06NEjQ4YMSffu3XPNNdckSTp27JipU6dm5cqV+cpXvpKePXtm+PDhad26dRo0+EL8EwAAAAAAAAAAAMAXVqGmpqam1CGoG9XV1WnVqlV2vmjnVDT9QkwaCgBAiU09cWqpIwAAAAAAALAefdgpWrRoUaqqqkodB0rGtIYAAAAAAAAAAABAWVOWBAAAAAAAAAAAAMqasiQAAAAAAAAAAABQ1pQlAQAAAAAAAAAAgLKmLAkAAAAAAAAAAACUNWVJAAAAAAAAAAAAoKwpSwIAAAAAAAAAAABlTVkSAAAAAAAAAAAAKGsVpQ5A3bvvmPtSVVVV6hgAAAAAAAAAAACwQTCzJAAAAAAAAAAAAFDWlCUBAAAAAAAAAACAsqYsCQAAAAAAAAAAAJQ1ZUkAAAAAAAAAAACgrClLAgAAAAAAAAAAAGVNWRIAAAAAAAAAAAAoa8qSAAAAAAAAAAAAQFmrKHUA6t5eP70lDSubljoGAGxwZlwytNQRAAAAAAAAAIASMLMkAAAAAAAAAAAAUNaUJQEAAAAAAAAAAICypiwJAAAAAAAAAAAAlDVlSQAAAAAAAAAAAKCsKUsCAAAAAAAAAAAAZU1ZEgAAAAAAAAAAAChrypIAAAAAAAAAAABAWVOWBAAAAAAAAAAAAMqasiQAAAAAAAAAAABQ1pQlS2TKlCkpFAp5++23Sx0FAAAAAAAAAAAAylq9KksOGzYshUIhhUIhjRo1Srt27bLvvvvm+uuvz6pVqz7XLLvvvnsWLFiQVq1afa7XBQAAAAAAAAAAgPqmXpUlk2TIkCFZsGBB5s6dm3vuuScDBw7MySefnAMPPDDvv//+Oo25cuXKT122bNy4cdq3b59CobBO1wQAAAAAAAAAAADWTr0rS1ZWVqZ9+/bZdNNNs+OOO+Y//uM/8vvf/z733HNPJkyYkCS57LLL0rNnzzRv3jydOnXKcccdl8WLFxfHmDBhQlq3bp3//u//zrbbbpvKyso8//zzadCgQV5//fUkyZtvvpkGDRrk0EMPLZ43evTo7LHHHklWfw33h2Pee++96dGjR1q0aFEsdgIAAAAAAAAAAADrrt6VJT/KoEGD0rt370ycODFJ0qBBg1x11VV57rnncsMNN+TPf/5zTjvttFrnLF26NBdddFHGjRuX5557Ll27ds3GG2+cBx98MEny8MMP11pPkgcffDADBgxYY46lS5fmP//zP3PTTTfloYceyrx58zJixIg1Hr9s2bJUV1fXWgAAAAAAAAAAAIDalCX/f9tss03mzp2bJBk+fHgGDhyYLl26ZNCgQRk9enRuv/32WsevWLEi11xzTXbfffdsvfXWad68efbaa69MmTIlyQczR37ve9/LsmXL8sILL2TFihV55JFH0r9//zVmWLFiRcaOHZu+fftmxx13zAknnJDJkyev8fgxY8akVatWxaVTp06f+XsAAAAAAAAAAACAcqMs+f+rqalJoVBIktx///3Ze++9s+mmm6Zly5Y58sgj88Ybb2Tp0qXF4xs3bpxevXrVGqN///7FsuSDDz6YQYMGFQuUTzzxRFasWJF+/fqtMUOzZs2y5ZZbFtc7dOiQ1157bY3Hjxw5MosWLSou8+fPX5dbBwAAAAAAAAAAgLKmLPn/mzVrVrp27Zq5c+fmwAMPTK9evXLHHXdkxowZ+fnPf54kWb58efH4pk2bFsuVHxowYECef/75vPjii3n++eezxx57ZMCAAZkyZUoefPDB9O3bN82aNVtjhkaNGtVaLxQKqampWePxlZWVqaqqqrUAAAAAAAAAAAAAtSlLJvnzn/+cZ555Jt/85jczY8aMrFq1Kpdeeml23XXXdO/ePf/4xz/WapyePXtmo402yujRo7PDDjukRYsWGTBgQB588MFMmTIlAwYMWL83AgAAAAAAAAAAAKym3pUlly1bloULF+Z///d/89e//jUXXHBBDj744Bx44IEZOnRounXrlhUrVuRnP/tZXnrppdx0000ZO3bsWo1dKBSy11575eabby4WI3v16pVly5Zl8uTJ6d+//3q8MwAAAAAAAAAAAOCj1Luy5KRJk9KhQ4d06dIlQ4YMyQMPPJCrrroqv//979OwYcP07t07l112WS666KJsv/32ufnmmzNmzJi1Hr9///5ZuXJlsSzZoEGD7LXXXikUCunXr996uisAAAAAAAAAAABgTQo1NTU1pQ5B3aiurk6rVq3S+8SxaVjZtNRxAGCDM+OSoaWOAAAAAAAAAPC5+rBTtGjRolRVVZU6DpRMvZtZEgAAAAAAAAAAAKhflCUBAAAAAAAAAACAsqYsCQAAAAAAAAAAAJQ1ZUkAAAAAAAAAAACgrClLAgAAAAAAAAAAAGVNWRIAAAAAAAAAAAAoa8qSAAAAAAAAAAAAQFlTlgQAAAAAAAAAAADKmrIkAAAAAAAAAAAAUNYqSh2AuvfQ6MNSVVVV6hgAAAAAAAAAAACwQTCzJAAAAAAAAAAAAFDWlCUBAAAAAAAAAACAsqYsCQAAAAAAAAAAAJQ1ZUkAAAAAAAAAAACgrClLAgAAAAAAAAAAAGVNWRIAAAAAAAAAAAAoaxWlDkDd23fsvqlo6p8WgPpt6olTSx0BAAAAAAAAANhAmFkSAAAAAAAAAAAAKGvKkgAAAAAAAAAAAEBZU5YEAAAAAAAAAAAAypqyJAAAAAAAAAAAAFDWlCUBAAAAAAAAAACAsqYsCQAAAAAAAAAAAJQ1ZUkAAAAAAAAAAACgrClLAgAAAAAAAAAAAGVNWRIAAAAAAAAAAAAoa8qSAAAAAAAAAAAAQFlTllwHAwYMyPDhw2ttGzduXFq3bp3LLrssv/rVr3L22WeXJhwAAAAAAAAAAABQywZdlhw2bFgKhcJqy5AhQz7x3C5duuSKK65YL7kmTpyY8847r9a2O+64I7///e/z+OOPZ/To0TnssMPWy7UBAAAAAAAAAACAT6ei1AE+yZAhQzJ+/Pha2yorK0uU5gNt2rRZbds999yTJOnfv//nHQcAAAAAAAAAAAD4GBv0zJLJB8XI9u3b11o22mij1NTUZNSoUencuXMqKyvTsWPHnHTSSUk+eE32K6+8kh/96EfF2SiTZNSoUdlhhx1qjX/FFVekS5cuxfVhw4bla1/7Ws4555y0bds2VVVVOeaYY7J8+fLiMf/3NdxdunTJBRdckKOOOiotW7ZM586d84tf/KLWdU4//fR07949zZo1yxZbbJEzzzwzK1asKO7/MNtNN92ULl26pFWrVjn00EPzzjvv1NE3CQAAAAAAAAAAAPXTBl+WXJM77rgjl19+ef7rv/4rL774Yu6888707NkzyQevyd5ss81y7rnnZsGCBVmwYMGnGnvy5MmZNWtWpkyZkltuuSUTJ07MOeec87HnXHrppenbt2+efPLJHHfccTn22GMze/bs4v6WLVtmwoQJef7553PllVfmuuuuy+WXX15rjDlz5uTOO+/MXXfdlbvuuisPPvhgLrzwwjVec9myZamurq61AAAAAAAAAAAAALVt8GXJu+66Ky1atKi1XHDBBZk3b17at2+fffbZJ507d87OO++cH/zgB0k+eE12w4YN07Jly+JslJ9G48aNc/3112e77bbLAQcckHPPPTdXXXVVVq1atcZz9t9//xx33HHp1q1bTj/99GyyySZ54IEHivt/+tOfZvfdd0+XLl1y0EEHZcSIEbn99ttrjbFq1apMmDAh22+/ffbcc88ceeSRmTx58hqvOWbMmLRq1aq4dOrU6VPdJwAAAAAAAAAAANQHFaUO8EkGDhyYa6+9tta2Nm3aZMmSJbniiiuyxRZbZMiQIdl///1z0EEHpaLis99S796906xZs+L6brvtlsWLF2f+/PnZfPPNP/KcXr16FT8XCoW0b98+r732WnHbbbfdlquuuipz5szJ4sWL8/7776eqqqrWGF26dEnLli2L6x06dKg1xv81cuTInHLKKcX16upqhUkAAAAAAAAAAAD4Pzb4mSWbN2+ebt261VratGmTTp06Zfbs2bnmmmvStGnTHHfccdlrr72yYsWKNY7VoEGD1NTU1Nr2ccd/Go0aNaq1XigUijNRPvroozn88MOz//7756677sqTTz6ZM844I8uXL1/rMT5KZWVlqqqqai0AAAAAAAAAAABAbRv8zJIfp2nTpjnooINy0EEH5fjjj88222yTZ555JjvuuGMaN26clStX1jq+bdu2WbhwYWpqalIoFJIkM2fOXG3cp556Ku+++26aNm2aJHnsscfSokWLdZ618ZFHHsnmm2+eM844o7jtlVdeWaexAAAAAAAAAAAAgE9ngy9LLlu2LAsXLqy1raKiInfddVdWrlyZXXbZJc2aNcuvfvWrNG3atPia7C5duuShhx7KoYcemsrKymyyySYZMGBAXn/99Vx88cX51re+lUmTJuWee+5ZbUbG5cuX5+ijj85Pf/rTzJ07N2effXZOOOGENGiwbhNxbrXVVpk3b15uvfXWfPnLX87dd9+d3/3ud+v2hQAAAAAAAAAAAACfygb/Gu5JkyalQ4cOtZY99tgjrVu3znXXXZd+/fqlV69euf/++/OHP/whG2+8cZLk3HPPzdy5c7Plllumbdu2SZIePXrkmmuuyc9//vP07t0706ZNy4gRI1a75t57752tttoqe+21V7797W/nq1/9akaNGrXO9/DVr341P/rRj3LCCSdkhx12yCOPPJIzzzxznccDAAAAAAAAAAAA1l6hpqamptQhNiTDhg3L22+/nTvvvLPUUT616urqtGrVKjtftHMqmm7wk4YCwHo19cSppY4AAAAAAAAAUHIfdooWLVq02ht4oT7Z4GeWBAAAAAAAAAAAAPgslCUBAAAAAAAAAACAsuZdzf/HhAkTSh0BAAAAAAAAAAAAqENmlgQAAAAAAAAAAADKmrIkAAAAAAAAAAAAUNaUJQEAAAAAAAAAAICypiwJAAAAAAAAAAAAlDVlSQAAAAAAAAAAAKCsVZQ6AHXvvmPuS1VVValjAAAAAAAAAAAAwAbBzJIAAAAAAAAAAABAWVOWBAAAAAAAAAAAAMqasiQAAAAAAAAAAABQ1pQlAQAAAAAAAAAAgLKmLAkAAAAAAAAAAACUNWVJAAAAAAAAAAAAoKwpSwIAAAAAAAAAAABlraLUAah7+47dNxVN/dMCUD6mnji11BEAAAAAAAAAgC8wM0sCAAAAAAAAAAAAZU1ZEgAAAAAAAAAAAChrypIAAAAAAAAAAABAWVOWBAAAAAAAAAAAAMqasiQAAAAAAAAAAABQ1pQlAQAAAAAAAAAAgLKmLAkAAAAAAAAAAACUNWVJAAAAAAAAAAAAoKwpSwIAAAAAAAAAAABlTVmyDkyZMiWFQiFvv/12kmTChAlp3bp1STMBAAAAAAAAAAAAH6h3ZcmxY8emZcuWef/994vbFi9enEaNGmXAgAG1jv2wBDlnzpzPOSUAAAAAAAAAAABQV+pdWXLgwIFZvHhxpk+fXtz28MMPp3379nn88cfz3nvvFbc/8MAD6dy5c7bccstSRC2qqampVe4EAAAAAAAAAAAA1l69K0tuvfXW6dChQ6ZMmVLcNmXKlBx88MHp2rVrHnvssVrbBw4cmJtuuil9+/ZNy5Yt0759+3znO9/Ja6+9ttbXfP3119O3b998/etfz7Jly7Jq1aqMGTMmXbt2TdOmTdO7d+/89re/rXXdQqGQe+65JzvttFMqKyvzl7/8pU7uHwAAAAAAAAAAAOqbeleWTD6YXfKBBx4orj/wwAMZMGBA+vfvX9z+7rvv5vHHH8/AgQOzYsWKnHfeeXnqqady5513Zu7cuRk2bNhaXWv+/PnZc889s/322+e3v/1tKisrM2bMmNx4440ZO3ZsnnvuufzoRz/KEUcckQcffLDWuT/5yU9y4YUXZtasWenVq9dqYy9btizV1dW1FgAAAAAAAAAAAKC2ilIHKIWBAwdm+PDhef/99/Puu+/mySefTP/+/bNixYqMHTs2SfLoo49m2bJlGThwYDp37lw8d4sttshVV12VL3/5y1m8eHFatGixxuvMnj07++67b77+9a/niiuuSKFQyLJly3LBBRfk/vvvz2677VYc8y9/+Uv+67/+K/379y+ef+6552bfffdd4/hjxozJOeec81m/DgAAAAAAAAAAAChr9XJmyQEDBmTJkiV54okn8vDDD6d79+5p27Zt+vfvn8cffzzvvfdepkyZki222CKdO3fOjBkzctBBB6Vz585p2bJlsdA4b968NV7j3XffzZ577plvfOMbufLKK1MoFJIkf//737N06dLsu+++adGiRXG58cYbM2fOnFpj9O3b92PvY+TIkVm0aFFxmT9//mf8ZgAAAAAAAAAAAKD81MuZJbt165bNNtssDzzwQN56661i+bFjx47p1KlTHnnkkTzwwAMZNGhQlixZksGDB2fw4MG5+eab07Zt28ybNy+DBw/O8uXL13iNysrK7LPPPrnrrrvy4x//OJtuummSZPHixUmSu+++u7jtX8/5V82bN//Y+6isrFztHAAAAAAAAAAAAKC2elmWTD54FfeUKVPy1ltv5cc//nFx+1577ZV77rkn06ZNy7HHHpsXXnghb7zxRi688MJ06tQpSTJ9+vRPHL9Bgwa56aab8p3vfKd4rY4dO2bbbbdNZWVl5s2bV+uV2wAAAAAAAAAAAMD6Ua/Lkscff3xWrFhRq7TYv3//nHDCCVm+fHkGDhyYioqKNG7cOD/72c9yzDHH5Nlnn8155523Vtdo2LBhbr755hx22GEZNGhQpkyZkvbt22fEiBH50Y9+lFWrVmWPPfbIokWLMnXq1FRVVeW73/3u+rplAAAAAAAAAAAAqJcalDpAqQwcODDvvvtuunXrlnbt2hW39+/fP++880623nrrdOjQIW3bts2ECRPym9/8Jttuu20uvPDC/Od//udaX6eioiK33HJLtttuuwwaNCivvfZazjvvvJx55pkZM2ZMevTokSFDhuTuu+9O165d18etAgAAAAAAAAAAQL1WqKmpqSl1COpGdXV1WrVqlZ0v2jkVTevtpKEAlKGpJ04tdQQAAAAAAACAL6QPO0WLFi1KVVVVqeNAydTbmSUBAAAAAAAAAACA+kFZEgAAAAAAAAAAAChrypIAAAAAAAAAAABAWVOWBAAAAAAAAAAAAMqasiQAAAAAAAAAAABQ1pQlAQAAAAAAAAAAgLKmLAkAAAAAAAAAAACUNWVJAAAAAAAAAAAAoKwpSwIAAAAAAAAAAABlraLUAah79x1zX6qqqkodAwAAAAAAAAAAADYIZpYEAAAAAAAAAAAAypqyJAAAAAAAAAAAAFDWlCUBAAAAAAAAAACAsqYsCQAAAAAAAAAAAJQ1ZUkAAAAAAAAAAACgrClLAgAAAAAAAAAAAGWtotQBqHt/GbJfmlf4pwXgi6H/Qw+WOgIAAAAAAAAAUObMLAkAAAAAAAAAAACUNWVJAAAAAAAAAAAAoKwpSwIAAAAAAAAAAABlTVkSAAAAAAAAAAAAKGvKkgAAAAAAAAAAAEBZU5YEAAAAAAAAAAAAypqyJAAAAAAAAAAAAFDWlCUBAAAAAAAAAACAsqYsCQAAAAAAAAAAAJQ1ZUkAAAAAAAAAAACgrH0hy5KFQiF33nlnqWMAAAAAAAAAAAAAXwAlLUsOGzYshUJhtWXIkCGljLVefXiPjz32WK3ty5Yty8Ybb5xCoZApU6aUJhwAAAAAAAAAAACUoYpSBxgyZEjGjx9fa1tlZeV6veby5cvTuHHj9XqNj9OpU6eMHz8+u+66a3Hb7373u7Ro0SJvvvlmyXIBAAAAAAAAAABAOSr5a7grKyvTvn37WstGG21U3P/iiy9mr732SpMmTbLtttvmvvvuW22M+fPn55BDDknr1q3Tpk2bHHzwwZk7d25x/7Bhw/K1r30t559/fjp27Jitt946SXLNNddkq622SpMmTdKuXbt861vfKp6zbNmynHTSSfnSl76UJk2aZI899sgTTzxR3D9lypQUCoVMnjw5ffv2TbNmzbL77rtn9uzZn3jP3/3ud3Prrbfm3XffLW67/vrr893vfvdTfXcAAAAAAAAAAADAJyt5WfLjrFq1Kt/4xjfSuHHjPP744xk7dmxOP/30WsesWLEigwcPTsuWLfPwww9n6tSpadGiRYYMGZLly5cXj5s8eXJmz56d++67L3fddVemT5+ek046Keeee25mz56dSZMmZa+99ioef9ppp+WOO+7IDTfckL/+9a/p1q1bBg8evNrMj2eccUYuvfTSTJ8+PRUVFTnqqKM+8b522mmndOnSJXfccUeSZN68eXnooYdy5JFHfqrvZ9myZamurq61AAAAAAAAAAAAALWVvCx51113pUWLFrWWCy64IEly//3354UXXsiNN96Y3r17Z6+99iru+9Btt92WVatWZdy4cenZs2d69OiR8ePHZ968eZkyZUrxuObNm2fcuHHZbrvtst1222XevHlp3rx5DjzwwGy++ebp06dPTjrppCTJkiVLcu211+aSSy7Jfvvtl2233TbXXXddmjZtml/+8pe1rn/++eenf//+2XbbbfOTn/wkjzzySN57771PvO+jjjoq119/fZJkwoQJ2X///dO2bdtP9d2NGTMmrVq1Ki6dOnX6VOcDAAAAAAAAAABAfVDysuTAgQMzc+bMWssxxxyTJJk1a1Y6deqUjh07Fo/fbbfdap3/1FNP5e9//3tatmxZLFu2adMm7733XubMmVM8rmfPnmncuHFxfd99983mm2+eLbbYIkceeWRuvvnmLF26NEkyZ86crFixIv369Sse36hRo+y8886ZNWtWrev36tWr+LlDhw5Jktdee+0T7/uII47Io48+mpdeeikTJkxYqxkp/6+RI0dm0aJFxWX+/PmfegwAAAAAAAAAAAAodxWlDtC8efN069Ztnc9fvHhxdtppp9x8882r7fvXmRqbN29ea1/Lli3z17/+NVOmTMmf/vSnnHXWWRk1alSeeOKJT3X9Ro0aFT8XCoUkH7w+/JNsvPHGOfDAA3P00Ufnvffey3777Zd33nnnU127srIylZWVn+ocAAAAAAAAAAAAqG9KPrPkx+nRo0fmz5+fBQsWFLc99thjtY7Zcccd8+KLL+ZLX/pSunXrVmtp1arVx45fUVGRffbZJxdffHGefvrpzJ07N3/+85+z5ZZbpnHjxpk6dWrx2BUrVuSJJ57ItttuW2f3d9RRR2XKlCkZOnRoGjZsWGfjAgAAAAAAAAAAAP9PyWeWXLZsWRYuXFhrW0VFRTbZZJPss88+6d69e7773e/mkksuSXV1dc4444xaxx5++OG55JJLcvDBB+fcc8/NZpttlldeeSUTJ07Maaedls022+wjr3vXXXflpZdeyl577ZWNNtoof/zjH7Nq1apsvfXWad68eY499tj8+Mc/Tps2bdK5c+dcfPHFWbp0aY4++ug6u/chQ4bk9ddfT1VV1RqP2XvvvfP1r389J5xwQp1dFwAAAAAAAAAAAOqTkpclJ02alA4dOtTatvXWW+eFF15IgwYN8rvf/S5HH310dt5553Tp0iVXXXVVhgwZUjy2WbNmeeihh3L66afnG9/4Rt55551suumm2XvvvT+2hNi6detMnDgxo0aNynvvvZetttoqt9xyS7bbbrskyYUXXphVq1blyCOPzDvvvJO+ffvm3nvvzUYbbVRn914oFLLJJpt87DFz5szJP//5zzq7JgAAAAAAAAAAANQ3hZqamppSh6BuVFdXp1WrVrl7t93TvKLkPVgAWCv9H3qw1BEAAAAAAAAAytaHnaJFixZ97ORzUO4alDoAAAAAAAAAAAAAwPqkLAkAAAAAAAAAAACUNWVJAAAAAAAAAAAAoKwpSwIAAAAAAAAAAABlTVkSAAAAAAAAAAAAKGvKkgAAAAAAAAAAAEBZU5YEAAAAAAAAAAAAypqyJAAAAAAAAAAAAFDWKkodgLq3x6R7UlVVVeoYAAAAAAAAAAAAsEEwsyQAAAAAAAAAAABQ1pQlAQAAAAAAAAAAgLKmLAkAAAAAAAAAAACUNWVJAAAAAAAAAAAAoKwpSwIAAAAAAAAAAABlTVkSAAAAAAAAAAAAKGvKkgAAAAAAAAAAAEBZqyh1AOreX4bsl+YV/mkB+GLo/9CDpY4AAAAAAAAAAJQ5M0sCAAAAAAAAAAAAZU1ZEgAAAAAAAAAAAChrypIAAAAAAAAAAABAWVOWBAAAAAAAAAAAAMqasiQAAAAAAAAAAABQ1pQlAQAAAAAAAAAAgLKmLAkAAAAAAAAAAACUNWVJAAAAAAAAAAAAoKwpSwIAAAAAAAAAAABlTVkSAAAAAAAAAAAAKGv1uixZKBQ+dhk1alSpIwIAAAAAAAAAAACfUUWpA5TSggULip9vu+22nHXWWZk9e3ZxW4sWLT7VeMuXL0/jxo3rLN/nNTYAAAAAAAAAAACUs3o9s2T79u2LS6tWrVIoFIrrY8eOzR577FHr+CuuuCJdunQprg8bNixf+9rXcv7556djx47ZeuutM3fu3BQKhUycODEDBw5Ms2bN0rt37zz66KO1xvrLX/6SPffcM02bNk2nTp1y0kknZcmSJcX9Xbp0yXnnnZehQ4emqqoqP/zhD9frdwEAAAAAAAAAAADlql6XJevC5MmTM3v27Nx333256667itvPOOOMjBgxIjNnzkz37t1z2GGH5f3330+SzJkzJ0OGDMk3v/nNPP3007ntttvyl7/8JSeccEKtsf/zP/8zvXv3zpNPPpkzzzxztWsvW7Ys1dXVtRYAAAAAAAAAAACgtnr9Gu660Lx584wbN674iuy5c+cmSUaMGJEDDjggSXLOOedku+22y9///vdss802GTNmTA4//PAMHz48SbLVVlvlqquuSv/+/XPttdemSZMmSZJBgwbl1FNPXeO1x4wZk3POOWf93RwAAAAAAAAAAACUATNLfkY9e/YsFiX/Va9evYqfO3TokCR57bXXkiRPPfVUJkyYkBYtWhSXwYMHZ9WqVXn55ZeL5/Xt2/djrz1y5MgsWrSouMyfP78ubgkAAAAAAAAAAADKipkl16BBgwapqamptW3FihWrHde8efOPPL9Ro0bFz4VCIUmyatWqJMnixYvz7//+7znppJNWO69z586fOPaHKisrU1lZ+bHHAAAAAAAAAAAAQH2nLLkGbdu2zcKFC1NTU1MsO86cObNOxt5xxx3z/PPPp1u3bnUyHgAAAAAAAAAAALBmXsO9BgMGDMjrr7+eiy++OHPmzMnPf/7z3HPPPXUy9umnn55HHnkkJ5xwQmbOnJkXX3wxv//973PCCSfUyfgAAAAAAAAAAADA/6MsuQY9evTINddck5///Ofp3bt3pk2blhEjRtTJ2L169cqDDz6Yv/3tb9lzzz3Tp0+fnHXWWenYsWOdjA8AAAAAAAAAAAD8P4WampqaUoegblRXV6dVq1a5e7fd07zCG9YB+GLo/9CDpY4AAAAAAAAAULY+7BQtWrQoVVVVpY4DJWNmSQAAAAAAAAAAAKCsKUsCAAAAAAAAAAAAZU1ZEgAAAAAAAAAAAChrypIAAAAAAAAAAABAWVOWBAAAAAAAAAAAAMqasiQAAAAAAAAAAABQ1pQlAQAAAAAAAAAAgLKmLAkAAAAAAAAAAACUNWVJAAAAAAAAAAAAoKxVlDoAdW+PSfekqqqq1DEAAAAAAAAAAABgg2BmSQAAAAAAAAAAAKCsKUsCAAAAAAAAAAAAZU1ZEgAAAAAAAAAAAChrypIAAAAAAAAAAABAWVOWBAAAAAAAAAAAAMqasiQAAAAAAAAAAABQ1ipKHYC6t+/YfVPR1D8tAJ+PqSdOLXUEAAAAAAAAAICPZWZJAAAAAAAAAAAAoKwpSwIAAAAAAAAAAABlTVkSAAAAAAAAAAAAKGvKkgAAAAAAAAAAAEBZU5YEAAAAAAAAAAAAypqyJAAAAAAAAAAAAFDWlCUBAAAAAAAAAACAsqYsCQAAAAAAAAAAAJQ1ZUkAAAAAAAAAAACgrClLAgAAAAAAAAAAAGVNWfJTmjBhQlq3br1O5w4YMCDDhw//XK4FAAAAAAAAAAAAfKBelSUXLlyYk08+Od26dUuTJk3Srl279OvXL9dee22WLl263q8/ceLEnHfeeev9OgAAAAAAAAAAAMD/U1HqAJ+Xl156Kf369Uvr1q1zwQUXpGfPnqmsrMwzzzyTX/ziF9l0003z1a9+db1ce/ny5WncuHHatGmzXsYHAAAAAAAAAAAA1qzezCx53HHHpaKiItOnT88hhxySHj16ZIsttsjBBx+cu+++OwcddFCS5LLLLkvPnj3TvHnzdOrUKccdd1wWL1682nh33nlnttpqqzRp0iSDBw/O/Pnzi/tGjRqVHXbYIePGjUvXrl3TpEmTJKu/hnvZsmUZMWJENt100zRv3jy77LJLpkyZsl6/BwAAAAAAAAAAAKhv6kVZ8o033sif/vSnHH/88WnevPlHHlMoFJIkDRo0yFVXXZXnnnsuN9xwQ/785z/ntNNOq3Xs0qVLc/755+fGG2/M1KlT8/bbb+fQQw+tdczf//733HHHHZk4cWJmzpz5kdc84YQT8uijj+bWW2/N008/nX/7t3/LkCFD8uKLL67VfS1btizV1dW1FgAAAAAAAAAAAKC2elGW/Pvf/56amppsvfXWtbZvsskmadGiRVq0aJHTTz89STJ8+PAMHDgwXbp0yaBBgzJ69Ojcfvvttc5bsWJFrr766uy2227ZaaedcsMNN+SRRx7JtGnTiscsX748N954Y/r06ZNevXqtlmnevHkZP358fvOb32TPPffMlltumREjRmSPPfbI+PHj1+q+xowZk1atWhWXTp06fdqvBgAAAAAAAAAAAMpevShLrsm0adMyc+bMbLfddlm2bFmS5P7778/ee++dTTfdNC1btsyRRx6ZN954I0uXLi2eV1FRkS9/+cvF9W222SatW7fOrFmzits233zztG3bdo3XfuaZZ7Jy5cp07969WNhs0aJFHnzwwcyZM2et8o8cOTKLFi0qLv/6KnAAAAAAAAAAAADgAxWlDvB56NatWwqFQmbPnl1r+xZbbJEkadq0aZJk7ty5OfDAA3Psscfm/PPPT5s2bfKXv/wlRx99dJYvX55mzZqt9TXX9LrvDy1evDgNGzbMjBkz0rBhw1r7WrRosVbXqKysTGVl5VpnAgAAAAAAAAAAgPqoXswsufHGG2fffffN1VdfnSVLlqzxuBkzZmTVqlW59NJLs+uuu6Z79+75xz/+sdpx77//fqZPn15cnz17dt5+++306NFjrTP16dMnK1euzGuvvZZu3brVWtq3b//pbhAAAAAAAAAAAABYo3pRlkySa665Ju+//3769u2b2267LbNmzcrs2bPzq1/9Ki+88EIaNmyYbt26ZcWKFfnZz36Wl156KTfddFPGjh272liNGjXKiSeemMcffzwzZszIsGHDsuuuu2bnnXde6zzdu3fP4YcfnqFDh2bixIl5+eWXM23atIwZMyZ33313Xd46AAAAAAAAAAAA1Gv1piy55ZZb5sknn8w+++yTkSNHpnfv3unbt29+9rOfZcSIETnvvPPSu3fvXHbZZbnooouy/fbb5+abb86YMWNWG6tZs2Y5/fTT853vfCf9+vVLixYtctttt33qTOPHj8/QoUNz6qmnZuutt87Xvva1PPHEE+ncuXNd3DIAAAAAAAAAAACQpFBTU1NT6hDUjerq6rRq1So7X7RzKppWlDoOAPXE1BOnljoCAAAAAAAAAGvwYado0aJFqaqqKnUcKJl6M7MkAAAAAAAAAAAAUD8pSwIAAAAAAAAAAABlTVkSAAAAAAAAAAAAKGvKkgAAAAAAAAAAAEBZU5YEAAAAAAAAAAAAypqyJAAAAAAAAAAAAFDWlCUBAAAAAAAAAACAsqYsCQAAAAAAAAAAAJS1ilIHoO7dd8x9qaqqKnUMAAAAAAAAAAAA2CCYWRIAAAAAAAAAAAAoa8qSAAAAAAAAAAAAQFnzGu4yUlNTkySprq4ucRIAAAAAAAAAAGBD8GGX6MNuEdRXypJl5I033kiSdOrUqcRJAAAAAAAAAACADck777yTVq1alToGlIyyZBlp06ZNkmTevHl+2ICPVV1dnU6dOmX+/PmpqqoqdRxgA+b3Alhbfi+AteG3Alhbfi+AteX3Alhbfi+AteG3gnJVU1OTd955Jx07dix1FCgpZcky0qBBgyRJq1at/Jc2sFaqqqr8XgBrxe8FsLb8XgBrw28FsLb8XgBry+8FsLb8XgBrw28F5cjEa5A0KHUAAAAAAAAAAAAAgPVJWRIAAAAAAAAAAAAoa8qSZaSysjJnn312KisrSx0F2MD5vQDWlt8LYG35vQDWht8KYG35vQDWlt8LYG35vQDWht8KgPJWqKmpqSl1CAAAAAAAAAAAAID1xcySAAAAAAAAAAAAQFlTlgQAAAAAAAAAAADKmrIkAAAAAAAAAAAAUNaUJQEAAAAAAAAAAICypiwJAAAAAAAAAAAAlLWKUgdg3f3zn//M9ddfn0cffTQLFy5MkrRv3z677757hg0blrZt25Y4IQAAAAAAAAAAAJReoaampqbUIfj0nnjiiQwePDjNmjXLPvvsk3bt2iVJXn311UyePDlLly7Nvffem759+5Y4KQDwRTNt2rTV/hhjt912y84771ziZADAF5FnCwCgLi1fvjx33nnnR04kcfDBB6dx48YlTggAfJF4tgCoX5Qlv6B23XXX9O7dO2PHjk2hUKi1r6amJsccc0yefvrpPProoyVKCGxoPOgDn+S1117LN7/5zUydOjWdO3eu9ccY8+bNS79+/XLHHXfkS1/6UomTAhsKBSjg43i2AD4tzxbAJ/n73/+ewYMH5x//+Ed22WWXWs8Xjz/+eDbbbLPcc8896datW4mTAhsKzxfAx/FsAVD/KEt+QTVt2jRPPvlkttlmm4/c/8ILL6RPnz559913P+dkwIbIgz6wNr71rW/lH//4R8aPH5+tt9661r7Zs2fnqKOOSseOHfOb3/ymRAmBDYUCFLA2PFsAa8uzBbC29t133zRv3jw33nhjqqqqau2rrq7O0KFD8+677+bee+8tUUJgQ+H5Algbni0A6h9lyS+orl275pxzzsnQoUM/cv+NN96Ys846K3Pnzv18gwEbJA/6wNpo2bJlHnroofTp0+cj98+YMSMDBgzIO++88zknAzY0ClDA2vBsAawtzxbA2mrWrFmmTZuW7bff/iP3P/PMM9lll12ydOnSzzkZsKHxfAGsDc8WAPVPRakDsG5GjBiRH/7wh5kxY0b23nvvWn8NNXny5Fx33XX5z//8zxKnBDYUU6dOzbRp01YrSiZJVVVVzjvvvOyyyy4lSAZsSCorK1NdXb3G/e+8804qKys/x0TAhuree+/NQw89tNr/2ZAkW2+9da666qoMGDDg8w8GbFA8WwBry7MFsLZat26duXPnrrHQMHfu3LRu3frzDQVskDxfAGvDswVA/aMs+QV1/PHHZ5NNNsnll1+ea665JitXrkySNGzYMDvttFMmTJiQQw45pMQpgQ2FB31gbXz729/Od7/73Vx++eXZe++9iwXr6urqTJ48OaecckoOO+ywEqcENgQKUMDa8GwBrC3PFsDa+v73v5+hQ4fmzDPP/MiJJEaPHp0TTzyxxCmBDYHnC2BteLYAqH+UJb/Avv3tb+fb3/52VqxYkX/+859Jkk022SSNGjUqcTJgQ+NBH1gbl112WVatWpVDDz0077//fho3bpwkWb58eSoqKnL00UebuRpIogAFrJ01PVssW7YsjRo18mwBFHm2ANbWueeem+bNm+eSSy7JqaeemkKhkCSpqalJ+/btc/rpp+e0004rcUpgQ+D5Algbni0A6p9CTU1NTalDALD+XXTRRbnyyiuzcOHC1R70hw8f7kEfKKqurs6MGTOycOHCJEn79u2z0047Ff8HRYBly5Zl+PDhuf7669dYrr788svN0AAk+eDZYvr06Xn11VeTJO3atUvfvn09WwBFni2AdfHyyy/X+t8uunbtWuJEwIbE8wXwaXm2AKgflCUB6hkP+gBAXVGuBtZF48aN89RTT6VHjx6ljgJsYDxbAAB17f/+8ZbnCwCA+k1ZEoDMnz8/Z599dq6//vpSRwFK7N13382MGTPSpk2bbLvttrX2vffee7n99tszdOjQEqUDNiSzZs3KY489lt122y3bbLNNXnjhhVx55ZVZtmxZjjjiiAwaNKjUEYESO+WUUz5y+5VXXpkjjjgiG2+8cZIPXtcN8K+WLFmS22+/PX//+9/TsWPHHHroocXfDKB+++tf/5qNNtqo+AfgN910U8aOHZt58+Zl8803zwknnJBDDz20xCmBDcGJJ56YQw45JHvuuWepowAbuKuvvjrTpk3L/vvvn0MPPTQ33XRTxowZk1WrVuUb3/hGzj333FRUVJQ6JgB1RFkSgDz11FPZcccds3LlylJHAUrob3/7W77yla9k3rx5KRQK2WOPPXLLLbekY8eOSZJXX301HTt29FsBZNKkSTn44IPTokWLLF26NL/73e8ydOjQ9O7dO6tWrcqDDz6YP/3pTwqTUM81aNAgvXv3TuvWrWttf/DBB9O3b980b948hUIhf/7zn0sTENhgbLvttvnLX/6SNm3aZP78+dlrr73y1ltvpXv37pkzZ04qKiry2GOPeTsGkN69e+fSSy/NPvvsk3HjxuWkk07KD37wg/To0SOzZ8/OuHHjcuWVV+aoo44qdVSgxBo0aJBCoZAtt9wyRx99dL773e+mffv2pY4FbGBGjx6diy++OF/5ylcyderUDB8+PJdcckl+9KMfpUGDBrn88stz7LHH5pxzzil1VADqiLIkQD3w3//93x+7/6WXXsqpp56qAAX13Ne//vWsWLEiEyZMyNtvv53hw4fn+eefz5QpU9K5c2dlSaBo9913z6BBgzJ69OjceuutOe6443Lsscfm/PPPT5KMHDkyM2bMyJ/+9KcSJwVK6cILL8wvfvGLjBs3rlZ5ulGjRnnqqadWm8UaqL8aNGiQhQsX5ktf+lKOOOKIvPzyy/njH/+YVq1aZfHixfn617+etm3b5te//nWpowIl1qxZs8yaNSubb755dtxxxxx77LH5wQ9+UNz/61//Oueff36ee+65EqYENgQNGjTIfffdlz/84Q+5+eabs2jRouy33375wQ9+kP333z8NGjQodURgA9CtW7dcfPHF+cY3vpGnnnoqO+20U2644YYcfvjhSZLf/e53Oe200/Liiy+WOCkAdUVZEqAe+PAvKD/uJ79QKChAQT3Xrl273H///enZs2eSpKamJscdd1z++Mc/5oEHHkjz5s2VJYEkSatWrTJjxox069Ytq1atSmVlZaZNm5Y+ffokSZ599tnss88+WbhwYYmTAqX2xBNP5IgjjshBBx2UMWPGpFGjRsqSwGr+tSy55ZZbZuzYsdl3332L+x955JEceuihmTdvXglTAhuCTTbZJPfee2922mmntGvXLn/605/Su3fv4v45c+akZ8+eWbp0aQlTAhuCf32+WLFiRX73u9/l+uuvz/3335927dpl2LBh+d73vpdu3bqVOipQQs2aNcsLL7yQzp07J0kaN26cJ598Mtttt12S5JVXXsm2226bJUuWlDImAHXIn8wA1AMdOnTIxIkTs2rVqo9c/vrXv5Y6IrABePfdd1NRUVFcLxQKufbaa3PQQQelf//++dvf/lbCdMCGplAoJPng/3xo0qRJWrVqVdzXsmXLLFq0qFTRgA3Il7/85cyYMSOvv/56+vbtm2effbb4+wHwrz78bXjvvffSoUOHWvs23XTTvP7666WIBWxg9ttvv1x77bVJkv79++e3v/1trf2333674hOwmkaNGuWQQw7JpEmT8tJLL+UHP/hBbr755my99daljgaUWPv27fP8888nSV588cWsXLmyuJ4kzz33XL70pS+VKh4A60HFJx8CwBfdTjvtlBkzZuTggw/+yP2fNOskUD9ss802mT59enr06FFr+9VXX50k+epXv1qKWMAGqEuXLnnxxRez5ZZbJkkeffTR4l9fJ8m8efNWKzkA9VeLFi1yww035NZbb80+++xjlmrgI+29996pqKhIdXV1Zs+ene23376475VXXsnGG29cwnTAhuKiiy5Kv3790r9///Tt2zeXXnpppkyZkh49emT27Nl57LHH8rvf/a7UMYENWOfOnTNq1KicffbZuf/++0sdByixww8/PEOHDs3BBx+cyZMn57TTTsuIESPyxhtvpFAo5Pzzz8+3vvWtUscEoA4pSwLUAz/+8Y8/dnr4bt265YEHHvgcEwEboq9//eu55ZZbcuSRR6627+qrr86qVasyduzYEiQDNjTHHntsrbLTv5YZkuSee+7JoEGDPu9YwAbu0EMPzR577JEZM2Zk8803L3UcYANy9tln11pv0aJFrfU//OEP2XPPPT/PSMAGqmPHjnnyySdz4YUX5g9/+ENqamoybdq0zJ8/P/369cvUqVPTt2/fUscENgCbb755GjZsuMb9hUIh++677+eYCNgQnXPOOWnatGkeffTR/OAHP8hPfvKT9O7dO6eddlqWLl2agw46KOedd16pYwJQhwo1phIDAAAAAAAAAAAAyliDUgcAAAAAAAAAAAAAWJ+UJQEAAAAAAAAAAICypiwJAAAAAAAAAAAAlDVlSQAAAADqrblz56ZQKGTmzJmljrKaT5NtypQpKRQKefvtt9d7LgAAAACALyJlSQAAAACoIxty+bI+mzBhQlq3bl3qGAAAAABACSlLAgAAAAAlsXz58lJHAAAAAADqCWVJAAAAAL7wfvvb36Znz55p2rRpNt544+yzzz5ZsmRJkmTcuHHp0aNHmjRpkm222SbXXHPNx4717LPPZr/99kuLFi3Srl27HHnkkfnnP/9Z3L9q1apcfPHF6datWyorK9O5c+ecf/75SZKuXbsmSfr06ZNCoZABAwYUz/ukHNOmTUufPn3SpEmT9O3bN08++eSn/h6mTp2aXr16pUmTJtl1113z7LPPJkmWLFmSqqqq/Pa3v611/J133pnmzZvnnXfe+dhxP5wx89Zbb83uu++eJk2aZPvtt8+DDz5Y67hP+u4GDBiQE044IcOHD88mm2ySwYMHJ0mee+65HHjggamqqkrLli2z5557Zs6cOWv13X2YbeLEiRk4cGCaNWuW3r1759FHH03ywSvKv/e972XRokUpFAopFAoZNWrUp/5uAQAAAIAvNmVJAAAAAL7QFixYkMMOOyxHHXVUZs2alSlTpuQb3/hGampqcvPNN+ess87K+eefn1mzZuWCCy7ImWeemRtuuOEjx3r77bczaNCg9OnTJ9OnT8+kSZPy6quv5pBDDikeM3LkyFx44YU588wz8/zzz+fXv/512rVrl+SDwmOS3H///VmwYEEmTpyYJJ+YY/HixTnwwAOz7bbbZsaMGRk1alRGjBjxqb+LH//4x7n00kvzxBNPpG3btjnooIOyYsWKNG/ePIceemjGjx9f6/jx48fnW9/6Vlq2bLnW45966ql58skns9tuu+Wggw7KG2+8sdbfXZLccMMNady4caZOnZqxY8fmf//3f7PXXnulsrIyf/7znzNjxowcddRRef/999fqu/vQGWeckREjRmTmzJnp3r17DjvssLz//vvZfffdc8UVV6SqqioLFizIggUL1um7BQAAAAC+2Ao1NTU1pQ4BAAAAAOvqr3/9a3baaafMnTs3m2++ea193bp1y3nnnZfDDjusuG306NH54x//mEceeSRz585N165d8+STT2aHHXbI6NGj8/DDD+fee+8tHv8///M/6dSpU2bPnp0OHTqkbdu2ufrqq/P9739/tSz/d7y1zfGLX/wi//Ef/5H/+Z//SZMmTZIkY8eOzbHHHrvaWB9lypQpGThwYG699dZ8+9vfTpK8+eab2WyzzTJhwoQccsghmTZtWnbffffMnz8/HTp0yGv/X3t3F9J0/8Zx/LNao9GwJ7PUSD3IHKJWRlFSCwTDIIoI7AnKVBpoZERqWUId2JLqwPAgNNTsoJMKGkRPK4gMI3vC0DQm0UEPK9RkSQ9a98Efxx2uNv/9vb3d//2Cwdj12/W7vtfv7MfF9+vxKDo6Wjdv3pTNZvtt/sF1ORwOFRcXS5L6+/sVFxenXbt2qaioKGDv4uPjtXLlSvX29urRo0e+aw4cOKDz58+rvb1dEyZMGHLvYJ9hTU2NcnJyJEmtra1KTExUW1ubEhISVFdXp8LCQvX09Px2nQAAAAAAAABCl3G0CwAAAAAAAAD+REpKitLT05WUlKRVq1YpIyNDGzZskMlkktvtVk5OjvLy8nzX9/f3a/LkyX5zPX36VLdv35bFYhkSc7vd6unp0ZcvX5Senh50fZ8+fQpYR1tbm+/47EFLly4N+h7+/jNt2jTNmzdPbW1tkqTFixcrMTFR9fX1Kikp0blz5xQTE6MVK1b8V/mNRqMWLVrkyx+od/Hx8ZKk1NTUn2JPnjzR8uXL/Q5KBtO7QcnJyb7vkZGRkiSPx6OEhISg1wcAAAAAAAAgdDEsCQAAAAAAgDFt/PjxunHjhu7du6fr16/r1KlTKi0tldPplCRVV1dryZIlQ/7jj9fr1Zo1a3Ts2LEhscjISHV2dg67Pq/XO+w6Rkpubq6qqqpUUlKi2tpaZWdny2Aw/E9yB+rdoEmTJv0UM5vNv80pBde7vw9bDq7p+/fvQVYPAAAAAAAAINQxLAkAAAAAAIAxz2AwKC0tTWlpaSorK1NMTIwaGxsVFRWlzs5ObdmyJag8Cxcu1IULFxQbGyujceirs7lz58psNsvlcvk9httkMkmSBgYGfL/NnDkzYB1Wq1UNDQ36/Pmzb3fJpqamoGr+u6amJs2ZM0eS1N3drY6ODlmtVl9869atKioqUmVlpVpbW7Vt27Zh5x/cibK/v18PHz5UQUGBpMC9+5Xk5GTV19fr27dvQ3aXDKZ3wTCZTD89EwAAAAAAAAD/f8aNdgEAAAAAAADAn7h//77Ky8vV3NysV69e6eLFi3r//r2sVqsOHz6so0ePqrKyUh0dHWppaVFtba1OnjzpN1d+fr66urq0adMmPXjwQG63W9euXVN2drYGBgY0ceJEFRcXq6ioSGfPnpXb7VZTU5POnDkjSYqIiJDZbNbVq1f17t07ffz4UZIC1rF582YZDAbl5eWptbVVV65c0fHjx4fdiyNHjsjlcunZs2favn27wsPDtW7dOl986tSpWr9+vfbt26eMjAzNnj17WPmrqqp06dIlPX/+XPn5+eru7taOHTuC6t2vFBQUqLe3Vxs3blRzc7NevHihhoYGtbe3Swrcu2DExsbK6/XK5XLpw4cP6uvrG9a6AQAAAAAAAIx9DEsCAAAAAABgTAsLC9OdO3e0evVqxcfH6+DBgzpx4oQyMzOVm5urmpoa1dbWKikpSTabTXV1dYqLi/ObKyoqSo2NjRoYGFBGRoaSkpJUWFioKVOmaNy4/7xKO3TokPbu3auysjJZrVZlZWXJ4/FIkoxGoyorK3X69GlFRUVp7dq1khSwDovFIqfTqZaWFi1YsEClpaV+j7MOxOFwaPfu3UpNTdXbt2/ldDp9u10OysnJ0devX31DjsPN73A4lJKSort37+ry5csKDw8Punf+TJ8+Xbdu3ZLX65XNZlNqaqqqq6t9u0wO9xn6s2zZMtntdmVlZWnGjBmqqKgY9toBAAAAAAAAjG2GHz9+/BjtIgAAAAAAAAD8MxoaGrRnzx69fv16yCDlr7x8+VJxcXF6/Pix5s+fP7IFAgAAAAAAAMAIMI52AQAAAAAAAABGXl9fn968eSOHw6GdO3cGPSgJAAAAAAAAAKGAY7gBAAAAAACAfzm73S6LxeL3Y7fbg8pRUVGhhIQEzZo1S/v37/8pVl5e/sv8mZmZI7EkAAAAAAAAAPhHcQw3AAAAAAAA8C/n8XjU29vrNxYWFqaIiIg/yt/V1aWuri6/MbPZrOjo6D/KDwAAAAAAAACjjWFJAAAAAAAAAAAAAAAAAAAQ0jiGGwAAAAAAAAAAAAAAAAAAhDSGJQEAAAAAAAAAAAAAAAAAQEhjWBIAAAAAAAAAAAAAAAAAAIQ0hiUBAAAAAAAAAAAAAAAAAEBIY1gSAAAAAAAAAAAAAAAAAACENIYlAQAAAAAAAAAAAAAAAABASGNYEgAAAAAAAAAAAAAAAAAAhDSGJQEAAAAAAAAAAAAAAAAAQEj7CyG4NcoNQCfwAAAAAElFTkSuQmCC\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "fbref = pd.read_html('https://fbref.com/en/comps/9/Premier-League-Stats')\n",
        "epltable = fbref[0]\n",
        "epltablexGxGc = epltable.drop(columns=[\n",
        " 'Last 5',\n",
        " 'Attendance',\n",
        " 'Top Team Scorer',\n",
        " 'Goalkeeper',\n",
        " 'Notes'])\n",
        "epltablexGxGc= epltablexGxGc.replace('Newcastle Utd', 'Newcastle United')\n",
        "epltablexGxGc= epltablexGxGc.replace('Wolves','Wolverhampton Wanderers')\n",
        "epltablexGxGc= epltablexGxGc.replace('Leeds United','Leeds')\n",
        "epltablexGxGc= epltablexGxGc.replace('Leicester City','Leicester')\n",
        "epltablexGxGc= epltablexGxGc.replace('Manchester Utd','Manchester United')\n",
        "epltablexGxGc['Squad'] = epltablexGxGc['Squad'].str.replace(r\"[\\\"\\',]\", '')\n",
        "epltablexGxGc= epltablexGxGc.replace('Nottham Forest','Nottingham Forest')\n",
        "epltablexGxGc['xCSP'] = (4 - (epltablexGxGc.xGA * 4/23))\n",
        "epltablexGxGc.rename(columns={'Squad': 'team'}, inplace=True)\n",
        "epltablexGxGc['xG/90'] = (epltablexGxGc.xG / epltablexGxGc.MP)\n",
        "epltablexGxGc['xGA/90'] = (epltablexGxGc.xGA / epltablexGxGc.MP)\n",
        "epltablexGxGc"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 711
        },
        "id": "D8nuKObbLt5s",
        "outputId": "665d8e91-c5c6-4302-c1b4-ff3028356125"
      },
      "execution_count": 182,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "<ipython-input-182-f34def3770e4>:14: FutureWarning: The default value of regex will change from True to False in a future version.\n",
            "  epltablexGxGc['Squad'] = epltablexGxGc['Squad'].str.replace(r\"[\\\"\\',]\", '')\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "    Rk                     team  MP  W  D   L  GF  GA  GD  Pts  Pts/MP    xG  \\\n",
              "0    1                  Arsenal  13  9  3   1  27  10  17   30    2.31  22.6   \n",
              "1    2          Manchester City  13  9  2   2  33  13  20   29    2.23  25.8   \n",
              "2    3                Liverpool  13  8  4   1  28  11  17   28    2.15  27.1   \n",
              "3    4              Aston Villa  13  9  1   3  31  18  13   28    2.15  25.3   \n",
              "4    5                Tottenham  13  8  2   3  25  17   8   26    2.00  21.5   \n",
              "5    6        Manchester United  13  8  0   5  16  16   0   24    1.85  19.7   \n",
              "6    7         Newcastle United  13  7  2   4  31  14  17   23    1.77  25.7   \n",
              "7    8                 Brighton  13  6  4   3  28  23   5   22    1.69  22.3   \n",
              "8    9                 West Ham  13  6  2   5  23  23   0   20    1.54  18.5   \n",
              "9   10                  Chelsea  13  4  4   5  22  20   2   16    1.23  25.8   \n",
              "10  11                Brentford  13  4  4   5  19  18   1   16    1.23  23.3   \n",
              "11  12  Wolverhampton Wanderers  13  4  3   6  18  23  -5   15    1.15  17.7   \n",
              "12  13           Crystal Palace  13  4  3   6  13  18  -5   15    1.15  15.8   \n",
              "13  14                   Fulham  13  4  3   6  13  22  -9   15    1.15  15.3   \n",
              "14  15        Nottingham Forest  13  3  4   6  16  21  -5   13    1.00  15.1   \n",
              "15  16              Bournemouth  13  3  3   7  14  28 -14   12    0.92  16.7   \n",
              "16  17               Luton Town  13  2  3   8  12  23 -11    9    0.69  13.8   \n",
              "17  18            Sheffield Utd  13  1  2  10  11  34 -23    5    0.38  10.4   \n",
              "18  19                  Everton  13  4  2   7  14  20  -6    4    0.31  20.3   \n",
              "19  20                  Burnley  13  1  1  11  10  32 -22    4    0.31  11.2   \n",
              "\n",
              "     xGA   xGD  xGD/90      xCSP     xG/90    xGA/90  \n",
              "0   10.3  12.2    0.94  2.208696  1.738462  0.792308  \n",
              "1   11.6  14.1    1.09  1.982609  1.984615  0.892308  \n",
              "2   15.8  11.2    0.86  1.252174  2.084615  1.215385  \n",
              "3   18.2   7.1    0.54  0.834783  1.946154  1.400000  \n",
              "4   20.3   1.2    0.09  0.469565  1.653846  1.561538  \n",
              "5   21.2  -1.5   -0.12  0.313043  1.515385  1.630769  \n",
              "6   13.7  12.0    0.92  1.617391  1.976923  1.053846  \n",
              "7   18.9   3.4    0.26  0.713043  1.715385  1.453846  \n",
              "8   23.5  -5.0   -0.38 -0.086957  1.423077  1.807692  \n",
              "9   17.4   8.4    0.64  0.973913  1.984615  1.338462  \n",
              "10  17.9   5.4    0.41  0.886957  1.792308  1.376923  \n",
              "11  22.4  -4.7   -0.36  0.104348  1.361538  1.723077  \n",
              "12  17.7  -1.9   -0.15  0.921739  1.215385  1.361538  \n",
              "13  23.3  -8.1   -0.62 -0.052174  1.176923  1.792308  \n",
              "14  20.2  -5.1   -0.39  0.486957  1.161538  1.553846  \n",
              "15  25.0  -8.3   -0.64 -0.347826  1.284615  1.923077  \n",
              "16  26.3 -12.5   -0.96 -0.573913  1.061538  2.023077  \n",
              "17  29.0 -18.6   -1.43 -1.043478  0.800000  2.230769  \n",
              "18  18.0   2.3    0.18  0.869565  1.561538  1.384615  \n",
              "19  22.9 -11.7   -0.90  0.017391  0.861538  1.761538  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-b9da764c-3f02-45b9-81db-53b58af0b6c3\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Rk</th>\n",
              "      <th>team</th>\n",
              "      <th>MP</th>\n",
              "      <th>W</th>\n",
              "      <th>D</th>\n",
              "      <th>L</th>\n",
              "      <th>GF</th>\n",
              "      <th>GA</th>\n",
              "      <th>GD</th>\n",
              "      <th>Pts</th>\n",
              "      <th>Pts/MP</th>\n",
              "      <th>xG</th>\n",
              "      <th>xGA</th>\n",
              "      <th>xGD</th>\n",
              "      <th>xGD/90</th>\n",
              "      <th>xCSP</th>\n",
              "      <th>xG/90</th>\n",
              "      <th>xGA/90</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>1</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>13</td>\n",
              "      <td>9</td>\n",
              "      <td>3</td>\n",
              "      <td>1</td>\n",
              "      <td>27</td>\n",
              "      <td>10</td>\n",
              "      <td>17</td>\n",
              "      <td>30</td>\n",
              "      <td>2.31</td>\n",
              "      <td>22.6</td>\n",
              "      <td>10.3</td>\n",
              "      <td>12.2</td>\n",
              "      <td>0.94</td>\n",
              "      <td>2.208696</td>\n",
              "      <td>1.738462</td>\n",
              "      <td>0.792308</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>2</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>13</td>\n",
              "      <td>9</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>33</td>\n",
              "      <td>13</td>\n",
              "      <td>20</td>\n",
              "      <td>29</td>\n",
              "      <td>2.23</td>\n",
              "      <td>25.8</td>\n",
              "      <td>11.6</td>\n",
              "      <td>14.1</td>\n",
              "      <td>1.09</td>\n",
              "      <td>1.982609</td>\n",
              "      <td>1.984615</td>\n",
              "      <td>0.892308</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>3</td>\n",
              "      <td>Liverpool</td>\n",
              "      <td>13</td>\n",
              "      <td>8</td>\n",
              "      <td>4</td>\n",
              "      <td>1</td>\n",
              "      <td>28</td>\n",
              "      <td>11</td>\n",
              "      <td>17</td>\n",
              "      <td>28</td>\n",
              "      <td>2.15</td>\n",
              "      <td>27.1</td>\n",
              "      <td>15.8</td>\n",
              "      <td>11.2</td>\n",
              "      <td>0.86</td>\n",
              "      <td>1.252174</td>\n",
              "      <td>2.084615</td>\n",
              "      <td>1.215385</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>4</td>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>13</td>\n",
              "      <td>9</td>\n",
              "      <td>1</td>\n",
              "      <td>3</td>\n",
              "      <td>31</td>\n",
              "      <td>18</td>\n",
              "      <td>13</td>\n",
              "      <td>28</td>\n",
              "      <td>2.15</td>\n",
              "      <td>25.3</td>\n",
              "      <td>18.2</td>\n",
              "      <td>7.1</td>\n",
              "      <td>0.54</td>\n",
              "      <td>0.834783</td>\n",
              "      <td>1.946154</td>\n",
              "      <td>1.400000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>5</td>\n",
              "      <td>Tottenham</td>\n",
              "      <td>13</td>\n",
              "      <td>8</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "      <td>25</td>\n",
              "      <td>17</td>\n",
              "      <td>8</td>\n",
              "      <td>26</td>\n",
              "      <td>2.00</td>\n",
              "      <td>21.5</td>\n",
              "      <td>20.3</td>\n",
              "      <td>1.2</td>\n",
              "      <td>0.09</td>\n",
              "      <td>0.469565</td>\n",
              "      <td>1.653846</td>\n",
              "      <td>1.561538</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>6</td>\n",
              "      <td>Manchester United</td>\n",
              "      <td>13</td>\n",
              "      <td>8</td>\n",
              "      <td>0</td>\n",
              "      <td>5</td>\n",
              "      <td>16</td>\n",
              "      <td>16</td>\n",
              "      <td>0</td>\n",
              "      <td>24</td>\n",
              "      <td>1.85</td>\n",
              "      <td>19.7</td>\n",
              "      <td>21.2</td>\n",
              "      <td>-1.5</td>\n",
              "      <td>-0.12</td>\n",
              "      <td>0.313043</td>\n",
              "      <td>1.515385</td>\n",
              "      <td>1.630769</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>7</td>\n",
              "      <td>Newcastle United</td>\n",
              "      <td>13</td>\n",
              "      <td>7</td>\n",
              "      <td>2</td>\n",
              "      <td>4</td>\n",
              "      <td>31</td>\n",
              "      <td>14</td>\n",
              "      <td>17</td>\n",
              "      <td>23</td>\n",
              "      <td>1.77</td>\n",
              "      <td>25.7</td>\n",
              "      <td>13.7</td>\n",
              "      <td>12.0</td>\n",
              "      <td>0.92</td>\n",
              "      <td>1.617391</td>\n",
              "      <td>1.976923</td>\n",
              "      <td>1.053846</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>8</td>\n",
              "      <td>Brighton</td>\n",
              "      <td>13</td>\n",
              "      <td>6</td>\n",
              "      <td>4</td>\n",
              "      <td>3</td>\n",
              "      <td>28</td>\n",
              "      <td>23</td>\n",
              "      <td>5</td>\n",
              "      <td>22</td>\n",
              "      <td>1.69</td>\n",
              "      <td>22.3</td>\n",
              "      <td>18.9</td>\n",
              "      <td>3.4</td>\n",
              "      <td>0.26</td>\n",
              "      <td>0.713043</td>\n",
              "      <td>1.715385</td>\n",
              "      <td>1.453846</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>9</td>\n",
              "      <td>West Ham</td>\n",
              "      <td>13</td>\n",
              "      <td>6</td>\n",
              "      <td>2</td>\n",
              "      <td>5</td>\n",
              "      <td>23</td>\n",
              "      <td>23</td>\n",
              "      <td>0</td>\n",
              "      <td>20</td>\n",
              "      <td>1.54</td>\n",
              "      <td>18.5</td>\n",
              "      <td>23.5</td>\n",
              "      <td>-5.0</td>\n",
              "      <td>-0.38</td>\n",
              "      <td>-0.086957</td>\n",
              "      <td>1.423077</td>\n",
              "      <td>1.807692</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>10</td>\n",
              "      <td>Chelsea</td>\n",
              "      <td>13</td>\n",
              "      <td>4</td>\n",
              "      <td>4</td>\n",
              "      <td>5</td>\n",
              "      <td>22</td>\n",
              "      <td>20</td>\n",
              "      <td>2</td>\n",
              "      <td>16</td>\n",
              "      <td>1.23</td>\n",
              "      <td>25.8</td>\n",
              "      <td>17.4</td>\n",
              "      <td>8.4</td>\n",
              "      <td>0.64</td>\n",
              "      <td>0.973913</td>\n",
              "      <td>1.984615</td>\n",
              "      <td>1.338462</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10</th>\n",
              "      <td>11</td>\n",
              "      <td>Brentford</td>\n",
              "      <td>13</td>\n",
              "      <td>4</td>\n",
              "      <td>4</td>\n",
              "      <td>5</td>\n",
              "      <td>19</td>\n",
              "      <td>18</td>\n",
              "      <td>1</td>\n",
              "      <td>16</td>\n",
              "      <td>1.23</td>\n",
              "      <td>23.3</td>\n",
              "      <td>17.9</td>\n",
              "      <td>5.4</td>\n",
              "      <td>0.41</td>\n",
              "      <td>0.886957</td>\n",
              "      <td>1.792308</td>\n",
              "      <td>1.376923</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>11</th>\n",
              "      <td>12</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>13</td>\n",
              "      <td>4</td>\n",
              "      <td>3</td>\n",
              "      <td>6</td>\n",
              "      <td>18</td>\n",
              "      <td>23</td>\n",
              "      <td>-5</td>\n",
              "      <td>15</td>\n",
              "      <td>1.15</td>\n",
              "      <td>17.7</td>\n",
              "      <td>22.4</td>\n",
              "      <td>-4.7</td>\n",
              "      <td>-0.36</td>\n",
              "      <td>0.104348</td>\n",
              "      <td>1.361538</td>\n",
              "      <td>1.723077</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>12</th>\n",
              "      <td>13</td>\n",
              "      <td>Crystal Palace</td>\n",
              "      <td>13</td>\n",
              "      <td>4</td>\n",
              "      <td>3</td>\n",
              "      <td>6</td>\n",
              "      <td>13</td>\n",
              "      <td>18</td>\n",
              "      <td>-5</td>\n",
              "      <td>15</td>\n",
              "      <td>1.15</td>\n",
              "      <td>15.8</td>\n",
              "      <td>17.7</td>\n",
              "      <td>-1.9</td>\n",
              "      <td>-0.15</td>\n",
              "      <td>0.921739</td>\n",
              "      <td>1.215385</td>\n",
              "      <td>1.361538</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>13</th>\n",
              "      <td>14</td>\n",
              "      <td>Fulham</td>\n",
              "      <td>13</td>\n",
              "      <td>4</td>\n",
              "      <td>3</td>\n",
              "      <td>6</td>\n",
              "      <td>13</td>\n",
              "      <td>22</td>\n",
              "      <td>-9</td>\n",
              "      <td>15</td>\n",
              "      <td>1.15</td>\n",
              "      <td>15.3</td>\n",
              "      <td>23.3</td>\n",
              "      <td>-8.1</td>\n",
              "      <td>-0.62</td>\n",
              "      <td>-0.052174</td>\n",
              "      <td>1.176923</td>\n",
              "      <td>1.792308</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>14</th>\n",
              "      <td>15</td>\n",
              "      <td>Nottingham Forest</td>\n",
              "      <td>13</td>\n",
              "      <td>3</td>\n",
              "      <td>4</td>\n",
              "      <td>6</td>\n",
              "      <td>16</td>\n",
              "      <td>21</td>\n",
              "      <td>-5</td>\n",
              "      <td>13</td>\n",
              "      <td>1.00</td>\n",
              "      <td>15.1</td>\n",
              "      <td>20.2</td>\n",
              "      <td>-5.1</td>\n",
              "      <td>-0.39</td>\n",
              "      <td>0.486957</td>\n",
              "      <td>1.161538</td>\n",
              "      <td>1.553846</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>15</th>\n",
              "      <td>16</td>\n",
              "      <td>Bournemouth</td>\n",
              "      <td>13</td>\n",
              "      <td>3</td>\n",
              "      <td>3</td>\n",
              "      <td>7</td>\n",
              "      <td>14</td>\n",
              "      <td>28</td>\n",
              "      <td>-14</td>\n",
              "      <td>12</td>\n",
              "      <td>0.92</td>\n",
              "      <td>16.7</td>\n",
              "      <td>25.0</td>\n",
              "      <td>-8.3</td>\n",
              "      <td>-0.64</td>\n",
              "      <td>-0.347826</td>\n",
              "      <td>1.284615</td>\n",
              "      <td>1.923077</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>16</th>\n",
              "      <td>17</td>\n",
              "      <td>Luton Town</td>\n",
              "      <td>13</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "      <td>8</td>\n",
              "      <td>12</td>\n",
              "      <td>23</td>\n",
              "      <td>-11</td>\n",
              "      <td>9</td>\n",
              "      <td>0.69</td>\n",
              "      <td>13.8</td>\n",
              "      <td>26.3</td>\n",
              "      <td>-12.5</td>\n",
              "      <td>-0.96</td>\n",
              "      <td>-0.573913</td>\n",
              "      <td>1.061538</td>\n",
              "      <td>2.023077</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>17</th>\n",
              "      <td>18</td>\n",
              "      <td>Sheffield Utd</td>\n",
              "      <td>13</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>10</td>\n",
              "      <td>11</td>\n",
              "      <td>34</td>\n",
              "      <td>-23</td>\n",
              "      <td>5</td>\n",
              "      <td>0.38</td>\n",
              "      <td>10.4</td>\n",
              "      <td>29.0</td>\n",
              "      <td>-18.6</td>\n",
              "      <td>-1.43</td>\n",
              "      <td>-1.043478</td>\n",
              "      <td>0.800000</td>\n",
              "      <td>2.230769</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>18</th>\n",
              "      <td>19</td>\n",
              "      <td>Everton</td>\n",
              "      <td>13</td>\n",
              "      <td>4</td>\n",
              "      <td>2</td>\n",
              "      <td>7</td>\n",
              "      <td>14</td>\n",
              "      <td>20</td>\n",
              "      <td>-6</td>\n",
              "      <td>4</td>\n",
              "      <td>0.31</td>\n",
              "      <td>20.3</td>\n",
              "      <td>18.0</td>\n",
              "      <td>2.3</td>\n",
              "      <td>0.18</td>\n",
              "      <td>0.869565</td>\n",
              "      <td>1.561538</td>\n",
              "      <td>1.384615</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>19</th>\n",
              "      <td>20</td>\n",
              "      <td>Burnley</td>\n",
              "      <td>13</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>11</td>\n",
              "      <td>10</td>\n",
              "      <td>32</td>\n",
              "      <td>-22</td>\n",
              "      <td>4</td>\n",
              "      <td>0.31</td>\n",
              "      <td>11.2</td>\n",
              "      <td>22.9</td>\n",
              "      <td>-11.7</td>\n",
              "      <td>-0.90</td>\n",
              "      <td>0.017391</td>\n",
              "      <td>0.861538</td>\n",
              "      <td>1.761538</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-b9da764c-3f02-45b9-81db-53b58af0b6c3')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-b9da764c-3f02-45b9-81db-53b58af0b6c3 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-b9da764c-3f02-45b9-81db-53b58af0b6c3');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-f71881b7-f6e5-448c-86c0-f8894f835193\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-f71881b7-f6e5-448c-86c0-f8894f835193')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-f71881b7-f6e5-448c-86c0-f8894f835193 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 182
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "fig, ax = plt.subplots(1, figsize=(10,8))\n",
        "ax.scatter(x=epltablexGxGc['xG/90'],y=epltablexGxGc['xGA/90'],c='DarkBlue')\n",
        "# set labels\n",
        "ax.set_xlabel('xG/90')\n",
        "ax.set_ylabel('xGA/90')\n",
        "\n",
        "# annotate points in axis\n",
        "for idx, row in epltablexGxGc.iterrows():\n",
        "    ax.annotate(row['team'], (row['xG/90'], row['xGA/90']) )\n",
        "# force matplotlib to draw the graph\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 704
        },
        "id": "TYn5yVsCNlLv",
        "outputId": "1a630bca-d696-4e3a-9940-bbf7105be218"
      },
      "execution_count": 183,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1000x800 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "EPL_player_df"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 600
        },
        "id": "wrjHrDmJ8OlM",
        "outputId": "3d526b5d-7973-4480-bd5e-a139443c43b1"
      },
      "execution_count": 184,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "        id      player_name games_x time_x goals_1wks_x          xG_1wks_x  \\\n",
              "0     8260   Erling Haaland      13   1125           14  14.88079109787941   \n",
              "1     1250    Mohamed Salah      13   1155           10  8.706683784723282   \n",
              "2      453    Son Heung-Min      13   1109            8  5.040519125759602   \n",
              "3     1776     Jarrod Bowen      12   1080            8   5.48050481826067   \n",
              "4      468    Callum Wilson      10    475            7  7.311267621815205   \n",
              "..     ...              ...     ...    ...          ...                ...   \n",
              "473  12187     Jordan Clark       2     42            0                  0   \n",
              "474  12198    Ben Parkinson       1     18            0                  0   \n",
              "475  12199      Alex Murphy       1      1            0                  0   \n",
              "476  12200    Amadou Diallo       1      1            0                  0   \n",
              "477  12215  Michael Ndiweni       1      1            0                  0   \n",
              "\n",
              "    assists_1wks_x             xA_1wks_x shots_1wks_x key_passes_1wks_x  ...  \\\n",
              "0                3    2.7648311872035265           51                14  ...   \n",
              "1                5     6.265935506671667           38                29  ...   \n",
              "2                1     4.216130625456572           33                23  ...   \n",
              "3                1    1.9357469864189625           33                 9  ...   \n",
              "4                0  0.015900330618023872           21                 1  ...   \n",
              "..             ...                   ...          ...               ...  ...   \n",
              "473              0  0.028225945308804512            0                 1  ...   \n",
              "474              0                     0            0                 0  ...   \n",
              "475              0                     0            0                 0  ...   \n",
              "476              0                     0            0                 0  ...   \n",
              "477              0                     0            0                 0  ...   \n",
              "\n",
              "    shots_1wks_y key_passes_1wks_y yellow_cards red_cards position_y  \\\n",
              "0             51                14            0         0          F   \n",
              "1             38                29            1         0          F   \n",
              "2             33                23            0         0        F M   \n",
              "3             33                 9            1         0        F M   \n",
              "4             21                 1            1         0        F S   \n",
              "..           ...               ...          ...       ...        ...   \n",
              "473            0                 1            1         0          S   \n",
              "474            0                 0            0         0          S   \n",
              "475            0                 0            0         0          S   \n",
              "476            0                 0            0         0          S   \n",
              "477            0                 0            0         0          S   \n",
              "\n",
              "         team_title_y npg_1wks_y         npxG_1wks_y               xGChain  \\\n",
              "0     Manchester City         11  11.836115926504135     13.89440406113863   \n",
              "1           Liverpool          7   5.662082687020302    12.492922991514206   \n",
              "2           Tottenham          8   5.040519125759602    11.066001996397972   \n",
              "3            West Ham          8    5.48050481826067     5.945915225893259   \n",
              "4    Newcastle United          5  5.7889300510287285     6.403569312766194   \n",
              "..                ...        ...                 ...                   ...   \n",
              "473             Luton          0                   0  0.028225945308804512   \n",
              "474  Newcastle United          0                   0                     0   \n",
              "475  Newcastle United          0                   0                     0   \n",
              "476  Newcastle United          0                   0                     0   \n",
              "477  Newcastle United          0                   0                     0   \n",
              "\n",
              "              xGBuildup  \n",
              "0     1.295404177159071  \n",
              "1     3.551269993185997  \n",
              "2    3.0345652382820845  \n",
              "3    1.3222410827875137  \n",
              "4    0.8389131352305412  \n",
              "..                  ...  \n",
              "473                   0  \n",
              "474                   0  \n",
              "475                   0  \n",
              "476                   0  \n",
              "477                   0  \n",
              "\n",
              "[478 rows x 48 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-38d184fd-1104-47e6-9ef3-f5f9c3ce96c0\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>player_name</th>\n",
              "      <th>games_x</th>\n",
              "      <th>time_x</th>\n",
              "      <th>goals_1wks_x</th>\n",
              "      <th>xG_1wks_x</th>\n",
              "      <th>assists_1wks_x</th>\n",
              "      <th>xA_1wks_x</th>\n",
              "      <th>shots_1wks_x</th>\n",
              "      <th>key_passes_1wks_x</th>\n",
              "      <th>...</th>\n",
              "      <th>shots_1wks_y</th>\n",
              "      <th>key_passes_1wks_y</th>\n",
              "      <th>yellow_cards</th>\n",
              "      <th>red_cards</th>\n",
              "      <th>position_y</th>\n",
              "      <th>team_title_y</th>\n",
              "      <th>npg_1wks_y</th>\n",
              "      <th>npxG_1wks_y</th>\n",
              "      <th>xGChain</th>\n",
              "      <th>xGBuildup</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>8260</td>\n",
              "      <td>Erling Haaland</td>\n",
              "      <td>13</td>\n",
              "      <td>1125</td>\n",
              "      <td>14</td>\n",
              "      <td>14.88079109787941</td>\n",
              "      <td>3</td>\n",
              "      <td>2.7648311872035265</td>\n",
              "      <td>51</td>\n",
              "      <td>14</td>\n",
              "      <td>...</td>\n",
              "      <td>51</td>\n",
              "      <td>14</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>F</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>11</td>\n",
              "      <td>11.836115926504135</td>\n",
              "      <td>13.89440406113863</td>\n",
              "      <td>1.295404177159071</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>1250</td>\n",
              "      <td>Mohamed Salah</td>\n",
              "      <td>13</td>\n",
              "      <td>1155</td>\n",
              "      <td>10</td>\n",
              "      <td>8.706683784723282</td>\n",
              "      <td>5</td>\n",
              "      <td>6.265935506671667</td>\n",
              "      <td>38</td>\n",
              "      <td>29</td>\n",
              "      <td>...</td>\n",
              "      <td>38</td>\n",
              "      <td>29</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>F</td>\n",
              "      <td>Liverpool</td>\n",
              "      <td>7</td>\n",
              "      <td>5.662082687020302</td>\n",
              "      <td>12.492922991514206</td>\n",
              "      <td>3.551269993185997</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>453</td>\n",
              "      <td>Son Heung-Min</td>\n",
              "      <td>13</td>\n",
              "      <td>1109</td>\n",
              "      <td>8</td>\n",
              "      <td>5.040519125759602</td>\n",
              "      <td>1</td>\n",
              "      <td>4.216130625456572</td>\n",
              "      <td>33</td>\n",
              "      <td>23</td>\n",
              "      <td>...</td>\n",
              "      <td>33</td>\n",
              "      <td>23</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>F M</td>\n",
              "      <td>Tottenham</td>\n",
              "      <td>8</td>\n",
              "      <td>5.040519125759602</td>\n",
              "      <td>11.066001996397972</td>\n",
              "      <td>3.0345652382820845</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>1776</td>\n",
              "      <td>Jarrod Bowen</td>\n",
              "      <td>12</td>\n",
              "      <td>1080</td>\n",
              "      <td>8</td>\n",
              "      <td>5.48050481826067</td>\n",
              "      <td>1</td>\n",
              "      <td>1.9357469864189625</td>\n",
              "      <td>33</td>\n",
              "      <td>9</td>\n",
              "      <td>...</td>\n",
              "      <td>33</td>\n",
              "      <td>9</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>F M</td>\n",
              "      <td>West Ham</td>\n",
              "      <td>8</td>\n",
              "      <td>5.48050481826067</td>\n",
              "      <td>5.945915225893259</td>\n",
              "      <td>1.3222410827875137</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>468</td>\n",
              "      <td>Callum Wilson</td>\n",
              "      <td>10</td>\n",
              "      <td>475</td>\n",
              "      <td>7</td>\n",
              "      <td>7.311267621815205</td>\n",
              "      <td>0</td>\n",
              "      <td>0.015900330618023872</td>\n",
              "      <td>21</td>\n",
              "      <td>1</td>\n",
              "      <td>...</td>\n",
              "      <td>21</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>F S</td>\n",
              "      <td>Newcastle United</td>\n",
              "      <td>5</td>\n",
              "      <td>5.7889300510287285</td>\n",
              "      <td>6.403569312766194</td>\n",
              "      <td>0.8389131352305412</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>473</th>\n",
              "      <td>12187</td>\n",
              "      <td>Jordan Clark</td>\n",
              "      <td>2</td>\n",
              "      <td>42</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.028225945308804512</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>S</td>\n",
              "      <td>Luton</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.028225945308804512</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>474</th>\n",
              "      <td>12198</td>\n",
              "      <td>Ben Parkinson</td>\n",
              "      <td>1</td>\n",
              "      <td>18</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>S</td>\n",
              "      <td>Newcastle United</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>475</th>\n",
              "      <td>12199</td>\n",
              "      <td>Alex Murphy</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>S</td>\n",
              "      <td>Newcastle United</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>476</th>\n",
              "      <td>12200</td>\n",
              "      <td>Amadou Diallo</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>S</td>\n",
              "      <td>Newcastle United</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>477</th>\n",
              "      <td>12215</td>\n",
              "      <td>Michael Ndiweni</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>S</td>\n",
              "      <td>Newcastle United</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>478 rows × 48 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-38d184fd-1104-47e6-9ef3-f5f9c3ce96c0')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-38d184fd-1104-47e6-9ef3-f5f9c3ce96c0 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-38d184fd-1104-47e6-9ef3-f5f9c3ce96c0');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-3854c353-7e0f-462c-a4ed-dfd980643f6f\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-3854c353-7e0f-462c-a4ed-dfd980643f6f')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-3854c353-7e0f-462c-a4ed-dfd980643f6f button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 184
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "EPL_player_df['goals'] = EPL_player_df['goals_1wks_x'].astype(int)\n",
        "top25goals = EPL_player_df.nlargest(20, 'goals')\n",
        "top25goals"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "id": "3H-vTRXF8VDs",
        "outputId": "73b65654-f449-4996-a8cd-54765de1be9e"
      },
      "execution_count": 185,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "       id         player_name games_x time_x goals_1wks_x           xG_1wks_x  \\\n",
              "0    8260      Erling Haaland      13   1125           14   14.88079109787941   \n",
              "1    1250       Mohamed Salah      13   1155           10   8.706683784723282   \n",
              "2     453       Son Heung-Min      13   1109            8   5.040519125759602   \n",
              "3    1776        Jarrod Bowen      12   1080            8    5.48050481826067   \n",
              "4     468       Callum Wilson      10    475            7   7.311267621815205   \n",
              "5    5232      Alexander Isak       9    591            7   6.518754720687866   \n",
              "6    8845      Hee-Chan Hwang      13    875            7   4.612692050635815   \n",
              "7    8865       Ollie Watkins      13   1149            7   9.277923479676247   \n",
              "8    1679     Dominic Solanke      13   1168            6   6.955116488039494   \n",
              "9    6552        Bryan Mbeumo      13   1170            6   6.588169492781162   \n",
              "10  10048     Nicolas Jackson      12    920            6   8.140225995332003   \n",
              "11  10177       Evan Ferguson      12    681            6  2.5904888343065977   \n",
              "12    618     Raheem Sterling      13   1093            5   4.402203872799873   \n",
              "13   3697     Odsonne Edouard      12   1041            5   4.844922766089439   \n",
              "14   6122        Douglas Luiz      13   1138            5  2.9643095759674907   \n",
              "15   6482       Eddie Nketiah      13    810            5  3.8594862706959248   \n",
              "16   8150      Anthony Gordon      12    998            5  3.7157998085021973   \n",
              "17   1726  Abdoulaye Doucouré      13   1140            4   5.952106729149818   \n",
              "18   6854          Diogo Jota      12    653            4  3.5690857768058777   \n",
              "19   7322         Bukayo Saka      12   1052            4    4.65498449280858   \n",
              "\n",
              "   assists_1wks_x             xA_1wks_x shots_1wks_x key_passes_1wks_x  ...  \\\n",
              "0               3    2.7648311872035265           51                14  ...   \n",
              "1               5     6.265935506671667           38                29  ...   \n",
              "2               1     4.216130625456572           33                23  ...   \n",
              "3               1    1.9357469864189625           33                 9  ...   \n",
              "4               0  0.015900330618023872           21                 1  ...   \n",
              "5               0   0.43385306745767593           19                 4  ...   \n",
              "6               2    2.0519578084349632           21                11  ...   \n",
              "7               5    3.2038443852216005           39                21  ...   \n",
              "8               1    0.9574757218360901           37                13  ...   \n",
              "9               2     2.835478112101555           36                21  ...   \n",
              "10              0    0.7351047229021788           33                 7  ...   \n",
              "11              0    0.5592889748513699           19                 4  ...   \n",
              "12              1     2.019385777413845           26                15  ...   \n",
              "13              0    0.7302726833149791           33                10  ...   \n",
              "14              2    1.1565870121121407           20                16  ...   \n",
              "15              0   0.34161655977368355           26                 6  ...   \n",
              "16              3    2.7575689274817705           24                10  ...   \n",
              "17              0    1.7060724087059498           22                19  ...   \n",
              "18              0    0.5944908726960421           22                12  ...   \n",
              "19              5    4.2790472358465195           22                30  ...   \n",
              "\n",
              "   key_passes_1wks_y yellow_cards red_cards position_y  \\\n",
              "0                 14            0         0          F   \n",
              "1                 29            1         0          F   \n",
              "2                 23            0         0        F M   \n",
              "3                  9            1         0        F M   \n",
              "4                  1            1         0        F S   \n",
              "5                  4            0         0        F S   \n",
              "6                 11            3         0      F M S   \n",
              "7                 21            2         0          F   \n",
              "8                 13            1         0          F   \n",
              "9                 21            1         0          F   \n",
              "10                 7            7         0        F S   \n",
              "11                 4            1         0        F S   \n",
              "12                15            4         0      F M S   \n",
              "13                10            2         0          F   \n",
              "14                16            4         0          M   \n",
              "15                 6            2         0        F S   \n",
              "16                10            6         0        F S   \n",
              "17                19            4         0          M   \n",
              "18                12            1         1        F S   \n",
              "19                30            1         0          F   \n",
              "\n",
              "               team_title_y npg_1wks_y         npxG_1wks_y  \\\n",
              "0           Manchester City         11  11.836115926504135   \n",
              "1                 Liverpool          7   5.662082687020302   \n",
              "2                 Tottenham          8   5.040519125759602   \n",
              "3                  West Ham          8    5.48050481826067   \n",
              "4          Newcastle United          5  5.7889300510287285   \n",
              "5          Newcastle United          6   5.757585883140564   \n",
              "6   Wolverhampton Wanderers          6    3.85152318328619   \n",
              "7               Aston Villa          7   9.277923479676247   \n",
              "8               Bournemouth          6   6.955116488039494   \n",
              "9                 Brentford          4   5.065831758081913   \n",
              "10                  Chelsea          6   8.140225995332003   \n",
              "11                 Brighton          6  2.5904888343065977   \n",
              "12                  Chelsea          5   4.402203872799873   \n",
              "13           Crystal Palace          5   4.844922766089439   \n",
              "14              Aston Villa          2  0.6808030409738421   \n",
              "15                  Arsenal          5  3.8594862706959248   \n",
              "16         Newcastle United          5  3.7157998085021973   \n",
              "17                  Everton          4   5.952106729149818   \n",
              "18                Liverpool          4  3.5690857768058777   \n",
              "19                  Arsenal          2    3.13264686986804   \n",
              "\n",
              "               xGChain           xGBuildup goals  \n",
              "0    13.89440406113863   1.295404177159071    14  \n",
              "1   12.492922991514206   3.551269993185997    10  \n",
              "2   11.066001996397972  3.0345652382820845     8  \n",
              "3    5.945915225893259  1.3222410827875137     8  \n",
              "4    6.403569312766194  0.8389131352305412     7  \n",
              "5    6.248042970895767  1.1705408692359924     7  \n",
              "6    6.081193865276873  1.6883518742397428     7  \n",
              "7   13.212159842252731   1.670118359848857     7  \n",
              "8    7.233169615268707  0.8261969201266766     6  \n",
              "9    9.052301734685898  3.0184305533766747     6  \n",
              "10   9.027558777481318   1.306454386562109     6  \n",
              "11  4.9372129291296005   1.907409641891718     6  \n",
              "12    9.85867096669972   4.511902594938874     5  \n",
              "13   5.551751244813204  1.3722848035395145     5  \n",
              "14   7.596752915531397   7.015871906653047     5  \n",
              "15   3.784747324883938  0.5830877497792244     5  \n",
              "16   9.013151556253433  3.9081527683883905     5  \n",
              "17   7.417679753154516   3.023614801466465     4  \n",
              "18   6.243965208530426  3.3390522953122854     4  \n",
              "19   8.050511837005615    2.70930939540267     4  \n",
              "\n",
              "[20 rows x 49 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-1857f8db-4259-4b19-813b-9211569905b9\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>player_name</th>\n",
              "      <th>games_x</th>\n",
              "      <th>time_x</th>\n",
              "      <th>goals_1wks_x</th>\n",
              "      <th>xG_1wks_x</th>\n",
              "      <th>assists_1wks_x</th>\n",
              "      <th>xA_1wks_x</th>\n",
              "      <th>shots_1wks_x</th>\n",
              "      <th>key_passes_1wks_x</th>\n",
              "      <th>...</th>\n",
              "      <th>key_passes_1wks_y</th>\n",
              "      <th>yellow_cards</th>\n",
              "      <th>red_cards</th>\n",
              "      <th>position_y</th>\n",
              "      <th>team_title_y</th>\n",
              "      <th>npg_1wks_y</th>\n",
              "      <th>npxG_1wks_y</th>\n",
              "      <th>xGChain</th>\n",
              "      <th>xGBuildup</th>\n",
              "      <th>goals</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>8260</td>\n",
              "      <td>Erling Haaland</td>\n",
              "      <td>13</td>\n",
              "      <td>1125</td>\n",
              "      <td>14</td>\n",
              "      <td>14.88079109787941</td>\n",
              "      <td>3</td>\n",
              "      <td>2.7648311872035265</td>\n",
              "      <td>51</td>\n",
              "      <td>14</td>\n",
              "      <td>...</td>\n",
              "      <td>14</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>F</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>11</td>\n",
              "      <td>11.836115926504135</td>\n",
              "      <td>13.89440406113863</td>\n",
              "      <td>1.295404177159071</td>\n",
              "      <td>14</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>1250</td>\n",
              "      <td>Mohamed Salah</td>\n",
              "      <td>13</td>\n",
              "      <td>1155</td>\n",
              "      <td>10</td>\n",
              "      <td>8.706683784723282</td>\n",
              "      <td>5</td>\n",
              "      <td>6.265935506671667</td>\n",
              "      <td>38</td>\n",
              "      <td>29</td>\n",
              "      <td>...</td>\n",
              "      <td>29</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>F</td>\n",
              "      <td>Liverpool</td>\n",
              "      <td>7</td>\n",
              "      <td>5.662082687020302</td>\n",
              "      <td>12.492922991514206</td>\n",
              "      <td>3.551269993185997</td>\n",
              "      <td>10</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>453</td>\n",
              "      <td>Son Heung-Min</td>\n",
              "      <td>13</td>\n",
              "      <td>1109</td>\n",
              "      <td>8</td>\n",
              "      <td>5.040519125759602</td>\n",
              "      <td>1</td>\n",
              "      <td>4.216130625456572</td>\n",
              "      <td>33</td>\n",
              "      <td>23</td>\n",
              "      <td>...</td>\n",
              "      <td>23</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>F M</td>\n",
              "      <td>Tottenham</td>\n",
              "      <td>8</td>\n",
              "      <td>5.040519125759602</td>\n",
              "      <td>11.066001996397972</td>\n",
              "      <td>3.0345652382820845</td>\n",
              "      <td>8</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>1776</td>\n",
              "      <td>Jarrod Bowen</td>\n",
              "      <td>12</td>\n",
              "      <td>1080</td>\n",
              "      <td>8</td>\n",
              "      <td>5.48050481826067</td>\n",
              "      <td>1</td>\n",
              "      <td>1.9357469864189625</td>\n",
              "      <td>33</td>\n",
              "      <td>9</td>\n",
              "      <td>...</td>\n",
              "      <td>9</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>F M</td>\n",
              "      <td>West Ham</td>\n",
              "      <td>8</td>\n",
              "      <td>5.48050481826067</td>\n",
              "      <td>5.945915225893259</td>\n",
              "      <td>1.3222410827875137</td>\n",
              "      <td>8</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>468</td>\n",
              "      <td>Callum Wilson</td>\n",
              "      <td>10</td>\n",
              "      <td>475</td>\n",
              "      <td>7</td>\n",
              "      <td>7.311267621815205</td>\n",
              "      <td>0</td>\n",
              "      <td>0.015900330618023872</td>\n",
              "      <td>21</td>\n",
              "      <td>1</td>\n",
              "      <td>...</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>F S</td>\n",
              "      <td>Newcastle United</td>\n",
              "      <td>5</td>\n",
              "      <td>5.7889300510287285</td>\n",
              "      <td>6.403569312766194</td>\n",
              "      <td>0.8389131352305412</td>\n",
              "      <td>7</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>5232</td>\n",
              "      <td>Alexander Isak</td>\n",
              "      <td>9</td>\n",
              "      <td>591</td>\n",
              "      <td>7</td>\n",
              "      <td>6.518754720687866</td>\n",
              "      <td>0</td>\n",
              "      <td>0.43385306745767593</td>\n",
              "      <td>19</td>\n",
              "      <td>4</td>\n",
              "      <td>...</td>\n",
              "      <td>4</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>F S</td>\n",
              "      <td>Newcastle United</td>\n",
              "      <td>6</td>\n",
              "      <td>5.757585883140564</td>\n",
              "      <td>6.248042970895767</td>\n",
              "      <td>1.1705408692359924</td>\n",
              "      <td>7</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>8845</td>\n",
              "      <td>Hee-Chan Hwang</td>\n",
              "      <td>13</td>\n",
              "      <td>875</td>\n",
              "      <td>7</td>\n",
              "      <td>4.612692050635815</td>\n",
              "      <td>2</td>\n",
              "      <td>2.0519578084349632</td>\n",
              "      <td>21</td>\n",
              "      <td>11</td>\n",
              "      <td>...</td>\n",
              "      <td>11</td>\n",
              "      <td>3</td>\n",
              "      <td>0</td>\n",
              "      <td>F M S</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>6</td>\n",
              "      <td>3.85152318328619</td>\n",
              "      <td>6.081193865276873</td>\n",
              "      <td>1.6883518742397428</td>\n",
              "      <td>7</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>8865</td>\n",
              "      <td>Ollie Watkins</td>\n",
              "      <td>13</td>\n",
              "      <td>1149</td>\n",
              "      <td>7</td>\n",
              "      <td>9.277923479676247</td>\n",
              "      <td>5</td>\n",
              "      <td>3.2038443852216005</td>\n",
              "      <td>39</td>\n",
              "      <td>21</td>\n",
              "      <td>...</td>\n",
              "      <td>21</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>F</td>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>7</td>\n",
              "      <td>9.277923479676247</td>\n",
              "      <td>13.212159842252731</td>\n",
              "      <td>1.670118359848857</td>\n",
              "      <td>7</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>1679</td>\n",
              "      <td>Dominic Solanke</td>\n",
              "      <td>13</td>\n",
              "      <td>1168</td>\n",
              "      <td>6</td>\n",
              "      <td>6.955116488039494</td>\n",
              "      <td>1</td>\n",
              "      <td>0.9574757218360901</td>\n",
              "      <td>37</td>\n",
              "      <td>13</td>\n",
              "      <td>...</td>\n",
              "      <td>13</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>F</td>\n",
              "      <td>Bournemouth</td>\n",
              "      <td>6</td>\n",
              "      <td>6.955116488039494</td>\n",
              "      <td>7.233169615268707</td>\n",
              "      <td>0.8261969201266766</td>\n",
              "      <td>6</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>6552</td>\n",
              "      <td>Bryan Mbeumo</td>\n",
              "      <td>13</td>\n",
              "      <td>1170</td>\n",
              "      <td>6</td>\n",
              "      <td>6.588169492781162</td>\n",
              "      <td>2</td>\n",
              "      <td>2.835478112101555</td>\n",
              "      <td>36</td>\n",
              "      <td>21</td>\n",
              "      <td>...</td>\n",
              "      <td>21</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>F</td>\n",
              "      <td>Brentford</td>\n",
              "      <td>4</td>\n",
              "      <td>5.065831758081913</td>\n",
              "      <td>9.052301734685898</td>\n",
              "      <td>3.0184305533766747</td>\n",
              "      <td>6</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10</th>\n",
              "      <td>10048</td>\n",
              "      <td>Nicolas Jackson</td>\n",
              "      <td>12</td>\n",
              "      <td>920</td>\n",
              "      <td>6</td>\n",
              "      <td>8.140225995332003</td>\n",
              "      <td>0</td>\n",
              "      <td>0.7351047229021788</td>\n",
              "      <td>33</td>\n",
              "      <td>7</td>\n",
              "      <td>...</td>\n",
              "      <td>7</td>\n",
              "      <td>7</td>\n",
              "      <td>0</td>\n",
              "      <td>F S</td>\n",
              "      <td>Chelsea</td>\n",
              "      <td>6</td>\n",
              "      <td>8.140225995332003</td>\n",
              "      <td>9.027558777481318</td>\n",
              "      <td>1.306454386562109</td>\n",
              "      <td>6</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>11</th>\n",
              "      <td>10177</td>\n",
              "      <td>Evan Ferguson</td>\n",
              "      <td>12</td>\n",
              "      <td>681</td>\n",
              "      <td>6</td>\n",
              "      <td>2.5904888343065977</td>\n",
              "      <td>0</td>\n",
              "      <td>0.5592889748513699</td>\n",
              "      <td>19</td>\n",
              "      <td>4</td>\n",
              "      <td>...</td>\n",
              "      <td>4</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>F S</td>\n",
              "      <td>Brighton</td>\n",
              "      <td>6</td>\n",
              "      <td>2.5904888343065977</td>\n",
              "      <td>4.9372129291296005</td>\n",
              "      <td>1.907409641891718</td>\n",
              "      <td>6</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>12</th>\n",
              "      <td>618</td>\n",
              "      <td>Raheem Sterling</td>\n",
              "      <td>13</td>\n",
              "      <td>1093</td>\n",
              "      <td>5</td>\n",
              "      <td>4.402203872799873</td>\n",
              "      <td>1</td>\n",
              "      <td>2.019385777413845</td>\n",
              "      <td>26</td>\n",
              "      <td>15</td>\n",
              "      <td>...</td>\n",
              "      <td>15</td>\n",
              "      <td>4</td>\n",
              "      <td>0</td>\n",
              "      <td>F M S</td>\n",
              "      <td>Chelsea</td>\n",
              "      <td>5</td>\n",
              "      <td>4.402203872799873</td>\n",
              "      <td>9.85867096669972</td>\n",
              "      <td>4.511902594938874</td>\n",
              "      <td>5</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>13</th>\n",
              "      <td>3697</td>\n",
              "      <td>Odsonne Edouard</td>\n",
              "      <td>12</td>\n",
              "      <td>1041</td>\n",
              "      <td>5</td>\n",
              "      <td>4.844922766089439</td>\n",
              "      <td>0</td>\n",
              "      <td>0.7302726833149791</td>\n",
              "      <td>33</td>\n",
              "      <td>10</td>\n",
              "      <td>...</td>\n",
              "      <td>10</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>F</td>\n",
              "      <td>Crystal Palace</td>\n",
              "      <td>5</td>\n",
              "      <td>4.844922766089439</td>\n",
              "      <td>5.551751244813204</td>\n",
              "      <td>1.3722848035395145</td>\n",
              "      <td>5</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>14</th>\n",
              "      <td>6122</td>\n",
              "      <td>Douglas Luiz</td>\n",
              "      <td>13</td>\n",
              "      <td>1138</td>\n",
              "      <td>5</td>\n",
              "      <td>2.9643095759674907</td>\n",
              "      <td>2</td>\n",
              "      <td>1.1565870121121407</td>\n",
              "      <td>20</td>\n",
              "      <td>16</td>\n",
              "      <td>...</td>\n",
              "      <td>16</td>\n",
              "      <td>4</td>\n",
              "      <td>0</td>\n",
              "      <td>M</td>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>2</td>\n",
              "      <td>0.6808030409738421</td>\n",
              "      <td>7.596752915531397</td>\n",
              "      <td>7.015871906653047</td>\n",
              "      <td>5</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>15</th>\n",
              "      <td>6482</td>\n",
              "      <td>Eddie Nketiah</td>\n",
              "      <td>13</td>\n",
              "      <td>810</td>\n",
              "      <td>5</td>\n",
              "      <td>3.8594862706959248</td>\n",
              "      <td>0</td>\n",
              "      <td>0.34161655977368355</td>\n",
              "      <td>26</td>\n",
              "      <td>6</td>\n",
              "      <td>...</td>\n",
              "      <td>6</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>F S</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>5</td>\n",
              "      <td>3.8594862706959248</td>\n",
              "      <td>3.784747324883938</td>\n",
              "      <td>0.5830877497792244</td>\n",
              "      <td>5</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>16</th>\n",
              "      <td>8150</td>\n",
              "      <td>Anthony Gordon</td>\n",
              "      <td>12</td>\n",
              "      <td>998</td>\n",
              "      <td>5</td>\n",
              "      <td>3.7157998085021973</td>\n",
              "      <td>3</td>\n",
              "      <td>2.7575689274817705</td>\n",
              "      <td>24</td>\n",
              "      <td>10</td>\n",
              "      <td>...</td>\n",
              "      <td>10</td>\n",
              "      <td>6</td>\n",
              "      <td>0</td>\n",
              "      <td>F S</td>\n",
              "      <td>Newcastle United</td>\n",
              "      <td>5</td>\n",
              "      <td>3.7157998085021973</td>\n",
              "      <td>9.013151556253433</td>\n",
              "      <td>3.9081527683883905</td>\n",
              "      <td>5</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>17</th>\n",
              "      <td>1726</td>\n",
              "      <td>Abdoulaye Doucouré</td>\n",
              "      <td>13</td>\n",
              "      <td>1140</td>\n",
              "      <td>4</td>\n",
              "      <td>5.952106729149818</td>\n",
              "      <td>0</td>\n",
              "      <td>1.7060724087059498</td>\n",
              "      <td>22</td>\n",
              "      <td>19</td>\n",
              "      <td>...</td>\n",
              "      <td>19</td>\n",
              "      <td>4</td>\n",
              "      <td>0</td>\n",
              "      <td>M</td>\n",
              "      <td>Everton</td>\n",
              "      <td>4</td>\n",
              "      <td>5.952106729149818</td>\n",
              "      <td>7.417679753154516</td>\n",
              "      <td>3.023614801466465</td>\n",
              "      <td>4</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>18</th>\n",
              "      <td>6854</td>\n",
              "      <td>Diogo Jota</td>\n",
              "      <td>12</td>\n",
              "      <td>653</td>\n",
              "      <td>4</td>\n",
              "      <td>3.5690857768058777</td>\n",
              "      <td>0</td>\n",
              "      <td>0.5944908726960421</td>\n",
              "      <td>22</td>\n",
              "      <td>12</td>\n",
              "      <td>...</td>\n",
              "      <td>12</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>F S</td>\n",
              "      <td>Liverpool</td>\n",
              "      <td>4</td>\n",
              "      <td>3.5690857768058777</td>\n",
              "      <td>6.243965208530426</td>\n",
              "      <td>3.3390522953122854</td>\n",
              "      <td>4</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>19</th>\n",
              "      <td>7322</td>\n",
              "      <td>Bukayo Saka</td>\n",
              "      <td>12</td>\n",
              "      <td>1052</td>\n",
              "      <td>4</td>\n",
              "      <td>4.65498449280858</td>\n",
              "      <td>5</td>\n",
              "      <td>4.2790472358465195</td>\n",
              "      <td>22</td>\n",
              "      <td>30</td>\n",
              "      <td>...</td>\n",
              "      <td>30</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>F</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>2</td>\n",
              "      <td>3.13264686986804</td>\n",
              "      <td>8.050511837005615</td>\n",
              "      <td>2.70930939540267</td>\n",
              "      <td>4</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>20 rows × 49 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-1857f8db-4259-4b19-813b-9211569905b9')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-1857f8db-4259-4b19-813b-9211569905b9 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-1857f8db-4259-4b19-813b-9211569905b9');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-33d6a15a-e1a5-4f92-9b76-04ce57dc5d54\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-33d6a15a-e1a5-4f92-9b76-04ce57dc5d54')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-33d6a15a-e1a5-4f92-9b76-04ce57dc5d54 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 185
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "EPL_player_df['assists'] = EPL_player_df['assists_1wks_x'].astype(int)\n",
        "top25assists = EPL_player_df.nlargest(20, 'assists')\n",
        "top25assists"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "id": "QhNKarUM-fT7",
        "outputId": "4905c992-0c56-4a30-b999-8c526bd8a7e2"
      },
      "execution_count": 186,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "        id        player_name games_x time_x goals_1wks_x  \\\n",
              "119   6382         Pedro Neto      10    894            1   \n",
              "199    652    Kieran Trippier      13   1140            0   \n",
              "1     1250      Mohamed Salah      13   1155           10   \n",
              "7     8865      Ollie Watkins      13   1149            7   \n",
              "19    7322        Bukayo Saka      12   1052            4   \n",
              "40    6818     James Maddison      11    909            3   \n",
              "55     843  James Ward-Prowse      12   1068            2   \n",
              "73    8981        Jéremy Doku      10    666            2   \n",
              "24   10720       Darwin Núñez      12    679            4   \n",
              "350   8965    Vladimir Coufal      13   1169            0   \n",
              "352   9040    Conor Gallagher      13   1123            0   \n",
              "0     8260     Erling Haaland      13   1125           14   \n",
              "16    8150     Anthony Gordon      12    998            5   \n",
              "25   10846     Julián Álvarez      13   1101            4   \n",
              "27    1228    Bruno Fernandes      13   1170            3   \n",
              "30    3635     Bernardo Silva      10    816            3   \n",
              "32    5221        Leon Bailey      11    378            3   \n",
              "37    6055         Phil Foden      13   1010            3   \n",
              "38    6556       Moussa Diaby      13   1041            3   \n",
              "46    9524     Anthony Elanga      13    725            3   \n",
              "\n",
              "                xG_1wks_x assists_1wks_x           xA_1wks_x shots_1wks_x  \\\n",
              "119    1.8730668723583221              7  3.4589802250266075           18   \n",
              "199   0.11477751657366753              6   5.073987139388919            3   \n",
              "1       8.706683784723282              5   6.265935506671667           38   \n",
              "7       9.277923479676247              5  3.2038443852216005           39   \n",
              "19       4.65498449280858              5  4.2790472358465195           22   \n",
              "40      2.944616189226508              5  3.4641558043658733           27   \n",
              "55     2.0607726871967316              5  3.8961656652390957           15   \n",
              "73     0.9466327056288719              5   3.068725273013115           18   \n",
              "24      7.359475486911833              4  2.1155554791912436           39   \n",
              "350  0.014404140412807465              4   1.519345018081367            1   \n",
              "352    1.0631521213799715              4   2.381496151909232           14   \n",
              "0       14.88079109787941              3  2.7648311872035265           51   \n",
              "16     3.7157998085021973              3  2.7575689274817705           24   \n",
              "25     3.9068970754742622              3  2.1573563339188695           36   \n",
              "27     3.6944180503487587              3   5.169425847008824           36   \n",
              "30     1.1511792689561844              3  3.1397438794374466            7   \n",
              "32     2.5741285495460033              3  2.7243187725543976           14   \n",
              "37      3.218678206205368              3   2.296439189463854           28   \n",
              "38       2.77720919623971              3   4.879660665988922           26   \n",
              "46     1.5985217075794935              3  2.2472836449742317           18   \n",
              "\n",
              "    key_passes_1wks_x  ... yellow_cards red_cards position_y  \\\n",
              "119                24  ...            3         0        F M   \n",
              "199                36  ...            4         0          D   \n",
              "1                  29  ...            1         0          F   \n",
              "7                  21  ...            2         0          F   \n",
              "19                 30  ...            1         0          F   \n",
              "40                 31  ...            2         0          M   \n",
              "55                 30  ...            1         0          M   \n",
              "73                 19  ...            2         0      D M S   \n",
              "24                  8  ...            2         0        F S   \n",
              "350                15  ...            2         0          D   \n",
              "352                20  ...            1         0          M   \n",
              "0                  14  ...            0         0          F   \n",
              "16                 10  ...            6         0        F S   \n",
              "25                 29  ...            2         0        F M   \n",
              "27                 35  ...            4         0          M   \n",
              "30                 20  ...            3         0        M S   \n",
              "32                 10  ...            1         0        M S   \n",
              "37                 24  ...            1         0      F M S   \n",
              "38                 23  ...            0         0        F M   \n",
              "46                  9  ...            1         0      F M S   \n",
              "\n",
              "                team_title_y npg_1wks_y           npxG_1wks_y  \\\n",
              "119  Wolverhampton Wanderers          1    1.8730668723583221   \n",
              "199         Newcastle United          0   0.11477751657366753   \n",
              "1                  Liverpool          7     5.662082687020302   \n",
              "7                Aston Villa          7     9.277923479676247   \n",
              "19                   Arsenal          2      3.13264686986804   \n",
              "40                 Tottenham          3     2.944616189226508   \n",
              "55                  West Ham          2    2.0607726871967316   \n",
              "73           Manchester City          2    0.9466327056288719   \n",
              "24                 Liverpool          4     7.359475486911833   \n",
              "350                 West Ham          0  0.014404140412807465   \n",
              "352                  Chelsea          0    1.0631521213799715   \n",
              "0            Manchester City         11    11.836115926504135   \n",
              "16          Newcastle United          5    3.7157998085021973   \n",
              "25           Manchester City          4    3.9068970754742622   \n",
              "27         Manchester United          2    2.9332491531968117   \n",
              "30           Manchester City          3    1.1511792689561844   \n",
              "32               Aston Villa          3    2.5741285495460033   \n",
              "37           Manchester City          3     3.218678206205368   \n",
              "38               Aston Villa          3      2.77720919623971   \n",
              "46         Nottingham Forest          3    1.5985217075794935   \n",
              "\n",
              "                xGChain           xGBuildup goals assists  \n",
              "119   4.809771712869406  1.1124582178890705     1       7  \n",
              "199   9.724929872900248  7.1350615955889225     0       6  \n",
              "1    12.492922991514206   3.551269993185997    10       5  \n",
              "7    13.212159842252731   1.670118359848857     7       5  \n",
              "19    8.050511837005615    2.70930939540267     4       5  \n",
              "40     9.78583274781704   5.331316661089659     3       5  \n",
              "55   5.7050023674964905   3.616361541673541     2       5  \n",
              "73    4.893425643444061  2.0440204814076424     2       5  \n",
              "24    9.754888013005257   1.656997974961996     4       4  \n",
              "350   3.199686076492071  2.6809449046850204     0       4  \n",
              "352    7.68899704515934   5.728670530021191     0       4  \n",
              "0     13.89440406113863   1.295404177159071    14       3  \n",
              "16    9.013151556253433  3.9081527683883905     5       3  \n",
              "25    9.986372016370296   6.039043083786964     4       3  \n",
              "27    8.030286997556686   4.488965690135956     3       3  \n",
              "30    8.386326586827636   5.791346138343215     3       3  \n",
              "32    6.043852217495441  2.1998466700315475     3       3  \n",
              "37    8.753941342234612    4.75974670983851     3       3  \n",
              "38   10.042164698243141   4.817580400034785     3       3  \n",
              "46    4.627116419374943  1.3482240736484528     3       3  \n",
              "\n",
              "[20 rows x 50 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-c94db139-882c-480b-90fe-26b2486092f2\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>player_name</th>\n",
              "      <th>games_x</th>\n",
              "      <th>time_x</th>\n",
              "      <th>goals_1wks_x</th>\n",
              "      <th>xG_1wks_x</th>\n",
              "      <th>assists_1wks_x</th>\n",
              "      <th>xA_1wks_x</th>\n",
              "      <th>shots_1wks_x</th>\n",
              "      <th>key_passes_1wks_x</th>\n",
              "      <th>...</th>\n",
              "      <th>yellow_cards</th>\n",
              "      <th>red_cards</th>\n",
              "      <th>position_y</th>\n",
              "      <th>team_title_y</th>\n",
              "      <th>npg_1wks_y</th>\n",
              "      <th>npxG_1wks_y</th>\n",
              "      <th>xGChain</th>\n",
              "      <th>xGBuildup</th>\n",
              "      <th>goals</th>\n",
              "      <th>assists</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>119</th>\n",
              "      <td>6382</td>\n",
              "      <td>Pedro Neto</td>\n",
              "      <td>10</td>\n",
              "      <td>894</td>\n",
              "      <td>1</td>\n",
              "      <td>1.8730668723583221</td>\n",
              "      <td>7</td>\n",
              "      <td>3.4589802250266075</td>\n",
              "      <td>18</td>\n",
              "      <td>24</td>\n",
              "      <td>...</td>\n",
              "      <td>3</td>\n",
              "      <td>0</td>\n",
              "      <td>F M</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>1</td>\n",
              "      <td>1.8730668723583221</td>\n",
              "      <td>4.809771712869406</td>\n",
              "      <td>1.1124582178890705</td>\n",
              "      <td>1</td>\n",
              "      <td>7</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>199</th>\n",
              "      <td>652</td>\n",
              "      <td>Kieran Trippier</td>\n",
              "      <td>13</td>\n",
              "      <td>1140</td>\n",
              "      <td>0</td>\n",
              "      <td>0.11477751657366753</td>\n",
              "      <td>6</td>\n",
              "      <td>5.073987139388919</td>\n",
              "      <td>3</td>\n",
              "      <td>36</td>\n",
              "      <td>...</td>\n",
              "      <td>4</td>\n",
              "      <td>0</td>\n",
              "      <td>D</td>\n",
              "      <td>Newcastle United</td>\n",
              "      <td>0</td>\n",
              "      <td>0.11477751657366753</td>\n",
              "      <td>9.724929872900248</td>\n",
              "      <td>7.1350615955889225</td>\n",
              "      <td>0</td>\n",
              "      <td>6</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>1250</td>\n",
              "      <td>Mohamed Salah</td>\n",
              "      <td>13</td>\n",
              "      <td>1155</td>\n",
              "      <td>10</td>\n",
              "      <td>8.706683784723282</td>\n",
              "      <td>5</td>\n",
              "      <td>6.265935506671667</td>\n",
              "      <td>38</td>\n",
              "      <td>29</td>\n",
              "      <td>...</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>F</td>\n",
              "      <td>Liverpool</td>\n",
              "      <td>7</td>\n",
              "      <td>5.662082687020302</td>\n",
              "      <td>12.492922991514206</td>\n",
              "      <td>3.551269993185997</td>\n",
              "      <td>10</td>\n",
              "      <td>5</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>8865</td>\n",
              "      <td>Ollie Watkins</td>\n",
              "      <td>13</td>\n",
              "      <td>1149</td>\n",
              "      <td>7</td>\n",
              "      <td>9.277923479676247</td>\n",
              "      <td>5</td>\n",
              "      <td>3.2038443852216005</td>\n",
              "      <td>39</td>\n",
              "      <td>21</td>\n",
              "      <td>...</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>F</td>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>7</td>\n",
              "      <td>9.277923479676247</td>\n",
              "      <td>13.212159842252731</td>\n",
              "      <td>1.670118359848857</td>\n",
              "      <td>7</td>\n",
              "      <td>5</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>19</th>\n",
              "      <td>7322</td>\n",
              "      <td>Bukayo Saka</td>\n",
              "      <td>12</td>\n",
              "      <td>1052</td>\n",
              "      <td>4</td>\n",
              "      <td>4.65498449280858</td>\n",
              "      <td>5</td>\n",
              "      <td>4.2790472358465195</td>\n",
              "      <td>22</td>\n",
              "      <td>30</td>\n",
              "      <td>...</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>F</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>2</td>\n",
              "      <td>3.13264686986804</td>\n",
              "      <td>8.050511837005615</td>\n",
              "      <td>2.70930939540267</td>\n",
              "      <td>4</td>\n",
              "      <td>5</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>40</th>\n",
              "      <td>6818</td>\n",
              "      <td>James Maddison</td>\n",
              "      <td>11</td>\n",
              "      <td>909</td>\n",
              "      <td>3</td>\n",
              "      <td>2.944616189226508</td>\n",
              "      <td>5</td>\n",
              "      <td>3.4641558043658733</td>\n",
              "      <td>27</td>\n",
              "      <td>31</td>\n",
              "      <td>...</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>M</td>\n",
              "      <td>Tottenham</td>\n",
              "      <td>3</td>\n",
              "      <td>2.944616189226508</td>\n",
              "      <td>9.78583274781704</td>\n",
              "      <td>5.331316661089659</td>\n",
              "      <td>3</td>\n",
              "      <td>5</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>55</th>\n",
              "      <td>843</td>\n",
              "      <td>James Ward-Prowse</td>\n",
              "      <td>12</td>\n",
              "      <td>1068</td>\n",
              "      <td>2</td>\n",
              "      <td>2.0607726871967316</td>\n",
              "      <td>5</td>\n",
              "      <td>3.8961656652390957</td>\n",
              "      <td>15</td>\n",
              "      <td>30</td>\n",
              "      <td>...</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>M</td>\n",
              "      <td>West Ham</td>\n",
              "      <td>2</td>\n",
              "      <td>2.0607726871967316</td>\n",
              "      <td>5.7050023674964905</td>\n",
              "      <td>3.616361541673541</td>\n",
              "      <td>2</td>\n",
              "      <td>5</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>73</th>\n",
              "      <td>8981</td>\n",
              "      <td>Jéremy Doku</td>\n",
              "      <td>10</td>\n",
              "      <td>666</td>\n",
              "      <td>2</td>\n",
              "      <td>0.9466327056288719</td>\n",
              "      <td>5</td>\n",
              "      <td>3.068725273013115</td>\n",
              "      <td>18</td>\n",
              "      <td>19</td>\n",
              "      <td>...</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>D M S</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>2</td>\n",
              "      <td>0.9466327056288719</td>\n",
              "      <td>4.893425643444061</td>\n",
              "      <td>2.0440204814076424</td>\n",
              "      <td>2</td>\n",
              "      <td>5</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>24</th>\n",
              "      <td>10720</td>\n",
              "      <td>Darwin Núñez</td>\n",
              "      <td>12</td>\n",
              "      <td>679</td>\n",
              "      <td>4</td>\n",
              "      <td>7.359475486911833</td>\n",
              "      <td>4</td>\n",
              "      <td>2.1155554791912436</td>\n",
              "      <td>39</td>\n",
              "      <td>8</td>\n",
              "      <td>...</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>F S</td>\n",
              "      <td>Liverpool</td>\n",
              "      <td>4</td>\n",
              "      <td>7.359475486911833</td>\n",
              "      <td>9.754888013005257</td>\n",
              "      <td>1.656997974961996</td>\n",
              "      <td>4</td>\n",
              "      <td>4</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>350</th>\n",
              "      <td>8965</td>\n",
              "      <td>Vladimir Coufal</td>\n",
              "      <td>13</td>\n",
              "      <td>1169</td>\n",
              "      <td>0</td>\n",
              "      <td>0.014404140412807465</td>\n",
              "      <td>4</td>\n",
              "      <td>1.519345018081367</td>\n",
              "      <td>1</td>\n",
              "      <td>15</td>\n",
              "      <td>...</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>D</td>\n",
              "      <td>West Ham</td>\n",
              "      <td>0</td>\n",
              "      <td>0.014404140412807465</td>\n",
              "      <td>3.199686076492071</td>\n",
              "      <td>2.6809449046850204</td>\n",
              "      <td>0</td>\n",
              "      <td>4</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>352</th>\n",
              "      <td>9040</td>\n",
              "      <td>Conor Gallagher</td>\n",
              "      <td>13</td>\n",
              "      <td>1123</td>\n",
              "      <td>0</td>\n",
              "      <td>1.0631521213799715</td>\n",
              "      <td>4</td>\n",
              "      <td>2.381496151909232</td>\n",
              "      <td>14</td>\n",
              "      <td>20</td>\n",
              "      <td>...</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>M</td>\n",
              "      <td>Chelsea</td>\n",
              "      <td>0</td>\n",
              "      <td>1.0631521213799715</td>\n",
              "      <td>7.68899704515934</td>\n",
              "      <td>5.728670530021191</td>\n",
              "      <td>0</td>\n",
              "      <td>4</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>8260</td>\n",
              "      <td>Erling Haaland</td>\n",
              "      <td>13</td>\n",
              "      <td>1125</td>\n",
              "      <td>14</td>\n",
              "      <td>14.88079109787941</td>\n",
              "      <td>3</td>\n",
              "      <td>2.7648311872035265</td>\n",
              "      <td>51</td>\n",
              "      <td>14</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>F</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>11</td>\n",
              "      <td>11.836115926504135</td>\n",
              "      <td>13.89440406113863</td>\n",
              "      <td>1.295404177159071</td>\n",
              "      <td>14</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>16</th>\n",
              "      <td>8150</td>\n",
              "      <td>Anthony Gordon</td>\n",
              "      <td>12</td>\n",
              "      <td>998</td>\n",
              "      <td>5</td>\n",
              "      <td>3.7157998085021973</td>\n",
              "      <td>3</td>\n",
              "      <td>2.7575689274817705</td>\n",
              "      <td>24</td>\n",
              "      <td>10</td>\n",
              "      <td>...</td>\n",
              "      <td>6</td>\n",
              "      <td>0</td>\n",
              "      <td>F S</td>\n",
              "      <td>Newcastle United</td>\n",
              "      <td>5</td>\n",
              "      <td>3.7157998085021973</td>\n",
              "      <td>9.013151556253433</td>\n",
              "      <td>3.9081527683883905</td>\n",
              "      <td>5</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>25</th>\n",
              "      <td>10846</td>\n",
              "      <td>Julián Álvarez</td>\n",
              "      <td>13</td>\n",
              "      <td>1101</td>\n",
              "      <td>4</td>\n",
              "      <td>3.9068970754742622</td>\n",
              "      <td>3</td>\n",
              "      <td>2.1573563339188695</td>\n",
              "      <td>36</td>\n",
              "      <td>29</td>\n",
              "      <td>...</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>F M</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>4</td>\n",
              "      <td>3.9068970754742622</td>\n",
              "      <td>9.986372016370296</td>\n",
              "      <td>6.039043083786964</td>\n",
              "      <td>4</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>27</th>\n",
              "      <td>1228</td>\n",
              "      <td>Bruno Fernandes</td>\n",
              "      <td>13</td>\n",
              "      <td>1170</td>\n",
              "      <td>3</td>\n",
              "      <td>3.6944180503487587</td>\n",
              "      <td>3</td>\n",
              "      <td>5.169425847008824</td>\n",
              "      <td>36</td>\n",
              "      <td>35</td>\n",
              "      <td>...</td>\n",
              "      <td>4</td>\n",
              "      <td>0</td>\n",
              "      <td>M</td>\n",
              "      <td>Manchester United</td>\n",
              "      <td>2</td>\n",
              "      <td>2.9332491531968117</td>\n",
              "      <td>8.030286997556686</td>\n",
              "      <td>4.488965690135956</td>\n",
              "      <td>3</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>30</th>\n",
              "      <td>3635</td>\n",
              "      <td>Bernardo Silva</td>\n",
              "      <td>10</td>\n",
              "      <td>816</td>\n",
              "      <td>3</td>\n",
              "      <td>1.1511792689561844</td>\n",
              "      <td>3</td>\n",
              "      <td>3.1397438794374466</td>\n",
              "      <td>7</td>\n",
              "      <td>20</td>\n",
              "      <td>...</td>\n",
              "      <td>3</td>\n",
              "      <td>0</td>\n",
              "      <td>M S</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>3</td>\n",
              "      <td>1.1511792689561844</td>\n",
              "      <td>8.386326586827636</td>\n",
              "      <td>5.791346138343215</td>\n",
              "      <td>3</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>32</th>\n",
              "      <td>5221</td>\n",
              "      <td>Leon Bailey</td>\n",
              "      <td>11</td>\n",
              "      <td>378</td>\n",
              "      <td>3</td>\n",
              "      <td>2.5741285495460033</td>\n",
              "      <td>3</td>\n",
              "      <td>2.7243187725543976</td>\n",
              "      <td>14</td>\n",
              "      <td>10</td>\n",
              "      <td>...</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>M S</td>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>3</td>\n",
              "      <td>2.5741285495460033</td>\n",
              "      <td>6.043852217495441</td>\n",
              "      <td>2.1998466700315475</td>\n",
              "      <td>3</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>37</th>\n",
              "      <td>6055</td>\n",
              "      <td>Phil Foden</td>\n",
              "      <td>13</td>\n",
              "      <td>1010</td>\n",
              "      <td>3</td>\n",
              "      <td>3.218678206205368</td>\n",
              "      <td>3</td>\n",
              "      <td>2.296439189463854</td>\n",
              "      <td>28</td>\n",
              "      <td>24</td>\n",
              "      <td>...</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>F M S</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>3</td>\n",
              "      <td>3.218678206205368</td>\n",
              "      <td>8.753941342234612</td>\n",
              "      <td>4.75974670983851</td>\n",
              "      <td>3</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>38</th>\n",
              "      <td>6556</td>\n",
              "      <td>Moussa Diaby</td>\n",
              "      <td>13</td>\n",
              "      <td>1041</td>\n",
              "      <td>3</td>\n",
              "      <td>2.77720919623971</td>\n",
              "      <td>3</td>\n",
              "      <td>4.879660665988922</td>\n",
              "      <td>26</td>\n",
              "      <td>23</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>F M</td>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>3</td>\n",
              "      <td>2.77720919623971</td>\n",
              "      <td>10.042164698243141</td>\n",
              "      <td>4.817580400034785</td>\n",
              "      <td>3</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>46</th>\n",
              "      <td>9524</td>\n",
              "      <td>Anthony Elanga</td>\n",
              "      <td>13</td>\n",
              "      <td>725</td>\n",
              "      <td>3</td>\n",
              "      <td>1.5985217075794935</td>\n",
              "      <td>3</td>\n",
              "      <td>2.2472836449742317</td>\n",
              "      <td>18</td>\n",
              "      <td>9</td>\n",
              "      <td>...</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>F M S</td>\n",
              "      <td>Nottingham Forest</td>\n",
              "      <td>3</td>\n",
              "      <td>1.5985217075794935</td>\n",
              "      <td>4.627116419374943</td>\n",
              "      <td>1.3482240736484528</td>\n",
              "      <td>3</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>20 rows × 50 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-c94db139-882c-480b-90fe-26b2486092f2')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-c94db139-882c-480b-90fe-26b2486092f2 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-c94db139-882c-480b-90fe-26b2486092f2');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-f17dabc6-74b8-4c31-acd4-f74c2fc6abc9\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-f17dabc6-74b8-4c31-acd4-f74c2fc6abc9')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-f17dabc6-74b8-4c31-acd4-f74c2fc6abc9 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 186
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import pandas as pd\n",
        "import plotly.express as px\n",
        "import plotly.graph_objects as go"
      ],
      "metadata": {
        "id": "t81EQEbg_2jQ"
      },
      "execution_count": 187,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "fig3= go.Figure()\n",
        "fig3.add_trace(go.Scatter(x = top25goals[\"goals\"],\n",
        "                          y = top25goals[\"player_name\"],\n",
        "                          mode = 'markers',\n",
        "                          marker_color = 'darkblue',\n",
        "                          marker_size = 10,\n",
        "                          name = 'goals'))\n",
        "fig3.add_trace(go.Scatter(x = top25goals[\"xG_1wks_x\"],\n",
        "                          y = top25goals[\"player_name\"],\n",
        "                          mode = 'markers',\n",
        "                          marker_color = 'darkorange',\n",
        "                          marker_size = 10,\n",
        "                          name = 'xG'))\n",
        "for i in range(0, len(top25goals)):\n",
        "               fig3.add_shape(type='line',\n",
        "                              x0 = top25goals[\"goals\"][i],\n",
        "                              y0 = i,\n",
        "                              x1 = top25goals[\"xG_1wks_x\"][i],\n",
        "                              y1 = i,\n",
        "                              line=dict(color='crimson', width = 3))\n",
        "fig3.update_layout(title_text =\n",
        "                    \"Goals vs xG\",\n",
        "                    title_font_size = 30)\n",
        "fig3.update_xaxes(range=[0, 30])\n",
        "fig3.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 542
        },
        "id": "pCjmRmyw-6sd",
        "outputId": "20456874-9d63-4f56-ab6f-41a90e04ce88"
      },
      "execution_count": 188,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<html>\n",
              "<head><meta charset=\"utf-8\" /></head>\n",
              "<body>\n",
              "    <div>            <script src=\"https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.5/MathJax.js?config=TeX-AMS-MML_SVG\"></script><script type=\"text/javascript\">if (window.MathJax && window.MathJax.Hub && window.MathJax.Hub.Config) {window.MathJax.Hub.Config({SVG: {font: \"STIX-Web\"}});}</script>                <script type=\"text/javascript\">window.PlotlyConfig = {MathJaxConfig: 'local'};</script>\n",
              "        <script charset=\"utf-8\" src=\"https://cdn.plot.ly/plotly-2.24.1.min.js\"></script>                <div id=\"a5a57ead-0221-4d5d-8a0b-7bd17c6cf06f\" class=\"plotly-graph-div\" style=\"height:525px; width:100%;\"></div>            <script type=\"text/javascript\">                                    window.PLOTLYENV=window.PLOTLYENV || {};                                    if (document.getElementById(\"a5a57ead-0221-4d5d-8a0b-7bd17c6cf06f\")) {                    Plotly.newPlot(                        \"a5a57ead-0221-4d5d-8a0b-7bd17c6cf06f\",                        [{\"marker\":{\"color\":\"darkblue\",\"size\":10},\"mode\":\"markers\",\"name\":\"goals\",\"x\":[14,10,8,8,7,7,7,7,6,6,6,6,5,5,5,5,5,4,4,4],\"y\":[\"Erling Haaland\",\"Mohamed Salah\",\"Son Heung-Min\",\"Jarrod Bowen\",\"Callum Wilson\",\"Alexander Isak\",\"Hee-Chan Hwang\",\"Ollie Watkins\",\"Dominic Solanke\",\"Bryan Mbeumo\",\"Nicolas Jackson\",\"Evan Ferguson\",\"Raheem Sterling\",\"Odsonne Edouard\",\"Douglas Luiz\",\"Eddie Nketiah\",\"Anthony Gordon\",\"Abdoulaye Doucour\\u00e9\",\"Diogo Jota\",\"Bukayo Saka\"],\"type\":\"scatter\"},{\"marker\":{\"color\":\"darkorange\",\"size\":10},\"mode\":\"markers\",\"name\":\"xG\",\"x\":[\"14.88079109787941\",\"8.706683784723282\",\"5.040519125759602\",\"5.48050481826067\",\"7.311267621815205\",\"6.518754720687866\",\"4.612692050635815\",\"9.277923479676247\",\"6.955116488039494\",\"6.588169492781162\",\"8.140225995332003\",\"2.5904888343065977\",\"4.402203872799873\",\"4.844922766089439\",\"2.9643095759674907\",\"3.8594862706959248\",\"3.7157998085021973\",\"5.952106729149818\",\"3.5690857768058777\",\"4.65498449280858\"],\"y\":[\"Erling Haaland\",\"Mohamed Salah\",\"Son Heung-Min\",\"Jarrod Bowen\",\"Callum Wilson\",\"Alexander Isak\",\"Hee-Chan Hwang\",\"Ollie Watkins\",\"Dominic Solanke\",\"Bryan Mbeumo\",\"Nicolas Jackson\",\"Evan Ferguson\",\"Raheem Sterling\",\"Odsonne Edouard\",\"Douglas Luiz\",\"Eddie Nketiah\",\"Anthony Gordon\",\"Abdoulaye Doucour\\u00e9\",\"Diogo Jota\",\"Bukayo Saka\"],\"type\":\"scatter\"}],                        {\"template\":{\"data\":{\"histogram2dcontour\":[{\"type\":\"histogram2dcontour\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"choropleth\":[{\"type\":\"choropleth\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"histogram2d\":[{\"type\":\"histogram2d\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"heatmap\":[{\"type\":\"heatmap\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"heatmapgl\":[{\"type\":\"heatmapgl\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"contourcarpet\":[{\"type\":\"contourcarpet\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"contour\":[{\"type\":\"contour\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"surface\":[{\"type\":\"surface\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"mesh3d\":[{\"type\":\"mesh3d\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"scatter\":[{\"fillpattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2},\"type\":\"scatter\"}],\"parcoords\":[{\"type\":\"parcoords\",\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterpolargl\":[{\"type\":\"scatterpolargl\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"bar\":[{\"error_x\":{\"color\":\"#2a3f5f\"},\"error_y\":{\"color\":\"#2a3f5f\"},\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"bar\"}],\"scattergeo\":[{\"type\":\"scattergeo\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterpolar\":[{\"type\":\"scatterpolar\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"histogram\":[{\"marker\":{\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"histogram\"}],\"scattergl\":[{\"type\":\"scattergl\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatter3d\":[{\"type\":\"scatter3d\",\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scattermapbox\":[{\"type\":\"scattermapbox\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterternary\":[{\"type\":\"scatterternary\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scattercarpet\":[{\"type\":\"scattercarpet\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"carpet\":[{\"aaxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"baxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"type\":\"carpet\"}],\"table\":[{\"cells\":{\"fill\":{\"color\":\"#EBF0F8\"},\"line\":{\"color\":\"white\"}},\"header\":{\"fill\":{\"color\":\"#C8D4E3\"},\"line\":{\"color\":\"white\"}},\"type\":\"table\"}],\"barpolar\":[{\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"barpolar\"}],\"pie\":[{\"automargin\":true,\"type\":\"pie\"}]},\"layout\":{\"autotypenumbers\":\"strict\",\"colorway\":[\"#636efa\",\"#EF553B\",\"#00cc96\",\"#ab63fa\",\"#FFA15A\",\"#19d3f3\",\"#FF6692\",\"#B6E880\",\"#FF97FF\",\"#FECB52\"],\"font\":{\"color\":\"#2a3f5f\"},\"hovermode\":\"closest\",\"hoverlabel\":{\"align\":\"left\"},\"paper_bgcolor\":\"white\",\"plot_bgcolor\":\"#E5ECF6\",\"polar\":{\"bgcolor\":\"#E5ECF6\",\"angularaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"radialaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"ternary\":{\"bgcolor\":\"#E5ECF6\",\"aaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"baxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"caxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"coloraxis\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"colorscale\":{\"sequential\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"sequentialminus\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"diverging\":[[0,\"#8e0152\"],[0.1,\"#c51b7d\"],[0.2,\"#de77ae\"],[0.3,\"#f1b6da\"],[0.4,\"#fde0ef\"],[0.5,\"#f7f7f7\"],[0.6,\"#e6f5d0\"],[0.7,\"#b8e186\"],[0.8,\"#7fbc41\"],[0.9,\"#4d9221\"],[1,\"#276419\"]]},\"xaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"automargin\":true,\"zerolinewidth\":2},\"yaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"automargin\":true,\"zerolinewidth\":2},\"scene\":{\"xaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2},\"yaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2},\"zaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2}},\"shapedefaults\":{\"line\":{\"color\":\"#2a3f5f\"}},\"annotationdefaults\":{\"arrowcolor\":\"#2a3f5f\",\"arrowhead\":0,\"arrowwidth\":1},\"geo\":{\"bgcolor\":\"white\",\"landcolor\":\"#E5ECF6\",\"subunitcolor\":\"white\",\"showland\":true,\"showlakes\":true,\"lakecolor\":\"white\"},\"title\":{\"x\":0.05},\"mapbox\":{\"style\":\"light\"}}},\"shapes\":[{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":14,\"x1\":\"14.88079109787941\",\"y0\":0,\"y1\":0},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":10,\"x1\":\"8.706683784723282\",\"y0\":1,\"y1\":1},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":8,\"x1\":\"5.040519125759602\",\"y0\":2,\"y1\":2},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":8,\"x1\":\"5.48050481826067\",\"y0\":3,\"y1\":3},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":7,\"x1\":\"7.311267621815205\",\"y0\":4,\"y1\":4},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":7,\"x1\":\"6.518754720687866\",\"y0\":5,\"y1\":5},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":7,\"x1\":\"4.612692050635815\",\"y0\":6,\"y1\":6},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":7,\"x1\":\"9.277923479676247\",\"y0\":7,\"y1\":7},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":6,\"x1\":\"6.955116488039494\",\"y0\":8,\"y1\":8},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":6,\"x1\":\"6.588169492781162\",\"y0\":9,\"y1\":9},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":6,\"x1\":\"8.140225995332003\",\"y0\":10,\"y1\":10},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":6,\"x1\":\"2.5904888343065977\",\"y0\":11,\"y1\":11},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":5,\"x1\":\"4.402203872799873\",\"y0\":12,\"y1\":12},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":5,\"x1\":\"4.844922766089439\",\"y0\":13,\"y1\":13},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":5,\"x1\":\"2.9643095759674907\",\"y0\":14,\"y1\":14},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":5,\"x1\":\"3.8594862706959248\",\"y0\":15,\"y1\":15},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":5,\"x1\":\"3.7157998085021973\",\"y0\":16,\"y1\":16},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":4,\"x1\":\"5.952106729149818\",\"y0\":17,\"y1\":17},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":4,\"x1\":\"3.5690857768058777\",\"y0\":18,\"y1\":18},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":4,\"x1\":\"4.65498449280858\",\"y0\":19,\"y1\":19}],\"title\":{\"font\":{\"size\":30},\"text\":\"Goals vs xG\"},\"xaxis\":{\"range\":[0,30]}},                        {\"responsive\": true}                    ).then(function(){\n",
              "                            \n",
              "var gd = document.getElementById('a5a57ead-0221-4d5d-8a0b-7bd17c6cf06f');\n",
              "var x = new MutationObserver(function (mutations, observer) {{\n",
              "        var display = window.getComputedStyle(gd).display;\n",
              "        if (!display || display === 'none') {{\n",
              "            console.log([gd, 'removed!']);\n",
              "            Plotly.purge(gd);\n",
              "            observer.disconnect();\n",
              "        }}\n",
              "}});\n",
              "\n",
              "// Listen for the removal of the full notebook cells\n",
              "var notebookContainer = gd.closest('#notebook-container');\n",
              "if (notebookContainer) {{\n",
              "    x.observe(notebookContainer, {childList: true});\n",
              "}}\n",
              "\n",
              "// Listen for the clearing of the current output cell\n",
              "var outputEl = gd.closest('.output');\n",
              "if (outputEl) {{\n",
              "    x.observe(outputEl, {childList: true});\n",
              "}}\n",
              "\n",
              "                        })                };                            </script>        </div>\n",
              "</body>\n",
              "</html>"
            ]
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "seasonedit = one_game_df.drop(columns=[ 'yellow_cards','red_cards','time'])"
      ],
      "metadata": {
        "id": "zxhwefRPFQDN"
      },
      "execution_count": 189,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "top25assists.columns"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "wSmCXk6YFSz5",
        "outputId": "d86e24c1-491c-4cf8-907e-dd607aedef27"
      },
      "execution_count": 190,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Index(['id', 'player_name', 'games_x', 'time_x', 'goals_1wks_x', 'xG_1wks_x',\n",
              "       'assists_1wks_x', 'xA_1wks_x', 'shots_1wks_x', 'key_passes_1wks_x',\n",
              "       'yellow_cards_x', 'red_cards_x', 'position_x', 'team_title_x',\n",
              "       'npg_1wks_x', 'npxG_1wks_x', 'xGChain_x', 'xGBuildup_x', 'games_y',\n",
              "       'time_y', 'goals_season', 'xG_season', 'assists_season', 'xA_season',\n",
              "       'shots_season', 'key_passes_season', 'yellow_cards_y', 'red_cards_y',\n",
              "       'npg_season', 'npxG_season', 'xGChain_y', 'xGBuildup_y', 'games',\n",
              "       'time', 'goals_1wks_y', 'xG_1wks_y', 'assists_1wks_y', 'xA_1wks_y',\n",
              "       'shots_1wks_y', 'key_passes_1wks_y', 'yellow_cards', 'red_cards',\n",
              "       'position_y', 'team_title_y', 'npg_1wks_y', 'npxG_1wks_y', 'xGChain',\n",
              "       'xGBuildup', 'goals', 'assists'],\n",
              "      dtype='object')"
            ]
          },
          "metadata": {},
          "execution_count": 190
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "top20assists = top25assists.drop(columns=[ 'shots_1wks_x', 'key_passes_1wks_x',\n",
        "       'yellow_cards_x', 'red_cards_x', 'position_x', 'team_title_x',\n",
        "       'npg_1wks_x', 'npxG_1wks_x', 'xGChain_x', 'xGBuildup_x', 'games_y',\n",
        "       'time_y', 'goals_season', 'xG_season', 'assists_season', 'xA_season',\n",
        "       'shots_season', 'key_passes_season', 'yellow_cards_y', 'red_cards_y',\n",
        "       'npg_season', 'npxG_season', 'xGChain_y', 'xGBuildup_y', 'games',\n",
        "       'time', 'goals_1wks_y', 'xG_1wks_y', 'assists_1wks_y', 'xA_1wks_y',\n",
        "       'shots_1wks_y', 'key_passes_1wks_y', 'yellow_cards', 'red_cards',\n",
        "       'position_y', 'team_title_y', 'npg_1wks_y', 'npxG_1wks_y', 'xGChain',\n",
        "       'xGBuildup', 'assists_1wks_x', 'games_x', 'time_x', 'goals_1wks_x', 'id' ])\n",
        "\n",
        "top20assists.reset_index(inplace = True,drop = True)\n",
        "top20assists"
      ],
      "metadata": {
        "id": "_Xn659fiFXvb",
        "outputId": "ab90ba06-e4bd-4078-b093-7b7009fcd9e4",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 677
        }
      },
      "execution_count": 191,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "          player_name             xG_1wks_x           xA_1wks_x  goals  \\\n",
              "0          Pedro Neto    1.8730668723583221  3.4589802250266075      1   \n",
              "1     Kieran Trippier   0.11477751657366753   5.073987139388919      0   \n",
              "2       Mohamed Salah     8.706683784723282   6.265935506671667     10   \n",
              "3       Ollie Watkins     9.277923479676247  3.2038443852216005      7   \n",
              "4         Bukayo Saka      4.65498449280858  4.2790472358465195      4   \n",
              "5      James Maddison     2.944616189226508  3.4641558043658733      3   \n",
              "6   James Ward-Prowse    2.0607726871967316  3.8961656652390957      2   \n",
              "7         Jéremy Doku    0.9466327056288719   3.068725273013115      2   \n",
              "8        Darwin Núñez     7.359475486911833  2.1155554791912436      4   \n",
              "9     Vladimir Coufal  0.014404140412807465   1.519345018081367      0   \n",
              "10    Conor Gallagher    1.0631521213799715   2.381496151909232      0   \n",
              "11     Erling Haaland     14.88079109787941  2.7648311872035265     14   \n",
              "12     Anthony Gordon    3.7157998085021973  2.7575689274817705      5   \n",
              "13     Julián Álvarez    3.9068970754742622  2.1573563339188695      4   \n",
              "14    Bruno Fernandes    3.6944180503487587   5.169425847008824      3   \n",
              "15     Bernardo Silva    1.1511792689561844  3.1397438794374466      3   \n",
              "16        Leon Bailey    2.5741285495460033  2.7243187725543976      3   \n",
              "17         Phil Foden     3.218678206205368   2.296439189463854      3   \n",
              "18       Moussa Diaby      2.77720919623971   4.879660665988922      3   \n",
              "19     Anthony Elanga    1.5985217075794935  2.2472836449742317      3   \n",
              "\n",
              "    assists  \n",
              "0         7  \n",
              "1         6  \n",
              "2         5  \n",
              "3         5  \n",
              "4         5  \n",
              "5         5  \n",
              "6         5  \n",
              "7         5  \n",
              "8         4  \n",
              "9         4  \n",
              "10        4  \n",
              "11        3  \n",
              "12        3  \n",
              "13        3  \n",
              "14        3  \n",
              "15        3  \n",
              "16        3  \n",
              "17        3  \n",
              "18        3  \n",
              "19        3  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-b7b79e06-bce4-40bc-ae84-d893e74f7b2c\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>player_name</th>\n",
              "      <th>xG_1wks_x</th>\n",
              "      <th>xA_1wks_x</th>\n",
              "      <th>goals</th>\n",
              "      <th>assists</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>Pedro Neto</td>\n",
              "      <td>1.8730668723583221</td>\n",
              "      <td>3.4589802250266075</td>\n",
              "      <td>1</td>\n",
              "      <td>7</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Kieran Trippier</td>\n",
              "      <td>0.11477751657366753</td>\n",
              "      <td>5.073987139388919</td>\n",
              "      <td>0</td>\n",
              "      <td>6</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>Mohamed Salah</td>\n",
              "      <td>8.706683784723282</td>\n",
              "      <td>6.265935506671667</td>\n",
              "      <td>10</td>\n",
              "      <td>5</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>Ollie Watkins</td>\n",
              "      <td>9.277923479676247</td>\n",
              "      <td>3.2038443852216005</td>\n",
              "      <td>7</td>\n",
              "      <td>5</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>Bukayo Saka</td>\n",
              "      <td>4.65498449280858</td>\n",
              "      <td>4.2790472358465195</td>\n",
              "      <td>4</td>\n",
              "      <td>5</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>James Maddison</td>\n",
              "      <td>2.944616189226508</td>\n",
              "      <td>3.4641558043658733</td>\n",
              "      <td>3</td>\n",
              "      <td>5</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>James Ward-Prowse</td>\n",
              "      <td>2.0607726871967316</td>\n",
              "      <td>3.8961656652390957</td>\n",
              "      <td>2</td>\n",
              "      <td>5</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>Jéremy Doku</td>\n",
              "      <td>0.9466327056288719</td>\n",
              "      <td>3.068725273013115</td>\n",
              "      <td>2</td>\n",
              "      <td>5</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>Darwin Núñez</td>\n",
              "      <td>7.359475486911833</td>\n",
              "      <td>2.1155554791912436</td>\n",
              "      <td>4</td>\n",
              "      <td>4</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>Vladimir Coufal</td>\n",
              "      <td>0.014404140412807465</td>\n",
              "      <td>1.519345018081367</td>\n",
              "      <td>0</td>\n",
              "      <td>4</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10</th>\n",
              "      <td>Conor Gallagher</td>\n",
              "      <td>1.0631521213799715</td>\n",
              "      <td>2.381496151909232</td>\n",
              "      <td>0</td>\n",
              "      <td>4</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>11</th>\n",
              "      <td>Erling Haaland</td>\n",
              "      <td>14.88079109787941</td>\n",
              "      <td>2.7648311872035265</td>\n",
              "      <td>14</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>12</th>\n",
              "      <td>Anthony Gordon</td>\n",
              "      <td>3.7157998085021973</td>\n",
              "      <td>2.7575689274817705</td>\n",
              "      <td>5</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>13</th>\n",
              "      <td>Julián Álvarez</td>\n",
              "      <td>3.9068970754742622</td>\n",
              "      <td>2.1573563339188695</td>\n",
              "      <td>4</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>14</th>\n",
              "      <td>Bruno Fernandes</td>\n",
              "      <td>3.6944180503487587</td>\n",
              "      <td>5.169425847008824</td>\n",
              "      <td>3</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>15</th>\n",
              "      <td>Bernardo Silva</td>\n",
              "      <td>1.1511792689561844</td>\n",
              "      <td>3.1397438794374466</td>\n",
              "      <td>3</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>16</th>\n",
              "      <td>Leon Bailey</td>\n",
              "      <td>2.5741285495460033</td>\n",
              "      <td>2.7243187725543976</td>\n",
              "      <td>3</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>17</th>\n",
              "      <td>Phil Foden</td>\n",
              "      <td>3.218678206205368</td>\n",
              "      <td>2.296439189463854</td>\n",
              "      <td>3</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>18</th>\n",
              "      <td>Moussa Diaby</td>\n",
              "      <td>2.77720919623971</td>\n",
              "      <td>4.879660665988922</td>\n",
              "      <td>3</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>19</th>\n",
              "      <td>Anthony Elanga</td>\n",
              "      <td>1.5985217075794935</td>\n",
              "      <td>2.2472836449742317</td>\n",
              "      <td>3</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-b7b79e06-bce4-40bc-ae84-d893e74f7b2c')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-b7b79e06-bce4-40bc-ae84-d893e74f7b2c button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-b7b79e06-bce4-40bc-ae84-d893e74f7b2c');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-04f3a1e8-bfb1-4adf-baed-716b94c4c1b1\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-04f3a1e8-bfb1-4adf-baed-716b94c4c1b1')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-04f3a1e8-bfb1-4adf-baed-716b94c4c1b1 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 191
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "fig4= go.Figure()\n",
        "fig4.add_trace(go.Scatter(x = top20assists[\"assists\"],\n",
        "                          y = top20assists[\"player_name\"],\n",
        "                          mode = 'markers',\n",
        "                          marker_color = 'darkblue',\n",
        "                          marker_size = 10,\n",
        "                          name = 'assists'))\n",
        "fig4.add_trace(go.Scatter(x = top20assists[\"xA_1wks_x\"],\n",
        "                          y = top20assists[\"player_name\"],\n",
        "                          mode = 'markers',\n",
        "                          marker_color = 'darkorange',\n",
        "                          marker_size = 10,\n",
        "                          name = 'xA'))\n",
        "for i in range(0, len(top20assists)):\n",
        "               fig4.add_shape(type='line',\n",
        "                              x0 = top20assists['assists'][i],\n",
        "                              y0 = i,\n",
        "                              x1 = top20assists[\"xA_1wks_x\"][i],\n",
        "                              y1 = i,\n",
        "                              line=dict(color='crimson', width = 3))\n",
        "fig4.update_layout(title_text =\n",
        "                    \"assists vs xG\",\n",
        "                    title_font_size = 15)\n",
        "fig4.update_xaxes(range=[0, 15])\n",
        "fig4.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 542
        },
        "id": "P6oVjqCSF4Pw",
        "outputId": "bbda728c-8117-4c0c-e8a6-c258a3095d2b"
      },
      "execution_count": 192,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<html>\n",
              "<head><meta charset=\"utf-8\" /></head>\n",
              "<body>\n",
              "    <div>            <script src=\"https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.5/MathJax.js?config=TeX-AMS-MML_SVG\"></script><script type=\"text/javascript\">if (window.MathJax && window.MathJax.Hub && window.MathJax.Hub.Config) {window.MathJax.Hub.Config({SVG: {font: \"STIX-Web\"}});}</script>                <script type=\"text/javascript\">window.PlotlyConfig = {MathJaxConfig: 'local'};</script>\n",
              "        <script charset=\"utf-8\" src=\"https://cdn.plot.ly/plotly-2.24.1.min.js\"></script>                <div id=\"f076a150-515d-43ea-8e53-9926325f4d03\" class=\"plotly-graph-div\" style=\"height:525px; width:100%;\"></div>            <script type=\"text/javascript\">                                    window.PLOTLYENV=window.PLOTLYENV || {};                                    if (document.getElementById(\"f076a150-515d-43ea-8e53-9926325f4d03\")) {                    Plotly.newPlot(                        \"f076a150-515d-43ea-8e53-9926325f4d03\",                        [{\"marker\":{\"color\":\"darkblue\",\"size\":10},\"mode\":\"markers\",\"name\":\"assists\",\"x\":[7,6,5,5,5,5,5,5,4,4,4,3,3,3,3,3,3,3,3,3],\"y\":[\"Pedro Neto\",\"Kieran Trippier\",\"Mohamed Salah\",\"Ollie Watkins\",\"Bukayo Saka\",\"James Maddison\",\"James Ward-Prowse\",\"J\\u00e9remy Doku\",\"Darwin N\\u00fa\\u00f1ez\",\"Vladimir Coufal\",\"Conor Gallagher\",\"Erling Haaland\",\"Anthony Gordon\",\"Juli\\u00e1n \\u00c1lvarez\",\"Bruno Fernandes\",\"Bernardo Silva\",\"Leon Bailey\",\"Phil Foden\",\"Moussa Diaby\",\"Anthony Elanga\"],\"type\":\"scatter\"},{\"marker\":{\"color\":\"darkorange\",\"size\":10},\"mode\":\"markers\",\"name\":\"xA\",\"x\":[\"3.4589802250266075\",\"5.073987139388919\",\"6.265935506671667\",\"3.2038443852216005\",\"4.2790472358465195\",\"3.4641558043658733\",\"3.8961656652390957\",\"3.068725273013115\",\"2.1155554791912436\",\"1.519345018081367\",\"2.381496151909232\",\"2.7648311872035265\",\"2.7575689274817705\",\"2.1573563339188695\",\"5.169425847008824\",\"3.1397438794374466\",\"2.7243187725543976\",\"2.296439189463854\",\"4.879660665988922\",\"2.2472836449742317\"],\"y\":[\"Pedro Neto\",\"Kieran Trippier\",\"Mohamed Salah\",\"Ollie Watkins\",\"Bukayo Saka\",\"James Maddison\",\"James Ward-Prowse\",\"J\\u00e9remy Doku\",\"Darwin N\\u00fa\\u00f1ez\",\"Vladimir Coufal\",\"Conor Gallagher\",\"Erling Haaland\",\"Anthony Gordon\",\"Juli\\u00e1n \\u00c1lvarez\",\"Bruno Fernandes\",\"Bernardo Silva\",\"Leon Bailey\",\"Phil Foden\",\"Moussa Diaby\",\"Anthony Elanga\"],\"type\":\"scatter\"}],                        {\"template\":{\"data\":{\"histogram2dcontour\":[{\"type\":\"histogram2dcontour\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"choropleth\":[{\"type\":\"choropleth\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"histogram2d\":[{\"type\":\"histogram2d\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"heatmap\":[{\"type\":\"heatmap\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"heatmapgl\":[{\"type\":\"heatmapgl\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"contourcarpet\":[{\"type\":\"contourcarpet\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"contour\":[{\"type\":\"contour\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"surface\":[{\"type\":\"surface\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"mesh3d\":[{\"type\":\"mesh3d\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"scatter\":[{\"fillpattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2},\"type\":\"scatter\"}],\"parcoords\":[{\"type\":\"parcoords\",\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterpolargl\":[{\"type\":\"scatterpolargl\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"bar\":[{\"error_x\":{\"color\":\"#2a3f5f\"},\"error_y\":{\"color\":\"#2a3f5f\"},\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"bar\"}],\"scattergeo\":[{\"type\":\"scattergeo\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterpolar\":[{\"type\":\"scatterpolar\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"histogram\":[{\"marker\":{\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"histogram\"}],\"scattergl\":[{\"type\":\"scattergl\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatter3d\":[{\"type\":\"scatter3d\",\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scattermapbox\":[{\"type\":\"scattermapbox\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterternary\":[{\"type\":\"scatterternary\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scattercarpet\":[{\"type\":\"scattercarpet\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"carpet\":[{\"aaxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"baxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"type\":\"carpet\"}],\"table\":[{\"cells\":{\"fill\":{\"color\":\"#EBF0F8\"},\"line\":{\"color\":\"white\"}},\"header\":{\"fill\":{\"color\":\"#C8D4E3\"},\"line\":{\"color\":\"white\"}},\"type\":\"table\"}],\"barpolar\":[{\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"barpolar\"}],\"pie\":[{\"automargin\":true,\"type\":\"pie\"}]},\"layout\":{\"autotypenumbers\":\"strict\",\"colorway\":[\"#636efa\",\"#EF553B\",\"#00cc96\",\"#ab63fa\",\"#FFA15A\",\"#19d3f3\",\"#FF6692\",\"#B6E880\",\"#FF97FF\",\"#FECB52\"],\"font\":{\"color\":\"#2a3f5f\"},\"hovermode\":\"closest\",\"hoverlabel\":{\"align\":\"left\"},\"paper_bgcolor\":\"white\",\"plot_bgcolor\":\"#E5ECF6\",\"polar\":{\"bgcolor\":\"#E5ECF6\",\"angularaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"radialaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"ternary\":{\"bgcolor\":\"#E5ECF6\",\"aaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"baxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"caxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"coloraxis\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"colorscale\":{\"sequential\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"sequentialminus\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"diverging\":[[0,\"#8e0152\"],[0.1,\"#c51b7d\"],[0.2,\"#de77ae\"],[0.3,\"#f1b6da\"],[0.4,\"#fde0ef\"],[0.5,\"#f7f7f7\"],[0.6,\"#e6f5d0\"],[0.7,\"#b8e186\"],[0.8,\"#7fbc41\"],[0.9,\"#4d9221\"],[1,\"#276419\"]]},\"xaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"automargin\":true,\"zerolinewidth\":2},\"yaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"automargin\":true,\"zerolinewidth\":2},\"scene\":{\"xaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2},\"yaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2},\"zaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2}},\"shapedefaults\":{\"line\":{\"color\":\"#2a3f5f\"}},\"annotationdefaults\":{\"arrowcolor\":\"#2a3f5f\",\"arrowhead\":0,\"arrowwidth\":1},\"geo\":{\"bgcolor\":\"white\",\"landcolor\":\"#E5ECF6\",\"subunitcolor\":\"white\",\"showland\":true,\"showlakes\":true,\"lakecolor\":\"white\"},\"title\":{\"x\":0.05},\"mapbox\":{\"style\":\"light\"}}},\"shapes\":[{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":7,\"x1\":\"3.4589802250266075\",\"y0\":0,\"y1\":0},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":6,\"x1\":\"5.073987139388919\",\"y0\":1,\"y1\":1},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":5,\"x1\":\"6.265935506671667\",\"y0\":2,\"y1\":2},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":5,\"x1\":\"3.2038443852216005\",\"y0\":3,\"y1\":3},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":5,\"x1\":\"4.2790472358465195\",\"y0\":4,\"y1\":4},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":5,\"x1\":\"3.4641558043658733\",\"y0\":5,\"y1\":5},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":5,\"x1\":\"3.8961656652390957\",\"y0\":6,\"y1\":6},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":5,\"x1\":\"3.068725273013115\",\"y0\":7,\"y1\":7},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":4,\"x1\":\"2.1155554791912436\",\"y0\":8,\"y1\":8},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":4,\"x1\":\"1.519345018081367\",\"y0\":9,\"y1\":9},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":4,\"x1\":\"2.381496151909232\",\"y0\":10,\"y1\":10},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":3,\"x1\":\"2.7648311872035265\",\"y0\":11,\"y1\":11},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":3,\"x1\":\"2.7575689274817705\",\"y0\":12,\"y1\":12},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":3,\"x1\":\"2.1573563339188695\",\"y0\":13,\"y1\":13},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":3,\"x1\":\"5.169425847008824\",\"y0\":14,\"y1\":14},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":3,\"x1\":\"3.1397438794374466\",\"y0\":15,\"y1\":15},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":3,\"x1\":\"2.7243187725543976\",\"y0\":16,\"y1\":16},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":3,\"x1\":\"2.296439189463854\",\"y0\":17,\"y1\":17},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":3,\"x1\":\"4.879660665988922\",\"y0\":18,\"y1\":18},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":3,\"x1\":\"2.2472836449742317\",\"y0\":19,\"y1\":19}],\"title\":{\"font\":{\"size\":15},\"text\":\"assists vs xG\"},\"xaxis\":{\"range\":[0,15]}},                        {\"responsive\": true}                    ).then(function(){\n",
              "                            \n",
              "var gd = document.getElementById('f076a150-515d-43ea-8e53-9926325f4d03');\n",
              "var x = new MutationObserver(function (mutations, observer) {{\n",
              "        var display = window.getComputedStyle(gd).display;\n",
              "        if (!display || display === 'none') {{\n",
              "            console.log([gd, 'removed!']);\n",
              "            Plotly.purge(gd);\n",
              "            observer.disconnect();\n",
              "        }}\n",
              "}});\n",
              "\n",
              "// Listen for the removal of the full notebook cells\n",
              "var notebookContainer = gd.closest('#notebook-container');\n",
              "if (notebookContainer) {{\n",
              "    x.observe(notebookContainer, {childList: true});\n",
              "}}\n",
              "\n",
              "// Listen for the clearing of the current output cell\n",
              "var outputEl = gd.closest('.output');\n",
              "if (outputEl) {{\n",
              "    x.observe(outputEl, {childList: true});\n",
              "}}\n",
              "\n",
              "                        })                };                            </script>        </div>\n",
              "</body>\n",
              "</html>"
            ]
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import pandas as pd\n",
        "import matplotlib.pyplot as plt\n",
        "\n",
        "# Assuming you have already loaded the DataFrame named 'Top50'\n",
        "\n",
        "# Filter the DataFrame by position type\n",
        "midfielders = Top50[Top50['pos'] == 'M']\n",
        "forwards = Top50[Top50['pos'] == 'F']\n",
        "defenders = Top50[Top50['pos'] == 'D']\n",
        "\n",
        "# Sort the filtered DataFrames by '5GW Total' in descending order\n",
        "midfielders = midfielders.sort_values(by='5GW Total', ascending=False)\n",
        "forwards = forwards.sort_values(by='5GW Total', ascending=False)\n",
        "defenders = defenders.sort_values(by='5GW Total', ascending=False)\n",
        "\n",
        "# Plotting the bar charts\n",
        "plt.figure(figsize=(12, 6))\n",
        "\n",
        "# Midfielders chart\n",
        "plt.subplot(131)\n",
        "plt.bar(midfielders['name'][:10], midfielders['5GW Total'][:10])\n",
        "plt.title('Top 10 Midfielders by 5GW Total')\n",
        "plt.xticks(rotation=45)\n",
        "\n",
        "# Forwards chart\n",
        "plt.subplot(132)\n",
        "plt.bar(forwards['name'][:10], forwards['5GW Total'][:10])\n",
        "plt.title('Top 10 Forwards by 5GW Total')\n",
        "plt.xticks(rotation=45)\n",
        "\n",
        "# Defenders chart\n",
        "plt.subplot(133)\n",
        "plt.bar(defenders['name'][:10], defenders['5GW Total'][:10])\n",
        "plt.title('Top 10 Defenders by 5GW Total')\n",
        "plt.xticks(rotation=45)\n",
        "\n",
        "plt.tight_layout()\n",
        "plt.show()\n"
      ],
      "metadata": {
        "id": "FN06IYwSKGLw",
        "outputId": "c258a614-7fab-41bd-fa88-b6d53c82ecf8",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 601
        }
      },
      "execution_count": 193,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1200x600 with 3 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import pandas as pd\n",
        "import matplotlib.pyplot as plt\n",
        "\n",
        "# Assuming you have already loaded the DataFrame named 'Top50'\n",
        "\n",
        "# Filter the DataFrame by position type\n",
        "midfielders = Top50[Top50['pos'] == 'M']\n",
        "forwards = Top50[Top50['pos'] == 'F']\n",
        "defenders = Top50[Top50['pos'] == 'D']\n",
        "\n",
        "# Sort the filtered DataFrames by '5GW Total' in descending order\n",
        "midfielders = midfielders.sort_values(by='5GW Total', ascending=False)\n",
        "forwards = forwards.sort_values(by='5GW Total', ascending=False)\n",
        "defenders = defenders.sort_values(by='5GW Total', ascending=False)\n",
        "\n",
        "# Create a list of colors for each chart\n",
        "colors = ['blue', 'green', 'red']\n",
        "\n",
        "# Plotting the horizontal bar charts with different colors\n",
        "plt.figure(figsize=(10, 6))\n",
        "\n",
        "# Midfielders chart\n",
        "plt.barh(midfielders['name'][:10], midfielders['5GW Total'][:10], color=colors[0])\n",
        "plt.title('Top 10 Midfielders by 5GW Total')\n",
        "plt.xlabel('5GW Total')\n",
        "plt.gca().invert_yaxis()  # Invert y-axis to have higher values at the top\n",
        "\n",
        "# Forwards chart\n",
        "plt.figure(figsize=(10, 6))\n",
        "plt.barh(forwards['name'][:10], forwards['5GW Total'][:10], color=colors[1])\n",
        "plt.title('Top 10 Forwards by 5GW Total')\n",
        "plt.xlabel('5GW Total')\n",
        "plt.gca().invert_yaxis()  # Invert y-axis to have higher values at the top\n",
        "\n",
        "# Defenders chart\n",
        "plt.figure(figsize=(10, 6))\n",
        "plt.barh(defenders['name'][:10], defenders['5GW Total'][:10], color=colors[2])\n",
        "plt.title('Top 10 Defenders by 5GW Total')\n",
        "plt.xlabel('5GW Total')\n",
        "plt.gca().invert_yaxis()  # Invert y-axis to have higher values at the top\n",
        "\n",
        "plt.tight_layout()\n",
        "plt.show()\n"
      ],
      "metadata": {
        "id": "VSYcUse-SrV-",
        "outputId": "7818f96f-a4bd-40ee-e106-7589fc22f4fe",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        }
      },
      "execution_count": 194,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1000x600 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1000x600 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1000x600 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import pandas as pd\n",
        "import seaborn as sns\n",
        "import matplotlib.pyplot as plt\n",
        "\n",
        "# Assuming you have already loaded the DataFrame named 'gwadjustments26'\n",
        "\n",
        "# Set the index column\n",
        "gw13adjustments.set_index('team', inplace=True)\n",
        "\n",
        "# Create a color map\n",
        "cmap = sns.diverging_palette(240, 10, as_cmap=True)\n",
        "\n",
        "# Plot the heatmap\n",
        "plt.figure(figsize=(8, 6))\n",
        "sns.heatmap(gw13adjustments, annot=True, cmap=cmap, center=0)\n",
        "plt.title('Color-Coded Table of GW Adjustments')\n",
        "plt.show()\n"
      ],
      "metadata": {
        "id": "X2DQdb15YZfr",
        "outputId": "6c340ee3-e2bf-4bd8-df80-8f004775a2b4",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 245
        }
      },
      "execution_count": 195,
      "outputs": [
        {
          "output_type": "error",
          "ename": "NameError",
          "evalue": "ignored",
          "traceback": [
            "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
            "\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)",
            "\u001b[0;32m<ipython-input-195-f37e613e9189>\u001b[0m in \u001b[0;36m<cell line: 8>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      6\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      7\u001b[0m \u001b[0;31m# Set the index column\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 8\u001b[0;31m \u001b[0mgw13adjustments\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mset_index\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m'team'\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0minplace\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mTrue\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      9\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     10\u001b[0m \u001b[0;31m# Create a color map\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;31mNameError\u001b[0m: name 'gw13adjustments' is not defined"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "plt.figure(figsize=(10, 6))\n",
        "\n",
        "scores_columns = ['gw2adjustment', 'gw3adjustment', 'gw4adjustment', 'gw5adjustment', 'gw6adjustment']\n",
        "\n",
        "bottom = [0] * len(gwadjustments26)\n",
        "\n",
        "for score_col in scores_columns:\n",
        "    plt.bar(gwadjustments26.index, gwadjustments26[score_col], bottom=bottom, label=score_col)\n",
        "    bottom += gwadjustments26[score_col]\n",
        "\n",
        "plt.xlabel('Teams')\n",
        "plt.ylabel('Score Adjustments')\n",
        "plt.title('Stacked GW Adjustments for Different Teams')\n",
        "plt.xticks(rotation=45)\n",
        "plt.legend()\n",
        "plt.tight_layout()\n",
        "\n",
        "plt.show()\n"
      ],
      "metadata": {
        "id": "z7T7SgQSYyL8"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "plt.figure(figsize=(10, 6))\n",
        "\n",
        "# Calculate the total score adjustments for each team\n",
        "gwadjustments26['Total'] = gwadjustments26.sum(axis=1)\n",
        "\n",
        "# Sort the DataFrame by the 'Total' column in descending order\n",
        "gwadjustments26 = gwadjustments26.sort_values(by='Total', ascending=False)\n",
        "\n",
        "# Get the scores columns\n",
        "scores_columns = ['gw2adjustment', 'gw3adjustment', 'gw4adjustment', 'gw5adjustment', 'gw6adjustment']\n",
        "\n",
        "bottom = [0] * len(gwadjustments26)\n",
        "\n",
        "for score_col in scores_columns:\n",
        "    plt.bar(gwadjustments26.index, gwadjustments26[score_col], bottom=bottom, label=score_col)\n",
        "    bottom += gwadjustments26[score_col]\n",
        "\n",
        "plt.xlabel('Teams')\n",
        "plt.ylabel('Score Adjustments')\n",
        "plt.title('Stacked GW Adjustments for Different Teams')\n",
        "plt.xticks(rotation=45)\n",
        "plt.legend()\n",
        "plt.tight_layout()\n",
        "\n",
        "plt.show()\n"
      ],
      "metadata": {
        "id": "XxE_pa9xZB8N"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "import pandas as pd\n",
        "import seaborn as sns\n",
        "import matplotlib.pyplot as plt\n",
        "\n",
        "# Assuming you have already loaded the DataFrame named 'gwadjustments26'\n",
        "\n",
        "# Set the index column\n",
        "gwadjustments26.set_index('team', inplace=True)\n",
        "\n",
        "# Create a custom color map\n",
        "cmap = sns.diverging_palette(240, 10, n=21, as_cmap=True)\n",
        "colors = ['red', 'orange', 'green']\n",
        "\n",
        "# Define color thresholds\n",
        "color_thresholds = [0.9, 1.1, 2.0]\n",
        "\n",
        "# Normalize values for coloring\n",
        "normalized_values = (gwadjustments26 - 0.9) / (2.0 - 0.9)\n",
        "\n",
        "# Apply color map and thresholds\n",
        "colored_values = pd.cut(normalized_values, bins=color_thresholds, labels=colors)\n",
        "\n",
        "# Plot the heatmap with customized color coding\n",
        "plt.figure(figsize=(8, 6))\n",
        "sns.heatmap(normalized_values, annot=True, cmap=cmap, center=1, cbar=False, fmt=\".2f\", linewidths=0.5, linecolor='white')\n",
        "plt.title('Custom Color-Coded Table of GW Adjustments')\n",
        "plt.xticks(rotation=45)\n",
        "plt.show()\n"
      ],
      "metadata": {
        "id": "_YnxO1yMZekH"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "plt.figure(figsize=(10, 8))\n",
        "\n",
        "# Calculate the total score adjustments for each team\n",
        "gwadjustments26['Total'] = gwadjustments26.sum(axis=1)\n",
        "\n",
        "# Sort the DataFrame by the 'Total' column in descending order\n",
        "gwadjustments26 = gwadjustments26.sort_values(by='Total', ascending=False)\n",
        "\n",
        "# Get the scores columns\n",
        "scores_columns = ['gw2adjustment', 'gw3adjustment', 'gw4adjustment', 'gw5adjustment', 'gw6adjustment']\n",
        "\n",
        "# Define color thresholds and corresponding colors\n",
        "color_thresholds = [0.9, 1.1, 2.0]\n",
        "colors = ['red', 'orange', 'green']\n",
        "\n",
        "bottom = [0] * len(gwadjustments26)\n",
        "\n",
        "for score_col in scores_columns:\n",
        "    adjusted_values = gwadjustments26[score_col]\n",
        "\n",
        "    # Create a color list based on thresholds\n",
        "    colors_for_col = [colors[-1] if val is None else\n",
        "                      colors[0] if val < color_thresholds[0] else\n",
        "                      colors[1] if val <= color_thresholds[1] else\n",
        "                      colors[2]\n",
        "                      for val in adjusted_values]\n",
        "\n",
        "    for i, (val, color) in enumerate(zip(adjusted_values, colors_for_col)):\n",
        "        plt.barh(gwadjustments26.index[i], val, color=color, edgecolor='white')\n",
        "\n",
        "    bottom += adjusted_values\n",
        "\n",
        "plt.xlabel('Score Adjustments')\n",
        "plt.ylabel('Teams')\n",
        "plt.title('Horizontally Stacked GW Adjustments for Different Teams')\n",
        "plt.legend(labels=scores_columns)\n",
        "plt.gca().invert_yaxis()  # Invert y-axis to have higher values at the top\n",
        "plt.tight_layout()\n",
        "\n",
        "plt.show()\n"
      ],
      "metadata": {
        "id": "5agSlfUragM2"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "import requests\n",
        "import pandas as pd\n",
        "from urllib.request import urlopen\n",
        "from json import loads\n",
        "from csv import writer\n",
        "\n",
        "def team_converter(team_id):\n",
        "    '''Converts a team's ID to their actual name'''\n",
        "    team_map = {\n",
        "        1: \"Arsenal\",\n",
        "        2: \"Aston Villa\",\n",
        "        3: \"Bournemouth\",\n",
        "        4: \"Brentford\",\n",
        "        5: \"Brighton\",\n",
        "        6: \"Burnley\",\n",
        "        7: \"Chelsea\",\n",
        "        8: \"Crystal Palace\",\n",
        "        9: \"Everton\",\n",
        "        10: \"Fulham\",\n",
        "        11: \"Liverpool\",\n",
        "        12: \"Luton Town\",\n",
        "        13: \"Manchester City\",\n",
        "        14: \"Manchester United\",\n",
        "        15: \"Newcastle United\",\n",
        "        16: \"Nottingham Forest\",\n",
        "        17: \"Sheffield United\",\n",
        "        18: \"Tottenham\",\n",
        "        19: \"West Ham\",\n",
        "        20: \"Wolverhampton Wanderers\",\n",
        "        None: None\n",
        "    }\n",
        "    return team_map.get(team_id, None)  # Use get to handle missing team IDs\n",
        "\n",
        "def position_converter(position):\n",
        "    '''Converts a player's element_type to their actual position'''\n",
        "    position_map = {\n",
        "        1: \"Goalkeeper\",\n",
        "        2: \"Defender\",\n",
        "        3: \"Midfielder\",\n",
        "        4: \"Forward\"\n",
        "    }\n",
        "    return position_map.get(position, None)  # Use get to handle missing positions\n",
        "\n",
        "def main():\n",
        "    team_entry_id = 6388102\n",
        "    url = f'https://fantasy.premierleague.com/api/entry/{team_entry_id}/transfers'\n",
        "\n",
        "    try:\n",
        "        response = requests.get(url)\n",
        "        response.raise_for_status()  # Check for any HTTP errors\n",
        "\n",
        "        transfers_data = response.json()\n",
        "\n",
        "        # Get player names from the provided API\n",
        "        player_ids_in = [transfer['element_in'] for transfer in transfers_data]\n",
        "        player_ids_out = [transfer.get('element_out', None) for transfer in transfers_data]\n",
        "\n",
        "        all_data = loads(urlopen(\"https://fantasy.premierleague.com/api/bootstrap-static/\").read())\n",
        "        players = all_data[\"elements\"]\n",
        "\n",
        "        # Build a dictionary of player names for players transferred in\n",
        "        player_names_in = {}\n",
        "        for player in players:\n",
        "            if player['id'] in player_ids_in:\n",
        "                player_names_in[player['id']] = f\"{player['first_name']} {player['second_name']}\"\n",
        "\n",
        "        # Build a dictionary of player names for players transferred out\n",
        "        player_names_out = {}\n",
        "        for player in players:\n",
        "            if player['id'] in player_ids_out:\n",
        "                player_names_out[player['id']] = f\"{player['first_name']} {player['second_name']}\"\n",
        "\n",
        "        # Replace player IDs with names and add additional data\n",
        "        transfer_data_with_info = []\n",
        "        for transfer in transfers_data:\n",
        "            player_in_name = player_names_in.get(transfer['element_in'], 'Unknown Player')\n",
        "            player_out_name = player_names_out.get(transfer['element_out'], 'Unknown Player') if transfer['element_out'] is not None else 'N/A'\n",
        "            transfer_info = {\n",
        "                'week': transfer['event'],\n",
        "                'player_in': player_in_name,\n",
        "                'player_out': player_out_name,\n",
        "                'cost_in': transfer['element_in_cost'] / 10,  # Convert to actual cost\n",
        "                'cost_out': transfer.get('element_out_cost', 0) / 10  # Convert to actual cost\n",
        "            }\n",
        "            transfer_data_with_info.append(transfer_info)\n",
        "\n",
        "        # Create a DataFrame\n",
        "        df = pd.DataFrame(transfer_data_with_info)\n",
        "\n",
        "        print(\"Transfers made by team entry\", team_entry_id)\n",
        "        print(df)\n",
        "\n",
        "    except requests.exceptions.HTTPError as errh:\n",
        "        print(\"HTTP Error:\", errh)\n",
        "    except requests.exceptions.ConnectionError as errc:\n",
        "        print(\"Error connecting:\", errc)\n",
        "    except requests.exceptions.Timeout as errt:\n",
        "        print(\"Timeout error:\", errt)\n",
        "    except requests.exceptions.RequestException as err:\n",
        "        print(\"An error occurred:\", err)\n",
        "\n",
        "if __name__ == \"__main__\":\n",
        "    main()\n"
      ],
      "metadata": {
        "id": "syMCbGo_mDoe"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "import requests\n",
        "import pandas as pd\n",
        "from urllib.request import urlopen\n",
        "from json import loads\n",
        "from csv import writer\n",
        "\n",
        "def team_converter(team_id):\n",
        "    '''Converts a team's ID to their actual name'''\n",
        "    team_map = {\n",
        "        1: \"Arsenal\",\n",
        "        2: \"Aston Villa\",\n",
        "        3: \"Bournemouth\",\n",
        "        4: \"Brentford\",\n",
        "        5: \"Brighton\",\n",
        "        6: \"Burnley\",\n",
        "        7: \"Chelsea\",\n",
        "        8: \"Crystal Palace\",\n",
        "        9: \"Everton\",\n",
        "        10: \"Fulham\",\n",
        "        11: \"Liverpool\",\n",
        "        12: \"Luton Town\",\n",
        "        13: \"Manchester City\",\n",
        "        14: \"Manchester United\",\n",
        "        15: \"Newcastle United\",\n",
        "        16: \"Nottingham Forest\",\n",
        "        17: \"Sheffield United\",\n",
        "        18: \"Tottenham\",\n",
        "        19: \"West Ham\",\n",
        "        20: \"Wolverhampton Wanderers\",\n",
        "        None: None\n",
        "    }\n",
        "    return team_map.get(team_id, None)  # Use get to handle missing team IDs\n",
        "\n",
        "def position_converter(position):\n",
        "    '''Converts a player's element_type to their actual position'''\n",
        "    position_map = {\n",
        "        1: \"Goalkeeper\",\n",
        "        2: \"Defender\",\n",
        "        3: \"Midfielder\",\n",
        "        4: \"Forward\"\n",
        "    }\n",
        "    return position_map.get(position, None)  # Use get to handle missing positions\n",
        "\n",
        "def main():\n",
        "    team_entry_id = 275269\n",
        "    url = f'https://fantasy.premierleague.com/api/entry/{team_entry_id}/transfers'\n",
        "\n",
        "    try:\n",
        "        response = requests.get(url)\n",
        "        response.raise_for_status()  # Check for any HTTP errors\n",
        "\n",
        "        transfers_data = response.json()\n",
        "\n",
        "        # Get player names from the provided API\n",
        "        player_ids_in = [transfer['element_in'] for transfer in transfers_data]\n",
        "        player_ids_out = [transfer.get('element_out', None) for transfer in transfers_data]\n",
        "\n",
        "        all_data = loads(urlopen(\"https://fantasy.premierleague.com/api/bootstrap-static/\").read())\n",
        "        players = all_data[\"elements\"]\n",
        "\n",
        "        # Build a dictionary of player names for players transferred in\n",
        "        player_names_in = {}\n",
        "        for player in players:\n",
        "            if player['id'] in player_ids_in:\n",
        "                player_names_in[player['id']] = f\"{player['first_name']} {player['second_name']}\"\n",
        "\n",
        "        # Build a dictionary of player names for players transferred out\n",
        "        player_names_out = {}\n",
        "        for player in players:\n",
        "            if player['id'] in player_ids_out:\n",
        "                player_names_out[player['id']] = f\"{player['first_name']} {player['second_name']}\"\n",
        "\n",
        "        # Replace player IDs with names and add additional data\n",
        "        transfer_data_with_info = []\n",
        "        for transfer in transfers_data:\n",
        "            player_in_name = player_names_in.get(transfer['element_in'], 'Unknown Player')\n",
        "            player_out_name = player_names_out.get(transfer['element_out'], 'Unknown Player') if transfer['element_out'] is not None else 'N/A'\n",
        "            transfer_info = {\n",
        "                'week': transfer['event'],\n",
        "                'player_in': player_in_name,\n",
        "                'player_out': player_out_name,\n",
        "                'cost_in': transfer['element_in_cost'] / 10,  # Convert to actual cost\n",
        "                'cost_out': transfer.get('element_out_cost', 0) / 10  # Convert to actual cost\n",
        "            }\n",
        "            transfer_data_with_info.append(transfer_info)\n",
        "\n",
        "        # Create a DataFrame\n",
        "        df = pd.DataFrame(transfer_data_with_info)\n",
        "\n",
        "        print(\"Transfers made by team entry\", team_entry_id)\n",
        "        print(df)\n",
        "\n",
        "    except requests.exceptions.HTTPError as errh:\n",
        "        print(\"HTTP Error:\", errh)\n",
        "    except requests.exceptions.ConnectionError as errc:\n",
        "        print(\"Error connecting:\", errc)\n",
        "    except requests.exceptions.Timeout as errt:\n",
        "        print(\"Timeout error:\", errt)\n",
        "    except requests.exceptions.RequestException as err:\n",
        "        print(\"An error occurred:\", err)\n",
        "\n",
        "if __name__ == \"__main__\":\n",
        "    main()\n"
      ],
      "metadata": {
        "id": "NxkG0V2Eq5BY"
      },
      "execution_count": null,
      "outputs": []
    }
  ]
}