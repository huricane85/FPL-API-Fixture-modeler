{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "authorship_tag": "ABX9TyNolxo3WfQf2wzQFkbZqXMb",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/huricane85/FPL-API-Fixture-modeler/blob/main/FPL_Model_v1.2%20API%20data%20only%2022.09.2023\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 1,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "b6S0KMo-gSGQ",
        "outputId": "a601fa73-7d99-4f7e-c1d5-599587e7211e"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Cloning into 'UnderstatScraper'...\n",
            "remote: Enumerating objects: 34, done.\u001b[K\n",
            "remote: Counting objects: 100% (34/34), done.\u001b[K\n",
            "remote: Compressing objects: 100% (31/31), done.\u001b[K\n",
            "remote: Total 34 (delta 11), reused 25 (delta 2), pack-reused 0\u001b[K\n",
            "Receiving objects: 100% (34/34), 268.30 KiB | 7.25 MiB/s, done.\n",
            "Resolving deltas: 100% (11/11), done.\n"
          ]
        }
      ],
      "source": [
        "!git clone https://github.com/doughagey/UnderstatScraper"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#!/usr/bin/env python3\n",
        "# -*- coding: utf-8 -*-\n",
        "\"\"\"\n",
        "Created on Mar 1 17:50:36 2020\n",
        "@author: doug hagey\n",
        "\"\"\"\n",
        "\n",
        "import pandas as pd\n",
        "import requests\n",
        "\n",
        "def scrape_understat(payload):\n",
        "    #Build request using url, headers (mimicking what Firefox does normally)\n",
        "    #Works best with verify=True as you won't get the ssl errors. Payload is\n",
        "    #taylored for each request\n",
        "    url = 'https://understat.com/main/getPlayersStats/'\n",
        "    headers = {'content-type':'application/json; charset=utf-8',\n",
        "    'Host': 'understat.com',\n",
        "    'User-Agent': 'Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:73.0) Gecko/20100101 Firefox/73.0',\n",
        "    'Accept': 'application/json, text/javascript, */*; q=0.01',\n",
        "    'Accept-Encoding': 'gzip, deflate, br',\n",
        "    'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8',\n",
        "    'X-Requested-With': 'XMLHttpRequest',\n",
        "    'Content-Length': '310',\n",
        "    'Origin': 'https: // understat.com',\n",
        "    'Connection': 'keep - alive',\n",
        "    'Referer': 'https: // understat.com / league / EPL'\n",
        "    }\n",
        "    response = requests.post(url, data=payload, headers = headers, verify=True)\n",
        "    response_json = response.json()\n",
        "    inner_wrapper = response_json['response']\n",
        "    json_player_data = inner_wrapper['players']\n",
        "    return json_player_data\n",
        "\n",
        "def clean_df(player_df, weeks):\n",
        "    # Get rid of the columns that we don't care about\n",
        "    #player_df.drop(['yellow_cards','red_cards', 'xGChain','xGBuildup','games','time'], axis=1, inplace=True)\n",
        "    player_df  = player_df.rename(columns={'goals':'goals_'+weeks,'xG':'xG_'+weeks,'assists':'assists_'+weeks, 'xA':'xA_'+weeks, 'shots':'shots_'+weeks, 'key_passes':\n",
        "        'key_passes_'+weeks,'npg':'npg_'+weeks,'npxG':'npxG_'+weeks})\n",
        "    if weeks != '1wks':\n",
        "        player_df.drop(['position','team_title'], axis=1, inplace=True)\n",
        "    return(player_df)\n",
        "\n",
        "#Creprint('Getting data for last 1 matches')\n",
        "json_player_data = scrape_understat({'league':'EPL', 'season':'2023', 'n_last_matches': '5'})\n",
        "one_game_table = pd.DataFrame(json_player_data)\n",
        "one_game_df = clean_df(one_game_table,'3wks')\n",
        "\n",
        "\n",
        "print('Getting data for the whole season')\n",
        "json_player_data = scrape_understat({'league':'EPL', 'season':'2023'})\n",
        "season_table = pd.DataFrame(json_player_data)\n",
        "season_df = clean_df(season_table, 'season')\n",
        "\n",
        "print('Getting data for last 1 matches')\n",
        "json_player_data = scrape_understat({'league':'EPL', 'season':'2023', 'n_last_matches': '5'})\n",
        "one_game_table = pd.DataFrame(json_player_data)\n",
        "one_game_df = clean_df(one_game_table, '1wks')\n",
        "\n",
        "print('Merging Tables')\n",
        "EPL_player_df = pd.merge(one_game_df, season_df, on=['id','player_name'])\n",
        "EPL_player_df = pd.merge(EPL_player_df, one_game_df, on=['id','player_name'])\n",
        "\n",
        "\n",
        "print('Writing CSV File')\n",
        "EPL_player_df.to_csv('Understat_EPL_Player_Data_Combined 2021.csv', encoding='utf-8', index=False)\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "D7aK55NHgZOt",
        "outputId": "54c9b67f-782c-4ed1-e9b6-222f9e227fcc"
      },
      "execution_count": 2,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Getting data for the whole season\n",
            "Getting data for last 1 matches\n",
            "Merging Tables\n",
            "Writing CSV File\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "EPL_player_df"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 600
        },
        "id": "n__CYp9pmkGz",
        "outputId": "a38212a9-112d-47c9-db61-f12b8ca29bca"
      },
      "execution_count": 3,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "        id       player_name games_x time_x goals_1wks_x            xG_1wks_x  \\\n",
              "0     8260    Erling Haaland       5    445            7    7.646338880062103   \n",
              "1     3697   Odsonne Edouard       5    432            4    3.337449833750725   \n",
              "2     6552      Bryan Mbeumo       5    450            4   3.8939481377601624   \n",
              "3    10177     Evan Ferguson       5    207            4   2.3121074587106705   \n",
              "4      453     Son Heung-Min       5    426            3   1.6028943955898285   \n",
              "..     ...               ...     ...    ...          ...                  ...   \n",
              "409  11926     Edson Álvarez       4    249            0   0.0643242746591568   \n",
              "410  11984  Youssef Chermiti       2     23            0  0.06607918441295624   \n",
              "411  11998   Hannes Delcroix       3    130            0  0.23279432207345963   \n",
              "412  12027    Mohammed Kudus       2     22            0                    0   \n",
              "413  12094       Mike Trésor       1     12            0  0.04863787442445755   \n",
              "\n",
              "    assists_1wks_x            xA_1wks_x shots_1wks_x key_passes_1wks_x  ...  \\\n",
              "0                1   1.1254648137837648           29                 7  ...   \n",
              "1                0  0.26749951019883156           20                 5  ...   \n",
              "2                0  0.47218552231788635           10                 5  ...   \n",
              "3                0  0.06968338042497635           14                 1  ...   \n",
              "4                0   1.3192270509898663           13                 9  ...   \n",
              "..             ...                  ...          ...               ...  ...   \n",
              "409              0  0.05303558334708214            1                 1  ...   \n",
              "410              0                    0            1                 0  ...   \n",
              "411              0   0.0830167606472969            4                 2  ...   \n",
              "412              0                    0            0                 0  ...   \n",
              "413              0  0.37140172719955444            1                 1  ...   \n",
              "\n",
              "    shots_1wks_y key_passes_1wks_y yellow_cards red_cards position_y  \\\n",
              "0             29                 7            0         0          F   \n",
              "1             20                 5            0         0          F   \n",
              "2             10                 5            0         0          F   \n",
              "3             14                 1            0         0        F S   \n",
              "4             13                 9            0         0        F M   \n",
              "..           ...               ...          ...       ...        ...   \n",
              "409            1                 1            2         0        M S   \n",
              "410            1                 0            1         0          S   \n",
              "411            4                 2            1         0        D S   \n",
              "412            0                 0            0         0          S   \n",
              "413            1                 1            0         0          S   \n",
              "\n",
              "        team_title_y npg_1wks_y          npxG_1wks_y              xGChain  \\\n",
              "0    Manchester City          6    6.124001145362854     6.56243109703064   \n",
              "1     Crystal Palace          4    3.337449833750725     3.16320563852787   \n",
              "2          Brentford          2    2.371610403060913   3.4626695215702057   \n",
              "3           Brighton          4   2.3121074587106705    3.259228117763996   \n",
              "4          Tottenham          3   1.6028943955898285    4.228595972061157   \n",
              "..               ...        ...                  ...                  ...   \n",
              "409         West Ham          0   0.0643242746591568    0.711536843329668   \n",
              "410          Everton          0  0.06607918441295624                    0   \n",
              "411          Burnley          0  0.23279432207345963   0.5750201642513275   \n",
              "412         West Ham          0                    0                    0   \n",
              "413          Burnley          0  0.04863787442445755  0.04863787442445755   \n",
              "\n",
              "              xGBuildup  \n",
              "0    0.5850657597184181  \n",
              "1    0.4057522751390934  \n",
              "2    1.0711335241794586  \n",
              "3    0.8774372674524784  \n",
              "4    1.6196235567331314  \n",
              "..                  ...  \n",
              "409  0.5941769666969776  \n",
              "410                   0  \n",
              "411  0.4920034073293209  \n",
              "412                   0  \n",
              "413                   0  \n",
              "\n",
              "[414 rows x 48 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-d062527f-8d92-4d01-aeae-4bc9779071b9\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>player_name</th>\n",
              "      <th>games_x</th>\n",
              "      <th>time_x</th>\n",
              "      <th>goals_1wks_x</th>\n",
              "      <th>xG_1wks_x</th>\n",
              "      <th>assists_1wks_x</th>\n",
              "      <th>xA_1wks_x</th>\n",
              "      <th>shots_1wks_x</th>\n",
              "      <th>key_passes_1wks_x</th>\n",
              "      <th>...</th>\n",
              "      <th>shots_1wks_y</th>\n",
              "      <th>key_passes_1wks_y</th>\n",
              "      <th>yellow_cards</th>\n",
              "      <th>red_cards</th>\n",
              "      <th>position_y</th>\n",
              "      <th>team_title_y</th>\n",
              "      <th>npg_1wks_y</th>\n",
              "      <th>npxG_1wks_y</th>\n",
              "      <th>xGChain</th>\n",
              "      <th>xGBuildup</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>8260</td>\n",
              "      <td>Erling Haaland</td>\n",
              "      <td>5</td>\n",
              "      <td>445</td>\n",
              "      <td>7</td>\n",
              "      <td>7.646338880062103</td>\n",
              "      <td>1</td>\n",
              "      <td>1.1254648137837648</td>\n",
              "      <td>29</td>\n",
              "      <td>7</td>\n",
              "      <td>...</td>\n",
              "      <td>29</td>\n",
              "      <td>7</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>F</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>6</td>\n",
              "      <td>6.124001145362854</td>\n",
              "      <td>6.56243109703064</td>\n",
              "      <td>0.5850657597184181</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>3697</td>\n",
              "      <td>Odsonne Edouard</td>\n",
              "      <td>5</td>\n",
              "      <td>432</td>\n",
              "      <td>4</td>\n",
              "      <td>3.337449833750725</td>\n",
              "      <td>0</td>\n",
              "      <td>0.26749951019883156</td>\n",
              "      <td>20</td>\n",
              "      <td>5</td>\n",
              "      <td>...</td>\n",
              "      <td>20</td>\n",
              "      <td>5</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>F</td>\n",
              "      <td>Crystal Palace</td>\n",
              "      <td>4</td>\n",
              "      <td>3.337449833750725</td>\n",
              "      <td>3.16320563852787</td>\n",
              "      <td>0.4057522751390934</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>6552</td>\n",
              "      <td>Bryan Mbeumo</td>\n",
              "      <td>5</td>\n",
              "      <td>450</td>\n",
              "      <td>4</td>\n",
              "      <td>3.8939481377601624</td>\n",
              "      <td>0</td>\n",
              "      <td>0.47218552231788635</td>\n",
              "      <td>10</td>\n",
              "      <td>5</td>\n",
              "      <td>...</td>\n",
              "      <td>10</td>\n",
              "      <td>5</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>F</td>\n",
              "      <td>Brentford</td>\n",
              "      <td>2</td>\n",
              "      <td>2.371610403060913</td>\n",
              "      <td>3.4626695215702057</td>\n",
              "      <td>1.0711335241794586</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>10177</td>\n",
              "      <td>Evan Ferguson</td>\n",
              "      <td>5</td>\n",
              "      <td>207</td>\n",
              "      <td>4</td>\n",
              "      <td>2.3121074587106705</td>\n",
              "      <td>0</td>\n",
              "      <td>0.06968338042497635</td>\n",
              "      <td>14</td>\n",
              "      <td>1</td>\n",
              "      <td>...</td>\n",
              "      <td>14</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>F S</td>\n",
              "      <td>Brighton</td>\n",
              "      <td>4</td>\n",
              "      <td>2.3121074587106705</td>\n",
              "      <td>3.259228117763996</td>\n",
              "      <td>0.8774372674524784</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>453</td>\n",
              "      <td>Son Heung-Min</td>\n",
              "      <td>5</td>\n",
              "      <td>426</td>\n",
              "      <td>3</td>\n",
              "      <td>1.6028943955898285</td>\n",
              "      <td>0</td>\n",
              "      <td>1.3192270509898663</td>\n",
              "      <td>13</td>\n",
              "      <td>9</td>\n",
              "      <td>...</td>\n",
              "      <td>13</td>\n",
              "      <td>9</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>F M</td>\n",
              "      <td>Tottenham</td>\n",
              "      <td>3</td>\n",
              "      <td>1.6028943955898285</td>\n",
              "      <td>4.228595972061157</td>\n",
              "      <td>1.6196235567331314</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>409</th>\n",
              "      <td>11926</td>\n",
              "      <td>Edson Álvarez</td>\n",
              "      <td>4</td>\n",
              "      <td>249</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0643242746591568</td>\n",
              "      <td>0</td>\n",
              "      <td>0.05303558334708214</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>...</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>M S</td>\n",
              "      <td>West Ham</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0643242746591568</td>\n",
              "      <td>0.711536843329668</td>\n",
              "      <td>0.5941769666969776</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>410</th>\n",
              "      <td>11984</td>\n",
              "      <td>Youssef Chermiti</td>\n",
              "      <td>2</td>\n",
              "      <td>23</td>\n",
              "      <td>0</td>\n",
              "      <td>0.06607918441295624</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>S</td>\n",
              "      <td>Everton</td>\n",
              "      <td>0</td>\n",
              "      <td>0.06607918441295624</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>411</th>\n",
              "      <td>11998</td>\n",
              "      <td>Hannes Delcroix</td>\n",
              "      <td>3</td>\n",
              "      <td>130</td>\n",
              "      <td>0</td>\n",
              "      <td>0.23279432207345963</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0830167606472969</td>\n",
              "      <td>4</td>\n",
              "      <td>2</td>\n",
              "      <td>...</td>\n",
              "      <td>4</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>D S</td>\n",
              "      <td>Burnley</td>\n",
              "      <td>0</td>\n",
              "      <td>0.23279432207345963</td>\n",
              "      <td>0.5750201642513275</td>\n",
              "      <td>0.4920034073293209</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>412</th>\n",
              "      <td>12027</td>\n",
              "      <td>Mohammed Kudus</td>\n",
              "      <td>2</td>\n",
              "      <td>22</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>S</td>\n",
              "      <td>West Ham</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>413</th>\n",
              "      <td>12094</td>\n",
              "      <td>Mike Trésor</td>\n",
              "      <td>1</td>\n",
              "      <td>12</td>\n",
              "      <td>0</td>\n",
              "      <td>0.04863787442445755</td>\n",
              "      <td>0</td>\n",
              "      <td>0.37140172719955444</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>...</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>S</td>\n",
              "      <td>Burnley</td>\n",
              "      <td>0</td>\n",
              "      <td>0.04863787442445755</td>\n",
              "      <td>0.04863787442445755</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>414 rows × 48 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-d062527f-8d92-4d01-aeae-4bc9779071b9')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-d062527f-8d92-4d01-aeae-4bc9779071b9 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-d062527f-8d92-4d01-aeae-4bc9779071b9');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-81d2c957-65b8-4de6-bd8b-b0855d1921a5\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-81d2c957-65b8-4de6-bd8b-b0855d1921a5')\"\n",
              "            title=\"Suggest charts.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-81d2c957-65b8-4de6-bd8b-b0855d1921a5 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 3
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "one_game_df.to_csv('one_game_df.csv', encoding='utf-8', index=False)\n",
        "one_game_df['time'] = one_game_df['time'].astype(int)\n",
        "one_game_df = one_game_df[one_game_df['time'] > 40]\n",
        "one_game_df['goals_1wks'] = one_game_df['goals_1wks'].astype(int)\n",
        "one_game_df['xG_1wks'] = one_game_df['xG_1wks'].astype(float)\n",
        "one_game_df['xgdifference'] = one_game_df.goals_1wks - one_game_df.xG_1wks\n",
        "one_game_df['assists_1wks'] = one_game_df['assists_1wks'].astype(int)\n",
        "one_game_df['xA_1wks'] = one_game_df['xA_1wks'].astype(float)\n",
        "one_game_df['xAdifference'] = one_game_df.assists_1wks - one_game_df.xA_1wks\n",
        "seasonedit = one_game_df.drop(columns=[ 'yellow_cards','red_cards','time'])\n",
        "sortXgDifference = seasonedit.sort_values('xgdifference')\n",
        "sortXgDifference.head(10)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "id": "IrXPzyJNg3ui",
        "outputId": "8dd6dbe6-63ae-4276-ba30-7427c8138c25"
      },
      "execution_count": 4,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "<ipython-input-4-30b8c2331977>:4: SettingWithCopyWarning: \n",
            "A value is trying to be set on a copy of a slice from a DataFrame.\n",
            "Try using .loc[row_indexer,col_indexer] = value instead\n",
            "\n",
            "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
            "  one_game_df['goals_1wks'] = one_game_df['goals_1wks'].astype(int)\n",
            "<ipython-input-4-30b8c2331977>:5: SettingWithCopyWarning: \n",
            "A value is trying to be set on a copy of a slice from a DataFrame.\n",
            "Try using .loc[row_indexer,col_indexer] = value instead\n",
            "\n",
            "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
            "  one_game_df['xG_1wks'] = one_game_df['xG_1wks'].astype(float)\n",
            "<ipython-input-4-30b8c2331977>:6: SettingWithCopyWarning: \n",
            "A value is trying to be set on a copy of a slice from a DataFrame.\n",
            "Try using .loc[row_indexer,col_indexer] = value instead\n",
            "\n",
            "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
            "  one_game_df['xgdifference'] = one_game_df.goals_1wks - one_game_df.xG_1wks\n",
            "<ipython-input-4-30b8c2331977>:7: SettingWithCopyWarning: \n",
            "A value is trying to be set on a copy of a slice from a DataFrame.\n",
            "Try using .loc[row_indexer,col_indexer] = value instead\n",
            "\n",
            "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
            "  one_game_df['assists_1wks'] = one_game_df['assists_1wks'].astype(int)\n",
            "<ipython-input-4-30b8c2331977>:8: SettingWithCopyWarning: \n",
            "A value is trying to be set on a copy of a slice from a DataFrame.\n",
            "Try using .loc[row_indexer,col_indexer] = value instead\n",
            "\n",
            "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
            "  one_game_df['xA_1wks'] = one_game_df['xA_1wks'].astype(float)\n",
            "<ipython-input-4-30b8c2331977>:9: SettingWithCopyWarning: \n",
            "A value is trying to be set on a copy of a slice from a DataFrame.\n",
            "Try using .loc[row_indexer,col_indexer] = value instead\n",
            "\n",
            "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
            "  one_game_df['xAdifference'] = one_game_df.assists_1wks - one_game_df.xA_1wks\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "        id                player_name games  goals_1wks   xG_1wks  \\\n",
              "85   10048            Nicolas Jackson     5           1  3.846626   \n",
              "293   8865              Ollie Watkins     5           0  2.412273   \n",
              "379  11356             Enzo Fernández     5           0  1.700878   \n",
              "44    1726         Abdoulaye Doucouré     5           1  2.532887   \n",
              "37     556            Marcus Rashford     5           1  2.412089   \n",
              "175   3621                Neal Maupay     3           0  1.387239   \n",
              "71    8066  Arnaut Danjuma Groeneveld     5           1  2.356220   \n",
              "119    672                Jordan Ayew     5           0  1.335297   \n",
              "77    9021                  Pape Sarr     5           1  2.258135   \n",
              "42    1228            Bruno Fernandes     5           1  2.257187   \n",
              "\n",
              "     assists_1wks   xA_1wks shots_1wks key_passes_1wks position  \\\n",
              "85              0  0.572392         18               3        F   \n",
              "293             2  1.261919         14               9        F   \n",
              "379             0  1.448496         12              11        M   \n",
              "44              0  1.088168          8               9        M   \n",
              "37              1  0.515744         23               6      F M   \n",
              "175             0  0.133534          6               1      F S   \n",
              "71              0  0.237589         16               3    F M S   \n",
              "119             2  1.040466         12               7        M   \n",
              "77              1  0.633261         13               6      M S   \n",
              "42              1  2.492852         15              16        M   \n",
              "\n",
              "            team_title npg_1wks           npxG_1wks             xGChain  \\\n",
              "85             Chelsea        1  3.8466256707906723  5.0157904252409935   \n",
              "293        Aston Villa        0  2.4122727811336517    4.52520352602005   \n",
              "379            Chelsea        0  0.9397089052945375   4.240689739584923   \n",
              "44             Everton        1  2.5328870117664337   2.634548358619213   \n",
              "37   Manchester United        1  2.4120892509818077   4.226575165987015   \n",
              "175  Brentford,Everton        0  1.3872387073934078  1.3435240425169468   \n",
              "71             Everton        1   2.356220342218876    2.57263220846653   \n",
              "119     Crystal Palace        0  1.3352972716093063  2.3114949762821198   \n",
              "77           Tottenham        1   2.258134976029396   4.816894814372063   \n",
              "42   Manchester United        0  1.4960184879601002  3.9431335031986237   \n",
              "\n",
              "               xGBuildup  xgdifference  xAdifference  \n",
              "85    1.1195539757609367     -2.846626     -0.572392  \n",
              "293   1.0770145878195763     -2.412273      0.738081  \n",
              "379   3.1709072664380074     -1.700878     -1.448496  \n",
              "44    0.5345625355839729     -1.532887     -1.088168  \n",
              "37     1.829933524131775     -1.412089      0.484256  \n",
              "175  0.06084267050027847     -1.387239     -0.133534  \n",
              "71   0.09537248313426971     -1.356220     -0.237589  \n",
              "119   1.1384435147047043     -1.335297      0.959534  \n",
              "77    2.7343757897615433     -1.258135      0.366739  \n",
              "42     2.056699976325035     -1.257187     -1.492852  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-a50c60c1-cc14-4a3e-9362-d25a613470c9\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>player_name</th>\n",
              "      <th>games</th>\n",
              "      <th>goals_1wks</th>\n",
              "      <th>xG_1wks</th>\n",
              "      <th>assists_1wks</th>\n",
              "      <th>xA_1wks</th>\n",
              "      <th>shots_1wks</th>\n",
              "      <th>key_passes_1wks</th>\n",
              "      <th>position</th>\n",
              "      <th>team_title</th>\n",
              "      <th>npg_1wks</th>\n",
              "      <th>npxG_1wks</th>\n",
              "      <th>xGChain</th>\n",
              "      <th>xGBuildup</th>\n",
              "      <th>xgdifference</th>\n",
              "      <th>xAdifference</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>85</th>\n",
              "      <td>10048</td>\n",
              "      <td>Nicolas Jackson</td>\n",
              "      <td>5</td>\n",
              "      <td>1</td>\n",
              "      <td>3.846626</td>\n",
              "      <td>0</td>\n",
              "      <td>0.572392</td>\n",
              "      <td>18</td>\n",
              "      <td>3</td>\n",
              "      <td>F</td>\n",
              "      <td>Chelsea</td>\n",
              "      <td>1</td>\n",
              "      <td>3.8466256707906723</td>\n",
              "      <td>5.0157904252409935</td>\n",
              "      <td>1.1195539757609367</td>\n",
              "      <td>-2.846626</td>\n",
              "      <td>-0.572392</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>293</th>\n",
              "      <td>8865</td>\n",
              "      <td>Ollie Watkins</td>\n",
              "      <td>5</td>\n",
              "      <td>0</td>\n",
              "      <td>2.412273</td>\n",
              "      <td>2</td>\n",
              "      <td>1.261919</td>\n",
              "      <td>14</td>\n",
              "      <td>9</td>\n",
              "      <td>F</td>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>0</td>\n",
              "      <td>2.4122727811336517</td>\n",
              "      <td>4.52520352602005</td>\n",
              "      <td>1.0770145878195763</td>\n",
              "      <td>-2.412273</td>\n",
              "      <td>0.738081</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>379</th>\n",
              "      <td>11356</td>\n",
              "      <td>Enzo Fernández</td>\n",
              "      <td>5</td>\n",
              "      <td>0</td>\n",
              "      <td>1.700878</td>\n",
              "      <td>0</td>\n",
              "      <td>1.448496</td>\n",
              "      <td>12</td>\n",
              "      <td>11</td>\n",
              "      <td>M</td>\n",
              "      <td>Chelsea</td>\n",
              "      <td>0</td>\n",
              "      <td>0.9397089052945375</td>\n",
              "      <td>4.240689739584923</td>\n",
              "      <td>3.1709072664380074</td>\n",
              "      <td>-1.700878</td>\n",
              "      <td>-1.448496</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>44</th>\n",
              "      <td>1726</td>\n",
              "      <td>Abdoulaye Doucouré</td>\n",
              "      <td>5</td>\n",
              "      <td>1</td>\n",
              "      <td>2.532887</td>\n",
              "      <td>0</td>\n",
              "      <td>1.088168</td>\n",
              "      <td>8</td>\n",
              "      <td>9</td>\n",
              "      <td>M</td>\n",
              "      <td>Everton</td>\n",
              "      <td>1</td>\n",
              "      <td>2.5328870117664337</td>\n",
              "      <td>2.634548358619213</td>\n",
              "      <td>0.5345625355839729</td>\n",
              "      <td>-1.532887</td>\n",
              "      <td>-1.088168</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>37</th>\n",
              "      <td>556</td>\n",
              "      <td>Marcus Rashford</td>\n",
              "      <td>5</td>\n",
              "      <td>1</td>\n",
              "      <td>2.412089</td>\n",
              "      <td>1</td>\n",
              "      <td>0.515744</td>\n",
              "      <td>23</td>\n",
              "      <td>6</td>\n",
              "      <td>F M</td>\n",
              "      <td>Manchester United</td>\n",
              "      <td>1</td>\n",
              "      <td>2.4120892509818077</td>\n",
              "      <td>4.226575165987015</td>\n",
              "      <td>1.829933524131775</td>\n",
              "      <td>-1.412089</td>\n",
              "      <td>0.484256</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>175</th>\n",
              "      <td>3621</td>\n",
              "      <td>Neal Maupay</td>\n",
              "      <td>3</td>\n",
              "      <td>0</td>\n",
              "      <td>1.387239</td>\n",
              "      <td>0</td>\n",
              "      <td>0.133534</td>\n",
              "      <td>6</td>\n",
              "      <td>1</td>\n",
              "      <td>F S</td>\n",
              "      <td>Brentford,Everton</td>\n",
              "      <td>0</td>\n",
              "      <td>1.3872387073934078</td>\n",
              "      <td>1.3435240425169468</td>\n",
              "      <td>0.06084267050027847</td>\n",
              "      <td>-1.387239</td>\n",
              "      <td>-0.133534</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>71</th>\n",
              "      <td>8066</td>\n",
              "      <td>Arnaut Danjuma Groeneveld</td>\n",
              "      <td>5</td>\n",
              "      <td>1</td>\n",
              "      <td>2.356220</td>\n",
              "      <td>0</td>\n",
              "      <td>0.237589</td>\n",
              "      <td>16</td>\n",
              "      <td>3</td>\n",
              "      <td>F M S</td>\n",
              "      <td>Everton</td>\n",
              "      <td>1</td>\n",
              "      <td>2.356220342218876</td>\n",
              "      <td>2.57263220846653</td>\n",
              "      <td>0.09537248313426971</td>\n",
              "      <td>-1.356220</td>\n",
              "      <td>-0.237589</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>119</th>\n",
              "      <td>672</td>\n",
              "      <td>Jordan Ayew</td>\n",
              "      <td>5</td>\n",
              "      <td>0</td>\n",
              "      <td>1.335297</td>\n",
              "      <td>2</td>\n",
              "      <td>1.040466</td>\n",
              "      <td>12</td>\n",
              "      <td>7</td>\n",
              "      <td>M</td>\n",
              "      <td>Crystal Palace</td>\n",
              "      <td>0</td>\n",
              "      <td>1.3352972716093063</td>\n",
              "      <td>2.3114949762821198</td>\n",
              "      <td>1.1384435147047043</td>\n",
              "      <td>-1.335297</td>\n",
              "      <td>0.959534</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>77</th>\n",
              "      <td>9021</td>\n",
              "      <td>Pape Sarr</td>\n",
              "      <td>5</td>\n",
              "      <td>1</td>\n",
              "      <td>2.258135</td>\n",
              "      <td>1</td>\n",
              "      <td>0.633261</td>\n",
              "      <td>13</td>\n",
              "      <td>6</td>\n",
              "      <td>M S</td>\n",
              "      <td>Tottenham</td>\n",
              "      <td>1</td>\n",
              "      <td>2.258134976029396</td>\n",
              "      <td>4.816894814372063</td>\n",
              "      <td>2.7343757897615433</td>\n",
              "      <td>-1.258135</td>\n",
              "      <td>0.366739</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>42</th>\n",
              "      <td>1228</td>\n",
              "      <td>Bruno Fernandes</td>\n",
              "      <td>5</td>\n",
              "      <td>1</td>\n",
              "      <td>2.257187</td>\n",
              "      <td>1</td>\n",
              "      <td>2.492852</td>\n",
              "      <td>15</td>\n",
              "      <td>16</td>\n",
              "      <td>M</td>\n",
              "      <td>Manchester United</td>\n",
              "      <td>0</td>\n",
              "      <td>1.4960184879601002</td>\n",
              "      <td>3.9431335031986237</td>\n",
              "      <td>2.056699976325035</td>\n",
              "      <td>-1.257187</td>\n",
              "      <td>-1.492852</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-a50c60c1-cc14-4a3e-9362-d25a613470c9')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-a50c60c1-cc14-4a3e-9362-d25a613470c9 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-a50c60c1-cc14-4a3e-9362-d25a613470c9');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-0bccedc9-9429-4db0-b941-a3f6d55190ae\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-0bccedc9-9429-4db0-b941-a3f6d55190ae')\"\n",
              "            title=\"Suggest charts.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-0bccedc9-9429-4db0-b941-a3f6d55190ae button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 4
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "sortXgDifference.tail(10)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 539
        },
        "id": "UxuLfRINhwx7",
        "outputId": "61d4efc4-1584-47d9-a362-ca1dcef2d543"
      },
      "execution_count": 5,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "       id      player_name games  goals_1wks   xG_1wks  assists_1wks  \\\n",
              "40    922  Andreas Pereira     5           1  0.023749             0   \n",
              "23   6556     Moussa Diaby     5           2  0.933002             2   \n",
              "11    531  Michail Antonio     5           2  0.905257             0   \n",
              "6    1776     Jarrod Bowen     5           3  1.852050             1   \n",
              "26   7218  Cristian Romero     5           2  0.765092             0   \n",
              "10    239      Pascal Groß     5           2  0.670655             0   \n",
              "4     453    Son Heung-Min     5           3  1.602894             0   \n",
              "3   10177    Evan Ferguson     5           4  2.312107             0   \n",
              "35  11839    Gustavo Hamer     4           2  0.263361             0   \n",
              "9    8845   Hee-Chan Hwang     5           3  0.418650             0   \n",
              "\n",
              "     xA_1wks shots_1wks key_passes_1wks position               team_title  \\\n",
              "40  0.708810          2               7      M S                   Fulham   \n",
              "23  2.701950         11               9      F M              Aston Villa   \n",
              "11  0.332539          5               2        F                 West Ham   \n",
              "6   0.808009         13               4        M                 West Ham   \n",
              "26  0.027825          5               1        D                Tottenham   \n",
              "10  1.181119         10              15        M                 Brighton   \n",
              "4   1.319227         13               9      F M                Tottenham   \n",
              "3   0.069683         14               1      F S                 Brighton   \n",
              "35  0.707059          5               7        M         Sheffield United   \n",
              "9   0.601140          7               1      M S  Wolverhampton Wanderers   \n",
              "\n",
              "   npg_1wks             npxG_1wks             xGChain           xGBuildup  \\\n",
              "40        1  0.023748640902340412  0.5504480302333832  0.3731652870774269   \n",
              "23        2     0.933002158999443   4.374222114682198  2.6094613447785378   \n",
              "11        2    0.9052570015192032    2.37540265917778  1.1376062035560608   \n",
              "6         3     1.852049708366394  2.6146714985370636  0.8377881795167923   \n",
              "26        2    0.7650923058390617  3.5863677859306335  3.5585429072380066   \n",
              "10        2    0.6706545501947403  5.0939019322395325   4.227585554122925   \n",
              "4         3    1.6028943955898285   4.228595972061157  1.6196235567331314   \n",
              "3         4    2.3121074587106705   3.259228117763996  0.8774372674524784   \n",
              "35        2    0.2633607517927885   0.563435610383749  0.1706579327583313   \n",
              "9         3    0.4186500832438469   0.880275965668261  0.5792413735762239   \n",
              "\n",
              "    xgdifference  xAdifference  \n",
              "40      0.976251     -0.708810  \n",
              "23      1.066998     -0.701950  \n",
              "11      1.094743     -0.332539  \n",
              "6       1.147950      0.191991  \n",
              "26      1.234908     -0.027825  \n",
              "10      1.329345     -1.181119  \n",
              "4       1.397106     -1.319227  \n",
              "3       1.687893     -0.069683  \n",
              "35      1.736639     -0.707059  \n",
              "9       2.581350     -0.601140  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-a4aea93a-4b1e-44da-99dd-ed7836c06b36\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>player_name</th>\n",
              "      <th>games</th>\n",
              "      <th>goals_1wks</th>\n",
              "      <th>xG_1wks</th>\n",
              "      <th>assists_1wks</th>\n",
              "      <th>xA_1wks</th>\n",
              "      <th>shots_1wks</th>\n",
              "      <th>key_passes_1wks</th>\n",
              "      <th>position</th>\n",
              "      <th>team_title</th>\n",
              "      <th>npg_1wks</th>\n",
              "      <th>npxG_1wks</th>\n",
              "      <th>xGChain</th>\n",
              "      <th>xGBuildup</th>\n",
              "      <th>xgdifference</th>\n",
              "      <th>xAdifference</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>40</th>\n",
              "      <td>922</td>\n",
              "      <td>Andreas Pereira</td>\n",
              "      <td>5</td>\n",
              "      <td>1</td>\n",
              "      <td>0.023749</td>\n",
              "      <td>0</td>\n",
              "      <td>0.708810</td>\n",
              "      <td>2</td>\n",
              "      <td>7</td>\n",
              "      <td>M S</td>\n",
              "      <td>Fulham</td>\n",
              "      <td>1</td>\n",
              "      <td>0.023748640902340412</td>\n",
              "      <td>0.5504480302333832</td>\n",
              "      <td>0.3731652870774269</td>\n",
              "      <td>0.976251</td>\n",
              "      <td>-0.708810</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>23</th>\n",
              "      <td>6556</td>\n",
              "      <td>Moussa Diaby</td>\n",
              "      <td>5</td>\n",
              "      <td>2</td>\n",
              "      <td>0.933002</td>\n",
              "      <td>2</td>\n",
              "      <td>2.701950</td>\n",
              "      <td>11</td>\n",
              "      <td>9</td>\n",
              "      <td>F M</td>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>2</td>\n",
              "      <td>0.933002158999443</td>\n",
              "      <td>4.374222114682198</td>\n",
              "      <td>2.6094613447785378</td>\n",
              "      <td>1.066998</td>\n",
              "      <td>-0.701950</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>11</th>\n",
              "      <td>531</td>\n",
              "      <td>Michail Antonio</td>\n",
              "      <td>5</td>\n",
              "      <td>2</td>\n",
              "      <td>0.905257</td>\n",
              "      <td>0</td>\n",
              "      <td>0.332539</td>\n",
              "      <td>5</td>\n",
              "      <td>2</td>\n",
              "      <td>F</td>\n",
              "      <td>West Ham</td>\n",
              "      <td>2</td>\n",
              "      <td>0.9052570015192032</td>\n",
              "      <td>2.37540265917778</td>\n",
              "      <td>1.1376062035560608</td>\n",
              "      <td>1.094743</td>\n",
              "      <td>-0.332539</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>1776</td>\n",
              "      <td>Jarrod Bowen</td>\n",
              "      <td>5</td>\n",
              "      <td>3</td>\n",
              "      <td>1.852050</td>\n",
              "      <td>1</td>\n",
              "      <td>0.808009</td>\n",
              "      <td>13</td>\n",
              "      <td>4</td>\n",
              "      <td>M</td>\n",
              "      <td>West Ham</td>\n",
              "      <td>3</td>\n",
              "      <td>1.852049708366394</td>\n",
              "      <td>2.6146714985370636</td>\n",
              "      <td>0.8377881795167923</td>\n",
              "      <td>1.147950</td>\n",
              "      <td>0.191991</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>26</th>\n",
              "      <td>7218</td>\n",
              "      <td>Cristian Romero</td>\n",
              "      <td>5</td>\n",
              "      <td>2</td>\n",
              "      <td>0.765092</td>\n",
              "      <td>0</td>\n",
              "      <td>0.027825</td>\n",
              "      <td>5</td>\n",
              "      <td>1</td>\n",
              "      <td>D</td>\n",
              "      <td>Tottenham</td>\n",
              "      <td>2</td>\n",
              "      <td>0.7650923058390617</td>\n",
              "      <td>3.5863677859306335</td>\n",
              "      <td>3.5585429072380066</td>\n",
              "      <td>1.234908</td>\n",
              "      <td>-0.027825</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10</th>\n",
              "      <td>239</td>\n",
              "      <td>Pascal Groß</td>\n",
              "      <td>5</td>\n",
              "      <td>2</td>\n",
              "      <td>0.670655</td>\n",
              "      <td>0</td>\n",
              "      <td>1.181119</td>\n",
              "      <td>10</td>\n",
              "      <td>15</td>\n",
              "      <td>M</td>\n",
              "      <td>Brighton</td>\n",
              "      <td>2</td>\n",
              "      <td>0.6706545501947403</td>\n",
              "      <td>5.0939019322395325</td>\n",
              "      <td>4.227585554122925</td>\n",
              "      <td>1.329345</td>\n",
              "      <td>-1.181119</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>453</td>\n",
              "      <td>Son Heung-Min</td>\n",
              "      <td>5</td>\n",
              "      <td>3</td>\n",
              "      <td>1.602894</td>\n",
              "      <td>0</td>\n",
              "      <td>1.319227</td>\n",
              "      <td>13</td>\n",
              "      <td>9</td>\n",
              "      <td>F M</td>\n",
              "      <td>Tottenham</td>\n",
              "      <td>3</td>\n",
              "      <td>1.6028943955898285</td>\n",
              "      <td>4.228595972061157</td>\n",
              "      <td>1.6196235567331314</td>\n",
              "      <td>1.397106</td>\n",
              "      <td>-1.319227</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>10177</td>\n",
              "      <td>Evan Ferguson</td>\n",
              "      <td>5</td>\n",
              "      <td>4</td>\n",
              "      <td>2.312107</td>\n",
              "      <td>0</td>\n",
              "      <td>0.069683</td>\n",
              "      <td>14</td>\n",
              "      <td>1</td>\n",
              "      <td>F S</td>\n",
              "      <td>Brighton</td>\n",
              "      <td>4</td>\n",
              "      <td>2.3121074587106705</td>\n",
              "      <td>3.259228117763996</td>\n",
              "      <td>0.8774372674524784</td>\n",
              "      <td>1.687893</td>\n",
              "      <td>-0.069683</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>35</th>\n",
              "      <td>11839</td>\n",
              "      <td>Gustavo Hamer</td>\n",
              "      <td>4</td>\n",
              "      <td>2</td>\n",
              "      <td>0.263361</td>\n",
              "      <td>0</td>\n",
              "      <td>0.707059</td>\n",
              "      <td>5</td>\n",
              "      <td>7</td>\n",
              "      <td>M</td>\n",
              "      <td>Sheffield United</td>\n",
              "      <td>2</td>\n",
              "      <td>0.2633607517927885</td>\n",
              "      <td>0.563435610383749</td>\n",
              "      <td>0.1706579327583313</td>\n",
              "      <td>1.736639</td>\n",
              "      <td>-0.707059</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>8845</td>\n",
              "      <td>Hee-Chan Hwang</td>\n",
              "      <td>5</td>\n",
              "      <td>3</td>\n",
              "      <td>0.418650</td>\n",
              "      <td>0</td>\n",
              "      <td>0.601140</td>\n",
              "      <td>7</td>\n",
              "      <td>1</td>\n",
              "      <td>M S</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>3</td>\n",
              "      <td>0.4186500832438469</td>\n",
              "      <td>0.880275965668261</td>\n",
              "      <td>0.5792413735762239</td>\n",
              "      <td>2.581350</td>\n",
              "      <td>-0.601140</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-a4aea93a-4b1e-44da-99dd-ed7836c06b36')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-a4aea93a-4b1e-44da-99dd-ed7836c06b36 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-a4aea93a-4b1e-44da-99dd-ed7836c06b36');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-0285fe6f-169a-45eb-bc0b-690f146bc0ed\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-0285fe6f-169a-45eb-bc0b-690f146bc0ed')\"\n",
              "            title=\"Suggest charts.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-0285fe6f-169a-45eb-bc0b-690f146bc0ed button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 5
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "one_game_df"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 600
        },
        "id": "NDPdgpJUVBBZ",
        "outputId": "f6826d11-d85f-45d6-b19e-325d036ff979"
      },
      "execution_count": 6,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "        id      player_name games  time  goals_1wks   xG_1wks  assists_1wks  \\\n",
              "0     8260   Erling Haaland     5   445           7  7.646339             1   \n",
              "1     3697  Odsonne Edouard     5   432           4  3.337450             0   \n",
              "2     6552     Bryan Mbeumo     5   450           4  3.893948             0   \n",
              "3    10177    Evan Ferguson     5   207           4  2.312107             0   \n",
              "4      453    Son Heung-Min     5   426           3  1.602894             0   \n",
              "..     ...              ...   ...   ...         ...       ...           ...   \n",
              "400  11723    Alfie Doughty     4   138           0  0.020795             0   \n",
              "401  11728    Calvin Bassey     3   107           0  0.000000             0   \n",
              "402  11729     Bénie Traoré     4   273           0  0.321223             0   \n",
              "409  11926    Edson Álvarez     4   249           0  0.064324             0   \n",
              "411  11998  Hannes Delcroix     3   130           0  0.232794             0   \n",
              "\n",
              "      xA_1wks shots_1wks key_passes_1wks yellow_cards red_cards position  \\\n",
              "0    1.125465         29               7            0         0        F   \n",
              "1    0.267500         20               5            0         0        F   \n",
              "2    0.472186         10               5            0         0        F   \n",
              "3    0.069683         14               1            0         0      F S   \n",
              "4    1.319227         13               9            0         0      F M   \n",
              "..        ...        ...             ...          ...       ...      ...   \n",
              "400  0.107335          1               1            0         0      D S   \n",
              "401  0.000000          0               0            0         1      D S   \n",
              "402  0.238483          1               2            0         0    F M S   \n",
              "409  0.053036          1               1            2         0      M S   \n",
              "411  0.083017          4               2            1         0      D S   \n",
              "\n",
              "           team_title npg_1wks             npxG_1wks             xGChain  \\\n",
              "0     Manchester City        6     6.124001145362854    6.56243109703064   \n",
              "1      Crystal Palace        4     3.337449833750725    3.16320563852787   \n",
              "2           Brentford        2     2.371610403060913  3.4626695215702057   \n",
              "3            Brighton        4    2.3121074587106705   3.259228117763996   \n",
              "4           Tottenham        3    1.6028943955898285   4.228595972061157   \n",
              "..                ...      ...                   ...                 ...   \n",
              "400             Luton        0  0.020794527605175972  0.1749723106622696   \n",
              "401            Fulham        0                     0                   0   \n",
              "402  Sheffield United        0    0.3212226927280426  1.1546861231327057   \n",
              "409          West Ham        0    0.0643242746591568   0.711536843329668   \n",
              "411           Burnley        0   0.23279432207345963  0.5750201642513275   \n",
              "\n",
              "                xGBuildup  xgdifference  xAdifference  \n",
              "0      0.5850657597184181     -0.646339     -0.125465  \n",
              "1      0.4057522751390934      0.662550     -0.267500  \n",
              "2      1.0711335241794586      0.106052     -0.472186  \n",
              "3      0.8774372674524784      1.687893     -0.069683  \n",
              "4      1.6196235567331314      1.397106     -1.319227  \n",
              "..                    ...           ...           ...  \n",
              "400  0.046842776238918304     -0.020795     -0.107335  \n",
              "401                     0      0.000000      0.000000  \n",
              "402    0.5949807167053223     -0.321223     -0.238483  \n",
              "409    0.5941769666969776     -0.064324     -0.053036  \n",
              "411    0.4920034073293209     -0.232794     -0.083017  \n",
              "\n",
              "[339 rows x 20 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-82bdff30-c223-4762-bb75-76a80bd45ee7\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>player_name</th>\n",
              "      <th>games</th>\n",
              "      <th>time</th>\n",
              "      <th>goals_1wks</th>\n",
              "      <th>xG_1wks</th>\n",
              "      <th>assists_1wks</th>\n",
              "      <th>xA_1wks</th>\n",
              "      <th>shots_1wks</th>\n",
              "      <th>key_passes_1wks</th>\n",
              "      <th>yellow_cards</th>\n",
              "      <th>red_cards</th>\n",
              "      <th>position</th>\n",
              "      <th>team_title</th>\n",
              "      <th>npg_1wks</th>\n",
              "      <th>npxG_1wks</th>\n",
              "      <th>xGChain</th>\n",
              "      <th>xGBuildup</th>\n",
              "      <th>xgdifference</th>\n",
              "      <th>xAdifference</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>8260</td>\n",
              "      <td>Erling Haaland</td>\n",
              "      <td>5</td>\n",
              "      <td>445</td>\n",
              "      <td>7</td>\n",
              "      <td>7.646339</td>\n",
              "      <td>1</td>\n",
              "      <td>1.125465</td>\n",
              "      <td>29</td>\n",
              "      <td>7</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>F</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>6</td>\n",
              "      <td>6.124001145362854</td>\n",
              "      <td>6.56243109703064</td>\n",
              "      <td>0.5850657597184181</td>\n",
              "      <td>-0.646339</td>\n",
              "      <td>-0.125465</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>3697</td>\n",
              "      <td>Odsonne Edouard</td>\n",
              "      <td>5</td>\n",
              "      <td>432</td>\n",
              "      <td>4</td>\n",
              "      <td>3.337450</td>\n",
              "      <td>0</td>\n",
              "      <td>0.267500</td>\n",
              "      <td>20</td>\n",
              "      <td>5</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>F</td>\n",
              "      <td>Crystal Palace</td>\n",
              "      <td>4</td>\n",
              "      <td>3.337449833750725</td>\n",
              "      <td>3.16320563852787</td>\n",
              "      <td>0.4057522751390934</td>\n",
              "      <td>0.662550</td>\n",
              "      <td>-0.267500</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>6552</td>\n",
              "      <td>Bryan Mbeumo</td>\n",
              "      <td>5</td>\n",
              "      <td>450</td>\n",
              "      <td>4</td>\n",
              "      <td>3.893948</td>\n",
              "      <td>0</td>\n",
              "      <td>0.472186</td>\n",
              "      <td>10</td>\n",
              "      <td>5</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>F</td>\n",
              "      <td>Brentford</td>\n",
              "      <td>2</td>\n",
              "      <td>2.371610403060913</td>\n",
              "      <td>3.4626695215702057</td>\n",
              "      <td>1.0711335241794586</td>\n",
              "      <td>0.106052</td>\n",
              "      <td>-0.472186</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>10177</td>\n",
              "      <td>Evan Ferguson</td>\n",
              "      <td>5</td>\n",
              "      <td>207</td>\n",
              "      <td>4</td>\n",
              "      <td>2.312107</td>\n",
              "      <td>0</td>\n",
              "      <td>0.069683</td>\n",
              "      <td>14</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>F S</td>\n",
              "      <td>Brighton</td>\n",
              "      <td>4</td>\n",
              "      <td>2.3121074587106705</td>\n",
              "      <td>3.259228117763996</td>\n",
              "      <td>0.8774372674524784</td>\n",
              "      <td>1.687893</td>\n",
              "      <td>-0.069683</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>453</td>\n",
              "      <td>Son Heung-Min</td>\n",
              "      <td>5</td>\n",
              "      <td>426</td>\n",
              "      <td>3</td>\n",
              "      <td>1.602894</td>\n",
              "      <td>0</td>\n",
              "      <td>1.319227</td>\n",
              "      <td>13</td>\n",
              "      <td>9</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>F M</td>\n",
              "      <td>Tottenham</td>\n",
              "      <td>3</td>\n",
              "      <td>1.6028943955898285</td>\n",
              "      <td>4.228595972061157</td>\n",
              "      <td>1.6196235567331314</td>\n",
              "      <td>1.397106</td>\n",
              "      <td>-1.319227</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>400</th>\n",
              "      <td>11723</td>\n",
              "      <td>Alfie Doughty</td>\n",
              "      <td>4</td>\n",
              "      <td>138</td>\n",
              "      <td>0</td>\n",
              "      <td>0.020795</td>\n",
              "      <td>0</td>\n",
              "      <td>0.107335</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>D S</td>\n",
              "      <td>Luton</td>\n",
              "      <td>0</td>\n",
              "      <td>0.020794527605175972</td>\n",
              "      <td>0.1749723106622696</td>\n",
              "      <td>0.046842776238918304</td>\n",
              "      <td>-0.020795</td>\n",
              "      <td>-0.107335</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>401</th>\n",
              "      <td>11728</td>\n",
              "      <td>Calvin Bassey</td>\n",
              "      <td>3</td>\n",
              "      <td>107</td>\n",
              "      <td>0</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>D S</td>\n",
              "      <td>Fulham</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>402</th>\n",
              "      <td>11729</td>\n",
              "      <td>Bénie Traoré</td>\n",
              "      <td>4</td>\n",
              "      <td>273</td>\n",
              "      <td>0</td>\n",
              "      <td>0.321223</td>\n",
              "      <td>0</td>\n",
              "      <td>0.238483</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>F M S</td>\n",
              "      <td>Sheffield United</td>\n",
              "      <td>0</td>\n",
              "      <td>0.3212226927280426</td>\n",
              "      <td>1.1546861231327057</td>\n",
              "      <td>0.5949807167053223</td>\n",
              "      <td>-0.321223</td>\n",
              "      <td>-0.238483</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>409</th>\n",
              "      <td>11926</td>\n",
              "      <td>Edson Álvarez</td>\n",
              "      <td>4</td>\n",
              "      <td>249</td>\n",
              "      <td>0</td>\n",
              "      <td>0.064324</td>\n",
              "      <td>0</td>\n",
              "      <td>0.053036</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>M S</td>\n",
              "      <td>West Ham</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0643242746591568</td>\n",
              "      <td>0.711536843329668</td>\n",
              "      <td>0.5941769666969776</td>\n",
              "      <td>-0.064324</td>\n",
              "      <td>-0.053036</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>411</th>\n",
              "      <td>11998</td>\n",
              "      <td>Hannes Delcroix</td>\n",
              "      <td>3</td>\n",
              "      <td>130</td>\n",
              "      <td>0</td>\n",
              "      <td>0.232794</td>\n",
              "      <td>0</td>\n",
              "      <td>0.083017</td>\n",
              "      <td>4</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>D S</td>\n",
              "      <td>Burnley</td>\n",
              "      <td>0</td>\n",
              "      <td>0.23279432207345963</td>\n",
              "      <td>0.5750201642513275</td>\n",
              "      <td>0.4920034073293209</td>\n",
              "      <td>-0.232794</td>\n",
              "      <td>-0.083017</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>339 rows × 20 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-82bdff30-c223-4762-bb75-76a80bd45ee7')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-82bdff30-c223-4762-bb75-76a80bd45ee7 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-82bdff30-c223-4762-bb75-76a80bd45ee7');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-f2fb03fa-942d-491c-adcc-e6e337c6ae1b\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-f2fb03fa-942d-491c-adcc-e6e337c6ae1b')\"\n",
              "            title=\"Suggest charts.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-f2fb03fa-942d-491c-adcc-e6e337c6ae1b button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 6
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "onegamedftidy = one_game_df.drop(columns=[\n",
        " 'time',\n",
        " 'goals_1wks',\n",
        " 'assists_1wks',\n",
        " 'shots_1wks',\n",
        " 'key_passes_1wks',\n",
        " 'yellow_cards',\n",
        " 'red_cards',\n",
        " 'npg_1wks',\n",
        " 'npxG_1wks',\n",
        " 'xGChain',\n",
        " 'xGBuildup',\n",
        " 'xgdifference',\n",
        " 'xAdifference'])\n",
        "onegamedftidy"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 423
        },
        "id": "RKf0tUGEh8FV",
        "outputId": "771fe7a8-a50a-4cc6-f8da-2379d284b490"
      },
      "execution_count": 7,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "        id      player_name games   xG_1wks   xA_1wks position  \\\n",
              "0     8260   Erling Haaland     5  7.646339  1.125465        F   \n",
              "1     3697  Odsonne Edouard     5  3.337450  0.267500        F   \n",
              "2     6552     Bryan Mbeumo     5  3.893948  0.472186        F   \n",
              "3    10177    Evan Ferguson     5  2.312107  0.069683      F S   \n",
              "4      453    Son Heung-Min     5  1.602894  1.319227      F M   \n",
              "..     ...              ...   ...       ...       ...      ...   \n",
              "400  11723    Alfie Doughty     4  0.020795  0.107335      D S   \n",
              "401  11728    Calvin Bassey     3  0.000000  0.000000      D S   \n",
              "402  11729     Bénie Traoré     4  0.321223  0.238483    F M S   \n",
              "409  11926    Edson Álvarez     4  0.064324  0.053036      M S   \n",
              "411  11998  Hannes Delcroix     3  0.232794  0.083017      D S   \n",
              "\n",
              "           team_title  \n",
              "0     Manchester City  \n",
              "1      Crystal Palace  \n",
              "2           Brentford  \n",
              "3            Brighton  \n",
              "4           Tottenham  \n",
              "..                ...  \n",
              "400             Luton  \n",
              "401            Fulham  \n",
              "402  Sheffield United  \n",
              "409          West Ham  \n",
              "411           Burnley  \n",
              "\n",
              "[339 rows x 7 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-8bde9592-cf21-4b5f-b0e1-7331cf5f9179\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>player_name</th>\n",
              "      <th>games</th>\n",
              "      <th>xG_1wks</th>\n",
              "      <th>xA_1wks</th>\n",
              "      <th>position</th>\n",
              "      <th>team_title</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>8260</td>\n",
              "      <td>Erling Haaland</td>\n",
              "      <td>5</td>\n",
              "      <td>7.646339</td>\n",
              "      <td>1.125465</td>\n",
              "      <td>F</td>\n",
              "      <td>Manchester City</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>3697</td>\n",
              "      <td>Odsonne Edouard</td>\n",
              "      <td>5</td>\n",
              "      <td>3.337450</td>\n",
              "      <td>0.267500</td>\n",
              "      <td>F</td>\n",
              "      <td>Crystal Palace</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>6552</td>\n",
              "      <td>Bryan Mbeumo</td>\n",
              "      <td>5</td>\n",
              "      <td>3.893948</td>\n",
              "      <td>0.472186</td>\n",
              "      <td>F</td>\n",
              "      <td>Brentford</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>10177</td>\n",
              "      <td>Evan Ferguson</td>\n",
              "      <td>5</td>\n",
              "      <td>2.312107</td>\n",
              "      <td>0.069683</td>\n",
              "      <td>F S</td>\n",
              "      <td>Brighton</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>453</td>\n",
              "      <td>Son Heung-Min</td>\n",
              "      <td>5</td>\n",
              "      <td>1.602894</td>\n",
              "      <td>1.319227</td>\n",
              "      <td>F M</td>\n",
              "      <td>Tottenham</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>400</th>\n",
              "      <td>11723</td>\n",
              "      <td>Alfie Doughty</td>\n",
              "      <td>4</td>\n",
              "      <td>0.020795</td>\n",
              "      <td>0.107335</td>\n",
              "      <td>D S</td>\n",
              "      <td>Luton</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>401</th>\n",
              "      <td>11728</td>\n",
              "      <td>Calvin Bassey</td>\n",
              "      <td>3</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>D S</td>\n",
              "      <td>Fulham</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>402</th>\n",
              "      <td>11729</td>\n",
              "      <td>Bénie Traoré</td>\n",
              "      <td>4</td>\n",
              "      <td>0.321223</td>\n",
              "      <td>0.238483</td>\n",
              "      <td>F M S</td>\n",
              "      <td>Sheffield United</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>409</th>\n",
              "      <td>11926</td>\n",
              "      <td>Edson Álvarez</td>\n",
              "      <td>4</td>\n",
              "      <td>0.064324</td>\n",
              "      <td>0.053036</td>\n",
              "      <td>M S</td>\n",
              "      <td>West Ham</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>411</th>\n",
              "      <td>11998</td>\n",
              "      <td>Hannes Delcroix</td>\n",
              "      <td>3</td>\n",
              "      <td>0.232794</td>\n",
              "      <td>0.083017</td>\n",
              "      <td>D S</td>\n",
              "      <td>Burnley</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>339 rows × 7 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-8bde9592-cf21-4b5f-b0e1-7331cf5f9179')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-8bde9592-cf21-4b5f-b0e1-7331cf5f9179 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-8bde9592-cf21-4b5f-b0e1-7331cf5f9179');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-0355aedb-43a2-4cb4-ba3b-dc2e14fe82b5\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-0355aedb-43a2-4cb4-ba3b-dc2e14fe82b5')\"\n",
              "            title=\"Suggest charts.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-0355aedb-43a2-4cb4-ba3b-dc2e14fe82b5 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 7
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "!git clone https://github.com/pratos/fpl-mappers\n",
        "!git clone https://github.com/ChrisMusson/FPL-ID-Map\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "B9kCj8OeiKGn",
        "outputId": "c38c9dab-4643-4bab-d221-ccaee912b357"
      },
      "execution_count": 8,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Cloning into 'fpl-mappers'...\n",
            "remote: Enumerating objects: 94, done.\u001b[K\n",
            "remote: Counting objects: 100% (94/94), done.\u001b[K\n",
            "remote: Compressing objects: 100% (56/56), done.\u001b[K\n",
            "remote: Total 94 (delta 32), reused 89 (delta 30), pack-reused 0\u001b[K\n",
            "Receiving objects: 100% (94/94), 217.69 KiB | 7.02 MiB/s, done.\n",
            "Resolving deltas: 100% (32/32), done.\n",
            "Cloning into 'FPL-ID-Map'...\n",
            "remote: Enumerating objects: 242, done.\u001b[K\n",
            "remote: Counting objects: 100% (242/242), done.\u001b[K\n",
            "remote: Compressing objects: 100% (120/120), done.\u001b[K\n",
            "remote: Total 242 (delta 176), reused 188 (delta 122), pack-reused 0\u001b[K\n",
            "Receiving objects: 100% (242/242), 273.05 KiB | 6.21 MiB/s, done.\n",
            "Resolving deltas: 100% (176/176), done.\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "data1 = pd.read_csv('/content/FPL-ID-Map/Understat.csv', on_bad_lines='skip')\n",
        "data2 = pd.read_csv('/content/FPL-ID-Map/FPL/22-23.csv', on_bad_lines='skip')\n",
        "understatwithfplid1 = pd.merge(data2,\n",
        "                     data1,\n",
        "                     on ='code',\n",
        "                     how ='left')\n",
        "understatid = understatwithfplid1.drop(columns=[\n",
        "'code',\n",
        " 'first_name_x',\n",
        " 'second_name_x',\n",
        " 'web_name_x',\n",
        " 'first_name_y',\n",
        " 'second_name_y',\n",
        " 'web_name_y',])\n",
        "one_game_df.rename(columns={'id': 'understat'}, inplace=True)\n",
        "one_game_df"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 600
        },
        "id": "SaX7692EiQA7",
        "outputId": "54236020-5b56-458f-acd4-f3a78e8e49c0"
      },
      "execution_count": 9,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "    understat      player_name games  time  goals_1wks   xG_1wks  \\\n",
              "0        8260   Erling Haaland     5   445           7  7.646339   \n",
              "1        3697  Odsonne Edouard     5   432           4  3.337450   \n",
              "2        6552     Bryan Mbeumo     5   450           4  3.893948   \n",
              "3       10177    Evan Ferguson     5   207           4  2.312107   \n",
              "4         453    Son Heung-Min     5   426           3  1.602894   \n",
              "..        ...              ...   ...   ...         ...       ...   \n",
              "400     11723    Alfie Doughty     4   138           0  0.020795   \n",
              "401     11728    Calvin Bassey     3   107           0  0.000000   \n",
              "402     11729     Bénie Traoré     4   273           0  0.321223   \n",
              "409     11926    Edson Álvarez     4   249           0  0.064324   \n",
              "411     11998  Hannes Delcroix     3   130           0  0.232794   \n",
              "\n",
              "     assists_1wks   xA_1wks shots_1wks key_passes_1wks yellow_cards red_cards  \\\n",
              "0               1  1.125465         29               7            0         0   \n",
              "1               0  0.267500         20               5            0         0   \n",
              "2               0  0.472186         10               5            0         0   \n",
              "3               0  0.069683         14               1            0         0   \n",
              "4               0  1.319227         13               9            0         0   \n",
              "..            ...       ...        ...             ...          ...       ...   \n",
              "400             0  0.107335          1               1            0         0   \n",
              "401             0  0.000000          0               0            0         1   \n",
              "402             0  0.238483          1               2            0         0   \n",
              "409             0  0.053036          1               1            2         0   \n",
              "411             0  0.083017          4               2            1         0   \n",
              "\n",
              "    position        team_title npg_1wks             npxG_1wks  \\\n",
              "0          F   Manchester City        6     6.124001145362854   \n",
              "1          F    Crystal Palace        4     3.337449833750725   \n",
              "2          F         Brentford        2     2.371610403060913   \n",
              "3        F S          Brighton        4    2.3121074587106705   \n",
              "4        F M         Tottenham        3    1.6028943955898285   \n",
              "..       ...               ...      ...                   ...   \n",
              "400      D S             Luton        0  0.020794527605175972   \n",
              "401      D S            Fulham        0                     0   \n",
              "402    F M S  Sheffield United        0    0.3212226927280426   \n",
              "409      M S          West Ham        0    0.0643242746591568   \n",
              "411      D S           Burnley        0   0.23279432207345963   \n",
              "\n",
              "                xGChain             xGBuildup  xgdifference  xAdifference  \n",
              "0      6.56243109703064    0.5850657597184181     -0.646339     -0.125465  \n",
              "1      3.16320563852787    0.4057522751390934      0.662550     -0.267500  \n",
              "2    3.4626695215702057    1.0711335241794586      0.106052     -0.472186  \n",
              "3     3.259228117763996    0.8774372674524784      1.687893     -0.069683  \n",
              "4     4.228595972061157    1.6196235567331314      1.397106     -1.319227  \n",
              "..                  ...                   ...           ...           ...  \n",
              "400  0.1749723106622696  0.046842776238918304     -0.020795     -0.107335  \n",
              "401                   0                     0      0.000000      0.000000  \n",
              "402  1.1546861231327057    0.5949807167053223     -0.321223     -0.238483  \n",
              "409   0.711536843329668    0.5941769666969776     -0.064324     -0.053036  \n",
              "411  0.5750201642513275    0.4920034073293209     -0.232794     -0.083017  \n",
              "\n",
              "[339 rows x 20 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-de39cc00-12b2-4a72-bcda-1a54666d510e\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>understat</th>\n",
              "      <th>player_name</th>\n",
              "      <th>games</th>\n",
              "      <th>time</th>\n",
              "      <th>goals_1wks</th>\n",
              "      <th>xG_1wks</th>\n",
              "      <th>assists_1wks</th>\n",
              "      <th>xA_1wks</th>\n",
              "      <th>shots_1wks</th>\n",
              "      <th>key_passes_1wks</th>\n",
              "      <th>yellow_cards</th>\n",
              "      <th>red_cards</th>\n",
              "      <th>position</th>\n",
              "      <th>team_title</th>\n",
              "      <th>npg_1wks</th>\n",
              "      <th>npxG_1wks</th>\n",
              "      <th>xGChain</th>\n",
              "      <th>xGBuildup</th>\n",
              "      <th>xgdifference</th>\n",
              "      <th>xAdifference</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>8260</td>\n",
              "      <td>Erling Haaland</td>\n",
              "      <td>5</td>\n",
              "      <td>445</td>\n",
              "      <td>7</td>\n",
              "      <td>7.646339</td>\n",
              "      <td>1</td>\n",
              "      <td>1.125465</td>\n",
              "      <td>29</td>\n",
              "      <td>7</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>F</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>6</td>\n",
              "      <td>6.124001145362854</td>\n",
              "      <td>6.56243109703064</td>\n",
              "      <td>0.5850657597184181</td>\n",
              "      <td>-0.646339</td>\n",
              "      <td>-0.125465</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>3697</td>\n",
              "      <td>Odsonne Edouard</td>\n",
              "      <td>5</td>\n",
              "      <td>432</td>\n",
              "      <td>4</td>\n",
              "      <td>3.337450</td>\n",
              "      <td>0</td>\n",
              "      <td>0.267500</td>\n",
              "      <td>20</td>\n",
              "      <td>5</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>F</td>\n",
              "      <td>Crystal Palace</td>\n",
              "      <td>4</td>\n",
              "      <td>3.337449833750725</td>\n",
              "      <td>3.16320563852787</td>\n",
              "      <td>0.4057522751390934</td>\n",
              "      <td>0.662550</td>\n",
              "      <td>-0.267500</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>6552</td>\n",
              "      <td>Bryan Mbeumo</td>\n",
              "      <td>5</td>\n",
              "      <td>450</td>\n",
              "      <td>4</td>\n",
              "      <td>3.893948</td>\n",
              "      <td>0</td>\n",
              "      <td>0.472186</td>\n",
              "      <td>10</td>\n",
              "      <td>5</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>F</td>\n",
              "      <td>Brentford</td>\n",
              "      <td>2</td>\n",
              "      <td>2.371610403060913</td>\n",
              "      <td>3.4626695215702057</td>\n",
              "      <td>1.0711335241794586</td>\n",
              "      <td>0.106052</td>\n",
              "      <td>-0.472186</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>10177</td>\n",
              "      <td>Evan Ferguson</td>\n",
              "      <td>5</td>\n",
              "      <td>207</td>\n",
              "      <td>4</td>\n",
              "      <td>2.312107</td>\n",
              "      <td>0</td>\n",
              "      <td>0.069683</td>\n",
              "      <td>14</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>F S</td>\n",
              "      <td>Brighton</td>\n",
              "      <td>4</td>\n",
              "      <td>2.3121074587106705</td>\n",
              "      <td>3.259228117763996</td>\n",
              "      <td>0.8774372674524784</td>\n",
              "      <td>1.687893</td>\n",
              "      <td>-0.069683</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>453</td>\n",
              "      <td>Son Heung-Min</td>\n",
              "      <td>5</td>\n",
              "      <td>426</td>\n",
              "      <td>3</td>\n",
              "      <td>1.602894</td>\n",
              "      <td>0</td>\n",
              "      <td>1.319227</td>\n",
              "      <td>13</td>\n",
              "      <td>9</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>F M</td>\n",
              "      <td>Tottenham</td>\n",
              "      <td>3</td>\n",
              "      <td>1.6028943955898285</td>\n",
              "      <td>4.228595972061157</td>\n",
              "      <td>1.6196235567331314</td>\n",
              "      <td>1.397106</td>\n",
              "      <td>-1.319227</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>400</th>\n",
              "      <td>11723</td>\n",
              "      <td>Alfie Doughty</td>\n",
              "      <td>4</td>\n",
              "      <td>138</td>\n",
              "      <td>0</td>\n",
              "      <td>0.020795</td>\n",
              "      <td>0</td>\n",
              "      <td>0.107335</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>D S</td>\n",
              "      <td>Luton</td>\n",
              "      <td>0</td>\n",
              "      <td>0.020794527605175972</td>\n",
              "      <td>0.1749723106622696</td>\n",
              "      <td>0.046842776238918304</td>\n",
              "      <td>-0.020795</td>\n",
              "      <td>-0.107335</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>401</th>\n",
              "      <td>11728</td>\n",
              "      <td>Calvin Bassey</td>\n",
              "      <td>3</td>\n",
              "      <td>107</td>\n",
              "      <td>0</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>D S</td>\n",
              "      <td>Fulham</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>402</th>\n",
              "      <td>11729</td>\n",
              "      <td>Bénie Traoré</td>\n",
              "      <td>4</td>\n",
              "      <td>273</td>\n",
              "      <td>0</td>\n",
              "      <td>0.321223</td>\n",
              "      <td>0</td>\n",
              "      <td>0.238483</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>F M S</td>\n",
              "      <td>Sheffield United</td>\n",
              "      <td>0</td>\n",
              "      <td>0.3212226927280426</td>\n",
              "      <td>1.1546861231327057</td>\n",
              "      <td>0.5949807167053223</td>\n",
              "      <td>-0.321223</td>\n",
              "      <td>-0.238483</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>409</th>\n",
              "      <td>11926</td>\n",
              "      <td>Edson Álvarez</td>\n",
              "      <td>4</td>\n",
              "      <td>249</td>\n",
              "      <td>0</td>\n",
              "      <td>0.064324</td>\n",
              "      <td>0</td>\n",
              "      <td>0.053036</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>M S</td>\n",
              "      <td>West Ham</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0643242746591568</td>\n",
              "      <td>0.711536843329668</td>\n",
              "      <td>0.5941769666969776</td>\n",
              "      <td>-0.064324</td>\n",
              "      <td>-0.053036</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>411</th>\n",
              "      <td>11998</td>\n",
              "      <td>Hannes Delcroix</td>\n",
              "      <td>3</td>\n",
              "      <td>130</td>\n",
              "      <td>0</td>\n",
              "      <td>0.232794</td>\n",
              "      <td>0</td>\n",
              "      <td>0.083017</td>\n",
              "      <td>4</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>D S</td>\n",
              "      <td>Burnley</td>\n",
              "      <td>0</td>\n",
              "      <td>0.23279432207345963</td>\n",
              "      <td>0.5750201642513275</td>\n",
              "      <td>0.4920034073293209</td>\n",
              "      <td>-0.232794</td>\n",
              "      <td>-0.083017</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>339 rows × 20 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-de39cc00-12b2-4a72-bcda-1a54666d510e')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-de39cc00-12b2-4a72-bcda-1a54666d510e button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-de39cc00-12b2-4a72-bcda-1a54666d510e');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-98f7901e-bd77-4c2f-829e-49d5bdbe13eb\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-98f7901e-bd77-4c2f-829e-49d5bdbe13eb')\"\n",
              "            title=\"Suggest charts.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-98f7901e-bd77-4c2f-829e-49d5bdbe13eb button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 9
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "!git clone https://github.com/huricane85/FPL-API-Fixture-modeler"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "dU1giLdZir3J",
        "outputId": "e53dbf8d-7dbc-47eb-a3e6-c685d1ca2642"
      },
      "execution_count": 10,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Cloning into 'FPL-API-Fixture-modeler'...\n",
            "remote: Enumerating objects: 72, done.\u001b[K\n",
            "remote: Counting objects: 100% (72/72), done.\u001b[K\n",
            "remote: Compressing objects: 100% (72/72), done.\u001b[K\n",
            "remote: Total 72 (delta 35), reused 0 (delta 0), pack-reused 0\u001b[K\n",
            "Receiving objects: 100% (72/72), 2.75 MiB | 5.42 MiB/s, done.\n",
            "Resolving deltas: 100% (35/35), done.\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import pandas as pd\n",
        "\n",
        "# read the CSV file from GitHub into a DataFrame\n",
        "url = \"https://raw.githubusercontent.com/ChrisMusson/FPL-ID-Map/main/Master.csv\"\n",
        "df = pd.read_csv(url)\n",
        "\n",
        "# rename the \"22-23\" column to \"id\"\n",
        "df.rename(columns={'22-23': 'id'}, inplace=True)\n",
        "\n",
        "# convert \"id\" and \"understat\" columns to int64 and float64 respectively\n",
        "df['id'] = pd.to_numeric(df['id'], errors='coerce', downcast='integer').astype('Int64')\n",
        "df['understat'] = pd.to_numeric(df['understat'], errors='coerce', downcast='integer').astype('Int64')\n",
        "\n",
        "# filter out rows where \"understat\" is null\n",
        "df = df.dropna(subset=['understat'])\n",
        "\n",
        "# change data type of \"id\" column to float64\n",
        "df['id'] = df['id'].astype('float64')\n",
        "\n",
        "# create a new DataFrame with only the \"understat\" and \"id\" columns\n",
        "new_df = df[['understat', 'id']].dropna(subset=['id']).copy()\n",
        "\n",
        "# display the new DataFrame\n",
        "\n",
        "new_df\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 423
        },
        "id": "WRijWphEVPuN",
        "outputId": "94e93fd6-b103-4ea3-c48e-7288901e16f8"
      },
      "execution_count": 11,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "      understat     id\n",
              "37         7821  760.0\n",
              "38         1697  627.0\n",
              "55         2371  326.0\n",
              "62          489  274.0\n",
              "77         8158  502.0\n",
              "...         ...    ...\n",
              "1933      11301  695.0\n",
              "1934      11146  632.0\n",
              "1935      11189  646.0\n",
              "1936      11302  696.0\n",
              "1937      11195  650.0\n",
              "\n",
              "[763 rows x 2 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-a7be0c11-ab54-4f53-8fa8-abe5ab3d74e6\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>understat</th>\n",
              "      <th>id</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>37</th>\n",
              "      <td>7821</td>\n",
              "      <td>760.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>38</th>\n",
              "      <td>1697</td>\n",
              "      <td>627.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>55</th>\n",
              "      <td>2371</td>\n",
              "      <td>326.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>62</th>\n",
              "      <td>489</td>\n",
              "      <td>274.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>77</th>\n",
              "      <td>8158</td>\n",
              "      <td>502.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1933</th>\n",
              "      <td>11301</td>\n",
              "      <td>695.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1934</th>\n",
              "      <td>11146</td>\n",
              "      <td>632.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1935</th>\n",
              "      <td>11189</td>\n",
              "      <td>646.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1936</th>\n",
              "      <td>11302</td>\n",
              "      <td>696.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1937</th>\n",
              "      <td>11195</td>\n",
              "      <td>650.0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>763 rows × 2 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-a7be0c11-ab54-4f53-8fa8-abe5ab3d74e6')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-a7be0c11-ab54-4f53-8fa8-abe5ab3d74e6 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-a7be0c11-ab54-4f53-8fa8-abe5ab3d74e6');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-5ad1f92a-531e-42dd-a585-a76c63b3069c\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-5ad1f92a-531e-42dd-a585-a76c63b3069c')\"\n",
              "            title=\"Suggest charts.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-5ad1f92a-531e-42dd-a585-a76c63b3069c button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 11
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "new_df"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 423
        },
        "id": "NhQ4dZKdUv36",
        "outputId": "6b2c9e63-e072-4194-c580-65eeee792221"
      },
      "execution_count": 12,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "      understat     id\n",
              "37         7821  760.0\n",
              "38         1697  627.0\n",
              "55         2371  326.0\n",
              "62          489  274.0\n",
              "77         8158  502.0\n",
              "...         ...    ...\n",
              "1933      11301  695.0\n",
              "1934      11146  632.0\n",
              "1935      11189  646.0\n",
              "1936      11302  696.0\n",
              "1937      11195  650.0\n",
              "\n",
              "[763 rows x 2 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-31e0a111-7188-4133-8542-0913da1ec5fe\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>understat</th>\n",
              "      <th>id</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>37</th>\n",
              "      <td>7821</td>\n",
              "      <td>760.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>38</th>\n",
              "      <td>1697</td>\n",
              "      <td>627.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>55</th>\n",
              "      <td>2371</td>\n",
              "      <td>326.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>62</th>\n",
              "      <td>489</td>\n",
              "      <td>274.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>77</th>\n",
              "      <td>8158</td>\n",
              "      <td>502.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1933</th>\n",
              "      <td>11301</td>\n",
              "      <td>695.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1934</th>\n",
              "      <td>11146</td>\n",
              "      <td>632.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1935</th>\n",
              "      <td>11189</td>\n",
              "      <td>646.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1936</th>\n",
              "      <td>11302</td>\n",
              "      <td>696.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1937</th>\n",
              "      <td>11195</td>\n",
              "      <td>650.0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>763 rows × 2 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-31e0a111-7188-4133-8542-0913da1ec5fe')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-31e0a111-7188-4133-8542-0913da1ec5fe button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-31e0a111-7188-4133-8542-0913da1ec5fe');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-7ea55bb1-13b6-4903-81d7-faf63e41019f\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-7ea55bb1-13b6-4903-81d7-faf63e41019f')\"\n",
              "            title=\"Suggest charts.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-7ea55bb1-13b6-4903-81d7-faf63e41019f button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 12
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "one_game_df[\"understat\"] = one_game_df[\"understat\"].astype(str).astype(int)\n",
        "understatid2 = new_df\n",
        "understatwithfplid = pd.merge(one_game_df,\n",
        "                     understatid2,\n",
        "                     on ='understat',\n",
        "                     how ='left')\n",
        "understatwithfplid"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 600
        },
        "id": "KmDbXEnfi2v1",
        "outputId": "59522f22-9c0a-47d6-b092-3e0323c4075e"
      },
      "execution_count": 13,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "     understat      player_name games  time  goals_1wks   xG_1wks  \\\n",
              "0         8260   Erling Haaland     5   445           7  7.646339   \n",
              "1         3697  Odsonne Edouard     5   432           4  3.337450   \n",
              "2         6552     Bryan Mbeumo     5   450           4  3.893948   \n",
              "3        10177    Evan Ferguson     5   207           4  2.312107   \n",
              "4          453    Son Heung-Min     5   426           3  1.602894   \n",
              "..         ...              ...   ...   ...         ...       ...   \n",
              "334      11723    Alfie Doughty     4   138           0  0.020795   \n",
              "335      11728    Calvin Bassey     3   107           0  0.000000   \n",
              "336      11729     Bénie Traoré     4   273           0  0.321223   \n",
              "337      11926    Edson Álvarez     4   249           0  0.064324   \n",
              "338      11998  Hannes Delcroix     3   130           0  0.232794   \n",
              "\n",
              "     assists_1wks   xA_1wks shots_1wks key_passes_1wks  ... red_cards  \\\n",
              "0               1  1.125465         29               7  ...         0   \n",
              "1               0  0.267500         20               5  ...         0   \n",
              "2               0  0.472186         10               5  ...         0   \n",
              "3               0  0.069683         14               1  ...         0   \n",
              "4               0  1.319227         13               9  ...         0   \n",
              "..            ...       ...        ...             ...  ...       ...   \n",
              "334             0  0.107335          1               1  ...         0   \n",
              "335             0  0.000000          0               0  ...         1   \n",
              "336             0  0.238483          1               2  ...         0   \n",
              "337             0  0.053036          1               1  ...         0   \n",
              "338             0  0.083017          4               2  ...         0   \n",
              "\n",
              "    position        team_title npg_1wks             npxG_1wks  \\\n",
              "0          F   Manchester City        6     6.124001145362854   \n",
              "1          F    Crystal Palace        4     3.337449833750725   \n",
              "2          F         Brentford        2     2.371610403060913   \n",
              "3        F S          Brighton        4    2.3121074587106705   \n",
              "4        F M         Tottenham        3    1.6028943955898285   \n",
              "..       ...               ...      ...                   ...   \n",
              "334      D S             Luton        0  0.020794527605175972   \n",
              "335      D S            Fulham        0                     0   \n",
              "336    F M S  Sheffield United        0    0.3212226927280426   \n",
              "337      M S          West Ham        0    0.0643242746591568   \n",
              "338      D S           Burnley        0   0.23279432207345963   \n",
              "\n",
              "                xGChain             xGBuildup xgdifference  xAdifference  \\\n",
              "0      6.56243109703064    0.5850657597184181    -0.646339     -0.125465   \n",
              "1      3.16320563852787    0.4057522751390934     0.662550     -0.267500   \n",
              "2    3.4626695215702057    1.0711335241794586     0.106052     -0.472186   \n",
              "3     3.259228117763996    0.8774372674524784     1.687893     -0.069683   \n",
              "4     4.228595972061157    1.6196235567331314     1.397106     -1.319227   \n",
              "..                  ...                   ...          ...           ...   \n",
              "334  0.1749723106622696  0.046842776238918304    -0.020795     -0.107335   \n",
              "335                   0                     0     0.000000      0.000000   \n",
              "336  1.1546861231327057    0.5949807167053223    -0.321223     -0.238483   \n",
              "337   0.711536843329668    0.5941769666969776    -0.064324     -0.053036   \n",
              "338  0.5750201642513275    0.4920034073293209    -0.232794     -0.083017   \n",
              "\n",
              "        id  \n",
              "0    318.0  \n",
              "1    166.0  \n",
              "2     95.0  \n",
              "3    596.0  \n",
              "4    428.0  \n",
              "..     ...  \n",
              "334    NaN  \n",
              "335    NaN  \n",
              "336    NaN  \n",
              "337    NaN  \n",
              "338    NaN  \n",
              "\n",
              "[339 rows x 21 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-353c62d9-7ad5-451d-821a-3e383dade18f\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>understat</th>\n",
              "      <th>player_name</th>\n",
              "      <th>games</th>\n",
              "      <th>time</th>\n",
              "      <th>goals_1wks</th>\n",
              "      <th>xG_1wks</th>\n",
              "      <th>assists_1wks</th>\n",
              "      <th>xA_1wks</th>\n",
              "      <th>shots_1wks</th>\n",
              "      <th>key_passes_1wks</th>\n",
              "      <th>...</th>\n",
              "      <th>red_cards</th>\n",
              "      <th>position</th>\n",
              "      <th>team_title</th>\n",
              "      <th>npg_1wks</th>\n",
              "      <th>npxG_1wks</th>\n",
              "      <th>xGChain</th>\n",
              "      <th>xGBuildup</th>\n",
              "      <th>xgdifference</th>\n",
              "      <th>xAdifference</th>\n",
              "      <th>id</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>8260</td>\n",
              "      <td>Erling Haaland</td>\n",
              "      <td>5</td>\n",
              "      <td>445</td>\n",
              "      <td>7</td>\n",
              "      <td>7.646339</td>\n",
              "      <td>1</td>\n",
              "      <td>1.125465</td>\n",
              "      <td>29</td>\n",
              "      <td>7</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>F</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>6</td>\n",
              "      <td>6.124001145362854</td>\n",
              "      <td>6.56243109703064</td>\n",
              "      <td>0.5850657597184181</td>\n",
              "      <td>-0.646339</td>\n",
              "      <td>-0.125465</td>\n",
              "      <td>318.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>3697</td>\n",
              "      <td>Odsonne Edouard</td>\n",
              "      <td>5</td>\n",
              "      <td>432</td>\n",
              "      <td>4</td>\n",
              "      <td>3.337450</td>\n",
              "      <td>0</td>\n",
              "      <td>0.267500</td>\n",
              "      <td>20</td>\n",
              "      <td>5</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>F</td>\n",
              "      <td>Crystal Palace</td>\n",
              "      <td>4</td>\n",
              "      <td>3.337449833750725</td>\n",
              "      <td>3.16320563852787</td>\n",
              "      <td>0.4057522751390934</td>\n",
              "      <td>0.662550</td>\n",
              "      <td>-0.267500</td>\n",
              "      <td>166.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>6552</td>\n",
              "      <td>Bryan Mbeumo</td>\n",
              "      <td>5</td>\n",
              "      <td>450</td>\n",
              "      <td>4</td>\n",
              "      <td>3.893948</td>\n",
              "      <td>0</td>\n",
              "      <td>0.472186</td>\n",
              "      <td>10</td>\n",
              "      <td>5</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>F</td>\n",
              "      <td>Brentford</td>\n",
              "      <td>2</td>\n",
              "      <td>2.371610403060913</td>\n",
              "      <td>3.4626695215702057</td>\n",
              "      <td>1.0711335241794586</td>\n",
              "      <td>0.106052</td>\n",
              "      <td>-0.472186</td>\n",
              "      <td>95.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>10177</td>\n",
              "      <td>Evan Ferguson</td>\n",
              "      <td>5</td>\n",
              "      <td>207</td>\n",
              "      <td>4</td>\n",
              "      <td>2.312107</td>\n",
              "      <td>0</td>\n",
              "      <td>0.069683</td>\n",
              "      <td>14</td>\n",
              "      <td>1</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>F S</td>\n",
              "      <td>Brighton</td>\n",
              "      <td>4</td>\n",
              "      <td>2.3121074587106705</td>\n",
              "      <td>3.259228117763996</td>\n",
              "      <td>0.8774372674524784</td>\n",
              "      <td>1.687893</td>\n",
              "      <td>-0.069683</td>\n",
              "      <td>596.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>453</td>\n",
              "      <td>Son Heung-Min</td>\n",
              "      <td>5</td>\n",
              "      <td>426</td>\n",
              "      <td>3</td>\n",
              "      <td>1.602894</td>\n",
              "      <td>0</td>\n",
              "      <td>1.319227</td>\n",
              "      <td>13</td>\n",
              "      <td>9</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>F M</td>\n",
              "      <td>Tottenham</td>\n",
              "      <td>3</td>\n",
              "      <td>1.6028943955898285</td>\n",
              "      <td>4.228595972061157</td>\n",
              "      <td>1.6196235567331314</td>\n",
              "      <td>1.397106</td>\n",
              "      <td>-1.319227</td>\n",
              "      <td>428.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>334</th>\n",
              "      <td>11723</td>\n",
              "      <td>Alfie Doughty</td>\n",
              "      <td>4</td>\n",
              "      <td>138</td>\n",
              "      <td>0</td>\n",
              "      <td>0.020795</td>\n",
              "      <td>0</td>\n",
              "      <td>0.107335</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>D S</td>\n",
              "      <td>Luton</td>\n",
              "      <td>0</td>\n",
              "      <td>0.020794527605175972</td>\n",
              "      <td>0.1749723106622696</td>\n",
              "      <td>0.046842776238918304</td>\n",
              "      <td>-0.020795</td>\n",
              "      <td>-0.107335</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>335</th>\n",
              "      <td>11728</td>\n",
              "      <td>Calvin Bassey</td>\n",
              "      <td>3</td>\n",
              "      <td>107</td>\n",
              "      <td>0</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>1</td>\n",
              "      <td>D S</td>\n",
              "      <td>Fulham</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>336</th>\n",
              "      <td>11729</td>\n",
              "      <td>Bénie Traoré</td>\n",
              "      <td>4</td>\n",
              "      <td>273</td>\n",
              "      <td>0</td>\n",
              "      <td>0.321223</td>\n",
              "      <td>0</td>\n",
              "      <td>0.238483</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>F M S</td>\n",
              "      <td>Sheffield United</td>\n",
              "      <td>0</td>\n",
              "      <td>0.3212226927280426</td>\n",
              "      <td>1.1546861231327057</td>\n",
              "      <td>0.5949807167053223</td>\n",
              "      <td>-0.321223</td>\n",
              "      <td>-0.238483</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>337</th>\n",
              "      <td>11926</td>\n",
              "      <td>Edson Álvarez</td>\n",
              "      <td>4</td>\n",
              "      <td>249</td>\n",
              "      <td>0</td>\n",
              "      <td>0.064324</td>\n",
              "      <td>0</td>\n",
              "      <td>0.053036</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>M S</td>\n",
              "      <td>West Ham</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0643242746591568</td>\n",
              "      <td>0.711536843329668</td>\n",
              "      <td>0.5941769666969776</td>\n",
              "      <td>-0.064324</td>\n",
              "      <td>-0.053036</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>338</th>\n",
              "      <td>11998</td>\n",
              "      <td>Hannes Delcroix</td>\n",
              "      <td>3</td>\n",
              "      <td>130</td>\n",
              "      <td>0</td>\n",
              "      <td>0.232794</td>\n",
              "      <td>0</td>\n",
              "      <td>0.083017</td>\n",
              "      <td>4</td>\n",
              "      <td>2</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>D S</td>\n",
              "      <td>Burnley</td>\n",
              "      <td>0</td>\n",
              "      <td>0.23279432207345963</td>\n",
              "      <td>0.5750201642513275</td>\n",
              "      <td>0.4920034073293209</td>\n",
              "      <td>-0.232794</td>\n",
              "      <td>-0.083017</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>339 rows × 21 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-353c62d9-7ad5-451d-821a-3e383dade18f')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-353c62d9-7ad5-451d-821a-3e383dade18f button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-353c62d9-7ad5-451d-821a-3e383dade18f');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-6b090d87-0c1b-4310-987e-4126e2593a2d\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-6b090d87-0c1b-4310-987e-4126e2593a2d')\"\n",
              "            title=\"Suggest charts.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-6b090d87-0c1b-4310-987e-4126e2593a2d button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 13
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "from urllib.request import urlopen\n",
        "from json import loads\n",
        "from csv import writer\n",
        "\n",
        "\n",
        "def team_converter(team_id):\n",
        "    '''Converts a team's ID to their actual name'''\n",
        "    team_map = {\n",
        "        1: \"Arsenal\",\n",
        "        2: \"Aston Villa\",\n",
        "        3: \"Bournemouth\",\n",
        "        4: \"Brentford\",\n",
        "        5: \"Brighton\",\n",
        "        6: \"Burnley\",\n",
        "        7: \"Chelsea\",\n",
        "        8: \"Crystal Palace\",\n",
        "        9: \"Everton\",\n",
        "        10: \"Fulham\",\n",
        "        11: \"Liverpool\",\n",
        "        12: \"Luton Town\",\n",
        "        13: \"Manchester City\",\n",
        "        14: \"Manchester United\",\n",
        "        15: \"Newcastle United\",\n",
        "        16: \"Nottingham Forest\",\n",
        "        17: \"Sheffield United\",\n",
        "        18: \"Tottenham\",\n",
        "        19: \"West Ham\",\n",
        "        20: \"Wolverhampton Wanderers\",\n",
        "        None: None\n",
        "    }\n",
        "    return team_map[team_id]\n",
        "\n",
        "\n",
        "def position_converter(position):\n",
        "    '''Converts a player's element_type to their actual position'''\n",
        "    position_map = {\n",
        "        1: \"Goalkeeper\",\n",
        "        2: \"Defender\",\n",
        "        3: \"Midfielder\",\n",
        "        4: \"Forward\"\n",
        "    }\n",
        "    return position_map[position]\n",
        "\n",
        "\n",
        "def main():\n",
        "    all_data = loads(urlopen(\"https://fantasy.premierleague.com/api/fixtures/\").read())\n",
        "    fixtures = all_data\n",
        "\n",
        "    important_data = [\n",
        "        [\n",
        "            x[\"event\"],\n",
        "            team_converter(x[\"team_h\"]),\n",
        "            team_converter(x[\"team_a\"]),\n",
        "            x[\"kickoff_time\"],\n",
        "\n",
        "        ]\n",
        "        for x in fixtures\n",
        "    ]\n",
        "\n",
        "    with open(\"/fixtures_data.csv\", \"w\", encoding=\"utf-8\", newline=\"\") as out:\n",
        "        headers = [\"event\",\"team_h\",\"team_a\",\"kickoff_time\"]\n",
        "        w = writer(out)\n",
        "        w.writerow(headers)\n",
        "        w.writerows(important_data)\n",
        "\n",
        "if __name__ == \"__main__\":\n",
        "    main()"
      ],
      "metadata": {
        "id": "Y_cV1kyak7XX"
      },
      "execution_count": 14,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "import pandas as pd\n",
        "import scipy\n",
        "import numpy as np\n",
        "from numpy import random\n",
        "import matplotlib.pyplot as plt\n",
        "import seaborn as sns\n",
        "import matplotlib"
      ],
      "metadata": {
        "id": "DXejj-4jjUI-"
      },
      "execution_count": 15,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "from urllib.request import urlopen\n",
        "from json import loads\n",
        "from csv import writer\n",
        "\n",
        "\n",
        "def team_converter(team_id):\n",
        "    '''Converts a team's ID to their actual name'''\n",
        "    team_map = {\n",
        "        1: \"Arsenal\",\n",
        "        2: \"Aston Villa\",\n",
        "        3: \"Bournemouth\",\n",
        "        4: \"Brentford\",\n",
        "        5: \"Brighton\",\n",
        "        6: \"Burnley\",\n",
        "        7: \"Chelsea\",\n",
        "        8: \"Crystal Palace\",\n",
        "        9: \"Everton\",\n",
        "        10: \"Fulham\",\n",
        "        11: \"Liverpool\",\n",
        "        12: \"Luton Town\",\n",
        "        13: \"Manchester City\",\n",
        "        14: \"Manchester United\",\n",
        "        15: \"Newcastle United\",\n",
        "        16: \"Nottingham Forest\",\n",
        "        17: \"Sheffield United\",\n",
        "        18: \"Tottenham\",\n",
        "        19: \"West Ham\",\n",
        "        20: \"Wolverhampton Wanderers\",\n",
        "        None: None\n",
        "    }\n",
        "    return team_map[team_id]\n",
        "\n",
        "\n",
        "def position_converter(position):\n",
        "    '''Converts a player's element_type to their actual position'''\n",
        "    position_map = {\n",
        "        1: \"Goalkeeper\",\n",
        "        2: \"Defender\",\n",
        "        3: \"Midfielder\",\n",
        "        4: \"Forward\"\n",
        "    }\n",
        "    return position_map[position]\n",
        "\n",
        "\n",
        "def main():\n",
        "    all_data = loads(urlopen(\"https://fantasy.premierleague.com/api/bootstrap-static/\").read())\n",
        "    players = all_data[\"elements\"]\n",
        "\n",
        "    important_data = [\n",
        "        [\n",
        "            x[\"id\"],\n",
        "            team_converter(x[\"team\"]),\n",
        "            position_converter(x[\"element_type\"])[0],\n",
        "            x[\"web_name\"],\n",
        "            x[\"now_cost\"] / 10,\n",
        "            x[\"selected_by_percent\"],\n",
        "            float(x[\"expected_goals\"]),  # Convert to float\n",
        "            float(x[\"expected_assists\"]),  # Convert to float\n",
        "            x[\"goals_scored\"],\n",
        "            x[\"assists\"],\n",
        "            x[\"bps\"],\n",
        "            x[\"ict_index\"],\n",
        "            x[\"total_points\"],\n",
        "            x[\"points_per_game\"],\n",
        "            x[\"minutes\"]\n",
        "        ]\n",
        "        for x in players\n",
        "    ]\n",
        "\n",
        "    with open(\"players_data.csv\", \"w\", encoding=\"utf-8\", newline=\"\") as out:\n",
        "        headers = [\"id\",\"team\", \"pos\", \"name\", \"cost\", \"selected_by_percent\", \"expected_goals\", \"expected_assists\", \"goals_scored\", \"assists\", \"bps\", \"ict_index\",\"points\", \"points_per_game\", \"minutes\"]\n",
        "        w = writer(out)\n",
        "        w.writerow(headers)\n",
        "        w.writerows(important_data)\n",
        "\n",
        "if __name__ == \"__main__\":\n",
        "    main()"
      ],
      "metadata": {
        "id": "CKZZPD0xQGLu"
      },
      "execution_count": 16,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "import pandas as pd\n",
        "playerdata = pd.read_csv(\"/content/players_data.csv\")\n",
        "master = playerdata\n",
        "#master = master.dropna()\n",
        "master['apppoint'] = 2\n",
        "master['assistvalue'] = 3\n",
        "#master['BPS90'] = master.bps/(master.minutes/90)\n",
        "master"
      ],
      "metadata": {
        "id": "VOx8tP0bjttO",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 547
        },
        "outputId": "5ed912f2-cc36-4963-bcad-26aae95c47d7"
      },
      "execution_count": 17,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "      id                     team pos          name  cost  \\\n",
              "0      1                  Arsenal   F       Balogun   4.4   \n",
              "1      2                  Arsenal   D        Cédric   3.9   \n",
              "2      3                  Arsenal   M      M.Elneny   4.4   \n",
              "3      4                  Arsenal   M  Fábio Vieira   5.4   \n",
              "4      5                  Arsenal   D       Gabriel   4.8   \n",
              "..   ...                      ...  ..           ...   ...   \n",
              "712  598  Wolverhampton Wanderers   D       Doherty   4.4   \n",
              "713  697  Wolverhampton Wanderers   D       S.Bueno   4.5   \n",
              "714  698  Wolverhampton Wanderers   M      González   5.0   \n",
              "715  704  Wolverhampton Wanderers   F        Fraser   4.5   \n",
              "716  715  Wolverhampton Wanderers   M    Bellegarde   5.0   \n",
              "\n",
              "     selected_by_percent  expected_goals  expected_assists  goals_scored  \\\n",
              "0                    0.3            0.00              0.00             0   \n",
              "1                    0.4            0.00              0.00             0   \n",
              "2                    0.1            0.00              0.00             0   \n",
              "3                    0.1            0.41              0.29             0   \n",
              "4                   13.4            0.00              0.03             0   \n",
              "..                   ...             ...               ...           ...   \n",
              "712                  0.2            0.12              0.05             0   \n",
              "713                  0.0            0.00              0.00             0   \n",
              "714                  0.0            0.00              0.00             0   \n",
              "715                  0.0            0.00              0.00             0   \n",
              "716                  0.0            0.04              0.01             0   \n",
              "\n",
              "     assists  bps  ict_index  points  points_per_game  minutes  apppoint  \\\n",
              "0          0    0        0.0       0              0.0        0         2   \n",
              "1          0    0        0.0       0              0.0        0         2   \n",
              "2          0    0        0.0       0              0.0        0         2   \n",
              "3          3   43       13.4      14              4.7      126         2   \n",
              "4          0   46        6.0       9              2.2      204         2   \n",
              "..       ...  ...        ...     ...              ...      ...       ...   \n",
              "712        0    4        2.5       0              0.0       30         2   \n",
              "713        0    0        0.0       0              0.0        0         2   \n",
              "714        0    0        0.0       0              0.0        0         2   \n",
              "715        0    0        0.0       0              0.0        0         2   \n",
              "716        0    6        2.6       2              2.0       76         2   \n",
              "\n",
              "     assistvalue  \n",
              "0              3  \n",
              "1              3  \n",
              "2              3  \n",
              "3              3  \n",
              "4              3  \n",
              "..           ...  \n",
              "712            3  \n",
              "713            3  \n",
              "714            3  \n",
              "715            3  \n",
              "716            3  \n",
              "\n",
              "[717 rows x 17 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-54e78693-57ac-4d03-a52f-5f4c3aa2bc4c\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>team</th>\n",
              "      <th>pos</th>\n",
              "      <th>name</th>\n",
              "      <th>cost</th>\n",
              "      <th>selected_by_percent</th>\n",
              "      <th>expected_goals</th>\n",
              "      <th>expected_assists</th>\n",
              "      <th>goals_scored</th>\n",
              "      <th>assists</th>\n",
              "      <th>bps</th>\n",
              "      <th>ict_index</th>\n",
              "      <th>points</th>\n",
              "      <th>points_per_game</th>\n",
              "      <th>minutes</th>\n",
              "      <th>apppoint</th>\n",
              "      <th>assistvalue</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>1</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>F</td>\n",
              "      <td>Balogun</td>\n",
              "      <td>4.4</td>\n",
              "      <td>0.3</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>2</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>D</td>\n",
              "      <td>Cédric</td>\n",
              "      <td>3.9</td>\n",
              "      <td>0.4</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>3</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>M</td>\n",
              "      <td>M.Elneny</td>\n",
              "      <td>4.4</td>\n",
              "      <td>0.1</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>4</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>M</td>\n",
              "      <td>Fábio Vieira</td>\n",
              "      <td>5.4</td>\n",
              "      <td>0.1</td>\n",
              "      <td>0.41</td>\n",
              "      <td>0.29</td>\n",
              "      <td>0</td>\n",
              "      <td>3</td>\n",
              "      <td>43</td>\n",
              "      <td>13.4</td>\n",
              "      <td>14</td>\n",
              "      <td>4.7</td>\n",
              "      <td>126</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>5</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>D</td>\n",
              "      <td>Gabriel</td>\n",
              "      <td>4.8</td>\n",
              "      <td>13.4</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.03</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>46</td>\n",
              "      <td>6.0</td>\n",
              "      <td>9</td>\n",
              "      <td>2.2</td>\n",
              "      <td>204</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>712</th>\n",
              "      <td>598</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>D</td>\n",
              "      <td>Doherty</td>\n",
              "      <td>4.4</td>\n",
              "      <td>0.2</td>\n",
              "      <td>0.12</td>\n",
              "      <td>0.05</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>4</td>\n",
              "      <td>2.5</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>30</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>713</th>\n",
              "      <td>697</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>D</td>\n",
              "      <td>S.Bueno</td>\n",
              "      <td>4.5</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>714</th>\n",
              "      <td>698</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>M</td>\n",
              "      <td>González</td>\n",
              "      <td>5.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>715</th>\n",
              "      <td>704</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>F</td>\n",
              "      <td>Fraser</td>\n",
              "      <td>4.5</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>716</th>\n",
              "      <td>715</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>M</td>\n",
              "      <td>Bellegarde</td>\n",
              "      <td>5.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.04</td>\n",
              "      <td>0.01</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>6</td>\n",
              "      <td>2.6</td>\n",
              "      <td>2</td>\n",
              "      <td>2.0</td>\n",
              "      <td>76</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>717 rows × 17 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-54e78693-57ac-4d03-a52f-5f4c3aa2bc4c')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-54e78693-57ac-4d03-a52f-5f4c3aa2bc4c button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-54e78693-57ac-4d03-a52f-5f4c3aa2bc4c');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-a0a2bfd7-1ca7-4c7b-8172-fe116c21fdba\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-a0a2bfd7-1ca7-4c7b-8172-fe116c21fdba')\"\n",
              "            title=\"Suggest charts.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-a0a2bfd7-1ca7-4c7b-8172-fe116c21fdba button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 17
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import pandas as pd\n",
        "gwfixtures = pd.read_csv(\"/fixtures_data.csv\")\n",
        "import requests\n",
        "import pandas as pd\n",
        "url = 'https://projects.fivethirtyeight.com/soccer-api/club/spi_global_rankings.csv'\n",
        "r = requests.get(url)\n",
        "open('temp.csv', 'wb').write(r.content)\n",
        "spi = pd.read_csv('temp.csv')\n",
        "spi['team_h'] = spi['name']\n",
        "spi['team_a'] = spi['name']\n",
        "spi= spi.replace('Newcastle', 'Newcastle United')\n",
        "spi= spi.replace('Wolverhampton','Wolverhampton Wanderers')\n",
        "spi= spi.replace('Tottenham Hotspur','Tottenham')\n",
        "spi= spi.replace('Leeds United','Leeds')\n",
        "spi= spi.replace('Leicester City','Leicester')\n",
        "spi= spi.replace('West Ham United','West Ham')\n",
        "spi= spi.replace('Brighton and Hove Albion','Brighton')\n",
        "spi= spi.replace('Norwich City','Norwich')\n",
        "spi= spi.replace('AFC Bournemouth','Bournemouth')\n",
        "Left_join = pd.merge(gwfixtures,\n",
        "                     spi,\n",
        "                     on ='team_h',\n",
        "                     how ='left')\n",
        "homespi = Left_join.drop(columns=[\n",
        " 'rank',\n",
        " 'prev_rank',\n",
        " 'league',\n",
        "  'off',\n",
        " 'def',\n",
        " 'name',\n",
        " 'team_a_y',])\n",
        "homespi.rename(columns = {'team_a_x':'team_a', 'spi':'Home SPI'}, inplace = True)\n",
        "away_join = pd.merge(homespi,\n",
        "                     spi,\n",
        "                     on ='team_a',\n",
        "                     how ='left')\n",
        "homesawayspi = away_join.drop(columns=[\n",
        " 'rank',\n",
        " 'prev_rank',\n",
        " 'name',\n",
        " 'league',\n",
        " 'off',\n",
        " 'def',\n",
        " 'team_h_y'])\n",
        "homesawayspi.rename(columns = {'team_h_x':'team_h', 'spi':'Away SPI'}, inplace = True)\n",
        "homesawayspi['Event'] = homesawayspi['event'].astype(str)\n",
        "gw6 = homesawayspi.query('Event==\"6.0\"')\n",
        "PLSPI = spi.query('league==\"Barclays Premier League\"')\n",
        "PLSPI['League Average']  = PLSPI[\"spi\"].mean()\n",
        "laverage = PLSPI[\"spi\"].mean()\n",
        "PLSPI['League Average'].astype(int)\n",
        "gw6['League_Average']  = laverage\n",
        "gw6.rename(columns = {'Home SPI':'HomeSPI', 'Away SPI':'AwaySPI'}, inplace = True)\n",
        "gw6['home_difference'] = gw6.HomeSPI - gw6.League_Average\n",
        "gw6['away_difference'] = gw6.AwaySPI - gw6.League_Average\n",
        "gw6['home_adjustment'] = (gw6.home_difference + gw6.League_Average)/gw6.League_Average\n",
        "gw6['away_adjustment'] = (gw6.away_difference + gw6.League_Average)/gw6.League_Average\n",
        "gw6adjustments = gw6[['team_h', 'home_adjustment']].append(gw6[['team_a','away_adjustment']].set_axis(['team_h', 'home_adjustment'], axis=1)).reset_index(drop=True)\n",
        "gw6adjustments.rename(columns = {'team_h':'team'}, inplace = True)\n",
        "gw6adjustments"
      ],
      "metadata": {
        "id": "0oqPsFQJjyR0",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "outputId": "f09f1acc-df6f-4f73-9f7d-7cfbaecdabb6"
      },
      "execution_count": 18,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "<ipython-input-18-49ddd60385aa>:49: SettingWithCopyWarning: \n",
            "A value is trying to be set on a copy of a slice from a DataFrame.\n",
            "Try using .loc[row_indexer,col_indexer] = value instead\n",
            "\n",
            "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
            "  PLSPI['League Average']  = PLSPI[\"spi\"].mean()\n",
            "<ipython-input-18-49ddd60385aa>:52: SettingWithCopyWarning: \n",
            "A value is trying to be set on a copy of a slice from a DataFrame.\n",
            "Try using .loc[row_indexer,col_indexer] = value instead\n",
            "\n",
            "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
            "  gw6['League_Average']  = laverage\n",
            "<ipython-input-18-49ddd60385aa>:53: SettingWithCopyWarning: \n",
            "A value is trying to be set on a copy of a slice from a DataFrame\n",
            "\n",
            "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
            "  gw6.rename(columns = {'Home SPI':'HomeSPI', 'Away SPI':'AwaySPI'}, inplace = True)\n",
            "<ipython-input-18-49ddd60385aa>:54: SettingWithCopyWarning: \n",
            "A value is trying to be set on a copy of a slice from a DataFrame.\n",
            "Try using .loc[row_indexer,col_indexer] = value instead\n",
            "\n",
            "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
            "  gw6['home_difference'] = gw6.HomeSPI - gw6.League_Average\n",
            "<ipython-input-18-49ddd60385aa>:55: SettingWithCopyWarning: \n",
            "A value is trying to be set on a copy of a slice from a DataFrame.\n",
            "Try using .loc[row_indexer,col_indexer] = value instead\n",
            "\n",
            "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
            "  gw6['away_difference'] = gw6.AwaySPI - gw6.League_Average\n",
            "<ipython-input-18-49ddd60385aa>:56: SettingWithCopyWarning: \n",
            "A value is trying to be set on a copy of a slice from a DataFrame.\n",
            "Try using .loc[row_indexer,col_indexer] = value instead\n",
            "\n",
            "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
            "  gw6['home_adjustment'] = (gw6.home_difference + gw6.League_Average)/gw6.League_Average\n",
            "<ipython-input-18-49ddd60385aa>:57: SettingWithCopyWarning: \n",
            "A value is trying to be set on a copy of a slice from a DataFrame.\n",
            "Try using .loc[row_indexer,col_indexer] = value instead\n",
            "\n",
            "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
            "  gw6['away_adjustment'] = (gw6.away_difference + gw6.League_Average)/gw6.League_Average\n",
            "<ipython-input-18-49ddd60385aa>:58: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  gw6adjustments = gw6[['team_h', 'home_adjustment']].append(gw6[['team_a','away_adjustment']].set_axis(['team_h', 'home_adjustment'], axis=1)).reset_index(drop=True)\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                       team  home_adjustment\n",
              "0            Crystal Palace         1.020824\n",
              "1                Luton Town         0.770968\n",
              "2           Manchester City         1.278461\n",
              "3                 Brentford         1.071962\n",
              "4                   Burnley         0.874634\n",
              "5                   Arsenal         1.166179\n",
              "6                  Brighton         1.123934\n",
              "7                   Chelsea         1.053063\n",
              "8                 Liverpool         1.166318\n",
              "9          Sheffield United         0.786115\n",
              "10                   Fulham         0.948007\n",
              "11  Wolverhampton Wanderers         0.820717\n",
              "12        Nottingham Forest         0.780000\n",
              "13                  Everton         0.884223\n",
              "14        Manchester United         1.098921\n",
              "15                Tottenham         1.002480\n",
              "16              Bournemouth         0.827943\n",
              "17              Aston Villa         1.101978\n",
              "18                 West Ham         0.988306\n",
              "19         Newcastle United         1.163122"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-c0981002-99aa-4f13-83a9-c0c31bb8a912\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>team</th>\n",
              "      <th>home_adjustment</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>Crystal Palace</td>\n",
              "      <td>1.020824</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Luton Town</td>\n",
              "      <td>0.770968</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>Manchester City</td>\n",
              "      <td>1.278461</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>Brentford</td>\n",
              "      <td>1.071962</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>Burnley</td>\n",
              "      <td>0.874634</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>Arsenal</td>\n",
              "      <td>1.166179</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>Brighton</td>\n",
              "      <td>1.123934</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>Chelsea</td>\n",
              "      <td>1.053063</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>Liverpool</td>\n",
              "      <td>1.166318</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>Sheffield United</td>\n",
              "      <td>0.786115</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10</th>\n",
              "      <td>Fulham</td>\n",
              "      <td>0.948007</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>11</th>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>0.820717</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>12</th>\n",
              "      <td>Nottingham Forest</td>\n",
              "      <td>0.780000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>13</th>\n",
              "      <td>Everton</td>\n",
              "      <td>0.884223</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>14</th>\n",
              "      <td>Manchester United</td>\n",
              "      <td>1.098921</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>15</th>\n",
              "      <td>Tottenham</td>\n",
              "      <td>1.002480</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>16</th>\n",
              "      <td>Bournemouth</td>\n",
              "      <td>0.827943</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>17</th>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>1.101978</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>18</th>\n",
              "      <td>West Ham</td>\n",
              "      <td>0.988306</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>19</th>\n",
              "      <td>Newcastle United</td>\n",
              "      <td>1.163122</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-c0981002-99aa-4f13-83a9-c0c31bb8a912')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-c0981002-99aa-4f13-83a9-c0c31bb8a912 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-c0981002-99aa-4f13-83a9-c0c31bb8a912');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-9ae8f9ac-ba49-4989-a7af-763d148e13ee\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-9ae8f9ac-ba49-4989-a7af-763d148e13ee')\"\n",
              "            title=\"Suggest charts.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-9ae8f9ac-ba49-4989-a7af-763d148e13ee button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 18
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "rawdf = pd.merge(master,\n",
        "                     gw6adjustments,\n",
        "                     on ='team',\n",
        "                     how ='left')\n",
        "rawfwd = rawdf.query('pos==\"F\"')\n",
        "rawfwd['xP'] = ((rawfwd.expected_goals * 4/5)+(rawfwd.expected_assists * 3/5) + (rawfwd.apppoint)) * rawfwd.home_adjustment\n",
        "rawfwd = rawfwd.drop(columns=[\n",
        " 'expected_goals',\n",
        " 'team',\n",
        " 'expected_assists',\n",
        " 'apppoint',\n",
        " 'assistvalue',\n",
        "'home_adjustment'])\n",
        "rawmd = rawdf.query('pos==\"M\"')\n",
        "rawmd['xP'] = ((rawmd.expected_goals * 5/5)+(rawmd.expected_assists * 3/5) + (rawmd.apppoint)) * rawmd.home_adjustment\n",
        "rawmd = rawmd.drop(columns=[\n",
        " 'expected_goals',\n",
        " 'team',\n",
        " 'expected_assists',\n",
        " 'apppoint',\n",
        " 'assistvalue',\n",
        "'home_adjustment'])\n",
        "fbref = pd.read_html('https://fbref.com/en/comps/9/Premier-League-Stats')\n",
        "epltable = fbref[0]\n",
        "epltabledef = epltable.drop(columns=[ 'Rk',\n",
        " 'MP',\n",
        " 'W',\n",
        " 'D',\n",
        " 'L',\n",
        " 'GF',\n",
        " 'GA',\n",
        " 'GD',\n",
        " 'xG',\n",
        " 'xGD',\n",
        " 'xGD/90',\n",
        " 'Pts',\n",
        " 'Pts/MP',\n",
        " 'Last 5',\n",
        " 'Attendance',\n",
        " 'Top Team Scorer',\n",
        " 'Goalkeeper',\n",
        " 'Notes'])\n",
        "epltabledef= epltabledef.replace('Newcastle Utd', 'Newcastle United')\n",
        "epltabledef= epltabledef.replace('Wolves','Wolverhampton Wanderers')\n",
        "epltabledef= epltabledef.replace('Leeds United','Leeds')\n",
        "epltabledef= epltabledef.replace('Leicester City','Leicester')\n",
        "epltabledef= epltabledef.replace('Manchester Utd','Manchester United')\n",
        "epltabledef['Squad'] = epltabledef['Squad'].str.replace(r\"[\\\"\\',]\", '')\n",
        "epltabledef= epltabledef.replace('Nottham Forest','Nottingham Forest')\n",
        "epltabledef['xCSP'] = (4 - (epltabledef.xGA * 4/5))\n",
        "epltabledef.rename(columns={'Squad': 'team'}, inplace=True)\n",
        "rawdfcs = pd.merge(rawdf,\n",
        "                     epltabledef,\n",
        "                     on ='team',\n",
        "                     how ='left')\n",
        "rawgk= rawdfcs.query('pos==\"G\"')\n",
        "rawgk['xP'] = ((rawgk.xCSP)+ (rawgk.apppoint)) * rawgk.home_adjustment\n",
        "#rawgk['xP'] = rawgk.apppoint * rawgk.home_adjustment\n",
        "rawgk = rawgk.drop(columns=[\n",
        " 'expected_goals',\n",
        " 'team',\n",
        " 'expected_assists',\n",
        " 'apppoint',\n",
        " 'assistvalue',\n",
        "  'xGA',\n",
        "'home_adjustment'])\n",
        "rawdef= rawdfcs.query('pos==\"D\"')\n",
        "rawdef['xP'] = ((rawdef.expected_goals * 6/5)+(rawdef.expected_assists * 3/5) +(rawdef.xCSP)+ (rawdef.apppoint) * rawdef.home_adjustment)\n",
        "#rawdef['xP'] = ((rawdef.expected_goals * 6/3)+(rawdef.expected_assists * 3/3) + (rawdef.apppoint) * rawdef.home_adjustment)\n",
        "rawdef = rawdef.drop(columns=[\n",
        " 'expected_goals',\n",
        " 'team',\n",
        " 'expected_assists',\n",
        " 'apppoint',\n",
        " 'assistvalue',\n",
        "  'xGA',\n",
        " 'home_adjustment'])\n",
        "rawallplayers = pd.concat([rawfwd, rawmd, rawdef, rawgk], ignore_index=True)\n",
        "rawallplayers\n",
        "\n",
        "\n",
        "\n"
      ],
      "metadata": {
        "id": "AWnYpVh5kDzO",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 874
        },
        "outputId": "a910d7e2-b230-4507-923a-0103e27627b6"
      },
      "execution_count": 19,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "<ipython-input-19-a14bce85ecb0>:6: SettingWithCopyWarning: \n",
            "A value is trying to be set on a copy of a slice from a DataFrame.\n",
            "Try using .loc[row_indexer,col_indexer] = value instead\n",
            "\n",
            "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
            "  rawfwd['xP'] = ((rawfwd.expected_goals * 4/5)+(rawfwd.expected_assists * 3/5) + (rawfwd.apppoint)) * rawfwd.home_adjustment\n",
            "<ipython-input-19-a14bce85ecb0>:15: SettingWithCopyWarning: \n",
            "A value is trying to be set on a copy of a slice from a DataFrame.\n",
            "Try using .loc[row_indexer,col_indexer] = value instead\n",
            "\n",
            "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
            "  rawmd['xP'] = ((rawmd.expected_goals * 5/5)+(rawmd.expected_assists * 3/5) + (rawmd.apppoint)) * rawmd.home_adjustment\n",
            "<ipython-input-19-a14bce85ecb0>:48: FutureWarning: The default value of regex will change from True to False in a future version.\n",
            "  epltabledef['Squad'] = epltabledef['Squad'].str.replace(r\"[\\\"\\',]\", '')\n",
            "<ipython-input-19-a14bce85ecb0>:57: SettingWithCopyWarning: \n",
            "A value is trying to be set on a copy of a slice from a DataFrame.\n",
            "Try using .loc[row_indexer,col_indexer] = value instead\n",
            "\n",
            "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
            "  rawgk['xP'] = ((rawgk.xCSP)+ (rawgk.apppoint)) * rawgk.home_adjustment\n",
            "<ipython-input-19-a14bce85ecb0>:68: SettingWithCopyWarning: \n",
            "A value is trying to be set on a copy of a slice from a DataFrame.\n",
            "Try using .loc[row_indexer,col_indexer] = value instead\n",
            "\n",
            "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
            "  rawdef['xP'] = ((rawdef.expected_goals * 6/5)+(rawdef.expected_assists * 3/5) +(rawdef.xCSP)+ (rawdef.apppoint) * rawdef.home_adjustment)\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "      id pos     name  cost  selected_by_percent  goals_scored  assists  bps  \\\n",
              "0      1   F  Balogun   4.4                  0.3             0        0    0   \n",
              "1      8   F  G.Jesus   7.9                  3.1             1        0   25   \n",
              "2     13   F  Nketiah   5.6                  6.1             2        1   67   \n",
              "3     39   F    Davis   4.9                  0.2             0        0    0   \n",
              "4     44   F    Duran   5.0                  0.2             2        0   56   \n",
              "..   ...  ..      ...   ...                  ...           ...      ...  ...   \n",
              "712  647   G    Anang   4.0                  0.0             0        0    0   \n",
              "713  546   G  Bentley   4.0                  0.4             0        0    0   \n",
              "714  564   G     King   4.0                  0.8             0        0    0   \n",
              "715  569   G  José Sá   5.0                  1.6             0        0  109   \n",
              "716  571   G   Šarkić   4.0                  0.4             0        0    0   \n",
              "\n",
              "     ict_index  points  points_per_game  minutes        xP  xCSP  \n",
              "0          0.0       0              0.0        0  2.332358   NaN  \n",
              "1         11.0       8              2.7       39  3.123028   NaN  \n",
              "2         25.0      22              4.4      335  3.946350   NaN  \n",
              "3          0.0       0              0.0        0  2.203956   NaN  \n",
              "4         13.6      14              3.5       56  2.854123   NaN  \n",
              "..         ...     ...              ...      ...       ...   ...  \n",
              "712        0.0       0              0.0        0 -2.134741 -4.16  \n",
              "713        0.0       0              0.0        0 -1.838405 -4.24  \n",
              "714        0.0       0              0.0        0 -1.838405 -4.24  \n",
              "715       18.5      19              3.8      450 -1.838405 -4.24  \n",
              "716        0.0       0              0.0        0 -1.838405 -4.24  \n",
              "\n",
              "[717 rows x 14 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-e0ea3522-1a3a-490e-a234-240c5391d39d\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>pos</th>\n",
              "      <th>name</th>\n",
              "      <th>cost</th>\n",
              "      <th>selected_by_percent</th>\n",
              "      <th>goals_scored</th>\n",
              "      <th>assists</th>\n",
              "      <th>bps</th>\n",
              "      <th>ict_index</th>\n",
              "      <th>points</th>\n",
              "      <th>points_per_game</th>\n",
              "      <th>minutes</th>\n",
              "      <th>xP</th>\n",
              "      <th>xCSP</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>1</td>\n",
              "      <td>F</td>\n",
              "      <td>Balogun</td>\n",
              "      <td>4.4</td>\n",
              "      <td>0.3</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>2.332358</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>8</td>\n",
              "      <td>F</td>\n",
              "      <td>G.Jesus</td>\n",
              "      <td>7.9</td>\n",
              "      <td>3.1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>25</td>\n",
              "      <td>11.0</td>\n",
              "      <td>8</td>\n",
              "      <td>2.7</td>\n",
              "      <td>39</td>\n",
              "      <td>3.123028</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>13</td>\n",
              "      <td>F</td>\n",
              "      <td>Nketiah</td>\n",
              "      <td>5.6</td>\n",
              "      <td>6.1</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>67</td>\n",
              "      <td>25.0</td>\n",
              "      <td>22</td>\n",
              "      <td>4.4</td>\n",
              "      <td>335</td>\n",
              "      <td>3.946350</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>39</td>\n",
              "      <td>F</td>\n",
              "      <td>Davis</td>\n",
              "      <td>4.9</td>\n",
              "      <td>0.2</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>2.203956</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>44</td>\n",
              "      <td>F</td>\n",
              "      <td>Duran</td>\n",
              "      <td>5.0</td>\n",
              "      <td>0.2</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>56</td>\n",
              "      <td>13.6</td>\n",
              "      <td>14</td>\n",
              "      <td>3.5</td>\n",
              "      <td>56</td>\n",
              "      <td>2.854123</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>712</th>\n",
              "      <td>647</td>\n",
              "      <td>G</td>\n",
              "      <td>Anang</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>-2.134741</td>\n",
              "      <td>-4.16</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>713</th>\n",
              "      <td>546</td>\n",
              "      <td>G</td>\n",
              "      <td>Bentley</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.4</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>-1.838405</td>\n",
              "      <td>-4.24</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>714</th>\n",
              "      <td>564</td>\n",
              "      <td>G</td>\n",
              "      <td>King</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.8</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>-1.838405</td>\n",
              "      <td>-4.24</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>715</th>\n",
              "      <td>569</td>\n",
              "      <td>G</td>\n",
              "      <td>José Sá</td>\n",
              "      <td>5.0</td>\n",
              "      <td>1.6</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>109</td>\n",
              "      <td>18.5</td>\n",
              "      <td>19</td>\n",
              "      <td>3.8</td>\n",
              "      <td>450</td>\n",
              "      <td>-1.838405</td>\n",
              "      <td>-4.24</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>716</th>\n",
              "      <td>571</td>\n",
              "      <td>G</td>\n",
              "      <td>Šarkić</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.4</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>-1.838405</td>\n",
              "      <td>-4.24</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>717 rows × 14 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-e0ea3522-1a3a-490e-a234-240c5391d39d')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-e0ea3522-1a3a-490e-a234-240c5391d39d button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-e0ea3522-1a3a-490e-a234-240c5391d39d');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-3c11c059-d755-482f-a5da-29e00aa8765d\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-3c11c059-d755-482f-a5da-29e00aa8765d')\"\n",
              "            title=\"Suggest charts.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-3c11c059-d755-482f-a5da-29e00aa8765d button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 19
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "rawgk1= rawdfcs.query('pos==\"G\"')\n",
        "rawgk1"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 513
        },
        "id": "z3FgmhoCb3GG",
        "outputId": "17c3a073-320a-4654-83fb-fac56fbc0e08"
      },
      "execution_count": 20,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "      id                     team pos       name  cost  selected_by_percent  \\\n",
              "15    17                  Arsenal   G   Ramsdale   5.0                 15.1   \n",
              "16    18                  Arsenal   G  Rúnarsson   4.0                  0.1   \n",
              "26   113                  Arsenal   G       Raya   4.8                  2.4   \n",
              "30   646                  Arsenal   G       Hein   4.0                  0.0   \n",
              "47    49              Aston Villa   G   Martinez   4.9                  6.4   \n",
              "..   ...                      ...  ..        ...   ...                  ...   \n",
              "679  647                 West Ham   G      Anang   4.0                  0.0   \n",
              "685  546  Wolverhampton Wanderers   G    Bentley   4.0                  0.4   \n",
              "701  564  Wolverhampton Wanderers   G       King   4.0                  0.8   \n",
              "705  569  Wolverhampton Wanderers   G    José Sá   5.0                  1.6   \n",
              "707  571  Wolverhampton Wanderers   G     Šarkić   4.0                  0.4   \n",
              "\n",
              "     expected_goals  expected_assists  goals_scored  assists  bps  ict_index  \\\n",
              "15              0.0              0.01             0        0   55        5.1   \n",
              "16              0.0              0.00             0        0    0        0.0   \n",
              "26              0.0              0.00             0        0   30        1.2   \n",
              "30              0.0              0.00             0        0    0        0.0   \n",
              "47              0.0              0.00             0        0   78       10.6   \n",
              "..              ...               ...           ...      ...  ...        ...   \n",
              "679             0.0              0.00             0        0    0        0.0   \n",
              "685             0.0              0.00             0        0    0        0.0   \n",
              "701             0.0              0.00             0        0    0        0.0   \n",
              "705             0.0              0.00             0        0  109       18.5   \n",
              "707             0.0              0.00             0        0    0        0.0   \n",
              "\n",
              "     points  points_per_game  minutes  apppoint  assistvalue  home_adjustment  \\\n",
              "15       11              2.8      360         2            3         1.166179   \n",
              "16        0              0.0        0         2            3         1.166179   \n",
              "26        8              8.0       90         2            3         1.166179   \n",
              "30        0              0.0        0         2            3         1.166179   \n",
              "47       12              3.0      360         2            3         1.101978   \n",
              "..      ...              ...      ...       ...          ...              ...   \n",
              "679       0              0.0        0         2            3         0.988306   \n",
              "685       0              0.0        0         2            3         0.820717   \n",
              "701       0              0.0        0         2            3         0.820717   \n",
              "705      19              3.8      450         2            3         0.820717   \n",
              "707       0              0.0        0         2            3         0.820717   \n",
              "\n",
              "      xGA  xCSP  \n",
              "15    4.0  0.80  \n",
              "16    4.0  0.80  \n",
              "26    4.0  0.80  \n",
              "30    4.0  0.80  \n",
              "47    8.3 -2.64  \n",
              "..    ...   ...  \n",
              "679  10.2 -4.16  \n",
              "685  10.3 -4.24  \n",
              "701  10.3 -4.24  \n",
              "705  10.3 -4.24  \n",
              "707  10.3 -4.24  \n",
              "\n",
              "[85 rows x 20 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-14ca70fa-2d21-446c-a951-8590567045bf\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>team</th>\n",
              "      <th>pos</th>\n",
              "      <th>name</th>\n",
              "      <th>cost</th>\n",
              "      <th>selected_by_percent</th>\n",
              "      <th>expected_goals</th>\n",
              "      <th>expected_assists</th>\n",
              "      <th>goals_scored</th>\n",
              "      <th>assists</th>\n",
              "      <th>bps</th>\n",
              "      <th>ict_index</th>\n",
              "      <th>points</th>\n",
              "      <th>points_per_game</th>\n",
              "      <th>minutes</th>\n",
              "      <th>apppoint</th>\n",
              "      <th>assistvalue</th>\n",
              "      <th>home_adjustment</th>\n",
              "      <th>xGA</th>\n",
              "      <th>xCSP</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>15</th>\n",
              "      <td>17</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>G</td>\n",
              "      <td>Ramsdale</td>\n",
              "      <td>5.0</td>\n",
              "      <td>15.1</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.01</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>55</td>\n",
              "      <td>5.1</td>\n",
              "      <td>11</td>\n",
              "      <td>2.8</td>\n",
              "      <td>360</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "      <td>1.166179</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.80</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>16</th>\n",
              "      <td>18</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>G</td>\n",
              "      <td>Rúnarsson</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.1</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "      <td>1.166179</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.80</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>26</th>\n",
              "      <td>113</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>G</td>\n",
              "      <td>Raya</td>\n",
              "      <td>4.8</td>\n",
              "      <td>2.4</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>30</td>\n",
              "      <td>1.2</td>\n",
              "      <td>8</td>\n",
              "      <td>8.0</td>\n",
              "      <td>90</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "      <td>1.166179</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.80</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>30</th>\n",
              "      <td>646</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>G</td>\n",
              "      <td>Hein</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "      <td>1.166179</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.80</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>47</th>\n",
              "      <td>49</td>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>G</td>\n",
              "      <td>Martinez</td>\n",
              "      <td>4.9</td>\n",
              "      <td>6.4</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>78</td>\n",
              "      <td>10.6</td>\n",
              "      <td>12</td>\n",
              "      <td>3.0</td>\n",
              "      <td>360</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "      <td>1.101978</td>\n",
              "      <td>8.3</td>\n",
              "      <td>-2.64</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>679</th>\n",
              "      <td>647</td>\n",
              "      <td>West Ham</td>\n",
              "      <td>G</td>\n",
              "      <td>Anang</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "      <td>0.988306</td>\n",
              "      <td>10.2</td>\n",
              "      <td>-4.16</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>685</th>\n",
              "      <td>546</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>G</td>\n",
              "      <td>Bentley</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.4</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "      <td>0.820717</td>\n",
              "      <td>10.3</td>\n",
              "      <td>-4.24</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>701</th>\n",
              "      <td>564</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>G</td>\n",
              "      <td>King</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.8</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "      <td>0.820717</td>\n",
              "      <td>10.3</td>\n",
              "      <td>-4.24</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>705</th>\n",
              "      <td>569</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>G</td>\n",
              "      <td>José Sá</td>\n",
              "      <td>5.0</td>\n",
              "      <td>1.6</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>109</td>\n",
              "      <td>18.5</td>\n",
              "      <td>19</td>\n",
              "      <td>3.8</td>\n",
              "      <td>450</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "      <td>0.820717</td>\n",
              "      <td>10.3</td>\n",
              "      <td>-4.24</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>707</th>\n",
              "      <td>571</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>G</td>\n",
              "      <td>Šarkić</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.4</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "      <td>0.820717</td>\n",
              "      <td>10.3</td>\n",
              "      <td>-4.24</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>85 rows × 20 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-14ca70fa-2d21-446c-a951-8590567045bf')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-14ca70fa-2d21-446c-a951-8590567045bf button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-14ca70fa-2d21-446c-a951-8590567045bf');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-7ecf5802-e2b7-445c-b050-cca66d86c4fe\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-7ecf5802-e2b7-445c-b050-cca66d86c4fe')\"\n",
              "            title=\"Suggest charts.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-7ecf5802-e2b7-445c-b050-cca66d86c4fe button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 20
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "from pandas import ExcelWriter"
      ],
      "metadata": {
        "id": "ONZy1SvCDu6y"
      },
      "execution_count": 21,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "writer = ExcelWriter('notes.xlsx')"
      ],
      "metadata": {
        "id": "iubZBRlVEhiz"
      },
      "execution_count": 22,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "rawallplayers.to_excel(writer, sheet_name='Sheet1')\n",
        "gw6adjustments.to_excel(writer, sheet_name='Sheet2')\n",
        "#fplwithunderstat.to_excel(writer, sheet_name='Sheet3')\n",
        "\n",
        "# Close the Pandas Excel writer and output the Excel file.\n",
        "writer.save()"
      ],
      "metadata": {
        "id": "slYEIma_E0uP",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "60191ef6-f90e-4877-bb88-3f36c20d003d"
      },
      "execution_count": 23,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "<ipython-input-23-180dfb894519>:6: FutureWarning: save is not part of the public API, usage can give unexpected results and will be removed in a future version\n",
            "  writer.save()\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "gwfixtures"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 423
        },
        "id": "3udskoGrT73A",
        "outputId": "0b7bbd59-bf1b-4ca0-a4ce-efe9b8ee83bc"
      },
      "execution_count": 24,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "     event            team_h                   team_a          kickoff_time\n",
              "0      NaN   Manchester City                Brentford                   NaN\n",
              "1      1.0           Burnley          Manchester City  2023-08-11T19:00:00Z\n",
              "2      1.0           Arsenal        Nottingham Forest  2023-08-12T12:00:00Z\n",
              "3      1.0       Bournemouth                 West Ham  2023-08-12T14:00:00Z\n",
              "4      1.0          Brighton               Luton Town  2023-08-12T14:00:00Z\n",
              "..     ...               ...                      ...                   ...\n",
              "375   38.0    Crystal Palace              Aston Villa  2024-05-19T15:00:00Z\n",
              "376   38.0         Liverpool  Wolverhampton Wanderers  2024-05-19T15:00:00Z\n",
              "377   38.0        Luton Town                   Fulham  2024-05-19T15:00:00Z\n",
              "378   38.0   Manchester City                 West Ham  2024-05-19T15:00:00Z\n",
              "379   38.0  Sheffield United                Tottenham  2024-05-19T15:00:00Z\n",
              "\n",
              "[380 rows x 4 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-19d1c64a-a34f-43b6-9da2-5bd5852e3d29\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>event</th>\n",
              "      <th>team_h</th>\n",
              "      <th>team_a</th>\n",
              "      <th>kickoff_time</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>NaN</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>Brentford</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>1.0</td>\n",
              "      <td>Burnley</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>2023-08-11T19:00:00Z</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>1.0</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>Nottingham Forest</td>\n",
              "      <td>2023-08-12T12:00:00Z</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>1.0</td>\n",
              "      <td>Bournemouth</td>\n",
              "      <td>West Ham</td>\n",
              "      <td>2023-08-12T14:00:00Z</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>1.0</td>\n",
              "      <td>Brighton</td>\n",
              "      <td>Luton Town</td>\n",
              "      <td>2023-08-12T14:00:00Z</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>375</th>\n",
              "      <td>38.0</td>\n",
              "      <td>Crystal Palace</td>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>2024-05-19T15:00:00Z</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>376</th>\n",
              "      <td>38.0</td>\n",
              "      <td>Liverpool</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>2024-05-19T15:00:00Z</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>377</th>\n",
              "      <td>38.0</td>\n",
              "      <td>Luton Town</td>\n",
              "      <td>Fulham</td>\n",
              "      <td>2024-05-19T15:00:00Z</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>378</th>\n",
              "      <td>38.0</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>West Ham</td>\n",
              "      <td>2024-05-19T15:00:00Z</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>379</th>\n",
              "      <td>38.0</td>\n",
              "      <td>Sheffield United</td>\n",
              "      <td>Tottenham</td>\n",
              "      <td>2024-05-19T15:00:00Z</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>380 rows × 4 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-19d1c64a-a34f-43b6-9da2-5bd5852e3d29')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-19d1c64a-a34f-43b6-9da2-5bd5852e3d29 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-19d1c64a-a34f-43b6-9da2-5bd5852e3d29');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-f1261e96-0297-435b-9755-b90a35c9d0b5\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-f1261e96-0297-435b-9755-b90a35c9d0b5')\"\n",
              "            title=\"Suggest charts.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-f1261e96-0297-435b-9755-b90a35c9d0b5 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 24
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "rawdfallgw = pd.merge(master,\n",
        "                     gw6adjustments,\n",
        "                     on ='team',\n",
        "                     how ='left')\n",
        "rawfwdallgw = rawdfallgw.query('pos==\"F\"')\n",
        "rawfwdallgw['xPallgw'] = ((rawfwdallgw.expected_goals * 4/5)+(rawfwdallgw.expected_assists * 3/5) + (rawfwdallgw.apppoint))\n",
        "rawfwdallgw = rawfwdallgw.drop(columns=[\n",
        " 'expected_goals',\n",
        " 'expected_assists',\n",
        " 'apppoint',\n",
        " 'assistvalue',\n",
        "])\n",
        "rawmdallgw = rawdfallgw.query('pos==\"M\"')\n",
        "rawmdallgw['xPallgw'] = ((rawmdallgw.expected_goals * 5/5)+(rawmdallgw.expected_assists * 3/5) + (rawmdallgw.apppoint))\n",
        "rawmdallgw = rawmdallgw.drop(columns=[\n",
        " 'expected_goals',\n",
        " 'expected_assists',\n",
        " 'apppoint',\n",
        " 'assistvalue',\n",
        "])\n",
        "fbref = pd.read_html('https://fbref.com/en/comps/9/Premier-League-Stats')\n",
        "epltable = fbref[0]\n",
        "epltabledef = epltable.drop(columns=[ 'Rk',\n",
        " 'MP',\n",
        " 'W',\n",
        " 'D',\n",
        " 'L',\n",
        " 'GF',\n",
        " 'GA',\n",
        " 'GD',\n",
        " 'xG',\n",
        " 'xGD',\n",
        " 'xGD/90',\n",
        " 'Pts',\n",
        " 'Pts/MP',\n",
        " 'Last 5',\n",
        " 'Attendance',\n",
        " 'Top Team Scorer',\n",
        " 'Goalkeeper',\n",
        " 'Notes'])\n",
        "epltabledef= epltabledef.replace('Newcastle Utd', 'Newcastle United')\n",
        "epltabledef= epltabledef.replace('Wolves','Wolverhampton Wanderers')\n",
        "epltabledef= epltabledef.replace('Leeds United','Leeds')\n",
        "epltabledef= epltabledef.replace('Leicester City','Leicester')\n",
        "epltabledef= epltabledef.replace('Manchester Utd','Manchester United')\n",
        "epltabledef['Squad'] = epltabledef['Squad'].str.replace(r\"[\\\"\\',]\", '')\n",
        "epltabledef= epltabledef.replace('Nottham Forest','Nottingham Forest')\n",
        "epltabledef['xCSP'] = (4 - (epltabledef.xGA * 4/5))\n",
        "epltabledef.rename(columns={'Squad': 'team'}, inplace=True)\n",
        "rawdfcs = pd.merge(rawdf,\n",
        "                     epltabledef,\n",
        "                     on ='team',\n",
        "                     how ='left')\n",
        "rawgkallgw= rawdfcs.query('pos==\"G\"')\n",
        "#rawgkallgw['xPallgw'] = (rawgkallgw.apppoint)\n",
        "rawgkallgw['xPallgw'] = ((rawgkallgw.xCSP)+ (rawgkallgw.apppoint))\n",
        "rawgkallgw = rawgkallgw.drop(columns=[\n",
        " 'expected_goals',\n",
        "  'expected_assists',\n",
        " 'apppoint',\n",
        " 'assistvalue',\n",
        "  'xGA',\n",
        "])\n",
        "rawdefallgw= rawdfcs.query('pos==\"D\"')\n",
        "rawdefallgw['xPallgw'] = (rawdefallgw.expected_goals * 6/5)+(rawdefallgw.expected_assists * 3/5) +(rawdefallgw.xCSP)+ (rawdefallgw.apppoint)\n",
        "#rawdefallgw['xPallgw'] = (rawdefallgw.expected_goals * 6/3)+(rawdefallgw.expected_assists * 3/3) + (rawdefallgw.apppoint)\n",
        "rawdefallgw = rawdefallgw.drop(columns=[\n",
        " 'expected_goals',\n",
        " 'expected_assists',\n",
        " 'apppoint',\n",
        " 'assistvalue',\n",
        "  'xGA',])\n",
        "rawallplayersallgw = pd.concat([rawfwdallgw, rawmdallgw, rawdefallgw, rawgkallgw], ignore_index=True)\n",
        "rawallplayersallgw\n",
        "\n",
        "\n",
        "\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 874
        },
        "id": "xxPTwE3TZZC0",
        "outputId": "f7c79dc3-21fc-4baf-e365-93a997d971d2"
      },
      "execution_count": 25,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "<ipython-input-25-725f8317aac6>:6: SettingWithCopyWarning: \n",
            "A value is trying to be set on a copy of a slice from a DataFrame.\n",
            "Try using .loc[row_indexer,col_indexer] = value instead\n",
            "\n",
            "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
            "  rawfwdallgw['xPallgw'] = ((rawfwdallgw.expected_goals * 4/5)+(rawfwdallgw.expected_assists * 3/5) + (rawfwdallgw.apppoint))\n",
            "<ipython-input-25-725f8317aac6>:14: SettingWithCopyWarning: \n",
            "A value is trying to be set on a copy of a slice from a DataFrame.\n",
            "Try using .loc[row_indexer,col_indexer] = value instead\n",
            "\n",
            "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
            "  rawmdallgw['xPallgw'] = ((rawmdallgw.expected_goals * 5/5)+(rawmdallgw.expected_assists * 3/5) + (rawmdallgw.apppoint))\n",
            "<ipython-input-25-725f8317aac6>:46: FutureWarning: The default value of regex will change from True to False in a future version.\n",
            "  epltabledef['Squad'] = epltabledef['Squad'].str.replace(r\"[\\\"\\',]\", '')\n",
            "<ipython-input-25-725f8317aac6>:56: SettingWithCopyWarning: \n",
            "A value is trying to be set on a copy of a slice from a DataFrame.\n",
            "Try using .loc[row_indexer,col_indexer] = value instead\n",
            "\n",
            "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
            "  rawgkallgw['xPallgw'] = ((rawgkallgw.xCSP)+ (rawgkallgw.apppoint))\n",
            "<ipython-input-25-725f8317aac6>:65: SettingWithCopyWarning: \n",
            "A value is trying to be set on a copy of a slice from a DataFrame.\n",
            "Try using .loc[row_indexer,col_indexer] = value instead\n",
            "\n",
            "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
            "  rawdefallgw['xPallgw'] = (rawdefallgw.expected_goals * 6/5)+(rawdefallgw.expected_assists * 3/5) +(rawdefallgw.xCSP)+ (rawdefallgw.apppoint)\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "      id                     team pos     name  cost  selected_by_percent  \\\n",
              "0      1                  Arsenal   F  Balogun   4.4                  0.3   \n",
              "1      8                  Arsenal   F  G.Jesus   7.9                  3.1   \n",
              "2     13                  Arsenal   F  Nketiah   5.6                  6.1   \n",
              "3     39              Aston Villa   F    Davis   4.9                  0.2   \n",
              "4     44              Aston Villa   F    Duran   5.0                  0.2   \n",
              "..   ...                      ...  ..      ...   ...                  ...   \n",
              "712  647                 West Ham   G    Anang   4.0                  0.0   \n",
              "713  546  Wolverhampton Wanderers   G  Bentley   4.0                  0.4   \n",
              "714  564  Wolverhampton Wanderers   G     King   4.0                  0.8   \n",
              "715  569  Wolverhampton Wanderers   G  José Sá   5.0                  1.6   \n",
              "716  571  Wolverhampton Wanderers   G   Šarkić   4.0                  0.4   \n",
              "\n",
              "     goals_scored  assists  bps  ict_index  points  points_per_game  minutes  \\\n",
              "0               0        0    0        0.0       0              0.0        0   \n",
              "1               1        0   25       11.0       8              2.7       39   \n",
              "2               2        1   67       25.0      22              4.4      335   \n",
              "3               0        0    0        0.0       0              0.0        0   \n",
              "4               2        0   56       13.6      14              3.5       56   \n",
              "..            ...      ...  ...        ...     ...              ...      ...   \n",
              "712             0        0    0        0.0       0              0.0        0   \n",
              "713             0        0    0        0.0       0              0.0        0   \n",
              "714             0        0    0        0.0       0              0.0        0   \n",
              "715             0        0  109       18.5      19              3.8      450   \n",
              "716             0        0    0        0.0       0              0.0        0   \n",
              "\n",
              "     home_adjustment  xPallgw  xCSP  \n",
              "0           1.166179    2.000   NaN  \n",
              "1           1.166179    2.678   NaN  \n",
              "2           1.166179    3.384   NaN  \n",
              "3           1.101978    2.000   NaN  \n",
              "4           1.101978    2.590   NaN  \n",
              "..               ...      ...   ...  \n",
              "712         0.988306   -2.160 -4.16  \n",
              "713         0.820717   -2.240 -4.24  \n",
              "714         0.820717   -2.240 -4.24  \n",
              "715         0.820717   -2.240 -4.24  \n",
              "716         0.820717   -2.240 -4.24  \n",
              "\n",
              "[717 rows x 16 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-70cff8ef-c4af-4553-807a-f244589dadb1\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>team</th>\n",
              "      <th>pos</th>\n",
              "      <th>name</th>\n",
              "      <th>cost</th>\n",
              "      <th>selected_by_percent</th>\n",
              "      <th>goals_scored</th>\n",
              "      <th>assists</th>\n",
              "      <th>bps</th>\n",
              "      <th>ict_index</th>\n",
              "      <th>points</th>\n",
              "      <th>points_per_game</th>\n",
              "      <th>minutes</th>\n",
              "      <th>home_adjustment</th>\n",
              "      <th>xPallgw</th>\n",
              "      <th>xCSP</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>1</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>F</td>\n",
              "      <td>Balogun</td>\n",
              "      <td>4.4</td>\n",
              "      <td>0.3</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>1.166179</td>\n",
              "      <td>2.000</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>8</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>F</td>\n",
              "      <td>G.Jesus</td>\n",
              "      <td>7.9</td>\n",
              "      <td>3.1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>25</td>\n",
              "      <td>11.0</td>\n",
              "      <td>8</td>\n",
              "      <td>2.7</td>\n",
              "      <td>39</td>\n",
              "      <td>1.166179</td>\n",
              "      <td>2.678</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>13</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>F</td>\n",
              "      <td>Nketiah</td>\n",
              "      <td>5.6</td>\n",
              "      <td>6.1</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>67</td>\n",
              "      <td>25.0</td>\n",
              "      <td>22</td>\n",
              "      <td>4.4</td>\n",
              "      <td>335</td>\n",
              "      <td>1.166179</td>\n",
              "      <td>3.384</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>39</td>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>F</td>\n",
              "      <td>Davis</td>\n",
              "      <td>4.9</td>\n",
              "      <td>0.2</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>1.101978</td>\n",
              "      <td>2.000</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>44</td>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>F</td>\n",
              "      <td>Duran</td>\n",
              "      <td>5.0</td>\n",
              "      <td>0.2</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>56</td>\n",
              "      <td>13.6</td>\n",
              "      <td>14</td>\n",
              "      <td>3.5</td>\n",
              "      <td>56</td>\n",
              "      <td>1.101978</td>\n",
              "      <td>2.590</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>712</th>\n",
              "      <td>647</td>\n",
              "      <td>West Ham</td>\n",
              "      <td>G</td>\n",
              "      <td>Anang</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.988306</td>\n",
              "      <td>-2.160</td>\n",
              "      <td>-4.16</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>713</th>\n",
              "      <td>546</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>G</td>\n",
              "      <td>Bentley</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.4</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.820717</td>\n",
              "      <td>-2.240</td>\n",
              "      <td>-4.24</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>714</th>\n",
              "      <td>564</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>G</td>\n",
              "      <td>King</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.8</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.820717</td>\n",
              "      <td>-2.240</td>\n",
              "      <td>-4.24</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>715</th>\n",
              "      <td>569</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>G</td>\n",
              "      <td>José Sá</td>\n",
              "      <td>5.0</td>\n",
              "      <td>1.6</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>109</td>\n",
              "      <td>18.5</td>\n",
              "      <td>19</td>\n",
              "      <td>3.8</td>\n",
              "      <td>450</td>\n",
              "      <td>0.820717</td>\n",
              "      <td>-2.240</td>\n",
              "      <td>-4.24</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>716</th>\n",
              "      <td>571</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>G</td>\n",
              "      <td>Šarkić</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.4</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.820717</td>\n",
              "      <td>-2.240</td>\n",
              "      <td>-4.24</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>717 rows × 16 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-70cff8ef-c4af-4553-807a-f244589dadb1')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-70cff8ef-c4af-4553-807a-f244589dadb1 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-70cff8ef-c4af-4553-807a-f244589dadb1');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-4cd3237f-da2b-48a8-b0a2-f0e145f1aed4\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-4cd3237f-da2b-48a8-b0a2-f0e145f1aed4')\"\n",
              "            title=\"Suggest charts.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-4cd3237f-da2b-48a8-b0a2-f0e145f1aed4 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 25
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "rawmdallgw"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 423
        },
        "id": "ZtNrmQMhefCc",
        "outputId": "fcf4fe2a-db93-4448-a75e-4d7c77a17f24"
      },
      "execution_count": 26,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "      id                     team pos             name  cost  \\\n",
              "2      3                  Arsenal   M         M.Elneny   4.4   \n",
              "3      4                  Arsenal   M     Fábio Vieira   5.4   \n",
              "5      6                  Arsenal   M          Havertz   7.2   \n",
              "7      9                  Arsenal   M         Jorginho   5.4   \n",
              "9     11                  Arsenal   M       Marquinhos   4.5   \n",
              "..   ...                      ...  ..              ...   ...   \n",
              "704  568  Wolverhampton Wanderers   M          Podence   5.3   \n",
              "706  570  Wolverhampton Wanderers   M          Sarabia   5.0   \n",
              "710  574  Wolverhampton Wanderers   M  Boubacar Traore   4.4   \n",
              "714  698  Wolverhampton Wanderers   M         González   5.0   \n",
              "716  715  Wolverhampton Wanderers   M       Bellegarde   5.0   \n",
              "\n",
              "     selected_by_percent  goals_scored  assists  bps  ict_index  points  \\\n",
              "2                    0.1             0        0    0        0.0       0   \n",
              "3                    0.1             0        3   43       13.4      14   \n",
              "5                    1.9             0        0   21       16.2       8   \n",
              "7                    0.2             0        0   12        1.5       3   \n",
              "9                    0.1             0        0    0        0.0       0   \n",
              "..                   ...           ...      ...  ...        ...     ...   \n",
              "704                  0.1             0        0    0        0.0       0   \n",
              "706                  0.1             0        1   33       19.1       9   \n",
              "710                  0.5             0        0    4        0.8       2   \n",
              "714                  0.0             0        0    0        0.0       0   \n",
              "716                  0.0             0        0    6        2.6       2   \n",
              "\n",
              "     points_per_game  minutes  home_adjustment  xPallgw  \n",
              "2                0.0        0         1.166179    2.000  \n",
              "3                4.7      126         1.166179    2.584  \n",
              "5                1.6      321         1.166179    2.982  \n",
              "7                1.0       18         1.166179    2.024  \n",
              "9                0.0        0         1.166179    2.000  \n",
              "..               ...      ...              ...      ...  \n",
              "704              0.0        0         0.820717    2.000  \n",
              "706              2.2      172         0.820717    2.812  \n",
              "710              1.0       28         0.820717    2.006  \n",
              "714              0.0        0         0.820717    2.000  \n",
              "716              2.0       76         0.820717    2.046  \n",
              "\n",
              "[308 rows x 15 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-2c513d7d-d0b7-4d20-86f8-415f8fd201ac\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>team</th>\n",
              "      <th>pos</th>\n",
              "      <th>name</th>\n",
              "      <th>cost</th>\n",
              "      <th>selected_by_percent</th>\n",
              "      <th>goals_scored</th>\n",
              "      <th>assists</th>\n",
              "      <th>bps</th>\n",
              "      <th>ict_index</th>\n",
              "      <th>points</th>\n",
              "      <th>points_per_game</th>\n",
              "      <th>minutes</th>\n",
              "      <th>home_adjustment</th>\n",
              "      <th>xPallgw</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>3</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>M</td>\n",
              "      <td>M.Elneny</td>\n",
              "      <td>4.4</td>\n",
              "      <td>0.1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>1.166179</td>\n",
              "      <td>2.000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>4</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>M</td>\n",
              "      <td>Fábio Vieira</td>\n",
              "      <td>5.4</td>\n",
              "      <td>0.1</td>\n",
              "      <td>0</td>\n",
              "      <td>3</td>\n",
              "      <td>43</td>\n",
              "      <td>13.4</td>\n",
              "      <td>14</td>\n",
              "      <td>4.7</td>\n",
              "      <td>126</td>\n",
              "      <td>1.166179</td>\n",
              "      <td>2.584</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>6</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>M</td>\n",
              "      <td>Havertz</td>\n",
              "      <td>7.2</td>\n",
              "      <td>1.9</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>21</td>\n",
              "      <td>16.2</td>\n",
              "      <td>8</td>\n",
              "      <td>1.6</td>\n",
              "      <td>321</td>\n",
              "      <td>1.166179</td>\n",
              "      <td>2.982</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>9</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>M</td>\n",
              "      <td>Jorginho</td>\n",
              "      <td>5.4</td>\n",
              "      <td>0.2</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>12</td>\n",
              "      <td>1.5</td>\n",
              "      <td>3</td>\n",
              "      <td>1.0</td>\n",
              "      <td>18</td>\n",
              "      <td>1.166179</td>\n",
              "      <td>2.024</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>11</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>M</td>\n",
              "      <td>Marquinhos</td>\n",
              "      <td>4.5</td>\n",
              "      <td>0.1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>1.166179</td>\n",
              "      <td>2.000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>704</th>\n",
              "      <td>568</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>M</td>\n",
              "      <td>Podence</td>\n",
              "      <td>5.3</td>\n",
              "      <td>0.1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.820717</td>\n",
              "      <td>2.000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>706</th>\n",
              "      <td>570</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>M</td>\n",
              "      <td>Sarabia</td>\n",
              "      <td>5.0</td>\n",
              "      <td>0.1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>33</td>\n",
              "      <td>19.1</td>\n",
              "      <td>9</td>\n",
              "      <td>2.2</td>\n",
              "      <td>172</td>\n",
              "      <td>0.820717</td>\n",
              "      <td>2.812</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>710</th>\n",
              "      <td>574</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>M</td>\n",
              "      <td>Boubacar Traore</td>\n",
              "      <td>4.4</td>\n",
              "      <td>0.5</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>4</td>\n",
              "      <td>0.8</td>\n",
              "      <td>2</td>\n",
              "      <td>1.0</td>\n",
              "      <td>28</td>\n",
              "      <td>0.820717</td>\n",
              "      <td>2.006</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>714</th>\n",
              "      <td>698</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>M</td>\n",
              "      <td>González</td>\n",
              "      <td>5.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.820717</td>\n",
              "      <td>2.000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>716</th>\n",
              "      <td>715</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>M</td>\n",
              "      <td>Bellegarde</td>\n",
              "      <td>5.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>6</td>\n",
              "      <td>2.6</td>\n",
              "      <td>2</td>\n",
              "      <td>2.0</td>\n",
              "      <td>76</td>\n",
              "      <td>0.820717</td>\n",
              "      <td>2.046</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>308 rows × 15 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-2c513d7d-d0b7-4d20-86f8-415f8fd201ac')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-2c513d7d-d0b7-4d20-86f8-415f8fd201ac button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-2c513d7d-d0b7-4d20-86f8-415f8fd201ac');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-1f6e5346-06f3-4d8f-9bfc-c7147074a4b7\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-1f6e5346-06f3-4d8f-9bfc-c7147074a4b7')\"\n",
              "            title=\"Suggest charts.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-1f6e5346-06f3-4d8f-9bfc-c7147074a4b7 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 26
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "gw2blanks = [['Burnley', 0], ['Luton Town', 0]]\n",
        "\n",
        "# Create the pandas DataFrame\n",
        "blanks2 = pd.DataFrame(gw2blanks, columns=['team', 'gw2adjustment'])\n",
        "blanks2"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 112
        },
        "id": "xkGffHD0iXWI",
        "outputId": "e6977f87-3805-40c6-a0f8-392332c57e0a"
      },
      "execution_count": 27,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "         team  gw2adjustment\n",
              "0     Burnley              0\n",
              "1  Luton Town              0"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-90452dfb-b179-4df7-a0b3-0c3c5780204c\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>team</th>\n",
              "      <th>gw2adjustment</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>Burnley</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Luton Town</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-90452dfb-b179-4df7-a0b3-0c3c5780204c')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-90452dfb-b179-4df7-a0b3-0c3c5780204c button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-90452dfb-b179-4df7-a0b3-0c3c5780204c');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-eb49074c-a3fb-4600-b83d-afaa1206fcda\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-eb49074c-a3fb-4600-b83d-afaa1206fcda')\"\n",
              "            title=\"Suggest charts.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-eb49074c-a3fb-4600-b83d-afaa1206fcda button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 27
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#gw2adjustments = pd.concat([gw2adjustments, blanks2])\n",
        "#gw2adjustments = gw2adjustments.reset_index(drop=True)\n",
        "#gw2adjustments"
      ],
      "metadata": {
        "id": "JNr3eV5Rir58"
      },
      "execution_count": 28,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "##gw3blanks = [['Newcastle United', 0], ['Manchester United', 0], ['Brentford', 0], ['Brighton', 0]]\n",
        "\n",
        "# Create the pandas DataFrame\n",
        "##blanks = pd.DataFrame(gw3blanks, columns=['team', 'gw3adjustment'])\n",
        "##blanks"
      ],
      "metadata": {
        "id": "iCizQgwMD84B"
      },
      "execution_count": 29,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "gw9 = homesawayspi.query('Event==\"9.0\"')\n",
        "pd.options.mode.chained_assignment = None  # default='warn'\n",
        "PLSPI = spi.query('league==\"Barclays Premier League\"')\n",
        "PLSPI['League Average']  = PLSPI[\"spi\"].mean()\n",
        "laverage = PLSPI[\"spi\"].mean()\n",
        "PLSPI['League Average'].astype(int)\n",
        "gw9['League_Average']  = laverage\n",
        "gw9.rename(columns = {'Home SPI':'HomeSPI', 'Away SPI':'AwaySPI'}, inplace = True)\n",
        "gw9['home_difference'] = gw9.HomeSPI - gw9.League_Average\n",
        "gw9['away_difference'] = gw9.AwaySPI - gw9.League_Average\n",
        "gw9['home_adjustment'] = (gw9.home_difference - gw9.away_difference + gw9.League_Average)/gw9.League_Average\n",
        "gw9['away_adjustment'] = (gw9.away_difference - gw9.home_difference+ gw9.League_Average)/gw9.League_Average\n",
        "gw9adjustments = gw9[['team_h', 'home_adjustment']].append(gw9[['team_a','away_adjustment']].set_axis(['team_h', 'home_adjustment'], axis=1)).reset_index(drop=True)\n",
        "gw9adjustments.rename(columns = {'team_h':'team'}, inplace = True)\n",
        "gw9adjustments.rename(columns = {'home_adjustment':'gw9adjustment'}, inplace = True)\n",
        "gw9adjustments"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 711
        },
        "id": "pzyah3Z-kgct",
        "outputId": "3167a751-8586-4b80-945d-2f1c60e8badf"
      },
      "execution_count": 30,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "<ipython-input-30-5b7600c0bba0>:13: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  gw9adjustments = gw9[['team_h', 'home_adjustment']].append(gw9[['team_a','away_adjustment']].set_axis(['team_h', 'home_adjustment'], axis=1)).reset_index(drop=True)\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                       team  gw9adjustment\n",
              "0                 Liverpool       1.282095\n",
              "1               Bournemouth       1.007226\n",
              "2                 Brentford       1.197328\n",
              "3           Manchester City       1.154527\n",
              "4          Newcastle United       1.142298\n",
              "5         Nottingham Forest       1.009033\n",
              "6                   Chelsea       0.886884\n",
              "7          Sheffield United       0.687194\n",
              "8               Aston Villa       1.113672\n",
              "9                 Tottenham       1.054474\n",
              "10                  Everton       0.717905\n",
              "11  Wolverhampton Wanderers       0.992774\n",
              "12                  Burnley       0.802672\n",
              "13                 Brighton       0.845473\n",
              "14           Crystal Palace       0.857702\n",
              "15               Luton Town       0.990967\n",
              "16                  Arsenal       1.113116\n",
              "17        Manchester United       1.312806\n",
              "18                 West Ham       0.886328\n",
              "19                   Fulham       0.945526"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-8893cd73-3013-4a13-9833-db74a2c6dab7\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>team</th>\n",
              "      <th>gw9adjustment</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>Liverpool</td>\n",
              "      <td>1.282095</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Bournemouth</td>\n",
              "      <td>1.007226</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>Brentford</td>\n",
              "      <td>1.197328</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>Manchester City</td>\n",
              "      <td>1.154527</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>Newcastle United</td>\n",
              "      <td>1.142298</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>Nottingham Forest</td>\n",
              "      <td>1.009033</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>Chelsea</td>\n",
              "      <td>0.886884</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>Sheffield United</td>\n",
              "      <td>0.687194</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>1.113672</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>Tottenham</td>\n",
              "      <td>1.054474</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10</th>\n",
              "      <td>Everton</td>\n",
              "      <td>0.717905</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>11</th>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>0.992774</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>12</th>\n",
              "      <td>Burnley</td>\n",
              "      <td>0.802672</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>13</th>\n",
              "      <td>Brighton</td>\n",
              "      <td>0.845473</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>14</th>\n",
              "      <td>Crystal Palace</td>\n",
              "      <td>0.857702</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>15</th>\n",
              "      <td>Luton Town</td>\n",
              "      <td>0.990967</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>16</th>\n",
              "      <td>Arsenal</td>\n",
              "      <td>1.113116</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>17</th>\n",
              "      <td>Manchester United</td>\n",
              "      <td>1.312806</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>18</th>\n",
              "      <td>West Ham</td>\n",
              "      <td>0.886328</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>19</th>\n",
              "      <td>Fulham</td>\n",
              "      <td>0.945526</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-8893cd73-3013-4a13-9833-db74a2c6dab7')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-8893cd73-3013-4a13-9833-db74a2c6dab7 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-8893cd73-3013-4a13-9833-db74a2c6dab7');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-58a7b029-a4f8-4e26-bf43-233148004152\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-58a7b029-a4f8-4e26-bf43-233148004152')\"\n",
              "            title=\"Suggest charts.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-58a7b029-a4f8-4e26-bf43-233148004152 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 30
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "gw2 = homesawayspi.query('Event==\"2.0\"')\n",
        "pd.options.mode.chained_assignment = None  # default='warn'\n",
        "PLSPI = spi.query('league==\"Barclays Premier League\"')\n",
        "PLSPI['League Average']  = PLSPI[\"spi\"].mean()\n",
        "laverage = PLSPI[\"spi\"].mean()\n",
        "PLSPI['League Average'].astype(int)\n",
        "gw2['League_Average']  = laverage\n",
        "gw2.rename(columns = {'Home SPI':'HomeSPI', 'Away SPI':'AwaySPI'}, inplace = True)\n",
        "gw2['home_difference'] = gw2.HomeSPI - gw2.League_Average\n",
        "gw2['away_difference'] = gw2.AwaySPI - gw2.League_Average\n",
        "gw2['home_adjustment'] = (gw2.home_difference - gw2.away_difference + gw2.League_Average)/gw2.League_Average\n",
        "gw2['away_adjustment'] = (gw2.away_difference - gw2.home_difference+ gw2.League_Average)/gw2.League_Average\n",
        "gw2adjustments = gw2[['team_h', 'home_adjustment']].append(gw2[['team_a','away_adjustment']].set_axis(['team_h', 'home_adjustment'], axis=1)).reset_index(drop=True)\n",
        "gw2adjustments.rename(columns = {'team_h':'team'}, inplace = True)\n",
        "gw2adjustments.rename(columns = {'home_adjustment':'gw2adjustment'}, inplace = True)\n",
        "gw2adjustments = gw2adjustments.groupby('team', as_index=False)['gw2adjustment'].aggregate('sum')\n",
        "gw2adjustments"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 648
        },
        "id": "nL5rLLG4kOqM",
        "outputId": "9dc87b91-1754-4120-84dc-d55312a2b6df"
      },
      "execution_count": 31,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "<ipython-input-31-cc71a582ca3c>:13: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  gw2adjustments = gw2[['team_h', 'home_adjustment']].append(gw2[['team_a','away_adjustment']].set_axis(['team_h', 'home_adjustment'], axis=1)).reset_index(drop=True)\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                       team  gw2adjustment\n",
              "0                   Arsenal       1.145356\n",
              "1               Aston Villa       1.217755\n",
              "2               Bournemouth       0.661625\n",
              "3                 Brentford       1.123955\n",
              "4                  Brighton       1.303218\n",
              "5                   Chelsea       1.064757\n",
              "6            Crystal Palace       0.854644\n",
              "7                   Everton       0.782245\n",
              "8                    Fulham       0.876045\n",
              "9                 Liverpool       1.338375\n",
              "10          Manchester City       1.115339\n",
              "11        Manchester United       1.096440\n",
              "12         Newcastle United       0.884661\n",
              "13        Nottingham Forest       0.993886\n",
              "14         Sheffield United       1.006114\n",
              "15                Tottenham       0.903560\n",
              "16                 West Ham       0.935243\n",
              "17  Wolverhampton Wanderers       0.696782"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-d2892599-fc81-4791-826f-651145062134\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>team</th>\n",
              "      <th>gw2adjustment</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>Arsenal</td>\n",
              "      <td>1.145356</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>1.217755</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>Bournemouth</td>\n",
              "      <td>0.661625</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>Brentford</td>\n",
              "      <td>1.123955</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>Brighton</td>\n",
              "      <td>1.303218</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>Chelsea</td>\n",
              "      <td>1.064757</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>Crystal Palace</td>\n",
              "      <td>0.854644</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>Everton</td>\n",
              "      <td>0.782245</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>Fulham</td>\n",
              "      <td>0.876045</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>Liverpool</td>\n",
              "      <td>1.338375</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10</th>\n",
              "      <td>Manchester City</td>\n",
              "      <td>1.115339</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>11</th>\n",
              "      <td>Manchester United</td>\n",
              "      <td>1.096440</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>12</th>\n",
              "      <td>Newcastle United</td>\n",
              "      <td>0.884661</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>13</th>\n",
              "      <td>Nottingham Forest</td>\n",
              "      <td>0.993886</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>14</th>\n",
              "      <td>Sheffield United</td>\n",
              "      <td>1.006114</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>15</th>\n",
              "      <td>Tottenham</td>\n",
              "      <td>0.903560</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>16</th>\n",
              "      <td>West Ham</td>\n",
              "      <td>0.935243</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>17</th>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>0.696782</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-d2892599-fc81-4791-826f-651145062134')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-d2892599-fc81-4791-826f-651145062134 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-d2892599-fc81-4791-826f-651145062134');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-61a3deb3-039d-4bd5-9e56-5f31bb00d0b0\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-61a3deb3-039d-4bd5-9e56-5f31bb00d0b0')\"\n",
              "            title=\"Suggest charts.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-61a3deb3-039d-4bd5-9e56-5f31bb00d0b0 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 31
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "gw3 = homesawayspi.query('Event==\"3.0\"')\n",
        "pd.options.mode.chained_assignment = None  # default='warn'\n",
        "PLSPI = spi.query('league==\"Barclays Premier League\"')\n",
        "PLSPI['League Average']  = PLSPI[\"spi\"].mean()\n",
        "laverage = PLSPI[\"spi\"].mean()\n",
        "PLSPI['League Average'].astype(int)\n",
        "gw3['League_Average']  = laverage\n",
        "gw3.rename(columns = {'Home SPI':'HomeSPI', 'Away SPI':'AwaySPI'}, inplace = True)\n",
        "gw3['home_difference'] = gw3.HomeSPI - gw3.League_Average\n",
        "gw3['away_difference'] = gw3.AwaySPI - gw3.League_Average\n",
        "gw3['home_adjustment'] = (gw3.home_difference - gw3.away_difference + gw3.League_Average)/gw3.League_Average\n",
        "gw3['away_adjustment'] = (gw3.away_difference - gw3.home_difference+ gw3.League_Average)/gw3.League_Average\n",
        "gw3adjustments = gw3[['team_h', 'home_adjustment']].append(gw3[['team_a','away_adjustment']].set_axis(['team_h', 'home_adjustment'], axis=1)).reset_index(drop=True)\n",
        "gw3adjustments.rename(columns = {'team_h':'team'}, inplace = True)\n",
        "gw3adjustments.rename(columns = {'home_adjustment':'gw3adjustment'}, inplace = True)\n",
        "gw3adjustments"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 711
        },
        "id": "bg97rds1kb73",
        "outputId": "be429d82-a598-4a21-e5c5-21b737868252"
      },
      "execution_count": 32,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "<ipython-input-32-a2637fad4f3e>:13: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  gw3adjustments = gw3[['team_h', 'home_adjustment']].append(gw3[['team_a','away_adjustment']].set_axis(['team_h', 'home_adjustment'], axis=1)).reset_index(drop=True)\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                       team  gw3adjustment\n",
              "0                   Chelsea       1.282095\n",
              "1               Bournemouth       0.825462\n",
              "2                   Arsenal       1.218172\n",
              "3                 Brentford       1.051138\n",
              "4                   Everton       1.063506\n",
              "5         Manchester United       1.318921\n",
              "6                  Brighton       1.135628\n",
              "7                   Burnley       0.772656\n",
              "8          Sheffield United       0.507653\n",
              "9          Newcastle United       0.996804\n",
              "10               Luton Town       0.717905\n",
              "11                Tottenham       1.174538\n",
              "12                   Fulham       0.781828\n",
              "13           Crystal Palace       0.948862\n",
              "14  Wolverhampton Wanderers       0.936494\n",
              "15        Nottingham Forest       0.681079\n",
              "16                 West Ham       0.864372\n",
              "17              Aston Villa       1.227344\n",
              "18          Manchester City       1.492347\n",
              "19                Liverpool       1.003196"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-167fee76-72f5-40fd-a2ea-c7968f03016d\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>team</th>\n",
              "      <th>gw3adjustment</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>Chelsea</td>\n",
              "      <td>1.282095</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Bournemouth</td>\n",
              "      <td>0.825462</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>Arsenal</td>\n",
              "      <td>1.218172</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>Brentford</td>\n",
              "      <td>1.051138</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>Everton</td>\n",
              "      <td>1.063506</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>Manchester United</td>\n",
              "      <td>1.318921</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>Brighton</td>\n",
              "      <td>1.135628</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>Burnley</td>\n",
              "      <td>0.772656</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>Sheffield United</td>\n",
              "      <td>0.507653</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>Newcastle United</td>\n",
              "      <td>0.996804</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10</th>\n",
              "      <td>Luton Town</td>\n",
              "      <td>0.717905</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>11</th>\n",
              "      <td>Tottenham</td>\n",
              "      <td>1.174538</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>12</th>\n",
              "      <td>Fulham</td>\n",
              "      <td>0.781828</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>13</th>\n",
              "      <td>Crystal Palace</td>\n",
              "      <td>0.948862</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>14</th>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>0.936494</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>15</th>\n",
              "      <td>Nottingham Forest</td>\n",
              "      <td>0.681079</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>16</th>\n",
              "      <td>West Ham</td>\n",
              "      <td>0.864372</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>17</th>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>1.227344</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>18</th>\n",
              "      <td>Manchester City</td>\n",
              "      <td>1.492347</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>19</th>\n",
              "      <td>Liverpool</td>\n",
              "      <td>1.003196</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-167fee76-72f5-40fd-a2ea-c7968f03016d')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-167fee76-72f5-40fd-a2ea-c7968f03016d button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-167fee76-72f5-40fd-a2ea-c7968f03016d');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-ee8c7a44-05d9-4353-b349-0281a1514e96\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-ee8c7a44-05d9-4353-b349-0281a1514e96')\"\n",
              "            title=\"Suggest charts.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-ee8c7a44-05d9-4353-b349-0281a1514e96 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 32
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "gw10 = homesawayspi.query('Event==\"10.0\"')\n",
        "pd.options.mode.chained_assignment = None  # default='warn'\n",
        "PLSPI = spi.query('league==\"Barclays Premier League\"')\n",
        "PLSPI['League Average']  = PLSPI[\"spi\"].mean()\n",
        "laverage = PLSPI[\"spi\"].mean()\n",
        "PLSPI['League Average'].astype(int)\n",
        "gw10['League_Average']  = laverage\n",
        "gw10.rename(columns = {'Home SPI':'HomeSPI', 'Away SPI':'AwaySPI'}, inplace = True)\n",
        "gw10['home_difference'] = gw10.HomeSPI - gw10.League_Average\n",
        "gw10['away_difference'] = gw10.AwaySPI - gw10.League_Average\n",
        "gw10['home_adjustment'] = (gw10.home_difference - gw10.away_difference + gw10.League_Average)/gw10.League_Average\n",
        "gw10['away_adjustment'] = (gw10.away_difference - gw10.home_difference+ gw10.League_Average)/gw10.League_Average\n",
        "gw10adjustments = gw10[['team_h', 'home_adjustment']].append(gw10[['team_a','away_adjustment']].set_axis(['team_h', 'home_adjustment'], axis=1)).reset_index(drop=True)\n",
        "gw10adjustments.rename(columns = {'team_h':'team'}, inplace = True)\n",
        "gw10adjustments.rename(columns = {'home_adjustment':'gw10adjustment'}, inplace = True)\n",
        "gw10adjustments"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 711
        },
        "id": "7uE1H7R4Gems",
        "outputId": "bef33748-3280-4364-e781-f36e11b18787"
      },
      "execution_count": 33,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "<ipython-input-33-6a37dd411c1c>:13: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  gw10adjustments = gw10[['team_h', 'home_adjustment']].append(gw10[['team_a','away_adjustment']].set_axis(['team_h', 'home_adjustment'], axis=1)).reset_index(drop=True)\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                       team  gw10adjustment\n",
              "0            Crystal Palace        1.018343\n",
              "1                   Chelsea        0.981101\n",
              "2                   Arsenal        1.380064\n",
              "3               Bournemouth        0.953308\n",
              "4   Wolverhampton Wanderers        0.657595\n",
              "5                  West Ham        1.104083\n",
              "6               Aston Villa        1.331010\n",
              "7                  Brighton        1.175927\n",
              "8                 Liverpool        1.386318\n",
              "9         Manchester United        0.820460\n",
              "10                Tottenham        0.981657\n",
              "11                Brentford        1.018899\n",
              "12         Sheffield United        0.619936\n",
              "13                  Burnley        1.046692\n",
              "14         Newcastle United        1.342405\n",
              "15                  Everton        0.895917\n",
              "16               Luton Town        0.668990\n",
              "17                   Fulham        0.824073\n",
              "18        Nottingham Forest        0.613682\n",
              "19          Manchester City        1.179540"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-55dcad91-5847-458b-89ba-abd7c67aa1cf\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>team</th>\n",
              "      <th>gw10adjustment</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>Crystal Palace</td>\n",
              "      <td>1.018343</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Chelsea</td>\n",
              "      <td>0.981101</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>Arsenal</td>\n",
              "      <td>1.380064</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>Bournemouth</td>\n",
              "      <td>0.953308</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>0.657595</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>West Ham</td>\n",
              "      <td>1.104083</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>1.331010</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>Brighton</td>\n",
              "      <td>1.175927</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>Liverpool</td>\n",
              "      <td>1.386318</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>Manchester United</td>\n",
              "      <td>0.820460</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10</th>\n",
              "      <td>Tottenham</td>\n",
              "      <td>0.981657</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>11</th>\n",
              "      <td>Brentford</td>\n",
              "      <td>1.018899</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>12</th>\n",
              "      <td>Sheffield United</td>\n",
              "      <td>0.619936</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>13</th>\n",
              "      <td>Burnley</td>\n",
              "      <td>1.046692</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>14</th>\n",
              "      <td>Newcastle United</td>\n",
              "      <td>1.342405</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>15</th>\n",
              "      <td>Everton</td>\n",
              "      <td>0.895917</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>16</th>\n",
              "      <td>Luton Town</td>\n",
              "      <td>0.668990</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>17</th>\n",
              "      <td>Fulham</td>\n",
              "      <td>0.824073</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>18</th>\n",
              "      <td>Nottingham Forest</td>\n",
              "      <td>0.613682</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>19</th>\n",
              "      <td>Manchester City</td>\n",
              "      <td>1.179540</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-55dcad91-5847-458b-89ba-abd7c67aa1cf')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-55dcad91-5847-458b-89ba-abd7c67aa1cf button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-55dcad91-5847-458b-89ba-abd7c67aa1cf');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-1d4431c9-361d-4848-b958-829c881d8aaf\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-1d4431c9-361d-4848-b958-829c881d8aaf')\"\n",
              "            title=\"Suggest charts.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-1d4431c9-361d-4848-b958-829c881d8aaf button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 33
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#gw5blanks = [['Chelsea', 0], ['Manchester United', 0], ['Manchester City', 0], ['Brighton', 0]]\n",
        "\n",
        "# Create the pandas DataFrame\n",
        "#blanks32 = pd.DataFrame(gw5blanks, columns=['team', 'gw5adjustment'])\n",
        "#blanks32"
      ],
      "metadata": {
        "id": "p00QYlZ7UbAu"
      },
      "execution_count": 34,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "#gw5adjustments = pd.concat([gw5adjustments, blanks32])\n",
        "#gw5adjustments = gw5adjustments.reset_index(drop=True)\n",
        "#gw5adjustments"
      ],
      "metadata": {
        "id": "xh_AhxKJU0VW"
      },
      "execution_count": 35,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "gw6= homesawayspi.query('Event==\"6.0\"')\n",
        "pd.options.mode.chained_assignment = None  # default='warn'\n",
        "PLSPI = spi.query('league==\"Barclays Premier League\"')\n",
        "PLSPI['League Average']  = PLSPI[\"spi\"].mean()\n",
        "laverage = PLSPI[\"spi\"].mean()\n",
        "PLSPI['League Average'].astype(int)\n",
        "gw6['League_Average']  = laverage\n",
        "gw6.rename(columns = {'Home SPI':'HomeSPI', 'Away SPI':'AwaySPI'}, inplace = True)\n",
        "gw6['home_difference'] = gw6.HomeSPI - gw6.League_Average\n",
        "gw6['away_difference'] = gw6.AwaySPI - gw6.League_Average\n",
        "gw6['home_adjustment'] = (gw6.home_difference - gw6.away_difference + gw6.League_Average)/gw6.League_Average\n",
        "gw6['away_adjustment'] = (gw6.away_difference - gw6.home_difference+ gw6.League_Average)/gw6.League_Average\n",
        "gw6adjustments = gw6[['team_h', 'home_adjustment']].append(gw6[['team_a','away_adjustment']].set_axis(['team_h', 'home_adjustment'], axis=1)).reset_index(drop=True)\n",
        "gw6adjustments.rename(columns = {'team_h':'team'}, inplace = True)\n",
        "gw6adjustments.rename(columns = {'home_adjustment':'gw6adjustment'}, inplace = True)\n",
        "gw6adjustments"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 711
        },
        "id": "OPB6Pz8sGZNe",
        "outputId": "b71e9ac6-c830-4536-9f20-87a85c5e5db2"
      },
      "execution_count": 36,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "<ipython-input-36-34edfb59e920>:13: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  gw6adjustments = gw6[['team_h', 'home_adjustment']].append(gw6[['team_a','away_adjustment']].set_axis(['team_h', 'home_adjustment'], axis=1)).reset_index(drop=True)\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                       team  gw6adjustment\n",
              "0            Crystal Palace       1.072817\n",
              "1                Luton Town       0.950251\n",
              "2           Manchester City       1.498461\n",
              "3                 Brentford       1.187739\n",
              "4                   Burnley       0.775713\n",
              "5                   Arsenal       1.163699\n",
              "6                  Brighton       1.295992\n",
              "7                   Chelsea       0.951085\n",
              "8                 Liverpool       1.178012\n",
              "9          Sheffield United       0.622993\n",
              "10                   Fulham       0.927183\n",
              "11  Wolverhampton Wanderers       1.049749\n",
              "12        Nottingham Forest       0.501539\n",
              "13                  Everton       0.812261\n",
              "14        Manchester United       1.224287\n",
              "15                Tottenham       0.836301\n",
              "16              Bournemouth       0.704008\n",
              "17              Aston Villa       1.048915\n",
              "18                 West Ham       0.821988\n",
              "19         Newcastle United       1.377007"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-d99742ac-1d03-47f2-b9f8-bb366dcbfb01\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>team</th>\n",
              "      <th>gw6adjustment</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>Crystal Palace</td>\n",
              "      <td>1.072817</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Luton Town</td>\n",
              "      <td>0.950251</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>Manchester City</td>\n",
              "      <td>1.498461</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>Brentford</td>\n",
              "      <td>1.187739</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>Burnley</td>\n",
              "      <td>0.775713</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>Arsenal</td>\n",
              "      <td>1.163699</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>Brighton</td>\n",
              "      <td>1.295992</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>Chelsea</td>\n",
              "      <td>0.951085</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>Liverpool</td>\n",
              "      <td>1.178012</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>Sheffield United</td>\n",
              "      <td>0.622993</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10</th>\n",
              "      <td>Fulham</td>\n",
              "      <td>0.927183</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>11</th>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>1.049749</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>12</th>\n",
              "      <td>Nottingham Forest</td>\n",
              "      <td>0.501539</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>13</th>\n",
              "      <td>Everton</td>\n",
              "      <td>0.812261</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>14</th>\n",
              "      <td>Manchester United</td>\n",
              "      <td>1.224287</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>15</th>\n",
              "      <td>Tottenham</td>\n",
              "      <td>0.836301</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>16</th>\n",
              "      <td>Bournemouth</td>\n",
              "      <td>0.704008</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>17</th>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>1.048915</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>18</th>\n",
              "      <td>West Ham</td>\n",
              "      <td>0.821988</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>19</th>\n",
              "      <td>Newcastle United</td>\n",
              "      <td>1.377007</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-d99742ac-1d03-47f2-b9f8-bb366dcbfb01')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-d99742ac-1d03-47f2-b9f8-bb366dcbfb01 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-d99742ac-1d03-47f2-b9f8-bb366dcbfb01');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-7b719426-7bdc-44a7-a8e2-7ef533aca8db\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-7b719426-7bdc-44a7-a8e2-7ef533aca8db')\"\n",
              "            title=\"Suggest charts.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-7b719426-7bdc-44a7-a8e2-7ef533aca8db button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 36
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "gw7= homesawayspi.query('Event==\"7.0\"')\n",
        "pd.options.mode.chained_assignment = None  # default='warn'\n",
        "PLSPI = spi.query('league==\"Barclays Premier League\"')\n",
        "PLSPI['League Average']  = PLSPI[\"spi\"].mean()\n",
        "laverage = PLSPI[\"spi\"].mean()\n",
        "PLSPI['League Average'].astype(int)\n",
        "gw7['League_Average']  = laverage\n",
        "gw7.rename(columns = {'Home SPI':'HomeSPI', 'Away SPI':'AwaySPI'}, inplace = True)\n",
        "gw7['home_difference'] = gw7.HomeSPI - gw7.League_Average\n",
        "gw7['away_difference'] = gw7.AwaySPI - gw7.League_Average\n",
        "gw7['home_adjustment'] = (gw7.home_difference - gw7.away_difference + gw7.League_Average)/gw7.League_Average\n",
        "gw7['away_adjustment'] = (gw7.away_difference - gw7.home_difference+ gw7.League_Average)/gw7.League_Average\n",
        "gw7adjustments = gw7[['team_h', 'home_adjustment']].append(gw7[['team_a','away_adjustment']].set_axis(['team_h', 'home_adjustment'], axis=1)).reset_index(drop=True)\n",
        "gw7adjustments.rename(columns = {'team_h':'team'}, inplace = True)\n",
        "gw7adjustments.rename(columns = {'home_adjustment':'gw7adjustment'}, inplace = True)\n",
        "gw7adjustments"
      ],
      "metadata": {
        "id": "Ns7V93Gobs3z",
        "outputId": "bbd27861-1eaf-40a8-eebb-14b527f38930",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 774
        }
      },
      "execution_count": 37,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "<ipython-input-37-a69037db6fdb>:13: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  gw7adjustments = gw7[['team_h', 'home_adjustment']].append(gw7[['team_a','away_adjustment']].set_axis(['team_h', 'home_adjustment'], axis=1)).reset_index(drop=True)\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                       team  gw7adjustment\n",
              "0               Aston Villa       0.978044\n",
              "1               Bournemouth       0.661764\n",
              "2                   Everton       1.113255\n",
              "3         Manchester United       1.078097\n",
              "4          Newcastle United       1.288488\n",
              "5                  West Ham       1.202191\n",
              "6   Wolverhampton Wanderers       0.542255\n",
              "7                 Tottenham       0.836162\n",
              "8         Nottingham Forest       0.708038\n",
              "9                    Fulham       0.894944\n",
              "10               Luton Town       0.896333\n",
              "11                 Brighton       1.021956\n",
              "12                  Arsenal       1.338236\n",
              "13               Luton Town       0.886745\n",
              "14           Crystal Palace       0.921903\n",
              "15                  Burnley       0.711512\n",
              "16         Sheffield United       0.797809\n",
              "17          Manchester City       1.457745\n",
              "18                Liverpool       1.163838\n",
              "19                Brentford       1.291962\n",
              "20                  Chelsea       1.105056\n",
              "21                  Burnley       1.103667"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-eb7be8fc-a1db-48b8-bed4-0528e0987121\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>team</th>\n",
              "      <th>gw7adjustment</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>0.978044</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Bournemouth</td>\n",
              "      <td>0.661764</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>Everton</td>\n",
              "      <td>1.113255</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>Manchester United</td>\n",
              "      <td>1.078097</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>Newcastle United</td>\n",
              "      <td>1.288488</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>West Ham</td>\n",
              "      <td>1.202191</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>0.542255</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>Tottenham</td>\n",
              "      <td>0.836162</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>Nottingham Forest</td>\n",
              "      <td>0.708038</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>Fulham</td>\n",
              "      <td>0.894944</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10</th>\n",
              "      <td>Luton Town</td>\n",
              "      <td>0.896333</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>11</th>\n",
              "      <td>Brighton</td>\n",
              "      <td>1.021956</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>12</th>\n",
              "      <td>Arsenal</td>\n",
              "      <td>1.338236</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>13</th>\n",
              "      <td>Luton Town</td>\n",
              "      <td>0.886745</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>14</th>\n",
              "      <td>Crystal Palace</td>\n",
              "      <td>0.921903</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>15</th>\n",
              "      <td>Burnley</td>\n",
              "      <td>0.711512</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>16</th>\n",
              "      <td>Sheffield United</td>\n",
              "      <td>0.797809</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>17</th>\n",
              "      <td>Manchester City</td>\n",
              "      <td>1.457745</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>18</th>\n",
              "      <td>Liverpool</td>\n",
              "      <td>1.163838</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>19</th>\n",
              "      <td>Brentford</td>\n",
              "      <td>1.291962</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>20</th>\n",
              "      <td>Chelsea</td>\n",
              "      <td>1.105056</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>21</th>\n",
              "      <td>Burnley</td>\n",
              "      <td>1.103667</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-eb7be8fc-a1db-48b8-bed4-0528e0987121')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-eb7be8fc-a1db-48b8-bed4-0528e0987121 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-eb7be8fc-a1db-48b8-bed4-0528e0987121');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-78b2a57b-9620-49c6-8485-62715cdcef37\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-78b2a57b-9620-49c6-8485-62715cdcef37')\"\n",
              "            title=\"Suggest charts.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-78b2a57b-9620-49c6-8485-62715cdcef37 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 37
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "gw8= homesawayspi.query('Event==\"8.0\"')\n",
        "pd.options.mode.chained_assignment = None  # default='warn'\n",
        "PLSPI = spi.query('league==\"Barclays Premier League\"')\n",
        "PLSPI['League Average']  = PLSPI[\"spi\"].mean()\n",
        "laverage = PLSPI[\"spi\"].mean()\n",
        "PLSPI['League Average'].astype(int)\n",
        "gw8['League_Average']  = laverage\n",
        "gw8.rename(columns = {'Home SPI':'HomeSPI', 'Away SPI':'AwaySPI'}, inplace = True)\n",
        "gw8['home_difference'] = gw8.HomeSPI - gw8.League_Average\n",
        "gw8['away_difference'] = gw8.AwaySPI - gw8.League_Average\n",
        "gw8['home_adjustment'] = (gw8.home_difference - gw8.away_difference + gw8.League_Average)/gw8.League_Average\n",
        "gw8['away_adjustment'] = (gw8.away_difference - gw8.home_difference+ gw8.League_Average)/gw8.League_Average\n",
        "gw8adjustments = gw8[['team_h', 'home_adjustment']].append(gw8[['team_a','away_adjustment']].set_axis(['team_h', 'home_adjustment'], axis=1)).reset_index(drop=True)\n",
        "gw8adjustments.rename(columns = {'team_h':'team'}, inplace = True)\n",
        "gw8adjustments.rename(columns = {'home_adjustment':'gw8adjustment'}, inplace = True)\n",
        "gw8adjustments"
      ],
      "metadata": {
        "id": "wlvV4OeQb34Z",
        "outputId": "4e8a5c8a-3dcc-4b18-f18a-a288454e7fc8",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 711
        }
      },
      "execution_count": 38,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "<ipython-input-38-5ca60b495158>:13: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  gw8adjustments = gw8[['team_h', 'home_adjustment']].append(gw8[['team_a','away_adjustment']].set_axis(['team_h', 'home_adjustment'], axis=1)).reset_index(drop=True)\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                       team  gw8adjustment\n",
              "0                Luton Town       0.768487\n",
              "1                   Burnley       0.821571\n",
              "2                   Everton       1.056280\n",
              "3                    Fulham       1.161892\n",
              "4         Manchester United       1.026959\n",
              "5            Crystal Palace       1.240823\n",
              "6                  Brighton       0.957616\n",
              "7                  West Ham       0.825184\n",
              "8   Wolverhampton Wanderers       0.718738\n",
              "9                   Arsenal       0.887718\n",
              "10                Tottenham       1.231513\n",
              "11                  Chelsea       1.178429\n",
              "12              Bournemouth       0.943720\n",
              "13         Sheffield United       0.838108\n",
              "14                Brentford       0.973041\n",
              "15        Nottingham Forest       0.759177\n",
              "16                Liverpool       1.042384\n",
              "17         Newcastle United       1.174816\n",
              "18              Aston Villa       1.281262\n",
              "19          Manchester City       1.112282"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-ad19bfc1-a839-495e-878b-f6375a9a3576\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>team</th>\n",
              "      <th>gw8adjustment</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>Luton Town</td>\n",
              "      <td>0.768487</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Burnley</td>\n",
              "      <td>0.821571</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>Everton</td>\n",
              "      <td>1.056280</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>Fulham</td>\n",
              "      <td>1.161892</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>Manchester United</td>\n",
              "      <td>1.026959</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>Crystal Palace</td>\n",
              "      <td>1.240823</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>Brighton</td>\n",
              "      <td>0.957616</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>West Ham</td>\n",
              "      <td>0.825184</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>0.718738</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>Arsenal</td>\n",
              "      <td>0.887718</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10</th>\n",
              "      <td>Tottenham</td>\n",
              "      <td>1.231513</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>11</th>\n",
              "      <td>Chelsea</td>\n",
              "      <td>1.178429</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>12</th>\n",
              "      <td>Bournemouth</td>\n",
              "      <td>0.943720</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>13</th>\n",
              "      <td>Sheffield United</td>\n",
              "      <td>0.838108</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>14</th>\n",
              "      <td>Brentford</td>\n",
              "      <td>0.973041</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>15</th>\n",
              "      <td>Nottingham Forest</td>\n",
              "      <td>0.759177</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>16</th>\n",
              "      <td>Liverpool</td>\n",
              "      <td>1.042384</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>17</th>\n",
              "      <td>Newcastle United</td>\n",
              "      <td>1.174816</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>18</th>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>1.281262</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>19</th>\n",
              "      <td>Manchester City</td>\n",
              "      <td>1.112282</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-ad19bfc1-a839-495e-878b-f6375a9a3576')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-ad19bfc1-a839-495e-878b-f6375a9a3576 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-ad19bfc1-a839-495e-878b-f6375a9a3576');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-f543fd2f-20ca-4a1e-8c3b-9451c367285d\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-f543fd2f-20ca-4a1e-8c3b-9451c367285d')\"\n",
              "            title=\"Suggest charts.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-f543fd2f-20ca-4a1e-8c3b-9451c367285d button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 38
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "gwadjustments610 = pd.merge(gw6adjustments,gw7adjustments, on ='team')\n",
        "gwadjustments610 = pd.merge(gwadjustments610,gw10adjustments, on ='team')\n",
        "gwadjustments610 = pd.merge(gwadjustments610,gw8adjustments, on ='team')\n",
        "gwadjustments610 = pd.merge(gwadjustments610,gw9adjustments, on ='team')\n",
        "gwadjustments610"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 739
        },
        "id": "P6_WVsnNkztJ",
        "outputId": "1a0ec384-26d1-4ccb-9177-51d5e305d466"
      },
      "execution_count": 39,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                       team  gw6adjustment  gw7adjustment  gw10adjustment  \\\n",
              "0            Crystal Palace       1.072817       0.921903        1.018343   \n",
              "1                Luton Town       0.950251       0.896333        0.668990   \n",
              "2                Luton Town       0.950251       0.886745        0.668990   \n",
              "3           Manchester City       1.498461       1.457745        1.179540   \n",
              "4                 Brentford       1.187739       1.291962        1.018899   \n",
              "5                   Burnley       0.775713       0.711512        1.046692   \n",
              "6                   Burnley       0.775713       1.103667        1.046692   \n",
              "7                   Arsenal       1.163699       1.338236        1.380064   \n",
              "8                  Brighton       1.295992       1.021956        1.175927   \n",
              "9                   Chelsea       0.951085       1.105056        0.981101   \n",
              "10                Liverpool       1.178012       1.163838        1.386318   \n",
              "11         Sheffield United       0.622993       0.797809        0.619936   \n",
              "12                   Fulham       0.927183       0.894944        0.824073   \n",
              "13  Wolverhampton Wanderers       1.049749       0.542255        0.657595   \n",
              "14        Nottingham Forest       0.501539       0.708038        0.613682   \n",
              "15                  Everton       0.812261       1.113255        0.895917   \n",
              "16        Manchester United       1.224287       1.078097        0.820460   \n",
              "17                Tottenham       0.836301       0.836162        0.981657   \n",
              "18              Bournemouth       0.704008       0.661764        0.953308   \n",
              "19              Aston Villa       1.048915       0.978044        1.331010   \n",
              "20                 West Ham       0.821988       1.202191        1.104083   \n",
              "21         Newcastle United       1.377007       1.288488        1.342405   \n",
              "\n",
              "    gw8adjustment  gw9adjustment  \n",
              "0        1.240823       0.857702  \n",
              "1        0.768487       0.990967  \n",
              "2        0.768487       0.990967  \n",
              "3        1.112282       1.154527  \n",
              "4        0.973041       1.197328  \n",
              "5        0.821571       0.802672  \n",
              "6        0.821571       0.802672  \n",
              "7        0.887718       1.113116  \n",
              "8        0.957616       0.845473  \n",
              "9        1.178429       0.886884  \n",
              "10       1.042384       1.282095  \n",
              "11       0.838108       0.687194  \n",
              "12       1.161892       0.945526  \n",
              "13       0.718738       0.992774  \n",
              "14       0.759177       1.009033  \n",
              "15       1.056280       0.717905  \n",
              "16       1.026959       1.312806  \n",
              "17       1.231513       1.054474  \n",
              "18       0.943720       1.007226  \n",
              "19       1.281262       1.113672  \n",
              "20       0.825184       0.886328  \n",
              "21       1.174816       1.142298  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-9d4a22de-187e-462a-81e6-1bba7858bb18\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>team</th>\n",
              "      <th>gw6adjustment</th>\n",
              "      <th>gw7adjustment</th>\n",
              "      <th>gw10adjustment</th>\n",
              "      <th>gw8adjustment</th>\n",
              "      <th>gw9adjustment</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>Crystal Palace</td>\n",
              "      <td>1.072817</td>\n",
              "      <td>0.921903</td>\n",
              "      <td>1.018343</td>\n",
              "      <td>1.240823</td>\n",
              "      <td>0.857702</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Luton Town</td>\n",
              "      <td>0.950251</td>\n",
              "      <td>0.896333</td>\n",
              "      <td>0.668990</td>\n",
              "      <td>0.768487</td>\n",
              "      <td>0.990967</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>Luton Town</td>\n",
              "      <td>0.950251</td>\n",
              "      <td>0.886745</td>\n",
              "      <td>0.668990</td>\n",
              "      <td>0.768487</td>\n",
              "      <td>0.990967</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>Manchester City</td>\n",
              "      <td>1.498461</td>\n",
              "      <td>1.457745</td>\n",
              "      <td>1.179540</td>\n",
              "      <td>1.112282</td>\n",
              "      <td>1.154527</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>Brentford</td>\n",
              "      <td>1.187739</td>\n",
              "      <td>1.291962</td>\n",
              "      <td>1.018899</td>\n",
              "      <td>0.973041</td>\n",
              "      <td>1.197328</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>Burnley</td>\n",
              "      <td>0.775713</td>\n",
              "      <td>0.711512</td>\n",
              "      <td>1.046692</td>\n",
              "      <td>0.821571</td>\n",
              "      <td>0.802672</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>Burnley</td>\n",
              "      <td>0.775713</td>\n",
              "      <td>1.103667</td>\n",
              "      <td>1.046692</td>\n",
              "      <td>0.821571</td>\n",
              "      <td>0.802672</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>Arsenal</td>\n",
              "      <td>1.163699</td>\n",
              "      <td>1.338236</td>\n",
              "      <td>1.380064</td>\n",
              "      <td>0.887718</td>\n",
              "      <td>1.113116</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>Brighton</td>\n",
              "      <td>1.295992</td>\n",
              "      <td>1.021956</td>\n",
              "      <td>1.175927</td>\n",
              "      <td>0.957616</td>\n",
              "      <td>0.845473</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>Chelsea</td>\n",
              "      <td>0.951085</td>\n",
              "      <td>1.105056</td>\n",
              "      <td>0.981101</td>\n",
              "      <td>1.178429</td>\n",
              "      <td>0.886884</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10</th>\n",
              "      <td>Liverpool</td>\n",
              "      <td>1.178012</td>\n",
              "      <td>1.163838</td>\n",
              "      <td>1.386318</td>\n",
              "      <td>1.042384</td>\n",
              "      <td>1.282095</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>11</th>\n",
              "      <td>Sheffield United</td>\n",
              "      <td>0.622993</td>\n",
              "      <td>0.797809</td>\n",
              "      <td>0.619936</td>\n",
              "      <td>0.838108</td>\n",
              "      <td>0.687194</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>12</th>\n",
              "      <td>Fulham</td>\n",
              "      <td>0.927183</td>\n",
              "      <td>0.894944</td>\n",
              "      <td>0.824073</td>\n",
              "      <td>1.161892</td>\n",
              "      <td>0.945526</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>13</th>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>1.049749</td>\n",
              "      <td>0.542255</td>\n",
              "      <td>0.657595</td>\n",
              "      <td>0.718738</td>\n",
              "      <td>0.992774</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>14</th>\n",
              "      <td>Nottingham Forest</td>\n",
              "      <td>0.501539</td>\n",
              "      <td>0.708038</td>\n",
              "      <td>0.613682</td>\n",
              "      <td>0.759177</td>\n",
              "      <td>1.009033</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>15</th>\n",
              "      <td>Everton</td>\n",
              "      <td>0.812261</td>\n",
              "      <td>1.113255</td>\n",
              "      <td>0.895917</td>\n",
              "      <td>1.056280</td>\n",
              "      <td>0.717905</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>16</th>\n",
              "      <td>Manchester United</td>\n",
              "      <td>1.224287</td>\n",
              "      <td>1.078097</td>\n",
              "      <td>0.820460</td>\n",
              "      <td>1.026959</td>\n",
              "      <td>1.312806</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>17</th>\n",
              "      <td>Tottenham</td>\n",
              "      <td>0.836301</td>\n",
              "      <td>0.836162</td>\n",
              "      <td>0.981657</td>\n",
              "      <td>1.231513</td>\n",
              "      <td>1.054474</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>18</th>\n",
              "      <td>Bournemouth</td>\n",
              "      <td>0.704008</td>\n",
              "      <td>0.661764</td>\n",
              "      <td>0.953308</td>\n",
              "      <td>0.943720</td>\n",
              "      <td>1.007226</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>19</th>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>1.048915</td>\n",
              "      <td>0.978044</td>\n",
              "      <td>1.331010</td>\n",
              "      <td>1.281262</td>\n",
              "      <td>1.113672</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>20</th>\n",
              "      <td>West Ham</td>\n",
              "      <td>0.821988</td>\n",
              "      <td>1.202191</td>\n",
              "      <td>1.104083</td>\n",
              "      <td>0.825184</td>\n",
              "      <td>0.886328</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>21</th>\n",
              "      <td>Newcastle United</td>\n",
              "      <td>1.377007</td>\n",
              "      <td>1.288488</td>\n",
              "      <td>1.342405</td>\n",
              "      <td>1.174816</td>\n",
              "      <td>1.142298</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-9d4a22de-187e-462a-81e6-1bba7858bb18')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-9d4a22de-187e-462a-81e6-1bba7858bb18 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-9d4a22de-187e-462a-81e6-1bba7858bb18');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-6c9e59dc-42a9-4e12-aa6e-e4985a3a3ab4\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-6c9e59dc-42a9-4e12-aa6e-e4985a3a3ab4')\"\n",
              "            title=\"Suggest charts.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-6c9e59dc-42a9-4e12-aa6e-e4985a3a3ab4 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 39
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "rawdfgw228x = pd.merge(rawallplayersallgw,\n",
        "                     gwadjustments610,\n",
        "                     on ='team',\n",
        "                     how ='left')\n",
        "#rawdfgw228x.rename(columns = {'gw3adjustment_y':'gw3adjustment'}, inplace = True)\n",
        "rawdfgw228x = rawdfgw228x.round(1)\n",
        "rawdfgw228x"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 513
        },
        "id": "-b-0jux2PKIX",
        "outputId": "943ba8ac-b7d9-4965-aa03-625e16d8a52c"
      },
      "execution_count": 40,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "      id                     team pos     name  cost  selected_by_percent  \\\n",
              "0      1                  Arsenal   F  Balogun   4.4                  0.3   \n",
              "1      8                  Arsenal   F  G.Jesus   7.9                  3.1   \n",
              "2     13                  Arsenal   F  Nketiah   5.6                  6.1   \n",
              "3     39              Aston Villa   F    Davis   4.9                  0.2   \n",
              "4     44              Aston Villa   F    Duran   5.0                  0.2   \n",
              "..   ...                      ...  ..      ...   ...                  ...   \n",
              "794  647                 West Ham   G    Anang   4.0                  0.0   \n",
              "795  546  Wolverhampton Wanderers   G  Bentley   4.0                  0.4   \n",
              "796  564  Wolverhampton Wanderers   G     King   4.0                  0.8   \n",
              "797  569  Wolverhampton Wanderers   G  José Sá   5.0                  1.6   \n",
              "798  571  Wolverhampton Wanderers   G   Šarkić   4.0                  0.4   \n",
              "\n",
              "     goals_scored  assists  bps  ict_index  ...  points_per_game  minutes  \\\n",
              "0               0        0    0        0.0  ...              0.0        0   \n",
              "1               1        0   25       11.0  ...              2.7       39   \n",
              "2               2        1   67       25.0  ...              4.4      335   \n",
              "3               0        0    0        0.0  ...              0.0        0   \n",
              "4               2        0   56       13.6  ...              3.5       56   \n",
              "..            ...      ...  ...        ...  ...              ...      ...   \n",
              "794             0        0    0        0.0  ...              0.0        0   \n",
              "795             0        0    0        0.0  ...              0.0        0   \n",
              "796             0        0    0        0.0  ...              0.0        0   \n",
              "797             0        0  109       18.5  ...              3.8      450   \n",
              "798             0        0    0        0.0  ...              0.0        0   \n",
              "\n",
              "     home_adjustment  xPallgw  xCSP  gw6adjustment  gw7adjustment  \\\n",
              "0                1.2      2.0   NaN            1.2            1.3   \n",
              "1                1.2      2.7   NaN            1.2            1.3   \n",
              "2                1.2      3.4   NaN            1.2            1.3   \n",
              "3                1.1      2.0   NaN            1.0            1.0   \n",
              "4                1.1      2.6   NaN            1.0            1.0   \n",
              "..               ...      ...   ...            ...            ...   \n",
              "794              1.0     -2.2  -4.2            0.8            1.2   \n",
              "795              0.8     -2.2  -4.2            1.0            0.5   \n",
              "796              0.8     -2.2  -4.2            1.0            0.5   \n",
              "797              0.8     -2.2  -4.2            1.0            0.5   \n",
              "798              0.8     -2.2  -4.2            1.0            0.5   \n",
              "\n",
              "     gw10adjustment  gw8adjustment  gw9adjustment  \n",
              "0               1.4            0.9            1.1  \n",
              "1               1.4            0.9            1.1  \n",
              "2               1.4            0.9            1.1  \n",
              "3               1.3            1.3            1.1  \n",
              "4               1.3            1.3            1.1  \n",
              "..              ...            ...            ...  \n",
              "794             1.1            0.8            0.9  \n",
              "795             0.7            0.7            1.0  \n",
              "796             0.7            0.7            1.0  \n",
              "797             0.7            0.7            1.0  \n",
              "798             0.7            0.7            1.0  \n",
              "\n",
              "[799 rows x 21 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-2b2c8104-aa2f-44f6-b76d-2f3777fe5691\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>team</th>\n",
              "      <th>pos</th>\n",
              "      <th>name</th>\n",
              "      <th>cost</th>\n",
              "      <th>selected_by_percent</th>\n",
              "      <th>goals_scored</th>\n",
              "      <th>assists</th>\n",
              "      <th>bps</th>\n",
              "      <th>ict_index</th>\n",
              "      <th>...</th>\n",
              "      <th>points_per_game</th>\n",
              "      <th>minutes</th>\n",
              "      <th>home_adjustment</th>\n",
              "      <th>xPallgw</th>\n",
              "      <th>xCSP</th>\n",
              "      <th>gw6adjustment</th>\n",
              "      <th>gw7adjustment</th>\n",
              "      <th>gw10adjustment</th>\n",
              "      <th>gw8adjustment</th>\n",
              "      <th>gw9adjustment</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>1</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>F</td>\n",
              "      <td>Balogun</td>\n",
              "      <td>4.4</td>\n",
              "      <td>0.3</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>1.2</td>\n",
              "      <td>2.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1.2</td>\n",
              "      <td>1.3</td>\n",
              "      <td>1.4</td>\n",
              "      <td>0.9</td>\n",
              "      <td>1.1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>8</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>F</td>\n",
              "      <td>G.Jesus</td>\n",
              "      <td>7.9</td>\n",
              "      <td>3.1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>25</td>\n",
              "      <td>11.0</td>\n",
              "      <td>...</td>\n",
              "      <td>2.7</td>\n",
              "      <td>39</td>\n",
              "      <td>1.2</td>\n",
              "      <td>2.7</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1.2</td>\n",
              "      <td>1.3</td>\n",
              "      <td>1.4</td>\n",
              "      <td>0.9</td>\n",
              "      <td>1.1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>13</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>F</td>\n",
              "      <td>Nketiah</td>\n",
              "      <td>5.6</td>\n",
              "      <td>6.1</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>67</td>\n",
              "      <td>25.0</td>\n",
              "      <td>...</td>\n",
              "      <td>4.4</td>\n",
              "      <td>335</td>\n",
              "      <td>1.2</td>\n",
              "      <td>3.4</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1.2</td>\n",
              "      <td>1.3</td>\n",
              "      <td>1.4</td>\n",
              "      <td>0.9</td>\n",
              "      <td>1.1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>39</td>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>F</td>\n",
              "      <td>Davis</td>\n",
              "      <td>4.9</td>\n",
              "      <td>0.2</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>1.1</td>\n",
              "      <td>2.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>1.3</td>\n",
              "      <td>1.3</td>\n",
              "      <td>1.1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>44</td>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>F</td>\n",
              "      <td>Duran</td>\n",
              "      <td>5.0</td>\n",
              "      <td>0.2</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>56</td>\n",
              "      <td>13.6</td>\n",
              "      <td>...</td>\n",
              "      <td>3.5</td>\n",
              "      <td>56</td>\n",
              "      <td>1.1</td>\n",
              "      <td>2.6</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>1.3</td>\n",
              "      <td>1.3</td>\n",
              "      <td>1.1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>794</th>\n",
              "      <td>647</td>\n",
              "      <td>West Ham</td>\n",
              "      <td>G</td>\n",
              "      <td>Anang</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>-2.2</td>\n",
              "      <td>-4.2</td>\n",
              "      <td>0.8</td>\n",
              "      <td>1.2</td>\n",
              "      <td>1.1</td>\n",
              "      <td>0.8</td>\n",
              "      <td>0.9</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>795</th>\n",
              "      <td>546</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>G</td>\n",
              "      <td>Bentley</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.4</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.8</td>\n",
              "      <td>-2.2</td>\n",
              "      <td>-4.2</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.5</td>\n",
              "      <td>0.7</td>\n",
              "      <td>0.7</td>\n",
              "      <td>1.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>796</th>\n",
              "      <td>564</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>G</td>\n",
              "      <td>King</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.8</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.8</td>\n",
              "      <td>-2.2</td>\n",
              "      <td>-4.2</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.5</td>\n",
              "      <td>0.7</td>\n",
              "      <td>0.7</td>\n",
              "      <td>1.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>797</th>\n",
              "      <td>569</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>G</td>\n",
              "      <td>José Sá</td>\n",
              "      <td>5.0</td>\n",
              "      <td>1.6</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>109</td>\n",
              "      <td>18.5</td>\n",
              "      <td>...</td>\n",
              "      <td>3.8</td>\n",
              "      <td>450</td>\n",
              "      <td>0.8</td>\n",
              "      <td>-2.2</td>\n",
              "      <td>-4.2</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.5</td>\n",
              "      <td>0.7</td>\n",
              "      <td>0.7</td>\n",
              "      <td>1.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>798</th>\n",
              "      <td>571</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>G</td>\n",
              "      <td>Šarkić</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.4</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.8</td>\n",
              "      <td>-2.2</td>\n",
              "      <td>-4.2</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.5</td>\n",
              "      <td>0.7</td>\n",
              "      <td>0.7</td>\n",
              "      <td>1.0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>799 rows × 21 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-2b2c8104-aa2f-44f6-b76d-2f3777fe5691')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-2b2c8104-aa2f-44f6-b76d-2f3777fe5691 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-2b2c8104-aa2f-44f6-b76d-2f3777fe5691');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-a0a196f1-a786-4ccb-b29c-b46e1e1b12a2\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-a0a196f1-a786-4ccb-b29c-b46e1e1b12a2')\"\n",
              "            title=\"Suggest charts.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-a0a196f1-a786-4ccb-b29c-b46e1e1b12a2 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 40
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "gw3adjustments = gw3adjustments.groupby('team', as_index=False)['gw3adjustment'].aggregate('sum')\n",
        "gw3adjustments"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 676
        },
        "id": "6x3Lj7jPTCVC",
        "outputId": "39a59547-3ac4-41c9-aead-2daa37a9c843"
      },
      "execution_count": 41,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                       team  gw3adjustment\n",
              "0                   Arsenal       1.218172\n",
              "1               Aston Villa       1.227344\n",
              "2               Bournemouth       0.825462\n",
              "3                 Brentford       1.051138\n",
              "4                  Brighton       1.135628\n",
              "5                   Burnley       0.772656\n",
              "6                   Chelsea       1.282095\n",
              "7            Crystal Palace       0.948862\n",
              "8                   Everton       1.063506\n",
              "9                    Fulham       0.781828\n",
              "10                Liverpool       1.003196\n",
              "11               Luton Town       0.717905\n",
              "12          Manchester City       1.492347\n",
              "13        Manchester United       1.318921\n",
              "14         Newcastle United       0.996804\n",
              "15        Nottingham Forest       0.681079\n",
              "16         Sheffield United       0.507653\n",
              "17                Tottenham       1.174538\n",
              "18                 West Ham       0.864372\n",
              "19  Wolverhampton Wanderers       0.936494"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-ff949a5f-828e-4446-9f71-fec850f48fd3\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>team</th>\n",
              "      <th>gw3adjustment</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>Arsenal</td>\n",
              "      <td>1.218172</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>1.227344</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>Bournemouth</td>\n",
              "      <td>0.825462</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>Brentford</td>\n",
              "      <td>1.051138</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>Brighton</td>\n",
              "      <td>1.135628</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>Burnley</td>\n",
              "      <td>0.772656</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>Chelsea</td>\n",
              "      <td>1.282095</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>Crystal Palace</td>\n",
              "      <td>0.948862</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>Everton</td>\n",
              "      <td>1.063506</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>Fulham</td>\n",
              "      <td>0.781828</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10</th>\n",
              "      <td>Liverpool</td>\n",
              "      <td>1.003196</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>11</th>\n",
              "      <td>Luton Town</td>\n",
              "      <td>0.717905</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>12</th>\n",
              "      <td>Manchester City</td>\n",
              "      <td>1.492347</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>13</th>\n",
              "      <td>Manchester United</td>\n",
              "      <td>1.318921</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>14</th>\n",
              "      <td>Newcastle United</td>\n",
              "      <td>0.996804</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>15</th>\n",
              "      <td>Nottingham Forest</td>\n",
              "      <td>0.681079</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>16</th>\n",
              "      <td>Sheffield United</td>\n",
              "      <td>0.507653</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>17</th>\n",
              "      <td>Tottenham</td>\n",
              "      <td>1.174538</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>18</th>\n",
              "      <td>West Ham</td>\n",
              "      <td>0.864372</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>19</th>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>0.936494</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-ff949a5f-828e-4446-9f71-fec850f48fd3')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-ff949a5f-828e-4446-9f71-fec850f48fd3 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-ff949a5f-828e-4446-9f71-fec850f48fd3');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-681de020-bd44-4251-8af7-7d1fdaa9bbf0\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-681de020-bd44-4251-8af7-7d1fdaa9bbf0')\"\n",
              "            title=\"Suggest charts.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-681de020-bd44-4251-8af7-7d1fdaa9bbf0 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 41
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "rawdfgw228x['gw7'] = (((rawdfgw228x.xPallgw - 2)*rawdfgw228x.gw7adjustment)+2)\n",
        "rawdfgw228x['gw9'] = (((rawdfgw228x.xPallgw - 2)*rawdfgw228x.gw9adjustment)+2)\n",
        "rawdfgw228x['gw8'] = (((rawdfgw228x.xPallgw - 2)*rawdfgw228x.gw8adjustment)+2)\n",
        "rawdfgw228x['gw10'] = (((rawdfgw228x.xPallgw - 2)*rawdfgw228x.gw10adjustment)+2)\n",
        "rawdfgw228x['gw6'] = (((rawdfgw228x.xPallgw - 2)*rawdfgw228x.gw6adjustment)+2)\n",
        "rawdfgw228x['5GW Total'] = rawdfgw228x.gw7 + rawdfgw228x.gw10 + rawdfgw228x.gw6 + rawdfgw228x.gw9 + rawdfgw228x.gw8\n",
        "rawdfgw228x = rawdfgw228x.drop(columns=[\n",
        "  'gw10adjustment',\n",
        "  'gw6adjustment',\n",
        "  'gw7adjustment',\n",
        "  'gw9adjustment',\n",
        "  'gw8adjustment'\n",
        "  ])\n",
        "rawdfgw228x"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 530
        },
        "id": "Dgw1xB0YUN9D",
        "outputId": "9c682693-55fe-4da1-96fe-afebdf687cca"
      },
      "execution_count": 42,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "      id                     team pos     name  cost  selected_by_percent  \\\n",
              "0      1                  Arsenal   F  Balogun   4.4                  0.3   \n",
              "1      8                  Arsenal   F  G.Jesus   7.9                  3.1   \n",
              "2     13                  Arsenal   F  Nketiah   5.6                  6.1   \n",
              "3     39              Aston Villa   F    Davis   4.9                  0.2   \n",
              "4     44              Aston Villa   F    Duran   5.0                  0.2   \n",
              "..   ...                      ...  ..      ...   ...                  ...   \n",
              "794  647                 West Ham   G    Anang   4.0                  0.0   \n",
              "795  546  Wolverhampton Wanderers   G  Bentley   4.0                  0.4   \n",
              "796  564  Wolverhampton Wanderers   G     King   4.0                  0.8   \n",
              "797  569  Wolverhampton Wanderers   G  José Sá   5.0                  1.6   \n",
              "798  571  Wolverhampton Wanderers   G   Šarkić   4.0                  0.4   \n",
              "\n",
              "     goals_scored  assists  bps  ict_index  ...  minutes  home_adjustment  \\\n",
              "0               0        0    0        0.0  ...        0              1.2   \n",
              "1               1        0   25       11.0  ...       39              1.2   \n",
              "2               2        1   67       25.0  ...      335              1.2   \n",
              "3               0        0    0        0.0  ...        0              1.1   \n",
              "4               2        0   56       13.6  ...       56              1.1   \n",
              "..            ...      ...  ...        ...  ...      ...              ...   \n",
              "794             0        0    0        0.0  ...        0              1.0   \n",
              "795             0        0    0        0.0  ...        0              0.8   \n",
              "796             0        0    0        0.0  ...        0              0.8   \n",
              "797             0        0  109       18.5  ...      450              0.8   \n",
              "798             0        0    0        0.0  ...        0              0.8   \n",
              "\n",
              "     xPallgw  xCSP   gw7   gw9   gw8  gw10   gw6  5GW Total  \n",
              "0        2.0   NaN  2.00  2.00  2.00  2.00  2.00      10.00  \n",
              "1        2.7   NaN  2.91  2.77  2.63  2.98  2.84      14.13  \n",
              "2        3.4   NaN  3.82  3.54  3.26  3.96  3.68      18.26  \n",
              "3        2.0   NaN  2.00  2.00  2.00  2.00  2.00      10.00  \n",
              "4        2.6   NaN  2.60  2.66  2.78  2.78  2.60      13.42  \n",
              "..       ...   ...   ...   ...   ...   ...   ...        ...  \n",
              "794     -2.2  -4.2 -3.04 -1.78 -1.36 -2.62 -1.36     -10.16  \n",
              "795     -2.2  -4.2 -0.10 -2.20 -0.94 -0.94 -2.20      -6.38  \n",
              "796     -2.2  -4.2 -0.10 -2.20 -0.94 -0.94 -2.20      -6.38  \n",
              "797     -2.2  -4.2 -0.10 -2.20 -0.94 -0.94 -2.20      -6.38  \n",
              "798     -2.2  -4.2 -0.10 -2.20 -0.94 -0.94 -2.20      -6.38  \n",
              "\n",
              "[799 rows x 22 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-f279aec3-6faa-4083-9679-2af4b3d7c6ea\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>team</th>\n",
              "      <th>pos</th>\n",
              "      <th>name</th>\n",
              "      <th>cost</th>\n",
              "      <th>selected_by_percent</th>\n",
              "      <th>goals_scored</th>\n",
              "      <th>assists</th>\n",
              "      <th>bps</th>\n",
              "      <th>ict_index</th>\n",
              "      <th>...</th>\n",
              "      <th>minutes</th>\n",
              "      <th>home_adjustment</th>\n",
              "      <th>xPallgw</th>\n",
              "      <th>xCSP</th>\n",
              "      <th>gw7</th>\n",
              "      <th>gw9</th>\n",
              "      <th>gw8</th>\n",
              "      <th>gw10</th>\n",
              "      <th>gw6</th>\n",
              "      <th>5GW Total</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>1</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>F</td>\n",
              "      <td>Balogun</td>\n",
              "      <td>4.4</td>\n",
              "      <td>0.3</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>1.2</td>\n",
              "      <td>2.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>10.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>8</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>F</td>\n",
              "      <td>G.Jesus</td>\n",
              "      <td>7.9</td>\n",
              "      <td>3.1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>25</td>\n",
              "      <td>11.0</td>\n",
              "      <td>...</td>\n",
              "      <td>39</td>\n",
              "      <td>1.2</td>\n",
              "      <td>2.7</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2.91</td>\n",
              "      <td>2.77</td>\n",
              "      <td>2.63</td>\n",
              "      <td>2.98</td>\n",
              "      <td>2.84</td>\n",
              "      <td>14.13</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>13</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>F</td>\n",
              "      <td>Nketiah</td>\n",
              "      <td>5.6</td>\n",
              "      <td>6.1</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>67</td>\n",
              "      <td>25.0</td>\n",
              "      <td>...</td>\n",
              "      <td>335</td>\n",
              "      <td>1.2</td>\n",
              "      <td>3.4</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.82</td>\n",
              "      <td>3.54</td>\n",
              "      <td>3.26</td>\n",
              "      <td>3.96</td>\n",
              "      <td>3.68</td>\n",
              "      <td>18.26</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>39</td>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>F</td>\n",
              "      <td>Davis</td>\n",
              "      <td>4.9</td>\n",
              "      <td>0.2</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>1.1</td>\n",
              "      <td>2.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>10.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>44</td>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>F</td>\n",
              "      <td>Duran</td>\n",
              "      <td>5.0</td>\n",
              "      <td>0.2</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>56</td>\n",
              "      <td>13.6</td>\n",
              "      <td>...</td>\n",
              "      <td>56</td>\n",
              "      <td>1.1</td>\n",
              "      <td>2.6</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2.60</td>\n",
              "      <td>2.66</td>\n",
              "      <td>2.78</td>\n",
              "      <td>2.78</td>\n",
              "      <td>2.60</td>\n",
              "      <td>13.42</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>794</th>\n",
              "      <td>647</td>\n",
              "      <td>West Ham</td>\n",
              "      <td>G</td>\n",
              "      <td>Anang</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>-2.2</td>\n",
              "      <td>-4.2</td>\n",
              "      <td>-3.04</td>\n",
              "      <td>-1.78</td>\n",
              "      <td>-1.36</td>\n",
              "      <td>-2.62</td>\n",
              "      <td>-1.36</td>\n",
              "      <td>-10.16</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>795</th>\n",
              "      <td>546</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>G</td>\n",
              "      <td>Bentley</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.4</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0.8</td>\n",
              "      <td>-2.2</td>\n",
              "      <td>-4.2</td>\n",
              "      <td>-0.10</td>\n",
              "      <td>-2.20</td>\n",
              "      <td>-0.94</td>\n",
              "      <td>-0.94</td>\n",
              "      <td>-2.20</td>\n",
              "      <td>-6.38</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>796</th>\n",
              "      <td>564</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>G</td>\n",
              "      <td>King</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.8</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0.8</td>\n",
              "      <td>-2.2</td>\n",
              "      <td>-4.2</td>\n",
              "      <td>-0.10</td>\n",
              "      <td>-2.20</td>\n",
              "      <td>-0.94</td>\n",
              "      <td>-0.94</td>\n",
              "      <td>-2.20</td>\n",
              "      <td>-6.38</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>797</th>\n",
              "      <td>569</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>G</td>\n",
              "      <td>José Sá</td>\n",
              "      <td>5.0</td>\n",
              "      <td>1.6</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>109</td>\n",
              "      <td>18.5</td>\n",
              "      <td>...</td>\n",
              "      <td>450</td>\n",
              "      <td>0.8</td>\n",
              "      <td>-2.2</td>\n",
              "      <td>-4.2</td>\n",
              "      <td>-0.10</td>\n",
              "      <td>-2.20</td>\n",
              "      <td>-0.94</td>\n",
              "      <td>-0.94</td>\n",
              "      <td>-2.20</td>\n",
              "      <td>-6.38</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>798</th>\n",
              "      <td>571</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>G</td>\n",
              "      <td>Šarkić</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.4</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0.8</td>\n",
              "      <td>-2.2</td>\n",
              "      <td>-4.2</td>\n",
              "      <td>-0.10</td>\n",
              "      <td>-2.20</td>\n",
              "      <td>-0.94</td>\n",
              "      <td>-0.94</td>\n",
              "      <td>-2.20</td>\n",
              "      <td>-6.38</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>799 rows × 22 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-f279aec3-6faa-4083-9679-2af4b3d7c6ea')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-f279aec3-6faa-4083-9679-2af4b3d7c6ea button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-f279aec3-6faa-4083-9679-2af4b3d7c6ea');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-552fee0e-3127-4d31-8bd0-d9681ebac63a\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-552fee0e-3127-4d31-8bd0-d9681ebac63a')\"\n",
              "            title=\"Suggest charts.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-552fee0e-3127-4d31-8bd0-d9681ebac63a button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 42
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "rawdfgw228x.drop_duplicates(subset='name', keep='last', inplace=True)\n",
        "rawdfgw228x"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 530
        },
        "id": "Jud88GRHgLWf",
        "outputId": "22dddfdc-e20d-4e71-9712-75e16dc84625"
      },
      "execution_count": 43,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "      id                     team pos     name  cost  selected_by_percent  \\\n",
              "0      1                  Arsenal   F  Balogun   4.4                  0.3   \n",
              "1      8                  Arsenal   F  G.Jesus   7.9                  3.1   \n",
              "2     13                  Arsenal   F  Nketiah   5.6                  6.1   \n",
              "3     39              Aston Villa   F    Davis   4.9                  0.2   \n",
              "4     44              Aston Villa   F    Duran   5.0                  0.2   \n",
              "..   ...                      ...  ..      ...   ...                  ...   \n",
              "794  647                 West Ham   G    Anang   4.0                  0.0   \n",
              "795  546  Wolverhampton Wanderers   G  Bentley   4.0                  0.4   \n",
              "796  564  Wolverhampton Wanderers   G     King   4.0                  0.8   \n",
              "797  569  Wolverhampton Wanderers   G  José Sá   5.0                  1.6   \n",
              "798  571  Wolverhampton Wanderers   G   Šarkić   4.0                  0.4   \n",
              "\n",
              "     goals_scored  assists  bps  ict_index  ...  minutes  home_adjustment  \\\n",
              "0               0        0    0        0.0  ...        0              1.2   \n",
              "1               1        0   25       11.0  ...       39              1.2   \n",
              "2               2        1   67       25.0  ...      335              1.2   \n",
              "3               0        0    0        0.0  ...        0              1.1   \n",
              "4               2        0   56       13.6  ...       56              1.1   \n",
              "..            ...      ...  ...        ...  ...      ...              ...   \n",
              "794             0        0    0        0.0  ...        0              1.0   \n",
              "795             0        0    0        0.0  ...        0              0.8   \n",
              "796             0        0    0        0.0  ...        0              0.8   \n",
              "797             0        0  109       18.5  ...      450              0.8   \n",
              "798             0        0    0        0.0  ...        0              0.8   \n",
              "\n",
              "     xPallgw  xCSP   gw7   gw9   gw8  gw10   gw6  5GW Total  \n",
              "0        2.0   NaN  2.00  2.00  2.00  2.00  2.00      10.00  \n",
              "1        2.7   NaN  2.91  2.77  2.63  2.98  2.84      14.13  \n",
              "2        3.4   NaN  3.82  3.54  3.26  3.96  3.68      18.26  \n",
              "3        2.0   NaN  2.00  2.00  2.00  2.00  2.00      10.00  \n",
              "4        2.6   NaN  2.60  2.66  2.78  2.78  2.60      13.42  \n",
              "..       ...   ...   ...   ...   ...   ...   ...        ...  \n",
              "794     -2.2  -4.2 -3.04 -1.78 -1.36 -2.62 -1.36     -10.16  \n",
              "795     -2.2  -4.2 -0.10 -2.20 -0.94 -0.94 -2.20      -6.38  \n",
              "796     -2.2  -4.2 -0.10 -2.20 -0.94 -0.94 -2.20      -6.38  \n",
              "797     -2.2  -4.2 -0.10 -2.20 -0.94 -0.94 -2.20      -6.38  \n",
              "798     -2.2  -4.2 -0.10 -2.20 -0.94 -0.94 -2.20      -6.38  \n",
              "\n",
              "[696 rows x 22 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-04750cdc-d339-4489-9691-85d47d3e49ff\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>team</th>\n",
              "      <th>pos</th>\n",
              "      <th>name</th>\n",
              "      <th>cost</th>\n",
              "      <th>selected_by_percent</th>\n",
              "      <th>goals_scored</th>\n",
              "      <th>assists</th>\n",
              "      <th>bps</th>\n",
              "      <th>ict_index</th>\n",
              "      <th>...</th>\n",
              "      <th>minutes</th>\n",
              "      <th>home_adjustment</th>\n",
              "      <th>xPallgw</th>\n",
              "      <th>xCSP</th>\n",
              "      <th>gw7</th>\n",
              "      <th>gw9</th>\n",
              "      <th>gw8</th>\n",
              "      <th>gw10</th>\n",
              "      <th>gw6</th>\n",
              "      <th>5GW Total</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>1</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>F</td>\n",
              "      <td>Balogun</td>\n",
              "      <td>4.4</td>\n",
              "      <td>0.3</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>1.2</td>\n",
              "      <td>2.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>10.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>8</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>F</td>\n",
              "      <td>G.Jesus</td>\n",
              "      <td>7.9</td>\n",
              "      <td>3.1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>25</td>\n",
              "      <td>11.0</td>\n",
              "      <td>...</td>\n",
              "      <td>39</td>\n",
              "      <td>1.2</td>\n",
              "      <td>2.7</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2.91</td>\n",
              "      <td>2.77</td>\n",
              "      <td>2.63</td>\n",
              "      <td>2.98</td>\n",
              "      <td>2.84</td>\n",
              "      <td>14.13</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>13</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>F</td>\n",
              "      <td>Nketiah</td>\n",
              "      <td>5.6</td>\n",
              "      <td>6.1</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>67</td>\n",
              "      <td>25.0</td>\n",
              "      <td>...</td>\n",
              "      <td>335</td>\n",
              "      <td>1.2</td>\n",
              "      <td>3.4</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.82</td>\n",
              "      <td>3.54</td>\n",
              "      <td>3.26</td>\n",
              "      <td>3.96</td>\n",
              "      <td>3.68</td>\n",
              "      <td>18.26</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>39</td>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>F</td>\n",
              "      <td>Davis</td>\n",
              "      <td>4.9</td>\n",
              "      <td>0.2</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>1.1</td>\n",
              "      <td>2.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>10.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>44</td>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>F</td>\n",
              "      <td>Duran</td>\n",
              "      <td>5.0</td>\n",
              "      <td>0.2</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>56</td>\n",
              "      <td>13.6</td>\n",
              "      <td>...</td>\n",
              "      <td>56</td>\n",
              "      <td>1.1</td>\n",
              "      <td>2.6</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2.60</td>\n",
              "      <td>2.66</td>\n",
              "      <td>2.78</td>\n",
              "      <td>2.78</td>\n",
              "      <td>2.60</td>\n",
              "      <td>13.42</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>794</th>\n",
              "      <td>647</td>\n",
              "      <td>West Ham</td>\n",
              "      <td>G</td>\n",
              "      <td>Anang</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>-2.2</td>\n",
              "      <td>-4.2</td>\n",
              "      <td>-3.04</td>\n",
              "      <td>-1.78</td>\n",
              "      <td>-1.36</td>\n",
              "      <td>-2.62</td>\n",
              "      <td>-1.36</td>\n",
              "      <td>-10.16</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>795</th>\n",
              "      <td>546</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>G</td>\n",
              "      <td>Bentley</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.4</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0.8</td>\n",
              "      <td>-2.2</td>\n",
              "      <td>-4.2</td>\n",
              "      <td>-0.10</td>\n",
              "      <td>-2.20</td>\n",
              "      <td>-0.94</td>\n",
              "      <td>-0.94</td>\n",
              "      <td>-2.20</td>\n",
              "      <td>-6.38</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>796</th>\n",
              "      <td>564</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>G</td>\n",
              "      <td>King</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.8</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0.8</td>\n",
              "      <td>-2.2</td>\n",
              "      <td>-4.2</td>\n",
              "      <td>-0.10</td>\n",
              "      <td>-2.20</td>\n",
              "      <td>-0.94</td>\n",
              "      <td>-0.94</td>\n",
              "      <td>-2.20</td>\n",
              "      <td>-6.38</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>797</th>\n",
              "      <td>569</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>G</td>\n",
              "      <td>José Sá</td>\n",
              "      <td>5.0</td>\n",
              "      <td>1.6</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>109</td>\n",
              "      <td>18.5</td>\n",
              "      <td>...</td>\n",
              "      <td>450</td>\n",
              "      <td>0.8</td>\n",
              "      <td>-2.2</td>\n",
              "      <td>-4.2</td>\n",
              "      <td>-0.10</td>\n",
              "      <td>-2.20</td>\n",
              "      <td>-0.94</td>\n",
              "      <td>-0.94</td>\n",
              "      <td>-2.20</td>\n",
              "      <td>-6.38</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>798</th>\n",
              "      <td>571</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>G</td>\n",
              "      <td>Šarkić</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.4</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0.8</td>\n",
              "      <td>-2.2</td>\n",
              "      <td>-4.2</td>\n",
              "      <td>-0.10</td>\n",
              "      <td>-2.20</td>\n",
              "      <td>-0.94</td>\n",
              "      <td>-0.94</td>\n",
              "      <td>-2.20</td>\n",
              "      <td>-6.38</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>696 rows × 22 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-04750cdc-d339-4489-9691-85d47d3e49ff')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-04750cdc-d339-4489-9691-85d47d3e49ff button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-04750cdc-d339-4489-9691-85d47d3e49ff');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-058172d3-6b9a-43a2-8747-ad1118a54002\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-058172d3-6b9a-43a2-8747-ad1118a54002')\"\n",
              "            title=\"Suggest charts.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-058172d3-6b9a-43a2-8747-ad1118a54002 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 43
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "from pandas import ExcelWriter\n",
        "writer = ExcelWriter('API model.xlsx')\n",
        "rawdfgw228x.to_excel(writer, sheet_name='Sheet1')\n",
        "gwadjustments610.to_excel(writer, sheet_name='Sheet2')\n",
        "#fplwithunderstat.to_excel(writer, sheet_name='Sheet3')\n",
        "\n",
        "# Close the Pandas Excel writer and output the Excel file.\n",
        "writer.save()"
      ],
      "metadata": {
        "id": "tdXsMsuwaWa4",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "2cd2f58e-1813-45cd-b3c6-8c90483af4c9"
      },
      "execution_count": 44,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "<ipython-input-44-e86acb7d06dd>:8: FutureWarning: save is not part of the public API, usage can give unexpected results and will be removed in a future version\n",
            "  writer.save()\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#from google.colab import drive\n",
        "#drive.mount('/content/drive')"
      ],
      "metadata": {
        "id": "GzSzE5_Ckuq3"
      },
      "execution_count": 45,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "import shutil"
      ],
      "metadata": {
        "id": "xSIwXnyAk2op"
      },
      "execution_count": 46,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "#shutil.copy(\"/content/API model.xlsx\",\"/content/drive/MyDrive/FPL\")"
      ],
      "metadata": {
        "id": "O724A90vk3b4"
      },
      "execution_count": 47,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "rawdfgw228x.nlargest(50, '5GW Total')"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "id": "4ULMO_eqJXIT",
        "outputId": "8f0e0ad4-b531-4c4a-c0c5-169220e2ac7e"
      },
      "execution_count": 48,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "      id               team pos             name  cost  selected_by_percent  \\\n",
              "74   355    Manchester City   F          Haaland  14.1                 92.3   \n",
              "163  108          Brentford   M           Mbeumo   6.9                 30.0   \n",
              "292  308          Liverpool   M            Salah  12.5                 28.1   \n",
              "115   19            Arsenal   M             Saka   8.7                 64.9   \n",
              "346  373  Manchester United   M      B.Fernandes   8.4                 19.8   \n",
              "34   211            Chelsea   F        N.Jackson   7.0                 13.8   \n",
              "248  226     Crystal Palace   M              Eze   6.3                  8.9   \n",
              "414  504          Tottenham   M         Maddison   7.9                 31.1   \n",
              "73   343    Manchester City   F        J.Alvarez   6.9                 25.0   \n",
              "355  396  Manchester United   M         Rashford   8.9                 33.2   \n",
              "12   119          Brentford   F            Wissa   6.1                 13.7   \n",
              "422  526           West Ham   M            Bowen   7.1                  9.4   \n",
              "290  303          Liverpool   M        Luis Díaz   7.7                 11.4   \n",
              "340  365    Manchester City   M          Rodrigo   5.7                 12.2   \n",
              "39   225     Crystal Palace   F          Edouard   5.6                  5.1   \n",
              "125   43        Aston Villa   M     Douglas Luiz   5.4                  2.0   \n",
              "112   14            Arsenal   M         Ødegaard   8.5                 21.4   \n",
              "15   132           Brighton   F         Ferguson   6.0                  8.4   \n",
              "230  199            Chelsea   M             Enzo   5.0                  3.8   \n",
              "235  216            Chelsea   M         Sterling   7.2                 15.3   \n",
              "184  143           Brighton   M           Mitoma   6.5                 40.0   \n",
              "599  342    Manchester City   D              Aké   5.1                  7.7   \n",
              "606  369    Manchester City   D           Walker   5.2                 12.7   \n",
              "53   293          Liverpool   F           Darwin   7.4                 11.4   \n",
              "419  516          Tottenham   M              Son   9.1                 15.0   \n",
              "601  350    Manchester City   D            Rúben   5.5                  8.6   \n",
              "607  616    Manchester City   D         Gvardiol   5.1                  5.6   \n",
              "5     60        Aston Villa   F          Watkins   7.9                 18.7   \n",
              "258  249            Everton   M       A.Doucoure   5.5                  0.2   \n",
              "427  539           West Ham   M        L.Paquetá   6.0                  1.8   \n",
              "182  140           Brighton   M            March   6.5                  8.6   \n",
              "417  513          Tottenham   M             Sarr   4.6                  3.4   \n",
              "121   34        Aston Villa   M           Bailey   5.5                  1.6   \n",
              "134  599        Aston Villa   M            Diaby   6.6                 10.6   \n",
              "334  353    Manchester City   M            Foden   7.6                 12.8   \n",
              "365  412   Newcastle United   M           Gordon   5.5                  2.0   \n",
              "265  601            Everton   M          Danjuma   5.5                  0.2   \n",
              "347  376  Manchester United   M         Casemiro   5.4                  3.7   \n",
              "431  664           West Ham   M      Ward-Prowse   6.2                  9.2   \n",
              "16   135           Brighton   F       João Pedro   5.4                 12.2   \n",
              "179  134           Brighton   M            Gross   6.3                  3.2   \n",
              "598  341    Manchester City   D           Akanji   5.0                  8.3   \n",
              "602  357    Manchester City   D          Laporte   4.9                  0.1   \n",
              "2     13            Arsenal   F          Nketiah   5.6                  6.1   \n",
              "9     85        Bournemouth   F          Solanke   6.5                  2.4   \n",
              "273  270             Fulham   M  De Cordova-Reid   5.5                  0.2   \n",
              "330  344    Manchester City   M         Bernardo   6.4                  1.9   \n",
              "604  366    Manchester City   D     Sergio Gómez   3.9                  1.1   \n",
              "78   415   Newcastle United   F             Isak   7.6                 24.4   \n",
              "376  603   Newcastle United   M           Barnes   6.4                  2.6   \n",
              "\n",
              "     goals_scored  assists  bps  ict_index  ...  minutes  home_adjustment  \\\n",
              "74              7        1  176       71.8  ...      439              1.3   \n",
              "163             4        0   93       45.3  ...      450              1.1   \n",
              "292             2        4  110       57.6  ...      431              1.2   \n",
              "115             2        2  120       57.8  ...      448              1.2   \n",
              "346             1        1   83       45.4  ...      450              1.1   \n",
              "34              1        0   27       34.6  ...      442              1.1   \n",
              "248             1        0   78       48.7  ...      450              1.0   \n",
              "414             2        2  121       60.7  ...      427              1.0   \n",
              "73              2        5  153       53.5  ...      449              1.3   \n",
              "355             1        2   50       37.5  ...      441              1.1   \n",
              "12              2        1   71       32.8  ...      419              1.1   \n",
              "422             3        1   96       39.5  ...      450              1.0   \n",
              "290             2        0   57       29.4  ...      302              1.2   \n",
              "340             2        1  124       42.4  ...      435              1.3   \n",
              "39              4        0  112       50.8  ...      428              1.0   \n",
              "125             2        0  112       28.7  ...      399              1.1   \n",
              "112             2        0   89       36.6  ...      442              1.2   \n",
              "15              4        0  104       35.3  ...      210              1.1   \n",
              "230             0        0   52       34.2  ...      440              1.1   \n",
              "235             2        1   85       45.2  ...      440              1.1   \n",
              "184             1        3   89       47.2  ...      440              1.1   \n",
              "599             1        0   77       12.1  ...      259              1.3   \n",
              "606             0        0  105       20.0  ...      450              1.3   \n",
              "53              2        2   72       19.6  ...      139              1.2   \n",
              "419             3        0  106       41.8  ...      404              1.0   \n",
              "601             0        0   65       13.1  ...      360              1.3   \n",
              "607             0        0   60       12.6  ...      281              1.3   \n",
              "5               0        4   48       32.9  ...      410              1.1   \n",
              "258             1        0   58       36.2  ...      439              0.9   \n",
              "427             1        1   78       29.3  ...      444              1.0   \n",
              "182             3        0   85       35.5  ...      314              1.1   \n",
              "417             1        1   74       34.8  ...      294              1.0   \n",
              "121             2        1   66       19.0  ...      186              1.1   \n",
              "134             2        2  102       37.4  ...      401              1.1   \n",
              "334             0        3   89       41.1  ...      339              1.3   \n",
              "365             1        2   60       23.1  ...      373              1.2   \n",
              "265             1        0   29       26.5  ...      340              0.9   \n",
              "347             1        0   72       27.5  ...      423              1.1   \n",
              "431             2        3  113       33.1  ...      350              1.0   \n",
              "16              2        0   69       33.5  ...      252              1.1   \n",
              "179             2        0  112       50.0  ...      438              1.1   \n",
              "598             0        0   85       13.8  ...      360              1.3   \n",
              "602             0        0    4        2.9  ...       11              1.3   \n",
              "2               2        1   67       25.0  ...      335              1.2   \n",
              "9               2        1   60       36.8  ...      450              0.8   \n",
              "273             1        1   46       17.0  ...      281              0.9   \n",
              "330             1        1   76       25.6  ...      284              1.3   \n",
              "604             0        1   17        3.8  ...       15              1.3   \n",
              "78              2        0   70       19.3  ...      276              1.2   \n",
              "376             1        1   45       14.0  ...      172              1.2   \n",
              "\n",
              "     xPallgw  xCSP    gw7   gw9   gw8  gw10    gw6  5GW Total  \n",
              "74       7.8   NaN  10.70  8.96  8.38  8.96  10.70      47.70  \n",
              "163      6.7   NaN   8.11  7.64  6.70  6.70   7.64      36.79  \n",
              "292      6.0   NaN   6.80  7.20  6.00  7.60   6.80      34.40  \n",
              "115      5.2   NaN   6.16  5.52  4.88  6.48   5.84      28.88  \n",
              "346      5.4   NaN   5.74  6.42  5.40  4.72   6.08      28.36  \n",
              "34       5.0   NaN   5.30  4.70  5.60  5.00   5.00      25.60  \n",
              "248      4.9   NaN   4.61  4.61  5.48  4.90   5.19      24.79  \n",
              "414      5.0   NaN   4.40  5.30  5.60  5.00   4.40      24.70  \n",
              "73       4.2   NaN   5.30  4.64  4.42  4.64   5.30      24.30  \n",
              "355      4.6   NaN   4.86  5.38  4.60  4.08   5.12      24.04  \n",
              "12       4.3   NaN   4.99  4.76  4.30  4.30   4.76      23.11  \n",
              "422      4.7   NaN   5.24  4.43  4.16  4.97   4.16      22.96  \n",
              "290      4.1   NaN   4.52  4.73  4.10  4.94   4.52      22.81  \n",
              "340      3.9   NaN   4.85  4.28  4.09  4.28   4.85      22.35  \n",
              "39       4.4   NaN   4.16  4.16  4.88  4.40   4.64      22.24  \n",
              "125      4.1   NaN   4.10  4.31  4.73  4.73   4.10      21.97  \n",
              "112      4.0   NaN   4.60  4.20  3.80  4.80   4.40      21.80  \n",
              "15       4.2   NaN   4.20  3.76  4.20  4.64   4.86      21.66  \n",
              "230      4.2   NaN   4.42  3.98  4.64  4.20   4.20      21.44  \n",
              "235      4.2   NaN   4.42  3.98  4.64  4.20   4.20      21.44  \n",
              "184      4.1   NaN   4.10  3.68  4.10  4.52   4.73      21.13  \n",
              "599      3.7   1.1   4.55  4.04  3.87  4.04   4.55      21.05  \n",
              "606      3.6   1.1   4.40  3.92  3.76  3.92   4.40      20.40  \n",
              "53       3.7   NaN   4.04  4.21  3.70  4.38   4.04      20.37  \n",
              "419      4.0   NaN   3.60  4.20  4.40  4.00   3.60      19.80  \n",
              "601      3.5   1.1   4.25  3.80  3.65  3.80   4.25      19.75  \n",
              "607      3.5   1.1   4.25  3.80  3.65  3.80   4.25      19.75  \n",
              "5        3.7   NaN   3.70  3.87  4.21  4.21   3.70      19.69  \n",
              "258      4.1   NaN   4.31  3.47  4.31  3.89   3.68      19.66  \n",
              "427      4.0   NaN   4.40  3.80  3.60  4.20   3.60      19.60  \n",
              "182      3.8   NaN   3.80  3.44  3.80  4.16   4.34      19.54  \n",
              "417      3.9   NaN   3.52  4.09  4.28  3.90   3.52      19.31  \n",
              "121      3.6   NaN   3.60  3.76  4.08  4.08   3.60      19.12  \n",
              "134      3.6   NaN   3.60  3.76  4.08  4.08   3.60      19.12  \n",
              "334      3.4   NaN   4.10  3.68  3.54  3.68   4.10      19.10  \n",
              "365      3.4   NaN   3.82  3.54  3.68  3.82   3.96      18.82  \n",
              "265      3.9   NaN   4.09  3.33  4.09  3.71   3.52      18.74  \n",
              "347      3.6   NaN   3.76  4.08  3.60  3.28   3.92      18.64  \n",
              "431      3.8   NaN   4.16  3.62  3.44  3.98   3.44      18.64  \n",
              "16       3.6   NaN   3.60  3.28  3.60  3.92   4.08      18.48  \n",
              "179      3.6   NaN   3.60  3.28  3.60  3.92   4.08      18.48  \n",
              "598      3.3   1.1   3.95  3.56  3.43  3.56   3.95      18.45  \n",
              "602      3.3   1.1   3.95  3.56  3.43  3.56   3.95      18.45  \n",
              "2        3.4   NaN   3.82  3.54  3.26  3.96   3.68      18.26  \n",
              "9        3.9   NaN   3.33  3.90  3.71  3.90   3.33      18.17  \n",
              "273      3.7   NaN   3.53  3.53  4.04  3.36   3.53      17.99  \n",
              "330      3.2   NaN   3.80  3.44  3.32  3.44   3.80      17.80  \n",
              "604      3.2   1.1   3.80  3.44  3.32  3.44   3.80      17.80  \n",
              "78       3.2   NaN   3.56  3.32  3.44  3.56   3.68      17.56  \n",
              "376      3.2   NaN   3.56  3.32  3.44  3.56   3.68      17.56  \n",
              "\n",
              "[50 rows x 22 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-837f2a13-39c9-4f31-9e4b-d3b97a60a2ef\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>team</th>\n",
              "      <th>pos</th>\n",
              "      <th>name</th>\n",
              "      <th>cost</th>\n",
              "      <th>selected_by_percent</th>\n",
              "      <th>goals_scored</th>\n",
              "      <th>assists</th>\n",
              "      <th>bps</th>\n",
              "      <th>ict_index</th>\n",
              "      <th>...</th>\n",
              "      <th>minutes</th>\n",
              "      <th>home_adjustment</th>\n",
              "      <th>xPallgw</th>\n",
              "      <th>xCSP</th>\n",
              "      <th>gw7</th>\n",
              "      <th>gw9</th>\n",
              "      <th>gw8</th>\n",
              "      <th>gw10</th>\n",
              "      <th>gw6</th>\n",
              "      <th>5GW Total</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>74</th>\n",
              "      <td>355</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>F</td>\n",
              "      <td>Haaland</td>\n",
              "      <td>14.1</td>\n",
              "      <td>92.3</td>\n",
              "      <td>7</td>\n",
              "      <td>1</td>\n",
              "      <td>176</td>\n",
              "      <td>71.8</td>\n",
              "      <td>...</td>\n",
              "      <td>439</td>\n",
              "      <td>1.3</td>\n",
              "      <td>7.8</td>\n",
              "      <td>NaN</td>\n",
              "      <td>10.70</td>\n",
              "      <td>8.96</td>\n",
              "      <td>8.38</td>\n",
              "      <td>8.96</td>\n",
              "      <td>10.70</td>\n",
              "      <td>47.70</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>163</th>\n",
              "      <td>108</td>\n",
              "      <td>Brentford</td>\n",
              "      <td>M</td>\n",
              "      <td>Mbeumo</td>\n",
              "      <td>6.9</td>\n",
              "      <td>30.0</td>\n",
              "      <td>4</td>\n",
              "      <td>0</td>\n",
              "      <td>93</td>\n",
              "      <td>45.3</td>\n",
              "      <td>...</td>\n",
              "      <td>450</td>\n",
              "      <td>1.1</td>\n",
              "      <td>6.7</td>\n",
              "      <td>NaN</td>\n",
              "      <td>8.11</td>\n",
              "      <td>7.64</td>\n",
              "      <td>6.70</td>\n",
              "      <td>6.70</td>\n",
              "      <td>7.64</td>\n",
              "      <td>36.79</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>292</th>\n",
              "      <td>308</td>\n",
              "      <td>Liverpool</td>\n",
              "      <td>M</td>\n",
              "      <td>Salah</td>\n",
              "      <td>12.5</td>\n",
              "      <td>28.1</td>\n",
              "      <td>2</td>\n",
              "      <td>4</td>\n",
              "      <td>110</td>\n",
              "      <td>57.6</td>\n",
              "      <td>...</td>\n",
              "      <td>431</td>\n",
              "      <td>1.2</td>\n",
              "      <td>6.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>6.80</td>\n",
              "      <td>7.20</td>\n",
              "      <td>6.00</td>\n",
              "      <td>7.60</td>\n",
              "      <td>6.80</td>\n",
              "      <td>34.40</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>115</th>\n",
              "      <td>19</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>M</td>\n",
              "      <td>Saka</td>\n",
              "      <td>8.7</td>\n",
              "      <td>64.9</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>120</td>\n",
              "      <td>57.8</td>\n",
              "      <td>...</td>\n",
              "      <td>448</td>\n",
              "      <td>1.2</td>\n",
              "      <td>5.2</td>\n",
              "      <td>NaN</td>\n",
              "      <td>6.16</td>\n",
              "      <td>5.52</td>\n",
              "      <td>4.88</td>\n",
              "      <td>6.48</td>\n",
              "      <td>5.84</td>\n",
              "      <td>28.88</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>346</th>\n",
              "      <td>373</td>\n",
              "      <td>Manchester United</td>\n",
              "      <td>M</td>\n",
              "      <td>B.Fernandes</td>\n",
              "      <td>8.4</td>\n",
              "      <td>19.8</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>83</td>\n",
              "      <td>45.4</td>\n",
              "      <td>...</td>\n",
              "      <td>450</td>\n",
              "      <td>1.1</td>\n",
              "      <td>5.4</td>\n",
              "      <td>NaN</td>\n",
              "      <td>5.74</td>\n",
              "      <td>6.42</td>\n",
              "      <td>5.40</td>\n",
              "      <td>4.72</td>\n",
              "      <td>6.08</td>\n",
              "      <td>28.36</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>34</th>\n",
              "      <td>211</td>\n",
              "      <td>Chelsea</td>\n",
              "      <td>F</td>\n",
              "      <td>N.Jackson</td>\n",
              "      <td>7.0</td>\n",
              "      <td>13.8</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>27</td>\n",
              "      <td>34.6</td>\n",
              "      <td>...</td>\n",
              "      <td>442</td>\n",
              "      <td>1.1</td>\n",
              "      <td>5.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>5.30</td>\n",
              "      <td>4.70</td>\n",
              "      <td>5.60</td>\n",
              "      <td>5.00</td>\n",
              "      <td>5.00</td>\n",
              "      <td>25.60</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>248</th>\n",
              "      <td>226</td>\n",
              "      <td>Crystal Palace</td>\n",
              "      <td>M</td>\n",
              "      <td>Eze</td>\n",
              "      <td>6.3</td>\n",
              "      <td>8.9</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>78</td>\n",
              "      <td>48.7</td>\n",
              "      <td>...</td>\n",
              "      <td>450</td>\n",
              "      <td>1.0</td>\n",
              "      <td>4.9</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4.61</td>\n",
              "      <td>4.61</td>\n",
              "      <td>5.48</td>\n",
              "      <td>4.90</td>\n",
              "      <td>5.19</td>\n",
              "      <td>24.79</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>414</th>\n",
              "      <td>504</td>\n",
              "      <td>Tottenham</td>\n",
              "      <td>M</td>\n",
              "      <td>Maddison</td>\n",
              "      <td>7.9</td>\n",
              "      <td>31.1</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>121</td>\n",
              "      <td>60.7</td>\n",
              "      <td>...</td>\n",
              "      <td>427</td>\n",
              "      <td>1.0</td>\n",
              "      <td>5.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4.40</td>\n",
              "      <td>5.30</td>\n",
              "      <td>5.60</td>\n",
              "      <td>5.00</td>\n",
              "      <td>4.40</td>\n",
              "      <td>24.70</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>73</th>\n",
              "      <td>343</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>F</td>\n",
              "      <td>J.Alvarez</td>\n",
              "      <td>6.9</td>\n",
              "      <td>25.0</td>\n",
              "      <td>2</td>\n",
              "      <td>5</td>\n",
              "      <td>153</td>\n",
              "      <td>53.5</td>\n",
              "      <td>...</td>\n",
              "      <td>449</td>\n",
              "      <td>1.3</td>\n",
              "      <td>4.2</td>\n",
              "      <td>NaN</td>\n",
              "      <td>5.30</td>\n",
              "      <td>4.64</td>\n",
              "      <td>4.42</td>\n",
              "      <td>4.64</td>\n",
              "      <td>5.30</td>\n",
              "      <td>24.30</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>355</th>\n",
              "      <td>396</td>\n",
              "      <td>Manchester United</td>\n",
              "      <td>M</td>\n",
              "      <td>Rashford</td>\n",
              "      <td>8.9</td>\n",
              "      <td>33.2</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>50</td>\n",
              "      <td>37.5</td>\n",
              "      <td>...</td>\n",
              "      <td>441</td>\n",
              "      <td>1.1</td>\n",
              "      <td>4.6</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4.86</td>\n",
              "      <td>5.38</td>\n",
              "      <td>4.60</td>\n",
              "      <td>4.08</td>\n",
              "      <td>5.12</td>\n",
              "      <td>24.04</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>12</th>\n",
              "      <td>119</td>\n",
              "      <td>Brentford</td>\n",
              "      <td>F</td>\n",
              "      <td>Wissa</td>\n",
              "      <td>6.1</td>\n",
              "      <td>13.7</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>71</td>\n",
              "      <td>32.8</td>\n",
              "      <td>...</td>\n",
              "      <td>419</td>\n",
              "      <td>1.1</td>\n",
              "      <td>4.3</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4.99</td>\n",
              "      <td>4.76</td>\n",
              "      <td>4.30</td>\n",
              "      <td>4.30</td>\n",
              "      <td>4.76</td>\n",
              "      <td>23.11</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>422</th>\n",
              "      <td>526</td>\n",
              "      <td>West Ham</td>\n",
              "      <td>M</td>\n",
              "      <td>Bowen</td>\n",
              "      <td>7.1</td>\n",
              "      <td>9.4</td>\n",
              "      <td>3</td>\n",
              "      <td>1</td>\n",
              "      <td>96</td>\n",
              "      <td>39.5</td>\n",
              "      <td>...</td>\n",
              "      <td>450</td>\n",
              "      <td>1.0</td>\n",
              "      <td>4.7</td>\n",
              "      <td>NaN</td>\n",
              "      <td>5.24</td>\n",
              "      <td>4.43</td>\n",
              "      <td>4.16</td>\n",
              "      <td>4.97</td>\n",
              "      <td>4.16</td>\n",
              "      <td>22.96</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>290</th>\n",
              "      <td>303</td>\n",
              "      <td>Liverpool</td>\n",
              "      <td>M</td>\n",
              "      <td>Luis Díaz</td>\n",
              "      <td>7.7</td>\n",
              "      <td>11.4</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>57</td>\n",
              "      <td>29.4</td>\n",
              "      <td>...</td>\n",
              "      <td>302</td>\n",
              "      <td>1.2</td>\n",
              "      <td>4.1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4.52</td>\n",
              "      <td>4.73</td>\n",
              "      <td>4.10</td>\n",
              "      <td>4.94</td>\n",
              "      <td>4.52</td>\n",
              "      <td>22.81</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>340</th>\n",
              "      <td>365</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>M</td>\n",
              "      <td>Rodrigo</td>\n",
              "      <td>5.7</td>\n",
              "      <td>12.2</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>124</td>\n",
              "      <td>42.4</td>\n",
              "      <td>...</td>\n",
              "      <td>435</td>\n",
              "      <td>1.3</td>\n",
              "      <td>3.9</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4.85</td>\n",
              "      <td>4.28</td>\n",
              "      <td>4.09</td>\n",
              "      <td>4.28</td>\n",
              "      <td>4.85</td>\n",
              "      <td>22.35</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>39</th>\n",
              "      <td>225</td>\n",
              "      <td>Crystal Palace</td>\n",
              "      <td>F</td>\n",
              "      <td>Edouard</td>\n",
              "      <td>5.6</td>\n",
              "      <td>5.1</td>\n",
              "      <td>4</td>\n",
              "      <td>0</td>\n",
              "      <td>112</td>\n",
              "      <td>50.8</td>\n",
              "      <td>...</td>\n",
              "      <td>428</td>\n",
              "      <td>1.0</td>\n",
              "      <td>4.4</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4.16</td>\n",
              "      <td>4.16</td>\n",
              "      <td>4.88</td>\n",
              "      <td>4.40</td>\n",
              "      <td>4.64</td>\n",
              "      <td>22.24</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>125</th>\n",
              "      <td>43</td>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>M</td>\n",
              "      <td>Douglas Luiz</td>\n",
              "      <td>5.4</td>\n",
              "      <td>2.0</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>112</td>\n",
              "      <td>28.7</td>\n",
              "      <td>...</td>\n",
              "      <td>399</td>\n",
              "      <td>1.1</td>\n",
              "      <td>4.1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4.10</td>\n",
              "      <td>4.31</td>\n",
              "      <td>4.73</td>\n",
              "      <td>4.73</td>\n",
              "      <td>4.10</td>\n",
              "      <td>21.97</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>112</th>\n",
              "      <td>14</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>M</td>\n",
              "      <td>Ødegaard</td>\n",
              "      <td>8.5</td>\n",
              "      <td>21.4</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>89</td>\n",
              "      <td>36.6</td>\n",
              "      <td>...</td>\n",
              "      <td>442</td>\n",
              "      <td>1.2</td>\n",
              "      <td>4.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4.60</td>\n",
              "      <td>4.20</td>\n",
              "      <td>3.80</td>\n",
              "      <td>4.80</td>\n",
              "      <td>4.40</td>\n",
              "      <td>21.80</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>15</th>\n",
              "      <td>132</td>\n",
              "      <td>Brighton</td>\n",
              "      <td>F</td>\n",
              "      <td>Ferguson</td>\n",
              "      <td>6.0</td>\n",
              "      <td>8.4</td>\n",
              "      <td>4</td>\n",
              "      <td>0</td>\n",
              "      <td>104</td>\n",
              "      <td>35.3</td>\n",
              "      <td>...</td>\n",
              "      <td>210</td>\n",
              "      <td>1.1</td>\n",
              "      <td>4.2</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4.20</td>\n",
              "      <td>3.76</td>\n",
              "      <td>4.20</td>\n",
              "      <td>4.64</td>\n",
              "      <td>4.86</td>\n",
              "      <td>21.66</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>230</th>\n",
              "      <td>199</td>\n",
              "      <td>Chelsea</td>\n",
              "      <td>M</td>\n",
              "      <td>Enzo</td>\n",
              "      <td>5.0</td>\n",
              "      <td>3.8</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>52</td>\n",
              "      <td>34.2</td>\n",
              "      <td>...</td>\n",
              "      <td>440</td>\n",
              "      <td>1.1</td>\n",
              "      <td>4.2</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4.42</td>\n",
              "      <td>3.98</td>\n",
              "      <td>4.64</td>\n",
              "      <td>4.20</td>\n",
              "      <td>4.20</td>\n",
              "      <td>21.44</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>235</th>\n",
              "      <td>216</td>\n",
              "      <td>Chelsea</td>\n",
              "      <td>M</td>\n",
              "      <td>Sterling</td>\n",
              "      <td>7.2</td>\n",
              "      <td>15.3</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>85</td>\n",
              "      <td>45.2</td>\n",
              "      <td>...</td>\n",
              "      <td>440</td>\n",
              "      <td>1.1</td>\n",
              "      <td>4.2</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4.42</td>\n",
              "      <td>3.98</td>\n",
              "      <td>4.64</td>\n",
              "      <td>4.20</td>\n",
              "      <td>4.20</td>\n",
              "      <td>21.44</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>184</th>\n",
              "      <td>143</td>\n",
              "      <td>Brighton</td>\n",
              "      <td>M</td>\n",
              "      <td>Mitoma</td>\n",
              "      <td>6.5</td>\n",
              "      <td>40.0</td>\n",
              "      <td>1</td>\n",
              "      <td>3</td>\n",
              "      <td>89</td>\n",
              "      <td>47.2</td>\n",
              "      <td>...</td>\n",
              "      <td>440</td>\n",
              "      <td>1.1</td>\n",
              "      <td>4.1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4.10</td>\n",
              "      <td>3.68</td>\n",
              "      <td>4.10</td>\n",
              "      <td>4.52</td>\n",
              "      <td>4.73</td>\n",
              "      <td>21.13</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>599</th>\n",
              "      <td>342</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>D</td>\n",
              "      <td>Aké</td>\n",
              "      <td>5.1</td>\n",
              "      <td>7.7</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>77</td>\n",
              "      <td>12.1</td>\n",
              "      <td>...</td>\n",
              "      <td>259</td>\n",
              "      <td>1.3</td>\n",
              "      <td>3.7</td>\n",
              "      <td>1.1</td>\n",
              "      <td>4.55</td>\n",
              "      <td>4.04</td>\n",
              "      <td>3.87</td>\n",
              "      <td>4.04</td>\n",
              "      <td>4.55</td>\n",
              "      <td>21.05</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>606</th>\n",
              "      <td>369</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>D</td>\n",
              "      <td>Walker</td>\n",
              "      <td>5.2</td>\n",
              "      <td>12.7</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>105</td>\n",
              "      <td>20.0</td>\n",
              "      <td>...</td>\n",
              "      <td>450</td>\n",
              "      <td>1.3</td>\n",
              "      <td>3.6</td>\n",
              "      <td>1.1</td>\n",
              "      <td>4.40</td>\n",
              "      <td>3.92</td>\n",
              "      <td>3.76</td>\n",
              "      <td>3.92</td>\n",
              "      <td>4.40</td>\n",
              "      <td>20.40</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>53</th>\n",
              "      <td>293</td>\n",
              "      <td>Liverpool</td>\n",
              "      <td>F</td>\n",
              "      <td>Darwin</td>\n",
              "      <td>7.4</td>\n",
              "      <td>11.4</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>72</td>\n",
              "      <td>19.6</td>\n",
              "      <td>...</td>\n",
              "      <td>139</td>\n",
              "      <td>1.2</td>\n",
              "      <td>3.7</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4.04</td>\n",
              "      <td>4.21</td>\n",
              "      <td>3.70</td>\n",
              "      <td>4.38</td>\n",
              "      <td>4.04</td>\n",
              "      <td>20.37</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>419</th>\n",
              "      <td>516</td>\n",
              "      <td>Tottenham</td>\n",
              "      <td>M</td>\n",
              "      <td>Son</td>\n",
              "      <td>9.1</td>\n",
              "      <td>15.0</td>\n",
              "      <td>3</td>\n",
              "      <td>0</td>\n",
              "      <td>106</td>\n",
              "      <td>41.8</td>\n",
              "      <td>...</td>\n",
              "      <td>404</td>\n",
              "      <td>1.0</td>\n",
              "      <td>4.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.60</td>\n",
              "      <td>4.20</td>\n",
              "      <td>4.40</td>\n",
              "      <td>4.00</td>\n",
              "      <td>3.60</td>\n",
              "      <td>19.80</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>601</th>\n",
              "      <td>350</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>D</td>\n",
              "      <td>Rúben</td>\n",
              "      <td>5.5</td>\n",
              "      <td>8.6</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>65</td>\n",
              "      <td>13.1</td>\n",
              "      <td>...</td>\n",
              "      <td>360</td>\n",
              "      <td>1.3</td>\n",
              "      <td>3.5</td>\n",
              "      <td>1.1</td>\n",
              "      <td>4.25</td>\n",
              "      <td>3.80</td>\n",
              "      <td>3.65</td>\n",
              "      <td>3.80</td>\n",
              "      <td>4.25</td>\n",
              "      <td>19.75</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>607</th>\n",
              "      <td>616</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>D</td>\n",
              "      <td>Gvardiol</td>\n",
              "      <td>5.1</td>\n",
              "      <td>5.6</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>60</td>\n",
              "      <td>12.6</td>\n",
              "      <td>...</td>\n",
              "      <td>281</td>\n",
              "      <td>1.3</td>\n",
              "      <td>3.5</td>\n",
              "      <td>1.1</td>\n",
              "      <td>4.25</td>\n",
              "      <td>3.80</td>\n",
              "      <td>3.65</td>\n",
              "      <td>3.80</td>\n",
              "      <td>4.25</td>\n",
              "      <td>19.75</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>60</td>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>F</td>\n",
              "      <td>Watkins</td>\n",
              "      <td>7.9</td>\n",
              "      <td>18.7</td>\n",
              "      <td>0</td>\n",
              "      <td>4</td>\n",
              "      <td>48</td>\n",
              "      <td>32.9</td>\n",
              "      <td>...</td>\n",
              "      <td>410</td>\n",
              "      <td>1.1</td>\n",
              "      <td>3.7</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.70</td>\n",
              "      <td>3.87</td>\n",
              "      <td>4.21</td>\n",
              "      <td>4.21</td>\n",
              "      <td>3.70</td>\n",
              "      <td>19.69</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>258</th>\n",
              "      <td>249</td>\n",
              "      <td>Everton</td>\n",
              "      <td>M</td>\n",
              "      <td>A.Doucoure</td>\n",
              "      <td>5.5</td>\n",
              "      <td>0.2</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>58</td>\n",
              "      <td>36.2</td>\n",
              "      <td>...</td>\n",
              "      <td>439</td>\n",
              "      <td>0.9</td>\n",
              "      <td>4.1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4.31</td>\n",
              "      <td>3.47</td>\n",
              "      <td>4.31</td>\n",
              "      <td>3.89</td>\n",
              "      <td>3.68</td>\n",
              "      <td>19.66</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>427</th>\n",
              "      <td>539</td>\n",
              "      <td>West Ham</td>\n",
              "      <td>M</td>\n",
              "      <td>L.Paquetá</td>\n",
              "      <td>6.0</td>\n",
              "      <td>1.8</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>78</td>\n",
              "      <td>29.3</td>\n",
              "      <td>...</td>\n",
              "      <td>444</td>\n",
              "      <td>1.0</td>\n",
              "      <td>4.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4.40</td>\n",
              "      <td>3.80</td>\n",
              "      <td>3.60</td>\n",
              "      <td>4.20</td>\n",
              "      <td>3.60</td>\n",
              "      <td>19.60</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>182</th>\n",
              "      <td>140</td>\n",
              "      <td>Brighton</td>\n",
              "      <td>M</td>\n",
              "      <td>March</td>\n",
              "      <td>6.5</td>\n",
              "      <td>8.6</td>\n",
              "      <td>3</td>\n",
              "      <td>0</td>\n",
              "      <td>85</td>\n",
              "      <td>35.5</td>\n",
              "      <td>...</td>\n",
              "      <td>314</td>\n",
              "      <td>1.1</td>\n",
              "      <td>3.8</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.80</td>\n",
              "      <td>3.44</td>\n",
              "      <td>3.80</td>\n",
              "      <td>4.16</td>\n",
              "      <td>4.34</td>\n",
              "      <td>19.54</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>417</th>\n",
              "      <td>513</td>\n",
              "      <td>Tottenham</td>\n",
              "      <td>M</td>\n",
              "      <td>Sarr</td>\n",
              "      <td>4.6</td>\n",
              "      <td>3.4</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>74</td>\n",
              "      <td>34.8</td>\n",
              "      <td>...</td>\n",
              "      <td>294</td>\n",
              "      <td>1.0</td>\n",
              "      <td>3.9</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.52</td>\n",
              "      <td>4.09</td>\n",
              "      <td>4.28</td>\n",
              "      <td>3.90</td>\n",
              "      <td>3.52</td>\n",
              "      <td>19.31</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>121</th>\n",
              "      <td>34</td>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>M</td>\n",
              "      <td>Bailey</td>\n",
              "      <td>5.5</td>\n",
              "      <td>1.6</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>66</td>\n",
              "      <td>19.0</td>\n",
              "      <td>...</td>\n",
              "      <td>186</td>\n",
              "      <td>1.1</td>\n",
              "      <td>3.6</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.60</td>\n",
              "      <td>3.76</td>\n",
              "      <td>4.08</td>\n",
              "      <td>4.08</td>\n",
              "      <td>3.60</td>\n",
              "      <td>19.12</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>134</th>\n",
              "      <td>599</td>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>M</td>\n",
              "      <td>Diaby</td>\n",
              "      <td>6.6</td>\n",
              "      <td>10.6</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>102</td>\n",
              "      <td>37.4</td>\n",
              "      <td>...</td>\n",
              "      <td>401</td>\n",
              "      <td>1.1</td>\n",
              "      <td>3.6</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.60</td>\n",
              "      <td>3.76</td>\n",
              "      <td>4.08</td>\n",
              "      <td>4.08</td>\n",
              "      <td>3.60</td>\n",
              "      <td>19.12</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>334</th>\n",
              "      <td>353</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>M</td>\n",
              "      <td>Foden</td>\n",
              "      <td>7.6</td>\n",
              "      <td>12.8</td>\n",
              "      <td>0</td>\n",
              "      <td>3</td>\n",
              "      <td>89</td>\n",
              "      <td>41.1</td>\n",
              "      <td>...</td>\n",
              "      <td>339</td>\n",
              "      <td>1.3</td>\n",
              "      <td>3.4</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4.10</td>\n",
              "      <td>3.68</td>\n",
              "      <td>3.54</td>\n",
              "      <td>3.68</td>\n",
              "      <td>4.10</td>\n",
              "      <td>19.10</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>365</th>\n",
              "      <td>412</td>\n",
              "      <td>Newcastle United</td>\n",
              "      <td>M</td>\n",
              "      <td>Gordon</td>\n",
              "      <td>5.5</td>\n",
              "      <td>2.0</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>60</td>\n",
              "      <td>23.1</td>\n",
              "      <td>...</td>\n",
              "      <td>373</td>\n",
              "      <td>1.2</td>\n",
              "      <td>3.4</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.82</td>\n",
              "      <td>3.54</td>\n",
              "      <td>3.68</td>\n",
              "      <td>3.82</td>\n",
              "      <td>3.96</td>\n",
              "      <td>18.82</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>265</th>\n",
              "      <td>601</td>\n",
              "      <td>Everton</td>\n",
              "      <td>M</td>\n",
              "      <td>Danjuma</td>\n",
              "      <td>5.5</td>\n",
              "      <td>0.2</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>29</td>\n",
              "      <td>26.5</td>\n",
              "      <td>...</td>\n",
              "      <td>340</td>\n",
              "      <td>0.9</td>\n",
              "      <td>3.9</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4.09</td>\n",
              "      <td>3.33</td>\n",
              "      <td>4.09</td>\n",
              "      <td>3.71</td>\n",
              "      <td>3.52</td>\n",
              "      <td>18.74</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>347</th>\n",
              "      <td>376</td>\n",
              "      <td>Manchester United</td>\n",
              "      <td>M</td>\n",
              "      <td>Casemiro</td>\n",
              "      <td>5.4</td>\n",
              "      <td>3.7</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>72</td>\n",
              "      <td>27.5</td>\n",
              "      <td>...</td>\n",
              "      <td>423</td>\n",
              "      <td>1.1</td>\n",
              "      <td>3.6</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.76</td>\n",
              "      <td>4.08</td>\n",
              "      <td>3.60</td>\n",
              "      <td>3.28</td>\n",
              "      <td>3.92</td>\n",
              "      <td>18.64</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>431</th>\n",
              "      <td>664</td>\n",
              "      <td>West Ham</td>\n",
              "      <td>M</td>\n",
              "      <td>Ward-Prowse</td>\n",
              "      <td>6.2</td>\n",
              "      <td>9.2</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "      <td>113</td>\n",
              "      <td>33.1</td>\n",
              "      <td>...</td>\n",
              "      <td>350</td>\n",
              "      <td>1.0</td>\n",
              "      <td>3.8</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4.16</td>\n",
              "      <td>3.62</td>\n",
              "      <td>3.44</td>\n",
              "      <td>3.98</td>\n",
              "      <td>3.44</td>\n",
              "      <td>18.64</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>16</th>\n",
              "      <td>135</td>\n",
              "      <td>Brighton</td>\n",
              "      <td>F</td>\n",
              "      <td>João Pedro</td>\n",
              "      <td>5.4</td>\n",
              "      <td>12.2</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>69</td>\n",
              "      <td>33.5</td>\n",
              "      <td>...</td>\n",
              "      <td>252</td>\n",
              "      <td>1.1</td>\n",
              "      <td>3.6</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.60</td>\n",
              "      <td>3.28</td>\n",
              "      <td>3.60</td>\n",
              "      <td>3.92</td>\n",
              "      <td>4.08</td>\n",
              "      <td>18.48</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>179</th>\n",
              "      <td>134</td>\n",
              "      <td>Brighton</td>\n",
              "      <td>M</td>\n",
              "      <td>Gross</td>\n",
              "      <td>6.3</td>\n",
              "      <td>3.2</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>112</td>\n",
              "      <td>50.0</td>\n",
              "      <td>...</td>\n",
              "      <td>438</td>\n",
              "      <td>1.1</td>\n",
              "      <td>3.6</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.60</td>\n",
              "      <td>3.28</td>\n",
              "      <td>3.60</td>\n",
              "      <td>3.92</td>\n",
              "      <td>4.08</td>\n",
              "      <td>18.48</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>598</th>\n",
              "      <td>341</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>D</td>\n",
              "      <td>Akanji</td>\n",
              "      <td>5.0</td>\n",
              "      <td>8.3</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>85</td>\n",
              "      <td>13.8</td>\n",
              "      <td>...</td>\n",
              "      <td>360</td>\n",
              "      <td>1.3</td>\n",
              "      <td>3.3</td>\n",
              "      <td>1.1</td>\n",
              "      <td>3.95</td>\n",
              "      <td>3.56</td>\n",
              "      <td>3.43</td>\n",
              "      <td>3.56</td>\n",
              "      <td>3.95</td>\n",
              "      <td>18.45</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>602</th>\n",
              "      <td>357</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>D</td>\n",
              "      <td>Laporte</td>\n",
              "      <td>4.9</td>\n",
              "      <td>0.1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>4</td>\n",
              "      <td>2.9</td>\n",
              "      <td>...</td>\n",
              "      <td>11</td>\n",
              "      <td>1.3</td>\n",
              "      <td>3.3</td>\n",
              "      <td>1.1</td>\n",
              "      <td>3.95</td>\n",
              "      <td>3.56</td>\n",
              "      <td>3.43</td>\n",
              "      <td>3.56</td>\n",
              "      <td>3.95</td>\n",
              "      <td>18.45</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>13</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>F</td>\n",
              "      <td>Nketiah</td>\n",
              "      <td>5.6</td>\n",
              "      <td>6.1</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>67</td>\n",
              "      <td>25.0</td>\n",
              "      <td>...</td>\n",
              "      <td>335</td>\n",
              "      <td>1.2</td>\n",
              "      <td>3.4</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.82</td>\n",
              "      <td>3.54</td>\n",
              "      <td>3.26</td>\n",
              "      <td>3.96</td>\n",
              "      <td>3.68</td>\n",
              "      <td>18.26</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>85</td>\n",
              "      <td>Bournemouth</td>\n",
              "      <td>F</td>\n",
              "      <td>Solanke</td>\n",
              "      <td>6.5</td>\n",
              "      <td>2.4</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>60</td>\n",
              "      <td>36.8</td>\n",
              "      <td>...</td>\n",
              "      <td>450</td>\n",
              "      <td>0.8</td>\n",
              "      <td>3.9</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.33</td>\n",
              "      <td>3.90</td>\n",
              "      <td>3.71</td>\n",
              "      <td>3.90</td>\n",
              "      <td>3.33</td>\n",
              "      <td>18.17</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>273</th>\n",
              "      <td>270</td>\n",
              "      <td>Fulham</td>\n",
              "      <td>M</td>\n",
              "      <td>De Cordova-Reid</td>\n",
              "      <td>5.5</td>\n",
              "      <td>0.2</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>46</td>\n",
              "      <td>17.0</td>\n",
              "      <td>...</td>\n",
              "      <td>281</td>\n",
              "      <td>0.9</td>\n",
              "      <td>3.7</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.53</td>\n",
              "      <td>3.53</td>\n",
              "      <td>4.04</td>\n",
              "      <td>3.36</td>\n",
              "      <td>3.53</td>\n",
              "      <td>17.99</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>330</th>\n",
              "      <td>344</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>M</td>\n",
              "      <td>Bernardo</td>\n",
              "      <td>6.4</td>\n",
              "      <td>1.9</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>76</td>\n",
              "      <td>25.6</td>\n",
              "      <td>...</td>\n",
              "      <td>284</td>\n",
              "      <td>1.3</td>\n",
              "      <td>3.2</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.80</td>\n",
              "      <td>3.44</td>\n",
              "      <td>3.32</td>\n",
              "      <td>3.44</td>\n",
              "      <td>3.80</td>\n",
              "      <td>17.80</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>604</th>\n",
              "      <td>366</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>D</td>\n",
              "      <td>Sergio Gómez</td>\n",
              "      <td>3.9</td>\n",
              "      <td>1.1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>17</td>\n",
              "      <td>3.8</td>\n",
              "      <td>...</td>\n",
              "      <td>15</td>\n",
              "      <td>1.3</td>\n",
              "      <td>3.2</td>\n",
              "      <td>1.1</td>\n",
              "      <td>3.80</td>\n",
              "      <td>3.44</td>\n",
              "      <td>3.32</td>\n",
              "      <td>3.44</td>\n",
              "      <td>3.80</td>\n",
              "      <td>17.80</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>78</th>\n",
              "      <td>415</td>\n",
              "      <td>Newcastle United</td>\n",
              "      <td>F</td>\n",
              "      <td>Isak</td>\n",
              "      <td>7.6</td>\n",
              "      <td>24.4</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>70</td>\n",
              "      <td>19.3</td>\n",
              "      <td>...</td>\n",
              "      <td>276</td>\n",
              "      <td>1.2</td>\n",
              "      <td>3.2</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.56</td>\n",
              "      <td>3.32</td>\n",
              "      <td>3.44</td>\n",
              "      <td>3.56</td>\n",
              "      <td>3.68</td>\n",
              "      <td>17.56</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>376</th>\n",
              "      <td>603</td>\n",
              "      <td>Newcastle United</td>\n",
              "      <td>M</td>\n",
              "      <td>Barnes</td>\n",
              "      <td>6.4</td>\n",
              "      <td>2.6</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>45</td>\n",
              "      <td>14.0</td>\n",
              "      <td>...</td>\n",
              "      <td>172</td>\n",
              "      <td>1.2</td>\n",
              "      <td>3.2</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.56</td>\n",
              "      <td>3.32</td>\n",
              "      <td>3.44</td>\n",
              "      <td>3.56</td>\n",
              "      <td>3.68</td>\n",
              "      <td>17.56</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>50 rows × 22 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-837f2a13-39c9-4f31-9e4b-d3b97a60a2ef')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-837f2a13-39c9-4f31-9e4b-d3b97a60a2ef button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-837f2a13-39c9-4f31-9e4b-d3b97a60a2ef');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-a1a7a0f0-171b-4768-b3f8-1b706311197f\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-a1a7a0f0-171b-4768-b3f8-1b706311197f')\"\n",
              "            title=\"Suggest charts.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-a1a7a0f0-171b-4768-b3f8-1b706311197f button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 48
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "Top50 = rawdfgw228x.nlargest(50, '5GW Total')\n",
        "Top50"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "id": "Vuuihhw-Jx7s",
        "outputId": "f0cffafd-f479-4407-e582-d09182aeab15"
      },
      "execution_count": 50,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "      id               team pos             name  cost  selected_by_percent  \\\n",
              "74   355    Manchester City   F          Haaland  14.1                 92.3   \n",
              "163  108          Brentford   M           Mbeumo   6.9                 30.0   \n",
              "292  308          Liverpool   M            Salah  12.5                 28.1   \n",
              "115   19            Arsenal   M             Saka   8.7                 64.9   \n",
              "346  373  Manchester United   M      B.Fernandes   8.4                 19.8   \n",
              "34   211            Chelsea   F        N.Jackson   7.0                 13.8   \n",
              "248  226     Crystal Palace   M              Eze   6.3                  8.9   \n",
              "414  504          Tottenham   M         Maddison   7.9                 31.1   \n",
              "73   343    Manchester City   F        J.Alvarez   6.9                 25.0   \n",
              "355  396  Manchester United   M         Rashford   8.9                 33.2   \n",
              "12   119          Brentford   F            Wissa   6.1                 13.7   \n",
              "422  526           West Ham   M            Bowen   7.1                  9.4   \n",
              "290  303          Liverpool   M        Luis Díaz   7.7                 11.4   \n",
              "340  365    Manchester City   M          Rodrigo   5.7                 12.2   \n",
              "39   225     Crystal Palace   F          Edouard   5.6                  5.1   \n",
              "125   43        Aston Villa   M     Douglas Luiz   5.4                  2.0   \n",
              "112   14            Arsenal   M         Ødegaard   8.5                 21.4   \n",
              "15   132           Brighton   F         Ferguson   6.0                  8.4   \n",
              "230  199            Chelsea   M             Enzo   5.0                  3.8   \n",
              "235  216            Chelsea   M         Sterling   7.2                 15.3   \n",
              "184  143           Brighton   M           Mitoma   6.5                 40.0   \n",
              "599  342    Manchester City   D              Aké   5.1                  7.7   \n",
              "606  369    Manchester City   D           Walker   5.2                 12.7   \n",
              "53   293          Liverpool   F           Darwin   7.4                 11.4   \n",
              "419  516          Tottenham   M              Son   9.1                 15.0   \n",
              "601  350    Manchester City   D            Rúben   5.5                  8.6   \n",
              "607  616    Manchester City   D         Gvardiol   5.1                  5.6   \n",
              "5     60        Aston Villa   F          Watkins   7.9                 18.7   \n",
              "258  249            Everton   M       A.Doucoure   5.5                  0.2   \n",
              "427  539           West Ham   M        L.Paquetá   6.0                  1.8   \n",
              "182  140           Brighton   M            March   6.5                  8.6   \n",
              "417  513          Tottenham   M             Sarr   4.6                  3.4   \n",
              "121   34        Aston Villa   M           Bailey   5.5                  1.6   \n",
              "134  599        Aston Villa   M            Diaby   6.6                 10.6   \n",
              "334  353    Manchester City   M            Foden   7.6                 12.8   \n",
              "365  412   Newcastle United   M           Gordon   5.5                  2.0   \n",
              "265  601            Everton   M          Danjuma   5.5                  0.2   \n",
              "347  376  Manchester United   M         Casemiro   5.4                  3.7   \n",
              "431  664           West Ham   M      Ward-Prowse   6.2                  9.2   \n",
              "16   135           Brighton   F       João Pedro   5.4                 12.2   \n",
              "179  134           Brighton   M            Gross   6.3                  3.2   \n",
              "598  341    Manchester City   D           Akanji   5.0                  8.3   \n",
              "602  357    Manchester City   D          Laporte   4.9                  0.1   \n",
              "2     13            Arsenal   F          Nketiah   5.6                  6.1   \n",
              "9     85        Bournemouth   F          Solanke   6.5                  2.4   \n",
              "273  270             Fulham   M  De Cordova-Reid   5.5                  0.2   \n",
              "330  344    Manchester City   M         Bernardo   6.4                  1.9   \n",
              "604  366    Manchester City   D     Sergio Gómez   3.9                  1.1   \n",
              "78   415   Newcastle United   F             Isak   7.6                 24.4   \n",
              "376  603   Newcastle United   M           Barnes   6.4                  2.6   \n",
              "\n",
              "     goals_scored  assists  bps  ict_index  ...  minutes  home_adjustment  \\\n",
              "74              7        1  176       71.8  ...      439              1.3   \n",
              "163             4        0   93       45.3  ...      450              1.1   \n",
              "292             2        4  110       57.6  ...      431              1.2   \n",
              "115             2        2  120       57.8  ...      448              1.2   \n",
              "346             1        1   83       45.4  ...      450              1.1   \n",
              "34              1        0   27       34.6  ...      442              1.1   \n",
              "248             1        0   78       48.7  ...      450              1.0   \n",
              "414             2        2  121       60.7  ...      427              1.0   \n",
              "73              2        5  153       53.5  ...      449              1.3   \n",
              "355             1        2   50       37.5  ...      441              1.1   \n",
              "12              2        1   71       32.8  ...      419              1.1   \n",
              "422             3        1   96       39.5  ...      450              1.0   \n",
              "290             2        0   57       29.4  ...      302              1.2   \n",
              "340             2        1  124       42.4  ...      435              1.3   \n",
              "39              4        0  112       50.8  ...      428              1.0   \n",
              "125             2        0  112       28.7  ...      399              1.1   \n",
              "112             2        0   89       36.6  ...      442              1.2   \n",
              "15              4        0  104       35.3  ...      210              1.1   \n",
              "230             0        0   52       34.2  ...      440              1.1   \n",
              "235             2        1   85       45.2  ...      440              1.1   \n",
              "184             1        3   89       47.2  ...      440              1.1   \n",
              "599             1        0   77       12.1  ...      259              1.3   \n",
              "606             0        0  105       20.0  ...      450              1.3   \n",
              "53              2        2   72       19.6  ...      139              1.2   \n",
              "419             3        0  106       41.8  ...      404              1.0   \n",
              "601             0        0   65       13.1  ...      360              1.3   \n",
              "607             0        0   60       12.6  ...      281              1.3   \n",
              "5               0        4   48       32.9  ...      410              1.1   \n",
              "258             1        0   58       36.2  ...      439              0.9   \n",
              "427             1        1   78       29.3  ...      444              1.0   \n",
              "182             3        0   85       35.5  ...      314              1.1   \n",
              "417             1        1   74       34.8  ...      294              1.0   \n",
              "121             2        1   66       19.0  ...      186              1.1   \n",
              "134             2        2  102       37.4  ...      401              1.1   \n",
              "334             0        3   89       41.1  ...      339              1.3   \n",
              "365             1        2   60       23.1  ...      373              1.2   \n",
              "265             1        0   29       26.5  ...      340              0.9   \n",
              "347             1        0   72       27.5  ...      423              1.1   \n",
              "431             2        3  113       33.1  ...      350              1.0   \n",
              "16              2        0   69       33.5  ...      252              1.1   \n",
              "179             2        0  112       50.0  ...      438              1.1   \n",
              "598             0        0   85       13.8  ...      360              1.3   \n",
              "602             0        0    4        2.9  ...       11              1.3   \n",
              "2               2        1   67       25.0  ...      335              1.2   \n",
              "9               2        1   60       36.8  ...      450              0.8   \n",
              "273             1        1   46       17.0  ...      281              0.9   \n",
              "330             1        1   76       25.6  ...      284              1.3   \n",
              "604             0        1   17        3.8  ...       15              1.3   \n",
              "78              2        0   70       19.3  ...      276              1.2   \n",
              "376             1        1   45       14.0  ...      172              1.2   \n",
              "\n",
              "     xPallgw  xCSP    gw7   gw9   gw8  gw10    gw6  5GW Total  \n",
              "74       7.8   NaN  10.70  8.96  8.38  8.96  10.70      47.70  \n",
              "163      6.7   NaN   8.11  7.64  6.70  6.70   7.64      36.79  \n",
              "292      6.0   NaN   6.80  7.20  6.00  7.60   6.80      34.40  \n",
              "115      5.2   NaN   6.16  5.52  4.88  6.48   5.84      28.88  \n",
              "346      5.4   NaN   5.74  6.42  5.40  4.72   6.08      28.36  \n",
              "34       5.0   NaN   5.30  4.70  5.60  5.00   5.00      25.60  \n",
              "248      4.9   NaN   4.61  4.61  5.48  4.90   5.19      24.79  \n",
              "414      5.0   NaN   4.40  5.30  5.60  5.00   4.40      24.70  \n",
              "73       4.2   NaN   5.30  4.64  4.42  4.64   5.30      24.30  \n",
              "355      4.6   NaN   4.86  5.38  4.60  4.08   5.12      24.04  \n",
              "12       4.3   NaN   4.99  4.76  4.30  4.30   4.76      23.11  \n",
              "422      4.7   NaN   5.24  4.43  4.16  4.97   4.16      22.96  \n",
              "290      4.1   NaN   4.52  4.73  4.10  4.94   4.52      22.81  \n",
              "340      3.9   NaN   4.85  4.28  4.09  4.28   4.85      22.35  \n",
              "39       4.4   NaN   4.16  4.16  4.88  4.40   4.64      22.24  \n",
              "125      4.1   NaN   4.10  4.31  4.73  4.73   4.10      21.97  \n",
              "112      4.0   NaN   4.60  4.20  3.80  4.80   4.40      21.80  \n",
              "15       4.2   NaN   4.20  3.76  4.20  4.64   4.86      21.66  \n",
              "230      4.2   NaN   4.42  3.98  4.64  4.20   4.20      21.44  \n",
              "235      4.2   NaN   4.42  3.98  4.64  4.20   4.20      21.44  \n",
              "184      4.1   NaN   4.10  3.68  4.10  4.52   4.73      21.13  \n",
              "599      3.7   1.1   4.55  4.04  3.87  4.04   4.55      21.05  \n",
              "606      3.6   1.1   4.40  3.92  3.76  3.92   4.40      20.40  \n",
              "53       3.7   NaN   4.04  4.21  3.70  4.38   4.04      20.37  \n",
              "419      4.0   NaN   3.60  4.20  4.40  4.00   3.60      19.80  \n",
              "601      3.5   1.1   4.25  3.80  3.65  3.80   4.25      19.75  \n",
              "607      3.5   1.1   4.25  3.80  3.65  3.80   4.25      19.75  \n",
              "5        3.7   NaN   3.70  3.87  4.21  4.21   3.70      19.69  \n",
              "258      4.1   NaN   4.31  3.47  4.31  3.89   3.68      19.66  \n",
              "427      4.0   NaN   4.40  3.80  3.60  4.20   3.60      19.60  \n",
              "182      3.8   NaN   3.80  3.44  3.80  4.16   4.34      19.54  \n",
              "417      3.9   NaN   3.52  4.09  4.28  3.90   3.52      19.31  \n",
              "121      3.6   NaN   3.60  3.76  4.08  4.08   3.60      19.12  \n",
              "134      3.6   NaN   3.60  3.76  4.08  4.08   3.60      19.12  \n",
              "334      3.4   NaN   4.10  3.68  3.54  3.68   4.10      19.10  \n",
              "365      3.4   NaN   3.82  3.54  3.68  3.82   3.96      18.82  \n",
              "265      3.9   NaN   4.09  3.33  4.09  3.71   3.52      18.74  \n",
              "347      3.6   NaN   3.76  4.08  3.60  3.28   3.92      18.64  \n",
              "431      3.8   NaN   4.16  3.62  3.44  3.98   3.44      18.64  \n",
              "16       3.6   NaN   3.60  3.28  3.60  3.92   4.08      18.48  \n",
              "179      3.6   NaN   3.60  3.28  3.60  3.92   4.08      18.48  \n",
              "598      3.3   1.1   3.95  3.56  3.43  3.56   3.95      18.45  \n",
              "602      3.3   1.1   3.95  3.56  3.43  3.56   3.95      18.45  \n",
              "2        3.4   NaN   3.82  3.54  3.26  3.96   3.68      18.26  \n",
              "9        3.9   NaN   3.33  3.90  3.71  3.90   3.33      18.17  \n",
              "273      3.7   NaN   3.53  3.53  4.04  3.36   3.53      17.99  \n",
              "330      3.2   NaN   3.80  3.44  3.32  3.44   3.80      17.80  \n",
              "604      3.2   1.1   3.80  3.44  3.32  3.44   3.80      17.80  \n",
              "78       3.2   NaN   3.56  3.32  3.44  3.56   3.68      17.56  \n",
              "376      3.2   NaN   3.56  3.32  3.44  3.56   3.68      17.56  \n",
              "\n",
              "[50 rows x 22 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-2625556d-910f-421f-a0cd-5cd1856663ce\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>team</th>\n",
              "      <th>pos</th>\n",
              "      <th>name</th>\n",
              "      <th>cost</th>\n",
              "      <th>selected_by_percent</th>\n",
              "      <th>goals_scored</th>\n",
              "      <th>assists</th>\n",
              "      <th>bps</th>\n",
              "      <th>ict_index</th>\n",
              "      <th>...</th>\n",
              "      <th>minutes</th>\n",
              "      <th>home_adjustment</th>\n",
              "      <th>xPallgw</th>\n",
              "      <th>xCSP</th>\n",
              "      <th>gw7</th>\n",
              "      <th>gw9</th>\n",
              "      <th>gw8</th>\n",
              "      <th>gw10</th>\n",
              "      <th>gw6</th>\n",
              "      <th>5GW Total</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>74</th>\n",
              "      <td>355</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>F</td>\n",
              "      <td>Haaland</td>\n",
              "      <td>14.1</td>\n",
              "      <td>92.3</td>\n",
              "      <td>7</td>\n",
              "      <td>1</td>\n",
              "      <td>176</td>\n",
              "      <td>71.8</td>\n",
              "      <td>...</td>\n",
              "      <td>439</td>\n",
              "      <td>1.3</td>\n",
              "      <td>7.8</td>\n",
              "      <td>NaN</td>\n",
              "      <td>10.70</td>\n",
              "      <td>8.96</td>\n",
              "      <td>8.38</td>\n",
              "      <td>8.96</td>\n",
              "      <td>10.70</td>\n",
              "      <td>47.70</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>163</th>\n",
              "      <td>108</td>\n",
              "      <td>Brentford</td>\n",
              "      <td>M</td>\n",
              "      <td>Mbeumo</td>\n",
              "      <td>6.9</td>\n",
              "      <td>30.0</td>\n",
              "      <td>4</td>\n",
              "      <td>0</td>\n",
              "      <td>93</td>\n",
              "      <td>45.3</td>\n",
              "      <td>...</td>\n",
              "      <td>450</td>\n",
              "      <td>1.1</td>\n",
              "      <td>6.7</td>\n",
              "      <td>NaN</td>\n",
              "      <td>8.11</td>\n",
              "      <td>7.64</td>\n",
              "      <td>6.70</td>\n",
              "      <td>6.70</td>\n",
              "      <td>7.64</td>\n",
              "      <td>36.79</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>292</th>\n",
              "      <td>308</td>\n",
              "      <td>Liverpool</td>\n",
              "      <td>M</td>\n",
              "      <td>Salah</td>\n",
              "      <td>12.5</td>\n",
              "      <td>28.1</td>\n",
              "      <td>2</td>\n",
              "      <td>4</td>\n",
              "      <td>110</td>\n",
              "      <td>57.6</td>\n",
              "      <td>...</td>\n",
              "      <td>431</td>\n",
              "      <td>1.2</td>\n",
              "      <td>6.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>6.80</td>\n",
              "      <td>7.20</td>\n",
              "      <td>6.00</td>\n",
              "      <td>7.60</td>\n",
              "      <td>6.80</td>\n",
              "      <td>34.40</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>115</th>\n",
              "      <td>19</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>M</td>\n",
              "      <td>Saka</td>\n",
              "      <td>8.7</td>\n",
              "      <td>64.9</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>120</td>\n",
              "      <td>57.8</td>\n",
              "      <td>...</td>\n",
              "      <td>448</td>\n",
              "      <td>1.2</td>\n",
              "      <td>5.2</td>\n",
              "      <td>NaN</td>\n",
              "      <td>6.16</td>\n",
              "      <td>5.52</td>\n",
              "      <td>4.88</td>\n",
              "      <td>6.48</td>\n",
              "      <td>5.84</td>\n",
              "      <td>28.88</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>346</th>\n",
              "      <td>373</td>\n",
              "      <td>Manchester United</td>\n",
              "      <td>M</td>\n",
              "      <td>B.Fernandes</td>\n",
              "      <td>8.4</td>\n",
              "      <td>19.8</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>83</td>\n",
              "      <td>45.4</td>\n",
              "      <td>...</td>\n",
              "      <td>450</td>\n",
              "      <td>1.1</td>\n",
              "      <td>5.4</td>\n",
              "      <td>NaN</td>\n",
              "      <td>5.74</td>\n",
              "      <td>6.42</td>\n",
              "      <td>5.40</td>\n",
              "      <td>4.72</td>\n",
              "      <td>6.08</td>\n",
              "      <td>28.36</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>34</th>\n",
              "      <td>211</td>\n",
              "      <td>Chelsea</td>\n",
              "      <td>F</td>\n",
              "      <td>N.Jackson</td>\n",
              "      <td>7.0</td>\n",
              "      <td>13.8</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>27</td>\n",
              "      <td>34.6</td>\n",
              "      <td>...</td>\n",
              "      <td>442</td>\n",
              "      <td>1.1</td>\n",
              "      <td>5.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>5.30</td>\n",
              "      <td>4.70</td>\n",
              "      <td>5.60</td>\n",
              "      <td>5.00</td>\n",
              "      <td>5.00</td>\n",
              "      <td>25.60</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>248</th>\n",
              "      <td>226</td>\n",
              "      <td>Crystal Palace</td>\n",
              "      <td>M</td>\n",
              "      <td>Eze</td>\n",
              "      <td>6.3</td>\n",
              "      <td>8.9</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>78</td>\n",
              "      <td>48.7</td>\n",
              "      <td>...</td>\n",
              "      <td>450</td>\n",
              "      <td>1.0</td>\n",
              "      <td>4.9</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4.61</td>\n",
              "      <td>4.61</td>\n",
              "      <td>5.48</td>\n",
              "      <td>4.90</td>\n",
              "      <td>5.19</td>\n",
              "      <td>24.79</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>414</th>\n",
              "      <td>504</td>\n",
              "      <td>Tottenham</td>\n",
              "      <td>M</td>\n",
              "      <td>Maddison</td>\n",
              "      <td>7.9</td>\n",
              "      <td>31.1</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>121</td>\n",
              "      <td>60.7</td>\n",
              "      <td>...</td>\n",
              "      <td>427</td>\n",
              "      <td>1.0</td>\n",
              "      <td>5.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4.40</td>\n",
              "      <td>5.30</td>\n",
              "      <td>5.60</td>\n",
              "      <td>5.00</td>\n",
              "      <td>4.40</td>\n",
              "      <td>24.70</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>73</th>\n",
              "      <td>343</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>F</td>\n",
              "      <td>J.Alvarez</td>\n",
              "      <td>6.9</td>\n",
              "      <td>25.0</td>\n",
              "      <td>2</td>\n",
              "      <td>5</td>\n",
              "      <td>153</td>\n",
              "      <td>53.5</td>\n",
              "      <td>...</td>\n",
              "      <td>449</td>\n",
              "      <td>1.3</td>\n",
              "      <td>4.2</td>\n",
              "      <td>NaN</td>\n",
              "      <td>5.30</td>\n",
              "      <td>4.64</td>\n",
              "      <td>4.42</td>\n",
              "      <td>4.64</td>\n",
              "      <td>5.30</td>\n",
              "      <td>24.30</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>355</th>\n",
              "      <td>396</td>\n",
              "      <td>Manchester United</td>\n",
              "      <td>M</td>\n",
              "      <td>Rashford</td>\n",
              "      <td>8.9</td>\n",
              "      <td>33.2</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>50</td>\n",
              "      <td>37.5</td>\n",
              "      <td>...</td>\n",
              "      <td>441</td>\n",
              "      <td>1.1</td>\n",
              "      <td>4.6</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4.86</td>\n",
              "      <td>5.38</td>\n",
              "      <td>4.60</td>\n",
              "      <td>4.08</td>\n",
              "      <td>5.12</td>\n",
              "      <td>24.04</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>12</th>\n",
              "      <td>119</td>\n",
              "      <td>Brentford</td>\n",
              "      <td>F</td>\n",
              "      <td>Wissa</td>\n",
              "      <td>6.1</td>\n",
              "      <td>13.7</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>71</td>\n",
              "      <td>32.8</td>\n",
              "      <td>...</td>\n",
              "      <td>419</td>\n",
              "      <td>1.1</td>\n",
              "      <td>4.3</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4.99</td>\n",
              "      <td>4.76</td>\n",
              "      <td>4.30</td>\n",
              "      <td>4.30</td>\n",
              "      <td>4.76</td>\n",
              "      <td>23.11</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>422</th>\n",
              "      <td>526</td>\n",
              "      <td>West Ham</td>\n",
              "      <td>M</td>\n",
              "      <td>Bowen</td>\n",
              "      <td>7.1</td>\n",
              "      <td>9.4</td>\n",
              "      <td>3</td>\n",
              "      <td>1</td>\n",
              "      <td>96</td>\n",
              "      <td>39.5</td>\n",
              "      <td>...</td>\n",
              "      <td>450</td>\n",
              "      <td>1.0</td>\n",
              "      <td>4.7</td>\n",
              "      <td>NaN</td>\n",
              "      <td>5.24</td>\n",
              "      <td>4.43</td>\n",
              "      <td>4.16</td>\n",
              "      <td>4.97</td>\n",
              "      <td>4.16</td>\n",
              "      <td>22.96</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>290</th>\n",
              "      <td>303</td>\n",
              "      <td>Liverpool</td>\n",
              "      <td>M</td>\n",
              "      <td>Luis Díaz</td>\n",
              "      <td>7.7</td>\n",
              "      <td>11.4</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>57</td>\n",
              "      <td>29.4</td>\n",
              "      <td>...</td>\n",
              "      <td>302</td>\n",
              "      <td>1.2</td>\n",
              "      <td>4.1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4.52</td>\n",
              "      <td>4.73</td>\n",
              "      <td>4.10</td>\n",
              "      <td>4.94</td>\n",
              "      <td>4.52</td>\n",
              "      <td>22.81</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>340</th>\n",
              "      <td>365</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>M</td>\n",
              "      <td>Rodrigo</td>\n",
              "      <td>5.7</td>\n",
              "      <td>12.2</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>124</td>\n",
              "      <td>42.4</td>\n",
              "      <td>...</td>\n",
              "      <td>435</td>\n",
              "      <td>1.3</td>\n",
              "      <td>3.9</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4.85</td>\n",
              "      <td>4.28</td>\n",
              "      <td>4.09</td>\n",
              "      <td>4.28</td>\n",
              "      <td>4.85</td>\n",
              "      <td>22.35</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>39</th>\n",
              "      <td>225</td>\n",
              "      <td>Crystal Palace</td>\n",
              "      <td>F</td>\n",
              "      <td>Edouard</td>\n",
              "      <td>5.6</td>\n",
              "      <td>5.1</td>\n",
              "      <td>4</td>\n",
              "      <td>0</td>\n",
              "      <td>112</td>\n",
              "      <td>50.8</td>\n",
              "      <td>...</td>\n",
              "      <td>428</td>\n",
              "      <td>1.0</td>\n",
              "      <td>4.4</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4.16</td>\n",
              "      <td>4.16</td>\n",
              "      <td>4.88</td>\n",
              "      <td>4.40</td>\n",
              "      <td>4.64</td>\n",
              "      <td>22.24</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>125</th>\n",
              "      <td>43</td>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>M</td>\n",
              "      <td>Douglas Luiz</td>\n",
              "      <td>5.4</td>\n",
              "      <td>2.0</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>112</td>\n",
              "      <td>28.7</td>\n",
              "      <td>...</td>\n",
              "      <td>399</td>\n",
              "      <td>1.1</td>\n",
              "      <td>4.1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4.10</td>\n",
              "      <td>4.31</td>\n",
              "      <td>4.73</td>\n",
              "      <td>4.73</td>\n",
              "      <td>4.10</td>\n",
              "      <td>21.97</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>112</th>\n",
              "      <td>14</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>M</td>\n",
              "      <td>Ødegaard</td>\n",
              "      <td>8.5</td>\n",
              "      <td>21.4</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>89</td>\n",
              "      <td>36.6</td>\n",
              "      <td>...</td>\n",
              "      <td>442</td>\n",
              "      <td>1.2</td>\n",
              "      <td>4.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4.60</td>\n",
              "      <td>4.20</td>\n",
              "      <td>3.80</td>\n",
              "      <td>4.80</td>\n",
              "      <td>4.40</td>\n",
              "      <td>21.80</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>15</th>\n",
              "      <td>132</td>\n",
              "      <td>Brighton</td>\n",
              "      <td>F</td>\n",
              "      <td>Ferguson</td>\n",
              "      <td>6.0</td>\n",
              "      <td>8.4</td>\n",
              "      <td>4</td>\n",
              "      <td>0</td>\n",
              "      <td>104</td>\n",
              "      <td>35.3</td>\n",
              "      <td>...</td>\n",
              "      <td>210</td>\n",
              "      <td>1.1</td>\n",
              "      <td>4.2</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4.20</td>\n",
              "      <td>3.76</td>\n",
              "      <td>4.20</td>\n",
              "      <td>4.64</td>\n",
              "      <td>4.86</td>\n",
              "      <td>21.66</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>230</th>\n",
              "      <td>199</td>\n",
              "      <td>Chelsea</td>\n",
              "      <td>M</td>\n",
              "      <td>Enzo</td>\n",
              "      <td>5.0</td>\n",
              "      <td>3.8</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>52</td>\n",
              "      <td>34.2</td>\n",
              "      <td>...</td>\n",
              "      <td>440</td>\n",
              "      <td>1.1</td>\n",
              "      <td>4.2</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4.42</td>\n",
              "      <td>3.98</td>\n",
              "      <td>4.64</td>\n",
              "      <td>4.20</td>\n",
              "      <td>4.20</td>\n",
              "      <td>21.44</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>235</th>\n",
              "      <td>216</td>\n",
              "      <td>Chelsea</td>\n",
              "      <td>M</td>\n",
              "      <td>Sterling</td>\n",
              "      <td>7.2</td>\n",
              "      <td>15.3</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>85</td>\n",
              "      <td>45.2</td>\n",
              "      <td>...</td>\n",
              "      <td>440</td>\n",
              "      <td>1.1</td>\n",
              "      <td>4.2</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4.42</td>\n",
              "      <td>3.98</td>\n",
              "      <td>4.64</td>\n",
              "      <td>4.20</td>\n",
              "      <td>4.20</td>\n",
              "      <td>21.44</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>184</th>\n",
              "      <td>143</td>\n",
              "      <td>Brighton</td>\n",
              "      <td>M</td>\n",
              "      <td>Mitoma</td>\n",
              "      <td>6.5</td>\n",
              "      <td>40.0</td>\n",
              "      <td>1</td>\n",
              "      <td>3</td>\n",
              "      <td>89</td>\n",
              "      <td>47.2</td>\n",
              "      <td>...</td>\n",
              "      <td>440</td>\n",
              "      <td>1.1</td>\n",
              "      <td>4.1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4.10</td>\n",
              "      <td>3.68</td>\n",
              "      <td>4.10</td>\n",
              "      <td>4.52</td>\n",
              "      <td>4.73</td>\n",
              "      <td>21.13</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>599</th>\n",
              "      <td>342</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>D</td>\n",
              "      <td>Aké</td>\n",
              "      <td>5.1</td>\n",
              "      <td>7.7</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>77</td>\n",
              "      <td>12.1</td>\n",
              "      <td>...</td>\n",
              "      <td>259</td>\n",
              "      <td>1.3</td>\n",
              "      <td>3.7</td>\n",
              "      <td>1.1</td>\n",
              "      <td>4.55</td>\n",
              "      <td>4.04</td>\n",
              "      <td>3.87</td>\n",
              "      <td>4.04</td>\n",
              "      <td>4.55</td>\n",
              "      <td>21.05</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>606</th>\n",
              "      <td>369</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>D</td>\n",
              "      <td>Walker</td>\n",
              "      <td>5.2</td>\n",
              "      <td>12.7</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>105</td>\n",
              "      <td>20.0</td>\n",
              "      <td>...</td>\n",
              "      <td>450</td>\n",
              "      <td>1.3</td>\n",
              "      <td>3.6</td>\n",
              "      <td>1.1</td>\n",
              "      <td>4.40</td>\n",
              "      <td>3.92</td>\n",
              "      <td>3.76</td>\n",
              "      <td>3.92</td>\n",
              "      <td>4.40</td>\n",
              "      <td>20.40</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>53</th>\n",
              "      <td>293</td>\n",
              "      <td>Liverpool</td>\n",
              "      <td>F</td>\n",
              "      <td>Darwin</td>\n",
              "      <td>7.4</td>\n",
              "      <td>11.4</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>72</td>\n",
              "      <td>19.6</td>\n",
              "      <td>...</td>\n",
              "      <td>139</td>\n",
              "      <td>1.2</td>\n",
              "      <td>3.7</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4.04</td>\n",
              "      <td>4.21</td>\n",
              "      <td>3.70</td>\n",
              "      <td>4.38</td>\n",
              "      <td>4.04</td>\n",
              "      <td>20.37</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>419</th>\n",
              "      <td>516</td>\n",
              "      <td>Tottenham</td>\n",
              "      <td>M</td>\n",
              "      <td>Son</td>\n",
              "      <td>9.1</td>\n",
              "      <td>15.0</td>\n",
              "      <td>3</td>\n",
              "      <td>0</td>\n",
              "      <td>106</td>\n",
              "      <td>41.8</td>\n",
              "      <td>...</td>\n",
              "      <td>404</td>\n",
              "      <td>1.0</td>\n",
              "      <td>4.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.60</td>\n",
              "      <td>4.20</td>\n",
              "      <td>4.40</td>\n",
              "      <td>4.00</td>\n",
              "      <td>3.60</td>\n",
              "      <td>19.80</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>601</th>\n",
              "      <td>350</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>D</td>\n",
              "      <td>Rúben</td>\n",
              "      <td>5.5</td>\n",
              "      <td>8.6</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>65</td>\n",
              "      <td>13.1</td>\n",
              "      <td>...</td>\n",
              "      <td>360</td>\n",
              "      <td>1.3</td>\n",
              "      <td>3.5</td>\n",
              "      <td>1.1</td>\n",
              "      <td>4.25</td>\n",
              "      <td>3.80</td>\n",
              "      <td>3.65</td>\n",
              "      <td>3.80</td>\n",
              "      <td>4.25</td>\n",
              "      <td>19.75</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>607</th>\n",
              "      <td>616</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>D</td>\n",
              "      <td>Gvardiol</td>\n",
              "      <td>5.1</td>\n",
              "      <td>5.6</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>60</td>\n",
              "      <td>12.6</td>\n",
              "      <td>...</td>\n",
              "      <td>281</td>\n",
              "      <td>1.3</td>\n",
              "      <td>3.5</td>\n",
              "      <td>1.1</td>\n",
              "      <td>4.25</td>\n",
              "      <td>3.80</td>\n",
              "      <td>3.65</td>\n",
              "      <td>3.80</td>\n",
              "      <td>4.25</td>\n",
              "      <td>19.75</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>60</td>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>F</td>\n",
              "      <td>Watkins</td>\n",
              "      <td>7.9</td>\n",
              "      <td>18.7</td>\n",
              "      <td>0</td>\n",
              "      <td>4</td>\n",
              "      <td>48</td>\n",
              "      <td>32.9</td>\n",
              "      <td>...</td>\n",
              "      <td>410</td>\n",
              "      <td>1.1</td>\n",
              "      <td>3.7</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.70</td>\n",
              "      <td>3.87</td>\n",
              "      <td>4.21</td>\n",
              "      <td>4.21</td>\n",
              "      <td>3.70</td>\n",
              "      <td>19.69</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>258</th>\n",
              "      <td>249</td>\n",
              "      <td>Everton</td>\n",
              "      <td>M</td>\n",
              "      <td>A.Doucoure</td>\n",
              "      <td>5.5</td>\n",
              "      <td>0.2</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>58</td>\n",
              "      <td>36.2</td>\n",
              "      <td>...</td>\n",
              "      <td>439</td>\n",
              "      <td>0.9</td>\n",
              "      <td>4.1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4.31</td>\n",
              "      <td>3.47</td>\n",
              "      <td>4.31</td>\n",
              "      <td>3.89</td>\n",
              "      <td>3.68</td>\n",
              "      <td>19.66</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>427</th>\n",
              "      <td>539</td>\n",
              "      <td>West Ham</td>\n",
              "      <td>M</td>\n",
              "      <td>L.Paquetá</td>\n",
              "      <td>6.0</td>\n",
              "      <td>1.8</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>78</td>\n",
              "      <td>29.3</td>\n",
              "      <td>...</td>\n",
              "      <td>444</td>\n",
              "      <td>1.0</td>\n",
              "      <td>4.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4.40</td>\n",
              "      <td>3.80</td>\n",
              "      <td>3.60</td>\n",
              "      <td>4.20</td>\n",
              "      <td>3.60</td>\n",
              "      <td>19.60</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>182</th>\n",
              "      <td>140</td>\n",
              "      <td>Brighton</td>\n",
              "      <td>M</td>\n",
              "      <td>March</td>\n",
              "      <td>6.5</td>\n",
              "      <td>8.6</td>\n",
              "      <td>3</td>\n",
              "      <td>0</td>\n",
              "      <td>85</td>\n",
              "      <td>35.5</td>\n",
              "      <td>...</td>\n",
              "      <td>314</td>\n",
              "      <td>1.1</td>\n",
              "      <td>3.8</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.80</td>\n",
              "      <td>3.44</td>\n",
              "      <td>3.80</td>\n",
              "      <td>4.16</td>\n",
              "      <td>4.34</td>\n",
              "      <td>19.54</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>417</th>\n",
              "      <td>513</td>\n",
              "      <td>Tottenham</td>\n",
              "      <td>M</td>\n",
              "      <td>Sarr</td>\n",
              "      <td>4.6</td>\n",
              "      <td>3.4</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>74</td>\n",
              "      <td>34.8</td>\n",
              "      <td>...</td>\n",
              "      <td>294</td>\n",
              "      <td>1.0</td>\n",
              "      <td>3.9</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.52</td>\n",
              "      <td>4.09</td>\n",
              "      <td>4.28</td>\n",
              "      <td>3.90</td>\n",
              "      <td>3.52</td>\n",
              "      <td>19.31</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>121</th>\n",
              "      <td>34</td>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>M</td>\n",
              "      <td>Bailey</td>\n",
              "      <td>5.5</td>\n",
              "      <td>1.6</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>66</td>\n",
              "      <td>19.0</td>\n",
              "      <td>...</td>\n",
              "      <td>186</td>\n",
              "      <td>1.1</td>\n",
              "      <td>3.6</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.60</td>\n",
              "      <td>3.76</td>\n",
              "      <td>4.08</td>\n",
              "      <td>4.08</td>\n",
              "      <td>3.60</td>\n",
              "      <td>19.12</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>134</th>\n",
              "      <td>599</td>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>M</td>\n",
              "      <td>Diaby</td>\n",
              "      <td>6.6</td>\n",
              "      <td>10.6</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>102</td>\n",
              "      <td>37.4</td>\n",
              "      <td>...</td>\n",
              "      <td>401</td>\n",
              "      <td>1.1</td>\n",
              "      <td>3.6</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.60</td>\n",
              "      <td>3.76</td>\n",
              "      <td>4.08</td>\n",
              "      <td>4.08</td>\n",
              "      <td>3.60</td>\n",
              "      <td>19.12</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>334</th>\n",
              "      <td>353</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>M</td>\n",
              "      <td>Foden</td>\n",
              "      <td>7.6</td>\n",
              "      <td>12.8</td>\n",
              "      <td>0</td>\n",
              "      <td>3</td>\n",
              "      <td>89</td>\n",
              "      <td>41.1</td>\n",
              "      <td>...</td>\n",
              "      <td>339</td>\n",
              "      <td>1.3</td>\n",
              "      <td>3.4</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4.10</td>\n",
              "      <td>3.68</td>\n",
              "      <td>3.54</td>\n",
              "      <td>3.68</td>\n",
              "      <td>4.10</td>\n",
              "      <td>19.10</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>365</th>\n",
              "      <td>412</td>\n",
              "      <td>Newcastle United</td>\n",
              "      <td>M</td>\n",
              "      <td>Gordon</td>\n",
              "      <td>5.5</td>\n",
              "      <td>2.0</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>60</td>\n",
              "      <td>23.1</td>\n",
              "      <td>...</td>\n",
              "      <td>373</td>\n",
              "      <td>1.2</td>\n",
              "      <td>3.4</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.82</td>\n",
              "      <td>3.54</td>\n",
              "      <td>3.68</td>\n",
              "      <td>3.82</td>\n",
              "      <td>3.96</td>\n",
              "      <td>18.82</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>265</th>\n",
              "      <td>601</td>\n",
              "      <td>Everton</td>\n",
              "      <td>M</td>\n",
              "      <td>Danjuma</td>\n",
              "      <td>5.5</td>\n",
              "      <td>0.2</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>29</td>\n",
              "      <td>26.5</td>\n",
              "      <td>...</td>\n",
              "      <td>340</td>\n",
              "      <td>0.9</td>\n",
              "      <td>3.9</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4.09</td>\n",
              "      <td>3.33</td>\n",
              "      <td>4.09</td>\n",
              "      <td>3.71</td>\n",
              "      <td>3.52</td>\n",
              "      <td>18.74</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>347</th>\n",
              "      <td>376</td>\n",
              "      <td>Manchester United</td>\n",
              "      <td>M</td>\n",
              "      <td>Casemiro</td>\n",
              "      <td>5.4</td>\n",
              "      <td>3.7</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>72</td>\n",
              "      <td>27.5</td>\n",
              "      <td>...</td>\n",
              "      <td>423</td>\n",
              "      <td>1.1</td>\n",
              "      <td>3.6</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.76</td>\n",
              "      <td>4.08</td>\n",
              "      <td>3.60</td>\n",
              "      <td>3.28</td>\n",
              "      <td>3.92</td>\n",
              "      <td>18.64</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>431</th>\n",
              "      <td>664</td>\n",
              "      <td>West Ham</td>\n",
              "      <td>M</td>\n",
              "      <td>Ward-Prowse</td>\n",
              "      <td>6.2</td>\n",
              "      <td>9.2</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "      <td>113</td>\n",
              "      <td>33.1</td>\n",
              "      <td>...</td>\n",
              "      <td>350</td>\n",
              "      <td>1.0</td>\n",
              "      <td>3.8</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4.16</td>\n",
              "      <td>3.62</td>\n",
              "      <td>3.44</td>\n",
              "      <td>3.98</td>\n",
              "      <td>3.44</td>\n",
              "      <td>18.64</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>16</th>\n",
              "      <td>135</td>\n",
              "      <td>Brighton</td>\n",
              "      <td>F</td>\n",
              "      <td>João Pedro</td>\n",
              "      <td>5.4</td>\n",
              "      <td>12.2</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>69</td>\n",
              "      <td>33.5</td>\n",
              "      <td>...</td>\n",
              "      <td>252</td>\n",
              "      <td>1.1</td>\n",
              "      <td>3.6</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.60</td>\n",
              "      <td>3.28</td>\n",
              "      <td>3.60</td>\n",
              "      <td>3.92</td>\n",
              "      <td>4.08</td>\n",
              "      <td>18.48</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>179</th>\n",
              "      <td>134</td>\n",
              "      <td>Brighton</td>\n",
              "      <td>M</td>\n",
              "      <td>Gross</td>\n",
              "      <td>6.3</td>\n",
              "      <td>3.2</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>112</td>\n",
              "      <td>50.0</td>\n",
              "      <td>...</td>\n",
              "      <td>438</td>\n",
              "      <td>1.1</td>\n",
              "      <td>3.6</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.60</td>\n",
              "      <td>3.28</td>\n",
              "      <td>3.60</td>\n",
              "      <td>3.92</td>\n",
              "      <td>4.08</td>\n",
              "      <td>18.48</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>598</th>\n",
              "      <td>341</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>D</td>\n",
              "      <td>Akanji</td>\n",
              "      <td>5.0</td>\n",
              "      <td>8.3</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>85</td>\n",
              "      <td>13.8</td>\n",
              "      <td>...</td>\n",
              "      <td>360</td>\n",
              "      <td>1.3</td>\n",
              "      <td>3.3</td>\n",
              "      <td>1.1</td>\n",
              "      <td>3.95</td>\n",
              "      <td>3.56</td>\n",
              "      <td>3.43</td>\n",
              "      <td>3.56</td>\n",
              "      <td>3.95</td>\n",
              "      <td>18.45</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>602</th>\n",
              "      <td>357</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>D</td>\n",
              "      <td>Laporte</td>\n",
              "      <td>4.9</td>\n",
              "      <td>0.1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>4</td>\n",
              "      <td>2.9</td>\n",
              "      <td>...</td>\n",
              "      <td>11</td>\n",
              "      <td>1.3</td>\n",
              "      <td>3.3</td>\n",
              "      <td>1.1</td>\n",
              "      <td>3.95</td>\n",
              "      <td>3.56</td>\n",
              "      <td>3.43</td>\n",
              "      <td>3.56</td>\n",
              "      <td>3.95</td>\n",
              "      <td>18.45</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>13</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>F</td>\n",
              "      <td>Nketiah</td>\n",
              "      <td>5.6</td>\n",
              "      <td>6.1</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>67</td>\n",
              "      <td>25.0</td>\n",
              "      <td>...</td>\n",
              "      <td>335</td>\n",
              "      <td>1.2</td>\n",
              "      <td>3.4</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.82</td>\n",
              "      <td>3.54</td>\n",
              "      <td>3.26</td>\n",
              "      <td>3.96</td>\n",
              "      <td>3.68</td>\n",
              "      <td>18.26</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>85</td>\n",
              "      <td>Bournemouth</td>\n",
              "      <td>F</td>\n",
              "      <td>Solanke</td>\n",
              "      <td>6.5</td>\n",
              "      <td>2.4</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>60</td>\n",
              "      <td>36.8</td>\n",
              "      <td>...</td>\n",
              "      <td>450</td>\n",
              "      <td>0.8</td>\n",
              "      <td>3.9</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.33</td>\n",
              "      <td>3.90</td>\n",
              "      <td>3.71</td>\n",
              "      <td>3.90</td>\n",
              "      <td>3.33</td>\n",
              "      <td>18.17</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>273</th>\n",
              "      <td>270</td>\n",
              "      <td>Fulham</td>\n",
              "      <td>M</td>\n",
              "      <td>De Cordova-Reid</td>\n",
              "      <td>5.5</td>\n",
              "      <td>0.2</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>46</td>\n",
              "      <td>17.0</td>\n",
              "      <td>...</td>\n",
              "      <td>281</td>\n",
              "      <td>0.9</td>\n",
              "      <td>3.7</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.53</td>\n",
              "      <td>3.53</td>\n",
              "      <td>4.04</td>\n",
              "      <td>3.36</td>\n",
              "      <td>3.53</td>\n",
              "      <td>17.99</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>330</th>\n",
              "      <td>344</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>M</td>\n",
              "      <td>Bernardo</td>\n",
              "      <td>6.4</td>\n",
              "      <td>1.9</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>76</td>\n",
              "      <td>25.6</td>\n",
              "      <td>...</td>\n",
              "      <td>284</td>\n",
              "      <td>1.3</td>\n",
              "      <td>3.2</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.80</td>\n",
              "      <td>3.44</td>\n",
              "      <td>3.32</td>\n",
              "      <td>3.44</td>\n",
              "      <td>3.80</td>\n",
              "      <td>17.80</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>604</th>\n",
              "      <td>366</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>D</td>\n",
              "      <td>Sergio Gómez</td>\n",
              "      <td>3.9</td>\n",
              "      <td>1.1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>17</td>\n",
              "      <td>3.8</td>\n",
              "      <td>...</td>\n",
              "      <td>15</td>\n",
              "      <td>1.3</td>\n",
              "      <td>3.2</td>\n",
              "      <td>1.1</td>\n",
              "      <td>3.80</td>\n",
              "      <td>3.44</td>\n",
              "      <td>3.32</td>\n",
              "      <td>3.44</td>\n",
              "      <td>3.80</td>\n",
              "      <td>17.80</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>78</th>\n",
              "      <td>415</td>\n",
              "      <td>Newcastle United</td>\n",
              "      <td>F</td>\n",
              "      <td>Isak</td>\n",
              "      <td>7.6</td>\n",
              "      <td>24.4</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>70</td>\n",
              "      <td>19.3</td>\n",
              "      <td>...</td>\n",
              "      <td>276</td>\n",
              "      <td>1.2</td>\n",
              "      <td>3.2</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.56</td>\n",
              "      <td>3.32</td>\n",
              "      <td>3.44</td>\n",
              "      <td>3.56</td>\n",
              "      <td>3.68</td>\n",
              "      <td>17.56</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>376</th>\n",
              "      <td>603</td>\n",
              "      <td>Newcastle United</td>\n",
              "      <td>M</td>\n",
              "      <td>Barnes</td>\n",
              "      <td>6.4</td>\n",
              "      <td>2.6</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>45</td>\n",
              "      <td>14.0</td>\n",
              "      <td>...</td>\n",
              "      <td>172</td>\n",
              "      <td>1.2</td>\n",
              "      <td>3.2</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.56</td>\n",
              "      <td>3.32</td>\n",
              "      <td>3.44</td>\n",
              "      <td>3.56</td>\n",
              "      <td>3.68</td>\n",
              "      <td>17.56</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>50 rows × 22 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-2625556d-910f-421f-a0cd-5cd1856663ce')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-2625556d-910f-421f-a0cd-5cd1856663ce button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-2625556d-910f-421f-a0cd-5cd1856663ce');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-02ea41ff-dcb7-4aae-ae34-47b8f262c35b\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-02ea41ff-dcb7-4aae-ae34-47b8f262c35b')\"\n",
              "            title=\"Suggest charts.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-02ea41ff-dcb7-4aae-ae34-47b8f262c35b button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 50
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import matplotlib.pyplot as plt\n",
        "import pandas as pd\n",
        "import numpy as np\n",
        "import string"
      ],
      "metadata": {
        "id": "JSw3vk9PJvps"
      },
      "execution_count": 51,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "fig, ax = plt.subplots(1, figsize=(10,8))\n",
        "ax.scatter(x=Top50['cost'],y=Top50['5GW Total'],c='DarkBlue')\n",
        "# set labels\n",
        "ax.set_xlabel('cost')\n",
        "ax.set_ylabel('5GW Total')\n",
        "\n",
        "# annotate points in axis\n",
        "for idx, row in Top50.iterrows():\n",
        "    ax.annotate(row['name'], (row['cost'], row['5GW Total']) )\n",
        "# force matplotlib to draw the graph\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 696
        },
        "id": "435FV-_ocWOi",
        "outputId": "ab2670f0-97a7-481c-85c7-4b8bff6aa26f"
      },
      "execution_count": 52,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1000x800 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "rawdfgw228x"
      ],
      "metadata": {
        "id": "mQ58vdHpUd8O",
        "outputId": "c03db25a-e9ac-4386-c24b-84e4821adf02",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 530
        }
      },
      "execution_count": 53,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "      id                     team pos     name  cost  selected_by_percent  \\\n",
              "0      1                  Arsenal   F  Balogun   4.4                  0.3   \n",
              "1      8                  Arsenal   F  G.Jesus   7.9                  3.1   \n",
              "2     13                  Arsenal   F  Nketiah   5.6                  6.1   \n",
              "3     39              Aston Villa   F    Davis   4.9                  0.2   \n",
              "4     44              Aston Villa   F    Duran   5.0                  0.2   \n",
              "..   ...                      ...  ..      ...   ...                  ...   \n",
              "794  647                 West Ham   G    Anang   4.0                  0.0   \n",
              "795  546  Wolverhampton Wanderers   G  Bentley   4.0                  0.4   \n",
              "796  564  Wolverhampton Wanderers   G     King   4.0                  0.8   \n",
              "797  569  Wolverhampton Wanderers   G  José Sá   5.0                  1.6   \n",
              "798  571  Wolverhampton Wanderers   G   Šarkić   4.0                  0.4   \n",
              "\n",
              "     goals_scored  assists  bps  ict_index  ...  minutes  home_adjustment  \\\n",
              "0               0        0    0        0.0  ...        0              1.2   \n",
              "1               1        0   25       11.0  ...       39              1.2   \n",
              "2               2        1   67       25.0  ...      335              1.2   \n",
              "3               0        0    0        0.0  ...        0              1.1   \n",
              "4               2        0   56       13.6  ...       56              1.1   \n",
              "..            ...      ...  ...        ...  ...      ...              ...   \n",
              "794             0        0    0        0.0  ...        0              1.0   \n",
              "795             0        0    0        0.0  ...        0              0.8   \n",
              "796             0        0    0        0.0  ...        0              0.8   \n",
              "797             0        0  109       18.5  ...      450              0.8   \n",
              "798             0        0    0        0.0  ...        0              0.8   \n",
              "\n",
              "     xPallgw  xCSP   gw7   gw9   gw8  gw10   gw6  5GW Total  \n",
              "0        2.0   NaN  2.00  2.00  2.00  2.00  2.00      10.00  \n",
              "1        2.7   NaN  2.91  2.77  2.63  2.98  2.84      14.13  \n",
              "2        3.4   NaN  3.82  3.54  3.26  3.96  3.68      18.26  \n",
              "3        2.0   NaN  2.00  2.00  2.00  2.00  2.00      10.00  \n",
              "4        2.6   NaN  2.60  2.66  2.78  2.78  2.60      13.42  \n",
              "..       ...   ...   ...   ...   ...   ...   ...        ...  \n",
              "794     -2.2  -4.2 -3.04 -1.78 -1.36 -2.62 -1.36     -10.16  \n",
              "795     -2.2  -4.2 -0.10 -2.20 -0.94 -0.94 -2.20      -6.38  \n",
              "796     -2.2  -4.2 -0.10 -2.20 -0.94 -0.94 -2.20      -6.38  \n",
              "797     -2.2  -4.2 -0.10 -2.20 -0.94 -0.94 -2.20      -6.38  \n",
              "798     -2.2  -4.2 -0.10 -2.20 -0.94 -0.94 -2.20      -6.38  \n",
              "\n",
              "[696 rows x 22 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-5f088ded-6e57-41a1-90b9-036e0c1dc3b2\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>team</th>\n",
              "      <th>pos</th>\n",
              "      <th>name</th>\n",
              "      <th>cost</th>\n",
              "      <th>selected_by_percent</th>\n",
              "      <th>goals_scored</th>\n",
              "      <th>assists</th>\n",
              "      <th>bps</th>\n",
              "      <th>ict_index</th>\n",
              "      <th>...</th>\n",
              "      <th>minutes</th>\n",
              "      <th>home_adjustment</th>\n",
              "      <th>xPallgw</th>\n",
              "      <th>xCSP</th>\n",
              "      <th>gw7</th>\n",
              "      <th>gw9</th>\n",
              "      <th>gw8</th>\n",
              "      <th>gw10</th>\n",
              "      <th>gw6</th>\n",
              "      <th>5GW Total</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>1</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>F</td>\n",
              "      <td>Balogun</td>\n",
              "      <td>4.4</td>\n",
              "      <td>0.3</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>1.2</td>\n",
              "      <td>2.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>10.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>8</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>F</td>\n",
              "      <td>G.Jesus</td>\n",
              "      <td>7.9</td>\n",
              "      <td>3.1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>25</td>\n",
              "      <td>11.0</td>\n",
              "      <td>...</td>\n",
              "      <td>39</td>\n",
              "      <td>1.2</td>\n",
              "      <td>2.7</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2.91</td>\n",
              "      <td>2.77</td>\n",
              "      <td>2.63</td>\n",
              "      <td>2.98</td>\n",
              "      <td>2.84</td>\n",
              "      <td>14.13</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>13</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>F</td>\n",
              "      <td>Nketiah</td>\n",
              "      <td>5.6</td>\n",
              "      <td>6.1</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>67</td>\n",
              "      <td>25.0</td>\n",
              "      <td>...</td>\n",
              "      <td>335</td>\n",
              "      <td>1.2</td>\n",
              "      <td>3.4</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.82</td>\n",
              "      <td>3.54</td>\n",
              "      <td>3.26</td>\n",
              "      <td>3.96</td>\n",
              "      <td>3.68</td>\n",
              "      <td>18.26</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>39</td>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>F</td>\n",
              "      <td>Davis</td>\n",
              "      <td>4.9</td>\n",
              "      <td>0.2</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>1.1</td>\n",
              "      <td>2.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>10.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>44</td>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>F</td>\n",
              "      <td>Duran</td>\n",
              "      <td>5.0</td>\n",
              "      <td>0.2</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>56</td>\n",
              "      <td>13.6</td>\n",
              "      <td>...</td>\n",
              "      <td>56</td>\n",
              "      <td>1.1</td>\n",
              "      <td>2.6</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2.60</td>\n",
              "      <td>2.66</td>\n",
              "      <td>2.78</td>\n",
              "      <td>2.78</td>\n",
              "      <td>2.60</td>\n",
              "      <td>13.42</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>794</th>\n",
              "      <td>647</td>\n",
              "      <td>West Ham</td>\n",
              "      <td>G</td>\n",
              "      <td>Anang</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>-2.2</td>\n",
              "      <td>-4.2</td>\n",
              "      <td>-3.04</td>\n",
              "      <td>-1.78</td>\n",
              "      <td>-1.36</td>\n",
              "      <td>-2.62</td>\n",
              "      <td>-1.36</td>\n",
              "      <td>-10.16</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>795</th>\n",
              "      <td>546</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>G</td>\n",
              "      <td>Bentley</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.4</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0.8</td>\n",
              "      <td>-2.2</td>\n",
              "      <td>-4.2</td>\n",
              "      <td>-0.10</td>\n",
              "      <td>-2.20</td>\n",
              "      <td>-0.94</td>\n",
              "      <td>-0.94</td>\n",
              "      <td>-2.20</td>\n",
              "      <td>-6.38</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>796</th>\n",
              "      <td>564</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>G</td>\n",
              "      <td>King</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.8</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0.8</td>\n",
              "      <td>-2.2</td>\n",
              "      <td>-4.2</td>\n",
              "      <td>-0.10</td>\n",
              "      <td>-2.20</td>\n",
              "      <td>-0.94</td>\n",
              "      <td>-0.94</td>\n",
              "      <td>-2.20</td>\n",
              "      <td>-6.38</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>797</th>\n",
              "      <td>569</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>G</td>\n",
              "      <td>José Sá</td>\n",
              "      <td>5.0</td>\n",
              "      <td>1.6</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>109</td>\n",
              "      <td>18.5</td>\n",
              "      <td>...</td>\n",
              "      <td>450</td>\n",
              "      <td>0.8</td>\n",
              "      <td>-2.2</td>\n",
              "      <td>-4.2</td>\n",
              "      <td>-0.10</td>\n",
              "      <td>-2.20</td>\n",
              "      <td>-0.94</td>\n",
              "      <td>-0.94</td>\n",
              "      <td>-2.20</td>\n",
              "      <td>-6.38</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>798</th>\n",
              "      <td>571</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>G</td>\n",
              "      <td>Šarkić</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.4</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0.8</td>\n",
              "      <td>-2.2</td>\n",
              "      <td>-4.2</td>\n",
              "      <td>-0.10</td>\n",
              "      <td>-2.20</td>\n",
              "      <td>-0.94</td>\n",
              "      <td>-0.94</td>\n",
              "      <td>-2.20</td>\n",
              "      <td>-6.38</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>696 rows × 22 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-5f088ded-6e57-41a1-90b9-036e0c1dc3b2')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-5f088ded-6e57-41a1-90b9-036e0c1dc3b2 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-5f088ded-6e57-41a1-90b9-036e0c1dc3b2');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-68e4b878-84da-4a25-9de0-4a1a6ff7c871\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-68e4b878-84da-4a25-9de0-4a1a6ff7c871')\"\n",
              "            title=\"Suggest charts.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-68e4b878-84da-4a25-9de0-4a1a6ff7c871 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 53
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "apiplayers = master"
      ],
      "metadata": {
        "id": "3bvpGcxtVMyS"
      },
      "execution_count": 54,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "Mostselected = apiplayers.nlargest(20, 'selected_by_percent')\n",
        "Mostselected"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 835
        },
        "id": "O-wNiNtosYZU",
        "outputId": "b140bb35-db06-4561-a949-e77fa18030a2"
      },
      "execution_count": 55,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "      id               team pos         name  cost  selected_by_percent  \\\n",
              "440  355    Manchester City   F      Haaland  14.1                 92.3   \n",
              "17    19            Arsenal   M         Saka   8.7                 64.9   \n",
              "144  131           Brighton   D    Estupiñan   5.3                 63.0   \n",
              "156  143           Brighton   M       Mitoma   6.5                 40.0   \n",
              "480  396  Manchester United   M     Rashford   8.9                 33.2   \n",
              "524  430   Newcastle United   D     Trippier   6.5                 31.6   \n",
              "633  504          Tottenham   M     Maddison   7.9                 31.1   \n",
              "119  108          Brentford   M       Mbeumo   6.9                 30.0   \n",
              "657  524           West Ham   G       Areola   4.1                 30.0   \n",
              "224  195            Chelsea   D     Chilwell   5.7                 29.5   \n",
              "18    20            Arsenal   D       Saliba   5.2                 29.1   \n",
              "374  308          Liverpool   M        Salah  12.5                 28.1   \n",
              "429  343    Manchester City   F    J.Alvarez   6.9                 25.0   \n",
              "509  415   Newcastle United   F         Isak   7.6                 24.4   \n",
              "487  597  Manchester United   G        Onana   4.9                 22.0   \n",
              "12    14            Arsenal   M     Ødegaard   8.5                 21.4   \n",
              "437  352    Manchester City   G   Ederson M.   5.6                 21.0   \n",
              "460  373  Manchester United   M  B.Fernandes   8.4                 19.8   \n",
              "57    60        Aston Villa   F      Watkins   7.9                 18.7   \n",
              "647  519          Tottenham   D       Udogie   4.7                 17.4   \n",
              "\n",
              "     expected_goals  expected_assists  goals_scored  assists  bps  ict_index  \\\n",
              "440            7.10              0.21             7        1  176       71.8   \n",
              "17             2.16              1.74             2        2  120       57.8   \n",
              "144            0.39              1.12             1        2   95       38.1   \n",
              "156            0.96              1.87             1        3   89       47.2   \n",
              "480            1.92              1.18             1        2   50       37.5   \n",
              "524            0.01              0.75             0        0   97       31.4   \n",
              "633            1.75              2.02             2        2  121       60.7   \n",
              "119            4.10              0.94             4        0   93       45.3   \n",
              "657            0.00              0.00             0        0  111       19.5   \n",
              "224            0.70              1.26             0        1   65       25.2   \n",
              "18             0.04              0.09             0        1  109       16.7   \n",
              "374            2.73              2.08             2        4  110       57.6   \n",
              "429            2.00              1.02             2        5  153       53.5   \n",
              "509            1.40              0.09             2        0   70       19.3   \n",
              "487            0.00              0.00             0        0   87       16.5   \n",
              "12             1.70              0.46             2        0   89       36.6   \n",
              "437            0.00              0.02             0        0   88        9.2   \n",
              "460            2.07              2.23             1        1   83       45.4   \n",
              "57             1.97              0.22             0        4   48       32.9   \n",
              "647            0.15              0.55             0        2  112       22.6   \n",
              "\n",
              "     points  points_per_game  minutes  apppoint  assistvalue  \n",
              "440      45              9.0      439         2            3  \n",
              "17       31              6.2      448         2            3  \n",
              "144      21              5.2      360         2            3  \n",
              "156      25              5.0      440         2            3  \n",
              "480      21              4.2      441         2            3  \n",
              "524      13              2.6      450         2            3  \n",
              "633      30              6.0      427         2            3  \n",
              "119      35              7.0      450         2            3  \n",
              "657      24              4.8      450         2            3  \n",
              "224      15              3.0      305         2            3  \n",
              "18       22              4.4      450         2            3  \n",
              "374      33              6.6      431         2            3  \n",
              "429      37              7.4      449         2            3  \n",
              "509      19              4.8      276         2            3  \n",
              "487      13              2.6      450         2            3  \n",
              "12       25              5.0      442         2            3  \n",
              "437      19              3.8      450         2            3  \n",
              "460      19              3.8      450         2            3  \n",
              "57       22              4.4      410         2            3  \n",
              "647      25              5.0      420         2            3  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-b0a931ac-d1d4-46d2-b7de-7f1066738d68\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>team</th>\n",
              "      <th>pos</th>\n",
              "      <th>name</th>\n",
              "      <th>cost</th>\n",
              "      <th>selected_by_percent</th>\n",
              "      <th>expected_goals</th>\n",
              "      <th>expected_assists</th>\n",
              "      <th>goals_scored</th>\n",
              "      <th>assists</th>\n",
              "      <th>bps</th>\n",
              "      <th>ict_index</th>\n",
              "      <th>points</th>\n",
              "      <th>points_per_game</th>\n",
              "      <th>minutes</th>\n",
              "      <th>apppoint</th>\n",
              "      <th>assistvalue</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>440</th>\n",
              "      <td>355</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>F</td>\n",
              "      <td>Haaland</td>\n",
              "      <td>14.1</td>\n",
              "      <td>92.3</td>\n",
              "      <td>7.10</td>\n",
              "      <td>0.21</td>\n",
              "      <td>7</td>\n",
              "      <td>1</td>\n",
              "      <td>176</td>\n",
              "      <td>71.8</td>\n",
              "      <td>45</td>\n",
              "      <td>9.0</td>\n",
              "      <td>439</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>17</th>\n",
              "      <td>19</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>M</td>\n",
              "      <td>Saka</td>\n",
              "      <td>8.7</td>\n",
              "      <td>64.9</td>\n",
              "      <td>2.16</td>\n",
              "      <td>1.74</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>120</td>\n",
              "      <td>57.8</td>\n",
              "      <td>31</td>\n",
              "      <td>6.2</td>\n",
              "      <td>448</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>144</th>\n",
              "      <td>131</td>\n",
              "      <td>Brighton</td>\n",
              "      <td>D</td>\n",
              "      <td>Estupiñan</td>\n",
              "      <td>5.3</td>\n",
              "      <td>63.0</td>\n",
              "      <td>0.39</td>\n",
              "      <td>1.12</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>95</td>\n",
              "      <td>38.1</td>\n",
              "      <td>21</td>\n",
              "      <td>5.2</td>\n",
              "      <td>360</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>156</th>\n",
              "      <td>143</td>\n",
              "      <td>Brighton</td>\n",
              "      <td>M</td>\n",
              "      <td>Mitoma</td>\n",
              "      <td>6.5</td>\n",
              "      <td>40.0</td>\n",
              "      <td>0.96</td>\n",
              "      <td>1.87</td>\n",
              "      <td>1</td>\n",
              "      <td>3</td>\n",
              "      <td>89</td>\n",
              "      <td>47.2</td>\n",
              "      <td>25</td>\n",
              "      <td>5.0</td>\n",
              "      <td>440</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>480</th>\n",
              "      <td>396</td>\n",
              "      <td>Manchester United</td>\n",
              "      <td>M</td>\n",
              "      <td>Rashford</td>\n",
              "      <td>8.9</td>\n",
              "      <td>33.2</td>\n",
              "      <td>1.92</td>\n",
              "      <td>1.18</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>50</td>\n",
              "      <td>37.5</td>\n",
              "      <td>21</td>\n",
              "      <td>4.2</td>\n",
              "      <td>441</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>524</th>\n",
              "      <td>430</td>\n",
              "      <td>Newcastle United</td>\n",
              "      <td>D</td>\n",
              "      <td>Trippier</td>\n",
              "      <td>6.5</td>\n",
              "      <td>31.6</td>\n",
              "      <td>0.01</td>\n",
              "      <td>0.75</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>97</td>\n",
              "      <td>31.4</td>\n",
              "      <td>13</td>\n",
              "      <td>2.6</td>\n",
              "      <td>450</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>633</th>\n",
              "      <td>504</td>\n",
              "      <td>Tottenham</td>\n",
              "      <td>M</td>\n",
              "      <td>Maddison</td>\n",
              "      <td>7.9</td>\n",
              "      <td>31.1</td>\n",
              "      <td>1.75</td>\n",
              "      <td>2.02</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>121</td>\n",
              "      <td>60.7</td>\n",
              "      <td>30</td>\n",
              "      <td>6.0</td>\n",
              "      <td>427</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>119</th>\n",
              "      <td>108</td>\n",
              "      <td>Brentford</td>\n",
              "      <td>M</td>\n",
              "      <td>Mbeumo</td>\n",
              "      <td>6.9</td>\n",
              "      <td>30.0</td>\n",
              "      <td>4.10</td>\n",
              "      <td>0.94</td>\n",
              "      <td>4</td>\n",
              "      <td>0</td>\n",
              "      <td>93</td>\n",
              "      <td>45.3</td>\n",
              "      <td>35</td>\n",
              "      <td>7.0</td>\n",
              "      <td>450</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>657</th>\n",
              "      <td>524</td>\n",
              "      <td>West Ham</td>\n",
              "      <td>G</td>\n",
              "      <td>Areola</td>\n",
              "      <td>4.1</td>\n",
              "      <td>30.0</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>111</td>\n",
              "      <td>19.5</td>\n",
              "      <td>24</td>\n",
              "      <td>4.8</td>\n",
              "      <td>450</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>224</th>\n",
              "      <td>195</td>\n",
              "      <td>Chelsea</td>\n",
              "      <td>D</td>\n",
              "      <td>Chilwell</td>\n",
              "      <td>5.7</td>\n",
              "      <td>29.5</td>\n",
              "      <td>0.70</td>\n",
              "      <td>1.26</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>65</td>\n",
              "      <td>25.2</td>\n",
              "      <td>15</td>\n",
              "      <td>3.0</td>\n",
              "      <td>305</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>18</th>\n",
              "      <td>20</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>D</td>\n",
              "      <td>Saliba</td>\n",
              "      <td>5.2</td>\n",
              "      <td>29.1</td>\n",
              "      <td>0.04</td>\n",
              "      <td>0.09</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>109</td>\n",
              "      <td>16.7</td>\n",
              "      <td>22</td>\n",
              "      <td>4.4</td>\n",
              "      <td>450</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>374</th>\n",
              "      <td>308</td>\n",
              "      <td>Liverpool</td>\n",
              "      <td>M</td>\n",
              "      <td>Salah</td>\n",
              "      <td>12.5</td>\n",
              "      <td>28.1</td>\n",
              "      <td>2.73</td>\n",
              "      <td>2.08</td>\n",
              "      <td>2</td>\n",
              "      <td>4</td>\n",
              "      <td>110</td>\n",
              "      <td>57.6</td>\n",
              "      <td>33</td>\n",
              "      <td>6.6</td>\n",
              "      <td>431</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>429</th>\n",
              "      <td>343</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>F</td>\n",
              "      <td>J.Alvarez</td>\n",
              "      <td>6.9</td>\n",
              "      <td>25.0</td>\n",
              "      <td>2.00</td>\n",
              "      <td>1.02</td>\n",
              "      <td>2</td>\n",
              "      <td>5</td>\n",
              "      <td>153</td>\n",
              "      <td>53.5</td>\n",
              "      <td>37</td>\n",
              "      <td>7.4</td>\n",
              "      <td>449</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>509</th>\n",
              "      <td>415</td>\n",
              "      <td>Newcastle United</td>\n",
              "      <td>F</td>\n",
              "      <td>Isak</td>\n",
              "      <td>7.6</td>\n",
              "      <td>24.4</td>\n",
              "      <td>1.40</td>\n",
              "      <td>0.09</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>70</td>\n",
              "      <td>19.3</td>\n",
              "      <td>19</td>\n",
              "      <td>4.8</td>\n",
              "      <td>276</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>487</th>\n",
              "      <td>597</td>\n",
              "      <td>Manchester United</td>\n",
              "      <td>G</td>\n",
              "      <td>Onana</td>\n",
              "      <td>4.9</td>\n",
              "      <td>22.0</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>87</td>\n",
              "      <td>16.5</td>\n",
              "      <td>13</td>\n",
              "      <td>2.6</td>\n",
              "      <td>450</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>12</th>\n",
              "      <td>14</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>M</td>\n",
              "      <td>Ødegaard</td>\n",
              "      <td>8.5</td>\n",
              "      <td>21.4</td>\n",
              "      <td>1.70</td>\n",
              "      <td>0.46</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>89</td>\n",
              "      <td>36.6</td>\n",
              "      <td>25</td>\n",
              "      <td>5.0</td>\n",
              "      <td>442</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>437</th>\n",
              "      <td>352</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>G</td>\n",
              "      <td>Ederson M.</td>\n",
              "      <td>5.6</td>\n",
              "      <td>21.0</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.02</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>88</td>\n",
              "      <td>9.2</td>\n",
              "      <td>19</td>\n",
              "      <td>3.8</td>\n",
              "      <td>450</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>460</th>\n",
              "      <td>373</td>\n",
              "      <td>Manchester United</td>\n",
              "      <td>M</td>\n",
              "      <td>B.Fernandes</td>\n",
              "      <td>8.4</td>\n",
              "      <td>19.8</td>\n",
              "      <td>2.07</td>\n",
              "      <td>2.23</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>83</td>\n",
              "      <td>45.4</td>\n",
              "      <td>19</td>\n",
              "      <td>3.8</td>\n",
              "      <td>450</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>57</th>\n",
              "      <td>60</td>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>F</td>\n",
              "      <td>Watkins</td>\n",
              "      <td>7.9</td>\n",
              "      <td>18.7</td>\n",
              "      <td>1.97</td>\n",
              "      <td>0.22</td>\n",
              "      <td>0</td>\n",
              "      <td>4</td>\n",
              "      <td>48</td>\n",
              "      <td>32.9</td>\n",
              "      <td>22</td>\n",
              "      <td>4.4</td>\n",
              "      <td>410</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>647</th>\n",
              "      <td>519</td>\n",
              "      <td>Tottenham</td>\n",
              "      <td>D</td>\n",
              "      <td>Udogie</td>\n",
              "      <td>4.7</td>\n",
              "      <td>17.4</td>\n",
              "      <td>0.15</td>\n",
              "      <td>0.55</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>112</td>\n",
              "      <td>22.6</td>\n",
              "      <td>25</td>\n",
              "      <td>5.0</td>\n",
              "      <td>420</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-b0a931ac-d1d4-46d2-b7de-7f1066738d68')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-b0a931ac-d1d4-46d2-b7de-7f1066738d68 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-b0a931ac-d1d4-46d2-b7de-7f1066738d68');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-b8361fbf-61ae-4c11-b596-27d9aaadbeb0\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-b8361fbf-61ae-4c11-b596-27d9aaadbeb0')\"\n",
              "            title=\"Suggest charts.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-b8361fbf-61ae-4c11-b596-27d9aaadbeb0 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 55
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "ax = sns.barplot(x='selected_by_percent', y='name', data=Mostselected, hue='pos', dodge=False)\n",
        "sns.set(rc={'figure.figsize':(11.7,8.27)})\n",
        "plt.title(\"Most Selected\")\n",
        "plt.xticks(rotation=90)\n",
        "plt.ylabel(\"selected_by_percent\")\n",
        "plt.legend(bbox_to_anchor=(1.05, 1), loc='upper left', borderaxespad=0)\n",
        "plt.gcf().set_size_inches(30,10)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 476
        },
        "id": "8PBz92opthgG",
        "outputId": "170fcff6-6ebd-48a8-a9e3-2288197c853e"
      },
      "execution_count": 56,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 3000x1000 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "fbref = pd.read_html('https://fbref.com/en/comps/9/Premier-League-Stats')\n",
        "epltable = fbref[0]\n",
        "epltablexGxGc = epltable.drop(columns=[\n",
        " 'Last 5',\n",
        " 'Attendance',\n",
        " 'Top Team Scorer',\n",
        " 'Goalkeeper',\n",
        " 'Notes'])\n",
        "epltablexGxGc= epltablexGxGc.replace('Newcastle Utd', 'Newcastle United')\n",
        "epltablexGxGc= epltablexGxGc.replace('Wolves','Wolverhampton Wanderers')\n",
        "epltablexGxGc= epltablexGxGc.replace('Leeds United','Leeds')\n",
        "epltablexGxGc= epltablexGxGc.replace('Leicester City','Leicester')\n",
        "epltablexGxGc= epltablexGxGc.replace('Manchester Utd','Manchester United')\n",
        "epltablexGxGc['Squad'] = epltablexGxGc['Squad'].str.replace(r\"[\\\"\\',]\", '')\n",
        "epltablexGxGc= epltablexGxGc.replace('Nottham Forest','Nottingham Forest')\n",
        "epltablexGxGc['xCSP'] = (4 - (epltablexGxGc.xGA * 4/23))\n",
        "epltablexGxGc.rename(columns={'Squad': 'team'}, inplace=True)\n",
        "epltablexGxGc['xG/90'] = (epltablexGxGc.xG / epltablexGxGc.MP)\n",
        "epltablexGxGc['xGA/90'] = (epltablexGxGc.xGA / epltablexGxGc.MP)\n",
        "epltablexGxGc"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 711
        },
        "id": "D8nuKObbLt5s",
        "outputId": "a07c7938-6aba-43f9-c0c0-291a9d25ce45"
      },
      "execution_count": 57,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "<ipython-input-57-f34def3770e4>:14: FutureWarning: The default value of regex will change from True to False in a future version.\n",
            "  epltablexGxGc['Squad'] = epltablexGxGc['Squad'].str.replace(r\"[\\\"\\',]\", '')\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "    Rk                     team  MP  W  D  L  GF  GA  GD  Pts  Pts/MP    xG  \\\n",
              "0    1          Manchester City   5  5  0  0  14   3  11   15    3.00  12.2   \n",
              "1    2                Tottenham   5  4  1  0  13   5   8   13    2.60   9.4   \n",
              "2    3                Liverpool   5  4  1  0  12   4   8   13    2.60  10.2   \n",
              "3    4                  Arsenal   5  4  1  0   9   4   5   13    2.60   9.3   \n",
              "4    5                 Brighton   5  4  0  1  15   7   8   12    2.40  10.7   \n",
              "5    6                 West Ham   5  3  1  1  10   7   3   10    2.00   7.9   \n",
              "6    7              Aston Villa   5  3  0  2  11  10   1    9    1.80  10.9   \n",
              "7    8        Nottingham Forest   5  2  1  2   7   7   0    7    1.40   5.2   \n",
              "8    9           Crystal Palace   5  2  1  2   6   7  -1    7    1.40   6.9   \n",
              "9   10                   Fulham   5  2  1  2   5  10  -5    7    1.40   4.9   \n",
              "10  11                Brentford   5  1  3  1   8   6   2    6    1.20  10.2   \n",
              "11  12         Newcastle United   5  2  0  3   8   7   1    6    1.20   8.3   \n",
              "12  13        Manchester United   5  2  0  3   6  10  -4    6    1.20   9.0   \n",
              "13  14                  Chelsea   5  1  2  2   5   5   0    5    1.00  10.2   \n",
              "14  15              Bournemouth   5  0  3  2   4   8  -4    3    0.60   6.4   \n",
              "15  16  Wolverhampton Wanderers   5  1  0  4   5  11  -6    3    0.60   7.1   \n",
              "16  17            Sheffield Utd   5  0  1  4   5   9  -4    1    0.20   3.5   \n",
              "17  18                  Everton   5  0  1  4   2   9  -7    1    0.20   7.5   \n",
              "18  19                  Burnley   4  0  1  3   4  12  -8    1    0.25   2.9   \n",
              "19  20               Luton Town   4  0  0  4   2  10  -8    0    0.00   4.4   \n",
              "\n",
              "     xGA  xGD  xGD/90      xCSP  xG/90  xGA/90  \n",
              "0    3.6  8.6    1.72  3.373913  2.440    0.72  \n",
              "1    6.9  2.5    0.50  2.800000  1.880    1.38  \n",
              "2    5.9  4.3    0.85  2.973913  2.040    1.18  \n",
              "3    4.0  5.3    1.05  3.304348  1.860    0.80  \n",
              "4    8.7  1.9    0.38  2.486957  2.140    1.74  \n",
              "5   10.2 -2.4   -0.47  2.226087  1.580    2.04  \n",
              "6    8.3  2.6    0.51  2.556522  2.180    1.66  \n",
              "7    7.0 -1.7   -0.35  2.782609  1.040    1.40  \n",
              "8    7.7 -0.8   -0.15  2.660870  1.380    1.54  \n",
              "9   12.8 -7.9   -1.59  1.773913  0.980    2.56  \n",
              "10   6.0  4.2    0.84  2.956522  2.040    1.20  \n",
              "11   5.4  2.8    0.57  3.060870  1.660    1.08  \n",
              "12   9.1 -0.2   -0.03  2.417391  1.800    1.82  \n",
              "13   5.3  4.9    0.99  3.078261  2.040    1.06  \n",
              "14  10.9 -4.6   -0.91  2.104348  1.280    2.18  \n",
              "15  10.3 -3.2   -0.64  2.208696  1.420    2.06  \n",
              "16  11.4 -7.9   -1.58  2.017391  0.700    2.28  \n",
              "17   7.7 -0.2   -0.04  2.660870  1.500    1.54  \n",
              "18   7.4 -4.5   -1.12  2.713043  0.725    1.85  \n",
              "19   8.2 -3.8   -0.95  2.573913  1.100    2.05  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-7a62ffd6-178c-4ba6-bcb8-268acc49a9f2\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Rk</th>\n",
              "      <th>team</th>\n",
              "      <th>MP</th>\n",
              "      <th>W</th>\n",
              "      <th>D</th>\n",
              "      <th>L</th>\n",
              "      <th>GF</th>\n",
              "      <th>GA</th>\n",
              "      <th>GD</th>\n",
              "      <th>Pts</th>\n",
              "      <th>Pts/MP</th>\n",
              "      <th>xG</th>\n",
              "      <th>xGA</th>\n",
              "      <th>xGD</th>\n",
              "      <th>xGD/90</th>\n",
              "      <th>xCSP</th>\n",
              "      <th>xG/90</th>\n",
              "      <th>xGA/90</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>1</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>5</td>\n",
              "      <td>5</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>14</td>\n",
              "      <td>3</td>\n",
              "      <td>11</td>\n",
              "      <td>15</td>\n",
              "      <td>3.00</td>\n",
              "      <td>12.2</td>\n",
              "      <td>3.6</td>\n",
              "      <td>8.6</td>\n",
              "      <td>1.72</td>\n",
              "      <td>3.373913</td>\n",
              "      <td>2.440</td>\n",
              "      <td>0.72</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>2</td>\n",
              "      <td>Tottenham</td>\n",
              "      <td>5</td>\n",
              "      <td>4</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>13</td>\n",
              "      <td>5</td>\n",
              "      <td>8</td>\n",
              "      <td>13</td>\n",
              "      <td>2.60</td>\n",
              "      <td>9.4</td>\n",
              "      <td>6.9</td>\n",
              "      <td>2.5</td>\n",
              "      <td>0.50</td>\n",
              "      <td>2.800000</td>\n",
              "      <td>1.880</td>\n",
              "      <td>1.38</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>3</td>\n",
              "      <td>Liverpool</td>\n",
              "      <td>5</td>\n",
              "      <td>4</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>12</td>\n",
              "      <td>4</td>\n",
              "      <td>8</td>\n",
              "      <td>13</td>\n",
              "      <td>2.60</td>\n",
              "      <td>10.2</td>\n",
              "      <td>5.9</td>\n",
              "      <td>4.3</td>\n",
              "      <td>0.85</td>\n",
              "      <td>2.973913</td>\n",
              "      <td>2.040</td>\n",
              "      <td>1.18</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>4</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>5</td>\n",
              "      <td>4</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>9</td>\n",
              "      <td>4</td>\n",
              "      <td>5</td>\n",
              "      <td>13</td>\n",
              "      <td>2.60</td>\n",
              "      <td>9.3</td>\n",
              "      <td>4.0</td>\n",
              "      <td>5.3</td>\n",
              "      <td>1.05</td>\n",
              "      <td>3.304348</td>\n",
              "      <td>1.860</td>\n",
              "      <td>0.80</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>5</td>\n",
              "      <td>Brighton</td>\n",
              "      <td>5</td>\n",
              "      <td>4</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>15</td>\n",
              "      <td>7</td>\n",
              "      <td>8</td>\n",
              "      <td>12</td>\n",
              "      <td>2.40</td>\n",
              "      <td>10.7</td>\n",
              "      <td>8.7</td>\n",
              "      <td>1.9</td>\n",
              "      <td>0.38</td>\n",
              "      <td>2.486957</td>\n",
              "      <td>2.140</td>\n",
              "      <td>1.74</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>6</td>\n",
              "      <td>West Ham</td>\n",
              "      <td>5</td>\n",
              "      <td>3</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>10</td>\n",
              "      <td>7</td>\n",
              "      <td>3</td>\n",
              "      <td>10</td>\n",
              "      <td>2.00</td>\n",
              "      <td>7.9</td>\n",
              "      <td>10.2</td>\n",
              "      <td>-2.4</td>\n",
              "      <td>-0.47</td>\n",
              "      <td>2.226087</td>\n",
              "      <td>1.580</td>\n",
              "      <td>2.04</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>7</td>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>5</td>\n",
              "      <td>3</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>11</td>\n",
              "      <td>10</td>\n",
              "      <td>1</td>\n",
              "      <td>9</td>\n",
              "      <td>1.80</td>\n",
              "      <td>10.9</td>\n",
              "      <td>8.3</td>\n",
              "      <td>2.6</td>\n",
              "      <td>0.51</td>\n",
              "      <td>2.556522</td>\n",
              "      <td>2.180</td>\n",
              "      <td>1.66</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>8</td>\n",
              "      <td>Nottingham Forest</td>\n",
              "      <td>5</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>7</td>\n",
              "      <td>7</td>\n",
              "      <td>0</td>\n",
              "      <td>7</td>\n",
              "      <td>1.40</td>\n",
              "      <td>5.2</td>\n",
              "      <td>7.0</td>\n",
              "      <td>-1.7</td>\n",
              "      <td>-0.35</td>\n",
              "      <td>2.782609</td>\n",
              "      <td>1.040</td>\n",
              "      <td>1.40</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>9</td>\n",
              "      <td>Crystal Palace</td>\n",
              "      <td>5</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>6</td>\n",
              "      <td>7</td>\n",
              "      <td>-1</td>\n",
              "      <td>7</td>\n",
              "      <td>1.40</td>\n",
              "      <td>6.9</td>\n",
              "      <td>7.7</td>\n",
              "      <td>-0.8</td>\n",
              "      <td>-0.15</td>\n",
              "      <td>2.660870</td>\n",
              "      <td>1.380</td>\n",
              "      <td>1.54</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>10</td>\n",
              "      <td>Fulham</td>\n",
              "      <td>5</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>5</td>\n",
              "      <td>10</td>\n",
              "      <td>-5</td>\n",
              "      <td>7</td>\n",
              "      <td>1.40</td>\n",
              "      <td>4.9</td>\n",
              "      <td>12.8</td>\n",
              "      <td>-7.9</td>\n",
              "      <td>-1.59</td>\n",
              "      <td>1.773913</td>\n",
              "      <td>0.980</td>\n",
              "      <td>2.56</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10</th>\n",
              "      <td>11</td>\n",
              "      <td>Brentford</td>\n",
              "      <td>5</td>\n",
              "      <td>1</td>\n",
              "      <td>3</td>\n",
              "      <td>1</td>\n",
              "      <td>8</td>\n",
              "      <td>6</td>\n",
              "      <td>2</td>\n",
              "      <td>6</td>\n",
              "      <td>1.20</td>\n",
              "      <td>10.2</td>\n",
              "      <td>6.0</td>\n",
              "      <td>4.2</td>\n",
              "      <td>0.84</td>\n",
              "      <td>2.956522</td>\n",
              "      <td>2.040</td>\n",
              "      <td>1.20</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>11</th>\n",
              "      <td>12</td>\n",
              "      <td>Newcastle United</td>\n",
              "      <td>5</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>3</td>\n",
              "      <td>8</td>\n",
              "      <td>7</td>\n",
              "      <td>1</td>\n",
              "      <td>6</td>\n",
              "      <td>1.20</td>\n",
              "      <td>8.3</td>\n",
              "      <td>5.4</td>\n",
              "      <td>2.8</td>\n",
              "      <td>0.57</td>\n",
              "      <td>3.060870</td>\n",
              "      <td>1.660</td>\n",
              "      <td>1.08</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>12</th>\n",
              "      <td>13</td>\n",
              "      <td>Manchester United</td>\n",
              "      <td>5</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>3</td>\n",
              "      <td>6</td>\n",
              "      <td>10</td>\n",
              "      <td>-4</td>\n",
              "      <td>6</td>\n",
              "      <td>1.20</td>\n",
              "      <td>9.0</td>\n",
              "      <td>9.1</td>\n",
              "      <td>-0.2</td>\n",
              "      <td>-0.03</td>\n",
              "      <td>2.417391</td>\n",
              "      <td>1.800</td>\n",
              "      <td>1.82</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>13</th>\n",
              "      <td>14</td>\n",
              "      <td>Chelsea</td>\n",
              "      <td>5</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>5</td>\n",
              "      <td>5</td>\n",
              "      <td>0</td>\n",
              "      <td>5</td>\n",
              "      <td>1.00</td>\n",
              "      <td>10.2</td>\n",
              "      <td>5.3</td>\n",
              "      <td>4.9</td>\n",
              "      <td>0.99</td>\n",
              "      <td>3.078261</td>\n",
              "      <td>2.040</td>\n",
              "      <td>1.06</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>14</th>\n",
              "      <td>15</td>\n",
              "      <td>Bournemouth</td>\n",
              "      <td>5</td>\n",
              "      <td>0</td>\n",
              "      <td>3</td>\n",
              "      <td>2</td>\n",
              "      <td>4</td>\n",
              "      <td>8</td>\n",
              "      <td>-4</td>\n",
              "      <td>3</td>\n",
              "      <td>0.60</td>\n",
              "      <td>6.4</td>\n",
              "      <td>10.9</td>\n",
              "      <td>-4.6</td>\n",
              "      <td>-0.91</td>\n",
              "      <td>2.104348</td>\n",
              "      <td>1.280</td>\n",
              "      <td>2.18</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>15</th>\n",
              "      <td>16</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>5</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>4</td>\n",
              "      <td>5</td>\n",
              "      <td>11</td>\n",
              "      <td>-6</td>\n",
              "      <td>3</td>\n",
              "      <td>0.60</td>\n",
              "      <td>7.1</td>\n",
              "      <td>10.3</td>\n",
              "      <td>-3.2</td>\n",
              "      <td>-0.64</td>\n",
              "      <td>2.208696</td>\n",
              "      <td>1.420</td>\n",
              "      <td>2.06</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>16</th>\n",
              "      <td>17</td>\n",
              "      <td>Sheffield Utd</td>\n",
              "      <td>5</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>4</td>\n",
              "      <td>5</td>\n",
              "      <td>9</td>\n",
              "      <td>-4</td>\n",
              "      <td>1</td>\n",
              "      <td>0.20</td>\n",
              "      <td>3.5</td>\n",
              "      <td>11.4</td>\n",
              "      <td>-7.9</td>\n",
              "      <td>-1.58</td>\n",
              "      <td>2.017391</td>\n",
              "      <td>0.700</td>\n",
              "      <td>2.28</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>17</th>\n",
              "      <td>18</td>\n",
              "      <td>Everton</td>\n",
              "      <td>5</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>4</td>\n",
              "      <td>2</td>\n",
              "      <td>9</td>\n",
              "      <td>-7</td>\n",
              "      <td>1</td>\n",
              "      <td>0.20</td>\n",
              "      <td>7.5</td>\n",
              "      <td>7.7</td>\n",
              "      <td>-0.2</td>\n",
              "      <td>-0.04</td>\n",
              "      <td>2.660870</td>\n",
              "      <td>1.500</td>\n",
              "      <td>1.54</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>18</th>\n",
              "      <td>19</td>\n",
              "      <td>Burnley</td>\n",
              "      <td>4</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>3</td>\n",
              "      <td>4</td>\n",
              "      <td>12</td>\n",
              "      <td>-8</td>\n",
              "      <td>1</td>\n",
              "      <td>0.25</td>\n",
              "      <td>2.9</td>\n",
              "      <td>7.4</td>\n",
              "      <td>-4.5</td>\n",
              "      <td>-1.12</td>\n",
              "      <td>2.713043</td>\n",
              "      <td>0.725</td>\n",
              "      <td>1.85</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>19</th>\n",
              "      <td>20</td>\n",
              "      <td>Luton Town</td>\n",
              "      <td>4</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>4</td>\n",
              "      <td>2</td>\n",
              "      <td>10</td>\n",
              "      <td>-8</td>\n",
              "      <td>0</td>\n",
              "      <td>0.00</td>\n",
              "      <td>4.4</td>\n",
              "      <td>8.2</td>\n",
              "      <td>-3.8</td>\n",
              "      <td>-0.95</td>\n",
              "      <td>2.573913</td>\n",
              "      <td>1.100</td>\n",
              "      <td>2.05</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-7a62ffd6-178c-4ba6-bcb8-268acc49a9f2')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-7a62ffd6-178c-4ba6-bcb8-268acc49a9f2 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-7a62ffd6-178c-4ba6-bcb8-268acc49a9f2');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-fda8efb7-09d0-45df-b5ee-597f839d9a88\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-fda8efb7-09d0-45df-b5ee-597f839d9a88')\"\n",
              "            title=\"Suggest charts.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-fda8efb7-09d0-45df-b5ee-597f839d9a88 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 57
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "fig, ax = plt.subplots(1, figsize=(10,8))\n",
        "ax.scatter(x=epltablexGxGc['xG/90'],y=epltablexGxGc['xGA/90'],c='DarkBlue')\n",
        "# set labels\n",
        "ax.set_xlabel('xG/90')\n",
        "ax.set_ylabel('xGA/90')\n",
        "\n",
        "# annotate points in axis\n",
        "for idx, row in epltablexGxGc.iterrows():\n",
        "    ax.annotate(row['team'], (row['xG/90'], row['xGA/90']) )\n",
        "# force matplotlib to draw the graph\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 704
        },
        "id": "TYn5yVsCNlLv",
        "outputId": "aca47a68-4abc-41e3-b543-819fdaec02a9"
      },
      "execution_count": 58,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1000x800 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "EPL_player_df"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 600
        },
        "id": "wrjHrDmJ8OlM",
        "outputId": "acf942c6-1c4e-4eae-aa3a-64f82a8e1e94"
      },
      "execution_count": 59,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "        id       player_name games_x time_x goals_1wks_x            xG_1wks_x  \\\n",
              "0     8260    Erling Haaland       5    445            7    7.646338880062103   \n",
              "1     3697   Odsonne Edouard       5    432            4    3.337449833750725   \n",
              "2     6552      Bryan Mbeumo       5    450            4   3.8939481377601624   \n",
              "3    10177     Evan Ferguson       5    207            4   2.3121074587106705   \n",
              "4      453     Son Heung-Min       5    426            3   1.6028943955898285   \n",
              "..     ...               ...     ...    ...          ...                  ...   \n",
              "409  11926     Edson Álvarez       4    249            0   0.0643242746591568   \n",
              "410  11984  Youssef Chermiti       2     23            0  0.06607918441295624   \n",
              "411  11998   Hannes Delcroix       3    130            0  0.23279432207345963   \n",
              "412  12027    Mohammed Kudus       2     22            0                    0   \n",
              "413  12094       Mike Trésor       1     12            0  0.04863787442445755   \n",
              "\n",
              "    assists_1wks_x            xA_1wks_x shots_1wks_x key_passes_1wks_x  ...  \\\n",
              "0                1   1.1254648137837648           29                 7  ...   \n",
              "1                0  0.26749951019883156           20                 5  ...   \n",
              "2                0  0.47218552231788635           10                 5  ...   \n",
              "3                0  0.06968338042497635           14                 1  ...   \n",
              "4                0   1.3192270509898663           13                 9  ...   \n",
              "..             ...                  ...          ...               ...  ...   \n",
              "409              0  0.05303558334708214            1                 1  ...   \n",
              "410              0                    0            1                 0  ...   \n",
              "411              0   0.0830167606472969            4                 2  ...   \n",
              "412              0                    0            0                 0  ...   \n",
              "413              0  0.37140172719955444            1                 1  ...   \n",
              "\n",
              "    shots_1wks_y key_passes_1wks_y yellow_cards red_cards position_y  \\\n",
              "0             29                 7            0         0          F   \n",
              "1             20                 5            0         0          F   \n",
              "2             10                 5            0         0          F   \n",
              "3             14                 1            0         0        F S   \n",
              "4             13                 9            0         0        F M   \n",
              "..           ...               ...          ...       ...        ...   \n",
              "409            1                 1            2         0        M S   \n",
              "410            1                 0            1         0          S   \n",
              "411            4                 2            1         0        D S   \n",
              "412            0                 0            0         0          S   \n",
              "413            1                 1            0         0          S   \n",
              "\n",
              "        team_title_y npg_1wks_y          npxG_1wks_y              xGChain  \\\n",
              "0    Manchester City          6    6.124001145362854     6.56243109703064   \n",
              "1     Crystal Palace          4    3.337449833750725     3.16320563852787   \n",
              "2          Brentford          2    2.371610403060913   3.4626695215702057   \n",
              "3           Brighton          4   2.3121074587106705    3.259228117763996   \n",
              "4          Tottenham          3   1.6028943955898285    4.228595972061157   \n",
              "..               ...        ...                  ...                  ...   \n",
              "409         West Ham          0   0.0643242746591568    0.711536843329668   \n",
              "410          Everton          0  0.06607918441295624                    0   \n",
              "411          Burnley          0  0.23279432207345963   0.5750201642513275   \n",
              "412         West Ham          0                    0                    0   \n",
              "413          Burnley          0  0.04863787442445755  0.04863787442445755   \n",
              "\n",
              "              xGBuildup  \n",
              "0    0.5850657597184181  \n",
              "1    0.4057522751390934  \n",
              "2    1.0711335241794586  \n",
              "3    0.8774372674524784  \n",
              "4    1.6196235567331314  \n",
              "..                  ...  \n",
              "409  0.5941769666969776  \n",
              "410                   0  \n",
              "411  0.4920034073293209  \n",
              "412                   0  \n",
              "413                   0  \n",
              "\n",
              "[414 rows x 48 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-b128f963-1c71-4926-8772-4c9da5b80547\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>player_name</th>\n",
              "      <th>games_x</th>\n",
              "      <th>time_x</th>\n",
              "      <th>goals_1wks_x</th>\n",
              "      <th>xG_1wks_x</th>\n",
              "      <th>assists_1wks_x</th>\n",
              "      <th>xA_1wks_x</th>\n",
              "      <th>shots_1wks_x</th>\n",
              "      <th>key_passes_1wks_x</th>\n",
              "      <th>...</th>\n",
              "      <th>shots_1wks_y</th>\n",
              "      <th>key_passes_1wks_y</th>\n",
              "      <th>yellow_cards</th>\n",
              "      <th>red_cards</th>\n",
              "      <th>position_y</th>\n",
              "      <th>team_title_y</th>\n",
              "      <th>npg_1wks_y</th>\n",
              "      <th>npxG_1wks_y</th>\n",
              "      <th>xGChain</th>\n",
              "      <th>xGBuildup</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>8260</td>\n",
              "      <td>Erling Haaland</td>\n",
              "      <td>5</td>\n",
              "      <td>445</td>\n",
              "      <td>7</td>\n",
              "      <td>7.646338880062103</td>\n",
              "      <td>1</td>\n",
              "      <td>1.1254648137837648</td>\n",
              "      <td>29</td>\n",
              "      <td>7</td>\n",
              "      <td>...</td>\n",
              "      <td>29</td>\n",
              "      <td>7</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>F</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>6</td>\n",
              "      <td>6.124001145362854</td>\n",
              "      <td>6.56243109703064</td>\n",
              "      <td>0.5850657597184181</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>3697</td>\n",
              "      <td>Odsonne Edouard</td>\n",
              "      <td>5</td>\n",
              "      <td>432</td>\n",
              "      <td>4</td>\n",
              "      <td>3.337449833750725</td>\n",
              "      <td>0</td>\n",
              "      <td>0.26749951019883156</td>\n",
              "      <td>20</td>\n",
              "      <td>5</td>\n",
              "      <td>...</td>\n",
              "      <td>20</td>\n",
              "      <td>5</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>F</td>\n",
              "      <td>Crystal Palace</td>\n",
              "      <td>4</td>\n",
              "      <td>3.337449833750725</td>\n",
              "      <td>3.16320563852787</td>\n",
              "      <td>0.4057522751390934</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>6552</td>\n",
              "      <td>Bryan Mbeumo</td>\n",
              "      <td>5</td>\n",
              "      <td>450</td>\n",
              "      <td>4</td>\n",
              "      <td>3.8939481377601624</td>\n",
              "      <td>0</td>\n",
              "      <td>0.47218552231788635</td>\n",
              "      <td>10</td>\n",
              "      <td>5</td>\n",
              "      <td>...</td>\n",
              "      <td>10</td>\n",
              "      <td>5</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>F</td>\n",
              "      <td>Brentford</td>\n",
              "      <td>2</td>\n",
              "      <td>2.371610403060913</td>\n",
              "      <td>3.4626695215702057</td>\n",
              "      <td>1.0711335241794586</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>10177</td>\n",
              "      <td>Evan Ferguson</td>\n",
              "      <td>5</td>\n",
              "      <td>207</td>\n",
              "      <td>4</td>\n",
              "      <td>2.3121074587106705</td>\n",
              "      <td>0</td>\n",
              "      <td>0.06968338042497635</td>\n",
              "      <td>14</td>\n",
              "      <td>1</td>\n",
              "      <td>...</td>\n",
              "      <td>14</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>F S</td>\n",
              "      <td>Brighton</td>\n",
              "      <td>4</td>\n",
              "      <td>2.3121074587106705</td>\n",
              "      <td>3.259228117763996</td>\n",
              "      <td>0.8774372674524784</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>453</td>\n",
              "      <td>Son Heung-Min</td>\n",
              "      <td>5</td>\n",
              "      <td>426</td>\n",
              "      <td>3</td>\n",
              "      <td>1.6028943955898285</td>\n",
              "      <td>0</td>\n",
              "      <td>1.3192270509898663</td>\n",
              "      <td>13</td>\n",
              "      <td>9</td>\n",
              "      <td>...</td>\n",
              "      <td>13</td>\n",
              "      <td>9</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>F M</td>\n",
              "      <td>Tottenham</td>\n",
              "      <td>3</td>\n",
              "      <td>1.6028943955898285</td>\n",
              "      <td>4.228595972061157</td>\n",
              "      <td>1.6196235567331314</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>409</th>\n",
              "      <td>11926</td>\n",
              "      <td>Edson Álvarez</td>\n",
              "      <td>4</td>\n",
              "      <td>249</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0643242746591568</td>\n",
              "      <td>0</td>\n",
              "      <td>0.05303558334708214</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>...</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>M S</td>\n",
              "      <td>West Ham</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0643242746591568</td>\n",
              "      <td>0.711536843329668</td>\n",
              "      <td>0.5941769666969776</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>410</th>\n",
              "      <td>11984</td>\n",
              "      <td>Youssef Chermiti</td>\n",
              "      <td>2</td>\n",
              "      <td>23</td>\n",
              "      <td>0</td>\n",
              "      <td>0.06607918441295624</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>S</td>\n",
              "      <td>Everton</td>\n",
              "      <td>0</td>\n",
              "      <td>0.06607918441295624</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>411</th>\n",
              "      <td>11998</td>\n",
              "      <td>Hannes Delcroix</td>\n",
              "      <td>3</td>\n",
              "      <td>130</td>\n",
              "      <td>0</td>\n",
              "      <td>0.23279432207345963</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0830167606472969</td>\n",
              "      <td>4</td>\n",
              "      <td>2</td>\n",
              "      <td>...</td>\n",
              "      <td>4</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>D S</td>\n",
              "      <td>Burnley</td>\n",
              "      <td>0</td>\n",
              "      <td>0.23279432207345963</td>\n",
              "      <td>0.5750201642513275</td>\n",
              "      <td>0.4920034073293209</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>412</th>\n",
              "      <td>12027</td>\n",
              "      <td>Mohammed Kudus</td>\n",
              "      <td>2</td>\n",
              "      <td>22</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>S</td>\n",
              "      <td>West Ham</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>413</th>\n",
              "      <td>12094</td>\n",
              "      <td>Mike Trésor</td>\n",
              "      <td>1</td>\n",
              "      <td>12</td>\n",
              "      <td>0</td>\n",
              "      <td>0.04863787442445755</td>\n",
              "      <td>0</td>\n",
              "      <td>0.37140172719955444</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>...</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>S</td>\n",
              "      <td>Burnley</td>\n",
              "      <td>0</td>\n",
              "      <td>0.04863787442445755</td>\n",
              "      <td>0.04863787442445755</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>414 rows × 48 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-b128f963-1c71-4926-8772-4c9da5b80547')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-b128f963-1c71-4926-8772-4c9da5b80547 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-b128f963-1c71-4926-8772-4c9da5b80547');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-ccfb6555-bdf5-4b5a-bf2a-9b4e23dec2c9\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-ccfb6555-bdf5-4b5a-bf2a-9b4e23dec2c9')\"\n",
              "            title=\"Suggest charts.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-ccfb6555-bdf5-4b5a-bf2a-9b4e23dec2c9 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 59
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "EPL_player_df['goals'] = EPL_player_df['goals_1wks_x'].astype(int)\n",
        "top25goals = EPL_player_df.nlargest(20, 'goals')\n",
        "top25goals"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "id": "3H-vTRXF8VDs",
        "outputId": "3ccb22d4-ea5b-440e-f0f7-edbb3bdc3b0b"
      },
      "execution_count": 60,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "       id        player_name games_x time_x goals_1wks_x           xG_1wks_x  \\\n",
              "0    8260     Erling Haaland       5    445            7   7.646338880062103   \n",
              "1    3697    Odsonne Edouard       5    432            4   3.337449833750725   \n",
              "2    6552       Bryan Mbeumo       5    450            4  3.8939481377601624   \n",
              "3   10177      Evan Ferguson       5    207            4  2.3121074587106705   \n",
              "4     453      Son Heung-Min       5    426            3  1.6028943955898285   \n",
              "5     468      Callum Wilson       5    166            3  2.6370871141552925   \n",
              "6    1776       Jarrod Bowen       5    450            3   1.852049708366394   \n",
              "7    6049        Solly March       4    324            3   2.172745257616043   \n",
              "8    7814      Taiwo Awoniyi       5    343            3  2.4111403673887253   \n",
              "9    8845     Hee-Chan Hwang       5    195            3  0.4186500832438469   \n",
              "10    239        Pascal Groß       5    443            2  0.6706545501947403   \n",
              "11    531    Michail Antonio       5    398            2  0.9052570015192032   \n",
              "12    618    Raheem Sterling       5    448            2   2.079492338001728   \n",
              "13    843  James Ward-Prowse       4    360            2  1.5923993084579706   \n",
              "14   1250      Mohamed Salah       5    444            2   3.120680019259453   \n",
              "15   1679    Dominic Solanke       5    450            2   2.220315895974636   \n",
              "16   2496              Rodri       5    443            2  1.2342064082622528   \n",
              "17   2517    Martin Odegaard       5    446            2  1.5371647700667381   \n",
              "18   5221        Leon Bailey       4    208            2   1.301388144493103   \n",
              "19   5232     Alexander Isak       4    300            2  1.6722202897071838   \n",
              "\n",
              "   assists_1wks_x             xA_1wks_x shots_1wks_x key_passes_1wks_x  ...  \\\n",
              "0               1    1.1254648137837648           29                 7  ...   \n",
              "1               0   0.26749951019883156           20                 5  ...   \n",
              "2               0   0.47218552231788635           10                 5  ...   \n",
              "3               0   0.06968338042497635           14                 1  ...   \n",
              "4               0    1.3192270509898663           13                 9  ...   \n",
              "5               0  0.015900330618023872           10                 1  ...   \n",
              "6               1    0.8080089539289474           13                 4  ...   \n",
              "7               0    0.1520106978714466           11                 5  ...   \n",
              "8               2     0.526020236313343            8                 6  ...   \n",
              "9               0    0.6011396646499634            7                 1  ...   \n",
              "10              0     1.181119142100215           10                15  ...   \n",
              "11              0    0.3325394243001938            5                 2  ...   \n",
              "12              0    1.0941349938511848           13                 9  ...   \n",
              "13              3    0.8824616000056267            6                 5  ...   \n",
              "14              4    3.0809392035007477           15                12  ...   \n",
              "15              1   0.24999123811721802           13                 6  ...   \n",
              "16              1    1.6790738217532635           14                 6  ...   \n",
              "17              0   0.24661394953727722           16                 5  ...   \n",
              "18              1     0.760364443063736            4                 2  ...   \n",
              "19              0   0.04466302692890167            8                 1  ...   \n",
              "\n",
              "   key_passes_1wks_y yellow_cards red_cards position_y  \\\n",
              "0                  7            0         0          F   \n",
              "1                  5            0         0          F   \n",
              "2                  5            0         0          F   \n",
              "3                  1            0         0        F S   \n",
              "4                  9            0         0        F M   \n",
              "5                  1            1         0        F S   \n",
              "6                  4            1         0          M   \n",
              "7                  5            0         0          M   \n",
              "8                  6            0         0        F S   \n",
              "9                  1            1         0        M S   \n",
              "10                15            1         0          M   \n",
              "11                 2            1         0          F   \n",
              "12                 9            1         0          M   \n",
              "13                 5            1         0          M   \n",
              "14                12            0         0          F   \n",
              "15                 6            0         0          F   \n",
              "16                 6            2         0          M   \n",
              "17                 5            0         0          M   \n",
              "18                 2            1         0        M S   \n",
              "19                 1            0         0          F   \n",
              "\n",
              "               team_title_y npg_1wks_y         npxG_1wks_y  \\\n",
              "0           Manchester City          6   6.124001145362854   \n",
              "1            Crystal Palace          4   3.337449833750725   \n",
              "2                 Brentford          2   2.371610403060913   \n",
              "3                  Brighton          4  2.3121074587106705   \n",
              "4                 Tottenham          3  1.6028943955898285   \n",
              "5          Newcastle United          2   1.875918261706829   \n",
              "6                  West Ham          3   1.852049708366394   \n",
              "7                  Brighton          3   2.172745257616043   \n",
              "8         Nottingham Forest          3  2.4111403673887253   \n",
              "9   Wolverhampton Wanderers          3  0.4186500832438469   \n",
              "10                 Brighton          2  0.6706545501947403   \n",
              "11                 West Ham          2  0.9052570015192032   \n",
              "12                  Chelsea          2   2.079492338001728   \n",
              "13                 West Ham          2  1.5923993084579706   \n",
              "14                Liverpool          2  2.3595111817121506   \n",
              "15              Bournemouth          2   2.220315895974636   \n",
              "16          Manchester City          2  1.2342064082622528   \n",
              "17                  Arsenal          1  0.7760327197611332   \n",
              "18              Aston Villa          2   1.301388144493103   \n",
              "19         Newcastle United          2  1.6722202897071838   \n",
              "\n",
              "               xGChain            xGBuildup goals  \n",
              "0     6.56243109703064   0.5850657597184181     7  \n",
              "1     3.16320563852787   0.4057522751390934     4  \n",
              "2   3.4626695215702057   1.0711335241794586     4  \n",
              "3    3.259228117763996   0.8774372674524784     4  \n",
              "4    4.228595972061157   1.6196235567331314     3  \n",
              "5   1.9948590192943811  0.23684066534042358     3  \n",
              "6   2.6146714985370636   0.8377881795167923     3  \n",
              "7    3.237823724746704   1.1398873031139374     3  \n",
              "8    2.308046042919159  0.04454548377543688     3  \n",
              "9    0.880275965668261   0.5792413735762239     3  \n",
              "10  5.0939019322395325    4.227585554122925     2  \n",
              "11    2.37540265917778   1.1376062035560608     2  \n",
              "12   5.149070858955383    2.519196517765522     2  \n",
              "13  2.4336834009736776   0.8900273609906435     2  \n",
              "14   4.959689915180206    1.318560153245926     2  \n",
              "15  2.4893300533294678   0.2234213650226593     2  \n",
              "16  5.7838238179683685   4.9579348266124725     2  \n",
              "17   3.179510772228241   2.2696693688631058     2  \n",
              "18   2.695062145590782   0.7314617857336998     2  \n",
              "19  1.9089746177196503   0.7165845483541489     2  \n",
              "\n",
              "[20 rows x 49 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-461292eb-9d90-40f9-bc75-d98bea5cd8d7\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>player_name</th>\n",
              "      <th>games_x</th>\n",
              "      <th>time_x</th>\n",
              "      <th>goals_1wks_x</th>\n",
              "      <th>xG_1wks_x</th>\n",
              "      <th>assists_1wks_x</th>\n",
              "      <th>xA_1wks_x</th>\n",
              "      <th>shots_1wks_x</th>\n",
              "      <th>key_passes_1wks_x</th>\n",
              "      <th>...</th>\n",
              "      <th>key_passes_1wks_y</th>\n",
              "      <th>yellow_cards</th>\n",
              "      <th>red_cards</th>\n",
              "      <th>position_y</th>\n",
              "      <th>team_title_y</th>\n",
              "      <th>npg_1wks_y</th>\n",
              "      <th>npxG_1wks_y</th>\n",
              "      <th>xGChain</th>\n",
              "      <th>xGBuildup</th>\n",
              "      <th>goals</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>8260</td>\n",
              "      <td>Erling Haaland</td>\n",
              "      <td>5</td>\n",
              "      <td>445</td>\n",
              "      <td>7</td>\n",
              "      <td>7.646338880062103</td>\n",
              "      <td>1</td>\n",
              "      <td>1.1254648137837648</td>\n",
              "      <td>29</td>\n",
              "      <td>7</td>\n",
              "      <td>...</td>\n",
              "      <td>7</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>F</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>6</td>\n",
              "      <td>6.124001145362854</td>\n",
              "      <td>6.56243109703064</td>\n",
              "      <td>0.5850657597184181</td>\n",
              "      <td>7</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>3697</td>\n",
              "      <td>Odsonne Edouard</td>\n",
              "      <td>5</td>\n",
              "      <td>432</td>\n",
              "      <td>4</td>\n",
              "      <td>3.337449833750725</td>\n",
              "      <td>0</td>\n",
              "      <td>0.26749951019883156</td>\n",
              "      <td>20</td>\n",
              "      <td>5</td>\n",
              "      <td>...</td>\n",
              "      <td>5</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>F</td>\n",
              "      <td>Crystal Palace</td>\n",
              "      <td>4</td>\n",
              "      <td>3.337449833750725</td>\n",
              "      <td>3.16320563852787</td>\n",
              "      <td>0.4057522751390934</td>\n",
              "      <td>4</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>6552</td>\n",
              "      <td>Bryan Mbeumo</td>\n",
              "      <td>5</td>\n",
              "      <td>450</td>\n",
              "      <td>4</td>\n",
              "      <td>3.8939481377601624</td>\n",
              "      <td>0</td>\n",
              "      <td>0.47218552231788635</td>\n",
              "      <td>10</td>\n",
              "      <td>5</td>\n",
              "      <td>...</td>\n",
              "      <td>5</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>F</td>\n",
              "      <td>Brentford</td>\n",
              "      <td>2</td>\n",
              "      <td>2.371610403060913</td>\n",
              "      <td>3.4626695215702057</td>\n",
              "      <td>1.0711335241794586</td>\n",
              "      <td>4</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>10177</td>\n",
              "      <td>Evan Ferguson</td>\n",
              "      <td>5</td>\n",
              "      <td>207</td>\n",
              "      <td>4</td>\n",
              "      <td>2.3121074587106705</td>\n",
              "      <td>0</td>\n",
              "      <td>0.06968338042497635</td>\n",
              "      <td>14</td>\n",
              "      <td>1</td>\n",
              "      <td>...</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>F S</td>\n",
              "      <td>Brighton</td>\n",
              "      <td>4</td>\n",
              "      <td>2.3121074587106705</td>\n",
              "      <td>3.259228117763996</td>\n",
              "      <td>0.8774372674524784</td>\n",
              "      <td>4</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>453</td>\n",
              "      <td>Son Heung-Min</td>\n",
              "      <td>5</td>\n",
              "      <td>426</td>\n",
              "      <td>3</td>\n",
              "      <td>1.6028943955898285</td>\n",
              "      <td>0</td>\n",
              "      <td>1.3192270509898663</td>\n",
              "      <td>13</td>\n",
              "      <td>9</td>\n",
              "      <td>...</td>\n",
              "      <td>9</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>F M</td>\n",
              "      <td>Tottenham</td>\n",
              "      <td>3</td>\n",
              "      <td>1.6028943955898285</td>\n",
              "      <td>4.228595972061157</td>\n",
              "      <td>1.6196235567331314</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>468</td>\n",
              "      <td>Callum Wilson</td>\n",
              "      <td>5</td>\n",
              "      <td>166</td>\n",
              "      <td>3</td>\n",
              "      <td>2.6370871141552925</td>\n",
              "      <td>0</td>\n",
              "      <td>0.015900330618023872</td>\n",
              "      <td>10</td>\n",
              "      <td>1</td>\n",
              "      <td>...</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>F S</td>\n",
              "      <td>Newcastle United</td>\n",
              "      <td>2</td>\n",
              "      <td>1.875918261706829</td>\n",
              "      <td>1.9948590192943811</td>\n",
              "      <td>0.23684066534042358</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>1776</td>\n",
              "      <td>Jarrod Bowen</td>\n",
              "      <td>5</td>\n",
              "      <td>450</td>\n",
              "      <td>3</td>\n",
              "      <td>1.852049708366394</td>\n",
              "      <td>1</td>\n",
              "      <td>0.8080089539289474</td>\n",
              "      <td>13</td>\n",
              "      <td>4</td>\n",
              "      <td>...</td>\n",
              "      <td>4</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>M</td>\n",
              "      <td>West Ham</td>\n",
              "      <td>3</td>\n",
              "      <td>1.852049708366394</td>\n",
              "      <td>2.6146714985370636</td>\n",
              "      <td>0.8377881795167923</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>6049</td>\n",
              "      <td>Solly March</td>\n",
              "      <td>4</td>\n",
              "      <td>324</td>\n",
              "      <td>3</td>\n",
              "      <td>2.172745257616043</td>\n",
              "      <td>0</td>\n",
              "      <td>0.1520106978714466</td>\n",
              "      <td>11</td>\n",
              "      <td>5</td>\n",
              "      <td>...</td>\n",
              "      <td>5</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>M</td>\n",
              "      <td>Brighton</td>\n",
              "      <td>3</td>\n",
              "      <td>2.172745257616043</td>\n",
              "      <td>3.237823724746704</td>\n",
              "      <td>1.1398873031139374</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>7814</td>\n",
              "      <td>Taiwo Awoniyi</td>\n",
              "      <td>5</td>\n",
              "      <td>343</td>\n",
              "      <td>3</td>\n",
              "      <td>2.4111403673887253</td>\n",
              "      <td>2</td>\n",
              "      <td>0.526020236313343</td>\n",
              "      <td>8</td>\n",
              "      <td>6</td>\n",
              "      <td>...</td>\n",
              "      <td>6</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>F S</td>\n",
              "      <td>Nottingham Forest</td>\n",
              "      <td>3</td>\n",
              "      <td>2.4111403673887253</td>\n",
              "      <td>2.308046042919159</td>\n",
              "      <td>0.04454548377543688</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>8845</td>\n",
              "      <td>Hee-Chan Hwang</td>\n",
              "      <td>5</td>\n",
              "      <td>195</td>\n",
              "      <td>3</td>\n",
              "      <td>0.4186500832438469</td>\n",
              "      <td>0</td>\n",
              "      <td>0.6011396646499634</td>\n",
              "      <td>7</td>\n",
              "      <td>1</td>\n",
              "      <td>...</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>M S</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>3</td>\n",
              "      <td>0.4186500832438469</td>\n",
              "      <td>0.880275965668261</td>\n",
              "      <td>0.5792413735762239</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10</th>\n",
              "      <td>239</td>\n",
              "      <td>Pascal Groß</td>\n",
              "      <td>5</td>\n",
              "      <td>443</td>\n",
              "      <td>2</td>\n",
              "      <td>0.6706545501947403</td>\n",
              "      <td>0</td>\n",
              "      <td>1.181119142100215</td>\n",
              "      <td>10</td>\n",
              "      <td>15</td>\n",
              "      <td>...</td>\n",
              "      <td>15</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>M</td>\n",
              "      <td>Brighton</td>\n",
              "      <td>2</td>\n",
              "      <td>0.6706545501947403</td>\n",
              "      <td>5.0939019322395325</td>\n",
              "      <td>4.227585554122925</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>11</th>\n",
              "      <td>531</td>\n",
              "      <td>Michail Antonio</td>\n",
              "      <td>5</td>\n",
              "      <td>398</td>\n",
              "      <td>2</td>\n",
              "      <td>0.9052570015192032</td>\n",
              "      <td>0</td>\n",
              "      <td>0.3325394243001938</td>\n",
              "      <td>5</td>\n",
              "      <td>2</td>\n",
              "      <td>...</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>F</td>\n",
              "      <td>West Ham</td>\n",
              "      <td>2</td>\n",
              "      <td>0.9052570015192032</td>\n",
              "      <td>2.37540265917778</td>\n",
              "      <td>1.1376062035560608</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>12</th>\n",
              "      <td>618</td>\n",
              "      <td>Raheem Sterling</td>\n",
              "      <td>5</td>\n",
              "      <td>448</td>\n",
              "      <td>2</td>\n",
              "      <td>2.079492338001728</td>\n",
              "      <td>0</td>\n",
              "      <td>1.0941349938511848</td>\n",
              "      <td>13</td>\n",
              "      <td>9</td>\n",
              "      <td>...</td>\n",
              "      <td>9</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>M</td>\n",
              "      <td>Chelsea</td>\n",
              "      <td>2</td>\n",
              "      <td>2.079492338001728</td>\n",
              "      <td>5.149070858955383</td>\n",
              "      <td>2.519196517765522</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>13</th>\n",
              "      <td>843</td>\n",
              "      <td>James Ward-Prowse</td>\n",
              "      <td>4</td>\n",
              "      <td>360</td>\n",
              "      <td>2</td>\n",
              "      <td>1.5923993084579706</td>\n",
              "      <td>3</td>\n",
              "      <td>0.8824616000056267</td>\n",
              "      <td>6</td>\n",
              "      <td>5</td>\n",
              "      <td>...</td>\n",
              "      <td>5</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>M</td>\n",
              "      <td>West Ham</td>\n",
              "      <td>2</td>\n",
              "      <td>1.5923993084579706</td>\n",
              "      <td>2.4336834009736776</td>\n",
              "      <td>0.8900273609906435</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>14</th>\n",
              "      <td>1250</td>\n",
              "      <td>Mohamed Salah</td>\n",
              "      <td>5</td>\n",
              "      <td>444</td>\n",
              "      <td>2</td>\n",
              "      <td>3.120680019259453</td>\n",
              "      <td>4</td>\n",
              "      <td>3.0809392035007477</td>\n",
              "      <td>15</td>\n",
              "      <td>12</td>\n",
              "      <td>...</td>\n",
              "      <td>12</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>F</td>\n",
              "      <td>Liverpool</td>\n",
              "      <td>2</td>\n",
              "      <td>2.3595111817121506</td>\n",
              "      <td>4.959689915180206</td>\n",
              "      <td>1.318560153245926</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>15</th>\n",
              "      <td>1679</td>\n",
              "      <td>Dominic Solanke</td>\n",
              "      <td>5</td>\n",
              "      <td>450</td>\n",
              "      <td>2</td>\n",
              "      <td>2.220315895974636</td>\n",
              "      <td>1</td>\n",
              "      <td>0.24999123811721802</td>\n",
              "      <td>13</td>\n",
              "      <td>6</td>\n",
              "      <td>...</td>\n",
              "      <td>6</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>F</td>\n",
              "      <td>Bournemouth</td>\n",
              "      <td>2</td>\n",
              "      <td>2.220315895974636</td>\n",
              "      <td>2.4893300533294678</td>\n",
              "      <td>0.2234213650226593</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>16</th>\n",
              "      <td>2496</td>\n",
              "      <td>Rodri</td>\n",
              "      <td>5</td>\n",
              "      <td>443</td>\n",
              "      <td>2</td>\n",
              "      <td>1.2342064082622528</td>\n",
              "      <td>1</td>\n",
              "      <td>1.6790738217532635</td>\n",
              "      <td>14</td>\n",
              "      <td>6</td>\n",
              "      <td>...</td>\n",
              "      <td>6</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>M</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>2</td>\n",
              "      <td>1.2342064082622528</td>\n",
              "      <td>5.7838238179683685</td>\n",
              "      <td>4.9579348266124725</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>17</th>\n",
              "      <td>2517</td>\n",
              "      <td>Martin Odegaard</td>\n",
              "      <td>5</td>\n",
              "      <td>446</td>\n",
              "      <td>2</td>\n",
              "      <td>1.5371647700667381</td>\n",
              "      <td>0</td>\n",
              "      <td>0.24661394953727722</td>\n",
              "      <td>16</td>\n",
              "      <td>5</td>\n",
              "      <td>...</td>\n",
              "      <td>5</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>M</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>1</td>\n",
              "      <td>0.7760327197611332</td>\n",
              "      <td>3.179510772228241</td>\n",
              "      <td>2.2696693688631058</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>18</th>\n",
              "      <td>5221</td>\n",
              "      <td>Leon Bailey</td>\n",
              "      <td>4</td>\n",
              "      <td>208</td>\n",
              "      <td>2</td>\n",
              "      <td>1.301388144493103</td>\n",
              "      <td>1</td>\n",
              "      <td>0.760364443063736</td>\n",
              "      <td>4</td>\n",
              "      <td>2</td>\n",
              "      <td>...</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>M S</td>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>2</td>\n",
              "      <td>1.301388144493103</td>\n",
              "      <td>2.695062145590782</td>\n",
              "      <td>0.7314617857336998</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>19</th>\n",
              "      <td>5232</td>\n",
              "      <td>Alexander Isak</td>\n",
              "      <td>4</td>\n",
              "      <td>300</td>\n",
              "      <td>2</td>\n",
              "      <td>1.6722202897071838</td>\n",
              "      <td>0</td>\n",
              "      <td>0.04466302692890167</td>\n",
              "      <td>8</td>\n",
              "      <td>1</td>\n",
              "      <td>...</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>F</td>\n",
              "      <td>Newcastle United</td>\n",
              "      <td>2</td>\n",
              "      <td>1.6722202897071838</td>\n",
              "      <td>1.9089746177196503</td>\n",
              "      <td>0.7165845483541489</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>20 rows × 49 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-461292eb-9d90-40f9-bc75-d98bea5cd8d7')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-461292eb-9d90-40f9-bc75-d98bea5cd8d7 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-461292eb-9d90-40f9-bc75-d98bea5cd8d7');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-7cbf832d-689a-466b-8f34-24336ec0d847\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-7cbf832d-689a-466b-8f34-24336ec0d847')\"\n",
              "            title=\"Suggest charts.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-7cbf832d-689a-466b-8f34-24336ec0d847 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 60
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "EPL_player_df['assists'] = EPL_player_df['assists_1wks_x'].astype(int)\n",
        "top25assists = EPL_player_df.nlargest(20, 'assists')\n",
        "top25assists"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "id": "QhNKarUM-fT7",
        "outputId": "409e2a38-99a4-4d66-a9ec-8f76797e925f"
      },
      "execution_count": 61,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "        id             player_name games_x time_x goals_1wks_x  \\\n",
              "14    1250           Mohamed Salah       5    444            2   \n",
              "214   6382              Pedro Neto       5    450            0   \n",
              "13     843       James Ward-Prowse       4    360            2   \n",
              "33   10846          Julián Álvarez       5    450            2   \n",
              "87   10806            Kaoru Mitoma       5    443            1   \n",
              "193   5735    Jean-Philippe Mateta       3    100            0   \n",
              "203   6055              Phil Foden       5    340            0   \n",
              "8     7814           Taiwo Awoniyi       5    343            3   \n",
              "23    6556            Moussa Diaby       5    419            2   \n",
              "25    6818          James Maddison       5    438            2   \n",
              "27    7322             Bukayo Saka       5    450            2   \n",
              "49    5136               Estupiñán       4    360            1   \n",
              "119    672             Jordan Ayew       5    384            0   \n",
              "160   1823             Lucas Digne       5    444            0   \n",
              "174   3600            Serge Aurier       4    347            0   \n",
              "258   7752      Gabriel Martinelli       5    365            0   \n",
              "270   8226           Tariq Lamptey       2     91            0   \n",
              "289   8831  Iyenoma Destiny Udogie       5    430            0   \n",
              "293   8865           Ollie Watkins       5    429            0   \n",
              "299   9017              Malo Gusto       5    359            0   \n",
              "\n",
              "                xG_1wks_x assists_1wks_x            xA_1wks_x shots_1wks_x  \\\n",
              "14      3.120680019259453              4   3.0809392035007477           15   \n",
              "214    0.8383921086788177              4   2.3632755503058434           10   \n",
              "13     1.5923993084579706              3   0.8824616000056267            6   \n",
              "33     2.3662035390734673              3   1.4385859072208405           16   \n",
              "87     1.3460096381604671              3   2.0108523070812225            9   \n",
              "193                     0              3   0.9034757018089294            0   \n",
              "203    0.7319293543696404              3   1.1925841197371483           12   \n",
              "8      2.4111403673887253              2    0.526020236313343            8   \n",
              "23      0.933002158999443              2   2.7019495368003845           11   \n",
              "25     1.7090062648057938              2   1.3126252628862858           15   \n",
              "27     2.3411490619182587              2    1.041051372885704           12   \n",
              "49     0.6273901937529445              2   2.0448221787810326            6   \n",
              "119    1.3352972716093063              2    1.040465697646141           12   \n",
              "160   0.08576377481222153              2   0.8520027101039886            2   \n",
              "174  0.022981125861406326              2    0.566937267780304            1   \n",
              "258     0.666835606098175              2   0.2102539911866188            9   \n",
              "270   0.01694534160196781              2  0.22285597026348114            1   \n",
              "289    0.3593902289867401              2   0.8345238612964749            1   \n",
              "293    2.4122727811336517              2   1.2619192749261856           14   \n",
              "299   0.05822155252099037              2   0.6125726103782654            3   \n",
              "\n",
              "    key_passes_1wks_x  ... yellow_cards red_cards position_y  \\\n",
              "14                 12  ...            0         0          F   \n",
              "214                17  ...            1         0          M   \n",
              "13                  5  ...            1         0          M   \n",
              "33                 16  ...            1         0          M   \n",
              "87                 14  ...            2         0          M   \n",
              "193                 3  ...            0         0          S   \n",
              "203                14  ...            0         0        M S   \n",
              "8                   6  ...            0         0        F S   \n",
              "23                  9  ...            0         0        F M   \n",
              "25                 14  ...            2         0          M   \n",
              "27                 15  ...            1         0          F   \n",
              "49                 12  ...            2         0          D   \n",
              "119                 7  ...            1         0          M   \n",
              "160                12  ...            2         0          D   \n",
              "174                 2  ...            2         0          D   \n",
              "258                 4  ...            0         0          F   \n",
              "270                 2  ...            2         0        D S   \n",
              "289                 4  ...            1         0          D   \n",
              "293                 9  ...            0         0          F   \n",
              "299                 2  ...            0         0        D S   \n",
              "\n",
              "                team_title_y npg_1wks_y           npxG_1wks_y  \\\n",
              "14                 Liverpool          2    2.3595111817121506   \n",
              "214  Wolverhampton Wanderers          0    0.8383921086788177   \n",
              "13                  West Ham          2    1.5923993084579706   \n",
              "33           Manchester City          2    2.3662035390734673   \n",
              "87                  Brighton          1    1.3460096381604671   \n",
              "193           Crystal Palace          0                     0   \n",
              "203          Manchester City          0    0.7319293543696404   \n",
              "8          Nottingham Forest          3    2.4111403673887253   \n",
              "23               Aston Villa          2     0.933002158999443   \n",
              "25                 Tottenham          2    1.7090062648057938   \n",
              "27                   Arsenal          1    1.5799802839756012   \n",
              "49                  Brighton          1    0.6273901937529445   \n",
              "119           Crystal Palace          0    1.3352972716093063   \n",
              "160              Aston Villa          0   0.08576377481222153   \n",
              "174        Nottingham Forest          0  0.022981125861406326   \n",
              "258                  Arsenal          0     0.666835606098175   \n",
              "270                 Brighton          0   0.01694534160196781   \n",
              "289                Tottenham          0    0.3593902289867401   \n",
              "293              Aston Villa          0    2.4122727811336517   \n",
              "299                  Chelsea          0   0.05822155252099037   \n",
              "\n",
              "                 xGChain            xGBuildup goals assists  \n",
              "14     4.959689915180206    1.318560153245926     2       4  \n",
              "214   3.0828594714403152   0.4787079580128193     0       4  \n",
              "13    2.4336834009736776   0.8900273609906435     2       3  \n",
              "33     5.759887933731079    3.071375608444214     2       3  \n",
              "87     5.961892008781433    3.257947612553835     1       3  \n",
              "193   0.9402625262737274  0.15994777902960777     0       3  \n",
              "203   3.2757622078061104    2.269976355135441     0       3  \n",
              "8      2.308046042919159  0.04454548377543688     3       2  \n",
              "23     4.374222114682198   2.6094613447785378     2       2  \n",
              "25     5.271078109741211   3.3459045588970184     2       2  \n",
              "27    3.3033452332019806   1.4113519042730331     2       2  \n",
              "49     4.539102166891098   3.5398470759391785     1       2  \n",
              "119   2.3114949762821198   1.1384435147047043     0       2  \n",
              "160   1.8326681181788445   1.4727216772735119     0       2  \n",
              "174    1.259076088666916    0.692138809710741     0       2  \n",
              "258   2.5816489160060883    2.073520690202713     0       2  \n",
              "270  0.27053070068359375   0.2535853683948517     0       2  \n",
              "289   3.5766481459140778   2.9918579906225204     0       2  \n",
              "293     4.52520352602005   1.0770145878195763     0       2  \n",
              "299   1.9065518975257874   1.7622845768928528     0       2  \n",
              "\n",
              "[20 rows x 50 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-1daaee9e-fdaa-4e72-b2c5-f38bda1b6b19\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>player_name</th>\n",
              "      <th>games_x</th>\n",
              "      <th>time_x</th>\n",
              "      <th>goals_1wks_x</th>\n",
              "      <th>xG_1wks_x</th>\n",
              "      <th>assists_1wks_x</th>\n",
              "      <th>xA_1wks_x</th>\n",
              "      <th>shots_1wks_x</th>\n",
              "      <th>key_passes_1wks_x</th>\n",
              "      <th>...</th>\n",
              "      <th>yellow_cards</th>\n",
              "      <th>red_cards</th>\n",
              "      <th>position_y</th>\n",
              "      <th>team_title_y</th>\n",
              "      <th>npg_1wks_y</th>\n",
              "      <th>npxG_1wks_y</th>\n",
              "      <th>xGChain</th>\n",
              "      <th>xGBuildup</th>\n",
              "      <th>goals</th>\n",
              "      <th>assists</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>14</th>\n",
              "      <td>1250</td>\n",
              "      <td>Mohamed Salah</td>\n",
              "      <td>5</td>\n",
              "      <td>444</td>\n",
              "      <td>2</td>\n",
              "      <td>3.120680019259453</td>\n",
              "      <td>4</td>\n",
              "      <td>3.0809392035007477</td>\n",
              "      <td>15</td>\n",
              "      <td>12</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>F</td>\n",
              "      <td>Liverpool</td>\n",
              "      <td>2</td>\n",
              "      <td>2.3595111817121506</td>\n",
              "      <td>4.959689915180206</td>\n",
              "      <td>1.318560153245926</td>\n",
              "      <td>2</td>\n",
              "      <td>4</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>214</th>\n",
              "      <td>6382</td>\n",
              "      <td>Pedro Neto</td>\n",
              "      <td>5</td>\n",
              "      <td>450</td>\n",
              "      <td>0</td>\n",
              "      <td>0.8383921086788177</td>\n",
              "      <td>4</td>\n",
              "      <td>2.3632755503058434</td>\n",
              "      <td>10</td>\n",
              "      <td>17</td>\n",
              "      <td>...</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>M</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>0</td>\n",
              "      <td>0.8383921086788177</td>\n",
              "      <td>3.0828594714403152</td>\n",
              "      <td>0.4787079580128193</td>\n",
              "      <td>0</td>\n",
              "      <td>4</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>13</th>\n",
              "      <td>843</td>\n",
              "      <td>James Ward-Prowse</td>\n",
              "      <td>4</td>\n",
              "      <td>360</td>\n",
              "      <td>2</td>\n",
              "      <td>1.5923993084579706</td>\n",
              "      <td>3</td>\n",
              "      <td>0.8824616000056267</td>\n",
              "      <td>6</td>\n",
              "      <td>5</td>\n",
              "      <td>...</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>M</td>\n",
              "      <td>West Ham</td>\n",
              "      <td>2</td>\n",
              "      <td>1.5923993084579706</td>\n",
              "      <td>2.4336834009736776</td>\n",
              "      <td>0.8900273609906435</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>33</th>\n",
              "      <td>10846</td>\n",
              "      <td>Julián Álvarez</td>\n",
              "      <td>5</td>\n",
              "      <td>450</td>\n",
              "      <td>2</td>\n",
              "      <td>2.3662035390734673</td>\n",
              "      <td>3</td>\n",
              "      <td>1.4385859072208405</td>\n",
              "      <td>16</td>\n",
              "      <td>16</td>\n",
              "      <td>...</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>M</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>2</td>\n",
              "      <td>2.3662035390734673</td>\n",
              "      <td>5.759887933731079</td>\n",
              "      <td>3.071375608444214</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>87</th>\n",
              "      <td>10806</td>\n",
              "      <td>Kaoru Mitoma</td>\n",
              "      <td>5</td>\n",
              "      <td>443</td>\n",
              "      <td>1</td>\n",
              "      <td>1.3460096381604671</td>\n",
              "      <td>3</td>\n",
              "      <td>2.0108523070812225</td>\n",
              "      <td>9</td>\n",
              "      <td>14</td>\n",
              "      <td>...</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>M</td>\n",
              "      <td>Brighton</td>\n",
              "      <td>1</td>\n",
              "      <td>1.3460096381604671</td>\n",
              "      <td>5.961892008781433</td>\n",
              "      <td>3.257947612553835</td>\n",
              "      <td>1</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>193</th>\n",
              "      <td>5735</td>\n",
              "      <td>Jean-Philippe Mateta</td>\n",
              "      <td>3</td>\n",
              "      <td>100</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>3</td>\n",
              "      <td>0.9034757018089294</td>\n",
              "      <td>0</td>\n",
              "      <td>3</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>S</td>\n",
              "      <td>Crystal Palace</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.9402625262737274</td>\n",
              "      <td>0.15994777902960777</td>\n",
              "      <td>0</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>203</th>\n",
              "      <td>6055</td>\n",
              "      <td>Phil Foden</td>\n",
              "      <td>5</td>\n",
              "      <td>340</td>\n",
              "      <td>0</td>\n",
              "      <td>0.7319293543696404</td>\n",
              "      <td>3</td>\n",
              "      <td>1.1925841197371483</td>\n",
              "      <td>12</td>\n",
              "      <td>14</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>M S</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>0</td>\n",
              "      <td>0.7319293543696404</td>\n",
              "      <td>3.2757622078061104</td>\n",
              "      <td>2.269976355135441</td>\n",
              "      <td>0</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>7814</td>\n",
              "      <td>Taiwo Awoniyi</td>\n",
              "      <td>5</td>\n",
              "      <td>343</td>\n",
              "      <td>3</td>\n",
              "      <td>2.4111403673887253</td>\n",
              "      <td>2</td>\n",
              "      <td>0.526020236313343</td>\n",
              "      <td>8</td>\n",
              "      <td>6</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>F S</td>\n",
              "      <td>Nottingham Forest</td>\n",
              "      <td>3</td>\n",
              "      <td>2.4111403673887253</td>\n",
              "      <td>2.308046042919159</td>\n",
              "      <td>0.04454548377543688</td>\n",
              "      <td>3</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>23</th>\n",
              "      <td>6556</td>\n",
              "      <td>Moussa Diaby</td>\n",
              "      <td>5</td>\n",
              "      <td>419</td>\n",
              "      <td>2</td>\n",
              "      <td>0.933002158999443</td>\n",
              "      <td>2</td>\n",
              "      <td>2.7019495368003845</td>\n",
              "      <td>11</td>\n",
              "      <td>9</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>F M</td>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>2</td>\n",
              "      <td>0.933002158999443</td>\n",
              "      <td>4.374222114682198</td>\n",
              "      <td>2.6094613447785378</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>25</th>\n",
              "      <td>6818</td>\n",
              "      <td>James Maddison</td>\n",
              "      <td>5</td>\n",
              "      <td>438</td>\n",
              "      <td>2</td>\n",
              "      <td>1.7090062648057938</td>\n",
              "      <td>2</td>\n",
              "      <td>1.3126252628862858</td>\n",
              "      <td>15</td>\n",
              "      <td>14</td>\n",
              "      <td>...</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>M</td>\n",
              "      <td>Tottenham</td>\n",
              "      <td>2</td>\n",
              "      <td>1.7090062648057938</td>\n",
              "      <td>5.271078109741211</td>\n",
              "      <td>3.3459045588970184</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>27</th>\n",
              "      <td>7322</td>\n",
              "      <td>Bukayo Saka</td>\n",
              "      <td>5</td>\n",
              "      <td>450</td>\n",
              "      <td>2</td>\n",
              "      <td>2.3411490619182587</td>\n",
              "      <td>2</td>\n",
              "      <td>1.041051372885704</td>\n",
              "      <td>12</td>\n",
              "      <td>15</td>\n",
              "      <td>...</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>F</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>1</td>\n",
              "      <td>1.5799802839756012</td>\n",
              "      <td>3.3033452332019806</td>\n",
              "      <td>1.4113519042730331</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>49</th>\n",
              "      <td>5136</td>\n",
              "      <td>Estupiñán</td>\n",
              "      <td>4</td>\n",
              "      <td>360</td>\n",
              "      <td>1</td>\n",
              "      <td>0.6273901937529445</td>\n",
              "      <td>2</td>\n",
              "      <td>2.0448221787810326</td>\n",
              "      <td>6</td>\n",
              "      <td>12</td>\n",
              "      <td>...</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>D</td>\n",
              "      <td>Brighton</td>\n",
              "      <td>1</td>\n",
              "      <td>0.6273901937529445</td>\n",
              "      <td>4.539102166891098</td>\n",
              "      <td>3.5398470759391785</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>119</th>\n",
              "      <td>672</td>\n",
              "      <td>Jordan Ayew</td>\n",
              "      <td>5</td>\n",
              "      <td>384</td>\n",
              "      <td>0</td>\n",
              "      <td>1.3352972716093063</td>\n",
              "      <td>2</td>\n",
              "      <td>1.040465697646141</td>\n",
              "      <td>12</td>\n",
              "      <td>7</td>\n",
              "      <td>...</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>M</td>\n",
              "      <td>Crystal Palace</td>\n",
              "      <td>0</td>\n",
              "      <td>1.3352972716093063</td>\n",
              "      <td>2.3114949762821198</td>\n",
              "      <td>1.1384435147047043</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>160</th>\n",
              "      <td>1823</td>\n",
              "      <td>Lucas Digne</td>\n",
              "      <td>5</td>\n",
              "      <td>444</td>\n",
              "      <td>0</td>\n",
              "      <td>0.08576377481222153</td>\n",
              "      <td>2</td>\n",
              "      <td>0.8520027101039886</td>\n",
              "      <td>2</td>\n",
              "      <td>12</td>\n",
              "      <td>...</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>D</td>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>0</td>\n",
              "      <td>0.08576377481222153</td>\n",
              "      <td>1.8326681181788445</td>\n",
              "      <td>1.4727216772735119</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>174</th>\n",
              "      <td>3600</td>\n",
              "      <td>Serge Aurier</td>\n",
              "      <td>4</td>\n",
              "      <td>347</td>\n",
              "      <td>0</td>\n",
              "      <td>0.022981125861406326</td>\n",
              "      <td>2</td>\n",
              "      <td>0.566937267780304</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>...</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>D</td>\n",
              "      <td>Nottingham Forest</td>\n",
              "      <td>0</td>\n",
              "      <td>0.022981125861406326</td>\n",
              "      <td>1.259076088666916</td>\n",
              "      <td>0.692138809710741</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>258</th>\n",
              "      <td>7752</td>\n",
              "      <td>Gabriel Martinelli</td>\n",
              "      <td>5</td>\n",
              "      <td>365</td>\n",
              "      <td>0</td>\n",
              "      <td>0.666835606098175</td>\n",
              "      <td>2</td>\n",
              "      <td>0.2102539911866188</td>\n",
              "      <td>9</td>\n",
              "      <td>4</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>F</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>0</td>\n",
              "      <td>0.666835606098175</td>\n",
              "      <td>2.5816489160060883</td>\n",
              "      <td>2.073520690202713</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>270</th>\n",
              "      <td>8226</td>\n",
              "      <td>Tariq Lamptey</td>\n",
              "      <td>2</td>\n",
              "      <td>91</td>\n",
              "      <td>0</td>\n",
              "      <td>0.01694534160196781</td>\n",
              "      <td>2</td>\n",
              "      <td>0.22285597026348114</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>...</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>D S</td>\n",
              "      <td>Brighton</td>\n",
              "      <td>0</td>\n",
              "      <td>0.01694534160196781</td>\n",
              "      <td>0.27053070068359375</td>\n",
              "      <td>0.2535853683948517</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>289</th>\n",
              "      <td>8831</td>\n",
              "      <td>Iyenoma Destiny Udogie</td>\n",
              "      <td>5</td>\n",
              "      <td>430</td>\n",
              "      <td>0</td>\n",
              "      <td>0.3593902289867401</td>\n",
              "      <td>2</td>\n",
              "      <td>0.8345238612964749</td>\n",
              "      <td>1</td>\n",
              "      <td>4</td>\n",
              "      <td>...</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>D</td>\n",
              "      <td>Tottenham</td>\n",
              "      <td>0</td>\n",
              "      <td>0.3593902289867401</td>\n",
              "      <td>3.5766481459140778</td>\n",
              "      <td>2.9918579906225204</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>293</th>\n",
              "      <td>8865</td>\n",
              "      <td>Ollie Watkins</td>\n",
              "      <td>5</td>\n",
              "      <td>429</td>\n",
              "      <td>0</td>\n",
              "      <td>2.4122727811336517</td>\n",
              "      <td>2</td>\n",
              "      <td>1.2619192749261856</td>\n",
              "      <td>14</td>\n",
              "      <td>9</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>F</td>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>0</td>\n",
              "      <td>2.4122727811336517</td>\n",
              "      <td>4.52520352602005</td>\n",
              "      <td>1.0770145878195763</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>299</th>\n",
              "      <td>9017</td>\n",
              "      <td>Malo Gusto</td>\n",
              "      <td>5</td>\n",
              "      <td>359</td>\n",
              "      <td>0</td>\n",
              "      <td>0.05822155252099037</td>\n",
              "      <td>2</td>\n",
              "      <td>0.6125726103782654</td>\n",
              "      <td>3</td>\n",
              "      <td>2</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>D S</td>\n",
              "      <td>Chelsea</td>\n",
              "      <td>0</td>\n",
              "      <td>0.05822155252099037</td>\n",
              "      <td>1.9065518975257874</td>\n",
              "      <td>1.7622845768928528</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>20 rows × 50 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-1daaee9e-fdaa-4e72-b2c5-f38bda1b6b19')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-1daaee9e-fdaa-4e72-b2c5-f38bda1b6b19 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-1daaee9e-fdaa-4e72-b2c5-f38bda1b6b19');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-31315bd2-31fe-4d83-a3f9-0a14fe020ef8\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-31315bd2-31fe-4d83-a3f9-0a14fe020ef8')\"\n",
              "            title=\"Suggest charts.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-31315bd2-31fe-4d83-a3f9-0a14fe020ef8 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 61
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import pandas as pd\n",
        "import plotly.express as px\n",
        "import plotly.graph_objects as go"
      ],
      "metadata": {
        "id": "t81EQEbg_2jQ"
      },
      "execution_count": 62,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "fig3= go.Figure()\n",
        "fig3.add_trace(go.Scatter(x = top25goals[\"goals\"],\n",
        "                          y = top25goals[\"player_name\"],\n",
        "                          mode = 'markers',\n",
        "                          marker_color = 'darkblue',\n",
        "                          marker_size = 10,\n",
        "                          name = 'goals'))\n",
        "fig3.add_trace(go.Scatter(x = top25goals[\"xG_1wks_x\"],\n",
        "                          y = top25goals[\"player_name\"],\n",
        "                          mode = 'markers',\n",
        "                          marker_color = 'darkorange',\n",
        "                          marker_size = 10,\n",
        "                          name = 'xG'))\n",
        "for i in range(0, len(top25goals)):\n",
        "               fig3.add_shape(type='line',\n",
        "                              x0 = top25goals[\"goals\"][i],\n",
        "                              y0 = i,\n",
        "                              x1 = top25goals[\"xG_1wks_x\"][i],\n",
        "                              y1 = i,\n",
        "                              line=dict(color='crimson', width = 3))\n",
        "fig3.update_layout(title_text =\n",
        "                    \"Goals vs xG\",\n",
        "                    title_font_size = 30)\n",
        "fig3.update_xaxes(range=[0, 30])\n",
        "fig3.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 542
        },
        "id": "pCjmRmyw-6sd",
        "outputId": "c4812b42-dc89-4d29-a551-b5e7b7b326ea"
      },
      "execution_count": 63,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<html>\n",
              "<head><meta charset=\"utf-8\" /></head>\n",
              "<body>\n",
              "    <div>            <script src=\"https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.5/MathJax.js?config=TeX-AMS-MML_SVG\"></script><script type=\"text/javascript\">if (window.MathJax && window.MathJax.Hub && window.MathJax.Hub.Config) {window.MathJax.Hub.Config({SVG: {font: \"STIX-Web\"}});}</script>                <script type=\"text/javascript\">window.PlotlyConfig = {MathJaxConfig: 'local'};</script>\n",
              "        <script charset=\"utf-8\" src=\"https://cdn.plot.ly/plotly-2.24.1.min.js\"></script>                <div id=\"870adfd1-2132-4a2b-8b8a-f495eabc6a21\" class=\"plotly-graph-div\" style=\"height:525px; width:100%;\"></div>            <script type=\"text/javascript\">                                    window.PLOTLYENV=window.PLOTLYENV || {};                                    if (document.getElementById(\"870adfd1-2132-4a2b-8b8a-f495eabc6a21\")) {                    Plotly.newPlot(                        \"870adfd1-2132-4a2b-8b8a-f495eabc6a21\",                        [{\"marker\":{\"color\":\"darkblue\",\"size\":10},\"mode\":\"markers\",\"name\":\"goals\",\"x\":[7,4,4,4,3,3,3,3,3,3,2,2,2,2,2,2,2,2,2,2],\"y\":[\"Erling Haaland\",\"Odsonne Edouard\",\"Bryan Mbeumo\",\"Evan Ferguson\",\"Son Heung-Min\",\"Callum Wilson\",\"Jarrod Bowen\",\"Solly March\",\"Taiwo Awoniyi\",\"Hee-Chan Hwang\",\"Pascal Gro\\u00df\",\"Michail Antonio\",\"Raheem Sterling\",\"James Ward-Prowse\",\"Mohamed Salah\",\"Dominic Solanke\",\"Rodri\",\"Martin Odegaard\",\"Leon Bailey\",\"Alexander Isak\"],\"type\":\"scatter\"},{\"marker\":{\"color\":\"darkorange\",\"size\":10},\"mode\":\"markers\",\"name\":\"xG\",\"x\":[\"7.646338880062103\",\"3.337449833750725\",\"3.8939481377601624\",\"2.3121074587106705\",\"1.6028943955898285\",\"2.6370871141552925\",\"1.852049708366394\",\"2.172745257616043\",\"2.4111403673887253\",\"0.4186500832438469\",\"0.6706545501947403\",\"0.9052570015192032\",\"2.079492338001728\",\"1.5923993084579706\",\"3.120680019259453\",\"2.220315895974636\",\"1.2342064082622528\",\"1.5371647700667381\",\"1.301388144493103\",\"1.6722202897071838\"],\"y\":[\"Erling Haaland\",\"Odsonne Edouard\",\"Bryan Mbeumo\",\"Evan Ferguson\",\"Son Heung-Min\",\"Callum Wilson\",\"Jarrod Bowen\",\"Solly March\",\"Taiwo Awoniyi\",\"Hee-Chan Hwang\",\"Pascal Gro\\u00df\",\"Michail Antonio\",\"Raheem Sterling\",\"James Ward-Prowse\",\"Mohamed Salah\",\"Dominic Solanke\",\"Rodri\",\"Martin Odegaard\",\"Leon Bailey\",\"Alexander Isak\"],\"type\":\"scatter\"}],                        {\"template\":{\"data\":{\"histogram2dcontour\":[{\"type\":\"histogram2dcontour\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"choropleth\":[{\"type\":\"choropleth\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"histogram2d\":[{\"type\":\"histogram2d\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"heatmap\":[{\"type\":\"heatmap\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"heatmapgl\":[{\"type\":\"heatmapgl\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"contourcarpet\":[{\"type\":\"contourcarpet\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"contour\":[{\"type\":\"contour\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"surface\":[{\"type\":\"surface\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"mesh3d\":[{\"type\":\"mesh3d\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"scatter\":[{\"fillpattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2},\"type\":\"scatter\"}],\"parcoords\":[{\"type\":\"parcoords\",\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterpolargl\":[{\"type\":\"scatterpolargl\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"bar\":[{\"error_x\":{\"color\":\"#2a3f5f\"},\"error_y\":{\"color\":\"#2a3f5f\"},\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"bar\"}],\"scattergeo\":[{\"type\":\"scattergeo\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterpolar\":[{\"type\":\"scatterpolar\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"histogram\":[{\"marker\":{\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"histogram\"}],\"scattergl\":[{\"type\":\"scattergl\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatter3d\":[{\"type\":\"scatter3d\",\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scattermapbox\":[{\"type\":\"scattermapbox\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterternary\":[{\"type\":\"scatterternary\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scattercarpet\":[{\"type\":\"scattercarpet\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"carpet\":[{\"aaxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"baxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"type\":\"carpet\"}],\"table\":[{\"cells\":{\"fill\":{\"color\":\"#EBF0F8\"},\"line\":{\"color\":\"white\"}},\"header\":{\"fill\":{\"color\":\"#C8D4E3\"},\"line\":{\"color\":\"white\"}},\"type\":\"table\"}],\"barpolar\":[{\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"barpolar\"}],\"pie\":[{\"automargin\":true,\"type\":\"pie\"}]},\"layout\":{\"autotypenumbers\":\"strict\",\"colorway\":[\"#636efa\",\"#EF553B\",\"#00cc96\",\"#ab63fa\",\"#FFA15A\",\"#19d3f3\",\"#FF6692\",\"#B6E880\",\"#FF97FF\",\"#FECB52\"],\"font\":{\"color\":\"#2a3f5f\"},\"hovermode\":\"closest\",\"hoverlabel\":{\"align\":\"left\"},\"paper_bgcolor\":\"white\",\"plot_bgcolor\":\"#E5ECF6\",\"polar\":{\"bgcolor\":\"#E5ECF6\",\"angularaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"radialaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"ternary\":{\"bgcolor\":\"#E5ECF6\",\"aaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"baxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"caxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"coloraxis\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"colorscale\":{\"sequential\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"sequentialminus\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"diverging\":[[0,\"#8e0152\"],[0.1,\"#c51b7d\"],[0.2,\"#de77ae\"],[0.3,\"#f1b6da\"],[0.4,\"#fde0ef\"],[0.5,\"#f7f7f7\"],[0.6,\"#e6f5d0\"],[0.7,\"#b8e186\"],[0.8,\"#7fbc41\"],[0.9,\"#4d9221\"],[1,\"#276419\"]]},\"xaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"automargin\":true,\"zerolinewidth\":2},\"yaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"automargin\":true,\"zerolinewidth\":2},\"scene\":{\"xaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2},\"yaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2},\"zaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2}},\"shapedefaults\":{\"line\":{\"color\":\"#2a3f5f\"}},\"annotationdefaults\":{\"arrowcolor\":\"#2a3f5f\",\"arrowhead\":0,\"arrowwidth\":1},\"geo\":{\"bgcolor\":\"white\",\"landcolor\":\"#E5ECF6\",\"subunitcolor\":\"white\",\"showland\":true,\"showlakes\":true,\"lakecolor\":\"white\"},\"title\":{\"x\":0.05},\"mapbox\":{\"style\":\"light\"}}},\"shapes\":[{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":7,\"x1\":\"7.646338880062103\",\"y0\":0,\"y1\":0},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":4,\"x1\":\"3.337449833750725\",\"y0\":1,\"y1\":1},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":4,\"x1\":\"3.8939481377601624\",\"y0\":2,\"y1\":2},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":4,\"x1\":\"2.3121074587106705\",\"y0\":3,\"y1\":3},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":3,\"x1\":\"1.6028943955898285\",\"y0\":4,\"y1\":4},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":3,\"x1\":\"2.6370871141552925\",\"y0\":5,\"y1\":5},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":3,\"x1\":\"1.852049708366394\",\"y0\":6,\"y1\":6},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":3,\"x1\":\"2.172745257616043\",\"y0\":7,\"y1\":7},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":3,\"x1\":\"2.4111403673887253\",\"y0\":8,\"y1\":8},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":3,\"x1\":\"0.4186500832438469\",\"y0\":9,\"y1\":9},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":2,\"x1\":\"0.6706545501947403\",\"y0\":10,\"y1\":10},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":2,\"x1\":\"0.9052570015192032\",\"y0\":11,\"y1\":11},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":2,\"x1\":\"2.079492338001728\",\"y0\":12,\"y1\":12},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":2,\"x1\":\"1.5923993084579706\",\"y0\":13,\"y1\":13},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":2,\"x1\":\"3.120680019259453\",\"y0\":14,\"y1\":14},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":2,\"x1\":\"2.220315895974636\",\"y0\":15,\"y1\":15},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":2,\"x1\":\"1.2342064082622528\",\"y0\":16,\"y1\":16},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":2,\"x1\":\"1.5371647700667381\",\"y0\":17,\"y1\":17},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":2,\"x1\":\"1.301388144493103\",\"y0\":18,\"y1\":18},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":2,\"x1\":\"1.6722202897071838\",\"y0\":19,\"y1\":19}],\"title\":{\"font\":{\"size\":30},\"text\":\"Goals vs xG\"},\"xaxis\":{\"range\":[0,30]}},                        {\"responsive\": true}                    ).then(function(){\n",
              "                            \n",
              "var gd = document.getElementById('870adfd1-2132-4a2b-8b8a-f495eabc6a21');\n",
              "var x = new MutationObserver(function (mutations, observer) {{\n",
              "        var display = window.getComputedStyle(gd).display;\n",
              "        if (!display || display === 'none') {{\n",
              "            console.log([gd, 'removed!']);\n",
              "            Plotly.purge(gd);\n",
              "            observer.disconnect();\n",
              "        }}\n",
              "}});\n",
              "\n",
              "// Listen for the removal of the full notebook cells\n",
              "var notebookContainer = gd.closest('#notebook-container');\n",
              "if (notebookContainer) {{\n",
              "    x.observe(notebookContainer, {childList: true});\n",
              "}}\n",
              "\n",
              "// Listen for the clearing of the current output cell\n",
              "var outputEl = gd.closest('.output');\n",
              "if (outputEl) {{\n",
              "    x.observe(outputEl, {childList: true});\n",
              "}}\n",
              "\n",
              "                        })                };                            </script>        </div>\n",
              "</body>\n",
              "</html>"
            ]
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "seasonedit = one_game_df.drop(columns=[ 'yellow_cards','red_cards','time'])"
      ],
      "metadata": {
        "id": "zxhwefRPFQDN"
      },
      "execution_count": 64,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "top25assists.columns"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "wSmCXk6YFSz5",
        "outputId": "07463040-eca7-468b-8ac6-3b3a0aa762f3"
      },
      "execution_count": 65,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Index(['id', 'player_name', 'games_x', 'time_x', 'goals_1wks_x', 'xG_1wks_x',\n",
              "       'assists_1wks_x', 'xA_1wks_x', 'shots_1wks_x', 'key_passes_1wks_x',\n",
              "       'yellow_cards_x', 'red_cards_x', 'position_x', 'team_title_x',\n",
              "       'npg_1wks_x', 'npxG_1wks_x', 'xGChain_x', 'xGBuildup_x', 'games_y',\n",
              "       'time_y', 'goals_season', 'xG_season', 'assists_season', 'xA_season',\n",
              "       'shots_season', 'key_passes_season', 'yellow_cards_y', 'red_cards_y',\n",
              "       'npg_season', 'npxG_season', 'xGChain_y', 'xGBuildup_y', 'games',\n",
              "       'time', 'goals_1wks_y', 'xG_1wks_y', 'assists_1wks_y', 'xA_1wks_y',\n",
              "       'shots_1wks_y', 'key_passes_1wks_y', 'yellow_cards', 'red_cards',\n",
              "       'position_y', 'team_title_y', 'npg_1wks_y', 'npxG_1wks_y', 'xGChain',\n",
              "       'xGBuildup', 'goals', 'assists'],\n",
              "      dtype='object')"
            ]
          },
          "metadata": {},
          "execution_count": 65
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "top20assists = top25assists.drop(columns=[ 'shots_1wks_x', 'key_passes_1wks_x',\n",
        "       'yellow_cards_x', 'red_cards_x', 'position_x', 'team_title_x',\n",
        "       'npg_1wks_x', 'npxG_1wks_x', 'xGChain_x', 'xGBuildup_x', 'games_y',\n",
        "       'time_y', 'goals_season', 'xG_season', 'assists_season', 'xA_season',\n",
        "       'shots_season', 'key_passes_season', 'yellow_cards_y', 'red_cards_y',\n",
        "       'npg_season', 'npxG_season', 'xGChain_y', 'xGBuildup_y', 'games',\n",
        "       'time', 'goals_1wks_y', 'xG_1wks_y', 'assists_1wks_y', 'xA_1wks_y',\n",
        "       'shots_1wks_y', 'key_passes_1wks_y', 'yellow_cards', 'red_cards',\n",
        "       'position_y', 'team_title_y', 'npg_1wks_y', 'npxG_1wks_y', 'xGChain',\n",
        "       'xGBuildup', 'assists_1wks_x', 'games_x', 'time_x', 'goals_1wks_x', 'id' ])\n",
        "\n",
        "top20assists.reset_index(inplace = True,drop = True)\n",
        "top20assists"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 676
        },
        "id": "_Xn659fiFXvb",
        "outputId": "3a879d95-b3e8-4c73-d6aa-2a4e7ee7405e"
      },
      "execution_count": 66,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "               player_name             xG_1wks_x            xA_1wks_x  goals  \\\n",
              "0            Mohamed Salah     3.120680019259453   3.0809392035007477      2   \n",
              "1               Pedro Neto    0.8383921086788177   2.3632755503058434      0   \n",
              "2        James Ward-Prowse    1.5923993084579706   0.8824616000056267      2   \n",
              "3           Julián Álvarez    2.3662035390734673   1.4385859072208405      2   \n",
              "4             Kaoru Mitoma    1.3460096381604671   2.0108523070812225      1   \n",
              "5     Jean-Philippe Mateta                     0   0.9034757018089294      0   \n",
              "6               Phil Foden    0.7319293543696404   1.1925841197371483      0   \n",
              "7            Taiwo Awoniyi    2.4111403673887253    0.526020236313343      3   \n",
              "8             Moussa Diaby     0.933002158999443   2.7019495368003845      2   \n",
              "9           James Maddison    1.7090062648057938   1.3126252628862858      2   \n",
              "10             Bukayo Saka    2.3411490619182587    1.041051372885704      2   \n",
              "11               Estupiñán    0.6273901937529445   2.0448221787810326      1   \n",
              "12             Jordan Ayew    1.3352972716093063    1.040465697646141      0   \n",
              "13             Lucas Digne   0.08576377481222153   0.8520027101039886      0   \n",
              "14            Serge Aurier  0.022981125861406326    0.566937267780304      0   \n",
              "15      Gabriel Martinelli     0.666835606098175   0.2102539911866188      0   \n",
              "16           Tariq Lamptey   0.01694534160196781  0.22285597026348114      0   \n",
              "17  Iyenoma Destiny Udogie    0.3593902289867401   0.8345238612964749      0   \n",
              "18           Ollie Watkins    2.4122727811336517   1.2619192749261856      0   \n",
              "19              Malo Gusto   0.05822155252099037   0.6125726103782654      0   \n",
              "\n",
              "    assists  \n",
              "0         4  \n",
              "1         4  \n",
              "2         3  \n",
              "3         3  \n",
              "4         3  \n",
              "5         3  \n",
              "6         3  \n",
              "7         2  \n",
              "8         2  \n",
              "9         2  \n",
              "10        2  \n",
              "11        2  \n",
              "12        2  \n",
              "13        2  \n",
              "14        2  \n",
              "15        2  \n",
              "16        2  \n",
              "17        2  \n",
              "18        2  \n",
              "19        2  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-5107a8d1-30cf-4230-9605-4063794d65e6\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>player_name</th>\n",
              "      <th>xG_1wks_x</th>\n",
              "      <th>xA_1wks_x</th>\n",
              "      <th>goals</th>\n",
              "      <th>assists</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>Mohamed Salah</td>\n",
              "      <td>3.120680019259453</td>\n",
              "      <td>3.0809392035007477</td>\n",
              "      <td>2</td>\n",
              "      <td>4</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Pedro Neto</td>\n",
              "      <td>0.8383921086788177</td>\n",
              "      <td>2.3632755503058434</td>\n",
              "      <td>0</td>\n",
              "      <td>4</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>James Ward-Prowse</td>\n",
              "      <td>1.5923993084579706</td>\n",
              "      <td>0.8824616000056267</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>Julián Álvarez</td>\n",
              "      <td>2.3662035390734673</td>\n",
              "      <td>1.4385859072208405</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>Kaoru Mitoma</td>\n",
              "      <td>1.3460096381604671</td>\n",
              "      <td>2.0108523070812225</td>\n",
              "      <td>1</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>Jean-Philippe Mateta</td>\n",
              "      <td>0</td>\n",
              "      <td>0.9034757018089294</td>\n",
              "      <td>0</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>Phil Foden</td>\n",
              "      <td>0.7319293543696404</td>\n",
              "      <td>1.1925841197371483</td>\n",
              "      <td>0</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>Taiwo Awoniyi</td>\n",
              "      <td>2.4111403673887253</td>\n",
              "      <td>0.526020236313343</td>\n",
              "      <td>3</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>Moussa Diaby</td>\n",
              "      <td>0.933002158999443</td>\n",
              "      <td>2.7019495368003845</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>James Maddison</td>\n",
              "      <td>1.7090062648057938</td>\n",
              "      <td>1.3126252628862858</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10</th>\n",
              "      <td>Bukayo Saka</td>\n",
              "      <td>2.3411490619182587</td>\n",
              "      <td>1.041051372885704</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>11</th>\n",
              "      <td>Estupiñán</td>\n",
              "      <td>0.6273901937529445</td>\n",
              "      <td>2.0448221787810326</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>12</th>\n",
              "      <td>Jordan Ayew</td>\n",
              "      <td>1.3352972716093063</td>\n",
              "      <td>1.040465697646141</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>13</th>\n",
              "      <td>Lucas Digne</td>\n",
              "      <td>0.08576377481222153</td>\n",
              "      <td>0.8520027101039886</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>14</th>\n",
              "      <td>Serge Aurier</td>\n",
              "      <td>0.022981125861406326</td>\n",
              "      <td>0.566937267780304</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>15</th>\n",
              "      <td>Gabriel Martinelli</td>\n",
              "      <td>0.666835606098175</td>\n",
              "      <td>0.2102539911866188</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>16</th>\n",
              "      <td>Tariq Lamptey</td>\n",
              "      <td>0.01694534160196781</td>\n",
              "      <td>0.22285597026348114</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>17</th>\n",
              "      <td>Iyenoma Destiny Udogie</td>\n",
              "      <td>0.3593902289867401</td>\n",
              "      <td>0.8345238612964749</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>18</th>\n",
              "      <td>Ollie Watkins</td>\n",
              "      <td>2.4122727811336517</td>\n",
              "      <td>1.2619192749261856</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>19</th>\n",
              "      <td>Malo Gusto</td>\n",
              "      <td>0.05822155252099037</td>\n",
              "      <td>0.6125726103782654</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-5107a8d1-30cf-4230-9605-4063794d65e6')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-5107a8d1-30cf-4230-9605-4063794d65e6 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-5107a8d1-30cf-4230-9605-4063794d65e6');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-a66e597c-e62e-4513-b7c8-cee4feb7e0c5\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-a66e597c-e62e-4513-b7c8-cee4feb7e0c5')\"\n",
              "            title=\"Suggest charts.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-a66e597c-e62e-4513-b7c8-cee4feb7e0c5 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 66
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "fig4= go.Figure()\n",
        "fig4.add_trace(go.Scatter(x = top20assists[\"assists\"],\n",
        "                          y = top20assists[\"player_name\"],\n",
        "                          mode = 'markers',\n",
        "                          marker_color = 'darkblue',\n",
        "                          marker_size = 10,\n",
        "                          name = 'assists'))\n",
        "fig4.add_trace(go.Scatter(x = top20assists[\"xA_1wks_x\"],\n",
        "                          y = top20assists[\"player_name\"],\n",
        "                          mode = 'markers',\n",
        "                          marker_color = 'darkorange',\n",
        "                          marker_size = 10,\n",
        "                          name = 'xA'))\n",
        "for i in range(0, len(top20assists)):\n",
        "               fig4.add_shape(type='line',\n",
        "                              x0 = top20assists['assists'][i],\n",
        "                              y0 = i,\n",
        "                              x1 = top20assists[\"xA_1wks_x\"][i],\n",
        "                              y1 = i,\n",
        "                              line=dict(color='crimson', width = 3))\n",
        "fig4.update_layout(title_text =\n",
        "                    \"assists vs xG\",\n",
        "                    title_font_size = 15)\n",
        "fig4.update_xaxes(range=[0, 15])\n",
        "fig4.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 542
        },
        "id": "P6oVjqCSF4Pw",
        "outputId": "e357282b-40a5-4d8d-9ad4-b0aadcf471e0"
      },
      "execution_count": 67,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<html>\n",
              "<head><meta charset=\"utf-8\" /></head>\n",
              "<body>\n",
              "    <div>            <script src=\"https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.5/MathJax.js?config=TeX-AMS-MML_SVG\"></script><script type=\"text/javascript\">if (window.MathJax && window.MathJax.Hub && window.MathJax.Hub.Config) {window.MathJax.Hub.Config({SVG: {font: \"STIX-Web\"}});}</script>                <script type=\"text/javascript\">window.PlotlyConfig = {MathJaxConfig: 'local'};</script>\n",
              "        <script charset=\"utf-8\" src=\"https://cdn.plot.ly/plotly-2.24.1.min.js\"></script>                <div id=\"3325ae94-03e8-4ce1-9d88-e0e6f49bd096\" class=\"plotly-graph-div\" style=\"height:525px; width:100%;\"></div>            <script type=\"text/javascript\">                                    window.PLOTLYENV=window.PLOTLYENV || {};                                    if (document.getElementById(\"3325ae94-03e8-4ce1-9d88-e0e6f49bd096\")) {                    Plotly.newPlot(                        \"3325ae94-03e8-4ce1-9d88-e0e6f49bd096\",                        [{\"marker\":{\"color\":\"darkblue\",\"size\":10},\"mode\":\"markers\",\"name\":\"assists\",\"x\":[4,4,3,3,3,3,3,2,2,2,2,2,2,2,2,2,2,2,2,2],\"y\":[\"Mohamed Salah\",\"Pedro Neto\",\"James Ward-Prowse\",\"Juli\\u00e1n \\u00c1lvarez\",\"Kaoru Mitoma\",\"Jean-Philippe Mateta\",\"Phil Foden\",\"Taiwo Awoniyi\",\"Moussa Diaby\",\"James Maddison\",\"Bukayo Saka\",\"Estupi\\u00f1\\u00e1n\",\"Jordan Ayew\",\"Lucas Digne\",\"Serge Aurier\",\"Gabriel Martinelli\",\"Tariq Lamptey\",\"Iyenoma Destiny Udogie\",\"Ollie Watkins\",\"Malo Gusto\"],\"type\":\"scatter\"},{\"marker\":{\"color\":\"darkorange\",\"size\":10},\"mode\":\"markers\",\"name\":\"xA\",\"x\":[\"3.0809392035007477\",\"2.3632755503058434\",\"0.8824616000056267\",\"1.4385859072208405\",\"2.0108523070812225\",\"0.9034757018089294\",\"1.1925841197371483\",\"0.526020236313343\",\"2.7019495368003845\",\"1.3126252628862858\",\"1.041051372885704\",\"2.0448221787810326\",\"1.040465697646141\",\"0.8520027101039886\",\"0.566937267780304\",\"0.2102539911866188\",\"0.22285597026348114\",\"0.8345238612964749\",\"1.2619192749261856\",\"0.6125726103782654\"],\"y\":[\"Mohamed Salah\",\"Pedro Neto\",\"James Ward-Prowse\",\"Juli\\u00e1n \\u00c1lvarez\",\"Kaoru Mitoma\",\"Jean-Philippe Mateta\",\"Phil Foden\",\"Taiwo Awoniyi\",\"Moussa Diaby\",\"James Maddison\",\"Bukayo Saka\",\"Estupi\\u00f1\\u00e1n\",\"Jordan Ayew\",\"Lucas Digne\",\"Serge Aurier\",\"Gabriel Martinelli\",\"Tariq Lamptey\",\"Iyenoma Destiny Udogie\",\"Ollie Watkins\",\"Malo Gusto\"],\"type\":\"scatter\"}],                        {\"template\":{\"data\":{\"histogram2dcontour\":[{\"type\":\"histogram2dcontour\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"choropleth\":[{\"type\":\"choropleth\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"histogram2d\":[{\"type\":\"histogram2d\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"heatmap\":[{\"type\":\"heatmap\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"heatmapgl\":[{\"type\":\"heatmapgl\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"contourcarpet\":[{\"type\":\"contourcarpet\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"contour\":[{\"type\":\"contour\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"surface\":[{\"type\":\"surface\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"mesh3d\":[{\"type\":\"mesh3d\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"scatter\":[{\"fillpattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2},\"type\":\"scatter\"}],\"parcoords\":[{\"type\":\"parcoords\",\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterpolargl\":[{\"type\":\"scatterpolargl\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"bar\":[{\"error_x\":{\"color\":\"#2a3f5f\"},\"error_y\":{\"color\":\"#2a3f5f\"},\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"bar\"}],\"scattergeo\":[{\"type\":\"scattergeo\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterpolar\":[{\"type\":\"scatterpolar\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"histogram\":[{\"marker\":{\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"histogram\"}],\"scattergl\":[{\"type\":\"scattergl\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatter3d\":[{\"type\":\"scatter3d\",\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scattermapbox\":[{\"type\":\"scattermapbox\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterternary\":[{\"type\":\"scatterternary\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scattercarpet\":[{\"type\":\"scattercarpet\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"carpet\":[{\"aaxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"baxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"type\":\"carpet\"}],\"table\":[{\"cells\":{\"fill\":{\"color\":\"#EBF0F8\"},\"line\":{\"color\":\"white\"}},\"header\":{\"fill\":{\"color\":\"#C8D4E3\"},\"line\":{\"color\":\"white\"}},\"type\":\"table\"}],\"barpolar\":[{\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"barpolar\"}],\"pie\":[{\"automargin\":true,\"type\":\"pie\"}]},\"layout\":{\"autotypenumbers\":\"strict\",\"colorway\":[\"#636efa\",\"#EF553B\",\"#00cc96\",\"#ab63fa\",\"#FFA15A\",\"#19d3f3\",\"#FF6692\",\"#B6E880\",\"#FF97FF\",\"#FECB52\"],\"font\":{\"color\":\"#2a3f5f\"},\"hovermode\":\"closest\",\"hoverlabel\":{\"align\":\"left\"},\"paper_bgcolor\":\"white\",\"plot_bgcolor\":\"#E5ECF6\",\"polar\":{\"bgcolor\":\"#E5ECF6\",\"angularaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"radialaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"ternary\":{\"bgcolor\":\"#E5ECF6\",\"aaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"baxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"caxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"coloraxis\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"colorscale\":{\"sequential\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"sequentialminus\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"diverging\":[[0,\"#8e0152\"],[0.1,\"#c51b7d\"],[0.2,\"#de77ae\"],[0.3,\"#f1b6da\"],[0.4,\"#fde0ef\"],[0.5,\"#f7f7f7\"],[0.6,\"#e6f5d0\"],[0.7,\"#b8e186\"],[0.8,\"#7fbc41\"],[0.9,\"#4d9221\"],[1,\"#276419\"]]},\"xaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"automargin\":true,\"zerolinewidth\":2},\"yaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"automargin\":true,\"zerolinewidth\":2},\"scene\":{\"xaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2},\"yaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2},\"zaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2}},\"shapedefaults\":{\"line\":{\"color\":\"#2a3f5f\"}},\"annotationdefaults\":{\"arrowcolor\":\"#2a3f5f\",\"arrowhead\":0,\"arrowwidth\":1},\"geo\":{\"bgcolor\":\"white\",\"landcolor\":\"#E5ECF6\",\"subunitcolor\":\"white\",\"showland\":true,\"showlakes\":true,\"lakecolor\":\"white\"},\"title\":{\"x\":0.05},\"mapbox\":{\"style\":\"light\"}}},\"shapes\":[{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":4,\"x1\":\"3.0809392035007477\",\"y0\":0,\"y1\":0},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":4,\"x1\":\"2.3632755503058434\",\"y0\":1,\"y1\":1},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":3,\"x1\":\"0.8824616000056267\",\"y0\":2,\"y1\":2},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":3,\"x1\":\"1.4385859072208405\",\"y0\":3,\"y1\":3},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":3,\"x1\":\"2.0108523070812225\",\"y0\":4,\"y1\":4},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":3,\"x1\":\"0.9034757018089294\",\"y0\":5,\"y1\":5},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":3,\"x1\":\"1.1925841197371483\",\"y0\":6,\"y1\":6},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":2,\"x1\":\"0.526020236313343\",\"y0\":7,\"y1\":7},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":2,\"x1\":\"2.7019495368003845\",\"y0\":8,\"y1\":8},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":2,\"x1\":\"1.3126252628862858\",\"y0\":9,\"y1\":9},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":2,\"x1\":\"1.041051372885704\",\"y0\":10,\"y1\":10},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":2,\"x1\":\"2.0448221787810326\",\"y0\":11,\"y1\":11},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":2,\"x1\":\"1.040465697646141\",\"y0\":12,\"y1\":12},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":2,\"x1\":\"0.8520027101039886\",\"y0\":13,\"y1\":13},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":2,\"x1\":\"0.566937267780304\",\"y0\":14,\"y1\":14},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":2,\"x1\":\"0.2102539911866188\",\"y0\":15,\"y1\":15},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":2,\"x1\":\"0.22285597026348114\",\"y0\":16,\"y1\":16},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":2,\"x1\":\"0.8345238612964749\",\"y0\":17,\"y1\":17},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":2,\"x1\":\"1.2619192749261856\",\"y0\":18,\"y1\":18},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":2,\"x1\":\"0.6125726103782654\",\"y0\":19,\"y1\":19}],\"title\":{\"font\":{\"size\":15},\"text\":\"assists vs xG\"},\"xaxis\":{\"range\":[0,15]}},                        {\"responsive\": true}                    ).then(function(){\n",
              "                            \n",
              "var gd = document.getElementById('3325ae94-03e8-4ce1-9d88-e0e6f49bd096');\n",
              "var x = new MutationObserver(function (mutations, observer) {{\n",
              "        var display = window.getComputedStyle(gd).display;\n",
              "        if (!display || display === 'none') {{\n",
              "            console.log([gd, 'removed!']);\n",
              "            Plotly.purge(gd);\n",
              "            observer.disconnect();\n",
              "        }}\n",
              "}});\n",
              "\n",
              "// Listen for the removal of the full notebook cells\n",
              "var notebookContainer = gd.closest('#notebook-container');\n",
              "if (notebookContainer) {{\n",
              "    x.observe(notebookContainer, {childList: true});\n",
              "}}\n",
              "\n",
              "// Listen for the clearing of the current output cell\n",
              "var outputEl = gd.closest('.output');\n",
              "if (outputEl) {{\n",
              "    x.observe(outputEl, {childList: true});\n",
              "}}\n",
              "\n",
              "                        })                };                            </script>        </div>\n",
              "</body>\n",
              "</html>"
            ]
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import pandas as pd\n",
        "import matplotlib.pyplot as plt\n",
        "\n",
        "# Assuming you have already loaded the DataFrame named 'Top50'\n",
        "\n",
        "# Filter the DataFrame by position type\n",
        "midfielders = Top50[Top50['pos'] == 'M']\n",
        "forwards = Top50[Top50['pos'] == 'F']\n",
        "defenders = Top50[Top50['pos'] == 'D']\n",
        "\n",
        "# Sort the filtered DataFrames by '5GW Total' in descending order\n",
        "midfielders = midfielders.sort_values(by='5GW Total', ascending=False)\n",
        "forwards = forwards.sort_values(by='5GW Total', ascending=False)\n",
        "defenders = defenders.sort_values(by='5GW Total', ascending=False)\n",
        "\n",
        "# Plotting the bar charts\n",
        "plt.figure(figsize=(12, 6))\n",
        "\n",
        "# Midfielders chart\n",
        "plt.subplot(131)\n",
        "plt.bar(midfielders['name'][:10], midfielders['5GW Total'][:10])\n",
        "plt.title('Top 10 Midfielders by 5GW Total')\n",
        "plt.xticks(rotation=45)\n",
        "\n",
        "# Forwards chart\n",
        "plt.subplot(132)\n",
        "plt.bar(forwards['name'][:10], forwards['5GW Total'][:10])\n",
        "plt.title('Top 10 Forwards by 5GW Total')\n",
        "plt.xticks(rotation=45)\n",
        "\n",
        "# Defenders chart\n",
        "plt.subplot(133)\n",
        "plt.bar(defenders['name'][:10], defenders['5GW Total'][:10])\n",
        "plt.title('Top 10 Defenders by 5GW Total')\n",
        "plt.xticks(rotation=45)\n",
        "\n",
        "plt.tight_layout()\n",
        "plt.show()\n"
      ],
      "metadata": {
        "id": "FN06IYwSKGLw",
        "outputId": "51b7ec6a-f257-460f-e2a0-559e7485b42f",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 601
        }
      },
      "execution_count": 68,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1200x600 with 3 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import pandas as pd\n",
        "import matplotlib.pyplot as plt\n",
        "\n",
        "# Assuming you have already loaded the DataFrame named 'Top50'\n",
        "\n",
        "# Filter the DataFrame by position type\n",
        "midfielders = Top50[Top50['pos'] == 'M']\n",
        "forwards = Top50[Top50['pos'] == 'F']\n",
        "defenders = Top50[Top50['pos'] == 'D']\n",
        "\n",
        "# Sort the filtered DataFrames by '5GW Total' in descending order\n",
        "midfielders = midfielders.sort_values(by='5GW Total', ascending=False)\n",
        "forwards = forwards.sort_values(by='5GW Total', ascending=False)\n",
        "defenders = defenders.sort_values(by='5GW Total', ascending=False)\n",
        "\n",
        "# Create a list of colors for each chart\n",
        "colors = ['blue', 'green', 'red']\n",
        "\n",
        "# Plotting the horizontal bar charts with different colors\n",
        "plt.figure(figsize=(10, 6))\n",
        "\n",
        "# Midfielders chart\n",
        "plt.barh(midfielders['name'][:10], midfielders['5GW Total'][:10], color=colors[0])\n",
        "plt.title('Top 10 Midfielders by 5GW Total')\n",
        "plt.xlabel('5GW Total')\n",
        "plt.gca().invert_yaxis()  # Invert y-axis to have higher values at the top\n",
        "\n",
        "# Forwards chart\n",
        "plt.figure(figsize=(10, 6))\n",
        "plt.barh(forwards['name'][:10], forwards['5GW Total'][:10], color=colors[1])\n",
        "plt.title('Top 10 Forwards by 5GW Total')\n",
        "plt.xlabel('5GW Total')\n",
        "plt.gca().invert_yaxis()  # Invert y-axis to have higher values at the top\n",
        "\n",
        "# Defenders chart\n",
        "plt.figure(figsize=(10, 6))\n",
        "plt.barh(defenders['name'][:10], defenders['5GW Total'][:10], color=colors[2])\n",
        "plt.title('Top 10 Defenders by 5GW Total')\n",
        "plt.xlabel('5GW Total')\n",
        "plt.gca().invert_yaxis()  # Invert y-axis to have higher values at the top\n",
        "\n",
        "plt.tight_layout()\n",
        "plt.show()\n"
      ],
      "metadata": {
        "id": "VSYcUse-SrV-",
        "outputId": "c7978c72-c1f6-4ddb-bb20-07777d33d4e6",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        }
      },
      "execution_count": 69,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1000x600 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1000x600 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1000x600 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import pandas as pd\n",
        "import seaborn as sns\n",
        "import matplotlib.pyplot as plt\n",
        "\n",
        "# Assuming you have already loaded the DataFrame named 'gwadjustments26'\n",
        "\n",
        "# Set the index column\n",
        "gwadjustments26.set_index('team', inplace=True)\n",
        "\n",
        "# Create a color map\n",
        "cmap = sns.diverging_palette(240, 10, as_cmap=True)\n",
        "\n",
        "# Plot the heatmap\n",
        "plt.figure(figsize=(8, 6))\n",
        "sns.heatmap(gwadjustments26, annot=True, cmap=cmap, center=0)\n",
        "plt.title('Color-Coded Table of GW Adjustments')\n",
        "plt.show()\n"
      ],
      "metadata": {
        "id": "X2DQdb15YZfr",
        "outputId": "614aa9e1-7c44-4d91-bdd2-482ba591f209",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 245
        }
      },
      "execution_count": 70,
      "outputs": [
        {
          "output_type": "error",
          "ename": "NameError",
          "evalue": "ignored",
          "traceback": [
            "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
            "\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)",
            "\u001b[0;32m<ipython-input-70-41580282a9ec>\u001b[0m in \u001b[0;36m<cell line: 8>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      6\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      7\u001b[0m \u001b[0;31m# Set the index column\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 8\u001b[0;31m \u001b[0mgwadjustments26\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mset_index\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m'team'\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0minplace\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mTrue\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      9\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     10\u001b[0m \u001b[0;31m# Create a color map\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;31mNameError\u001b[0m: name 'gwadjustments26' is not defined"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "plt.figure(figsize=(10, 6))\n",
        "\n",
        "scores_columns = ['gw2adjustment', 'gw3adjustment', 'gw4adjustment', 'gw5adjustment', 'gw6adjustment']\n",
        "\n",
        "bottom = [0] * len(gwadjustments26)\n",
        "\n",
        "for score_col in scores_columns:\n",
        "    plt.bar(gwadjustments26.index, gwadjustments26[score_col], bottom=bottom, label=score_col)\n",
        "    bottom += gwadjustments26[score_col]\n",
        "\n",
        "plt.xlabel('Teams')\n",
        "plt.ylabel('Score Adjustments')\n",
        "plt.title('Stacked GW Adjustments for Different Teams')\n",
        "plt.xticks(rotation=45)\n",
        "plt.legend()\n",
        "plt.tight_layout()\n",
        "\n",
        "plt.show()\n"
      ],
      "metadata": {
        "id": "z7T7SgQSYyL8"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "plt.figure(figsize=(10, 6))\n",
        "\n",
        "# Calculate the total score adjustments for each team\n",
        "gwadjustments26['Total'] = gwadjustments26.sum(axis=1)\n",
        "\n",
        "# Sort the DataFrame by the 'Total' column in descending order\n",
        "gwadjustments26 = gwadjustments26.sort_values(by='Total', ascending=False)\n",
        "\n",
        "# Get the scores columns\n",
        "scores_columns = ['gw2adjustment', 'gw3adjustment', 'gw4adjustment', 'gw5adjustment', 'gw6adjustment']\n",
        "\n",
        "bottom = [0] * len(gwadjustments26)\n",
        "\n",
        "for score_col in scores_columns:\n",
        "    plt.bar(gwadjustments26.index, gwadjustments26[score_col], bottom=bottom, label=score_col)\n",
        "    bottom += gwadjustments26[score_col]\n",
        "\n",
        "plt.xlabel('Teams')\n",
        "plt.ylabel('Score Adjustments')\n",
        "plt.title('Stacked GW Adjustments for Different Teams')\n",
        "plt.xticks(rotation=45)\n",
        "plt.legend()\n",
        "plt.tight_layout()\n",
        "\n",
        "plt.show()\n"
      ],
      "metadata": {
        "id": "XxE_pa9xZB8N"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "import pandas as pd\n",
        "import seaborn as sns\n",
        "import matplotlib.pyplot as plt\n",
        "\n",
        "# Assuming you have already loaded the DataFrame named 'gwadjustments26'\n",
        "\n",
        "# Set the index column\n",
        "gwadjustments26.set_index('team', inplace=True)\n",
        "\n",
        "# Create a custom color map\n",
        "cmap = sns.diverging_palette(240, 10, n=21, as_cmap=True)\n",
        "colors = ['red', 'orange', 'green']\n",
        "\n",
        "# Define color thresholds\n",
        "color_thresholds = [0.9, 1.1, 2.0]\n",
        "\n",
        "# Normalize values for coloring\n",
        "normalized_values = (gwadjustments26 - 0.9) / (2.0 - 0.9)\n",
        "\n",
        "# Apply color map and thresholds\n",
        "colored_values = pd.cut(normalized_values, bins=color_thresholds, labels=colors)\n",
        "\n",
        "# Plot the heatmap with customized color coding\n",
        "plt.figure(figsize=(8, 6))\n",
        "sns.heatmap(normalized_values, annot=True, cmap=cmap, center=1, cbar=False, fmt=\".2f\", linewidths=0.5, linecolor='white')\n",
        "plt.title('Custom Color-Coded Table of GW Adjustments')\n",
        "plt.xticks(rotation=45)\n",
        "plt.show()\n"
      ],
      "metadata": {
        "id": "_YnxO1yMZekH"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "plt.figure(figsize=(10, 8))\n",
        "\n",
        "# Calculate the total score adjustments for each team\n",
        "gwadjustments26['Total'] = gwadjustments26.sum(axis=1)\n",
        "\n",
        "# Sort the DataFrame by the 'Total' column in descending order\n",
        "gwadjustments26 = gwadjustments26.sort_values(by='Total', ascending=False)\n",
        "\n",
        "# Get the scores columns\n",
        "scores_columns = ['gw2adjustment', 'gw3adjustment', 'gw4adjustment', 'gw5adjustment', 'gw6adjustment']\n",
        "\n",
        "# Define color thresholds and corresponding colors\n",
        "color_thresholds = [0.9, 1.1, 2.0]\n",
        "colors = ['red', 'orange', 'green']\n",
        "\n",
        "bottom = [0] * len(gwadjustments26)\n",
        "\n",
        "for score_col in scores_columns:\n",
        "    adjusted_values = gwadjustments26[score_col]\n",
        "\n",
        "    # Create a color list based on thresholds\n",
        "    colors_for_col = [colors[-1] if val is None else\n",
        "                      colors[0] if val < color_thresholds[0] else\n",
        "                      colors[1] if val <= color_thresholds[1] else\n",
        "                      colors[2]\n",
        "                      for val in adjusted_values]\n",
        "\n",
        "    for i, (val, color) in enumerate(zip(adjusted_values, colors_for_col)):\n",
        "        plt.barh(gwadjustments26.index[i], val, color=color, edgecolor='white')\n",
        "\n",
        "    bottom += adjusted_values\n",
        "\n",
        "plt.xlabel('Score Adjustments')\n",
        "plt.ylabel('Teams')\n",
        "plt.title('Horizontally Stacked GW Adjustments for Different Teams')\n",
        "plt.legend(labels=scores_columns)\n",
        "plt.gca().invert_yaxis()  # Invert y-axis to have higher values at the top\n",
        "plt.tight_layout()\n",
        "\n",
        "plt.show()\n"
      ],
      "metadata": {
        "id": "5agSlfUragM2"
      },
      "execution_count": null,
      "outputs": []
    }
  ]
}