{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "authorship_tag": "ABX9TyN2QP61aEEovXWb5bZoWVLR",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/huricane85/FPL-API-Fixture-modeler/blob/main/FPL_Model_v1.2%20API%20data%20only%2006.09.2023\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 1,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "b6S0KMo-gSGQ",
        "outputId": "f0672c05-b2d4-47d6-f419-89c75eb1712e"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Cloning into 'UnderstatScraper'...\n",
            "remote: Enumerating objects: 34, done.\u001b[K\n",
            "remote: Counting objects: 100% (34/34), done.\u001b[K\n",
            "remote: Compressing objects: 100% (31/31), done.\u001b[K\n",
            "remote: Total 34 (delta 11), reused 25 (delta 2), pack-reused 0\u001b[K\n",
            "Receiving objects: 100% (34/34), 268.30 KiB | 5.26 MiB/s, done.\n",
            "Resolving deltas: 100% (11/11), done.\n"
          ]
        }
      ],
      "source": [
        "!git clone https://github.com/doughagey/UnderstatScraper"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#!/usr/bin/env python3\n",
        "# -*- coding: utf-8 -*-\n",
        "\"\"\"\n",
        "Created on Mar 1 17:50:36 2020\n",
        "@author: doug hagey\n",
        "\"\"\"\n",
        "\n",
        "import pandas as pd\n",
        "import requests\n",
        "\n",
        "def scrape_understat(payload):\n",
        "    #Build request using url, headers (mimicking what Firefox does normally)\n",
        "    #Works best with verify=True as you won't get the ssl errors. Payload is\n",
        "    #taylored for each request\n",
        "    url = 'https://understat.com/main/getPlayersStats/'\n",
        "    headers = {'content-type':'application/json; charset=utf-8',\n",
        "    'Host': 'understat.com',\n",
        "    'User-Agent': 'Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:73.0) Gecko/20100101 Firefox/73.0',\n",
        "    'Accept': 'application/json, text/javascript, */*; q=0.01',\n",
        "    'Accept-Encoding': 'gzip, deflate, br',\n",
        "    'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8',\n",
        "    'X-Requested-With': 'XMLHttpRequest',\n",
        "    'Content-Length': '310',\n",
        "    'Origin': 'https: // understat.com',\n",
        "    'Connection': 'keep - alive',\n",
        "    'Referer': 'https: // understat.com / league / EPL'\n",
        "    }\n",
        "    response = requests.post(url, data=payload, headers = headers, verify=True)\n",
        "    response_json = response.json()\n",
        "    inner_wrapper = response_json['response']\n",
        "    json_player_data = inner_wrapper['players']\n",
        "    return json_player_data\n",
        "\n",
        "def clean_df(player_df, weeks):\n",
        "    # Get rid of the columns that we don't care about\n",
        "    #player_df.drop(['yellow_cards','red_cards', 'xGChain','xGBuildup','games','time'], axis=1, inplace=True)\n",
        "    player_df  = player_df.rename(columns={'goals':'goals_'+weeks,'xG':'xG_'+weeks,'assists':'assists_'+weeks, 'xA':'xA_'+weeks, 'shots':'shots_'+weeks, 'key_passes':\n",
        "        'key_passes_'+weeks,'npg':'npg_'+weeks,'npxG':'npxG_'+weeks})\n",
        "    if weeks != '1wks':\n",
        "        player_df.drop(['position','team_title'], axis=1, inplace=True)\n",
        "    return(player_df)\n",
        "\n",
        "#Creprint('Getting data for last 1 matches')\n",
        "json_player_data = scrape_understat({'league':'EPL', 'season':'2023', 'n_last_matches': '4'})\n",
        "one_game_table = pd.DataFrame(json_player_data)\n",
        "one_game_df = clean_df(one_game_table,'3wks')\n",
        "\n",
        "\n",
        "print('Getting data for the whole season')\n",
        "json_player_data = scrape_understat({'league':'EPL', 'season':'2023'})\n",
        "season_table = pd.DataFrame(json_player_data)\n",
        "season_df = clean_df(season_table, 'season')\n",
        "\n",
        "print('Getting data for last 1 matches')\n",
        "json_player_data = scrape_understat({'league':'EPL', 'season':'2023', 'n_last_matches': '4'})\n",
        "one_game_table = pd.DataFrame(json_player_data)\n",
        "one_game_df = clean_df(one_game_table, '1wks')\n",
        "\n",
        "print('Merging Tables')\n",
        "EPL_player_df = pd.merge(one_game_df, season_df, on=['id','player_name'])\n",
        "EPL_player_df = pd.merge(EPL_player_df, one_game_df, on=['id','player_name'])\n",
        "\n",
        "\n",
        "print('Writing CSV File')\n",
        "EPL_player_df.to_csv('Understat_EPL_Player_Data_Combined 2021.csv', encoding='utf-8', index=False)\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "D7aK55NHgZOt",
        "outputId": "accd4fba-33cf-4f46-b807-50261e6264d7"
      },
      "execution_count": 2,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Getting data for the whole season\n",
            "Getting data for last 1 matches\n",
            "Merging Tables\n",
            "Writing CSV File\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "EPL_player_df"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 617
        },
        "id": "n__CYp9pmkGz",
        "outputId": "b6c8b376-512e-408c-f43f-68d56b80f33b"
      },
      "execution_count": 3,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "        id       player_name games_x time_x goals_1wks_x            xG_1wks_x  \\\n",
              "0     8260    Erling Haaland       4    355            6    4.720618188381195   \n",
              "1     6552      Bryan Mbeumo       4    360            4    3.798690915107727   \n",
              "2    10177     Evan Ferguson       4    205            4   2.2254600673913956   \n",
              "3      453     Son Heung-Min       4    343            3   1.4514826834201813   \n",
              "4     1776      Jarrod Bowen       4    360            3    1.852049708366394   \n",
              "..     ...               ...     ...    ...          ...                  ...   \n",
              "387  11903        Oscar Bobb       1      1            0                    0   \n",
              "388  11926     Edson √Ålvarez       3    179            0   0.0643242746591568   \n",
              "389  11984  Youssef Chermiti       1     22            0  0.06607918441295624   \n",
              "390  11998   Hannes Delcroix       2    129            0  0.23279432207345963   \n",
              "391  12027    Mohammed Kudus       1      1            0                    0   \n",
              "\n",
              "    assists_1wks_x            xA_1wks_x shots_1wks_x key_passes_1wks_x  ...  \\\n",
              "0                1    1.096818134188652           20                 6  ...   \n",
              "1                0  0.47218552231788635            9                 5  ...   \n",
              "2                0  0.06968338042497635           13                 1  ...   \n",
              "3                0   1.3192270509898663           10                 9  ...   \n",
              "4                1   0.8080089539289474           13                 4  ...   \n",
              "..             ...                  ...          ...               ...  ...   \n",
              "387              0                    0            0                 0  ...   \n",
              "388              0  0.05303558334708214            1                 1  ...   \n",
              "389              0                    0            1                 0  ...   \n",
              "390              0   0.0830167606472969            4                 2  ...   \n",
              "391              0                    0            0                 0  ...   \n",
              "\n",
              "    shots_1wks_y key_passes_1wks_y yellow_cards red_cards position_y  \\\n",
              "0             20                 6            0         0          F   \n",
              "1              9                 5            0         0          F   \n",
              "2             13                 1            0         0        F S   \n",
              "3             10                 9            0         0        F M   \n",
              "4             13                 4            1         0          M   \n",
              "..           ...               ...          ...       ...        ...   \n",
              "387            0                 0            0         0          S   \n",
              "388            1                 1            1         0        M S   \n",
              "389            1                 0            1         0          S   \n",
              "390            4                 2            1         0        D S   \n",
              "391            0                 0            0         0          S   \n",
              "\n",
              "        team_title_y npg_1wks_y          npxG_1wks_y              xGChain  \\\n",
              "0    Manchester City          5    3.198280453681946    4.243555068969727   \n",
              "1          Brentford          2    2.276353180408478   3.4031228870153427   \n",
              "2           Brighton          4   2.2254600673913956    2.667408235371113   \n",
              "3          Tottenham          3   1.4514826834201813    4.069049090147018   \n",
              "4           West Ham          3    1.852049708366394    2.132258176803589   \n",
              "..               ...        ...                  ...                  ...   \n",
              "387  Manchester City          0                    0  0.12880565226078033   \n",
              "388         West Ham          0   0.0643242746591568   0.6627934575080872   \n",
              "389          Everton          0  0.06607918441295624                    0   \n",
              "390          Burnley          0  0.23279432207345963   0.5750201642513275   \n",
              "391         West Ham          0                    0                    0   \n",
              "\n",
              "               xGBuildup  \n",
              "0     0.5024585798382759  \n",
              "1     1.0115868896245956  \n",
              "2       0.37226477637887  \n",
              "3      1.541113331913948  \n",
              "4    0.35537485778331757  \n",
              "..                   ...  \n",
              "387  0.12880565226078033  \n",
              "388   0.5454335808753967  \n",
              "389                    0  \n",
              "390   0.4920034073293209  \n",
              "391                    0  \n",
              "\n",
              "[392 rows x 48 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-1638a377-b962-455f-85c9-1d7584ba20d4\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>player_name</th>\n",
              "      <th>games_x</th>\n",
              "      <th>time_x</th>\n",
              "      <th>goals_1wks_x</th>\n",
              "      <th>xG_1wks_x</th>\n",
              "      <th>assists_1wks_x</th>\n",
              "      <th>xA_1wks_x</th>\n",
              "      <th>shots_1wks_x</th>\n",
              "      <th>key_passes_1wks_x</th>\n",
              "      <th>...</th>\n",
              "      <th>shots_1wks_y</th>\n",
              "      <th>key_passes_1wks_y</th>\n",
              "      <th>yellow_cards</th>\n",
              "      <th>red_cards</th>\n",
              "      <th>position_y</th>\n",
              "      <th>team_title_y</th>\n",
              "      <th>npg_1wks_y</th>\n",
              "      <th>npxG_1wks_y</th>\n",
              "      <th>xGChain</th>\n",
              "      <th>xGBuildup</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>8260</td>\n",
              "      <td>Erling Haaland</td>\n",
              "      <td>4</td>\n",
              "      <td>355</td>\n",
              "      <td>6</td>\n",
              "      <td>4.720618188381195</td>\n",
              "      <td>1</td>\n",
              "      <td>1.096818134188652</td>\n",
              "      <td>20</td>\n",
              "      <td>6</td>\n",
              "      <td>...</td>\n",
              "      <td>20</td>\n",
              "      <td>6</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>F</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>5</td>\n",
              "      <td>3.198280453681946</td>\n",
              "      <td>4.243555068969727</td>\n",
              "      <td>0.5024585798382759</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>6552</td>\n",
              "      <td>Bryan Mbeumo</td>\n",
              "      <td>4</td>\n",
              "      <td>360</td>\n",
              "      <td>4</td>\n",
              "      <td>3.798690915107727</td>\n",
              "      <td>0</td>\n",
              "      <td>0.47218552231788635</td>\n",
              "      <td>9</td>\n",
              "      <td>5</td>\n",
              "      <td>...</td>\n",
              "      <td>9</td>\n",
              "      <td>5</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>F</td>\n",
              "      <td>Brentford</td>\n",
              "      <td>2</td>\n",
              "      <td>2.276353180408478</td>\n",
              "      <td>3.4031228870153427</td>\n",
              "      <td>1.0115868896245956</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>10177</td>\n",
              "      <td>Evan Ferguson</td>\n",
              "      <td>4</td>\n",
              "      <td>205</td>\n",
              "      <td>4</td>\n",
              "      <td>2.2254600673913956</td>\n",
              "      <td>0</td>\n",
              "      <td>0.06968338042497635</td>\n",
              "      <td>13</td>\n",
              "      <td>1</td>\n",
              "      <td>...</td>\n",
              "      <td>13</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>F S</td>\n",
              "      <td>Brighton</td>\n",
              "      <td>4</td>\n",
              "      <td>2.2254600673913956</td>\n",
              "      <td>2.667408235371113</td>\n",
              "      <td>0.37226477637887</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>453</td>\n",
              "      <td>Son Heung-Min</td>\n",
              "      <td>4</td>\n",
              "      <td>343</td>\n",
              "      <td>3</td>\n",
              "      <td>1.4514826834201813</td>\n",
              "      <td>0</td>\n",
              "      <td>1.3192270509898663</td>\n",
              "      <td>10</td>\n",
              "      <td>9</td>\n",
              "      <td>...</td>\n",
              "      <td>10</td>\n",
              "      <td>9</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>F M</td>\n",
              "      <td>Tottenham</td>\n",
              "      <td>3</td>\n",
              "      <td>1.4514826834201813</td>\n",
              "      <td>4.069049090147018</td>\n",
              "      <td>1.541113331913948</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>1776</td>\n",
              "      <td>Jarrod Bowen</td>\n",
              "      <td>4</td>\n",
              "      <td>360</td>\n",
              "      <td>3</td>\n",
              "      <td>1.852049708366394</td>\n",
              "      <td>1</td>\n",
              "      <td>0.8080089539289474</td>\n",
              "      <td>13</td>\n",
              "      <td>4</td>\n",
              "      <td>...</td>\n",
              "      <td>13</td>\n",
              "      <td>4</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>M</td>\n",
              "      <td>West Ham</td>\n",
              "      <td>3</td>\n",
              "      <td>1.852049708366394</td>\n",
              "      <td>2.132258176803589</td>\n",
              "      <td>0.35537485778331757</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>387</th>\n",
              "      <td>11903</td>\n",
              "      <td>Oscar Bobb</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>S</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.12880565226078033</td>\n",
              "      <td>0.12880565226078033</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>388</th>\n",
              "      <td>11926</td>\n",
              "      <td>Edson √Ålvarez</td>\n",
              "      <td>3</td>\n",
              "      <td>179</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0643242746591568</td>\n",
              "      <td>0</td>\n",
              "      <td>0.05303558334708214</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>...</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>M S</td>\n",
              "      <td>West Ham</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0643242746591568</td>\n",
              "      <td>0.6627934575080872</td>\n",
              "      <td>0.5454335808753967</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>389</th>\n",
              "      <td>11984</td>\n",
              "      <td>Youssef Chermiti</td>\n",
              "      <td>1</td>\n",
              "      <td>22</td>\n",
              "      <td>0</td>\n",
              "      <td>0.06607918441295624</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>S</td>\n",
              "      <td>Everton</td>\n",
              "      <td>0</td>\n",
              "      <td>0.06607918441295624</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>390</th>\n",
              "      <td>11998</td>\n",
              "      <td>Hannes Delcroix</td>\n",
              "      <td>2</td>\n",
              "      <td>129</td>\n",
              "      <td>0</td>\n",
              "      <td>0.23279432207345963</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0830167606472969</td>\n",
              "      <td>4</td>\n",
              "      <td>2</td>\n",
              "      <td>...</td>\n",
              "      <td>4</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>D S</td>\n",
              "      <td>Burnley</td>\n",
              "      <td>0</td>\n",
              "      <td>0.23279432207345963</td>\n",
              "      <td>0.5750201642513275</td>\n",
              "      <td>0.4920034073293209</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>391</th>\n",
              "      <td>12027</td>\n",
              "      <td>Mohammed Kudus</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>S</td>\n",
              "      <td>West Ham</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>392 rows √ó 48 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-1638a377-b962-455f-85c9-1d7584ba20d4')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-1638a377-b962-455f-85c9-1d7584ba20d4 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-1638a377-b962-455f-85c9-1d7584ba20d4');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-25b84027-3934-4fd1-9f1d-bc74ca6f546a\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-25b84027-3934-4fd1-9f1d-bc74ca6f546a')\"\n",
              "            title=\"Suggest charts.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-25b84027-3934-4fd1-9f1d-bc74ca6f546a button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 3
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "one_game_df.to_csv('one_game_df.csv', encoding='utf-8', index=False)\n",
        "one_game_df['time'] = one_game_df['time'].astype(int)\n",
        "one_game_df = one_game_df[one_game_df['time'] > 40]\n",
        "one_game_df['goals_1wks'] = one_game_df['goals_1wks'].astype(int)\n",
        "one_game_df['xG_1wks'] = one_game_df['xG_1wks'].astype(float)\n",
        "one_game_df['xgdifference'] = one_game_df.goals_1wks - one_game_df.xG_1wks\n",
        "one_game_df['assists_1wks'] = one_game_df['assists_1wks'].astype(int)\n",
        "one_game_df['xA_1wks'] = one_game_df['xA_1wks'].astype(float)\n",
        "one_game_df['xAdifference'] = one_game_df.assists_1wks - one_game_df.xA_1wks\n",
        "seasonedit = one_game_df.drop(columns=[ 'yellow_cards','red_cards','time'])\n",
        "sortXgDifference = seasonedit.sort_values('xgdifference')\n",
        "sortXgDifference.head(10)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 955
        },
        "id": "IrXPzyJNg3ui",
        "outputId": "1a592de9-11b4-4622-83d3-98ec49a5e754"
      },
      "execution_count": 4,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "<ipython-input-4-30b8c2331977>:4: SettingWithCopyWarning: \n",
            "A value is trying to be set on a copy of a slice from a DataFrame.\n",
            "Try using .loc[row_indexer,col_indexer] = value instead\n",
            "\n",
            "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
            "  one_game_df['goals_1wks'] = one_game_df['goals_1wks'].astype(int)\n",
            "<ipython-input-4-30b8c2331977>:5: SettingWithCopyWarning: \n",
            "A value is trying to be set on a copy of a slice from a DataFrame.\n",
            "Try using .loc[row_indexer,col_indexer] = value instead\n",
            "\n",
            "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
            "  one_game_df['xG_1wks'] = one_game_df['xG_1wks'].astype(float)\n",
            "<ipython-input-4-30b8c2331977>:6: SettingWithCopyWarning: \n",
            "A value is trying to be set on a copy of a slice from a DataFrame.\n",
            "Try using .loc[row_indexer,col_indexer] = value instead\n",
            "\n",
            "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
            "  one_game_df['xgdifference'] = one_game_df.goals_1wks - one_game_df.xG_1wks\n",
            "<ipython-input-4-30b8c2331977>:7: SettingWithCopyWarning: \n",
            "A value is trying to be set on a copy of a slice from a DataFrame.\n",
            "Try using .loc[row_indexer,col_indexer] = value instead\n",
            "\n",
            "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
            "  one_game_df['assists_1wks'] = one_game_df['assists_1wks'].astype(int)\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "        id                player_name games  goals_1wks   xG_1wks  \\\n",
              "74   10048            Nicolas Jackson     4           1  3.707246   \n",
              "276   8865              Ollie Watkins     4           0  2.087674   \n",
              "358  11356             Enzo Fern√°ndez     4           0  1.676642   \n",
              "36    1726         Abdoulaye Doucour√©     4           1  2.532887   \n",
              "164   3621                Neal Maupay     2           0  1.375403   \n",
              "108    672                Jordan Ayew     4           0  1.335297   \n",
              "61    8066  Arnaut Danjuma Groeneveld     4           1  2.293025   \n",
              "35    1228            Bruno Fernandes     4           1  2.213971   \n",
              "11    1250              Mohamed Salah     4           2  3.051010   \n",
              "342  10809         Keane Lewis-Potter     3           0  1.048570   \n",
              "\n",
              "     assists_1wks   xA_1wks shots_1wks key_passes_1wks position  \\\n",
              "74              0  0.572392         15               3        F   \n",
              "276             2  1.212148         10               8        F   \n",
              "358             0  1.448496         11              11        M   \n",
              "36              0  1.060980          8               7        M   \n",
              "164             0  0.133534          5               1      F S   \n",
              "108             2  1.040466         12               7        M   \n",
              "61              0  0.195459         14               2    F M S   \n",
              "35              1  2.390305         13              14        M   \n",
              "11              2  1.549212         14               7        F   \n",
              "342             0  0.000000          3               0        S   \n",
              "\n",
              "            team_title npg_1wks           npxG_1wks             xGChain  \\\n",
              "74             Chelsea        1  3.7072464525699615  4.6019861325621605   \n",
              "276        Aston Villa        0  2.0876741111278534  4.0177226066589355   \n",
              "358            Chelsea        0  0.9154734946787357  3.8730115741491318   \n",
              "36             Everton        1  2.5328870117664337  2.5137087553739548   \n",
              "164            Everton        0  1.3754028677940369  1.3316882029175758   \n",
              "108     Crystal Palace        0  1.3352972716093063  2.3114949762821198   \n",
              "61             Everton        1   2.293025493621826   2.467307336628437   \n",
              "35   Manchester United        0  1.4528022520244122  3.7279496788978577   \n",
              "11           Liverpool        2  2.2898415625095367   2.727378189563751   \n",
              "342          Brentford        0  1.0485695600509644  0.5281884670257568   \n",
              "\n",
              "               xGBuildup  xgdifference  xAdifference  \n",
              "74    0.8451289162039757     -2.707246     -0.572392  \n",
              "276   0.9439038410782814     -2.087674      0.787852  \n",
              "358    2.827464498579502     -1.676642     -1.448496  \n",
              "36    0.4409106820821762     -1.532887     -1.060980  \n",
              "164  0.06084267050027847     -1.375403     -0.133534  \n",
              "108   1.1384435147047043     -1.335297      0.959534  \n",
              "61   0.09537248313426971     -1.293025     -0.195459  \n",
              "35    1.8847323954105377     -1.213971     -1.390305  \n",
              "11    0.6148081719875336     -1.051010      0.450788  \n",
              "342                    0     -1.048570      0.000000  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-24a4ed7c-f5cc-487c-8b0a-cee7ec4e0fee\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>player_name</th>\n",
              "      <th>games</th>\n",
              "      <th>goals_1wks</th>\n",
              "      <th>xG_1wks</th>\n",
              "      <th>assists_1wks</th>\n",
              "      <th>xA_1wks</th>\n",
              "      <th>shots_1wks</th>\n",
              "      <th>key_passes_1wks</th>\n",
              "      <th>position</th>\n",
              "      <th>team_title</th>\n",
              "      <th>npg_1wks</th>\n",
              "      <th>npxG_1wks</th>\n",
              "      <th>xGChain</th>\n",
              "      <th>xGBuildup</th>\n",
              "      <th>xgdifference</th>\n",
              "      <th>xAdifference</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>74</th>\n",
              "      <td>10048</td>\n",
              "      <td>Nicolas Jackson</td>\n",
              "      <td>4</td>\n",
              "      <td>1</td>\n",
              "      <td>3.707246</td>\n",
              "      <td>0</td>\n",
              "      <td>0.572392</td>\n",
              "      <td>15</td>\n",
              "      <td>3</td>\n",
              "      <td>F</td>\n",
              "      <td>Chelsea</td>\n",
              "      <td>1</td>\n",
              "      <td>3.7072464525699615</td>\n",
              "      <td>4.6019861325621605</td>\n",
              "      <td>0.8451289162039757</td>\n",
              "      <td>-2.707246</td>\n",
              "      <td>-0.572392</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>276</th>\n",
              "      <td>8865</td>\n",
              "      <td>Ollie Watkins</td>\n",
              "      <td>4</td>\n",
              "      <td>0</td>\n",
              "      <td>2.087674</td>\n",
              "      <td>2</td>\n",
              "      <td>1.212148</td>\n",
              "      <td>10</td>\n",
              "      <td>8</td>\n",
              "      <td>F</td>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>0</td>\n",
              "      <td>2.0876741111278534</td>\n",
              "      <td>4.0177226066589355</td>\n",
              "      <td>0.9439038410782814</td>\n",
              "      <td>-2.087674</td>\n",
              "      <td>0.787852</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>358</th>\n",
              "      <td>11356</td>\n",
              "      <td>Enzo Fern√°ndez</td>\n",
              "      <td>4</td>\n",
              "      <td>0</td>\n",
              "      <td>1.676642</td>\n",
              "      <td>0</td>\n",
              "      <td>1.448496</td>\n",
              "      <td>11</td>\n",
              "      <td>11</td>\n",
              "      <td>M</td>\n",
              "      <td>Chelsea</td>\n",
              "      <td>0</td>\n",
              "      <td>0.9154734946787357</td>\n",
              "      <td>3.8730115741491318</td>\n",
              "      <td>2.827464498579502</td>\n",
              "      <td>-1.676642</td>\n",
              "      <td>-1.448496</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>36</th>\n",
              "      <td>1726</td>\n",
              "      <td>Abdoulaye Doucour√©</td>\n",
              "      <td>4</td>\n",
              "      <td>1</td>\n",
              "      <td>2.532887</td>\n",
              "      <td>0</td>\n",
              "      <td>1.060980</td>\n",
              "      <td>8</td>\n",
              "      <td>7</td>\n",
              "      <td>M</td>\n",
              "      <td>Everton</td>\n",
              "      <td>1</td>\n",
              "      <td>2.5328870117664337</td>\n",
              "      <td>2.5137087553739548</td>\n",
              "      <td>0.4409106820821762</td>\n",
              "      <td>-1.532887</td>\n",
              "      <td>-1.060980</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>164</th>\n",
              "      <td>3621</td>\n",
              "      <td>Neal Maupay</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>1.375403</td>\n",
              "      <td>0</td>\n",
              "      <td>0.133534</td>\n",
              "      <td>5</td>\n",
              "      <td>1</td>\n",
              "      <td>F S</td>\n",
              "      <td>Everton</td>\n",
              "      <td>0</td>\n",
              "      <td>1.3754028677940369</td>\n",
              "      <td>1.3316882029175758</td>\n",
              "      <td>0.06084267050027847</td>\n",
              "      <td>-1.375403</td>\n",
              "      <td>-0.133534</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>108</th>\n",
              "      <td>672</td>\n",
              "      <td>Jordan Ayew</td>\n",
              "      <td>4</td>\n",
              "      <td>0</td>\n",
              "      <td>1.335297</td>\n",
              "      <td>2</td>\n",
              "      <td>1.040466</td>\n",
              "      <td>12</td>\n",
              "      <td>7</td>\n",
              "      <td>M</td>\n",
              "      <td>Crystal Palace</td>\n",
              "      <td>0</td>\n",
              "      <td>1.3352972716093063</td>\n",
              "      <td>2.3114949762821198</td>\n",
              "      <td>1.1384435147047043</td>\n",
              "      <td>-1.335297</td>\n",
              "      <td>0.959534</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>61</th>\n",
              "      <td>8066</td>\n",
              "      <td>Arnaut Danjuma Groeneveld</td>\n",
              "      <td>4</td>\n",
              "      <td>1</td>\n",
              "      <td>2.293025</td>\n",
              "      <td>0</td>\n",
              "      <td>0.195459</td>\n",
              "      <td>14</td>\n",
              "      <td>2</td>\n",
              "      <td>F M S</td>\n",
              "      <td>Everton</td>\n",
              "      <td>1</td>\n",
              "      <td>2.293025493621826</td>\n",
              "      <td>2.467307336628437</td>\n",
              "      <td>0.09537248313426971</td>\n",
              "      <td>-1.293025</td>\n",
              "      <td>-0.195459</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>35</th>\n",
              "      <td>1228</td>\n",
              "      <td>Bruno Fernandes</td>\n",
              "      <td>4</td>\n",
              "      <td>1</td>\n",
              "      <td>2.213971</td>\n",
              "      <td>1</td>\n",
              "      <td>2.390305</td>\n",
              "      <td>13</td>\n",
              "      <td>14</td>\n",
              "      <td>M</td>\n",
              "      <td>Manchester United</td>\n",
              "      <td>0</td>\n",
              "      <td>1.4528022520244122</td>\n",
              "      <td>3.7279496788978577</td>\n",
              "      <td>1.8847323954105377</td>\n",
              "      <td>-1.213971</td>\n",
              "      <td>-1.390305</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>11</th>\n",
              "      <td>1250</td>\n",
              "      <td>Mohamed Salah</td>\n",
              "      <td>4</td>\n",
              "      <td>2</td>\n",
              "      <td>3.051010</td>\n",
              "      <td>2</td>\n",
              "      <td>1.549212</td>\n",
              "      <td>14</td>\n",
              "      <td>7</td>\n",
              "      <td>F</td>\n",
              "      <td>Liverpool</td>\n",
              "      <td>2</td>\n",
              "      <td>2.2898415625095367</td>\n",
              "      <td>2.727378189563751</td>\n",
              "      <td>0.6148081719875336</td>\n",
              "      <td>-1.051010</td>\n",
              "      <td>0.450788</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>342</th>\n",
              "      <td>10809</td>\n",
              "      <td>Keane Lewis-Potter</td>\n",
              "      <td>3</td>\n",
              "      <td>0</td>\n",
              "      <td>1.048570</td>\n",
              "      <td>0</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>3</td>\n",
              "      <td>0</td>\n",
              "      <td>S</td>\n",
              "      <td>Brentford</td>\n",
              "      <td>0</td>\n",
              "      <td>1.0485695600509644</td>\n",
              "      <td>0.5281884670257568</td>\n",
              "      <td>0</td>\n",
              "      <td>-1.048570</td>\n",
              "      <td>0.000000</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-24a4ed7c-f5cc-487c-8b0a-cee7ec4e0fee')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-24a4ed7c-f5cc-487c-8b0a-cee7ec4e0fee button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-24a4ed7c-f5cc-487c-8b0a-cee7ec4e0fee');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-0b68b3c4-adcf-4a6f-b940-d2584cd23fbf\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-0b68b3c4-adcf-4a6f-b940-d2584cd23fbf')\"\n",
              "            title=\"Suggest charts.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-0b68b3c4-adcf-4a6f-b940-d2584cd23fbf button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 4
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "sortXgDifference.tail(10)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 539
        },
        "id": "UxuLfRINhwx7",
        "outputId": "2b252cd6-9156-408a-a37d-f3420d86fea0"
      },
      "execution_count": 5,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "       id      player_name games  goals_1wks   xG_1wks  assists_1wks  \\\n",
              "58   7430          Emerson     3           1  0.032621             0   \n",
              "33    922  Andreas Pereira     4           1  0.023749             0   \n",
              "9     531  Michail Antonio     4           2  0.905257             0   \n",
              "4    1776     Jarrod Bowen     4           3  1.852050             1   \n",
              "18   6556     Moussa Diaby     4           2  0.846707             1   \n",
              "20   7218  Cristian Romero     4           2  0.722109             0   \n",
              "0    8260   Erling Haaland     4           6  4.720618             1   \n",
              "3     453    Son Heung-Min     4           3  1.451483             0   \n",
              "23   8845   Hee-Chan Hwang     4           2  0.340212             0   \n",
              "2   10177    Evan Ferguson     4           4  2.225460             0   \n",
              "\n",
              "     xA_1wks shots_1wks key_passes_1wks position               team_title  \\\n",
              "58  0.000000          1               0      D S                Tottenham   \n",
              "33  0.088536          2               3      M S                   Fulham   \n",
              "9   0.155865          5               1        F                 West Ham   \n",
              "4   0.808009         13               4        M                 West Ham   \n",
              "18  1.933697          9               7      F M              Aston Villa   \n",
              "20  0.000000          3               0        D                Tottenham   \n",
              "0   1.096818         20               6        F          Manchester City   \n",
              "3   1.319227         10               9      F M                Tottenham   \n",
              "23  0.601140          6               1      M S  Wolverhampton Wanderers   \n",
              "2   0.069683         13               1      F S                 Brighton   \n",
              "\n",
              "   npg_1wks             npxG_1wks              xGChain            xGBuildup  \\\n",
              "58        1   0.03262129798531532  0.42484379559755325  0.39222250133752823   \n",
              "33        1  0.023748640902340412  0.39683620631694794    0.333110973238945   \n",
              "9         2    0.9052570015192032   2.1987280398607254   1.1376062035560608   \n",
              "4         3     1.852049708366394    2.132258176803589  0.35537485778331757   \n",
              "18        2    0.8467069044709206   3.5196747332811356   1.8412092700600624   \n",
              "20        2    0.7221086248755455   2.9626790285110474   2.9626790285110474   \n",
              "0         5     3.198280453681946    4.243555068969727   0.5024585798382759   \n",
              "3         3    1.4514826834201813    4.069049090147018    1.541113331913948   \n",
              "23        2   0.34021175652742386   0.7106867590919137  0.48809050116688013   \n",
              "2         4    2.2254600673913956    2.667408235371113     0.37226477637887   \n",
              "\n",
              "    xgdifference  xAdifference  \n",
              "58      0.967379      0.000000  \n",
              "33      0.976251     -0.088536  \n",
              "9       1.094743     -0.155865  \n",
              "4       1.147950      0.191991  \n",
              "18      1.153293     -0.933697  \n",
              "20      1.277891      0.000000  \n",
              "0       1.279382     -0.096818  \n",
              "3       1.548517     -1.319227  \n",
              "23      1.659788     -0.601140  \n",
              "2       1.774540     -0.069683  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-034b56c5-0f5b-4c84-a29f-7242e3f755c5\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>player_name</th>\n",
              "      <th>games</th>\n",
              "      <th>goals_1wks</th>\n",
              "      <th>xG_1wks</th>\n",
              "      <th>assists_1wks</th>\n",
              "      <th>xA_1wks</th>\n",
              "      <th>shots_1wks</th>\n",
              "      <th>key_passes_1wks</th>\n",
              "      <th>position</th>\n",
              "      <th>team_title</th>\n",
              "      <th>npg_1wks</th>\n",
              "      <th>npxG_1wks</th>\n",
              "      <th>xGChain</th>\n",
              "      <th>xGBuildup</th>\n",
              "      <th>xgdifference</th>\n",
              "      <th>xAdifference</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>58</th>\n",
              "      <td>7430</td>\n",
              "      <td>Emerson</td>\n",
              "      <td>3</td>\n",
              "      <td>1</td>\n",
              "      <td>0.032621</td>\n",
              "      <td>0</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>D S</td>\n",
              "      <td>Tottenham</td>\n",
              "      <td>1</td>\n",
              "      <td>0.03262129798531532</td>\n",
              "      <td>0.42484379559755325</td>\n",
              "      <td>0.39222250133752823</td>\n",
              "      <td>0.967379</td>\n",
              "      <td>0.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>33</th>\n",
              "      <td>922</td>\n",
              "      <td>Andreas Pereira</td>\n",
              "      <td>4</td>\n",
              "      <td>1</td>\n",
              "      <td>0.023749</td>\n",
              "      <td>0</td>\n",
              "      <td>0.088536</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "      <td>M S</td>\n",
              "      <td>Fulham</td>\n",
              "      <td>1</td>\n",
              "      <td>0.023748640902340412</td>\n",
              "      <td>0.39683620631694794</td>\n",
              "      <td>0.333110973238945</td>\n",
              "      <td>0.976251</td>\n",
              "      <td>-0.088536</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>531</td>\n",
              "      <td>Michail Antonio</td>\n",
              "      <td>4</td>\n",
              "      <td>2</td>\n",
              "      <td>0.905257</td>\n",
              "      <td>0</td>\n",
              "      <td>0.155865</td>\n",
              "      <td>5</td>\n",
              "      <td>1</td>\n",
              "      <td>F</td>\n",
              "      <td>West Ham</td>\n",
              "      <td>2</td>\n",
              "      <td>0.9052570015192032</td>\n",
              "      <td>2.1987280398607254</td>\n",
              "      <td>1.1376062035560608</td>\n",
              "      <td>1.094743</td>\n",
              "      <td>-0.155865</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>1776</td>\n",
              "      <td>Jarrod Bowen</td>\n",
              "      <td>4</td>\n",
              "      <td>3</td>\n",
              "      <td>1.852050</td>\n",
              "      <td>1</td>\n",
              "      <td>0.808009</td>\n",
              "      <td>13</td>\n",
              "      <td>4</td>\n",
              "      <td>M</td>\n",
              "      <td>West Ham</td>\n",
              "      <td>3</td>\n",
              "      <td>1.852049708366394</td>\n",
              "      <td>2.132258176803589</td>\n",
              "      <td>0.35537485778331757</td>\n",
              "      <td>1.147950</td>\n",
              "      <td>0.191991</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>18</th>\n",
              "      <td>6556</td>\n",
              "      <td>Moussa Diaby</td>\n",
              "      <td>4</td>\n",
              "      <td>2</td>\n",
              "      <td>0.846707</td>\n",
              "      <td>1</td>\n",
              "      <td>1.933697</td>\n",
              "      <td>9</td>\n",
              "      <td>7</td>\n",
              "      <td>F M</td>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>2</td>\n",
              "      <td>0.8467069044709206</td>\n",
              "      <td>3.5196747332811356</td>\n",
              "      <td>1.8412092700600624</td>\n",
              "      <td>1.153293</td>\n",
              "      <td>-0.933697</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>20</th>\n",
              "      <td>7218</td>\n",
              "      <td>Cristian Romero</td>\n",
              "      <td>4</td>\n",
              "      <td>2</td>\n",
              "      <td>0.722109</td>\n",
              "      <td>0</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>3</td>\n",
              "      <td>0</td>\n",
              "      <td>D</td>\n",
              "      <td>Tottenham</td>\n",
              "      <td>2</td>\n",
              "      <td>0.7221086248755455</td>\n",
              "      <td>2.9626790285110474</td>\n",
              "      <td>2.9626790285110474</td>\n",
              "      <td>1.277891</td>\n",
              "      <td>0.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>8260</td>\n",
              "      <td>Erling Haaland</td>\n",
              "      <td>4</td>\n",
              "      <td>6</td>\n",
              "      <td>4.720618</td>\n",
              "      <td>1</td>\n",
              "      <td>1.096818</td>\n",
              "      <td>20</td>\n",
              "      <td>6</td>\n",
              "      <td>F</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>5</td>\n",
              "      <td>3.198280453681946</td>\n",
              "      <td>4.243555068969727</td>\n",
              "      <td>0.5024585798382759</td>\n",
              "      <td>1.279382</td>\n",
              "      <td>-0.096818</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>453</td>\n",
              "      <td>Son Heung-Min</td>\n",
              "      <td>4</td>\n",
              "      <td>3</td>\n",
              "      <td>1.451483</td>\n",
              "      <td>0</td>\n",
              "      <td>1.319227</td>\n",
              "      <td>10</td>\n",
              "      <td>9</td>\n",
              "      <td>F M</td>\n",
              "      <td>Tottenham</td>\n",
              "      <td>3</td>\n",
              "      <td>1.4514826834201813</td>\n",
              "      <td>4.069049090147018</td>\n",
              "      <td>1.541113331913948</td>\n",
              "      <td>1.548517</td>\n",
              "      <td>-1.319227</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>23</th>\n",
              "      <td>8845</td>\n",
              "      <td>Hee-Chan Hwang</td>\n",
              "      <td>4</td>\n",
              "      <td>2</td>\n",
              "      <td>0.340212</td>\n",
              "      <td>0</td>\n",
              "      <td>0.601140</td>\n",
              "      <td>6</td>\n",
              "      <td>1</td>\n",
              "      <td>M S</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>2</td>\n",
              "      <td>0.34021175652742386</td>\n",
              "      <td>0.7106867590919137</td>\n",
              "      <td>0.48809050116688013</td>\n",
              "      <td>1.659788</td>\n",
              "      <td>-0.601140</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>10177</td>\n",
              "      <td>Evan Ferguson</td>\n",
              "      <td>4</td>\n",
              "      <td>4</td>\n",
              "      <td>2.225460</td>\n",
              "      <td>0</td>\n",
              "      <td>0.069683</td>\n",
              "      <td>13</td>\n",
              "      <td>1</td>\n",
              "      <td>F S</td>\n",
              "      <td>Brighton</td>\n",
              "      <td>4</td>\n",
              "      <td>2.2254600673913956</td>\n",
              "      <td>2.667408235371113</td>\n",
              "      <td>0.37226477637887</td>\n",
              "      <td>1.774540</td>\n",
              "      <td>-0.069683</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-034b56c5-0f5b-4c84-a29f-7242e3f755c5')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-034b56c5-0f5b-4c84-a29f-7242e3f755c5 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-034b56c5-0f5b-4c84-a29f-7242e3f755c5');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-7c69a1d1-530a-4dd9-8b98-22893b7b7106\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-7c69a1d1-530a-4dd9-8b98-22893b7b7106')\"\n",
              "            title=\"Suggest charts.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-7c69a1d1-530a-4dd9-8b98-22893b7b7106 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 5
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "one_game_df"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 600
        },
        "id": "NDPdgpJUVBBZ",
        "outputId": "ec646d14-e180-4ffe-df11-96c1528444e7"
      },
      "execution_count": 6,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "        id      player_name games  time  goals_1wks   xG_1wks  assists_1wks  \\\n",
              "0     8260   Erling Haaland     4   355           6  4.720618             1   \n",
              "1     6552     Bryan Mbeumo     4   360           4  3.798691             0   \n",
              "2    10177    Evan Ferguson     4   205           4  2.225460             0   \n",
              "3      453    Son Heung-Min     4   343           3  1.451483             0   \n",
              "4     1776     Jarrod Bowen     4   360           3  1.852050             1   \n",
              "..     ...              ...   ...   ...         ...       ...           ...   \n",
              "380  11723    Alfie Doughty     3   123           0  0.020795             0   \n",
              "381  11728    Calvin Bassey     2   106           0  0.000000             0   \n",
              "382  11729     B√©nie Traor√©     4   273           0  0.321223             0   \n",
              "388  11926    Edson √Ålvarez     3   179           0  0.064324             0   \n",
              "390  11998  Hannes Delcroix     2   129           0  0.232794             0   \n",
              "\n",
              "      xA_1wks shots_1wks key_passes_1wks yellow_cards red_cards position  \\\n",
              "0    1.096818         20               6            0         0        F   \n",
              "1    0.472186          9               5            0         0        F   \n",
              "2    0.069683         13               1            0         0      F S   \n",
              "3    1.319227         10               9            0         0      F M   \n",
              "4    0.808009         13               4            1         0        M   \n",
              "..        ...        ...             ...          ...       ...      ...   \n",
              "380  0.107335          1               1            0         0      D S   \n",
              "381  0.000000          0               0            0         1      D S   \n",
              "382  0.238483          1               2            0         0    F M S   \n",
              "388  0.053036          1               1            1         0      M S   \n",
              "390  0.083017          4               2            1         0      D S   \n",
              "\n",
              "           team_title npg_1wks             npxG_1wks             xGChain  \\\n",
              "0     Manchester City        5     3.198280453681946   4.243555068969727   \n",
              "1           Brentford        2     2.276353180408478  3.4031228870153427   \n",
              "2            Brighton        4    2.2254600673913956   2.667408235371113   \n",
              "3           Tottenham        3    1.4514826834201813   4.069049090147018   \n",
              "4            West Ham        3     1.852049708366394   2.132258176803589   \n",
              "..                ...      ...                   ...                 ...   \n",
              "380             Luton        0  0.020794527605175972  0.1749723106622696   \n",
              "381            Fulham        0                     0                   0   \n",
              "382  Sheffield United        0    0.3212226927280426  1.1546861231327057   \n",
              "388          West Ham        0    0.0643242746591568  0.6627934575080872   \n",
              "390           Burnley        0   0.23279432207345963  0.5750201642513275   \n",
              "\n",
              "                xGBuildup  xgdifference  xAdifference  \n",
              "0      0.5024585798382759      1.279382     -0.096818  \n",
              "1      1.0115868896245956      0.201309     -0.472186  \n",
              "2        0.37226477637887      1.774540     -0.069683  \n",
              "3       1.541113331913948      1.548517     -1.319227  \n",
              "4     0.35537485778331757      1.147950      0.191991  \n",
              "..                    ...           ...           ...  \n",
              "380  0.046842776238918304     -0.020795     -0.107335  \n",
              "381                     0      0.000000      0.000000  \n",
              "382    0.5949807167053223     -0.321223     -0.238483  \n",
              "388    0.5454335808753967     -0.064324     -0.053036  \n",
              "390    0.4920034073293209     -0.232794     -0.083017  \n",
              "\n",
              "[304 rows x 20 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-2fc6523d-71fc-47e6-ba0f-154dd5204776\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>player_name</th>\n",
              "      <th>games</th>\n",
              "      <th>time</th>\n",
              "      <th>goals_1wks</th>\n",
              "      <th>xG_1wks</th>\n",
              "      <th>assists_1wks</th>\n",
              "      <th>xA_1wks</th>\n",
              "      <th>shots_1wks</th>\n",
              "      <th>key_passes_1wks</th>\n",
              "      <th>yellow_cards</th>\n",
              "      <th>red_cards</th>\n",
              "      <th>position</th>\n",
              "      <th>team_title</th>\n",
              "      <th>npg_1wks</th>\n",
              "      <th>npxG_1wks</th>\n",
              "      <th>xGChain</th>\n",
              "      <th>xGBuildup</th>\n",
              "      <th>xgdifference</th>\n",
              "      <th>xAdifference</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>8260</td>\n",
              "      <td>Erling Haaland</td>\n",
              "      <td>4</td>\n",
              "      <td>355</td>\n",
              "      <td>6</td>\n",
              "      <td>4.720618</td>\n",
              "      <td>1</td>\n",
              "      <td>1.096818</td>\n",
              "      <td>20</td>\n",
              "      <td>6</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>F</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>5</td>\n",
              "      <td>3.198280453681946</td>\n",
              "      <td>4.243555068969727</td>\n",
              "      <td>0.5024585798382759</td>\n",
              "      <td>1.279382</td>\n",
              "      <td>-0.096818</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>6552</td>\n",
              "      <td>Bryan Mbeumo</td>\n",
              "      <td>4</td>\n",
              "      <td>360</td>\n",
              "      <td>4</td>\n",
              "      <td>3.798691</td>\n",
              "      <td>0</td>\n",
              "      <td>0.472186</td>\n",
              "      <td>9</td>\n",
              "      <td>5</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>F</td>\n",
              "      <td>Brentford</td>\n",
              "      <td>2</td>\n",
              "      <td>2.276353180408478</td>\n",
              "      <td>3.4031228870153427</td>\n",
              "      <td>1.0115868896245956</td>\n",
              "      <td>0.201309</td>\n",
              "      <td>-0.472186</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>10177</td>\n",
              "      <td>Evan Ferguson</td>\n",
              "      <td>4</td>\n",
              "      <td>205</td>\n",
              "      <td>4</td>\n",
              "      <td>2.225460</td>\n",
              "      <td>0</td>\n",
              "      <td>0.069683</td>\n",
              "      <td>13</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>F S</td>\n",
              "      <td>Brighton</td>\n",
              "      <td>4</td>\n",
              "      <td>2.2254600673913956</td>\n",
              "      <td>2.667408235371113</td>\n",
              "      <td>0.37226477637887</td>\n",
              "      <td>1.774540</td>\n",
              "      <td>-0.069683</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>453</td>\n",
              "      <td>Son Heung-Min</td>\n",
              "      <td>4</td>\n",
              "      <td>343</td>\n",
              "      <td>3</td>\n",
              "      <td>1.451483</td>\n",
              "      <td>0</td>\n",
              "      <td>1.319227</td>\n",
              "      <td>10</td>\n",
              "      <td>9</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>F M</td>\n",
              "      <td>Tottenham</td>\n",
              "      <td>3</td>\n",
              "      <td>1.4514826834201813</td>\n",
              "      <td>4.069049090147018</td>\n",
              "      <td>1.541113331913948</td>\n",
              "      <td>1.548517</td>\n",
              "      <td>-1.319227</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>1776</td>\n",
              "      <td>Jarrod Bowen</td>\n",
              "      <td>4</td>\n",
              "      <td>360</td>\n",
              "      <td>3</td>\n",
              "      <td>1.852050</td>\n",
              "      <td>1</td>\n",
              "      <td>0.808009</td>\n",
              "      <td>13</td>\n",
              "      <td>4</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>M</td>\n",
              "      <td>West Ham</td>\n",
              "      <td>3</td>\n",
              "      <td>1.852049708366394</td>\n",
              "      <td>2.132258176803589</td>\n",
              "      <td>0.35537485778331757</td>\n",
              "      <td>1.147950</td>\n",
              "      <td>0.191991</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>380</th>\n",
              "      <td>11723</td>\n",
              "      <td>Alfie Doughty</td>\n",
              "      <td>3</td>\n",
              "      <td>123</td>\n",
              "      <td>0</td>\n",
              "      <td>0.020795</td>\n",
              "      <td>0</td>\n",
              "      <td>0.107335</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>D S</td>\n",
              "      <td>Luton</td>\n",
              "      <td>0</td>\n",
              "      <td>0.020794527605175972</td>\n",
              "      <td>0.1749723106622696</td>\n",
              "      <td>0.046842776238918304</td>\n",
              "      <td>-0.020795</td>\n",
              "      <td>-0.107335</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>381</th>\n",
              "      <td>11728</td>\n",
              "      <td>Calvin Bassey</td>\n",
              "      <td>2</td>\n",
              "      <td>106</td>\n",
              "      <td>0</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>D S</td>\n",
              "      <td>Fulham</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>382</th>\n",
              "      <td>11729</td>\n",
              "      <td>B√©nie Traor√©</td>\n",
              "      <td>4</td>\n",
              "      <td>273</td>\n",
              "      <td>0</td>\n",
              "      <td>0.321223</td>\n",
              "      <td>0</td>\n",
              "      <td>0.238483</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>F M S</td>\n",
              "      <td>Sheffield United</td>\n",
              "      <td>0</td>\n",
              "      <td>0.3212226927280426</td>\n",
              "      <td>1.1546861231327057</td>\n",
              "      <td>0.5949807167053223</td>\n",
              "      <td>-0.321223</td>\n",
              "      <td>-0.238483</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>388</th>\n",
              "      <td>11926</td>\n",
              "      <td>Edson √Ålvarez</td>\n",
              "      <td>3</td>\n",
              "      <td>179</td>\n",
              "      <td>0</td>\n",
              "      <td>0.064324</td>\n",
              "      <td>0</td>\n",
              "      <td>0.053036</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>M S</td>\n",
              "      <td>West Ham</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0643242746591568</td>\n",
              "      <td>0.6627934575080872</td>\n",
              "      <td>0.5454335808753967</td>\n",
              "      <td>-0.064324</td>\n",
              "      <td>-0.053036</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>390</th>\n",
              "      <td>11998</td>\n",
              "      <td>Hannes Delcroix</td>\n",
              "      <td>2</td>\n",
              "      <td>129</td>\n",
              "      <td>0</td>\n",
              "      <td>0.232794</td>\n",
              "      <td>0</td>\n",
              "      <td>0.083017</td>\n",
              "      <td>4</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>D S</td>\n",
              "      <td>Burnley</td>\n",
              "      <td>0</td>\n",
              "      <td>0.23279432207345963</td>\n",
              "      <td>0.5750201642513275</td>\n",
              "      <td>0.4920034073293209</td>\n",
              "      <td>-0.232794</td>\n",
              "      <td>-0.083017</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>304 rows √ó 20 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-2fc6523d-71fc-47e6-ba0f-154dd5204776')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-2fc6523d-71fc-47e6-ba0f-154dd5204776 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-2fc6523d-71fc-47e6-ba0f-154dd5204776');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-d5081fe8-41ae-4931-87a6-d11a5edd9a3d\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-d5081fe8-41ae-4931-87a6-d11a5edd9a3d')\"\n",
              "            title=\"Suggest charts.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-d5081fe8-41ae-4931-87a6-d11a5edd9a3d button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 6
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "onegamedftidy = one_game_df.drop(columns=[\n",
        " 'time',\n",
        " 'goals_1wks',\n",
        " 'assists_1wks',\n",
        " 'shots_1wks',\n",
        " 'key_passes_1wks',\n",
        " 'yellow_cards',\n",
        " 'red_cards',\n",
        " 'npg_1wks',\n",
        " 'npxG_1wks',\n",
        " 'xGChain',\n",
        " 'xGBuildup',\n",
        " 'xgdifference',\n",
        " 'xAdifference'])\n",
        "onegamedftidy"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 423
        },
        "id": "RKf0tUGEh8FV",
        "outputId": "43be3c29-d621-4cbf-f317-00423dcedd74"
      },
      "execution_count": 7,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "        id      player_name games   xG_1wks   xA_1wks position  \\\n",
              "0     8260   Erling Haaland     4  4.720618  1.096818        F   \n",
              "1     6552     Bryan Mbeumo     4  3.798691  0.472186        F   \n",
              "2    10177    Evan Ferguson     4  2.225460  0.069683      F S   \n",
              "3      453    Son Heung-Min     4  1.451483  1.319227      F M   \n",
              "4     1776     Jarrod Bowen     4  1.852050  0.808009        M   \n",
              "..     ...              ...   ...       ...       ...      ...   \n",
              "380  11723    Alfie Doughty     3  0.020795  0.107335      D S   \n",
              "381  11728    Calvin Bassey     2  0.000000  0.000000      D S   \n",
              "382  11729     B√©nie Traor√©     4  0.321223  0.238483    F M S   \n",
              "388  11926    Edson √Ålvarez     3  0.064324  0.053036      M S   \n",
              "390  11998  Hannes Delcroix     2  0.232794  0.083017      D S   \n",
              "\n",
              "           team_title  \n",
              "0     Manchester City  \n",
              "1           Brentford  \n",
              "2            Brighton  \n",
              "3           Tottenham  \n",
              "4            West Ham  \n",
              "..                ...  \n",
              "380             Luton  \n",
              "381            Fulham  \n",
              "382  Sheffield United  \n",
              "388          West Ham  \n",
              "390           Burnley  \n",
              "\n",
              "[304 rows x 7 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-4699c435-cd53-423d-b915-efa4f113dfbd\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>player_name</th>\n",
              "      <th>games</th>\n",
              "      <th>xG_1wks</th>\n",
              "      <th>xA_1wks</th>\n",
              "      <th>position</th>\n",
              "      <th>team_title</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>8260</td>\n",
              "      <td>Erling Haaland</td>\n",
              "      <td>4</td>\n",
              "      <td>4.720618</td>\n",
              "      <td>1.096818</td>\n",
              "      <td>F</td>\n",
              "      <td>Manchester City</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>6552</td>\n",
              "      <td>Bryan Mbeumo</td>\n",
              "      <td>4</td>\n",
              "      <td>3.798691</td>\n",
              "      <td>0.472186</td>\n",
              "      <td>F</td>\n",
              "      <td>Brentford</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>10177</td>\n",
              "      <td>Evan Ferguson</td>\n",
              "      <td>4</td>\n",
              "      <td>2.225460</td>\n",
              "      <td>0.069683</td>\n",
              "      <td>F S</td>\n",
              "      <td>Brighton</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>453</td>\n",
              "      <td>Son Heung-Min</td>\n",
              "      <td>4</td>\n",
              "      <td>1.451483</td>\n",
              "      <td>1.319227</td>\n",
              "      <td>F M</td>\n",
              "      <td>Tottenham</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>1776</td>\n",
              "      <td>Jarrod Bowen</td>\n",
              "      <td>4</td>\n",
              "      <td>1.852050</td>\n",
              "      <td>0.808009</td>\n",
              "      <td>M</td>\n",
              "      <td>West Ham</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>380</th>\n",
              "      <td>11723</td>\n",
              "      <td>Alfie Doughty</td>\n",
              "      <td>3</td>\n",
              "      <td>0.020795</td>\n",
              "      <td>0.107335</td>\n",
              "      <td>D S</td>\n",
              "      <td>Luton</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>381</th>\n",
              "      <td>11728</td>\n",
              "      <td>Calvin Bassey</td>\n",
              "      <td>2</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>D S</td>\n",
              "      <td>Fulham</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>382</th>\n",
              "      <td>11729</td>\n",
              "      <td>B√©nie Traor√©</td>\n",
              "      <td>4</td>\n",
              "      <td>0.321223</td>\n",
              "      <td>0.238483</td>\n",
              "      <td>F M S</td>\n",
              "      <td>Sheffield United</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>388</th>\n",
              "      <td>11926</td>\n",
              "      <td>Edson √Ålvarez</td>\n",
              "      <td>3</td>\n",
              "      <td>0.064324</td>\n",
              "      <td>0.053036</td>\n",
              "      <td>M S</td>\n",
              "      <td>West Ham</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>390</th>\n",
              "      <td>11998</td>\n",
              "      <td>Hannes Delcroix</td>\n",
              "      <td>2</td>\n",
              "      <td>0.232794</td>\n",
              "      <td>0.083017</td>\n",
              "      <td>D S</td>\n",
              "      <td>Burnley</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>304 rows √ó 7 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-4699c435-cd53-423d-b915-efa4f113dfbd')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-4699c435-cd53-423d-b915-efa4f113dfbd button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-4699c435-cd53-423d-b915-efa4f113dfbd');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-7a4ce370-1bee-46e6-994f-23a1801ff129\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-7a4ce370-1bee-46e6-994f-23a1801ff129')\"\n",
              "            title=\"Suggest charts.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-7a4ce370-1bee-46e6-994f-23a1801ff129 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 7
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "!git clone https://github.com/pratos/fpl-mappers\n",
        "!git clone https://github.com/ChrisMusson/FPL-ID-Map\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "B9kCj8OeiKGn",
        "outputId": "281ecde2-02ea-4d13-facb-a65cc737494e"
      },
      "execution_count": 8,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Cloning into 'fpl-mappers'...\n",
            "remote: Enumerating objects: 94, done.\u001b[K\n",
            "remote: Counting objects: 100% (94/94), done.\u001b[K\n",
            "remote: Compressing objects: 100% (56/56), done.\u001b[K\n",
            "remote: Total 94 (delta 32), reused 89 (delta 30), pack-reused 0\u001b[K\n",
            "Receiving objects: 100% (94/94), 217.69 KiB | 6.80 MiB/s, done.\n",
            "Resolving deltas: 100% (32/32), done.\n",
            "Cloning into 'FPL-ID-Map'...\n",
            "remote: Enumerating objects: 242, done.\u001b[K\n",
            "remote: Counting objects: 100% (242/242), done.\u001b[K\n",
            "remote: Compressing objects: 100% (120/120), done.\u001b[K\n",
            "remote: Total 242 (delta 176), reused 188 (delta 122), pack-reused 0\u001b[K\n",
            "Receiving objects: 100% (242/242), 273.05 KiB | 5.35 MiB/s, done.\n",
            "Resolving deltas: 100% (176/176), done.\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "data1 = pd.read_csv('/content/FPL-ID-Map/Understat.csv', on_bad_lines='skip')\n",
        "data2 = pd.read_csv('/content/FPL-ID-Map/FPL/22-23.csv', on_bad_lines='skip')\n",
        "understatwithfplid1 = pd.merge(data2,\n",
        "                     data1,\n",
        "                     on ='code',\n",
        "                     how ='left')\n",
        "understatid = understatwithfplid1.drop(columns=[\n",
        "'code',\n",
        " 'first_name_x',\n",
        " 'second_name_x',\n",
        " 'web_name_x',\n",
        " 'first_name_y',\n",
        " 'second_name_y',\n",
        " 'web_name_y',])\n",
        "one_game_df.rename(columns={'id': 'understat'}, inplace=True)\n",
        "one_game_df"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 600
        },
        "id": "SaX7692EiQA7",
        "outputId": "ae3c350d-f192-4dd3-f04f-2ccc257699d7"
      },
      "execution_count": 9,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "    understat      player_name games  time  goals_1wks   xG_1wks  \\\n",
              "0        8260   Erling Haaland     4   355           6  4.720618   \n",
              "1        6552     Bryan Mbeumo     4   360           4  3.798691   \n",
              "2       10177    Evan Ferguson     4   205           4  2.225460   \n",
              "3         453    Son Heung-Min     4   343           3  1.451483   \n",
              "4        1776     Jarrod Bowen     4   360           3  1.852050   \n",
              "..        ...              ...   ...   ...         ...       ...   \n",
              "380     11723    Alfie Doughty     3   123           0  0.020795   \n",
              "381     11728    Calvin Bassey     2   106           0  0.000000   \n",
              "382     11729     B√©nie Traor√©     4   273           0  0.321223   \n",
              "388     11926    Edson √Ålvarez     3   179           0  0.064324   \n",
              "390     11998  Hannes Delcroix     2   129           0  0.232794   \n",
              "\n",
              "     assists_1wks   xA_1wks shots_1wks key_passes_1wks yellow_cards red_cards  \\\n",
              "0               1  1.096818         20               6            0         0   \n",
              "1               0  0.472186          9               5            0         0   \n",
              "2               0  0.069683         13               1            0         0   \n",
              "3               0  1.319227         10               9            0         0   \n",
              "4               1  0.808009         13               4            1         0   \n",
              "..            ...       ...        ...             ...          ...       ...   \n",
              "380             0  0.107335          1               1            0         0   \n",
              "381             0  0.000000          0               0            0         1   \n",
              "382             0  0.238483          1               2            0         0   \n",
              "388             0  0.053036          1               1            1         0   \n",
              "390             0  0.083017          4               2            1         0   \n",
              "\n",
              "    position        team_title npg_1wks             npxG_1wks  \\\n",
              "0          F   Manchester City        5     3.198280453681946   \n",
              "1          F         Brentford        2     2.276353180408478   \n",
              "2        F S          Brighton        4    2.2254600673913956   \n",
              "3        F M         Tottenham        3    1.4514826834201813   \n",
              "4          M          West Ham        3     1.852049708366394   \n",
              "..       ...               ...      ...                   ...   \n",
              "380      D S             Luton        0  0.020794527605175972   \n",
              "381      D S            Fulham        0                     0   \n",
              "382    F M S  Sheffield United        0    0.3212226927280426   \n",
              "388      M S          West Ham        0    0.0643242746591568   \n",
              "390      D S           Burnley        0   0.23279432207345963   \n",
              "\n",
              "                xGChain             xGBuildup  xgdifference  xAdifference  \n",
              "0     4.243555068969727    0.5024585798382759      1.279382     -0.096818  \n",
              "1    3.4031228870153427    1.0115868896245956      0.201309     -0.472186  \n",
              "2     2.667408235371113      0.37226477637887      1.774540     -0.069683  \n",
              "3     4.069049090147018     1.541113331913948      1.548517     -1.319227  \n",
              "4     2.132258176803589   0.35537485778331757      1.147950      0.191991  \n",
              "..                  ...                   ...           ...           ...  \n",
              "380  0.1749723106622696  0.046842776238918304     -0.020795     -0.107335  \n",
              "381                   0                     0      0.000000      0.000000  \n",
              "382  1.1546861231327057    0.5949807167053223     -0.321223     -0.238483  \n",
              "388  0.6627934575080872    0.5454335808753967     -0.064324     -0.053036  \n",
              "390  0.5750201642513275    0.4920034073293209     -0.232794     -0.083017  \n",
              "\n",
              "[304 rows x 20 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-425e0948-9986-42d6-bbc9-4ef684f3c39f\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>understat</th>\n",
              "      <th>player_name</th>\n",
              "      <th>games</th>\n",
              "      <th>time</th>\n",
              "      <th>goals_1wks</th>\n",
              "      <th>xG_1wks</th>\n",
              "      <th>assists_1wks</th>\n",
              "      <th>xA_1wks</th>\n",
              "      <th>shots_1wks</th>\n",
              "      <th>key_passes_1wks</th>\n",
              "      <th>yellow_cards</th>\n",
              "      <th>red_cards</th>\n",
              "      <th>position</th>\n",
              "      <th>team_title</th>\n",
              "      <th>npg_1wks</th>\n",
              "      <th>npxG_1wks</th>\n",
              "      <th>xGChain</th>\n",
              "      <th>xGBuildup</th>\n",
              "      <th>xgdifference</th>\n",
              "      <th>xAdifference</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>8260</td>\n",
              "      <td>Erling Haaland</td>\n",
              "      <td>4</td>\n",
              "      <td>355</td>\n",
              "      <td>6</td>\n",
              "      <td>4.720618</td>\n",
              "      <td>1</td>\n",
              "      <td>1.096818</td>\n",
              "      <td>20</td>\n",
              "      <td>6</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>F</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>5</td>\n",
              "      <td>3.198280453681946</td>\n",
              "      <td>4.243555068969727</td>\n",
              "      <td>0.5024585798382759</td>\n",
              "      <td>1.279382</td>\n",
              "      <td>-0.096818</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>6552</td>\n",
              "      <td>Bryan Mbeumo</td>\n",
              "      <td>4</td>\n",
              "      <td>360</td>\n",
              "      <td>4</td>\n",
              "      <td>3.798691</td>\n",
              "      <td>0</td>\n",
              "      <td>0.472186</td>\n",
              "      <td>9</td>\n",
              "      <td>5</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>F</td>\n",
              "      <td>Brentford</td>\n",
              "      <td>2</td>\n",
              "      <td>2.276353180408478</td>\n",
              "      <td>3.4031228870153427</td>\n",
              "      <td>1.0115868896245956</td>\n",
              "      <td>0.201309</td>\n",
              "      <td>-0.472186</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>10177</td>\n",
              "      <td>Evan Ferguson</td>\n",
              "      <td>4</td>\n",
              "      <td>205</td>\n",
              "      <td>4</td>\n",
              "      <td>2.225460</td>\n",
              "      <td>0</td>\n",
              "      <td>0.069683</td>\n",
              "      <td>13</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>F S</td>\n",
              "      <td>Brighton</td>\n",
              "      <td>4</td>\n",
              "      <td>2.2254600673913956</td>\n",
              "      <td>2.667408235371113</td>\n",
              "      <td>0.37226477637887</td>\n",
              "      <td>1.774540</td>\n",
              "      <td>-0.069683</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>453</td>\n",
              "      <td>Son Heung-Min</td>\n",
              "      <td>4</td>\n",
              "      <td>343</td>\n",
              "      <td>3</td>\n",
              "      <td>1.451483</td>\n",
              "      <td>0</td>\n",
              "      <td>1.319227</td>\n",
              "      <td>10</td>\n",
              "      <td>9</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>F M</td>\n",
              "      <td>Tottenham</td>\n",
              "      <td>3</td>\n",
              "      <td>1.4514826834201813</td>\n",
              "      <td>4.069049090147018</td>\n",
              "      <td>1.541113331913948</td>\n",
              "      <td>1.548517</td>\n",
              "      <td>-1.319227</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>1776</td>\n",
              "      <td>Jarrod Bowen</td>\n",
              "      <td>4</td>\n",
              "      <td>360</td>\n",
              "      <td>3</td>\n",
              "      <td>1.852050</td>\n",
              "      <td>1</td>\n",
              "      <td>0.808009</td>\n",
              "      <td>13</td>\n",
              "      <td>4</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>M</td>\n",
              "      <td>West Ham</td>\n",
              "      <td>3</td>\n",
              "      <td>1.852049708366394</td>\n",
              "      <td>2.132258176803589</td>\n",
              "      <td>0.35537485778331757</td>\n",
              "      <td>1.147950</td>\n",
              "      <td>0.191991</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>380</th>\n",
              "      <td>11723</td>\n",
              "      <td>Alfie Doughty</td>\n",
              "      <td>3</td>\n",
              "      <td>123</td>\n",
              "      <td>0</td>\n",
              "      <td>0.020795</td>\n",
              "      <td>0</td>\n",
              "      <td>0.107335</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>D S</td>\n",
              "      <td>Luton</td>\n",
              "      <td>0</td>\n",
              "      <td>0.020794527605175972</td>\n",
              "      <td>0.1749723106622696</td>\n",
              "      <td>0.046842776238918304</td>\n",
              "      <td>-0.020795</td>\n",
              "      <td>-0.107335</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>381</th>\n",
              "      <td>11728</td>\n",
              "      <td>Calvin Bassey</td>\n",
              "      <td>2</td>\n",
              "      <td>106</td>\n",
              "      <td>0</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>D S</td>\n",
              "      <td>Fulham</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>382</th>\n",
              "      <td>11729</td>\n",
              "      <td>B√©nie Traor√©</td>\n",
              "      <td>4</td>\n",
              "      <td>273</td>\n",
              "      <td>0</td>\n",
              "      <td>0.321223</td>\n",
              "      <td>0</td>\n",
              "      <td>0.238483</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>F M S</td>\n",
              "      <td>Sheffield United</td>\n",
              "      <td>0</td>\n",
              "      <td>0.3212226927280426</td>\n",
              "      <td>1.1546861231327057</td>\n",
              "      <td>0.5949807167053223</td>\n",
              "      <td>-0.321223</td>\n",
              "      <td>-0.238483</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>388</th>\n",
              "      <td>11926</td>\n",
              "      <td>Edson √Ålvarez</td>\n",
              "      <td>3</td>\n",
              "      <td>179</td>\n",
              "      <td>0</td>\n",
              "      <td>0.064324</td>\n",
              "      <td>0</td>\n",
              "      <td>0.053036</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>M S</td>\n",
              "      <td>West Ham</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0643242746591568</td>\n",
              "      <td>0.6627934575080872</td>\n",
              "      <td>0.5454335808753967</td>\n",
              "      <td>-0.064324</td>\n",
              "      <td>-0.053036</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>390</th>\n",
              "      <td>11998</td>\n",
              "      <td>Hannes Delcroix</td>\n",
              "      <td>2</td>\n",
              "      <td>129</td>\n",
              "      <td>0</td>\n",
              "      <td>0.232794</td>\n",
              "      <td>0</td>\n",
              "      <td>0.083017</td>\n",
              "      <td>4</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>D S</td>\n",
              "      <td>Burnley</td>\n",
              "      <td>0</td>\n",
              "      <td>0.23279432207345963</td>\n",
              "      <td>0.5750201642513275</td>\n",
              "      <td>0.4920034073293209</td>\n",
              "      <td>-0.232794</td>\n",
              "      <td>-0.083017</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>304 rows √ó 20 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-425e0948-9986-42d6-bbc9-4ef684f3c39f')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-425e0948-9986-42d6-bbc9-4ef684f3c39f button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-425e0948-9986-42d6-bbc9-4ef684f3c39f');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-bc6d5bba-77bb-4a00-aeaf-b6d9f93e73b1\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-bc6d5bba-77bb-4a00-aeaf-b6d9f93e73b1')\"\n",
              "            title=\"Suggest charts.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-bc6d5bba-77bb-4a00-aeaf-b6d9f93e73b1 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 9
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "!git clone https://github.com/huricane85/FPL-API-Fixture-modeler"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "dU1giLdZir3J",
        "outputId": "385547ed-a31c-497c-b047-51593a64cfef"
      },
      "execution_count": 10,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Cloning into 'FPL-API-Fixture-modeler'...\n",
            "remote: Enumerating objects: 69, done.\u001b[K\n",
            "remote: Counting objects: 100% (69/69), done.\u001b[K\n",
            "remote: Compressing objects: 100% (69/69), done.\u001b[K\n",
            "remote: Total 69 (delta 33), reused 0 (delta 0), pack-reused 0\u001b[K\n",
            "Receiving objects: 100% (69/69), 2.45 MiB | 6.03 MiB/s, done.\n",
            "Resolving deltas: 100% (33/33), done.\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import pandas as pd\n",
        "\n",
        "# read the CSV file from GitHub into a DataFrame\n",
        "url = \"https://raw.githubusercontent.com/ChrisMusson/FPL-ID-Map/main/Master.csv\"\n",
        "df = pd.read_csv(url)\n",
        "\n",
        "# rename the \"22-23\" column to \"id\"\n",
        "df.rename(columns={'22-23': 'id'}, inplace=True)\n",
        "\n",
        "# convert \"id\" and \"understat\" columns to int64 and float64 respectively\n",
        "df['id'] = pd.to_numeric(df['id'], errors='coerce', downcast='integer').astype('Int64')\n",
        "df['understat'] = pd.to_numeric(df['understat'], errors='coerce', downcast='integer').astype('Int64')\n",
        "\n",
        "# filter out rows where \"understat\" is null\n",
        "df = df.dropna(subset=['understat'])\n",
        "\n",
        "# change data type of \"id\" column to float64\n",
        "df['id'] = df['id'].astype('float64')\n",
        "\n",
        "# create a new DataFrame with only the \"understat\" and \"id\" columns\n",
        "new_df = df[['understat', 'id']].dropna(subset=['id']).copy()\n",
        "\n",
        "# display the new DataFrame\n",
        "\n",
        "new_df\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 423
        },
        "id": "WRijWphEVPuN",
        "outputId": "523a3fb8-268a-4586-aac5-f67055605e75"
      },
      "execution_count": 11,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "      understat     id\n",
              "37         7821  760.0\n",
              "38         1697  627.0\n",
              "55         2371  326.0\n",
              "62          489  274.0\n",
              "77         8158  502.0\n",
              "...         ...    ...\n",
              "1933      11301  695.0\n",
              "1934      11146  632.0\n",
              "1935      11189  646.0\n",
              "1936      11302  696.0\n",
              "1937      11195  650.0\n",
              "\n",
              "[763 rows x 2 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-8c9f365e-4a4a-4a79-a3a8-f07d58589255\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>understat</th>\n",
              "      <th>id</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>37</th>\n",
              "      <td>7821</td>\n",
              "      <td>760.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>38</th>\n",
              "      <td>1697</td>\n",
              "      <td>627.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>55</th>\n",
              "      <td>2371</td>\n",
              "      <td>326.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>62</th>\n",
              "      <td>489</td>\n",
              "      <td>274.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>77</th>\n",
              "      <td>8158</td>\n",
              "      <td>502.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1933</th>\n",
              "      <td>11301</td>\n",
              "      <td>695.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1934</th>\n",
              "      <td>11146</td>\n",
              "      <td>632.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1935</th>\n",
              "      <td>11189</td>\n",
              "      <td>646.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1936</th>\n",
              "      <td>11302</td>\n",
              "      <td>696.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1937</th>\n",
              "      <td>11195</td>\n",
              "      <td>650.0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>763 rows √ó 2 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-8c9f365e-4a4a-4a79-a3a8-f07d58589255')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-8c9f365e-4a4a-4a79-a3a8-f07d58589255 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-8c9f365e-4a4a-4a79-a3a8-f07d58589255');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-11c2f9f2-c25d-4b9f-94af-42a9745fcaef\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-11c2f9f2-c25d-4b9f-94af-42a9745fcaef')\"\n",
              "            title=\"Suggest charts.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-11c2f9f2-c25d-4b9f-94af-42a9745fcaef button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 11
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "new_df"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 423
        },
        "id": "NhQ4dZKdUv36",
        "outputId": "88540b21-33e1-44a5-f144-bb8ae27a8f13"
      },
      "execution_count": 12,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "      understat     id\n",
              "37         7821  760.0\n",
              "38         1697  627.0\n",
              "55         2371  326.0\n",
              "62          489  274.0\n",
              "77         8158  502.0\n",
              "...         ...    ...\n",
              "1933      11301  695.0\n",
              "1934      11146  632.0\n",
              "1935      11189  646.0\n",
              "1936      11302  696.0\n",
              "1937      11195  650.0\n",
              "\n",
              "[763 rows x 2 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-e109c256-d3f7-4f79-a85c-f711795dc876\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>understat</th>\n",
              "      <th>id</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>37</th>\n",
              "      <td>7821</td>\n",
              "      <td>760.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>38</th>\n",
              "      <td>1697</td>\n",
              "      <td>627.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>55</th>\n",
              "      <td>2371</td>\n",
              "      <td>326.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>62</th>\n",
              "      <td>489</td>\n",
              "      <td>274.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>77</th>\n",
              "      <td>8158</td>\n",
              "      <td>502.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1933</th>\n",
              "      <td>11301</td>\n",
              "      <td>695.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1934</th>\n",
              "      <td>11146</td>\n",
              "      <td>632.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1935</th>\n",
              "      <td>11189</td>\n",
              "      <td>646.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1936</th>\n",
              "      <td>11302</td>\n",
              "      <td>696.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1937</th>\n",
              "      <td>11195</td>\n",
              "      <td>650.0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>763 rows √ó 2 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-e109c256-d3f7-4f79-a85c-f711795dc876')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-e109c256-d3f7-4f79-a85c-f711795dc876 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-e109c256-d3f7-4f79-a85c-f711795dc876');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-a7cde493-164b-4da7-9311-0bce85939146\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-a7cde493-164b-4da7-9311-0bce85939146')\"\n",
              "            title=\"Suggest charts.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-a7cde493-164b-4da7-9311-0bce85939146 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 12
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "one_game_df[\"understat\"] = one_game_df[\"understat\"].astype(str).astype(int)\n",
        "understatid2 = new_df\n",
        "understatwithfplid = pd.merge(one_game_df,\n",
        "                     understatid2,\n",
        "                     on ='understat',\n",
        "                     how ='left')\n",
        "understatwithfplid"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 600
        },
        "id": "KmDbXEnfi2v1",
        "outputId": "a909a7da-0bd1-462f-9a41-00c961c3d01a"
      },
      "execution_count": 13,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "     understat      player_name games  time  goals_1wks   xG_1wks  \\\n",
              "0         8260   Erling Haaland     4   355           6  4.720618   \n",
              "1         6552     Bryan Mbeumo     4   360           4  3.798691   \n",
              "2        10177    Evan Ferguson     4   205           4  2.225460   \n",
              "3          453    Son Heung-Min     4   343           3  1.451483   \n",
              "4         1776     Jarrod Bowen     4   360           3  1.852050   \n",
              "..         ...              ...   ...   ...         ...       ...   \n",
              "299      11723    Alfie Doughty     3   123           0  0.020795   \n",
              "300      11728    Calvin Bassey     2   106           0  0.000000   \n",
              "301      11729     B√©nie Traor√©     4   273           0  0.321223   \n",
              "302      11926    Edson √Ålvarez     3   179           0  0.064324   \n",
              "303      11998  Hannes Delcroix     2   129           0  0.232794   \n",
              "\n",
              "     assists_1wks   xA_1wks shots_1wks key_passes_1wks  ... red_cards  \\\n",
              "0               1  1.096818         20               6  ...         0   \n",
              "1               0  0.472186          9               5  ...         0   \n",
              "2               0  0.069683         13               1  ...         0   \n",
              "3               0  1.319227         10               9  ...         0   \n",
              "4               1  0.808009         13               4  ...         0   \n",
              "..            ...       ...        ...             ...  ...       ...   \n",
              "299             0  0.107335          1               1  ...         0   \n",
              "300             0  0.000000          0               0  ...         1   \n",
              "301             0  0.238483          1               2  ...         0   \n",
              "302             0  0.053036          1               1  ...         0   \n",
              "303             0  0.083017          4               2  ...         0   \n",
              "\n",
              "    position        team_title npg_1wks             npxG_1wks  \\\n",
              "0          F   Manchester City        5     3.198280453681946   \n",
              "1          F         Brentford        2     2.276353180408478   \n",
              "2        F S          Brighton        4    2.2254600673913956   \n",
              "3        F M         Tottenham        3    1.4514826834201813   \n",
              "4          M          West Ham        3     1.852049708366394   \n",
              "..       ...               ...      ...                   ...   \n",
              "299      D S             Luton        0  0.020794527605175972   \n",
              "300      D S            Fulham        0                     0   \n",
              "301    F M S  Sheffield United        0    0.3212226927280426   \n",
              "302      M S          West Ham        0    0.0643242746591568   \n",
              "303      D S           Burnley        0   0.23279432207345963   \n",
              "\n",
              "                xGChain             xGBuildup xgdifference  xAdifference  \\\n",
              "0     4.243555068969727    0.5024585798382759     1.279382     -0.096818   \n",
              "1    3.4031228870153427    1.0115868896245956     0.201309     -0.472186   \n",
              "2     2.667408235371113      0.37226477637887     1.774540     -0.069683   \n",
              "3     4.069049090147018     1.541113331913948     1.548517     -1.319227   \n",
              "4     2.132258176803589   0.35537485778331757     1.147950      0.191991   \n",
              "..                  ...                   ...          ...           ...   \n",
              "299  0.1749723106622696  0.046842776238918304    -0.020795     -0.107335   \n",
              "300                   0                     0     0.000000      0.000000   \n",
              "301  1.1546861231327057    0.5949807167053223    -0.321223     -0.238483   \n",
              "302  0.6627934575080872    0.5454335808753967    -0.064324     -0.053036   \n",
              "303  0.5750201642513275    0.4920034073293209    -0.232794     -0.083017   \n",
              "\n",
              "        id  \n",
              "0    318.0  \n",
              "1     95.0  \n",
              "2    596.0  \n",
              "3    428.0  \n",
              "4    465.0  \n",
              "..     ...  \n",
              "299    NaN  \n",
              "300    NaN  \n",
              "301    NaN  \n",
              "302    NaN  \n",
              "303    NaN  \n",
              "\n",
              "[304 rows x 21 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-37fe25a2-584d-4710-bbc3-2b775a9febbe\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>understat</th>\n",
              "      <th>player_name</th>\n",
              "      <th>games</th>\n",
              "      <th>time</th>\n",
              "      <th>goals_1wks</th>\n",
              "      <th>xG_1wks</th>\n",
              "      <th>assists_1wks</th>\n",
              "      <th>xA_1wks</th>\n",
              "      <th>shots_1wks</th>\n",
              "      <th>key_passes_1wks</th>\n",
              "      <th>...</th>\n",
              "      <th>red_cards</th>\n",
              "      <th>position</th>\n",
              "      <th>team_title</th>\n",
              "      <th>npg_1wks</th>\n",
              "      <th>npxG_1wks</th>\n",
              "      <th>xGChain</th>\n",
              "      <th>xGBuildup</th>\n",
              "      <th>xgdifference</th>\n",
              "      <th>xAdifference</th>\n",
              "      <th>id</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>8260</td>\n",
              "      <td>Erling Haaland</td>\n",
              "      <td>4</td>\n",
              "      <td>355</td>\n",
              "      <td>6</td>\n",
              "      <td>4.720618</td>\n",
              "      <td>1</td>\n",
              "      <td>1.096818</td>\n",
              "      <td>20</td>\n",
              "      <td>6</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>F</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>5</td>\n",
              "      <td>3.198280453681946</td>\n",
              "      <td>4.243555068969727</td>\n",
              "      <td>0.5024585798382759</td>\n",
              "      <td>1.279382</td>\n",
              "      <td>-0.096818</td>\n",
              "      <td>318.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>6552</td>\n",
              "      <td>Bryan Mbeumo</td>\n",
              "      <td>4</td>\n",
              "      <td>360</td>\n",
              "      <td>4</td>\n",
              "      <td>3.798691</td>\n",
              "      <td>0</td>\n",
              "      <td>0.472186</td>\n",
              "      <td>9</td>\n",
              "      <td>5</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>F</td>\n",
              "      <td>Brentford</td>\n",
              "      <td>2</td>\n",
              "      <td>2.276353180408478</td>\n",
              "      <td>3.4031228870153427</td>\n",
              "      <td>1.0115868896245956</td>\n",
              "      <td>0.201309</td>\n",
              "      <td>-0.472186</td>\n",
              "      <td>95.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>10177</td>\n",
              "      <td>Evan Ferguson</td>\n",
              "      <td>4</td>\n",
              "      <td>205</td>\n",
              "      <td>4</td>\n",
              "      <td>2.225460</td>\n",
              "      <td>0</td>\n",
              "      <td>0.069683</td>\n",
              "      <td>13</td>\n",
              "      <td>1</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>F S</td>\n",
              "      <td>Brighton</td>\n",
              "      <td>4</td>\n",
              "      <td>2.2254600673913956</td>\n",
              "      <td>2.667408235371113</td>\n",
              "      <td>0.37226477637887</td>\n",
              "      <td>1.774540</td>\n",
              "      <td>-0.069683</td>\n",
              "      <td>596.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>453</td>\n",
              "      <td>Son Heung-Min</td>\n",
              "      <td>4</td>\n",
              "      <td>343</td>\n",
              "      <td>3</td>\n",
              "      <td>1.451483</td>\n",
              "      <td>0</td>\n",
              "      <td>1.319227</td>\n",
              "      <td>10</td>\n",
              "      <td>9</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>F M</td>\n",
              "      <td>Tottenham</td>\n",
              "      <td>3</td>\n",
              "      <td>1.4514826834201813</td>\n",
              "      <td>4.069049090147018</td>\n",
              "      <td>1.541113331913948</td>\n",
              "      <td>1.548517</td>\n",
              "      <td>-1.319227</td>\n",
              "      <td>428.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>1776</td>\n",
              "      <td>Jarrod Bowen</td>\n",
              "      <td>4</td>\n",
              "      <td>360</td>\n",
              "      <td>3</td>\n",
              "      <td>1.852050</td>\n",
              "      <td>1</td>\n",
              "      <td>0.808009</td>\n",
              "      <td>13</td>\n",
              "      <td>4</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>M</td>\n",
              "      <td>West Ham</td>\n",
              "      <td>3</td>\n",
              "      <td>1.852049708366394</td>\n",
              "      <td>2.132258176803589</td>\n",
              "      <td>0.35537485778331757</td>\n",
              "      <td>1.147950</td>\n",
              "      <td>0.191991</td>\n",
              "      <td>465.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>299</th>\n",
              "      <td>11723</td>\n",
              "      <td>Alfie Doughty</td>\n",
              "      <td>3</td>\n",
              "      <td>123</td>\n",
              "      <td>0</td>\n",
              "      <td>0.020795</td>\n",
              "      <td>0</td>\n",
              "      <td>0.107335</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>D S</td>\n",
              "      <td>Luton</td>\n",
              "      <td>0</td>\n",
              "      <td>0.020794527605175972</td>\n",
              "      <td>0.1749723106622696</td>\n",
              "      <td>0.046842776238918304</td>\n",
              "      <td>-0.020795</td>\n",
              "      <td>-0.107335</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>300</th>\n",
              "      <td>11728</td>\n",
              "      <td>Calvin Bassey</td>\n",
              "      <td>2</td>\n",
              "      <td>106</td>\n",
              "      <td>0</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>1</td>\n",
              "      <td>D S</td>\n",
              "      <td>Fulham</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>301</th>\n",
              "      <td>11729</td>\n",
              "      <td>B√©nie Traor√©</td>\n",
              "      <td>4</td>\n",
              "      <td>273</td>\n",
              "      <td>0</td>\n",
              "      <td>0.321223</td>\n",
              "      <td>0</td>\n",
              "      <td>0.238483</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>F M S</td>\n",
              "      <td>Sheffield United</td>\n",
              "      <td>0</td>\n",
              "      <td>0.3212226927280426</td>\n",
              "      <td>1.1546861231327057</td>\n",
              "      <td>0.5949807167053223</td>\n",
              "      <td>-0.321223</td>\n",
              "      <td>-0.238483</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>302</th>\n",
              "      <td>11926</td>\n",
              "      <td>Edson √Ålvarez</td>\n",
              "      <td>3</td>\n",
              "      <td>179</td>\n",
              "      <td>0</td>\n",
              "      <td>0.064324</td>\n",
              "      <td>0</td>\n",
              "      <td>0.053036</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>M S</td>\n",
              "      <td>West Ham</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0643242746591568</td>\n",
              "      <td>0.6627934575080872</td>\n",
              "      <td>0.5454335808753967</td>\n",
              "      <td>-0.064324</td>\n",
              "      <td>-0.053036</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>303</th>\n",
              "      <td>11998</td>\n",
              "      <td>Hannes Delcroix</td>\n",
              "      <td>2</td>\n",
              "      <td>129</td>\n",
              "      <td>0</td>\n",
              "      <td>0.232794</td>\n",
              "      <td>0</td>\n",
              "      <td>0.083017</td>\n",
              "      <td>4</td>\n",
              "      <td>2</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>D S</td>\n",
              "      <td>Burnley</td>\n",
              "      <td>0</td>\n",
              "      <td>0.23279432207345963</td>\n",
              "      <td>0.5750201642513275</td>\n",
              "      <td>0.4920034073293209</td>\n",
              "      <td>-0.232794</td>\n",
              "      <td>-0.083017</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>304 rows √ó 21 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-37fe25a2-584d-4710-bbc3-2b775a9febbe')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-37fe25a2-584d-4710-bbc3-2b775a9febbe button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-37fe25a2-584d-4710-bbc3-2b775a9febbe');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-06c332d5-400d-4512-8156-82843e11518c\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-06c332d5-400d-4512-8156-82843e11518c')\"\n",
              "            title=\"Suggest charts.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-06c332d5-400d-4512-8156-82843e11518c button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 13
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "from urllib.request import urlopen\n",
        "from json import loads\n",
        "from csv import writer\n",
        "\n",
        "\n",
        "def team_converter(team_id):\n",
        "    '''Converts a team's ID to their actual name'''\n",
        "    team_map = {\n",
        "        1: \"Arsenal\",\n",
        "        2: \"Aston Villa\",\n",
        "        3: \"Bournemouth\",\n",
        "        4: \"Brentford\",\n",
        "        5: \"Brighton\",\n",
        "        6: \"Burnley\",\n",
        "        7: \"Chelsea\",\n",
        "        8: \"Crystal Palace\",\n",
        "        9: \"Everton\",\n",
        "        10: \"Fulham\",\n",
        "        11: \"Liverpool\",\n",
        "        12: \"Luton Town\",\n",
        "        13: \"Manchester City\",\n",
        "        14: \"Manchester United\",\n",
        "        15: \"Newcastle United\",\n",
        "        16: \"Nottingham Forest\",\n",
        "        17: \"Sheffield United\",\n",
        "        18: \"Tottenham\",\n",
        "        19: \"West Ham\",\n",
        "        20: \"Wolverhampton Wanderers\",\n",
        "        None: None\n",
        "    }\n",
        "    return team_map[team_id]\n",
        "\n",
        "\n",
        "def position_converter(position):\n",
        "    '''Converts a player's element_type to their actual position'''\n",
        "    position_map = {\n",
        "        1: \"Goalkeeper\",\n",
        "        2: \"Defender\",\n",
        "        3: \"Midfielder\",\n",
        "        4: \"Forward\"\n",
        "    }\n",
        "    return position_map[position]\n",
        "\n",
        "\n",
        "def main():\n",
        "    all_data = loads(urlopen(\"https://fantasy.premierleague.com/api/fixtures/\").read())\n",
        "    fixtures = all_data\n",
        "\n",
        "    important_data = [\n",
        "        [\n",
        "            x[\"event\"],\n",
        "            team_converter(x[\"team_h\"]),\n",
        "            team_converter(x[\"team_a\"]),\n",
        "            x[\"kickoff_time\"],\n",
        "\n",
        "        ]\n",
        "        for x in fixtures\n",
        "    ]\n",
        "\n",
        "    with open(\"/fixtures_data.csv\", \"w\", encoding=\"utf-8\", newline=\"\") as out:\n",
        "        headers = [\"event\",\"team_h\",\"team_a\",\"kickoff_time\"]\n",
        "        w = writer(out)\n",
        "        w.writerow(headers)\n",
        "        w.writerows(important_data)\n",
        "\n",
        "if __name__ == \"__main__\":\n",
        "    main()"
      ],
      "metadata": {
        "id": "Y_cV1kyak7XX"
      },
      "execution_count": 14,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "import pandas as pd\n",
        "import scipy\n",
        "import numpy as np\n",
        "from numpy import random\n",
        "import matplotlib.pyplot as plt\n",
        "import seaborn as sns\n",
        "import matplotlib"
      ],
      "metadata": {
        "id": "DXejj-4jjUI-"
      },
      "execution_count": 15,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "from urllib.request import urlopen\n",
        "from json import loads\n",
        "from csv import writer\n",
        "\n",
        "\n",
        "def team_converter(team_id):\n",
        "    '''Converts a team's ID to their actual name'''\n",
        "    team_map = {\n",
        "        1: \"Arsenal\",\n",
        "        2: \"Aston Villa\",\n",
        "        3: \"Bournemouth\",\n",
        "        4: \"Brentford\",\n",
        "        5: \"Brighton\",\n",
        "        6: \"Burnley\",\n",
        "        7: \"Chelsea\",\n",
        "        8: \"Crystal Palace\",\n",
        "        9: \"Everton\",\n",
        "        10: \"Fulham\",\n",
        "        11: \"Liverpool\",\n",
        "        12: \"Luton Town\",\n",
        "        13: \"Manchester City\",\n",
        "        14: \"Manchester United\",\n",
        "        15: \"Newcastle United\",\n",
        "        16: \"Nottingham Forest\",\n",
        "        17: \"Sheffield United\",\n",
        "        18: \"Tottenham\",\n",
        "        19: \"West Ham\",\n",
        "        20: \"Wolverhampton Wanderers\",\n",
        "        None: None\n",
        "    }\n",
        "    return team_map[team_id]\n",
        "\n",
        "\n",
        "def position_converter(position):\n",
        "    '''Converts a player's element_type to their actual position'''\n",
        "    position_map = {\n",
        "        1: \"Goalkeeper\",\n",
        "        2: \"Defender\",\n",
        "        3: \"Midfielder\",\n",
        "        4: \"Forward\"\n",
        "    }\n",
        "    return position_map[position]\n",
        "\n",
        "\n",
        "def main():\n",
        "    all_data = loads(urlopen(\"https://fantasy.premierleague.com/api/bootstrap-static/\").read())\n",
        "    players = all_data[\"elements\"]\n",
        "\n",
        "    important_data = [\n",
        "        [\n",
        "            x[\"id\"],\n",
        "            team_converter(x[\"team\"]),\n",
        "            position_converter(x[\"element_type\"])[0],\n",
        "            x[\"web_name\"],\n",
        "            x[\"now_cost\"] / 10,\n",
        "            x[\"selected_by_percent\"],\n",
        "            float(x[\"expected_goals\"]),  # Convert to float\n",
        "            float(x[\"expected_assists\"]),  # Convert to float\n",
        "            x[\"goals_scored\"],\n",
        "            x[\"assists\"],\n",
        "            x[\"bps\"],\n",
        "            x[\"ict_index\"],\n",
        "            x[\"total_points\"],\n",
        "            x[\"points_per_game\"],\n",
        "            x[\"minutes\"]\n",
        "        ]\n",
        "        for x in players\n",
        "    ]\n",
        "\n",
        "    with open(\"players_data.csv\", \"w\", encoding=\"utf-8\", newline=\"\") as out:\n",
        "        headers = [\"id\",\"team\", \"pos\", \"name\", \"cost\", \"selected_by_percent\", \"expected_goals\", \"expected_assists\", \"goals_scored\", \"assists\", \"bps\", \"ict_index\",\"points\", \"points_per_game\", \"minutes\"]\n",
        "        w = writer(out)\n",
        "        w.writerow(headers)\n",
        "        w.writerows(important_data)\n",
        "\n",
        "if __name__ == \"__main__\":\n",
        "    main()"
      ],
      "metadata": {
        "id": "CKZZPD0xQGLu"
      },
      "execution_count": 16,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "import pandas as pd\n",
        "playerdata = pd.read_csv(\"/content/players_data.csv\")\n",
        "master = playerdata\n",
        "#master = master.dropna()\n",
        "master['apppoint'] = 2\n",
        "master['assistvalue'] = 3\n",
        "#master['BPS90'] = master.bps/(master.minutes/90)\n",
        "master"
      ],
      "metadata": {
        "id": "VOx8tP0bjttO",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 547
        },
        "outputId": "549beb79-efd0-4ffb-c19f-2408096e2d94"
      },
      "execution_count": 17,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "      id                     team pos          name  cost  \\\n",
              "0      1                  Arsenal   F       Balogun   4.4   \n",
              "1      2                  Arsenal   D        C√©dric   4.0   \n",
              "2      3                  Arsenal   M      M.Elneny   4.4   \n",
              "3      4                  Arsenal   M  F√°bio Vieira   5.4   \n",
              "4      5                  Arsenal   D       Gabriel   4.8   \n",
              "..   ...                      ...  ..           ...   ...   \n",
              "709  598  Wolverhampton Wanderers   D       Doherty   4.4   \n",
              "710  697  Wolverhampton Wanderers   D       S.Bueno   4.5   \n",
              "711  698  Wolverhampton Wanderers   M      Gonz√°lez   5.0   \n",
              "712  704  Wolverhampton Wanderers   F        Fraser   4.5   \n",
              "713  715  Wolverhampton Wanderers   M    Bellegarde   5.0   \n",
              "\n",
              "     selected_by_percent  expected_goals  expected_assists  goals_scored  \\\n",
              "0                    0.4            0.00              0.00             0   \n",
              "1                    0.3            0.00              0.00             0   \n",
              "2                    0.1            0.00              0.00             0   \n",
              "3                    0.1            0.04              0.23             0   \n",
              "4                   14.6            0.00              0.01             0   \n",
              "..                   ...             ...               ...           ...   \n",
              "709                  0.2            0.00              0.00             0   \n",
              "710                  0.0            0.00              0.00             0   \n",
              "711                  0.0            0.00              0.00             0   \n",
              "712                  0.0            0.00              0.00             0   \n",
              "713                  0.0            0.00              0.00             0   \n",
              "\n",
              "     assists  bps  ict_index  points  points_per_game  minutes  apppoint  \\\n",
              "0          0    0        0.0       0              0.0        0         2   \n",
              "1          0    0        0.0       0              0.0        0         2   \n",
              "2          0    0        0.0       0              0.0        0         2   \n",
              "3          3   37        9.7      11              5.5       47         2   \n",
              "4          0   23        3.6       4              1.3      114         2   \n",
              "..       ...  ...        ...     ...              ...      ...       ...   \n",
              "709        0    0        0.0       0              0.0        0         2   \n",
              "710        0    0        0.0       0              0.0        0         2   \n",
              "711        0    0        0.0       0              0.0        0         2   \n",
              "712        0    0        0.0       0              0.0        0         2   \n",
              "713        0    0        0.0       0              0.0        0         2   \n",
              "\n",
              "     assistvalue  \n",
              "0              3  \n",
              "1              3  \n",
              "2              3  \n",
              "3              3  \n",
              "4              3  \n",
              "..           ...  \n",
              "709            3  \n",
              "710            3  \n",
              "711            3  \n",
              "712            3  \n",
              "713            3  \n",
              "\n",
              "[714 rows x 17 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-0e986b14-757c-4760-9af5-b0970752d79b\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>team</th>\n",
              "      <th>pos</th>\n",
              "      <th>name</th>\n",
              "      <th>cost</th>\n",
              "      <th>selected_by_percent</th>\n",
              "      <th>expected_goals</th>\n",
              "      <th>expected_assists</th>\n",
              "      <th>goals_scored</th>\n",
              "      <th>assists</th>\n",
              "      <th>bps</th>\n",
              "      <th>ict_index</th>\n",
              "      <th>points</th>\n",
              "      <th>points_per_game</th>\n",
              "      <th>minutes</th>\n",
              "      <th>apppoint</th>\n",
              "      <th>assistvalue</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>1</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>F</td>\n",
              "      <td>Balogun</td>\n",
              "      <td>4.4</td>\n",
              "      <td>0.4</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>2</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>D</td>\n",
              "      <td>C√©dric</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.3</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>3</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>M</td>\n",
              "      <td>M.Elneny</td>\n",
              "      <td>4.4</td>\n",
              "      <td>0.1</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>4</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>M</td>\n",
              "      <td>F√°bio Vieira</td>\n",
              "      <td>5.4</td>\n",
              "      <td>0.1</td>\n",
              "      <td>0.04</td>\n",
              "      <td>0.23</td>\n",
              "      <td>0</td>\n",
              "      <td>3</td>\n",
              "      <td>37</td>\n",
              "      <td>9.7</td>\n",
              "      <td>11</td>\n",
              "      <td>5.5</td>\n",
              "      <td>47</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>5</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>D</td>\n",
              "      <td>Gabriel</td>\n",
              "      <td>4.8</td>\n",
              "      <td>14.6</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.01</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>23</td>\n",
              "      <td>3.6</td>\n",
              "      <td>4</td>\n",
              "      <td>1.3</td>\n",
              "      <td>114</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>709</th>\n",
              "      <td>598</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>D</td>\n",
              "      <td>Doherty</td>\n",
              "      <td>4.4</td>\n",
              "      <td>0.2</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>710</th>\n",
              "      <td>697</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>D</td>\n",
              "      <td>S.Bueno</td>\n",
              "      <td>4.5</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>711</th>\n",
              "      <td>698</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>M</td>\n",
              "      <td>Gonz√°lez</td>\n",
              "      <td>5.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>712</th>\n",
              "      <td>704</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>F</td>\n",
              "      <td>Fraser</td>\n",
              "      <td>4.5</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>713</th>\n",
              "      <td>715</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>M</td>\n",
              "      <td>Bellegarde</td>\n",
              "      <td>5.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>714 rows √ó 17 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-0e986b14-757c-4760-9af5-b0970752d79b')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-0e986b14-757c-4760-9af5-b0970752d79b button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-0e986b14-757c-4760-9af5-b0970752d79b');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-a0bbdfa0-242b-4df8-8f14-cec752f9157b\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-a0bbdfa0-242b-4df8-8f14-cec752f9157b')\"\n",
              "            title=\"Suggest charts.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-a0bbdfa0-242b-4df8-8f14-cec752f9157b button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 17
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import pandas as pd\n",
        "gwfixtures = pd.read_csv(\"/fixtures_data.csv\")\n",
        "import requests\n",
        "import pandas as pd\n",
        "url = 'https://projects.fivethirtyeight.com/soccer-api/club/spi_global_rankings.csv'\n",
        "r = requests.get(url)\n",
        "open('temp.csv', 'wb').write(r.content)\n",
        "spi = pd.read_csv('temp.csv')\n",
        "spi['team_h'] = spi['name']\n",
        "spi['team_a'] = spi['name']\n",
        "spi= spi.replace('Newcastle', 'Newcastle United')\n",
        "spi= spi.replace('Wolverhampton','Wolverhampton Wanderers')\n",
        "spi= spi.replace('Tottenham Hotspur','Tottenham')\n",
        "spi= spi.replace('Leeds United','Leeds')\n",
        "spi= spi.replace('Leicester City','Leicester')\n",
        "spi= spi.replace('West Ham United','West Ham')\n",
        "spi= spi.replace('Brighton and Hove Albion','Brighton')\n",
        "spi= spi.replace('Norwich City','Norwich')\n",
        "spi= spi.replace('AFC Bournemouth','Bournemouth')\n",
        "Left_join = pd.merge(gwfixtures,\n",
        "                     spi,\n",
        "                     on ='team_h',\n",
        "                     how ='left')\n",
        "homespi = Left_join.drop(columns=[\n",
        " 'rank',\n",
        " 'prev_rank',\n",
        " 'league',\n",
        "  'off',\n",
        " 'def',\n",
        " 'name',\n",
        " 'team_a_y',])\n",
        "homespi.rename(columns = {'team_a_x':'team_a', 'spi':'Home SPI'}, inplace = True)\n",
        "away_join = pd.merge(homespi,\n",
        "                     spi,\n",
        "                     on ='team_a',\n",
        "                     how ='left')\n",
        "homesawayspi = away_join.drop(columns=[\n",
        " 'rank',\n",
        " 'prev_rank',\n",
        " 'name',\n",
        " 'league',\n",
        " 'off',\n",
        " 'def',\n",
        " 'team_h_y'])\n",
        "homesawayspi.rename(columns = {'team_h_x':'team_h', 'spi':'Away SPI'}, inplace = True)\n",
        "homesawayspi['Event'] = homesawayspi['event'].astype(str)\n",
        "gw5 = homesawayspi.query('Event==\"5.0\"')\n",
        "PLSPI = spi.query('league==\"Barclays Premier League\"')\n",
        "PLSPI['League Average']  = PLSPI[\"spi\"].mean()\n",
        "laverage = PLSPI[\"spi\"].mean()\n",
        "PLSPI['League Average'].astype(int)\n",
        "gw5['League_Average']  = laverage\n",
        "gw5.rename(columns = {'Home SPI':'HomeSPI', 'Away SPI':'AwaySPI'}, inplace = True)\n",
        "gw5['home_difference'] = gw5.HomeSPI - gw5.League_Average\n",
        "gw5['away_difference'] = gw5.AwaySPI - gw5.League_Average\n",
        "gw5['home_adjustment'] = (gw5.home_difference + gw5.League_Average)/gw5.League_Average\n",
        "gw5['away_adjustment'] = (gw5.away_difference + gw5.League_Average)/gw5.League_Average\n",
        "gw5adjustments = gw5[['team_h', 'home_adjustment']].append(gw5[['team_a','away_adjustment']].set_axis(['team_h', 'home_adjustment'], axis=1)).reset_index(drop=True)\n",
        "gw5adjustments.rename(columns = {'team_h':'team'}, inplace = True)\n",
        "gw5adjustments"
      ],
      "metadata": {
        "id": "0oqPsFQJjyR0",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "outputId": "f8f0eabc-d0ae-4d8a-8399-cc4522fe1312"
      },
      "execution_count": 18,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "<ipython-input-18-4b94f72aecda>:49: SettingWithCopyWarning: \n",
            "A value is trying to be set on a copy of a slice from a DataFrame.\n",
            "Try using .loc[row_indexer,col_indexer] = value instead\n",
            "\n",
            "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
            "  PLSPI['League Average']  = PLSPI[\"spi\"].mean()\n",
            "<ipython-input-18-4b94f72aecda>:52: SettingWithCopyWarning: \n",
            "A value is trying to be set on a copy of a slice from a DataFrame.\n",
            "Try using .loc[row_indexer,col_indexer] = value instead\n",
            "\n",
            "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
            "  gw5['League_Average']  = laverage\n",
            "<ipython-input-18-4b94f72aecda>:53: SettingWithCopyWarning: \n",
            "A value is trying to be set on a copy of a slice from a DataFrame\n",
            "\n",
            "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
            "  gw5.rename(columns = {'Home SPI':'HomeSPI', 'Away SPI':'AwaySPI'}, inplace = True)\n",
            "<ipython-input-18-4b94f72aecda>:54: SettingWithCopyWarning: \n",
            "A value is trying to be set on a copy of a slice from a DataFrame.\n",
            "Try using .loc[row_indexer,col_indexer] = value instead\n",
            "\n",
            "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
            "  gw5['home_difference'] = gw5.HomeSPI - gw5.League_Average\n",
            "<ipython-input-18-4b94f72aecda>:55: SettingWithCopyWarning: \n",
            "A value is trying to be set on a copy of a slice from a DataFrame.\n",
            "Try using .loc[row_indexer,col_indexer] = value instead\n",
            "\n",
            "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
            "  gw5['away_difference'] = gw5.AwaySPI - gw5.League_Average\n",
            "<ipython-input-18-4b94f72aecda>:56: SettingWithCopyWarning: \n",
            "A value is trying to be set on a copy of a slice from a DataFrame.\n",
            "Try using .loc[row_indexer,col_indexer] = value instead\n",
            "\n",
            "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
            "  gw5['home_adjustment'] = (gw5.home_difference + gw5.League_Average)/gw5.League_Average\n",
            "<ipython-input-18-4b94f72aecda>:57: SettingWithCopyWarning: \n",
            "A value is trying to be set on a copy of a slice from a DataFrame.\n",
            "Try using .loc[row_indexer,col_indexer] = value instead\n",
            "\n",
            "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
            "  gw5['away_adjustment'] = (gw5.away_difference + gw5.League_Average)/gw5.League_Average\n",
            "<ipython-input-18-4b94f72aecda>:58: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  gw5adjustments = gw5[['team_h', 'home_adjustment']].append(gw5[['team_a','away_adjustment']].set_axis(['team_h', 'home_adjustment'], axis=1)).reset_index(drop=True)\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                       team  home_adjustment\n",
              "0   Wolverhampton Wanderers         0.820717\n",
              "1               Aston Villa         1.101978\n",
              "2                    Fulham         0.948007\n",
              "3         Manchester United         1.098921\n",
              "4                 Tottenham         1.002480\n",
              "5                  West Ham         0.988306\n",
              "6          Newcastle United         1.163122\n",
              "7               Bournemouth         0.827943\n",
              "8                   Everton         0.884223\n",
              "9         Nottingham Forest         0.780000\n",
              "10                Liverpool         1.166318\n",
              "11           Crystal Palace         1.020824\n",
              "12               Luton Town         0.770968\n",
              "13                 Brighton         1.123934\n",
              "14         Sheffield United         0.786115\n",
              "15          Manchester City         1.278461\n",
              "16                Brentford         1.071962\n",
              "17                  Chelsea         1.053063\n",
              "18                  Arsenal         1.166179\n",
              "19                  Burnley         0.874634"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-c4307223-2266-45c2-b729-33486103fe53\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>team</th>\n",
              "      <th>home_adjustment</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>0.820717</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>1.101978</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>Fulham</td>\n",
              "      <td>0.948007</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>Manchester United</td>\n",
              "      <td>1.098921</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>Tottenham</td>\n",
              "      <td>1.002480</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>West Ham</td>\n",
              "      <td>0.988306</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>Newcastle United</td>\n",
              "      <td>1.163122</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>Bournemouth</td>\n",
              "      <td>0.827943</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>Everton</td>\n",
              "      <td>0.884223</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>Nottingham Forest</td>\n",
              "      <td>0.780000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10</th>\n",
              "      <td>Liverpool</td>\n",
              "      <td>1.166318</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>11</th>\n",
              "      <td>Crystal Palace</td>\n",
              "      <td>1.020824</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>12</th>\n",
              "      <td>Luton Town</td>\n",
              "      <td>0.770968</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>13</th>\n",
              "      <td>Brighton</td>\n",
              "      <td>1.123934</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>14</th>\n",
              "      <td>Sheffield United</td>\n",
              "      <td>0.786115</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>15</th>\n",
              "      <td>Manchester City</td>\n",
              "      <td>1.278461</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>16</th>\n",
              "      <td>Brentford</td>\n",
              "      <td>1.071962</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>17</th>\n",
              "      <td>Chelsea</td>\n",
              "      <td>1.053063</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>18</th>\n",
              "      <td>Arsenal</td>\n",
              "      <td>1.166179</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>19</th>\n",
              "      <td>Burnley</td>\n",
              "      <td>0.874634</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-c4307223-2266-45c2-b729-33486103fe53')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-c4307223-2266-45c2-b729-33486103fe53 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-c4307223-2266-45c2-b729-33486103fe53');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-c46173ed-dd49-4ee2-b321-d5583478e319\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-c46173ed-dd49-4ee2-b321-d5583478e319')\"\n",
              "            title=\"Suggest charts.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-c46173ed-dd49-4ee2-b321-d5583478e319 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 18
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "rawdf = pd.merge(master,\n",
        "                     gw5adjustments,\n",
        "                     on ='team',\n",
        "                     how ='left')\n",
        "rawfwd = rawdf.query('pos==\"F\"')\n",
        "rawfwd['xP'] = ((rawfwd.expected_goals * 4/4)+(rawfwd.expected_assists * 3/4) + (rawfwd.apppoint)) * rawfwd.home_adjustment\n",
        "rawfwd = rawfwd.drop(columns=[\n",
        " 'expected_goals',\n",
        " 'team',\n",
        " 'expected_assists',\n",
        " 'apppoint',\n",
        " 'assistvalue',\n",
        "'home_adjustment'])\n",
        "rawmd = rawdf.query('pos==\"M\"')\n",
        "rawmd['xP'] = ((rawmd.expected_goals * 5/4)+(rawmd.expected_assists * 3/4) + (rawmd.apppoint)) * rawmd.home_adjustment\n",
        "rawmd = rawmd.drop(columns=[\n",
        " 'expected_goals',\n",
        " 'team',\n",
        " 'expected_assists',\n",
        " 'apppoint',\n",
        " 'assistvalue',\n",
        "'home_adjustment'])\n",
        "fbref = pd.read_html('https://fbref.com/en/comps/9/Premier-League-Stats')\n",
        "epltable = fbref[0]\n",
        "epltabledef = epltable.drop(columns=[ 'Rk',\n",
        " 'MP',\n",
        " 'W',\n",
        " 'D',\n",
        " 'L',\n",
        " 'GF',\n",
        " 'GA',\n",
        " 'GD',\n",
        " 'xG',\n",
        " 'xGD',\n",
        " 'xGD/90',\n",
        " 'Pts',\n",
        " 'Pts/MP',\n",
        " 'Last 5',\n",
        " 'Attendance',\n",
        " 'Top Team Scorer',\n",
        " 'Goalkeeper',\n",
        " 'Notes'])\n",
        "epltabledef= epltabledef.replace('Newcastle Utd', 'Newcastle United')\n",
        "epltabledef= epltabledef.replace('Wolves','Wolverhampton Wanderers')\n",
        "epltabledef= epltabledef.replace('Leeds United','Leeds')\n",
        "epltabledef= epltabledef.replace('Leicester City','Leicester')\n",
        "epltabledef= epltabledef.replace('Manchester Utd','Manchester United')\n",
        "epltabledef['Squad'] = epltabledef['Squad'].str.replace(r\"[\\\"\\',]\", '')\n",
        "epltabledef= epltabledef.replace('Nottham Forest','Nottingham Forest')\n",
        "epltabledef['xCSP'] = (4 - (epltabledef.xGA * 4/4))\n",
        "epltabledef.rename(columns={'Squad': 'team'}, inplace=True)\n",
        "rawdfcs = pd.merge(rawdf,\n",
        "                     epltabledef,\n",
        "                     on ='team',\n",
        "                     how ='left')\n",
        "rawgk= rawdfcs.query('pos==\"G\"')\n",
        "rawgk['xP'] = ((rawgk.xCSP)+ (rawgk.apppoint)) * rawgk.home_adjustment\n",
        "#rawgk['xP'] = rawgk.apppoint * rawgk.home_adjustment\n",
        "rawgk = rawgk.drop(columns=[\n",
        " 'expected_goals',\n",
        " 'team',\n",
        " 'expected_assists',\n",
        " 'apppoint',\n",
        " 'assistvalue',\n",
        "  'xGA',\n",
        "'home_adjustment'])\n",
        "rawdef= rawdfcs.query('pos==\"D\"')\n",
        "rawdef['xP'] = ((rawdef.expected_goals * 6/4)+(rawdef.expected_assists * 3/4) +(rawdef.xCSP)+ (rawdef.apppoint) * rawdef.home_adjustment)\n",
        "#rawdef['xP'] = ((rawdef.expected_goals * 6/3)+(rawdef.expected_assists * 3/3) + (rawdef.apppoint) * rawdef.home_adjustment)\n",
        "rawdef = rawdef.drop(columns=[\n",
        " 'expected_goals',\n",
        " 'team',\n",
        " 'expected_assists',\n",
        " 'apppoint',\n",
        " 'assistvalue',\n",
        "  'xGA',\n",
        " 'home_adjustment'])\n",
        "rawallplayers = pd.concat([rawfwd, rawmd, rawdef, rawgk], ignore_index=True)\n",
        "rawallplayers\n",
        "\n",
        "\n",
        "\n"
      ],
      "metadata": {
        "id": "AWnYpVh5kDzO",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 874
        },
        "outputId": "85ab393e-ca51-4146-f559-0c7359050882"
      },
      "execution_count": 20,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "<ipython-input-20-76c01b497f0b>:6: SettingWithCopyWarning: \n",
            "A value is trying to be set on a copy of a slice from a DataFrame.\n",
            "Try using .loc[row_indexer,col_indexer] = value instead\n",
            "\n",
            "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
            "  rawfwd['xP'] = ((rawfwd.expected_goals * 4/4)+(rawfwd.expected_assists * 3/4) + (rawfwd.apppoint)) * rawfwd.home_adjustment\n",
            "<ipython-input-20-76c01b497f0b>:15: SettingWithCopyWarning: \n",
            "A value is trying to be set on a copy of a slice from a DataFrame.\n",
            "Try using .loc[row_indexer,col_indexer] = value instead\n",
            "\n",
            "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
            "  rawmd['xP'] = ((rawmd.expected_goals * 5/4)+(rawmd.expected_assists * 3/4) + (rawmd.apppoint)) * rawmd.home_adjustment\n",
            "<ipython-input-20-76c01b497f0b>:48: FutureWarning: The default value of regex will change from True to False in a future version.\n",
            "  epltabledef['Squad'] = epltabledef['Squad'].str.replace(r\"[\\\"\\',]\", '')\n",
            "<ipython-input-20-76c01b497f0b>:57: SettingWithCopyWarning: \n",
            "A value is trying to be set on a copy of a slice from a DataFrame.\n",
            "Try using .loc[row_indexer,col_indexer] = value instead\n",
            "\n",
            "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
            "  rawgk['xP'] = ((rawgk.xCSP)+ (rawgk.apppoint)) * rawgk.home_adjustment\n",
            "<ipython-input-20-76c01b497f0b>:68: SettingWithCopyWarning: \n",
            "A value is trying to be set on a copy of a slice from a DataFrame.\n",
            "Try using .loc[row_indexer,col_indexer] = value instead\n",
            "\n",
            "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
            "  rawdef['xP'] = ((rawdef.expected_goals * 6/4)+(rawdef.expected_assists * 3/4) +(rawdef.xCSP)+ (rawdef.apppoint) * rawdef.home_adjustment)\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "      id pos     name  cost  selected_by_percent  goals_scored  assists  bps  \\\n",
              "0      1   F  Balogun   4.4                  0.4             0        0    0   \n",
              "1      8   F  G.Jesus   7.9                  2.1             1        0   26   \n",
              "2     13   F  Nketiah   5.6                  6.9             2        1   64   \n",
              "3     39   F    Davis   4.9                  0.2             0        0    0   \n",
              "4     44   F    Duran   5.0                  0.1             1        0   33   \n",
              "..   ...  ..      ...   ...                  ...           ...      ...  ...   \n",
              "709  647   G    Anang   4.0                  0.0             0        0    0   \n",
              "710  546   G  Bentley   4.0                  0.4             0        0    0   \n",
              "711  564   G     King   4.0                  0.8             0        0    0   \n",
              "712  569   G  Jos√© S√°   5.0                  1.4             0        0   94   \n",
              "713  571   G   ≈†arkiƒá   4.0                  0.4             0        0    0   \n",
              "\n",
              "     ict_index  points  points_per_game  minutes        xP  xCSP  \n",
              "0          0.0       0              0.0        0  2.332358   NaN  \n",
              "1         10.7       7              3.5       15  3.320695   NaN  \n",
              "2         24.6      20              5.0      270  4.294455   NaN  \n",
              "3          0.0       0              0.0        0  2.203956   NaN  \n",
              "4          7.5       9              3.0       37  2.906467   NaN  \n",
              "..         ...     ...              ...      ...       ...   ...  \n",
              "709        0.0       0              0.0        0 -0.691814  -2.7  \n",
              "710        0.0       0              0.0        0 -1.477290  -3.8  \n",
              "711        0.0       0              0.0        0 -1.477290  -3.8  \n",
              "712       16.0      17              4.2      360 -1.477290  -3.8  \n",
              "713        0.0       0              0.0        0 -1.477290  -3.8  \n",
              "\n",
              "[714 rows x 14 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-447bf53e-bce5-4c6c-b182-a5bc9597bd51\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>pos</th>\n",
              "      <th>name</th>\n",
              "      <th>cost</th>\n",
              "      <th>selected_by_percent</th>\n",
              "      <th>goals_scored</th>\n",
              "      <th>assists</th>\n",
              "      <th>bps</th>\n",
              "      <th>ict_index</th>\n",
              "      <th>points</th>\n",
              "      <th>points_per_game</th>\n",
              "      <th>minutes</th>\n",
              "      <th>xP</th>\n",
              "      <th>xCSP</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>1</td>\n",
              "      <td>F</td>\n",
              "      <td>Balogun</td>\n",
              "      <td>4.4</td>\n",
              "      <td>0.4</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>2.332358</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>8</td>\n",
              "      <td>F</td>\n",
              "      <td>G.Jesus</td>\n",
              "      <td>7.9</td>\n",
              "      <td>2.1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>26</td>\n",
              "      <td>10.7</td>\n",
              "      <td>7</td>\n",
              "      <td>3.5</td>\n",
              "      <td>15</td>\n",
              "      <td>3.320695</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>13</td>\n",
              "      <td>F</td>\n",
              "      <td>Nketiah</td>\n",
              "      <td>5.6</td>\n",
              "      <td>6.9</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>64</td>\n",
              "      <td>24.6</td>\n",
              "      <td>20</td>\n",
              "      <td>5.0</td>\n",
              "      <td>270</td>\n",
              "      <td>4.294455</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>39</td>\n",
              "      <td>F</td>\n",
              "      <td>Davis</td>\n",
              "      <td>4.9</td>\n",
              "      <td>0.2</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>2.203956</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>44</td>\n",
              "      <td>F</td>\n",
              "      <td>Duran</td>\n",
              "      <td>5.0</td>\n",
              "      <td>0.1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>33</td>\n",
              "      <td>7.5</td>\n",
              "      <td>9</td>\n",
              "      <td>3.0</td>\n",
              "      <td>37</td>\n",
              "      <td>2.906467</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>709</th>\n",
              "      <td>647</td>\n",
              "      <td>G</td>\n",
              "      <td>Anang</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>-0.691814</td>\n",
              "      <td>-2.7</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>710</th>\n",
              "      <td>546</td>\n",
              "      <td>G</td>\n",
              "      <td>Bentley</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.4</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>-1.477290</td>\n",
              "      <td>-3.8</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>711</th>\n",
              "      <td>564</td>\n",
              "      <td>G</td>\n",
              "      <td>King</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.8</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>-1.477290</td>\n",
              "      <td>-3.8</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>712</th>\n",
              "      <td>569</td>\n",
              "      <td>G</td>\n",
              "      <td>Jos√© S√°</td>\n",
              "      <td>5.0</td>\n",
              "      <td>1.4</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>94</td>\n",
              "      <td>16.0</td>\n",
              "      <td>17</td>\n",
              "      <td>4.2</td>\n",
              "      <td>360</td>\n",
              "      <td>-1.477290</td>\n",
              "      <td>-3.8</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>713</th>\n",
              "      <td>571</td>\n",
              "      <td>G</td>\n",
              "      <td>≈†arkiƒá</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.4</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>-1.477290</td>\n",
              "      <td>-3.8</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>714 rows √ó 14 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-447bf53e-bce5-4c6c-b182-a5bc9597bd51')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-447bf53e-bce5-4c6c-b182-a5bc9597bd51 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-447bf53e-bce5-4c6c-b182-a5bc9597bd51');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-96fc35de-4fa2-4bff-9795-ac617e65046b\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-96fc35de-4fa2-4bff-9795-ac617e65046b')\"\n",
              "            title=\"Suggest charts.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-96fc35de-4fa2-4bff-9795-ac617e65046b button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 20
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "rawgk1= rawdfcs.query('pos==\"G\"')\n",
        "rawgk1"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 513
        },
        "id": "z3FgmhoCb3GG",
        "outputId": "f6b42e08-0a0d-40c4-8a32-1ac115cf0426"
      },
      "execution_count": 21,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "      id                     team pos       name  cost  selected_by_percent  \\\n",
              "15    17                  Arsenal   G   Ramsdale   5.0                 16.4   \n",
              "16    18                  Arsenal   G  R√∫narsson   4.0                  0.1   \n",
              "26   113                  Arsenal   G       Raya   4.8                  2.5   \n",
              "30   646                  Arsenal   G       Hein   4.0                  0.0   \n",
              "47    49              Aston Villa   G   Martinez   4.9                  6.3   \n",
              "..   ...                      ...  ..        ...   ...                  ...   \n",
              "676  647                 West Ham   G      Anang   4.0                  0.0   \n",
              "682  546  Wolverhampton Wanderers   G    Bentley   4.0                  0.4   \n",
              "698  564  Wolverhampton Wanderers   G       King   4.0                  0.8   \n",
              "702  569  Wolverhampton Wanderers   G    Jos√© S√°   5.0                  1.4   \n",
              "704  571  Wolverhampton Wanderers   G     ≈†arkiƒá   4.0                  0.4   \n",
              "\n",
              "     expected_goals  expected_assists  goals_scored  assists  bps  ict_index  \\\n",
              "15              0.0              0.01             0        0   55        5.1   \n",
              "16              0.0              0.00             0        0    0        0.0   \n",
              "26              0.0              0.00             0        0    0        0.0   \n",
              "30              0.0              0.00             0        0    0        0.0   \n",
              "47              0.0              0.00             0        0   65        8.9   \n",
              "..              ...               ...           ...      ...  ...        ...   \n",
              "676             0.0              0.00             0        0    0        0.0   \n",
              "682             0.0              0.00             0        0    0        0.0   \n",
              "698             0.0              0.00             0        0    0        0.0   \n",
              "702             0.0              0.00             0        0   94       16.0   \n",
              "704             0.0              0.00             0        0    0        0.0   \n",
              "\n",
              "     points  points_per_game  minutes  apppoint  assistvalue  home_adjustment  \\\n",
              "15       11              2.8      360         2            3         1.166179   \n",
              "16        0              0.0        0         2            3         1.166179   \n",
              "26        0              0.0        0         2            3         1.166179   \n",
              "30        0              0.0        0         2            3         1.166179   \n",
              "47       10              3.3      270         2            3         1.101978   \n",
              "..      ...              ...      ...       ...          ...              ...   \n",
              "676       0              0.0        0         2            3         0.988306   \n",
              "682       0              0.0        0         2            3         0.820717   \n",
              "698       0              0.0        0         2            3         0.820717   \n",
              "702      17              4.2      360         2            3         0.820717   \n",
              "704       0              0.0        0         2            3         0.820717   \n",
              "\n",
              "     xGA  xCSP  \n",
              "15   3.7   0.3  \n",
              "16   3.7   0.3  \n",
              "26   3.7   0.3  \n",
              "30   3.7   0.3  \n",
              "47   7.1  -3.1  \n",
              "..   ...   ...  \n",
              "676  6.7  -2.7  \n",
              "682  7.8  -3.8  \n",
              "698  7.8  -3.8  \n",
              "702  7.8  -3.8  \n",
              "704  7.8  -3.8  \n",
              "\n",
              "[85 rows x 20 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-a320799f-c4df-4ae8-a2b4-abb293e609da\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>team</th>\n",
              "      <th>pos</th>\n",
              "      <th>name</th>\n",
              "      <th>cost</th>\n",
              "      <th>selected_by_percent</th>\n",
              "      <th>expected_goals</th>\n",
              "      <th>expected_assists</th>\n",
              "      <th>goals_scored</th>\n",
              "      <th>assists</th>\n",
              "      <th>bps</th>\n",
              "      <th>ict_index</th>\n",
              "      <th>points</th>\n",
              "      <th>points_per_game</th>\n",
              "      <th>minutes</th>\n",
              "      <th>apppoint</th>\n",
              "      <th>assistvalue</th>\n",
              "      <th>home_adjustment</th>\n",
              "      <th>xGA</th>\n",
              "      <th>xCSP</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>15</th>\n",
              "      <td>17</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>G</td>\n",
              "      <td>Ramsdale</td>\n",
              "      <td>5.0</td>\n",
              "      <td>16.4</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.01</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>55</td>\n",
              "      <td>5.1</td>\n",
              "      <td>11</td>\n",
              "      <td>2.8</td>\n",
              "      <td>360</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "      <td>1.166179</td>\n",
              "      <td>3.7</td>\n",
              "      <td>0.3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>16</th>\n",
              "      <td>18</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>G</td>\n",
              "      <td>R√∫narsson</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.1</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "      <td>1.166179</td>\n",
              "      <td>3.7</td>\n",
              "      <td>0.3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>26</th>\n",
              "      <td>113</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>G</td>\n",
              "      <td>Raya</td>\n",
              "      <td>4.8</td>\n",
              "      <td>2.5</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "      <td>1.166179</td>\n",
              "      <td>3.7</td>\n",
              "      <td>0.3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>30</th>\n",
              "      <td>646</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>G</td>\n",
              "      <td>Hein</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "      <td>1.166179</td>\n",
              "      <td>3.7</td>\n",
              "      <td>0.3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>47</th>\n",
              "      <td>49</td>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>G</td>\n",
              "      <td>Martinez</td>\n",
              "      <td>4.9</td>\n",
              "      <td>6.3</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>65</td>\n",
              "      <td>8.9</td>\n",
              "      <td>10</td>\n",
              "      <td>3.3</td>\n",
              "      <td>270</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "      <td>1.101978</td>\n",
              "      <td>7.1</td>\n",
              "      <td>-3.1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>676</th>\n",
              "      <td>647</td>\n",
              "      <td>West Ham</td>\n",
              "      <td>G</td>\n",
              "      <td>Anang</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "      <td>0.988306</td>\n",
              "      <td>6.7</td>\n",
              "      <td>-2.7</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>682</th>\n",
              "      <td>546</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>G</td>\n",
              "      <td>Bentley</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.4</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "      <td>0.820717</td>\n",
              "      <td>7.8</td>\n",
              "      <td>-3.8</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>698</th>\n",
              "      <td>564</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>G</td>\n",
              "      <td>King</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.8</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "      <td>0.820717</td>\n",
              "      <td>7.8</td>\n",
              "      <td>-3.8</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>702</th>\n",
              "      <td>569</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>G</td>\n",
              "      <td>Jos√© S√°</td>\n",
              "      <td>5.0</td>\n",
              "      <td>1.4</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>94</td>\n",
              "      <td>16.0</td>\n",
              "      <td>17</td>\n",
              "      <td>4.2</td>\n",
              "      <td>360</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "      <td>0.820717</td>\n",
              "      <td>7.8</td>\n",
              "      <td>-3.8</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>704</th>\n",
              "      <td>571</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>G</td>\n",
              "      <td>≈†arkiƒá</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.4</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "      <td>0.820717</td>\n",
              "      <td>7.8</td>\n",
              "      <td>-3.8</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>85 rows √ó 20 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-a320799f-c4df-4ae8-a2b4-abb293e609da')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-a320799f-c4df-4ae8-a2b4-abb293e609da button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-a320799f-c4df-4ae8-a2b4-abb293e609da');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-e3fcb571-156c-44ae-8f4e-d17a1117e373\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-e3fcb571-156c-44ae-8f4e-d17a1117e373')\"\n",
              "            title=\"Suggest charts.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-e3fcb571-156c-44ae-8f4e-d17a1117e373 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 21
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "from pandas import ExcelWriter"
      ],
      "metadata": {
        "id": "ONZy1SvCDu6y"
      },
      "execution_count": 22,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "writer = ExcelWriter('notes.xlsx')"
      ],
      "metadata": {
        "id": "iubZBRlVEhiz"
      },
      "execution_count": 23,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "rawallplayers.to_excel(writer, sheet_name='Sheet1')\n",
        "gw5adjustments.to_excel(writer, sheet_name='Sheet2')\n",
        "#fplwithunderstat.to_excel(writer, sheet_name='Sheet3')\n",
        "\n",
        "# Close the Pandas Excel writer and output the Excel file.\n",
        "writer.save()"
      ],
      "metadata": {
        "id": "slYEIma_E0uP",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "48eef575-14a2-4f22-91b5-339a68d1d149"
      },
      "execution_count": 25,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "<ipython-input-25-3f888a70eb3d>:6: FutureWarning: save is not part of the public API, usage can give unexpected results and will be removed in a future version\n",
            "  writer.save()\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "gwfixtures"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 423
        },
        "id": "3udskoGrT73A",
        "outputId": "088cf2c9-f477-4285-800a-9e82e4262fcd"
      },
      "execution_count": 26,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "     event            team_h                   team_a          kickoff_time\n",
              "0      NaN        Luton Town                  Burnley                   NaN\n",
              "1      NaN   Manchester City                Brentford                   NaN\n",
              "2      1.0           Burnley          Manchester City  2023-08-11T19:00:00Z\n",
              "3      1.0           Arsenal        Nottingham Forest  2023-08-12T12:00:00Z\n",
              "4      1.0       Bournemouth                 West Ham  2023-08-12T14:00:00Z\n",
              "..     ...               ...                      ...                   ...\n",
              "375   38.0    Crystal Palace              Aston Villa  2024-05-19T15:00:00Z\n",
              "376   38.0         Liverpool  Wolverhampton Wanderers  2024-05-19T15:00:00Z\n",
              "377   38.0        Luton Town                   Fulham  2024-05-19T15:00:00Z\n",
              "378   38.0   Manchester City                 West Ham  2024-05-19T15:00:00Z\n",
              "379   38.0  Sheffield United                Tottenham  2024-05-19T15:00:00Z\n",
              "\n",
              "[380 rows x 4 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-d0bc7767-58ae-4f49-a847-58ebd546be6d\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>event</th>\n",
              "      <th>team_h</th>\n",
              "      <th>team_a</th>\n",
              "      <th>kickoff_time</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>NaN</td>\n",
              "      <td>Luton Town</td>\n",
              "      <td>Burnley</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>NaN</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>Brentford</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>1.0</td>\n",
              "      <td>Burnley</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>2023-08-11T19:00:00Z</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>1.0</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>Nottingham Forest</td>\n",
              "      <td>2023-08-12T12:00:00Z</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>1.0</td>\n",
              "      <td>Bournemouth</td>\n",
              "      <td>West Ham</td>\n",
              "      <td>2023-08-12T14:00:00Z</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>375</th>\n",
              "      <td>38.0</td>\n",
              "      <td>Crystal Palace</td>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>2024-05-19T15:00:00Z</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>376</th>\n",
              "      <td>38.0</td>\n",
              "      <td>Liverpool</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>2024-05-19T15:00:00Z</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>377</th>\n",
              "      <td>38.0</td>\n",
              "      <td>Luton Town</td>\n",
              "      <td>Fulham</td>\n",
              "      <td>2024-05-19T15:00:00Z</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>378</th>\n",
              "      <td>38.0</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>West Ham</td>\n",
              "      <td>2024-05-19T15:00:00Z</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>379</th>\n",
              "      <td>38.0</td>\n",
              "      <td>Sheffield United</td>\n",
              "      <td>Tottenham</td>\n",
              "      <td>2024-05-19T15:00:00Z</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>380 rows √ó 4 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-d0bc7767-58ae-4f49-a847-58ebd546be6d')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-d0bc7767-58ae-4f49-a847-58ebd546be6d button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-d0bc7767-58ae-4f49-a847-58ebd546be6d');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-ae1cce71-3027-455d-8998-c2e4845629a7\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-ae1cce71-3027-455d-8998-c2e4845629a7')\"\n",
              "            title=\"Suggest charts.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-ae1cce71-3027-455d-8998-c2e4845629a7 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 26
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "rawdfallgw = pd.merge(master,\n",
        "                     gw5adjustments,\n",
        "                     on ='team',\n",
        "                     how ='left')\n",
        "rawfwdallgw = rawdfallgw.query('pos==\"F\"')\n",
        "rawfwdallgw['xPallgw'] = ((rawfwdallgw.expected_goals * 4/4)+(rawfwdallgw.expected_assists * 3/4) + (rawfwdallgw.apppoint))\n",
        "rawfwdallgw = rawfwdallgw.drop(columns=[\n",
        " 'expected_goals',\n",
        " 'expected_assists',\n",
        " 'apppoint',\n",
        " 'assistvalue',\n",
        "])\n",
        "rawmdallgw = rawdfallgw.query('pos==\"M\"')\n",
        "rawmdallgw['xPallgw'] = ((rawmdallgw.expected_goals * 5/4)+(rawmdallgw.expected_assists * 3/4) + (rawmdallgw.apppoint))\n",
        "rawmdallgw = rawmdallgw.drop(columns=[\n",
        " 'expected_goals',\n",
        " 'expected_assists',\n",
        " 'apppoint',\n",
        " 'assistvalue',\n",
        "])\n",
        "fbref = pd.read_html('https://fbref.com/en/comps/9/Premier-League-Stats')\n",
        "epltable = fbref[0]\n",
        "epltabledef = epltable.drop(columns=[ 'Rk',\n",
        " 'MP',\n",
        " 'W',\n",
        " 'D',\n",
        " 'L',\n",
        " 'GF',\n",
        " 'GA',\n",
        " 'GD',\n",
        " 'xG',\n",
        " 'xGD',\n",
        " 'xGD/90',\n",
        " 'Pts',\n",
        " 'Pts/MP',\n",
        " 'Last 5',\n",
        " 'Attendance',\n",
        " 'Top Team Scorer',\n",
        " 'Goalkeeper',\n",
        " 'Notes'])\n",
        "epltabledef= epltabledef.replace('Newcastle Utd', 'Newcastle United')\n",
        "epltabledef= epltabledef.replace('Wolves','Wolverhampton Wanderers')\n",
        "epltabledef= epltabledef.replace('Leeds United','Leeds')\n",
        "epltabledef= epltabledef.replace('Leicester City','Leicester')\n",
        "epltabledef= epltabledef.replace('Manchester Utd','Manchester United')\n",
        "epltabledef['Squad'] = epltabledef['Squad'].str.replace(r\"[\\\"\\',]\", '')\n",
        "epltabledef= epltabledef.replace('Nottham Forest','Nottingham Forest')\n",
        "epltabledef['xCSP'] = (4 - (epltabledef.xGA * 4/4))\n",
        "epltabledef.rename(columns={'Squad': 'team'}, inplace=True)\n",
        "rawdfcs = pd.merge(rawdf,\n",
        "                     epltabledef,\n",
        "                     on ='team',\n",
        "                     how ='left')\n",
        "rawgkallgw= rawdfcs.query('pos==\"G\"')\n",
        "#rawgkallgw['xPallgw'] = (rawgkallgw.apppoint)\n",
        "rawgkallgw['xPallgw'] = ((rawgkallgw.xCSP)+ (rawgkallgw.apppoint))\n",
        "rawgkallgw = rawgkallgw.drop(columns=[\n",
        " 'expected_goals',\n",
        "  'expected_assists',\n",
        " 'apppoint',\n",
        " 'assistvalue',\n",
        "  'xGA',\n",
        "])\n",
        "rawdefallgw= rawdfcs.query('pos==\"D\"')\n",
        "rawdefallgw['xPallgw'] = (rawdefallgw.expected_goals * 6/4)+(rawdefallgw.expected_assists * 3/4) +(rawdefallgw.xCSP)+ (rawdefallgw.apppoint)\n",
        "#rawdefallgw['xPallgw'] = (rawdefallgw.expected_goals * 6/3)+(rawdefallgw.expected_assists * 3/3) + (rawdefallgw.apppoint)\n",
        "rawdefallgw = rawdefallgw.drop(columns=[\n",
        " 'expected_goals',\n",
        " 'expected_assists',\n",
        " 'apppoint',\n",
        " 'assistvalue',\n",
        "  'xGA',])\n",
        "rawallplayersallgw = pd.concat([rawfwdallgw, rawmdallgw, rawdefallgw, rawgkallgw], ignore_index=True)\n",
        "rawallplayersallgw\n",
        "\n",
        "\n",
        "\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 874
        },
        "id": "xxPTwE3TZZC0",
        "outputId": "fd4b20c7-3f3b-406f-ee40-d5d661bc3ec6"
      },
      "execution_count": 27,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "<ipython-input-27-ee447c6bde08>:6: SettingWithCopyWarning: \n",
            "A value is trying to be set on a copy of a slice from a DataFrame.\n",
            "Try using .loc[row_indexer,col_indexer] = value instead\n",
            "\n",
            "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
            "  rawfwdallgw['xPallgw'] = ((rawfwdallgw.expected_goals * 4/4)+(rawfwdallgw.expected_assists * 3/4) + (rawfwdallgw.apppoint))\n",
            "<ipython-input-27-ee447c6bde08>:14: SettingWithCopyWarning: \n",
            "A value is trying to be set on a copy of a slice from a DataFrame.\n",
            "Try using .loc[row_indexer,col_indexer] = value instead\n",
            "\n",
            "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
            "  rawmdallgw['xPallgw'] = ((rawmdallgw.expected_goals * 5/4)+(rawmdallgw.expected_assists * 3/4) + (rawmdallgw.apppoint))\n",
            "<ipython-input-27-ee447c6bde08>:46: FutureWarning: The default value of regex will change from True to False in a future version.\n",
            "  epltabledef['Squad'] = epltabledef['Squad'].str.replace(r\"[\\\"\\',]\", '')\n",
            "<ipython-input-27-ee447c6bde08>:56: SettingWithCopyWarning: \n",
            "A value is trying to be set on a copy of a slice from a DataFrame.\n",
            "Try using .loc[row_indexer,col_indexer] = value instead\n",
            "\n",
            "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
            "  rawgkallgw['xPallgw'] = ((rawgkallgw.xCSP)+ (rawgkallgw.apppoint))\n",
            "<ipython-input-27-ee447c6bde08>:65: SettingWithCopyWarning: \n",
            "A value is trying to be set on a copy of a slice from a DataFrame.\n",
            "Try using .loc[row_indexer,col_indexer] = value instead\n",
            "\n",
            "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
            "  rawdefallgw['xPallgw'] = (rawdefallgw.expected_goals * 6/4)+(rawdefallgw.expected_assists * 3/4) +(rawdefallgw.xCSP)+ (rawdefallgw.apppoint)\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "      id                     team pos     name  cost  selected_by_percent  \\\n",
              "0      1                  Arsenal   F  Balogun   4.4                  0.4   \n",
              "1      8                  Arsenal   F  G.Jesus   7.9                  2.1   \n",
              "2     13                  Arsenal   F  Nketiah   5.6                  6.9   \n",
              "3     39              Aston Villa   F    Davis   4.9                  0.2   \n",
              "4     44              Aston Villa   F    Duran   5.0                  0.1   \n",
              "..   ...                      ...  ..      ...   ...                  ...   \n",
              "709  647                 West Ham   G    Anang   4.0                  0.0   \n",
              "710  546  Wolverhampton Wanderers   G  Bentley   4.0                  0.4   \n",
              "711  564  Wolverhampton Wanderers   G     King   4.0                  0.8   \n",
              "712  569  Wolverhampton Wanderers   G  Jos√© S√°   5.0                  1.4   \n",
              "713  571  Wolverhampton Wanderers   G   ≈†arkiƒá   4.0                  0.4   \n",
              "\n",
              "     goals_scored  assists  bps  ict_index  points  points_per_game  minutes  \\\n",
              "0               0        0    0        0.0       0              0.0        0   \n",
              "1               1        0   26       10.7       7              3.5       15   \n",
              "2               2        1   64       24.6      20              5.0      270   \n",
              "3               0        0    0        0.0       0              0.0        0   \n",
              "4               1        0   33        7.5       9              3.0       37   \n",
              "..            ...      ...  ...        ...     ...              ...      ...   \n",
              "709             0        0    0        0.0       0              0.0        0   \n",
              "710             0        0    0        0.0       0              0.0        0   \n",
              "711             0        0    0        0.0       0              0.0        0   \n",
              "712             0        0   94       16.0      17              4.2      360   \n",
              "713             0        0    0        0.0       0              0.0        0   \n",
              "\n",
              "     home_adjustment  xPallgw  xCSP  \n",
              "0           1.166179   2.0000   NaN  \n",
              "1           1.166179   2.8475   NaN  \n",
              "2           1.166179   3.6825   NaN  \n",
              "3           1.101978   2.0000   NaN  \n",
              "4           1.101978   2.6375   NaN  \n",
              "..               ...      ...   ...  \n",
              "709         0.988306  -0.7000  -2.7  \n",
              "710         0.820717  -1.8000  -3.8  \n",
              "711         0.820717  -1.8000  -3.8  \n",
              "712         0.820717  -1.8000  -3.8  \n",
              "713         0.820717  -1.8000  -3.8  \n",
              "\n",
              "[714 rows x 16 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-c1fc9997-a4a2-4cac-8937-5aa0023a5aa8\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>team</th>\n",
              "      <th>pos</th>\n",
              "      <th>name</th>\n",
              "      <th>cost</th>\n",
              "      <th>selected_by_percent</th>\n",
              "      <th>goals_scored</th>\n",
              "      <th>assists</th>\n",
              "      <th>bps</th>\n",
              "      <th>ict_index</th>\n",
              "      <th>points</th>\n",
              "      <th>points_per_game</th>\n",
              "      <th>minutes</th>\n",
              "      <th>home_adjustment</th>\n",
              "      <th>xPallgw</th>\n",
              "      <th>xCSP</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>1</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>F</td>\n",
              "      <td>Balogun</td>\n",
              "      <td>4.4</td>\n",
              "      <td>0.4</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>1.166179</td>\n",
              "      <td>2.0000</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>8</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>F</td>\n",
              "      <td>G.Jesus</td>\n",
              "      <td>7.9</td>\n",
              "      <td>2.1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>26</td>\n",
              "      <td>10.7</td>\n",
              "      <td>7</td>\n",
              "      <td>3.5</td>\n",
              "      <td>15</td>\n",
              "      <td>1.166179</td>\n",
              "      <td>2.8475</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>13</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>F</td>\n",
              "      <td>Nketiah</td>\n",
              "      <td>5.6</td>\n",
              "      <td>6.9</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>64</td>\n",
              "      <td>24.6</td>\n",
              "      <td>20</td>\n",
              "      <td>5.0</td>\n",
              "      <td>270</td>\n",
              "      <td>1.166179</td>\n",
              "      <td>3.6825</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>39</td>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>F</td>\n",
              "      <td>Davis</td>\n",
              "      <td>4.9</td>\n",
              "      <td>0.2</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>1.101978</td>\n",
              "      <td>2.0000</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>44</td>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>F</td>\n",
              "      <td>Duran</td>\n",
              "      <td>5.0</td>\n",
              "      <td>0.1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>33</td>\n",
              "      <td>7.5</td>\n",
              "      <td>9</td>\n",
              "      <td>3.0</td>\n",
              "      <td>37</td>\n",
              "      <td>1.101978</td>\n",
              "      <td>2.6375</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>709</th>\n",
              "      <td>647</td>\n",
              "      <td>West Ham</td>\n",
              "      <td>G</td>\n",
              "      <td>Anang</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.988306</td>\n",
              "      <td>-0.7000</td>\n",
              "      <td>-2.7</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>710</th>\n",
              "      <td>546</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>G</td>\n",
              "      <td>Bentley</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.4</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.820717</td>\n",
              "      <td>-1.8000</td>\n",
              "      <td>-3.8</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>711</th>\n",
              "      <td>564</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>G</td>\n",
              "      <td>King</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.8</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.820717</td>\n",
              "      <td>-1.8000</td>\n",
              "      <td>-3.8</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>712</th>\n",
              "      <td>569</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>G</td>\n",
              "      <td>Jos√© S√°</td>\n",
              "      <td>5.0</td>\n",
              "      <td>1.4</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>94</td>\n",
              "      <td>16.0</td>\n",
              "      <td>17</td>\n",
              "      <td>4.2</td>\n",
              "      <td>360</td>\n",
              "      <td>0.820717</td>\n",
              "      <td>-1.8000</td>\n",
              "      <td>-3.8</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>713</th>\n",
              "      <td>571</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>G</td>\n",
              "      <td>≈†arkiƒá</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.4</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.820717</td>\n",
              "      <td>-1.8000</td>\n",
              "      <td>-3.8</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>714 rows √ó 16 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-c1fc9997-a4a2-4cac-8937-5aa0023a5aa8')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-c1fc9997-a4a2-4cac-8937-5aa0023a5aa8 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-c1fc9997-a4a2-4cac-8937-5aa0023a5aa8');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-6147e963-70e4-44e5-ab61-914b76448077\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-6147e963-70e4-44e5-ab61-914b76448077')\"\n",
              "            title=\"Suggest charts.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-6147e963-70e4-44e5-ab61-914b76448077 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 27
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "rawmdallgw"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 423
        },
        "id": "ZtNrmQMhefCc",
        "outputId": "437e4382-2c93-4a56-cf27-55a28f5a3a0c"
      },
      "execution_count": 28,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "      id                     team pos             name  cost  \\\n",
              "2      3                  Arsenal   M         M.Elneny   4.4   \n",
              "3      4                  Arsenal   M     F√°bio Vieira   5.4   \n",
              "5      6                  Arsenal   M          Havertz   7.3   \n",
              "7      9                  Arsenal   M         Jorginho   5.4   \n",
              "9     11                  Arsenal   M       Marquinhos   4.5   \n",
              "..   ...                      ...  ..              ...   ...   \n",
              "701  568  Wolverhampton Wanderers   M          Podence   5.3   \n",
              "703  570  Wolverhampton Wanderers   M          Sarabia   5.0   \n",
              "707  574  Wolverhampton Wanderers   M  Boubacar Traore   4.4   \n",
              "711  698  Wolverhampton Wanderers   M         Gonz√°lez   5.0   \n",
              "713  715  Wolverhampton Wanderers   M       Bellegarde   5.0   \n",
              "\n",
              "     selected_by_percent  goals_scored  assists  bps  ict_index  points  \\\n",
              "2                    0.1             0        0    0        0.0       0   \n",
              "3                    0.1             0        3   37        9.7      11   \n",
              "5                    2.2             0        0   17       15.7       7   \n",
              "7                    0.2             0        0   12        1.5       3   \n",
              "9                    0.1             0        0    0        0.0       0   \n",
              "..                   ...           ...      ...  ...        ...     ...   \n",
              "701                  0.1             0        0    0        0.0       0   \n",
              "703                  0.2             0        1   33       19.1       9   \n",
              "707                  0.4             0        0    2        0.6       1   \n",
              "711                  0.0             0        0    0        0.0       0   \n",
              "713                  0.0             0        0    0        0.0       0   \n",
              "\n",
              "     points_per_game  minutes  home_adjustment  xPallgw  \n",
              "2                0.0        0         1.166179   2.0000  \n",
              "3                5.5       47         1.166179   2.2225  \n",
              "5                1.8      311         1.166179   3.2275  \n",
              "7                1.0       18         1.166179   2.0300  \n",
              "9                0.0        0         1.166179   2.0000  \n",
              "..               ...      ...              ...      ...  \n",
              "701              0.0        0         0.820717   2.0000  \n",
              "703              2.2      172         0.820717   3.0150  \n",
              "707              1.0       16         0.820717   2.0075  \n",
              "711              0.0        0         0.820717   2.0000  \n",
              "713              0.0        0         0.820717   2.0000  \n",
              "\n",
              "[307 rows x 15 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-5b1473ff-d0b1-421f-962c-9bfd035d3a19\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>team</th>\n",
              "      <th>pos</th>\n",
              "      <th>name</th>\n",
              "      <th>cost</th>\n",
              "      <th>selected_by_percent</th>\n",
              "      <th>goals_scored</th>\n",
              "      <th>assists</th>\n",
              "      <th>bps</th>\n",
              "      <th>ict_index</th>\n",
              "      <th>points</th>\n",
              "      <th>points_per_game</th>\n",
              "      <th>minutes</th>\n",
              "      <th>home_adjustment</th>\n",
              "      <th>xPallgw</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>3</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>M</td>\n",
              "      <td>M.Elneny</td>\n",
              "      <td>4.4</td>\n",
              "      <td>0.1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>1.166179</td>\n",
              "      <td>2.0000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>4</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>M</td>\n",
              "      <td>F√°bio Vieira</td>\n",
              "      <td>5.4</td>\n",
              "      <td>0.1</td>\n",
              "      <td>0</td>\n",
              "      <td>3</td>\n",
              "      <td>37</td>\n",
              "      <td>9.7</td>\n",
              "      <td>11</td>\n",
              "      <td>5.5</td>\n",
              "      <td>47</td>\n",
              "      <td>1.166179</td>\n",
              "      <td>2.2225</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>6</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>M</td>\n",
              "      <td>Havertz</td>\n",
              "      <td>7.3</td>\n",
              "      <td>2.2</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>17</td>\n",
              "      <td>15.7</td>\n",
              "      <td>7</td>\n",
              "      <td>1.8</td>\n",
              "      <td>311</td>\n",
              "      <td>1.166179</td>\n",
              "      <td>3.2275</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>9</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>M</td>\n",
              "      <td>Jorginho</td>\n",
              "      <td>5.4</td>\n",
              "      <td>0.2</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>12</td>\n",
              "      <td>1.5</td>\n",
              "      <td>3</td>\n",
              "      <td>1.0</td>\n",
              "      <td>18</td>\n",
              "      <td>1.166179</td>\n",
              "      <td>2.0300</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>11</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>M</td>\n",
              "      <td>Marquinhos</td>\n",
              "      <td>4.5</td>\n",
              "      <td>0.1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>1.166179</td>\n",
              "      <td>2.0000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>701</th>\n",
              "      <td>568</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>M</td>\n",
              "      <td>Podence</td>\n",
              "      <td>5.3</td>\n",
              "      <td>0.1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.820717</td>\n",
              "      <td>2.0000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>703</th>\n",
              "      <td>570</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>M</td>\n",
              "      <td>Sarabia</td>\n",
              "      <td>5.0</td>\n",
              "      <td>0.2</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>33</td>\n",
              "      <td>19.1</td>\n",
              "      <td>9</td>\n",
              "      <td>2.2</td>\n",
              "      <td>172</td>\n",
              "      <td>0.820717</td>\n",
              "      <td>3.0150</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>707</th>\n",
              "      <td>574</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>M</td>\n",
              "      <td>Boubacar Traore</td>\n",
              "      <td>4.4</td>\n",
              "      <td>0.4</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>0.6</td>\n",
              "      <td>1</td>\n",
              "      <td>1.0</td>\n",
              "      <td>16</td>\n",
              "      <td>0.820717</td>\n",
              "      <td>2.0075</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>711</th>\n",
              "      <td>698</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>M</td>\n",
              "      <td>Gonz√°lez</td>\n",
              "      <td>5.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.820717</td>\n",
              "      <td>2.0000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>713</th>\n",
              "      <td>715</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>M</td>\n",
              "      <td>Bellegarde</td>\n",
              "      <td>5.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.820717</td>\n",
              "      <td>2.0000</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>307 rows √ó 15 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-5b1473ff-d0b1-421f-962c-9bfd035d3a19')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-5b1473ff-d0b1-421f-962c-9bfd035d3a19 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-5b1473ff-d0b1-421f-962c-9bfd035d3a19');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-329f8bb0-a5cc-4e61-a61d-da97d998a6fb\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-329f8bb0-a5cc-4e61-a61d-da97d998a6fb')\"\n",
              "            title=\"Suggest charts.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-329f8bb0-a5cc-4e61-a61d-da97d998a6fb button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 28
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "gw2blanks = [['Burnley', 0], ['Luton Town', 0]]\n",
        "\n",
        "# Create the pandas DataFrame\n",
        "blanks2 = pd.DataFrame(gw2blanks, columns=['team', 'gw2adjustment'])\n",
        "blanks2"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 112
        },
        "id": "xkGffHD0iXWI",
        "outputId": "ece51295-102c-41c3-bf16-937c7b6dd162"
      },
      "execution_count": 29,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "         team  gw2adjustment\n",
              "0     Burnley              0\n",
              "1  Luton Town              0"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-2209347b-43a1-4b49-adcb-a780c3671c99\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>team</th>\n",
              "      <th>gw2adjustment</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>Burnley</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Luton Town</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-2209347b-43a1-4b49-adcb-a780c3671c99')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-2209347b-43a1-4b49-adcb-a780c3671c99 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-2209347b-43a1-4b49-adcb-a780c3671c99');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-2c11812e-da98-49cf-865c-e1abf396419d\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-2c11812e-da98-49cf-865c-e1abf396419d')\"\n",
              "            title=\"Suggest charts.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-2c11812e-da98-49cf-865c-e1abf396419d button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 29
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#gw2adjustments = pd.concat([gw2adjustments, blanks2])\n",
        "#gw2adjustments = gw2adjustments.reset_index(drop=True)\n",
        "#gw2adjustments"
      ],
      "metadata": {
        "id": "JNr3eV5Rir58"
      },
      "execution_count": 30,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "##gw3blanks = [['Newcastle United', 0], ['Manchester United', 0], ['Brentford', 0], ['Brighton', 0]]\n",
        "\n",
        "# Create the pandas DataFrame\n",
        "##blanks = pd.DataFrame(gw3blanks, columns=['team', 'gw3adjustment'])\n",
        "##blanks"
      ],
      "metadata": {
        "id": "iCizQgwMD84B"
      },
      "execution_count": 31,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "gw9 = homesawayspi.query('Event==\"9.0\"')\n",
        "pd.options.mode.chained_assignment = None  # default='warn'\n",
        "PLSPI = spi.query('league==\"Barclays Premier League\"')\n",
        "PLSPI['League Average']  = PLSPI[\"spi\"].mean()\n",
        "laverage = PLSPI[\"spi\"].mean()\n",
        "PLSPI['League Average'].astype(int)\n",
        "gw9['League_Average']  = laverage\n",
        "gw9.rename(columns = {'Home SPI':'HomeSPI', 'Away SPI':'AwaySPI'}, inplace = True)\n",
        "gw9['home_difference'] = gw9.HomeSPI - gw9.League_Average\n",
        "gw9['away_difference'] = gw9.AwaySPI - gw9.League_Average\n",
        "gw9['home_adjustment'] = (gw9.home_difference - gw9.away_difference + gw9.League_Average)/gw9.League_Average\n",
        "gw9['away_adjustment'] = (gw9.away_difference - gw9.home_difference+ gw9.League_Average)/gw9.League_Average\n",
        "gw9adjustments = gw9[['team_h', 'home_adjustment']].append(gw9[['team_a','away_adjustment']].set_axis(['team_h', 'home_adjustment'], axis=1)).reset_index(drop=True)\n",
        "gw9adjustments.rename(columns = {'team_h':'team'}, inplace = True)\n",
        "gw9adjustments.rename(columns = {'home_adjustment':'gw9adjustment'}, inplace = True)\n",
        "gw9adjustments"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 711
        },
        "id": "pzyah3Z-kgct",
        "outputId": "4426518b-7cc8-4a53-d378-08ac76f5830d"
      },
      "execution_count": 33,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "<ipython-input-33-5b7600c0bba0>:13: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  gw9adjustments = gw9[['team_h', 'home_adjustment']].append(gw9[['team_a','away_adjustment']].set_axis(['team_h', 'home_adjustment'], axis=1)).reset_index(drop=True)\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                       team  gw9adjustment\n",
              "0                 Liverpool       1.282095\n",
              "1               Bournemouth       1.007226\n",
              "2                 Brentford       1.197328\n",
              "3           Manchester City       1.154527\n",
              "4          Newcastle United       1.142298\n",
              "5         Nottingham Forest       1.009033\n",
              "6                   Chelsea       0.886884\n",
              "7          Sheffield United       0.687194\n",
              "8               Aston Villa       1.113672\n",
              "9                 Tottenham       1.054474\n",
              "10                  Everton       0.717905\n",
              "11  Wolverhampton Wanderers       0.992774\n",
              "12                  Burnley       0.802672\n",
              "13                 Brighton       0.845473\n",
              "14           Crystal Palace       0.857702\n",
              "15               Luton Town       0.990967\n",
              "16                  Arsenal       1.113116\n",
              "17        Manchester United       1.312806\n",
              "18                 West Ham       0.886328\n",
              "19                   Fulham       0.945526"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-e586bfda-1b6b-41ed-9fe7-52996d83fb58\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>team</th>\n",
              "      <th>gw9adjustment</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>Liverpool</td>\n",
              "      <td>1.282095</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Bournemouth</td>\n",
              "      <td>1.007226</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>Brentford</td>\n",
              "      <td>1.197328</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>Manchester City</td>\n",
              "      <td>1.154527</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>Newcastle United</td>\n",
              "      <td>1.142298</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>Nottingham Forest</td>\n",
              "      <td>1.009033</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>Chelsea</td>\n",
              "      <td>0.886884</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>Sheffield United</td>\n",
              "      <td>0.687194</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>1.113672</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>Tottenham</td>\n",
              "      <td>1.054474</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10</th>\n",
              "      <td>Everton</td>\n",
              "      <td>0.717905</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>11</th>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>0.992774</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>12</th>\n",
              "      <td>Burnley</td>\n",
              "      <td>0.802672</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>13</th>\n",
              "      <td>Brighton</td>\n",
              "      <td>0.845473</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>14</th>\n",
              "      <td>Crystal Palace</td>\n",
              "      <td>0.857702</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>15</th>\n",
              "      <td>Luton Town</td>\n",
              "      <td>0.990967</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>16</th>\n",
              "      <td>Arsenal</td>\n",
              "      <td>1.113116</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>17</th>\n",
              "      <td>Manchester United</td>\n",
              "      <td>1.312806</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>18</th>\n",
              "      <td>West Ham</td>\n",
              "      <td>0.886328</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>19</th>\n",
              "      <td>Fulham</td>\n",
              "      <td>0.945526</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-e586bfda-1b6b-41ed-9fe7-52996d83fb58')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-e586bfda-1b6b-41ed-9fe7-52996d83fb58 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-e586bfda-1b6b-41ed-9fe7-52996d83fb58');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-b043c825-01a8-49ef-a8a0-406fb4ade659\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-b043c825-01a8-49ef-a8a0-406fb4ade659')\"\n",
              "            title=\"Suggest charts.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-b043c825-01a8-49ef-a8a0-406fb4ade659 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 33
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "gw2 = homesawayspi.query('Event==\"2.0\"')\n",
        "pd.options.mode.chained_assignment = None  # default='warn'\n",
        "PLSPI = spi.query('league==\"Barclays Premier League\"')\n",
        "PLSPI['League Average']  = PLSPI[\"spi\"].mean()\n",
        "laverage = PLSPI[\"spi\"].mean()\n",
        "PLSPI['League Average'].astype(int)\n",
        "gw2['League_Average']  = laverage\n",
        "gw2.rename(columns = {'Home SPI':'HomeSPI', 'Away SPI':'AwaySPI'}, inplace = True)\n",
        "gw2['home_difference'] = gw2.HomeSPI - gw2.League_Average\n",
        "gw2['away_difference'] = gw2.AwaySPI - gw2.League_Average\n",
        "gw2['home_adjustment'] = (gw2.home_difference - gw2.away_difference + gw2.League_Average)/gw2.League_Average\n",
        "gw2['away_adjustment'] = (gw2.away_difference - gw2.home_difference+ gw2.League_Average)/gw2.League_Average\n",
        "gw2adjustments = gw2[['team_h', 'home_adjustment']].append(gw2[['team_a','away_adjustment']].set_axis(['team_h', 'home_adjustment'], axis=1)).reset_index(drop=True)\n",
        "gw2adjustments.rename(columns = {'team_h':'team'}, inplace = True)\n",
        "gw2adjustments.rename(columns = {'home_adjustment':'gw2adjustment'}, inplace = True)\n",
        "gw2adjustments = gw2adjustments.groupby('team', as_index=False)['gw2adjustment'].aggregate('sum')\n",
        "gw2adjustments"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 648
        },
        "id": "nL5rLLG4kOqM",
        "outputId": "b8ac33fa-b770-48a3-da1a-d57cfe436bd7"
      },
      "execution_count": 34,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "<ipython-input-34-cc71a582ca3c>:13: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  gw2adjustments = gw2[['team_h', 'home_adjustment']].append(gw2[['team_a','away_adjustment']].set_axis(['team_h', 'home_adjustment'], axis=1)).reset_index(drop=True)\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                       team  gw2adjustment\n",
              "0                   Arsenal       1.145356\n",
              "1               Aston Villa       1.217755\n",
              "2               Bournemouth       0.661625\n",
              "3                 Brentford       1.123955\n",
              "4                  Brighton       1.303218\n",
              "5                   Chelsea       1.064757\n",
              "6            Crystal Palace       0.854644\n",
              "7                   Everton       0.782245\n",
              "8                    Fulham       0.876045\n",
              "9                 Liverpool       1.338375\n",
              "10          Manchester City       1.115339\n",
              "11        Manchester United       1.096440\n",
              "12         Newcastle United       0.884661\n",
              "13        Nottingham Forest       0.993886\n",
              "14         Sheffield United       1.006114\n",
              "15                Tottenham       0.903560\n",
              "16                 West Ham       0.935243\n",
              "17  Wolverhampton Wanderers       0.696782"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-85658441-75c5-4468-ac83-696c44cca7b7\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>team</th>\n",
              "      <th>gw2adjustment</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>Arsenal</td>\n",
              "      <td>1.145356</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>1.217755</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>Bournemouth</td>\n",
              "      <td>0.661625</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>Brentford</td>\n",
              "      <td>1.123955</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>Brighton</td>\n",
              "      <td>1.303218</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>Chelsea</td>\n",
              "      <td>1.064757</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>Crystal Palace</td>\n",
              "      <td>0.854644</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>Everton</td>\n",
              "      <td>0.782245</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>Fulham</td>\n",
              "      <td>0.876045</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>Liverpool</td>\n",
              "      <td>1.338375</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10</th>\n",
              "      <td>Manchester City</td>\n",
              "      <td>1.115339</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>11</th>\n",
              "      <td>Manchester United</td>\n",
              "      <td>1.096440</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>12</th>\n",
              "      <td>Newcastle United</td>\n",
              "      <td>0.884661</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>13</th>\n",
              "      <td>Nottingham Forest</td>\n",
              "      <td>0.993886</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>14</th>\n",
              "      <td>Sheffield United</td>\n",
              "      <td>1.006114</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>15</th>\n",
              "      <td>Tottenham</td>\n",
              "      <td>0.903560</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>16</th>\n",
              "      <td>West Ham</td>\n",
              "      <td>0.935243</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>17</th>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>0.696782</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-85658441-75c5-4468-ac83-696c44cca7b7')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-85658441-75c5-4468-ac83-696c44cca7b7 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-85658441-75c5-4468-ac83-696c44cca7b7');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-2e9604fc-5264-4cb2-a187-340b460d3849\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-2e9604fc-5264-4cb2-a187-340b460d3849')\"\n",
              "            title=\"Suggest charts.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-2e9604fc-5264-4cb2-a187-340b460d3849 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 34
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "gw3 = homesawayspi.query('Event==\"3.0\"')\n",
        "pd.options.mode.chained_assignment = None  # default='warn'\n",
        "PLSPI = spi.query('league==\"Barclays Premier League\"')\n",
        "PLSPI['League Average']  = PLSPI[\"spi\"].mean()\n",
        "laverage = PLSPI[\"spi\"].mean()\n",
        "PLSPI['League Average'].astype(int)\n",
        "gw3['League_Average']  = laverage\n",
        "gw3.rename(columns = {'Home SPI':'HomeSPI', 'Away SPI':'AwaySPI'}, inplace = True)\n",
        "gw3['home_difference'] = gw3.HomeSPI - gw3.League_Average\n",
        "gw3['away_difference'] = gw3.AwaySPI - gw3.League_Average\n",
        "gw3['home_adjustment'] = (gw3.home_difference - gw3.away_difference + gw3.League_Average)/gw3.League_Average\n",
        "gw3['away_adjustment'] = (gw3.away_difference - gw3.home_difference+ gw3.League_Average)/gw3.League_Average\n",
        "gw3adjustments = gw3[['team_h', 'home_adjustment']].append(gw3[['team_a','away_adjustment']].set_axis(['team_h', 'home_adjustment'], axis=1)).reset_index(drop=True)\n",
        "gw3adjustments.rename(columns = {'team_h':'team'}, inplace = True)\n",
        "gw3adjustments.rename(columns = {'home_adjustment':'gw3adjustment'}, inplace = True)\n",
        "gw3adjustments"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 711
        },
        "id": "bg97rds1kb73",
        "outputId": "f7ab6a5f-31a1-4793-b0e5-9c04dda46013"
      },
      "execution_count": 35,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "<ipython-input-35-a2637fad4f3e>:13: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  gw3adjustments = gw3[['team_h', 'home_adjustment']].append(gw3[['team_a','away_adjustment']].set_axis(['team_h', 'home_adjustment'], axis=1)).reset_index(drop=True)\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                       team  gw3adjustment\n",
              "0                   Chelsea       1.282095\n",
              "1               Bournemouth       0.825462\n",
              "2                   Arsenal       1.218172\n",
              "3                 Brentford       1.051138\n",
              "4                   Everton       1.063506\n",
              "5         Manchester United       1.318921\n",
              "6                  Brighton       1.135628\n",
              "7                   Burnley       0.772656\n",
              "8          Sheffield United       0.507653\n",
              "9          Newcastle United       0.996804\n",
              "10               Luton Town       0.717905\n",
              "11                Tottenham       1.174538\n",
              "12                   Fulham       0.781828\n",
              "13           Crystal Palace       0.948862\n",
              "14  Wolverhampton Wanderers       0.936494\n",
              "15        Nottingham Forest       0.681079\n",
              "16                 West Ham       0.864372\n",
              "17              Aston Villa       1.227344\n",
              "18          Manchester City       1.492347\n",
              "19                Liverpool       1.003196"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-9d8536d8-bb95-4766-928a-305435e99fb1\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>team</th>\n",
              "      <th>gw3adjustment</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>Chelsea</td>\n",
              "      <td>1.282095</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Bournemouth</td>\n",
              "      <td>0.825462</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>Arsenal</td>\n",
              "      <td>1.218172</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>Brentford</td>\n",
              "      <td>1.051138</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>Everton</td>\n",
              "      <td>1.063506</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>Manchester United</td>\n",
              "      <td>1.318921</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>Brighton</td>\n",
              "      <td>1.135628</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>Burnley</td>\n",
              "      <td>0.772656</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>Sheffield United</td>\n",
              "      <td>0.507653</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>Newcastle United</td>\n",
              "      <td>0.996804</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10</th>\n",
              "      <td>Luton Town</td>\n",
              "      <td>0.717905</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>11</th>\n",
              "      <td>Tottenham</td>\n",
              "      <td>1.174538</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>12</th>\n",
              "      <td>Fulham</td>\n",
              "      <td>0.781828</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>13</th>\n",
              "      <td>Crystal Palace</td>\n",
              "      <td>0.948862</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>14</th>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>0.936494</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>15</th>\n",
              "      <td>Nottingham Forest</td>\n",
              "      <td>0.681079</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>16</th>\n",
              "      <td>West Ham</td>\n",
              "      <td>0.864372</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>17</th>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>1.227344</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>18</th>\n",
              "      <td>Manchester City</td>\n",
              "      <td>1.492347</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>19</th>\n",
              "      <td>Liverpool</td>\n",
              "      <td>1.003196</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-9d8536d8-bb95-4766-928a-305435e99fb1')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-9d8536d8-bb95-4766-928a-305435e99fb1 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-9d8536d8-bb95-4766-928a-305435e99fb1');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-4647726e-c012-4235-af57-2d03db6e46fb\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-4647726e-c012-4235-af57-2d03db6e46fb')\"\n",
              "            title=\"Suggest charts.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-4647726e-c012-4235-af57-2d03db6e46fb button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 35
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "gw5 = homesawayspi.query('Event==\"5.0\"')\n",
        "pd.options.mode.chained_assignment = None  # default='warn'\n",
        "PLSPI = spi.query('league==\"Barclays Premier League\"')\n",
        "PLSPI['League Average']  = PLSPI[\"spi\"].mean()\n",
        "laverage = PLSPI[\"spi\"].mean()\n",
        "PLSPI['League Average'].astype(int)\n",
        "gw5['League_Average']  = laverage\n",
        "gw5.rename(columns = {'Home SPI':'HomeSPI', 'Away SPI':'AwaySPI'}, inplace = True)\n",
        "gw5['home_difference'] = gw5.HomeSPI - gw5.League_Average\n",
        "gw5['away_difference'] = gw5.AwaySPI - gw5.League_Average\n",
        "gw5['home_adjustment'] = (gw5.home_difference - gw5.away_difference + gw5.League_Average)/gw5.League_Average\n",
        "gw5['away_adjustment'] = (gw5.away_difference - gw5.home_difference+ gw5.League_Average)/gw5.League_Average\n",
        "gw5adjustments = gw5[['team_h', 'home_adjustment']].append(gw5[['team_a','away_adjustment']].set_axis(['team_h', 'home_adjustment'], axis=1)).reset_index(drop=True)\n",
        "gw5adjustments.rename(columns = {'team_h':'team'}, inplace = True)\n",
        "gw5adjustments.rename(columns = {'home_adjustment':'gw5adjustment'}, inplace = True)\n",
        "gw5adjustments"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 711
        },
        "id": "7uE1H7R4Gems",
        "outputId": "873a711e-82eb-426b-e92f-7bf5ff4e2fc2"
      },
      "execution_count": 36,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "<ipython-input-36-a468e0b0b9ba>:13: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  gw5adjustments = gw5[['team_h', 'home_adjustment']].append(gw5[['team_a','away_adjustment']].set_axis(['team_h', 'home_adjustment'], axis=1)).reset_index(drop=True)\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                       team  gw5adjustment\n",
              "0   Wolverhampton Wanderers       0.654399\n",
              "1               Aston Villa       1.081155\n",
              "2                    Fulham       1.177039\n",
              "3         Manchester United       0.974987\n",
              "4                 Tottenham       1.216366\n",
              "5                  West Ham       0.709845\n",
              "6          Newcastle United       1.091160\n",
              "7               Bournemouth       0.774880\n",
              "8                   Everton       0.718044\n",
              "9         Nottingham Forest       0.905366\n",
              "10                Liverpool       1.345601\n",
              "11           Crystal Palace       0.918845\n",
              "12               Luton Town       0.822961\n",
              "13                 Brighton       1.025013\n",
              "14         Sheffield United       0.783634\n",
              "15          Manchester City       1.290155\n",
              "16                Brentford       0.908840\n",
              "17                  Chelsea       1.225120\n",
              "18                  Arsenal       1.281956\n",
              "19                  Burnley       1.094634"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-19740a4c-6db2-4734-b03a-6ff6373010d9\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>team</th>\n",
              "      <th>gw5adjustment</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>0.654399</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>1.081155</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>Fulham</td>\n",
              "      <td>1.177039</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>Manchester United</td>\n",
              "      <td>0.974987</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>Tottenham</td>\n",
              "      <td>1.216366</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>West Ham</td>\n",
              "      <td>0.709845</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>Newcastle United</td>\n",
              "      <td>1.091160</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>Bournemouth</td>\n",
              "      <td>0.774880</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>Everton</td>\n",
              "      <td>0.718044</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>Nottingham Forest</td>\n",
              "      <td>0.905366</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10</th>\n",
              "      <td>Liverpool</td>\n",
              "      <td>1.345601</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>11</th>\n",
              "      <td>Crystal Palace</td>\n",
              "      <td>0.918845</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>12</th>\n",
              "      <td>Luton Town</td>\n",
              "      <td>0.822961</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>13</th>\n",
              "      <td>Brighton</td>\n",
              "      <td>1.025013</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>14</th>\n",
              "      <td>Sheffield United</td>\n",
              "      <td>0.783634</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>15</th>\n",
              "      <td>Manchester City</td>\n",
              "      <td>1.290155</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>16</th>\n",
              "      <td>Brentford</td>\n",
              "      <td>0.908840</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>17</th>\n",
              "      <td>Chelsea</td>\n",
              "      <td>1.225120</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>18</th>\n",
              "      <td>Arsenal</td>\n",
              "      <td>1.281956</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>19</th>\n",
              "      <td>Burnley</td>\n",
              "      <td>1.094634</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-19740a4c-6db2-4734-b03a-6ff6373010d9')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-19740a4c-6db2-4734-b03a-6ff6373010d9 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-19740a4c-6db2-4734-b03a-6ff6373010d9');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-2782ff13-173b-44b7-83fe-8e163e221814\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-2782ff13-173b-44b7-83fe-8e163e221814')\"\n",
              "            title=\"Suggest charts.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-2782ff13-173b-44b7-83fe-8e163e221814 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 36
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#gw5blanks = [['Chelsea', 0], ['Manchester United', 0], ['Manchester City', 0], ['Brighton', 0]]\n",
        "\n",
        "# Create the pandas DataFrame\n",
        "#blanks32 = pd.DataFrame(gw5blanks, columns=['team', 'gw5adjustment'])\n",
        "#blanks32"
      ],
      "metadata": {
        "id": "p00QYlZ7UbAu"
      },
      "execution_count": 37,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "#gw5adjustments = pd.concat([gw5adjustments, blanks32])\n",
        "#gw5adjustments = gw5adjustments.reset_index(drop=True)\n",
        "#gw5adjustments"
      ],
      "metadata": {
        "id": "xh_AhxKJU0VW"
      },
      "execution_count": 38,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "gw6= homesawayspi.query('Event==\"6.0\"')\n",
        "pd.options.mode.chained_assignment = None  # default='warn'\n",
        "PLSPI = spi.query('league==\"Barclays Premier League\"')\n",
        "PLSPI['League Average']  = PLSPI[\"spi\"].mean()\n",
        "laverage = PLSPI[\"spi\"].mean()\n",
        "PLSPI['League Average'].astype(int)\n",
        "gw6['League_Average']  = laverage\n",
        "gw6.rename(columns = {'Home SPI':'HomeSPI', 'Away SPI':'AwaySPI'}, inplace = True)\n",
        "gw6['home_difference'] = gw6.HomeSPI - gw6.League_Average\n",
        "gw6['away_difference'] = gw6.AwaySPI - gw6.League_Average\n",
        "gw6['home_adjustment'] = (gw6.home_difference - gw6.away_difference + gw6.League_Average)/gw6.League_Average\n",
        "gw6['away_adjustment'] = (gw6.away_difference - gw6.home_difference+ gw6.League_Average)/gw6.League_Average\n",
        "gw6adjustments = gw6[['team_h', 'home_adjustment']].append(gw6[['team_a','away_adjustment']].set_axis(['team_h', 'home_adjustment'], axis=1)).reset_index(drop=True)\n",
        "gw6adjustments.rename(columns = {'team_h':'team'}, inplace = True)\n",
        "gw6adjustments.rename(columns = {'home_adjustment':'gw6adjustment'}, inplace = True)\n",
        "gw6adjustments"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 711
        },
        "id": "OPB6Pz8sGZNe",
        "outputId": "c19b2dec-161f-4f05-b42f-d6350d579d37"
      },
      "execution_count": 39,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "<ipython-input-39-34edfb59e920>:13: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  gw6adjustments = gw6[['team_h', 'home_adjustment']].append(gw6[['team_a','away_adjustment']].set_axis(['team_h', 'home_adjustment'], axis=1)).reset_index(drop=True)\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                       team  gw6adjustment\n",
              "0            Crystal Palace       1.072817\n",
              "1                Luton Town       0.950251\n",
              "2           Manchester City       1.498461\n",
              "3                 Brentford       1.187739\n",
              "4                   Burnley       0.775713\n",
              "5                   Arsenal       1.163699\n",
              "6                  Brighton       1.295992\n",
              "7                   Chelsea       0.951085\n",
              "8                 Liverpool       1.178012\n",
              "9          Sheffield United       0.622993\n",
              "10                   Fulham       0.927183\n",
              "11  Wolverhampton Wanderers       1.049749\n",
              "12        Nottingham Forest       0.501539\n",
              "13                  Everton       0.812261\n",
              "14        Manchester United       1.224287\n",
              "15                Tottenham       0.836301\n",
              "16              Bournemouth       0.704008\n",
              "17              Aston Villa       1.048915\n",
              "18                 West Ham       0.821988\n",
              "19         Newcastle United       1.377007"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-0e6c213b-a914-446d-b9a0-849590c9bed7\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>team</th>\n",
              "      <th>gw6adjustment</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>Crystal Palace</td>\n",
              "      <td>1.072817</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Luton Town</td>\n",
              "      <td>0.950251</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>Manchester City</td>\n",
              "      <td>1.498461</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>Brentford</td>\n",
              "      <td>1.187739</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>Burnley</td>\n",
              "      <td>0.775713</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>Arsenal</td>\n",
              "      <td>1.163699</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>Brighton</td>\n",
              "      <td>1.295992</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>Chelsea</td>\n",
              "      <td>0.951085</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>Liverpool</td>\n",
              "      <td>1.178012</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>Sheffield United</td>\n",
              "      <td>0.622993</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10</th>\n",
              "      <td>Fulham</td>\n",
              "      <td>0.927183</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>11</th>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>1.049749</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>12</th>\n",
              "      <td>Nottingham Forest</td>\n",
              "      <td>0.501539</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>13</th>\n",
              "      <td>Everton</td>\n",
              "      <td>0.812261</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>14</th>\n",
              "      <td>Manchester United</td>\n",
              "      <td>1.224287</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>15</th>\n",
              "      <td>Tottenham</td>\n",
              "      <td>0.836301</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>16</th>\n",
              "      <td>Bournemouth</td>\n",
              "      <td>0.704008</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>17</th>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>1.048915</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>18</th>\n",
              "      <td>West Ham</td>\n",
              "      <td>0.821988</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>19</th>\n",
              "      <td>Newcastle United</td>\n",
              "      <td>1.377007</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-0e6c213b-a914-446d-b9a0-849590c9bed7')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-0e6c213b-a914-446d-b9a0-849590c9bed7 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-0e6c213b-a914-446d-b9a0-849590c9bed7');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-421f5f80-aba8-4d31-be32-501e6336bc8e\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-421f5f80-aba8-4d31-be32-501e6336bc8e')\"\n",
              "            title=\"Suggest charts.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-421f5f80-aba8-4d31-be32-501e6336bc8e button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 39
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "gw7= homesawayspi.query('Event==\"6.0\"')\n",
        "pd.options.mode.chained_assignment = None  # default='warn'\n",
        "PLSPI = spi.query('league==\"Barclays Premier League\"')\n",
        "PLSPI['League Average']  = PLSPI[\"spi\"].mean()\n",
        "laverage = PLSPI[\"spi\"].mean()\n",
        "PLSPI['League Average'].astype(int)\n",
        "gw7['League_Average']  = laverage\n",
        "gw7.rename(columns = {'Home SPI':'HomeSPI', 'Away SPI':'AwaySPI'}, inplace = True)\n",
        "gw7['home_difference'] = gw7.HomeSPI - gw7.League_Average\n",
        "gw7['away_difference'] = gw7.AwaySPI - gw7.League_Average\n",
        "gw7['home_adjustment'] = (gw7.home_difference - gw7.away_difference + gw7.League_Average)/gw7.League_Average\n",
        "gw7['away_adjustment'] = (gw7.away_difference - gw7.home_difference+ gw7.League_Average)/gw7.League_Average\n",
        "gw7adjustments = gw7[['team_h', 'home_adjustment']].append(gw7[['team_a','away_adjustment']].set_axis(['team_h', 'home_adjustment'], axis=1)).reset_index(drop=True)\n",
        "gw7adjustments.rename(columns = {'team_h':'team'}, inplace = True)\n",
        "gw7adjustments.rename(columns = {'home_adjustment':'gw7adjustment'}, inplace = True)\n",
        "gw7adjustments"
      ],
      "metadata": {
        "id": "Ns7V93Gobs3z",
        "outputId": "e1b7c72a-3d46-4aac-ddc8-fa0c9e916604",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 711
        }
      },
      "execution_count": 40,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "<ipython-input-40-52ef5c57abad>:13: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  gw7adjustments = gw7[['team_h', 'home_adjustment']].append(gw7[['team_a','away_adjustment']].set_axis(['team_h', 'home_adjustment'], axis=1)).reset_index(drop=True)\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                       team  gw7adjustment\n",
              "0            Crystal Palace       1.072817\n",
              "1                Luton Town       0.950251\n",
              "2           Manchester City       1.498461\n",
              "3                 Brentford       1.187739\n",
              "4                   Burnley       0.775713\n",
              "5                   Arsenal       1.163699\n",
              "6                  Brighton       1.295992\n",
              "7                   Chelsea       0.951085\n",
              "8                 Liverpool       1.178012\n",
              "9          Sheffield United       0.622993\n",
              "10                   Fulham       0.927183\n",
              "11  Wolverhampton Wanderers       1.049749\n",
              "12        Nottingham Forest       0.501539\n",
              "13                  Everton       0.812261\n",
              "14        Manchester United       1.224287\n",
              "15                Tottenham       0.836301\n",
              "16              Bournemouth       0.704008\n",
              "17              Aston Villa       1.048915\n",
              "18                 West Ham       0.821988\n",
              "19         Newcastle United       1.377007"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-8ccd9d87-2605-4556-a12e-4f7ad5ddab39\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>team</th>\n",
              "      <th>gw7adjustment</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>Crystal Palace</td>\n",
              "      <td>1.072817</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Luton Town</td>\n",
              "      <td>0.950251</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>Manchester City</td>\n",
              "      <td>1.498461</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>Brentford</td>\n",
              "      <td>1.187739</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>Burnley</td>\n",
              "      <td>0.775713</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>Arsenal</td>\n",
              "      <td>1.163699</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>Brighton</td>\n",
              "      <td>1.295992</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>Chelsea</td>\n",
              "      <td>0.951085</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>Liverpool</td>\n",
              "      <td>1.178012</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>Sheffield United</td>\n",
              "      <td>0.622993</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10</th>\n",
              "      <td>Fulham</td>\n",
              "      <td>0.927183</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>11</th>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>1.049749</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>12</th>\n",
              "      <td>Nottingham Forest</td>\n",
              "      <td>0.501539</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>13</th>\n",
              "      <td>Everton</td>\n",
              "      <td>0.812261</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>14</th>\n",
              "      <td>Manchester United</td>\n",
              "      <td>1.224287</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>15</th>\n",
              "      <td>Tottenham</td>\n",
              "      <td>0.836301</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>16</th>\n",
              "      <td>Bournemouth</td>\n",
              "      <td>0.704008</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>17</th>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>1.048915</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>18</th>\n",
              "      <td>West Ham</td>\n",
              "      <td>0.821988</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>19</th>\n",
              "      <td>Newcastle United</td>\n",
              "      <td>1.377007</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-8ccd9d87-2605-4556-a12e-4f7ad5ddab39')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-8ccd9d87-2605-4556-a12e-4f7ad5ddab39 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-8ccd9d87-2605-4556-a12e-4f7ad5ddab39');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-efec5f16-9805-4349-8923-9be3c8a94059\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-efec5f16-9805-4349-8923-9be3c8a94059')\"\n",
              "            title=\"Suggest charts.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-efec5f16-9805-4349-8923-9be3c8a94059 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 40
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "gw8= homesawayspi.query('Event==\"6.0\"')\n",
        "pd.options.mode.chained_assignment = None  # default='warn'\n",
        "PLSPI = spi.query('league==\"Barclays Premier League\"')\n",
        "PLSPI['League Average']  = PLSPI[\"spi\"].mean()\n",
        "laverage = PLSPI[\"spi\"].mean()\n",
        "PLSPI['League Average'].astype(int)\n",
        "gw8['League_Average']  = laverage\n",
        "gw8.rename(columns = {'Home SPI':'HomeSPI', 'Away SPI':'AwaySPI'}, inplace = True)\n",
        "gw8['home_difference'] = gw8.HomeSPI - gw8.League_Average\n",
        "gw8['away_difference'] = gw8.AwaySPI - gw8.League_Average\n",
        "gw8['home_adjustment'] = (gw8.home_difference - gw8.away_difference + gw8.League_Average)/gw8.League_Average\n",
        "gw8['away_adjustment'] = (gw8.away_difference - gw8.home_difference+ gw8.League_Average)/gw8.League_Average\n",
        "gw8adjustments = gw8[['team_h', 'home_adjustment']].append(gw8[['team_a','away_adjustment']].set_axis(['team_h', 'home_adjustment'], axis=1)).reset_index(drop=True)\n",
        "gw8adjustments.rename(columns = {'team_h':'team'}, inplace = True)\n",
        "gw8adjustments.rename(columns = {'home_adjustment':'gw8adjustment'}, inplace = True)\n",
        "gw8adjustments"
      ],
      "metadata": {
        "id": "wlvV4OeQb34Z",
        "outputId": "e3951670-8df4-4298-c5db-22a3960523b2",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 711
        }
      },
      "execution_count": 41,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "<ipython-input-41-dd94feaaec4f>:13: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  gw8adjustments = gw8[['team_h', 'home_adjustment']].append(gw8[['team_a','away_adjustment']].set_axis(['team_h', 'home_adjustment'], axis=1)).reset_index(drop=True)\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                       team  gw8adjustment\n",
              "0            Crystal Palace       1.072817\n",
              "1                Luton Town       0.950251\n",
              "2           Manchester City       1.498461\n",
              "3                 Brentford       1.187739\n",
              "4                   Burnley       0.775713\n",
              "5                   Arsenal       1.163699\n",
              "6                  Brighton       1.295992\n",
              "7                   Chelsea       0.951085\n",
              "8                 Liverpool       1.178012\n",
              "9          Sheffield United       0.622993\n",
              "10                   Fulham       0.927183\n",
              "11  Wolverhampton Wanderers       1.049749\n",
              "12        Nottingham Forest       0.501539\n",
              "13                  Everton       0.812261\n",
              "14        Manchester United       1.224287\n",
              "15                Tottenham       0.836301\n",
              "16              Bournemouth       0.704008\n",
              "17              Aston Villa       1.048915\n",
              "18                 West Ham       0.821988\n",
              "19         Newcastle United       1.377007"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-5c81e007-02db-4b8a-aa86-ca9f0527ef2b\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>team</th>\n",
              "      <th>gw8adjustment</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>Crystal Palace</td>\n",
              "      <td>1.072817</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Luton Town</td>\n",
              "      <td>0.950251</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>Manchester City</td>\n",
              "      <td>1.498461</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>Brentford</td>\n",
              "      <td>1.187739</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>Burnley</td>\n",
              "      <td>0.775713</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>Arsenal</td>\n",
              "      <td>1.163699</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>Brighton</td>\n",
              "      <td>1.295992</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>Chelsea</td>\n",
              "      <td>0.951085</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>Liverpool</td>\n",
              "      <td>1.178012</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>Sheffield United</td>\n",
              "      <td>0.622993</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10</th>\n",
              "      <td>Fulham</td>\n",
              "      <td>0.927183</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>11</th>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>1.049749</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>12</th>\n",
              "      <td>Nottingham Forest</td>\n",
              "      <td>0.501539</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>13</th>\n",
              "      <td>Everton</td>\n",
              "      <td>0.812261</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>14</th>\n",
              "      <td>Manchester United</td>\n",
              "      <td>1.224287</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>15</th>\n",
              "      <td>Tottenham</td>\n",
              "      <td>0.836301</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>16</th>\n",
              "      <td>Bournemouth</td>\n",
              "      <td>0.704008</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>17</th>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>1.048915</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>18</th>\n",
              "      <td>West Ham</td>\n",
              "      <td>0.821988</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>19</th>\n",
              "      <td>Newcastle United</td>\n",
              "      <td>1.377007</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-5c81e007-02db-4b8a-aa86-ca9f0527ef2b')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-5c81e007-02db-4b8a-aa86-ca9f0527ef2b button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-5c81e007-02db-4b8a-aa86-ca9f0527ef2b');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-6cbac50f-de2d-4f31-9660-5e5d75522af1\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-6cbac50f-de2d-4f31-9660-5e5d75522af1')\"\n",
              "            title=\"Suggest charts.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-6cbac50f-de2d-4f31-9660-5e5d75522af1 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 41
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "gwadjustments59 = pd.merge(gw5adjustments,gw6adjustments, on ='team')\n",
        "gwadjustments59 = pd.merge(gwadjustments59,gw7adjustments, on ='team')\n",
        "gwadjustments59 = pd.merge(gwadjustments59,gw8adjustments, on ='team')\n",
        "gwadjustments59 = pd.merge(gwadjustments59,gw9adjustments, on ='team')\n",
        "gwadjustments59"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 676
        },
        "id": "P6_WVsnNkztJ",
        "outputId": "9ce0a763-4de6-404d-9bb8-6c4e090a7a13"
      },
      "execution_count": 42,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                       team  gw5adjustment  gw6adjustment  gw7adjustment  \\\n",
              "0   Wolverhampton Wanderers       0.654399       1.049749       1.049749   \n",
              "1               Aston Villa       1.081155       1.048915       1.048915   \n",
              "2                    Fulham       1.177039       0.927183       0.927183   \n",
              "3         Manchester United       0.974987       1.224287       1.224287   \n",
              "4                 Tottenham       1.216366       0.836301       0.836301   \n",
              "5                  West Ham       0.709845       0.821988       0.821988   \n",
              "6          Newcastle United       1.091160       1.377007       1.377007   \n",
              "7               Bournemouth       0.774880       0.704008       0.704008   \n",
              "8                   Everton       0.718044       0.812261       0.812261   \n",
              "9         Nottingham Forest       0.905366       0.501539       0.501539   \n",
              "10                Liverpool       1.345601       1.178012       1.178012   \n",
              "11           Crystal Palace       0.918845       1.072817       1.072817   \n",
              "12               Luton Town       0.822961       0.950251       0.950251   \n",
              "13                 Brighton       1.025013       1.295992       1.295992   \n",
              "14         Sheffield United       0.783634       0.622993       0.622993   \n",
              "15          Manchester City       1.290155       1.498461       1.498461   \n",
              "16                Brentford       0.908840       1.187739       1.187739   \n",
              "17                  Chelsea       1.225120       0.951085       0.951085   \n",
              "18                  Arsenal       1.281956       1.163699       1.163699   \n",
              "19                  Burnley       1.094634       0.775713       0.775713   \n",
              "\n",
              "    gw8adjustment  gw9adjustment  \n",
              "0        1.049749       0.992774  \n",
              "1        1.048915       1.113672  \n",
              "2        0.927183       0.945526  \n",
              "3        1.224287       1.312806  \n",
              "4        0.836301       1.054474  \n",
              "5        0.821988       0.886328  \n",
              "6        1.377007       1.142298  \n",
              "7        0.704008       1.007226  \n",
              "8        0.812261       0.717905  \n",
              "9        0.501539       1.009033  \n",
              "10       1.178012       1.282095  \n",
              "11       1.072817       0.857702  \n",
              "12       0.950251       0.990967  \n",
              "13       1.295992       0.845473  \n",
              "14       0.622993       0.687194  \n",
              "15       1.498461       1.154527  \n",
              "16       1.187739       1.197328  \n",
              "17       0.951085       0.886884  \n",
              "18       1.163699       1.113116  \n",
              "19       0.775713       0.802672  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-a0e719eb-0a85-4df4-9f24-aa569151ddd8\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>team</th>\n",
              "      <th>gw5adjustment</th>\n",
              "      <th>gw6adjustment</th>\n",
              "      <th>gw7adjustment</th>\n",
              "      <th>gw8adjustment</th>\n",
              "      <th>gw9adjustment</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>0.654399</td>\n",
              "      <td>1.049749</td>\n",
              "      <td>1.049749</td>\n",
              "      <td>1.049749</td>\n",
              "      <td>0.992774</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>1.081155</td>\n",
              "      <td>1.048915</td>\n",
              "      <td>1.048915</td>\n",
              "      <td>1.048915</td>\n",
              "      <td>1.113672</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>Fulham</td>\n",
              "      <td>1.177039</td>\n",
              "      <td>0.927183</td>\n",
              "      <td>0.927183</td>\n",
              "      <td>0.927183</td>\n",
              "      <td>0.945526</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>Manchester United</td>\n",
              "      <td>0.974987</td>\n",
              "      <td>1.224287</td>\n",
              "      <td>1.224287</td>\n",
              "      <td>1.224287</td>\n",
              "      <td>1.312806</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>Tottenham</td>\n",
              "      <td>1.216366</td>\n",
              "      <td>0.836301</td>\n",
              "      <td>0.836301</td>\n",
              "      <td>0.836301</td>\n",
              "      <td>1.054474</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>West Ham</td>\n",
              "      <td>0.709845</td>\n",
              "      <td>0.821988</td>\n",
              "      <td>0.821988</td>\n",
              "      <td>0.821988</td>\n",
              "      <td>0.886328</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>Newcastle United</td>\n",
              "      <td>1.091160</td>\n",
              "      <td>1.377007</td>\n",
              "      <td>1.377007</td>\n",
              "      <td>1.377007</td>\n",
              "      <td>1.142298</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>Bournemouth</td>\n",
              "      <td>0.774880</td>\n",
              "      <td>0.704008</td>\n",
              "      <td>0.704008</td>\n",
              "      <td>0.704008</td>\n",
              "      <td>1.007226</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>Everton</td>\n",
              "      <td>0.718044</td>\n",
              "      <td>0.812261</td>\n",
              "      <td>0.812261</td>\n",
              "      <td>0.812261</td>\n",
              "      <td>0.717905</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>Nottingham Forest</td>\n",
              "      <td>0.905366</td>\n",
              "      <td>0.501539</td>\n",
              "      <td>0.501539</td>\n",
              "      <td>0.501539</td>\n",
              "      <td>1.009033</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10</th>\n",
              "      <td>Liverpool</td>\n",
              "      <td>1.345601</td>\n",
              "      <td>1.178012</td>\n",
              "      <td>1.178012</td>\n",
              "      <td>1.178012</td>\n",
              "      <td>1.282095</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>11</th>\n",
              "      <td>Crystal Palace</td>\n",
              "      <td>0.918845</td>\n",
              "      <td>1.072817</td>\n",
              "      <td>1.072817</td>\n",
              "      <td>1.072817</td>\n",
              "      <td>0.857702</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>12</th>\n",
              "      <td>Luton Town</td>\n",
              "      <td>0.822961</td>\n",
              "      <td>0.950251</td>\n",
              "      <td>0.950251</td>\n",
              "      <td>0.950251</td>\n",
              "      <td>0.990967</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>13</th>\n",
              "      <td>Brighton</td>\n",
              "      <td>1.025013</td>\n",
              "      <td>1.295992</td>\n",
              "      <td>1.295992</td>\n",
              "      <td>1.295992</td>\n",
              "      <td>0.845473</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>14</th>\n",
              "      <td>Sheffield United</td>\n",
              "      <td>0.783634</td>\n",
              "      <td>0.622993</td>\n",
              "      <td>0.622993</td>\n",
              "      <td>0.622993</td>\n",
              "      <td>0.687194</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>15</th>\n",
              "      <td>Manchester City</td>\n",
              "      <td>1.290155</td>\n",
              "      <td>1.498461</td>\n",
              "      <td>1.498461</td>\n",
              "      <td>1.498461</td>\n",
              "      <td>1.154527</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>16</th>\n",
              "      <td>Brentford</td>\n",
              "      <td>0.908840</td>\n",
              "      <td>1.187739</td>\n",
              "      <td>1.187739</td>\n",
              "      <td>1.187739</td>\n",
              "      <td>1.197328</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>17</th>\n",
              "      <td>Chelsea</td>\n",
              "      <td>1.225120</td>\n",
              "      <td>0.951085</td>\n",
              "      <td>0.951085</td>\n",
              "      <td>0.951085</td>\n",
              "      <td>0.886884</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>18</th>\n",
              "      <td>Arsenal</td>\n",
              "      <td>1.281956</td>\n",
              "      <td>1.163699</td>\n",
              "      <td>1.163699</td>\n",
              "      <td>1.163699</td>\n",
              "      <td>1.113116</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>19</th>\n",
              "      <td>Burnley</td>\n",
              "      <td>1.094634</td>\n",
              "      <td>0.775713</td>\n",
              "      <td>0.775713</td>\n",
              "      <td>0.775713</td>\n",
              "      <td>0.802672</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-a0e719eb-0a85-4df4-9f24-aa569151ddd8')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-a0e719eb-0a85-4df4-9f24-aa569151ddd8 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-a0e719eb-0a85-4df4-9f24-aa569151ddd8');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-0e784ce8-2ddd-4de0-830d-38f8dedf7bc7\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-0e784ce8-2ddd-4de0-830d-38f8dedf7bc7')\"\n",
              "            title=\"Suggest charts.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-0e784ce8-2ddd-4de0-830d-38f8dedf7bc7 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 42
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "rawdfgw228x = pd.merge(rawallplayersallgw,\n",
        "                     gwadjustments59,\n",
        "                     on ='team',\n",
        "                     how ='left')\n",
        "#rawdfgw228x.rename(columns = {'gw3adjustment_y':'gw3adjustment'}, inplace = True)\n",
        "rawdfgw228x = rawdfgw228x.round(1)\n",
        "rawdfgw228x"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 513
        },
        "id": "-b-0jux2PKIX",
        "outputId": "4876e790-4369-485e-919b-af1e9af25c56"
      },
      "execution_count": 43,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "      id                     team pos     name  cost  selected_by_percent  \\\n",
              "0      1                  Arsenal   F  Balogun   4.4                  0.4   \n",
              "1      8                  Arsenal   F  G.Jesus   7.9                  2.1   \n",
              "2     13                  Arsenal   F  Nketiah   5.6                  6.9   \n",
              "3     39              Aston Villa   F    Davis   4.9                  0.2   \n",
              "4     44              Aston Villa   F    Duran   5.0                  0.1   \n",
              "..   ...                      ...  ..      ...   ...                  ...   \n",
              "709  647                 West Ham   G    Anang   4.0                  0.0   \n",
              "710  546  Wolverhampton Wanderers   G  Bentley   4.0                  0.4   \n",
              "711  564  Wolverhampton Wanderers   G     King   4.0                  0.8   \n",
              "712  569  Wolverhampton Wanderers   G  Jos√© S√°   5.0                  1.4   \n",
              "713  571  Wolverhampton Wanderers   G   ≈†arkiƒá   4.0                  0.4   \n",
              "\n",
              "     goals_scored  assists  bps  ict_index  ...  points_per_game  minutes  \\\n",
              "0               0        0    0        0.0  ...              0.0        0   \n",
              "1               1        0   26       10.7  ...              3.5       15   \n",
              "2               2        1   64       24.6  ...              5.0      270   \n",
              "3               0        0    0        0.0  ...              0.0        0   \n",
              "4               1        0   33        7.5  ...              3.0       37   \n",
              "..            ...      ...  ...        ...  ...              ...      ...   \n",
              "709             0        0    0        0.0  ...              0.0        0   \n",
              "710             0        0    0        0.0  ...              0.0        0   \n",
              "711             0        0    0        0.0  ...              0.0        0   \n",
              "712             0        0   94       16.0  ...              4.2      360   \n",
              "713             0        0    0        0.0  ...              0.0        0   \n",
              "\n",
              "     home_adjustment  xPallgw  xCSP  gw5adjustment  gw6adjustment  \\\n",
              "0                1.2      2.0   NaN            1.3            1.2   \n",
              "1                1.2      2.8   NaN            1.3            1.2   \n",
              "2                1.2      3.7   NaN            1.3            1.2   \n",
              "3                1.1      2.0   NaN            1.1            1.0   \n",
              "4                1.1      2.6   NaN            1.1            1.0   \n",
              "..               ...      ...   ...            ...            ...   \n",
              "709              1.0     -0.7  -2.7            0.7            0.8   \n",
              "710              0.8     -1.8  -3.8            0.7            1.0   \n",
              "711              0.8     -1.8  -3.8            0.7            1.0   \n",
              "712              0.8     -1.8  -3.8            0.7            1.0   \n",
              "713              0.8     -1.8  -3.8            0.7            1.0   \n",
              "\n",
              "     gw7adjustment  gw8adjustment  gw9adjustment  \n",
              "0              1.2            1.2            1.1  \n",
              "1              1.2            1.2            1.1  \n",
              "2              1.2            1.2            1.1  \n",
              "3              1.0            1.0            1.1  \n",
              "4              1.0            1.0            1.1  \n",
              "..             ...            ...            ...  \n",
              "709            0.8            0.8            0.9  \n",
              "710            1.0            1.0            1.0  \n",
              "711            1.0            1.0            1.0  \n",
              "712            1.0            1.0            1.0  \n",
              "713            1.0            1.0            1.0  \n",
              "\n",
              "[714 rows x 21 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-06e23c02-e5c3-4e42-a4d7-3969ee4fdeb8\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>team</th>\n",
              "      <th>pos</th>\n",
              "      <th>name</th>\n",
              "      <th>cost</th>\n",
              "      <th>selected_by_percent</th>\n",
              "      <th>goals_scored</th>\n",
              "      <th>assists</th>\n",
              "      <th>bps</th>\n",
              "      <th>ict_index</th>\n",
              "      <th>...</th>\n",
              "      <th>points_per_game</th>\n",
              "      <th>minutes</th>\n",
              "      <th>home_adjustment</th>\n",
              "      <th>xPallgw</th>\n",
              "      <th>xCSP</th>\n",
              "      <th>gw5adjustment</th>\n",
              "      <th>gw6adjustment</th>\n",
              "      <th>gw7adjustment</th>\n",
              "      <th>gw8adjustment</th>\n",
              "      <th>gw9adjustment</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>1</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>F</td>\n",
              "      <td>Balogun</td>\n",
              "      <td>4.4</td>\n",
              "      <td>0.4</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>1.2</td>\n",
              "      <td>2.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1.3</td>\n",
              "      <td>1.2</td>\n",
              "      <td>1.2</td>\n",
              "      <td>1.2</td>\n",
              "      <td>1.1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>8</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>F</td>\n",
              "      <td>G.Jesus</td>\n",
              "      <td>7.9</td>\n",
              "      <td>2.1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>26</td>\n",
              "      <td>10.7</td>\n",
              "      <td>...</td>\n",
              "      <td>3.5</td>\n",
              "      <td>15</td>\n",
              "      <td>1.2</td>\n",
              "      <td>2.8</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1.3</td>\n",
              "      <td>1.2</td>\n",
              "      <td>1.2</td>\n",
              "      <td>1.2</td>\n",
              "      <td>1.1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>13</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>F</td>\n",
              "      <td>Nketiah</td>\n",
              "      <td>5.6</td>\n",
              "      <td>6.9</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>64</td>\n",
              "      <td>24.6</td>\n",
              "      <td>...</td>\n",
              "      <td>5.0</td>\n",
              "      <td>270</td>\n",
              "      <td>1.2</td>\n",
              "      <td>3.7</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1.3</td>\n",
              "      <td>1.2</td>\n",
              "      <td>1.2</td>\n",
              "      <td>1.2</td>\n",
              "      <td>1.1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>39</td>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>F</td>\n",
              "      <td>Davis</td>\n",
              "      <td>4.9</td>\n",
              "      <td>0.2</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>1.1</td>\n",
              "      <td>2.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1.1</td>\n",
              "      <td>1.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>1.1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>44</td>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>F</td>\n",
              "      <td>Duran</td>\n",
              "      <td>5.0</td>\n",
              "      <td>0.1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>33</td>\n",
              "      <td>7.5</td>\n",
              "      <td>...</td>\n",
              "      <td>3.0</td>\n",
              "      <td>37</td>\n",
              "      <td>1.1</td>\n",
              "      <td>2.6</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1.1</td>\n",
              "      <td>1.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>1.1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>709</th>\n",
              "      <td>647</td>\n",
              "      <td>West Ham</td>\n",
              "      <td>G</td>\n",
              "      <td>Anang</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>-0.7</td>\n",
              "      <td>-2.7</td>\n",
              "      <td>0.7</td>\n",
              "      <td>0.8</td>\n",
              "      <td>0.8</td>\n",
              "      <td>0.8</td>\n",
              "      <td>0.9</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>710</th>\n",
              "      <td>546</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>G</td>\n",
              "      <td>Bentley</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.4</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.8</td>\n",
              "      <td>-1.8</td>\n",
              "      <td>-3.8</td>\n",
              "      <td>0.7</td>\n",
              "      <td>1.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>1.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>711</th>\n",
              "      <td>564</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>G</td>\n",
              "      <td>King</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.8</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.8</td>\n",
              "      <td>-1.8</td>\n",
              "      <td>-3.8</td>\n",
              "      <td>0.7</td>\n",
              "      <td>1.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>1.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>712</th>\n",
              "      <td>569</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>G</td>\n",
              "      <td>Jos√© S√°</td>\n",
              "      <td>5.0</td>\n",
              "      <td>1.4</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>94</td>\n",
              "      <td>16.0</td>\n",
              "      <td>...</td>\n",
              "      <td>4.2</td>\n",
              "      <td>360</td>\n",
              "      <td>0.8</td>\n",
              "      <td>-1.8</td>\n",
              "      <td>-3.8</td>\n",
              "      <td>0.7</td>\n",
              "      <td>1.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>1.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>713</th>\n",
              "      <td>571</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>G</td>\n",
              "      <td>≈†arkiƒá</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.4</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.8</td>\n",
              "      <td>-1.8</td>\n",
              "      <td>-3.8</td>\n",
              "      <td>0.7</td>\n",
              "      <td>1.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>1.0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>714 rows √ó 21 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-06e23c02-e5c3-4e42-a4d7-3969ee4fdeb8')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-06e23c02-e5c3-4e42-a4d7-3969ee4fdeb8 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-06e23c02-e5c3-4e42-a4d7-3969ee4fdeb8');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-d632a036-44b3-4e70-8e07-7f402fbab14f\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-d632a036-44b3-4e70-8e07-7f402fbab14f')\"\n",
              "            title=\"Suggest charts.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-d632a036-44b3-4e70-8e07-7f402fbab14f button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 43
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "gw3adjustments = gw3adjustments.groupby('team', as_index=False)['gw3adjustment'].aggregate('sum')\n",
        "gw3adjustments"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 676
        },
        "id": "6x3Lj7jPTCVC",
        "outputId": "eb725a52-5830-48f8-d6c9-329c8c6d0191"
      },
      "execution_count": 44,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                       team  gw3adjustment\n",
              "0                   Arsenal       1.218172\n",
              "1               Aston Villa       1.227344\n",
              "2               Bournemouth       0.825462\n",
              "3                 Brentford       1.051138\n",
              "4                  Brighton       1.135628\n",
              "5                   Burnley       0.772656\n",
              "6                   Chelsea       1.282095\n",
              "7            Crystal Palace       0.948862\n",
              "8                   Everton       1.063506\n",
              "9                    Fulham       0.781828\n",
              "10                Liverpool       1.003196\n",
              "11               Luton Town       0.717905\n",
              "12          Manchester City       1.492347\n",
              "13        Manchester United       1.318921\n",
              "14         Newcastle United       0.996804\n",
              "15        Nottingham Forest       0.681079\n",
              "16         Sheffield United       0.507653\n",
              "17                Tottenham       1.174538\n",
              "18                 West Ham       0.864372\n",
              "19  Wolverhampton Wanderers       0.936494"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-ed88b488-b372-478e-8853-e58139148641\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>team</th>\n",
              "      <th>gw3adjustment</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>Arsenal</td>\n",
              "      <td>1.218172</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>1.227344</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>Bournemouth</td>\n",
              "      <td>0.825462</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>Brentford</td>\n",
              "      <td>1.051138</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>Brighton</td>\n",
              "      <td>1.135628</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>Burnley</td>\n",
              "      <td>0.772656</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>Chelsea</td>\n",
              "      <td>1.282095</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>Crystal Palace</td>\n",
              "      <td>0.948862</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>Everton</td>\n",
              "      <td>1.063506</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>Fulham</td>\n",
              "      <td>0.781828</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10</th>\n",
              "      <td>Liverpool</td>\n",
              "      <td>1.003196</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>11</th>\n",
              "      <td>Luton Town</td>\n",
              "      <td>0.717905</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>12</th>\n",
              "      <td>Manchester City</td>\n",
              "      <td>1.492347</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>13</th>\n",
              "      <td>Manchester United</td>\n",
              "      <td>1.318921</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>14</th>\n",
              "      <td>Newcastle United</td>\n",
              "      <td>0.996804</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>15</th>\n",
              "      <td>Nottingham Forest</td>\n",
              "      <td>0.681079</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>16</th>\n",
              "      <td>Sheffield United</td>\n",
              "      <td>0.507653</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>17</th>\n",
              "      <td>Tottenham</td>\n",
              "      <td>1.174538</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>18</th>\n",
              "      <td>West Ham</td>\n",
              "      <td>0.864372</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>19</th>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>0.936494</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-ed88b488-b372-478e-8853-e58139148641')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-ed88b488-b372-478e-8853-e58139148641 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-ed88b488-b372-478e-8853-e58139148641');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-0f9165ae-4886-4612-8d45-7d7f47301430\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-0f9165ae-4886-4612-8d45-7d7f47301430')\"\n",
              "            title=\"Suggest charts.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-0f9165ae-4886-4612-8d45-7d7f47301430 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 44
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "rawdfgw228x['gw7'] = (((rawdfgw228x.xPallgw - 2)*rawdfgw228x.gw7adjustment)+2)\n",
        "rawdfgw228x['gw9'] = (((rawdfgw228x.xPallgw - 2)*rawdfgw228x.gw9adjustment)+2)\n",
        "rawdfgw228x['gw8'] = (((rawdfgw228x.xPallgw - 2)*rawdfgw228x.gw8adjustment)+2)\n",
        "rawdfgw228x['gw5'] = (((rawdfgw228x.xPallgw - 2)*rawdfgw228x.gw5adjustment)+2)\n",
        "rawdfgw228x['gw6'] = (((rawdfgw228x.xPallgw - 2)*rawdfgw228x.gw6adjustment)+2)\n",
        "rawdfgw228x['5GW Total'] = rawdfgw228x.gw7 + rawdfgw228x.gw5 + rawdfgw228x.gw6 + rawdfgw228x.gw9 + rawdfgw228x.gw8\n",
        "rawdfgw228x = rawdfgw228x.drop(columns=[\n",
        "  'gw5adjustment',\n",
        "  'gw6adjustment',\n",
        "  'gw7adjustment',\n",
        "  'gw9adjustment',\n",
        "  'gw8adjustment'\n",
        "  ])\n",
        "rawdfgw228x"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 530
        },
        "id": "Dgw1xB0YUN9D",
        "outputId": "ca8a5649-32af-483c-e236-0ce5011f30f8"
      },
      "execution_count": 45,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "      id                     team pos     name  cost  selected_by_percent  \\\n",
              "0      1                  Arsenal   F  Balogun   4.4                  0.4   \n",
              "1      8                  Arsenal   F  G.Jesus   7.9                  2.1   \n",
              "2     13                  Arsenal   F  Nketiah   5.6                  6.9   \n",
              "3     39              Aston Villa   F    Davis   4.9                  0.2   \n",
              "4     44              Aston Villa   F    Duran   5.0                  0.1   \n",
              "..   ...                      ...  ..      ...   ...                  ...   \n",
              "709  647                 West Ham   G    Anang   4.0                  0.0   \n",
              "710  546  Wolverhampton Wanderers   G  Bentley   4.0                  0.4   \n",
              "711  564  Wolverhampton Wanderers   G     King   4.0                  0.8   \n",
              "712  569  Wolverhampton Wanderers   G  Jos√© S√°   5.0                  1.4   \n",
              "713  571  Wolverhampton Wanderers   G   ≈†arkiƒá   4.0                  0.4   \n",
              "\n",
              "     goals_scored  assists  bps  ict_index  ...  minutes  home_adjustment  \\\n",
              "0               0        0    0        0.0  ...        0              1.2   \n",
              "1               1        0   26       10.7  ...       15              1.2   \n",
              "2               2        1   64       24.6  ...      270              1.2   \n",
              "3               0        0    0        0.0  ...        0              1.1   \n",
              "4               1        0   33        7.5  ...       37              1.1   \n",
              "..            ...      ...  ...        ...  ...      ...              ...   \n",
              "709             0        0    0        0.0  ...        0              1.0   \n",
              "710             0        0    0        0.0  ...        0              0.8   \n",
              "711             0        0    0        0.0  ...        0              0.8   \n",
              "712             0        0   94       16.0  ...      360              0.8   \n",
              "713             0        0    0        0.0  ...        0              0.8   \n",
              "\n",
              "     xPallgw  xCSP   gw7   gw9   gw8   gw5   gw6  5GW Total  \n",
              "0        2.0   NaN  2.00  2.00  2.00  2.00  2.00      10.00  \n",
              "1        2.8   NaN  2.96  2.88  2.96  3.04  2.96      14.80  \n",
              "2        3.7   NaN  4.04  3.87  4.04  4.21  4.04      20.20  \n",
              "3        2.0   NaN  2.00  2.00  2.00  2.00  2.00      10.00  \n",
              "4        2.6   NaN  2.60  2.66  2.60  2.66  2.60      13.12  \n",
              "..       ...   ...   ...   ...   ...   ...   ...        ...  \n",
              "709     -0.7  -2.7 -0.16 -0.43 -0.16  0.11 -0.16      -0.80  \n",
              "710     -1.8  -3.8 -1.80 -1.80 -1.80 -0.66 -1.80      -7.86  \n",
              "711     -1.8  -3.8 -1.80 -1.80 -1.80 -0.66 -1.80      -7.86  \n",
              "712     -1.8  -3.8 -1.80 -1.80 -1.80 -0.66 -1.80      -7.86  \n",
              "713     -1.8  -3.8 -1.80 -1.80 -1.80 -0.66 -1.80      -7.86  \n",
              "\n",
              "[714 rows x 22 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-dde1b11e-74a6-4cc6-b8e0-7f259b5888dd\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>team</th>\n",
              "      <th>pos</th>\n",
              "      <th>name</th>\n",
              "      <th>cost</th>\n",
              "      <th>selected_by_percent</th>\n",
              "      <th>goals_scored</th>\n",
              "      <th>assists</th>\n",
              "      <th>bps</th>\n",
              "      <th>ict_index</th>\n",
              "      <th>...</th>\n",
              "      <th>minutes</th>\n",
              "      <th>home_adjustment</th>\n",
              "      <th>xPallgw</th>\n",
              "      <th>xCSP</th>\n",
              "      <th>gw7</th>\n",
              "      <th>gw9</th>\n",
              "      <th>gw8</th>\n",
              "      <th>gw5</th>\n",
              "      <th>gw6</th>\n",
              "      <th>5GW Total</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>1</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>F</td>\n",
              "      <td>Balogun</td>\n",
              "      <td>4.4</td>\n",
              "      <td>0.4</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>1.2</td>\n",
              "      <td>2.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>10.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>8</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>F</td>\n",
              "      <td>G.Jesus</td>\n",
              "      <td>7.9</td>\n",
              "      <td>2.1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>26</td>\n",
              "      <td>10.7</td>\n",
              "      <td>...</td>\n",
              "      <td>15</td>\n",
              "      <td>1.2</td>\n",
              "      <td>2.8</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2.96</td>\n",
              "      <td>2.88</td>\n",
              "      <td>2.96</td>\n",
              "      <td>3.04</td>\n",
              "      <td>2.96</td>\n",
              "      <td>14.80</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>13</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>F</td>\n",
              "      <td>Nketiah</td>\n",
              "      <td>5.6</td>\n",
              "      <td>6.9</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>64</td>\n",
              "      <td>24.6</td>\n",
              "      <td>...</td>\n",
              "      <td>270</td>\n",
              "      <td>1.2</td>\n",
              "      <td>3.7</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4.04</td>\n",
              "      <td>3.87</td>\n",
              "      <td>4.04</td>\n",
              "      <td>4.21</td>\n",
              "      <td>4.04</td>\n",
              "      <td>20.20</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>39</td>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>F</td>\n",
              "      <td>Davis</td>\n",
              "      <td>4.9</td>\n",
              "      <td>0.2</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>1.1</td>\n",
              "      <td>2.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>10.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>44</td>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>F</td>\n",
              "      <td>Duran</td>\n",
              "      <td>5.0</td>\n",
              "      <td>0.1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>33</td>\n",
              "      <td>7.5</td>\n",
              "      <td>...</td>\n",
              "      <td>37</td>\n",
              "      <td>1.1</td>\n",
              "      <td>2.6</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2.60</td>\n",
              "      <td>2.66</td>\n",
              "      <td>2.60</td>\n",
              "      <td>2.66</td>\n",
              "      <td>2.60</td>\n",
              "      <td>13.12</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>709</th>\n",
              "      <td>647</td>\n",
              "      <td>West Ham</td>\n",
              "      <td>G</td>\n",
              "      <td>Anang</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>-0.7</td>\n",
              "      <td>-2.7</td>\n",
              "      <td>-0.16</td>\n",
              "      <td>-0.43</td>\n",
              "      <td>-0.16</td>\n",
              "      <td>0.11</td>\n",
              "      <td>-0.16</td>\n",
              "      <td>-0.80</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>710</th>\n",
              "      <td>546</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>G</td>\n",
              "      <td>Bentley</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.4</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0.8</td>\n",
              "      <td>-1.8</td>\n",
              "      <td>-3.8</td>\n",
              "      <td>-1.80</td>\n",
              "      <td>-1.80</td>\n",
              "      <td>-1.80</td>\n",
              "      <td>-0.66</td>\n",
              "      <td>-1.80</td>\n",
              "      <td>-7.86</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>711</th>\n",
              "      <td>564</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>G</td>\n",
              "      <td>King</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.8</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0.8</td>\n",
              "      <td>-1.8</td>\n",
              "      <td>-3.8</td>\n",
              "      <td>-1.80</td>\n",
              "      <td>-1.80</td>\n",
              "      <td>-1.80</td>\n",
              "      <td>-0.66</td>\n",
              "      <td>-1.80</td>\n",
              "      <td>-7.86</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>712</th>\n",
              "      <td>569</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>G</td>\n",
              "      <td>Jos√© S√°</td>\n",
              "      <td>5.0</td>\n",
              "      <td>1.4</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>94</td>\n",
              "      <td>16.0</td>\n",
              "      <td>...</td>\n",
              "      <td>360</td>\n",
              "      <td>0.8</td>\n",
              "      <td>-1.8</td>\n",
              "      <td>-3.8</td>\n",
              "      <td>-1.80</td>\n",
              "      <td>-1.80</td>\n",
              "      <td>-1.80</td>\n",
              "      <td>-0.66</td>\n",
              "      <td>-1.80</td>\n",
              "      <td>-7.86</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>713</th>\n",
              "      <td>571</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>G</td>\n",
              "      <td>≈†arkiƒá</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.4</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0.8</td>\n",
              "      <td>-1.8</td>\n",
              "      <td>-3.8</td>\n",
              "      <td>-1.80</td>\n",
              "      <td>-1.80</td>\n",
              "      <td>-1.80</td>\n",
              "      <td>-0.66</td>\n",
              "      <td>-1.80</td>\n",
              "      <td>-7.86</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>714 rows √ó 22 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-dde1b11e-74a6-4cc6-b8e0-7f259b5888dd')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-dde1b11e-74a6-4cc6-b8e0-7f259b5888dd button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-dde1b11e-74a6-4cc6-b8e0-7f259b5888dd');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-016d025a-d496-4309-8869-54340c42fc59\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-016d025a-d496-4309-8869-54340c42fc59')\"\n",
              "            title=\"Suggest charts.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-016d025a-d496-4309-8869-54340c42fc59 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 45
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "rawdfgw228x.drop_duplicates(subset='name', keep='last', inplace=True)\n",
        "rawdfgw228x"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 530
        },
        "id": "Jud88GRHgLWf",
        "outputId": "b6958776-801d-412d-8f46-3c9a95ad3fda"
      },
      "execution_count": 46,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "      id                     team pos     name  cost  selected_by_percent  \\\n",
              "0      1                  Arsenal   F  Balogun   4.4                  0.4   \n",
              "1      8                  Arsenal   F  G.Jesus   7.9                  2.1   \n",
              "2     13                  Arsenal   F  Nketiah   5.6                  6.9   \n",
              "3     39              Aston Villa   F    Davis   4.9                  0.2   \n",
              "4     44              Aston Villa   F    Duran   5.0                  0.1   \n",
              "..   ...                      ...  ..      ...   ...                  ...   \n",
              "709  647                 West Ham   G    Anang   4.0                  0.0   \n",
              "710  546  Wolverhampton Wanderers   G  Bentley   4.0                  0.4   \n",
              "711  564  Wolverhampton Wanderers   G     King   4.0                  0.8   \n",
              "712  569  Wolverhampton Wanderers   G  Jos√© S√°   5.0                  1.4   \n",
              "713  571  Wolverhampton Wanderers   G   ≈†arkiƒá   4.0                  0.4   \n",
              "\n",
              "     goals_scored  assists  bps  ict_index  ...  minutes  home_adjustment  \\\n",
              "0               0        0    0        0.0  ...        0              1.2   \n",
              "1               1        0   26       10.7  ...       15              1.2   \n",
              "2               2        1   64       24.6  ...      270              1.2   \n",
              "3               0        0    0        0.0  ...        0              1.1   \n",
              "4               1        0   33        7.5  ...       37              1.1   \n",
              "..            ...      ...  ...        ...  ...      ...              ...   \n",
              "709             0        0    0        0.0  ...        0              1.0   \n",
              "710             0        0    0        0.0  ...        0              0.8   \n",
              "711             0        0    0        0.0  ...        0              0.8   \n",
              "712             0        0   94       16.0  ...      360              0.8   \n",
              "713             0        0    0        0.0  ...        0              0.8   \n",
              "\n",
              "     xPallgw  xCSP   gw7   gw9   gw8   gw5   gw6  5GW Total  \n",
              "0        2.0   NaN  2.00  2.00  2.00  2.00  2.00      10.00  \n",
              "1        2.8   NaN  2.96  2.88  2.96  3.04  2.96      14.80  \n",
              "2        3.7   NaN  4.04  3.87  4.04  4.21  4.04      20.20  \n",
              "3        2.0   NaN  2.00  2.00  2.00  2.00  2.00      10.00  \n",
              "4        2.6   NaN  2.60  2.66  2.60  2.66  2.60      13.12  \n",
              "..       ...   ...   ...   ...   ...   ...   ...        ...  \n",
              "709     -0.7  -2.7 -0.16 -0.43 -0.16  0.11 -0.16      -0.80  \n",
              "710     -1.8  -3.8 -1.80 -1.80 -1.80 -0.66 -1.80      -7.86  \n",
              "711     -1.8  -3.8 -1.80 -1.80 -1.80 -0.66 -1.80      -7.86  \n",
              "712     -1.8  -3.8 -1.80 -1.80 -1.80 -0.66 -1.80      -7.86  \n",
              "713     -1.8  -3.8 -1.80 -1.80 -1.80 -0.66 -1.80      -7.86  \n",
              "\n",
              "[693 rows x 22 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-8927b347-d79c-456f-b00b-8dd737b8d499\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>team</th>\n",
              "      <th>pos</th>\n",
              "      <th>name</th>\n",
              "      <th>cost</th>\n",
              "      <th>selected_by_percent</th>\n",
              "      <th>goals_scored</th>\n",
              "      <th>assists</th>\n",
              "      <th>bps</th>\n",
              "      <th>ict_index</th>\n",
              "      <th>...</th>\n",
              "      <th>minutes</th>\n",
              "      <th>home_adjustment</th>\n",
              "      <th>xPallgw</th>\n",
              "      <th>xCSP</th>\n",
              "      <th>gw7</th>\n",
              "      <th>gw9</th>\n",
              "      <th>gw8</th>\n",
              "      <th>gw5</th>\n",
              "      <th>gw6</th>\n",
              "      <th>5GW Total</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>1</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>F</td>\n",
              "      <td>Balogun</td>\n",
              "      <td>4.4</td>\n",
              "      <td>0.4</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>1.2</td>\n",
              "      <td>2.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>10.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>8</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>F</td>\n",
              "      <td>G.Jesus</td>\n",
              "      <td>7.9</td>\n",
              "      <td>2.1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>26</td>\n",
              "      <td>10.7</td>\n",
              "      <td>...</td>\n",
              "      <td>15</td>\n",
              "      <td>1.2</td>\n",
              "      <td>2.8</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2.96</td>\n",
              "      <td>2.88</td>\n",
              "      <td>2.96</td>\n",
              "      <td>3.04</td>\n",
              "      <td>2.96</td>\n",
              "      <td>14.80</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>13</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>F</td>\n",
              "      <td>Nketiah</td>\n",
              "      <td>5.6</td>\n",
              "      <td>6.9</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>64</td>\n",
              "      <td>24.6</td>\n",
              "      <td>...</td>\n",
              "      <td>270</td>\n",
              "      <td>1.2</td>\n",
              "      <td>3.7</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4.04</td>\n",
              "      <td>3.87</td>\n",
              "      <td>4.04</td>\n",
              "      <td>4.21</td>\n",
              "      <td>4.04</td>\n",
              "      <td>20.20</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>39</td>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>F</td>\n",
              "      <td>Davis</td>\n",
              "      <td>4.9</td>\n",
              "      <td>0.2</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>1.1</td>\n",
              "      <td>2.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>10.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>44</td>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>F</td>\n",
              "      <td>Duran</td>\n",
              "      <td>5.0</td>\n",
              "      <td>0.1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>33</td>\n",
              "      <td>7.5</td>\n",
              "      <td>...</td>\n",
              "      <td>37</td>\n",
              "      <td>1.1</td>\n",
              "      <td>2.6</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2.60</td>\n",
              "      <td>2.66</td>\n",
              "      <td>2.60</td>\n",
              "      <td>2.66</td>\n",
              "      <td>2.60</td>\n",
              "      <td>13.12</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>709</th>\n",
              "      <td>647</td>\n",
              "      <td>West Ham</td>\n",
              "      <td>G</td>\n",
              "      <td>Anang</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>-0.7</td>\n",
              "      <td>-2.7</td>\n",
              "      <td>-0.16</td>\n",
              "      <td>-0.43</td>\n",
              "      <td>-0.16</td>\n",
              "      <td>0.11</td>\n",
              "      <td>-0.16</td>\n",
              "      <td>-0.80</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>710</th>\n",
              "      <td>546</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>G</td>\n",
              "      <td>Bentley</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.4</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0.8</td>\n",
              "      <td>-1.8</td>\n",
              "      <td>-3.8</td>\n",
              "      <td>-1.80</td>\n",
              "      <td>-1.80</td>\n",
              "      <td>-1.80</td>\n",
              "      <td>-0.66</td>\n",
              "      <td>-1.80</td>\n",
              "      <td>-7.86</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>711</th>\n",
              "      <td>564</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>G</td>\n",
              "      <td>King</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.8</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0.8</td>\n",
              "      <td>-1.8</td>\n",
              "      <td>-3.8</td>\n",
              "      <td>-1.80</td>\n",
              "      <td>-1.80</td>\n",
              "      <td>-1.80</td>\n",
              "      <td>-0.66</td>\n",
              "      <td>-1.80</td>\n",
              "      <td>-7.86</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>712</th>\n",
              "      <td>569</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>G</td>\n",
              "      <td>Jos√© S√°</td>\n",
              "      <td>5.0</td>\n",
              "      <td>1.4</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>94</td>\n",
              "      <td>16.0</td>\n",
              "      <td>...</td>\n",
              "      <td>360</td>\n",
              "      <td>0.8</td>\n",
              "      <td>-1.8</td>\n",
              "      <td>-3.8</td>\n",
              "      <td>-1.80</td>\n",
              "      <td>-1.80</td>\n",
              "      <td>-1.80</td>\n",
              "      <td>-0.66</td>\n",
              "      <td>-1.80</td>\n",
              "      <td>-7.86</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>713</th>\n",
              "      <td>571</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>G</td>\n",
              "      <td>≈†arkiƒá</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.4</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0.8</td>\n",
              "      <td>-1.8</td>\n",
              "      <td>-3.8</td>\n",
              "      <td>-1.80</td>\n",
              "      <td>-1.80</td>\n",
              "      <td>-1.80</td>\n",
              "      <td>-0.66</td>\n",
              "      <td>-1.80</td>\n",
              "      <td>-7.86</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>693 rows √ó 22 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-8927b347-d79c-456f-b00b-8dd737b8d499')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-8927b347-d79c-456f-b00b-8dd737b8d499 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-8927b347-d79c-456f-b00b-8dd737b8d499');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-08763e42-58a3-42b1-9060-372ceb0fb603\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-08763e42-58a3-42b1-9060-372ceb0fb603')\"\n",
              "            title=\"Suggest charts.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-08763e42-58a3-42b1-9060-372ceb0fb603 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 46
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "from pandas import ExcelWriter\n",
        "writer = ExcelWriter('API model.xlsx')\n",
        "rawdfgw228x.to_excel(writer, sheet_name='Sheet1')\n",
        "gwadjustments59.to_excel(writer, sheet_name='Sheet2')\n",
        "#fplwithunderstat.to_excel(writer, sheet_name='Sheet3')\n",
        "\n",
        "# Close the Pandas Excel writer and output the Excel file.\n",
        "writer.save()"
      ],
      "metadata": {
        "id": "tdXsMsuwaWa4",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "17073970-4835-4ea9-d28b-b22be14e1df7"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "<ipython-input-167-8cf119597ac9>:8: FutureWarning:\n",
            "\n",
            "save is not part of the public API, usage can give unexpected results and will be removed in a future version\n",
            "\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#from google.colab import drive\n",
        "#drive.mount('/content/drive')"
      ],
      "metadata": {
        "id": "GzSzE5_Ckuq3"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "import shutil"
      ],
      "metadata": {
        "id": "xSIwXnyAk2op"
      },
      "execution_count": 47,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "#shutil.copy(\"/content/API model.xlsx\",\"/content/drive/MyDrive/FPL\")"
      ],
      "metadata": {
        "id": "O724A90vk3b4"
      },
      "execution_count": 48,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "rawdfgw228x.nlargest(50, '5GW Total')"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "id": "4ULMO_eqJXIT",
        "outputId": "8e2e84af-84f7-4232-9656-18902dd03a6c"
      },
      "execution_count": 49,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "      id                     team pos             name  cost  \\\n",
              "59   355          Manchester City   F          Haaland  14.1   \n",
              "148  108                Brentford   M           Mbeumo   6.8   \n",
              "100   19                  Arsenal   M             Saka   8.7   \n",
              "296  373        Manchester United   M      B.Fernandes   8.4   \n",
              "257  308                Liverpool   M            Salah  12.5   \n",
              "29   211                  Chelsea   F        N.Jackson   7.2   \n",
              "58   343          Manchester City   F        J.Alvarez   6.7   \n",
              "364  504                Tottenham   M         Maddison   7.8   \n",
              "15   132                 Brighton   F         Ferguson   6.0   \n",
              "213  226           Crystal Palace   M              Eze   6.3   \n",
              "12   119                Brentford   F            Wissa   6.2   \n",
              "305  396        Manchester United   M         Rashford   8.9   \n",
              "524  342          Manchester City   D              Ak√©   5.1   \n",
              "33   225           Crystal Palace   F          Edouard   5.5   \n",
              "196  199                  Chelsea   M             Enzo   5.0   \n",
              "169  143                 Brighton   M           Mitoma   6.5   \n",
              "372  526                 West Ham   M            Bowen   7.1   \n",
              "167  140                 Brighton   M            March   6.6   \n",
              "531  369          Manchester City   D           Walker   5.2   \n",
              "97    14                  Arsenal   M         √òdegaard   8.5   \n",
              "297  376        Manchester United   M         Casemiro   5.4   \n",
              "255  303                Liverpool   M        Luis D√≠az   7.7   \n",
              "47   293                Liverpool   F           Darwin   7.4   \n",
              "315  412         Newcastle United   M           Gordon   5.5   \n",
              "369  516                Tottenham   M              Son   9.1   \n",
              "238  270                   Fulham   M  De Cordova-Reid   5.5   \n",
              "523  341          Manchester City   D           Akanji   5.1   \n",
              "527  357          Manchester City   D          Laporte   4.9   \n",
              "89   590  Wolverhampton Wanderers   F            Cunha   5.5   \n",
              "16   135                 Brighton   F       Jo√£o Pedro   5.5   \n",
              "2     13                  Arsenal   F          Nketiah   5.6   \n",
              "201  216                  Chelsea   M         Sterling   7.2   \n",
              "223  249                  Everton   M       A.Doucoure   5.5   \n",
              "284  353          Manchester City   M            Foden   7.6   \n",
              "526  350          Manchester City   D            R√∫ben   5.5   \n",
              "529  366          Manchester City   D     Sergio G√≥mez   3.9   \n",
              "63   415         Newcastle United   F             Isak   7.7   \n",
              "377  539                 West Ham   M        L.Paquet√°   6.0   \n",
              "367  513                Tottenham   M             Sarr   4.5   \n",
              "164  134                 Brighton   M            Gross   6.4   \n",
              "290  365          Manchester City   M          Rodrigo   5.7   \n",
              "525  346          Manchester City   D          Cancelo   5.8   \n",
              "528  358          Manchester City   D          R.Lewis   4.5   \n",
              "530  368          Manchester City   D           Stones   5.3   \n",
              "532  616          Manchester City   D         Gvardiol   5.1   \n",
              "681  347          Manchester City   G           Carson   4.0   \n",
              "682  352          Manchester City   G       Ederson M.   5.6   \n",
              "683  361          Manchester City   G    Ortega Moreno   3.9   \n",
              "684  367          Manchester City   G          Steffen   4.0   \n",
              "326  603         Newcastle United   M           Barnes   6.4   \n",
              "\n",
              "     selected_by_percent  goals_scored  assists  bps  ict_index  ...  minutes  \\\n",
              "59                  91.9             6        1  161       54.4  ...      349   \n",
              "148                 26.9             4        0   89       43.1  ...      360   \n",
              "100                 65.7             2        1  100       52.4  ...      358   \n",
              "296                 21.5             1        1   75       40.1  ...      360   \n",
              "257                 25.8             2        2   75       45.5  ...      341   \n",
              "29                  19.8             1        0   31       31.8  ...      352   \n",
              "58                  13.3             2        3  116       42.2  ...      359   \n",
              "364                 26.2             2        2  109       50.1  ...      337   \n",
              "15                   7.8             4        0  103       33.1  ...      205   \n",
              "213                  9.9             1        0   75       42.3  ...      360   \n",
              "12                  16.5             2        1   70       25.6  ...      329   \n",
              "305                 35.9             1        2   42       28.9  ...      351   \n",
              "524                  7.5             1        0   74       12.1  ...      258   \n",
              "33                   2.4             3        0   82       40.2  ...      339   \n",
              "196                  4.1             0        0   42       31.7  ...      360   \n",
              "169                 40.5             1        3   90       42.4  ...      350   \n",
              "372                  9.8             3        1   91       38.5  ...      360   \n",
              "167                 10.3             3        0   85       35.5  ...      314   \n",
              "531                 11.7             0        0   85       14.2  ...      360   \n",
              "97                  21.3             2        0   77       27.2  ...      352   \n",
              "297                  3.9             1        0   60       25.7  ...      360   \n",
              "255                 12.9             2        0   54       21.3  ...      257   \n",
              "47                  10.7             2        2   74       16.7  ...      105   \n",
              "315                  1.2             1        1   47       21.1  ...      283   \n",
              "369                  9.9             3        0  104       39.4  ...      325   \n",
              "238                  0.2             1        1   42       15.2  ...      272   \n",
              "523                  8.7             0        0   69        8.2  ...      270   \n",
              "527                  0.2             0        0    4        2.9  ...       11   \n",
              "89                   0.6             1        0   45       22.8  ...      340   \n",
              "16                  14.8             1        0   36       23.4  ...      226   \n",
              "2                    6.9             2        1   64       24.6  ...      270   \n",
              "201                 16.4             2        1   82       38.1  ...      350   \n",
              "223                  0.2             1        0   44       32.7  ...      360   \n",
              "284                 13.8             0        3   78       34.2  ...      273   \n",
              "526                  8.4             0        0   54        7.4  ...      270   \n",
              "529                  0.9             0        1   15        3.6  ...       14   \n",
              "63                  27.5             2        0   70       19.3  ...      276   \n",
              "377                  1.9             1        1   68       27.5  ...      354   \n",
              "367                  3.3             1        1   63       27.4  ...      215   \n",
              "164                  2.4             1        0   78       42.4  ...      348   \n",
              "290                 12.6             2        1  107       30.9  ...      345   \n",
              "525                  1.7             0        0    0        0.0  ...        0   \n",
              "528                  0.4             0        0   27        1.1  ...       79   \n",
              "530                  5.2             0        0    0        0.0  ...        0   \n",
              "532                  6.2             0        0   45        6.8  ...      191   \n",
              "681                  0.1             0        0    0        0.0  ...        0   \n",
              "682                 20.9             0        0   76        7.6  ...      360   \n",
              "683                  0.7             0        0    0        0.0  ...        0   \n",
              "684                  0.1             0        0    0        0.0  ...        0   \n",
              "326                  2.9             1        1   41       11.9  ...       90   \n",
              "\n",
              "     home_adjustment  xPallgw  xCSP   gw7   gw9   gw8   gw5   gw6  5GW Total  \n",
              "59               1.3      6.7   NaN  9.05  7.64  9.05  8.11  9.05      42.90  \n",
              "148              1.1      7.7   NaN  8.84  8.84  8.84  7.13  8.84      42.49  \n",
              "100              1.2      5.9   NaN  6.68  6.29  6.68  7.07  6.68      33.40  \n",
              "296              1.1      5.8   NaN  6.56  6.94  6.56  5.80  6.56      32.42  \n",
              "257              1.2      5.6   NaN  6.32  6.68  6.32  6.68  6.32      32.32  \n",
              "29               1.1      5.4   NaN  5.40  5.06  5.40  6.08  5.40      27.34  \n",
              "58               1.3      4.4   NaN  5.60  4.88  5.60  5.12  5.60      26.80  \n",
              "364              1.0      5.4   NaN  4.72  5.74  4.72  6.08  4.72      25.98  \n",
              "15               1.1      4.6   NaN  5.38  4.08  5.38  4.60  5.38      24.82  \n",
              "213              1.0      4.9   NaN  5.19  4.61  5.19  4.61  5.19      24.79  \n",
              "12               1.1      4.5   NaN  5.00  5.00  5.00  4.25  5.00      24.25  \n",
              "305              1.1      4.4   NaN  4.88  5.12  4.88  4.40  4.88      24.16  \n",
              "524              1.3      4.0   1.3  5.00  4.40  5.00  4.60  5.00      24.00  \n",
              "33               1.0      4.7   NaN  4.97  4.43  4.97  4.43  4.97      23.77  \n",
              "196              1.1      4.7   NaN  4.70  4.43  4.70  5.24  4.70      23.77  \n",
              "169              1.1      4.4   NaN  5.12  3.92  5.12  4.40  5.12      23.68  \n",
              "372              1.0      5.4   NaN  4.72  5.06  4.72  4.38  4.72      23.60  \n",
              "167              1.1      4.3   NaN  4.99  3.84  4.99  4.30  4.99      23.11  \n",
              "531              1.3      3.8   1.3  4.70  4.16  4.70  4.34  4.70      22.60  \n",
              "97               1.2      4.0   NaN  4.40  4.20  4.40  4.60  4.40      22.00  \n",
              "297              1.1      4.0   NaN  4.40  4.60  4.40  4.00  4.40      21.80  \n",
              "255              1.2      3.9   NaN  4.28  4.47  4.28  4.47  4.28      21.78  \n",
              "47               1.2      3.8   NaN  4.16  4.34  4.16  4.34  4.16      21.16  \n",
              "315              1.2      3.7   NaN  4.38  3.87  4.38  3.87  4.38      20.88  \n",
              "369              1.0      4.3   NaN  3.84  4.53  3.84  4.76  3.84      20.81  \n",
              "238              0.9      4.2   NaN  3.98  3.98  3.98  4.64  3.98      20.56  \n",
              "523              1.3      3.5   1.3  4.25  3.80  4.25  3.95  4.25      20.50  \n",
              "527              1.3      3.5   1.3  4.25  3.80  4.25  3.95  4.25      20.50  \n",
              "89               0.8      4.2   NaN  4.20  4.20  4.20  3.54  4.20      20.34  \n",
              "16               1.1      3.8   NaN  4.34  3.44  4.34  3.80  4.34      20.26  \n",
              "2                1.2      3.7   NaN  4.04  3.87  4.04  4.21  4.04      20.20  \n",
              "201              1.1      4.0   NaN  4.00  3.80  4.00  4.40  4.00      20.20  \n",
              "223              0.9      4.6   NaN  4.08  3.82  4.08  3.82  4.08      19.88  \n",
              "284              1.3      3.4   NaN  4.10  3.68  4.10  3.82  4.10      19.80  \n",
              "526              1.3      3.4   1.3  4.10  3.68  4.10  3.82  4.10      19.80  \n",
              "529              1.3      3.4   1.3  4.10  3.68  4.10  3.82  4.10      19.80  \n",
              "63               1.2      3.5   NaN  4.10  3.65  4.10  3.65  4.10      19.60  \n",
              "377              1.0      4.4   NaN  3.92  4.16  3.92  3.68  3.92      19.60  \n",
              "367              1.0      4.0   NaN  3.60  4.20  3.60  4.40  3.60      19.40  \n",
              "164              1.1      3.6   NaN  4.08  3.28  4.08  3.60  4.08      19.12  \n",
              "290              1.3      3.3   NaN  3.95  3.56  3.95  3.69  3.95      19.10  \n",
              "525              1.3      3.3   1.3  3.95  3.56  3.95  3.69  3.95      19.10  \n",
              "528              1.3      3.3   1.3  3.95  3.56  3.95  3.69  3.95      19.10  \n",
              "530              1.3      3.3   1.3  3.95  3.56  3.95  3.69  3.95      19.10  \n",
              "532              1.3      3.3   1.3  3.95  3.56  3.95  3.69  3.95      19.10  \n",
              "681              1.3      3.3   1.3  3.95  3.56  3.95  3.69  3.95      19.10  \n",
              "682              1.3      3.3   1.3  3.95  3.56  3.95  3.69  3.95      19.10  \n",
              "683              1.3      3.3   1.3  3.95  3.56  3.95  3.69  3.95      19.10  \n",
              "684              1.3      3.3   1.3  3.95  3.56  3.95  3.69  3.95      19.10  \n",
              "326              1.2      3.4   NaN  3.96  3.54  3.96  3.54  3.96      18.96  \n",
              "\n",
              "[50 rows x 22 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-50cf3abf-9b67-4868-a64e-0fca5124abb2\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>team</th>\n",
              "      <th>pos</th>\n",
              "      <th>name</th>\n",
              "      <th>cost</th>\n",
              "      <th>selected_by_percent</th>\n",
              "      <th>goals_scored</th>\n",
              "      <th>assists</th>\n",
              "      <th>bps</th>\n",
              "      <th>ict_index</th>\n",
              "      <th>...</th>\n",
              "      <th>minutes</th>\n",
              "      <th>home_adjustment</th>\n",
              "      <th>xPallgw</th>\n",
              "      <th>xCSP</th>\n",
              "      <th>gw7</th>\n",
              "      <th>gw9</th>\n",
              "      <th>gw8</th>\n",
              "      <th>gw5</th>\n",
              "      <th>gw6</th>\n",
              "      <th>5GW Total</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>59</th>\n",
              "      <td>355</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>F</td>\n",
              "      <td>Haaland</td>\n",
              "      <td>14.1</td>\n",
              "      <td>91.9</td>\n",
              "      <td>6</td>\n",
              "      <td>1</td>\n",
              "      <td>161</td>\n",
              "      <td>54.4</td>\n",
              "      <td>...</td>\n",
              "      <td>349</td>\n",
              "      <td>1.3</td>\n",
              "      <td>6.7</td>\n",
              "      <td>NaN</td>\n",
              "      <td>9.05</td>\n",
              "      <td>7.64</td>\n",
              "      <td>9.05</td>\n",
              "      <td>8.11</td>\n",
              "      <td>9.05</td>\n",
              "      <td>42.90</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>148</th>\n",
              "      <td>108</td>\n",
              "      <td>Brentford</td>\n",
              "      <td>M</td>\n",
              "      <td>Mbeumo</td>\n",
              "      <td>6.8</td>\n",
              "      <td>26.9</td>\n",
              "      <td>4</td>\n",
              "      <td>0</td>\n",
              "      <td>89</td>\n",
              "      <td>43.1</td>\n",
              "      <td>...</td>\n",
              "      <td>360</td>\n",
              "      <td>1.1</td>\n",
              "      <td>7.7</td>\n",
              "      <td>NaN</td>\n",
              "      <td>8.84</td>\n",
              "      <td>8.84</td>\n",
              "      <td>8.84</td>\n",
              "      <td>7.13</td>\n",
              "      <td>8.84</td>\n",
              "      <td>42.49</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>100</th>\n",
              "      <td>19</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>M</td>\n",
              "      <td>Saka</td>\n",
              "      <td>8.7</td>\n",
              "      <td>65.7</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>100</td>\n",
              "      <td>52.4</td>\n",
              "      <td>...</td>\n",
              "      <td>358</td>\n",
              "      <td>1.2</td>\n",
              "      <td>5.9</td>\n",
              "      <td>NaN</td>\n",
              "      <td>6.68</td>\n",
              "      <td>6.29</td>\n",
              "      <td>6.68</td>\n",
              "      <td>7.07</td>\n",
              "      <td>6.68</td>\n",
              "      <td>33.40</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>296</th>\n",
              "      <td>373</td>\n",
              "      <td>Manchester United</td>\n",
              "      <td>M</td>\n",
              "      <td>B.Fernandes</td>\n",
              "      <td>8.4</td>\n",
              "      <td>21.5</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>75</td>\n",
              "      <td>40.1</td>\n",
              "      <td>...</td>\n",
              "      <td>360</td>\n",
              "      <td>1.1</td>\n",
              "      <td>5.8</td>\n",
              "      <td>NaN</td>\n",
              "      <td>6.56</td>\n",
              "      <td>6.94</td>\n",
              "      <td>6.56</td>\n",
              "      <td>5.80</td>\n",
              "      <td>6.56</td>\n",
              "      <td>32.42</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>257</th>\n",
              "      <td>308</td>\n",
              "      <td>Liverpool</td>\n",
              "      <td>M</td>\n",
              "      <td>Salah</td>\n",
              "      <td>12.5</td>\n",
              "      <td>25.8</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>75</td>\n",
              "      <td>45.5</td>\n",
              "      <td>...</td>\n",
              "      <td>341</td>\n",
              "      <td>1.2</td>\n",
              "      <td>5.6</td>\n",
              "      <td>NaN</td>\n",
              "      <td>6.32</td>\n",
              "      <td>6.68</td>\n",
              "      <td>6.32</td>\n",
              "      <td>6.68</td>\n",
              "      <td>6.32</td>\n",
              "      <td>32.32</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>29</th>\n",
              "      <td>211</td>\n",
              "      <td>Chelsea</td>\n",
              "      <td>F</td>\n",
              "      <td>N.Jackson</td>\n",
              "      <td>7.2</td>\n",
              "      <td>19.8</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>31</td>\n",
              "      <td>31.8</td>\n",
              "      <td>...</td>\n",
              "      <td>352</td>\n",
              "      <td>1.1</td>\n",
              "      <td>5.4</td>\n",
              "      <td>NaN</td>\n",
              "      <td>5.40</td>\n",
              "      <td>5.06</td>\n",
              "      <td>5.40</td>\n",
              "      <td>6.08</td>\n",
              "      <td>5.40</td>\n",
              "      <td>27.34</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>58</th>\n",
              "      <td>343</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>F</td>\n",
              "      <td>J.Alvarez</td>\n",
              "      <td>6.7</td>\n",
              "      <td>13.3</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "      <td>116</td>\n",
              "      <td>42.2</td>\n",
              "      <td>...</td>\n",
              "      <td>359</td>\n",
              "      <td>1.3</td>\n",
              "      <td>4.4</td>\n",
              "      <td>NaN</td>\n",
              "      <td>5.60</td>\n",
              "      <td>4.88</td>\n",
              "      <td>5.60</td>\n",
              "      <td>5.12</td>\n",
              "      <td>5.60</td>\n",
              "      <td>26.80</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>364</th>\n",
              "      <td>504</td>\n",
              "      <td>Tottenham</td>\n",
              "      <td>M</td>\n",
              "      <td>Maddison</td>\n",
              "      <td>7.8</td>\n",
              "      <td>26.2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>109</td>\n",
              "      <td>50.1</td>\n",
              "      <td>...</td>\n",
              "      <td>337</td>\n",
              "      <td>1.0</td>\n",
              "      <td>5.4</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4.72</td>\n",
              "      <td>5.74</td>\n",
              "      <td>4.72</td>\n",
              "      <td>6.08</td>\n",
              "      <td>4.72</td>\n",
              "      <td>25.98</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>15</th>\n",
              "      <td>132</td>\n",
              "      <td>Brighton</td>\n",
              "      <td>F</td>\n",
              "      <td>Ferguson</td>\n",
              "      <td>6.0</td>\n",
              "      <td>7.8</td>\n",
              "      <td>4</td>\n",
              "      <td>0</td>\n",
              "      <td>103</td>\n",
              "      <td>33.1</td>\n",
              "      <td>...</td>\n",
              "      <td>205</td>\n",
              "      <td>1.1</td>\n",
              "      <td>4.6</td>\n",
              "      <td>NaN</td>\n",
              "      <td>5.38</td>\n",
              "      <td>4.08</td>\n",
              "      <td>5.38</td>\n",
              "      <td>4.60</td>\n",
              "      <td>5.38</td>\n",
              "      <td>24.82</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>213</th>\n",
              "      <td>226</td>\n",
              "      <td>Crystal Palace</td>\n",
              "      <td>M</td>\n",
              "      <td>Eze</td>\n",
              "      <td>6.3</td>\n",
              "      <td>9.9</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>75</td>\n",
              "      <td>42.3</td>\n",
              "      <td>...</td>\n",
              "      <td>360</td>\n",
              "      <td>1.0</td>\n",
              "      <td>4.9</td>\n",
              "      <td>NaN</td>\n",
              "      <td>5.19</td>\n",
              "      <td>4.61</td>\n",
              "      <td>5.19</td>\n",
              "      <td>4.61</td>\n",
              "      <td>5.19</td>\n",
              "      <td>24.79</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>12</th>\n",
              "      <td>119</td>\n",
              "      <td>Brentford</td>\n",
              "      <td>F</td>\n",
              "      <td>Wissa</td>\n",
              "      <td>6.2</td>\n",
              "      <td>16.5</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>70</td>\n",
              "      <td>25.6</td>\n",
              "      <td>...</td>\n",
              "      <td>329</td>\n",
              "      <td>1.1</td>\n",
              "      <td>4.5</td>\n",
              "      <td>NaN</td>\n",
              "      <td>5.00</td>\n",
              "      <td>5.00</td>\n",
              "      <td>5.00</td>\n",
              "      <td>4.25</td>\n",
              "      <td>5.00</td>\n",
              "      <td>24.25</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>305</th>\n",
              "      <td>396</td>\n",
              "      <td>Manchester United</td>\n",
              "      <td>M</td>\n",
              "      <td>Rashford</td>\n",
              "      <td>8.9</td>\n",
              "      <td>35.9</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>42</td>\n",
              "      <td>28.9</td>\n",
              "      <td>...</td>\n",
              "      <td>351</td>\n",
              "      <td>1.1</td>\n",
              "      <td>4.4</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4.88</td>\n",
              "      <td>5.12</td>\n",
              "      <td>4.88</td>\n",
              "      <td>4.40</td>\n",
              "      <td>4.88</td>\n",
              "      <td>24.16</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>524</th>\n",
              "      <td>342</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>D</td>\n",
              "      <td>Ak√©</td>\n",
              "      <td>5.1</td>\n",
              "      <td>7.5</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>74</td>\n",
              "      <td>12.1</td>\n",
              "      <td>...</td>\n",
              "      <td>258</td>\n",
              "      <td>1.3</td>\n",
              "      <td>4.0</td>\n",
              "      <td>1.3</td>\n",
              "      <td>5.00</td>\n",
              "      <td>4.40</td>\n",
              "      <td>5.00</td>\n",
              "      <td>4.60</td>\n",
              "      <td>5.00</td>\n",
              "      <td>24.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>33</th>\n",
              "      <td>225</td>\n",
              "      <td>Crystal Palace</td>\n",
              "      <td>F</td>\n",
              "      <td>Edouard</td>\n",
              "      <td>5.5</td>\n",
              "      <td>2.4</td>\n",
              "      <td>3</td>\n",
              "      <td>0</td>\n",
              "      <td>82</td>\n",
              "      <td>40.2</td>\n",
              "      <td>...</td>\n",
              "      <td>339</td>\n",
              "      <td>1.0</td>\n",
              "      <td>4.7</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4.97</td>\n",
              "      <td>4.43</td>\n",
              "      <td>4.97</td>\n",
              "      <td>4.43</td>\n",
              "      <td>4.97</td>\n",
              "      <td>23.77</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>196</th>\n",
              "      <td>199</td>\n",
              "      <td>Chelsea</td>\n",
              "      <td>M</td>\n",
              "      <td>Enzo</td>\n",
              "      <td>5.0</td>\n",
              "      <td>4.1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>42</td>\n",
              "      <td>31.7</td>\n",
              "      <td>...</td>\n",
              "      <td>360</td>\n",
              "      <td>1.1</td>\n",
              "      <td>4.7</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4.70</td>\n",
              "      <td>4.43</td>\n",
              "      <td>4.70</td>\n",
              "      <td>5.24</td>\n",
              "      <td>4.70</td>\n",
              "      <td>23.77</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>169</th>\n",
              "      <td>143</td>\n",
              "      <td>Brighton</td>\n",
              "      <td>M</td>\n",
              "      <td>Mitoma</td>\n",
              "      <td>6.5</td>\n",
              "      <td>40.5</td>\n",
              "      <td>1</td>\n",
              "      <td>3</td>\n",
              "      <td>90</td>\n",
              "      <td>42.4</td>\n",
              "      <td>...</td>\n",
              "      <td>350</td>\n",
              "      <td>1.1</td>\n",
              "      <td>4.4</td>\n",
              "      <td>NaN</td>\n",
              "      <td>5.12</td>\n",
              "      <td>3.92</td>\n",
              "      <td>5.12</td>\n",
              "      <td>4.40</td>\n",
              "      <td>5.12</td>\n",
              "      <td>23.68</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>372</th>\n",
              "      <td>526</td>\n",
              "      <td>West Ham</td>\n",
              "      <td>M</td>\n",
              "      <td>Bowen</td>\n",
              "      <td>7.1</td>\n",
              "      <td>9.8</td>\n",
              "      <td>3</td>\n",
              "      <td>1</td>\n",
              "      <td>91</td>\n",
              "      <td>38.5</td>\n",
              "      <td>...</td>\n",
              "      <td>360</td>\n",
              "      <td>1.0</td>\n",
              "      <td>5.4</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4.72</td>\n",
              "      <td>5.06</td>\n",
              "      <td>4.72</td>\n",
              "      <td>4.38</td>\n",
              "      <td>4.72</td>\n",
              "      <td>23.60</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>167</th>\n",
              "      <td>140</td>\n",
              "      <td>Brighton</td>\n",
              "      <td>M</td>\n",
              "      <td>March</td>\n",
              "      <td>6.6</td>\n",
              "      <td>10.3</td>\n",
              "      <td>3</td>\n",
              "      <td>0</td>\n",
              "      <td>85</td>\n",
              "      <td>35.5</td>\n",
              "      <td>...</td>\n",
              "      <td>314</td>\n",
              "      <td>1.1</td>\n",
              "      <td>4.3</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4.99</td>\n",
              "      <td>3.84</td>\n",
              "      <td>4.99</td>\n",
              "      <td>4.30</td>\n",
              "      <td>4.99</td>\n",
              "      <td>23.11</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>531</th>\n",
              "      <td>369</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>D</td>\n",
              "      <td>Walker</td>\n",
              "      <td>5.2</td>\n",
              "      <td>11.7</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>85</td>\n",
              "      <td>14.2</td>\n",
              "      <td>...</td>\n",
              "      <td>360</td>\n",
              "      <td>1.3</td>\n",
              "      <td>3.8</td>\n",
              "      <td>1.3</td>\n",
              "      <td>4.70</td>\n",
              "      <td>4.16</td>\n",
              "      <td>4.70</td>\n",
              "      <td>4.34</td>\n",
              "      <td>4.70</td>\n",
              "      <td>22.60</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>97</th>\n",
              "      <td>14</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>M</td>\n",
              "      <td>√òdegaard</td>\n",
              "      <td>8.5</td>\n",
              "      <td>21.3</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>77</td>\n",
              "      <td>27.2</td>\n",
              "      <td>...</td>\n",
              "      <td>352</td>\n",
              "      <td>1.2</td>\n",
              "      <td>4.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4.40</td>\n",
              "      <td>4.20</td>\n",
              "      <td>4.40</td>\n",
              "      <td>4.60</td>\n",
              "      <td>4.40</td>\n",
              "      <td>22.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>297</th>\n",
              "      <td>376</td>\n",
              "      <td>Manchester United</td>\n",
              "      <td>M</td>\n",
              "      <td>Casemiro</td>\n",
              "      <td>5.4</td>\n",
              "      <td>3.9</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>60</td>\n",
              "      <td>25.7</td>\n",
              "      <td>...</td>\n",
              "      <td>360</td>\n",
              "      <td>1.1</td>\n",
              "      <td>4.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4.40</td>\n",
              "      <td>4.60</td>\n",
              "      <td>4.40</td>\n",
              "      <td>4.00</td>\n",
              "      <td>4.40</td>\n",
              "      <td>21.80</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>255</th>\n",
              "      <td>303</td>\n",
              "      <td>Liverpool</td>\n",
              "      <td>M</td>\n",
              "      <td>Luis D√≠az</td>\n",
              "      <td>7.7</td>\n",
              "      <td>12.9</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>54</td>\n",
              "      <td>21.3</td>\n",
              "      <td>...</td>\n",
              "      <td>257</td>\n",
              "      <td>1.2</td>\n",
              "      <td>3.9</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4.28</td>\n",
              "      <td>4.47</td>\n",
              "      <td>4.28</td>\n",
              "      <td>4.47</td>\n",
              "      <td>4.28</td>\n",
              "      <td>21.78</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>47</th>\n",
              "      <td>293</td>\n",
              "      <td>Liverpool</td>\n",
              "      <td>F</td>\n",
              "      <td>Darwin</td>\n",
              "      <td>7.4</td>\n",
              "      <td>10.7</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>74</td>\n",
              "      <td>16.7</td>\n",
              "      <td>...</td>\n",
              "      <td>105</td>\n",
              "      <td>1.2</td>\n",
              "      <td>3.8</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4.16</td>\n",
              "      <td>4.34</td>\n",
              "      <td>4.16</td>\n",
              "      <td>4.34</td>\n",
              "      <td>4.16</td>\n",
              "      <td>21.16</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>315</th>\n",
              "      <td>412</td>\n",
              "      <td>Newcastle United</td>\n",
              "      <td>M</td>\n",
              "      <td>Gordon</td>\n",
              "      <td>5.5</td>\n",
              "      <td>1.2</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>47</td>\n",
              "      <td>21.1</td>\n",
              "      <td>...</td>\n",
              "      <td>283</td>\n",
              "      <td>1.2</td>\n",
              "      <td>3.7</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4.38</td>\n",
              "      <td>3.87</td>\n",
              "      <td>4.38</td>\n",
              "      <td>3.87</td>\n",
              "      <td>4.38</td>\n",
              "      <td>20.88</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>369</th>\n",
              "      <td>516</td>\n",
              "      <td>Tottenham</td>\n",
              "      <td>M</td>\n",
              "      <td>Son</td>\n",
              "      <td>9.1</td>\n",
              "      <td>9.9</td>\n",
              "      <td>3</td>\n",
              "      <td>0</td>\n",
              "      <td>104</td>\n",
              "      <td>39.4</td>\n",
              "      <td>...</td>\n",
              "      <td>325</td>\n",
              "      <td>1.0</td>\n",
              "      <td>4.3</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.84</td>\n",
              "      <td>4.53</td>\n",
              "      <td>3.84</td>\n",
              "      <td>4.76</td>\n",
              "      <td>3.84</td>\n",
              "      <td>20.81</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>238</th>\n",
              "      <td>270</td>\n",
              "      <td>Fulham</td>\n",
              "      <td>M</td>\n",
              "      <td>De Cordova-Reid</td>\n",
              "      <td>5.5</td>\n",
              "      <td>0.2</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>42</td>\n",
              "      <td>15.2</td>\n",
              "      <td>...</td>\n",
              "      <td>272</td>\n",
              "      <td>0.9</td>\n",
              "      <td>4.2</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.98</td>\n",
              "      <td>3.98</td>\n",
              "      <td>3.98</td>\n",
              "      <td>4.64</td>\n",
              "      <td>3.98</td>\n",
              "      <td>20.56</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>523</th>\n",
              "      <td>341</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>D</td>\n",
              "      <td>Akanji</td>\n",
              "      <td>5.1</td>\n",
              "      <td>8.7</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>69</td>\n",
              "      <td>8.2</td>\n",
              "      <td>...</td>\n",
              "      <td>270</td>\n",
              "      <td>1.3</td>\n",
              "      <td>3.5</td>\n",
              "      <td>1.3</td>\n",
              "      <td>4.25</td>\n",
              "      <td>3.80</td>\n",
              "      <td>4.25</td>\n",
              "      <td>3.95</td>\n",
              "      <td>4.25</td>\n",
              "      <td>20.50</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>527</th>\n",
              "      <td>357</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>D</td>\n",
              "      <td>Laporte</td>\n",
              "      <td>4.9</td>\n",
              "      <td>0.2</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>4</td>\n",
              "      <td>2.9</td>\n",
              "      <td>...</td>\n",
              "      <td>11</td>\n",
              "      <td>1.3</td>\n",
              "      <td>3.5</td>\n",
              "      <td>1.3</td>\n",
              "      <td>4.25</td>\n",
              "      <td>3.80</td>\n",
              "      <td>4.25</td>\n",
              "      <td>3.95</td>\n",
              "      <td>4.25</td>\n",
              "      <td>20.50</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>89</th>\n",
              "      <td>590</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>F</td>\n",
              "      <td>Cunha</td>\n",
              "      <td>5.5</td>\n",
              "      <td>0.6</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>45</td>\n",
              "      <td>22.8</td>\n",
              "      <td>...</td>\n",
              "      <td>340</td>\n",
              "      <td>0.8</td>\n",
              "      <td>4.2</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4.20</td>\n",
              "      <td>4.20</td>\n",
              "      <td>4.20</td>\n",
              "      <td>3.54</td>\n",
              "      <td>4.20</td>\n",
              "      <td>20.34</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>16</th>\n",
              "      <td>135</td>\n",
              "      <td>Brighton</td>\n",
              "      <td>F</td>\n",
              "      <td>Jo√£o Pedro</td>\n",
              "      <td>5.5</td>\n",
              "      <td>14.8</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>36</td>\n",
              "      <td>23.4</td>\n",
              "      <td>...</td>\n",
              "      <td>226</td>\n",
              "      <td>1.1</td>\n",
              "      <td>3.8</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4.34</td>\n",
              "      <td>3.44</td>\n",
              "      <td>4.34</td>\n",
              "      <td>3.80</td>\n",
              "      <td>4.34</td>\n",
              "      <td>20.26</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>13</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>F</td>\n",
              "      <td>Nketiah</td>\n",
              "      <td>5.6</td>\n",
              "      <td>6.9</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>64</td>\n",
              "      <td>24.6</td>\n",
              "      <td>...</td>\n",
              "      <td>270</td>\n",
              "      <td>1.2</td>\n",
              "      <td>3.7</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4.04</td>\n",
              "      <td>3.87</td>\n",
              "      <td>4.04</td>\n",
              "      <td>4.21</td>\n",
              "      <td>4.04</td>\n",
              "      <td>20.20</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>201</th>\n",
              "      <td>216</td>\n",
              "      <td>Chelsea</td>\n",
              "      <td>M</td>\n",
              "      <td>Sterling</td>\n",
              "      <td>7.2</td>\n",
              "      <td>16.4</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>82</td>\n",
              "      <td>38.1</td>\n",
              "      <td>...</td>\n",
              "      <td>350</td>\n",
              "      <td>1.1</td>\n",
              "      <td>4.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4.00</td>\n",
              "      <td>3.80</td>\n",
              "      <td>4.00</td>\n",
              "      <td>4.40</td>\n",
              "      <td>4.00</td>\n",
              "      <td>20.20</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>223</th>\n",
              "      <td>249</td>\n",
              "      <td>Everton</td>\n",
              "      <td>M</td>\n",
              "      <td>A.Doucoure</td>\n",
              "      <td>5.5</td>\n",
              "      <td>0.2</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>44</td>\n",
              "      <td>32.7</td>\n",
              "      <td>...</td>\n",
              "      <td>360</td>\n",
              "      <td>0.9</td>\n",
              "      <td>4.6</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4.08</td>\n",
              "      <td>3.82</td>\n",
              "      <td>4.08</td>\n",
              "      <td>3.82</td>\n",
              "      <td>4.08</td>\n",
              "      <td>19.88</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>284</th>\n",
              "      <td>353</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>M</td>\n",
              "      <td>Foden</td>\n",
              "      <td>7.6</td>\n",
              "      <td>13.8</td>\n",
              "      <td>0</td>\n",
              "      <td>3</td>\n",
              "      <td>78</td>\n",
              "      <td>34.2</td>\n",
              "      <td>...</td>\n",
              "      <td>273</td>\n",
              "      <td>1.3</td>\n",
              "      <td>3.4</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4.10</td>\n",
              "      <td>3.68</td>\n",
              "      <td>4.10</td>\n",
              "      <td>3.82</td>\n",
              "      <td>4.10</td>\n",
              "      <td>19.80</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>526</th>\n",
              "      <td>350</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>D</td>\n",
              "      <td>R√∫ben</td>\n",
              "      <td>5.5</td>\n",
              "      <td>8.4</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>54</td>\n",
              "      <td>7.4</td>\n",
              "      <td>...</td>\n",
              "      <td>270</td>\n",
              "      <td>1.3</td>\n",
              "      <td>3.4</td>\n",
              "      <td>1.3</td>\n",
              "      <td>4.10</td>\n",
              "      <td>3.68</td>\n",
              "      <td>4.10</td>\n",
              "      <td>3.82</td>\n",
              "      <td>4.10</td>\n",
              "      <td>19.80</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>529</th>\n",
              "      <td>366</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>D</td>\n",
              "      <td>Sergio G√≥mez</td>\n",
              "      <td>3.9</td>\n",
              "      <td>0.9</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>15</td>\n",
              "      <td>3.6</td>\n",
              "      <td>...</td>\n",
              "      <td>14</td>\n",
              "      <td>1.3</td>\n",
              "      <td>3.4</td>\n",
              "      <td>1.3</td>\n",
              "      <td>4.10</td>\n",
              "      <td>3.68</td>\n",
              "      <td>4.10</td>\n",
              "      <td>3.82</td>\n",
              "      <td>4.10</td>\n",
              "      <td>19.80</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>63</th>\n",
              "      <td>415</td>\n",
              "      <td>Newcastle United</td>\n",
              "      <td>F</td>\n",
              "      <td>Isak</td>\n",
              "      <td>7.7</td>\n",
              "      <td>27.5</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>70</td>\n",
              "      <td>19.3</td>\n",
              "      <td>...</td>\n",
              "      <td>276</td>\n",
              "      <td>1.2</td>\n",
              "      <td>3.5</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4.10</td>\n",
              "      <td>3.65</td>\n",
              "      <td>4.10</td>\n",
              "      <td>3.65</td>\n",
              "      <td>4.10</td>\n",
              "      <td>19.60</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>377</th>\n",
              "      <td>539</td>\n",
              "      <td>West Ham</td>\n",
              "      <td>M</td>\n",
              "      <td>L.Paquet√°</td>\n",
              "      <td>6.0</td>\n",
              "      <td>1.9</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>68</td>\n",
              "      <td>27.5</td>\n",
              "      <td>...</td>\n",
              "      <td>354</td>\n",
              "      <td>1.0</td>\n",
              "      <td>4.4</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.92</td>\n",
              "      <td>4.16</td>\n",
              "      <td>3.92</td>\n",
              "      <td>3.68</td>\n",
              "      <td>3.92</td>\n",
              "      <td>19.60</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>367</th>\n",
              "      <td>513</td>\n",
              "      <td>Tottenham</td>\n",
              "      <td>M</td>\n",
              "      <td>Sarr</td>\n",
              "      <td>4.5</td>\n",
              "      <td>3.3</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>63</td>\n",
              "      <td>27.4</td>\n",
              "      <td>...</td>\n",
              "      <td>215</td>\n",
              "      <td>1.0</td>\n",
              "      <td>4.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.60</td>\n",
              "      <td>4.20</td>\n",
              "      <td>3.60</td>\n",
              "      <td>4.40</td>\n",
              "      <td>3.60</td>\n",
              "      <td>19.40</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>164</th>\n",
              "      <td>134</td>\n",
              "      <td>Brighton</td>\n",
              "      <td>M</td>\n",
              "      <td>Gross</td>\n",
              "      <td>6.4</td>\n",
              "      <td>2.4</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>78</td>\n",
              "      <td>42.4</td>\n",
              "      <td>...</td>\n",
              "      <td>348</td>\n",
              "      <td>1.1</td>\n",
              "      <td>3.6</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4.08</td>\n",
              "      <td>3.28</td>\n",
              "      <td>4.08</td>\n",
              "      <td>3.60</td>\n",
              "      <td>4.08</td>\n",
              "      <td>19.12</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>290</th>\n",
              "      <td>365</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>M</td>\n",
              "      <td>Rodrigo</td>\n",
              "      <td>5.7</td>\n",
              "      <td>12.6</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>107</td>\n",
              "      <td>30.9</td>\n",
              "      <td>...</td>\n",
              "      <td>345</td>\n",
              "      <td>1.3</td>\n",
              "      <td>3.3</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.95</td>\n",
              "      <td>3.56</td>\n",
              "      <td>3.95</td>\n",
              "      <td>3.69</td>\n",
              "      <td>3.95</td>\n",
              "      <td>19.10</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>525</th>\n",
              "      <td>346</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>D</td>\n",
              "      <td>Cancelo</td>\n",
              "      <td>5.8</td>\n",
              "      <td>1.7</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>1.3</td>\n",
              "      <td>3.3</td>\n",
              "      <td>1.3</td>\n",
              "      <td>3.95</td>\n",
              "      <td>3.56</td>\n",
              "      <td>3.95</td>\n",
              "      <td>3.69</td>\n",
              "      <td>3.95</td>\n",
              "      <td>19.10</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>528</th>\n",
              "      <td>358</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>D</td>\n",
              "      <td>R.Lewis</td>\n",
              "      <td>4.5</td>\n",
              "      <td>0.4</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>27</td>\n",
              "      <td>1.1</td>\n",
              "      <td>...</td>\n",
              "      <td>79</td>\n",
              "      <td>1.3</td>\n",
              "      <td>3.3</td>\n",
              "      <td>1.3</td>\n",
              "      <td>3.95</td>\n",
              "      <td>3.56</td>\n",
              "      <td>3.95</td>\n",
              "      <td>3.69</td>\n",
              "      <td>3.95</td>\n",
              "      <td>19.10</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>530</th>\n",
              "      <td>368</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>D</td>\n",
              "      <td>Stones</td>\n",
              "      <td>5.3</td>\n",
              "      <td>5.2</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>1.3</td>\n",
              "      <td>3.3</td>\n",
              "      <td>1.3</td>\n",
              "      <td>3.95</td>\n",
              "      <td>3.56</td>\n",
              "      <td>3.95</td>\n",
              "      <td>3.69</td>\n",
              "      <td>3.95</td>\n",
              "      <td>19.10</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>532</th>\n",
              "      <td>616</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>D</td>\n",
              "      <td>Gvardiol</td>\n",
              "      <td>5.1</td>\n",
              "      <td>6.2</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>45</td>\n",
              "      <td>6.8</td>\n",
              "      <td>...</td>\n",
              "      <td>191</td>\n",
              "      <td>1.3</td>\n",
              "      <td>3.3</td>\n",
              "      <td>1.3</td>\n",
              "      <td>3.95</td>\n",
              "      <td>3.56</td>\n",
              "      <td>3.95</td>\n",
              "      <td>3.69</td>\n",
              "      <td>3.95</td>\n",
              "      <td>19.10</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>681</th>\n",
              "      <td>347</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>G</td>\n",
              "      <td>Carson</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>1.3</td>\n",
              "      <td>3.3</td>\n",
              "      <td>1.3</td>\n",
              "      <td>3.95</td>\n",
              "      <td>3.56</td>\n",
              "      <td>3.95</td>\n",
              "      <td>3.69</td>\n",
              "      <td>3.95</td>\n",
              "      <td>19.10</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>682</th>\n",
              "      <td>352</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>G</td>\n",
              "      <td>Ederson M.</td>\n",
              "      <td>5.6</td>\n",
              "      <td>20.9</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>76</td>\n",
              "      <td>7.6</td>\n",
              "      <td>...</td>\n",
              "      <td>360</td>\n",
              "      <td>1.3</td>\n",
              "      <td>3.3</td>\n",
              "      <td>1.3</td>\n",
              "      <td>3.95</td>\n",
              "      <td>3.56</td>\n",
              "      <td>3.95</td>\n",
              "      <td>3.69</td>\n",
              "      <td>3.95</td>\n",
              "      <td>19.10</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>683</th>\n",
              "      <td>361</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>G</td>\n",
              "      <td>Ortega Moreno</td>\n",
              "      <td>3.9</td>\n",
              "      <td>0.7</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>1.3</td>\n",
              "      <td>3.3</td>\n",
              "      <td>1.3</td>\n",
              "      <td>3.95</td>\n",
              "      <td>3.56</td>\n",
              "      <td>3.95</td>\n",
              "      <td>3.69</td>\n",
              "      <td>3.95</td>\n",
              "      <td>19.10</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>684</th>\n",
              "      <td>367</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>G</td>\n",
              "      <td>Steffen</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>1.3</td>\n",
              "      <td>3.3</td>\n",
              "      <td>1.3</td>\n",
              "      <td>3.95</td>\n",
              "      <td>3.56</td>\n",
              "      <td>3.95</td>\n",
              "      <td>3.69</td>\n",
              "      <td>3.95</td>\n",
              "      <td>19.10</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>326</th>\n",
              "      <td>603</td>\n",
              "      <td>Newcastle United</td>\n",
              "      <td>M</td>\n",
              "      <td>Barnes</td>\n",
              "      <td>6.4</td>\n",
              "      <td>2.9</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>41</td>\n",
              "      <td>11.9</td>\n",
              "      <td>...</td>\n",
              "      <td>90</td>\n",
              "      <td>1.2</td>\n",
              "      <td>3.4</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.96</td>\n",
              "      <td>3.54</td>\n",
              "      <td>3.96</td>\n",
              "      <td>3.54</td>\n",
              "      <td>3.96</td>\n",
              "      <td>18.96</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>50 rows √ó 22 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-50cf3abf-9b67-4868-a64e-0fca5124abb2')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-50cf3abf-9b67-4868-a64e-0fca5124abb2 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-50cf3abf-9b67-4868-a64e-0fca5124abb2');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-dd7a8777-1f14-4a26-b344-060181cd4079\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-dd7a8777-1f14-4a26-b344-060181cd4079')\"\n",
              "            title=\"Suggest charts.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-dd7a8777-1f14-4a26-b344-060181cd4079 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 49
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "Top50 = rawdfgw228x.nlargest(50, '5GW Total')\n",
        "Top50"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "id": "Vuuihhw-Jx7s",
        "outputId": "74635bb9-d92a-4fe1-e2b3-a5f75e835eca"
      },
      "execution_count": 50,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "      id                     team pos             name  cost  \\\n",
              "59   355          Manchester City   F          Haaland  14.1   \n",
              "148  108                Brentford   M           Mbeumo   6.8   \n",
              "100   19                  Arsenal   M             Saka   8.7   \n",
              "296  373        Manchester United   M      B.Fernandes   8.4   \n",
              "257  308                Liverpool   M            Salah  12.5   \n",
              "29   211                  Chelsea   F        N.Jackson   7.2   \n",
              "58   343          Manchester City   F        J.Alvarez   6.7   \n",
              "364  504                Tottenham   M         Maddison   7.8   \n",
              "15   132                 Brighton   F         Ferguson   6.0   \n",
              "213  226           Crystal Palace   M              Eze   6.3   \n",
              "12   119                Brentford   F            Wissa   6.2   \n",
              "305  396        Manchester United   M         Rashford   8.9   \n",
              "524  342          Manchester City   D              Ak√©   5.1   \n",
              "33   225           Crystal Palace   F          Edouard   5.5   \n",
              "196  199                  Chelsea   M             Enzo   5.0   \n",
              "169  143                 Brighton   M           Mitoma   6.5   \n",
              "372  526                 West Ham   M            Bowen   7.1   \n",
              "167  140                 Brighton   M            March   6.6   \n",
              "531  369          Manchester City   D           Walker   5.2   \n",
              "97    14                  Arsenal   M         √òdegaard   8.5   \n",
              "297  376        Manchester United   M         Casemiro   5.4   \n",
              "255  303                Liverpool   M        Luis D√≠az   7.7   \n",
              "47   293                Liverpool   F           Darwin   7.4   \n",
              "315  412         Newcastle United   M           Gordon   5.5   \n",
              "369  516                Tottenham   M              Son   9.1   \n",
              "238  270                   Fulham   M  De Cordova-Reid   5.5   \n",
              "523  341          Manchester City   D           Akanji   5.1   \n",
              "527  357          Manchester City   D          Laporte   4.9   \n",
              "89   590  Wolverhampton Wanderers   F            Cunha   5.5   \n",
              "16   135                 Brighton   F       Jo√£o Pedro   5.5   \n",
              "2     13                  Arsenal   F          Nketiah   5.6   \n",
              "201  216                  Chelsea   M         Sterling   7.2   \n",
              "223  249                  Everton   M       A.Doucoure   5.5   \n",
              "284  353          Manchester City   M            Foden   7.6   \n",
              "526  350          Manchester City   D            R√∫ben   5.5   \n",
              "529  366          Manchester City   D     Sergio G√≥mez   3.9   \n",
              "63   415         Newcastle United   F             Isak   7.7   \n",
              "377  539                 West Ham   M        L.Paquet√°   6.0   \n",
              "367  513                Tottenham   M             Sarr   4.5   \n",
              "164  134                 Brighton   M            Gross   6.4   \n",
              "290  365          Manchester City   M          Rodrigo   5.7   \n",
              "525  346          Manchester City   D          Cancelo   5.8   \n",
              "528  358          Manchester City   D          R.Lewis   4.5   \n",
              "530  368          Manchester City   D           Stones   5.3   \n",
              "532  616          Manchester City   D         Gvardiol   5.1   \n",
              "681  347          Manchester City   G           Carson   4.0   \n",
              "682  352          Manchester City   G       Ederson M.   5.6   \n",
              "683  361          Manchester City   G    Ortega Moreno   3.9   \n",
              "684  367          Manchester City   G          Steffen   4.0   \n",
              "326  603         Newcastle United   M           Barnes   6.4   \n",
              "\n",
              "     selected_by_percent  goals_scored  assists  bps  ict_index  ...  minutes  \\\n",
              "59                  91.9             6        1  161       54.4  ...      349   \n",
              "148                 26.9             4        0   89       43.1  ...      360   \n",
              "100                 65.7             2        1  100       52.4  ...      358   \n",
              "296                 21.5             1        1   75       40.1  ...      360   \n",
              "257                 25.8             2        2   75       45.5  ...      341   \n",
              "29                  19.8             1        0   31       31.8  ...      352   \n",
              "58                  13.3             2        3  116       42.2  ...      359   \n",
              "364                 26.2             2        2  109       50.1  ...      337   \n",
              "15                   7.8             4        0  103       33.1  ...      205   \n",
              "213                  9.9             1        0   75       42.3  ...      360   \n",
              "12                  16.5             2        1   70       25.6  ...      329   \n",
              "305                 35.9             1        2   42       28.9  ...      351   \n",
              "524                  7.5             1        0   74       12.1  ...      258   \n",
              "33                   2.4             3        0   82       40.2  ...      339   \n",
              "196                  4.1             0        0   42       31.7  ...      360   \n",
              "169                 40.5             1        3   90       42.4  ...      350   \n",
              "372                  9.8             3        1   91       38.5  ...      360   \n",
              "167                 10.3             3        0   85       35.5  ...      314   \n",
              "531                 11.7             0        0   85       14.2  ...      360   \n",
              "97                  21.3             2        0   77       27.2  ...      352   \n",
              "297                  3.9             1        0   60       25.7  ...      360   \n",
              "255                 12.9             2        0   54       21.3  ...      257   \n",
              "47                  10.7             2        2   74       16.7  ...      105   \n",
              "315                  1.2             1        1   47       21.1  ...      283   \n",
              "369                  9.9             3        0  104       39.4  ...      325   \n",
              "238                  0.2             1        1   42       15.2  ...      272   \n",
              "523                  8.7             0        0   69        8.2  ...      270   \n",
              "527                  0.2             0        0    4        2.9  ...       11   \n",
              "89                   0.6             1        0   45       22.8  ...      340   \n",
              "16                  14.8             1        0   36       23.4  ...      226   \n",
              "2                    6.9             2        1   64       24.6  ...      270   \n",
              "201                 16.4             2        1   82       38.1  ...      350   \n",
              "223                  0.2             1        0   44       32.7  ...      360   \n",
              "284                 13.8             0        3   78       34.2  ...      273   \n",
              "526                  8.4             0        0   54        7.4  ...      270   \n",
              "529                  0.9             0        1   15        3.6  ...       14   \n",
              "63                  27.5             2        0   70       19.3  ...      276   \n",
              "377                  1.9             1        1   68       27.5  ...      354   \n",
              "367                  3.3             1        1   63       27.4  ...      215   \n",
              "164                  2.4             1        0   78       42.4  ...      348   \n",
              "290                 12.6             2        1  107       30.9  ...      345   \n",
              "525                  1.7             0        0    0        0.0  ...        0   \n",
              "528                  0.4             0        0   27        1.1  ...       79   \n",
              "530                  5.2             0        0    0        0.0  ...        0   \n",
              "532                  6.2             0        0   45        6.8  ...      191   \n",
              "681                  0.1             0        0    0        0.0  ...        0   \n",
              "682                 20.9             0        0   76        7.6  ...      360   \n",
              "683                  0.7             0        0    0        0.0  ...        0   \n",
              "684                  0.1             0        0    0        0.0  ...        0   \n",
              "326                  2.9             1        1   41       11.9  ...       90   \n",
              "\n",
              "     home_adjustment  xPallgw  xCSP   gw7   gw9   gw8   gw5   gw6  5GW Total  \n",
              "59               1.3      6.7   NaN  9.05  7.64  9.05  8.11  9.05      42.90  \n",
              "148              1.1      7.7   NaN  8.84  8.84  8.84  7.13  8.84      42.49  \n",
              "100              1.2      5.9   NaN  6.68  6.29  6.68  7.07  6.68      33.40  \n",
              "296              1.1      5.8   NaN  6.56  6.94  6.56  5.80  6.56      32.42  \n",
              "257              1.2      5.6   NaN  6.32  6.68  6.32  6.68  6.32      32.32  \n",
              "29               1.1      5.4   NaN  5.40  5.06  5.40  6.08  5.40      27.34  \n",
              "58               1.3      4.4   NaN  5.60  4.88  5.60  5.12  5.60      26.80  \n",
              "364              1.0      5.4   NaN  4.72  5.74  4.72  6.08  4.72      25.98  \n",
              "15               1.1      4.6   NaN  5.38  4.08  5.38  4.60  5.38      24.82  \n",
              "213              1.0      4.9   NaN  5.19  4.61  5.19  4.61  5.19      24.79  \n",
              "12               1.1      4.5   NaN  5.00  5.00  5.00  4.25  5.00      24.25  \n",
              "305              1.1      4.4   NaN  4.88  5.12  4.88  4.40  4.88      24.16  \n",
              "524              1.3      4.0   1.3  5.00  4.40  5.00  4.60  5.00      24.00  \n",
              "33               1.0      4.7   NaN  4.97  4.43  4.97  4.43  4.97      23.77  \n",
              "196              1.1      4.7   NaN  4.70  4.43  4.70  5.24  4.70      23.77  \n",
              "169              1.1      4.4   NaN  5.12  3.92  5.12  4.40  5.12      23.68  \n",
              "372              1.0      5.4   NaN  4.72  5.06  4.72  4.38  4.72      23.60  \n",
              "167              1.1      4.3   NaN  4.99  3.84  4.99  4.30  4.99      23.11  \n",
              "531              1.3      3.8   1.3  4.70  4.16  4.70  4.34  4.70      22.60  \n",
              "97               1.2      4.0   NaN  4.40  4.20  4.40  4.60  4.40      22.00  \n",
              "297              1.1      4.0   NaN  4.40  4.60  4.40  4.00  4.40      21.80  \n",
              "255              1.2      3.9   NaN  4.28  4.47  4.28  4.47  4.28      21.78  \n",
              "47               1.2      3.8   NaN  4.16  4.34  4.16  4.34  4.16      21.16  \n",
              "315              1.2      3.7   NaN  4.38  3.87  4.38  3.87  4.38      20.88  \n",
              "369              1.0      4.3   NaN  3.84  4.53  3.84  4.76  3.84      20.81  \n",
              "238              0.9      4.2   NaN  3.98  3.98  3.98  4.64  3.98      20.56  \n",
              "523              1.3      3.5   1.3  4.25  3.80  4.25  3.95  4.25      20.50  \n",
              "527              1.3      3.5   1.3  4.25  3.80  4.25  3.95  4.25      20.50  \n",
              "89               0.8      4.2   NaN  4.20  4.20  4.20  3.54  4.20      20.34  \n",
              "16               1.1      3.8   NaN  4.34  3.44  4.34  3.80  4.34      20.26  \n",
              "2                1.2      3.7   NaN  4.04  3.87  4.04  4.21  4.04      20.20  \n",
              "201              1.1      4.0   NaN  4.00  3.80  4.00  4.40  4.00      20.20  \n",
              "223              0.9      4.6   NaN  4.08  3.82  4.08  3.82  4.08      19.88  \n",
              "284              1.3      3.4   NaN  4.10  3.68  4.10  3.82  4.10      19.80  \n",
              "526              1.3      3.4   1.3  4.10  3.68  4.10  3.82  4.10      19.80  \n",
              "529              1.3      3.4   1.3  4.10  3.68  4.10  3.82  4.10      19.80  \n",
              "63               1.2      3.5   NaN  4.10  3.65  4.10  3.65  4.10      19.60  \n",
              "377              1.0      4.4   NaN  3.92  4.16  3.92  3.68  3.92      19.60  \n",
              "367              1.0      4.0   NaN  3.60  4.20  3.60  4.40  3.60      19.40  \n",
              "164              1.1      3.6   NaN  4.08  3.28  4.08  3.60  4.08      19.12  \n",
              "290              1.3      3.3   NaN  3.95  3.56  3.95  3.69  3.95      19.10  \n",
              "525              1.3      3.3   1.3  3.95  3.56  3.95  3.69  3.95      19.10  \n",
              "528              1.3      3.3   1.3  3.95  3.56  3.95  3.69  3.95      19.10  \n",
              "530              1.3      3.3   1.3  3.95  3.56  3.95  3.69  3.95      19.10  \n",
              "532              1.3      3.3   1.3  3.95  3.56  3.95  3.69  3.95      19.10  \n",
              "681              1.3      3.3   1.3  3.95  3.56  3.95  3.69  3.95      19.10  \n",
              "682              1.3      3.3   1.3  3.95  3.56  3.95  3.69  3.95      19.10  \n",
              "683              1.3      3.3   1.3  3.95  3.56  3.95  3.69  3.95      19.10  \n",
              "684              1.3      3.3   1.3  3.95  3.56  3.95  3.69  3.95      19.10  \n",
              "326              1.2      3.4   NaN  3.96  3.54  3.96  3.54  3.96      18.96  \n",
              "\n",
              "[50 rows x 22 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-e22627e4-1694-46b1-9c59-6240188788be\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>team</th>\n",
              "      <th>pos</th>\n",
              "      <th>name</th>\n",
              "      <th>cost</th>\n",
              "      <th>selected_by_percent</th>\n",
              "      <th>goals_scored</th>\n",
              "      <th>assists</th>\n",
              "      <th>bps</th>\n",
              "      <th>ict_index</th>\n",
              "      <th>...</th>\n",
              "      <th>minutes</th>\n",
              "      <th>home_adjustment</th>\n",
              "      <th>xPallgw</th>\n",
              "      <th>xCSP</th>\n",
              "      <th>gw7</th>\n",
              "      <th>gw9</th>\n",
              "      <th>gw8</th>\n",
              "      <th>gw5</th>\n",
              "      <th>gw6</th>\n",
              "      <th>5GW Total</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>59</th>\n",
              "      <td>355</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>F</td>\n",
              "      <td>Haaland</td>\n",
              "      <td>14.1</td>\n",
              "      <td>91.9</td>\n",
              "      <td>6</td>\n",
              "      <td>1</td>\n",
              "      <td>161</td>\n",
              "      <td>54.4</td>\n",
              "      <td>...</td>\n",
              "      <td>349</td>\n",
              "      <td>1.3</td>\n",
              "      <td>6.7</td>\n",
              "      <td>NaN</td>\n",
              "      <td>9.05</td>\n",
              "      <td>7.64</td>\n",
              "      <td>9.05</td>\n",
              "      <td>8.11</td>\n",
              "      <td>9.05</td>\n",
              "      <td>42.90</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>148</th>\n",
              "      <td>108</td>\n",
              "      <td>Brentford</td>\n",
              "      <td>M</td>\n",
              "      <td>Mbeumo</td>\n",
              "      <td>6.8</td>\n",
              "      <td>26.9</td>\n",
              "      <td>4</td>\n",
              "      <td>0</td>\n",
              "      <td>89</td>\n",
              "      <td>43.1</td>\n",
              "      <td>...</td>\n",
              "      <td>360</td>\n",
              "      <td>1.1</td>\n",
              "      <td>7.7</td>\n",
              "      <td>NaN</td>\n",
              "      <td>8.84</td>\n",
              "      <td>8.84</td>\n",
              "      <td>8.84</td>\n",
              "      <td>7.13</td>\n",
              "      <td>8.84</td>\n",
              "      <td>42.49</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>100</th>\n",
              "      <td>19</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>M</td>\n",
              "      <td>Saka</td>\n",
              "      <td>8.7</td>\n",
              "      <td>65.7</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>100</td>\n",
              "      <td>52.4</td>\n",
              "      <td>...</td>\n",
              "      <td>358</td>\n",
              "      <td>1.2</td>\n",
              "      <td>5.9</td>\n",
              "      <td>NaN</td>\n",
              "      <td>6.68</td>\n",
              "      <td>6.29</td>\n",
              "      <td>6.68</td>\n",
              "      <td>7.07</td>\n",
              "      <td>6.68</td>\n",
              "      <td>33.40</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>296</th>\n",
              "      <td>373</td>\n",
              "      <td>Manchester United</td>\n",
              "      <td>M</td>\n",
              "      <td>B.Fernandes</td>\n",
              "      <td>8.4</td>\n",
              "      <td>21.5</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>75</td>\n",
              "      <td>40.1</td>\n",
              "      <td>...</td>\n",
              "      <td>360</td>\n",
              "      <td>1.1</td>\n",
              "      <td>5.8</td>\n",
              "      <td>NaN</td>\n",
              "      <td>6.56</td>\n",
              "      <td>6.94</td>\n",
              "      <td>6.56</td>\n",
              "      <td>5.80</td>\n",
              "      <td>6.56</td>\n",
              "      <td>32.42</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>257</th>\n",
              "      <td>308</td>\n",
              "      <td>Liverpool</td>\n",
              "      <td>M</td>\n",
              "      <td>Salah</td>\n",
              "      <td>12.5</td>\n",
              "      <td>25.8</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>75</td>\n",
              "      <td>45.5</td>\n",
              "      <td>...</td>\n",
              "      <td>341</td>\n",
              "      <td>1.2</td>\n",
              "      <td>5.6</td>\n",
              "      <td>NaN</td>\n",
              "      <td>6.32</td>\n",
              "      <td>6.68</td>\n",
              "      <td>6.32</td>\n",
              "      <td>6.68</td>\n",
              "      <td>6.32</td>\n",
              "      <td>32.32</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>29</th>\n",
              "      <td>211</td>\n",
              "      <td>Chelsea</td>\n",
              "      <td>F</td>\n",
              "      <td>N.Jackson</td>\n",
              "      <td>7.2</td>\n",
              "      <td>19.8</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>31</td>\n",
              "      <td>31.8</td>\n",
              "      <td>...</td>\n",
              "      <td>352</td>\n",
              "      <td>1.1</td>\n",
              "      <td>5.4</td>\n",
              "      <td>NaN</td>\n",
              "      <td>5.40</td>\n",
              "      <td>5.06</td>\n",
              "      <td>5.40</td>\n",
              "      <td>6.08</td>\n",
              "      <td>5.40</td>\n",
              "      <td>27.34</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>58</th>\n",
              "      <td>343</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>F</td>\n",
              "      <td>J.Alvarez</td>\n",
              "      <td>6.7</td>\n",
              "      <td>13.3</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "      <td>116</td>\n",
              "      <td>42.2</td>\n",
              "      <td>...</td>\n",
              "      <td>359</td>\n",
              "      <td>1.3</td>\n",
              "      <td>4.4</td>\n",
              "      <td>NaN</td>\n",
              "      <td>5.60</td>\n",
              "      <td>4.88</td>\n",
              "      <td>5.60</td>\n",
              "      <td>5.12</td>\n",
              "      <td>5.60</td>\n",
              "      <td>26.80</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>364</th>\n",
              "      <td>504</td>\n",
              "      <td>Tottenham</td>\n",
              "      <td>M</td>\n",
              "      <td>Maddison</td>\n",
              "      <td>7.8</td>\n",
              "      <td>26.2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>109</td>\n",
              "      <td>50.1</td>\n",
              "      <td>...</td>\n",
              "      <td>337</td>\n",
              "      <td>1.0</td>\n",
              "      <td>5.4</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4.72</td>\n",
              "      <td>5.74</td>\n",
              "      <td>4.72</td>\n",
              "      <td>6.08</td>\n",
              "      <td>4.72</td>\n",
              "      <td>25.98</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>15</th>\n",
              "      <td>132</td>\n",
              "      <td>Brighton</td>\n",
              "      <td>F</td>\n",
              "      <td>Ferguson</td>\n",
              "      <td>6.0</td>\n",
              "      <td>7.8</td>\n",
              "      <td>4</td>\n",
              "      <td>0</td>\n",
              "      <td>103</td>\n",
              "      <td>33.1</td>\n",
              "      <td>...</td>\n",
              "      <td>205</td>\n",
              "      <td>1.1</td>\n",
              "      <td>4.6</td>\n",
              "      <td>NaN</td>\n",
              "      <td>5.38</td>\n",
              "      <td>4.08</td>\n",
              "      <td>5.38</td>\n",
              "      <td>4.60</td>\n",
              "      <td>5.38</td>\n",
              "      <td>24.82</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>213</th>\n",
              "      <td>226</td>\n",
              "      <td>Crystal Palace</td>\n",
              "      <td>M</td>\n",
              "      <td>Eze</td>\n",
              "      <td>6.3</td>\n",
              "      <td>9.9</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>75</td>\n",
              "      <td>42.3</td>\n",
              "      <td>...</td>\n",
              "      <td>360</td>\n",
              "      <td>1.0</td>\n",
              "      <td>4.9</td>\n",
              "      <td>NaN</td>\n",
              "      <td>5.19</td>\n",
              "      <td>4.61</td>\n",
              "      <td>5.19</td>\n",
              "      <td>4.61</td>\n",
              "      <td>5.19</td>\n",
              "      <td>24.79</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>12</th>\n",
              "      <td>119</td>\n",
              "      <td>Brentford</td>\n",
              "      <td>F</td>\n",
              "      <td>Wissa</td>\n",
              "      <td>6.2</td>\n",
              "      <td>16.5</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>70</td>\n",
              "      <td>25.6</td>\n",
              "      <td>...</td>\n",
              "      <td>329</td>\n",
              "      <td>1.1</td>\n",
              "      <td>4.5</td>\n",
              "      <td>NaN</td>\n",
              "      <td>5.00</td>\n",
              "      <td>5.00</td>\n",
              "      <td>5.00</td>\n",
              "      <td>4.25</td>\n",
              "      <td>5.00</td>\n",
              "      <td>24.25</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>305</th>\n",
              "      <td>396</td>\n",
              "      <td>Manchester United</td>\n",
              "      <td>M</td>\n",
              "      <td>Rashford</td>\n",
              "      <td>8.9</td>\n",
              "      <td>35.9</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>42</td>\n",
              "      <td>28.9</td>\n",
              "      <td>...</td>\n",
              "      <td>351</td>\n",
              "      <td>1.1</td>\n",
              "      <td>4.4</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4.88</td>\n",
              "      <td>5.12</td>\n",
              "      <td>4.88</td>\n",
              "      <td>4.40</td>\n",
              "      <td>4.88</td>\n",
              "      <td>24.16</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>524</th>\n",
              "      <td>342</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>D</td>\n",
              "      <td>Ak√©</td>\n",
              "      <td>5.1</td>\n",
              "      <td>7.5</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>74</td>\n",
              "      <td>12.1</td>\n",
              "      <td>...</td>\n",
              "      <td>258</td>\n",
              "      <td>1.3</td>\n",
              "      <td>4.0</td>\n",
              "      <td>1.3</td>\n",
              "      <td>5.00</td>\n",
              "      <td>4.40</td>\n",
              "      <td>5.00</td>\n",
              "      <td>4.60</td>\n",
              "      <td>5.00</td>\n",
              "      <td>24.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>33</th>\n",
              "      <td>225</td>\n",
              "      <td>Crystal Palace</td>\n",
              "      <td>F</td>\n",
              "      <td>Edouard</td>\n",
              "      <td>5.5</td>\n",
              "      <td>2.4</td>\n",
              "      <td>3</td>\n",
              "      <td>0</td>\n",
              "      <td>82</td>\n",
              "      <td>40.2</td>\n",
              "      <td>...</td>\n",
              "      <td>339</td>\n",
              "      <td>1.0</td>\n",
              "      <td>4.7</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4.97</td>\n",
              "      <td>4.43</td>\n",
              "      <td>4.97</td>\n",
              "      <td>4.43</td>\n",
              "      <td>4.97</td>\n",
              "      <td>23.77</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>196</th>\n",
              "      <td>199</td>\n",
              "      <td>Chelsea</td>\n",
              "      <td>M</td>\n",
              "      <td>Enzo</td>\n",
              "      <td>5.0</td>\n",
              "      <td>4.1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>42</td>\n",
              "      <td>31.7</td>\n",
              "      <td>...</td>\n",
              "      <td>360</td>\n",
              "      <td>1.1</td>\n",
              "      <td>4.7</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4.70</td>\n",
              "      <td>4.43</td>\n",
              "      <td>4.70</td>\n",
              "      <td>5.24</td>\n",
              "      <td>4.70</td>\n",
              "      <td>23.77</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>169</th>\n",
              "      <td>143</td>\n",
              "      <td>Brighton</td>\n",
              "      <td>M</td>\n",
              "      <td>Mitoma</td>\n",
              "      <td>6.5</td>\n",
              "      <td>40.5</td>\n",
              "      <td>1</td>\n",
              "      <td>3</td>\n",
              "      <td>90</td>\n",
              "      <td>42.4</td>\n",
              "      <td>...</td>\n",
              "      <td>350</td>\n",
              "      <td>1.1</td>\n",
              "      <td>4.4</td>\n",
              "      <td>NaN</td>\n",
              "      <td>5.12</td>\n",
              "      <td>3.92</td>\n",
              "      <td>5.12</td>\n",
              "      <td>4.40</td>\n",
              "      <td>5.12</td>\n",
              "      <td>23.68</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>372</th>\n",
              "      <td>526</td>\n",
              "      <td>West Ham</td>\n",
              "      <td>M</td>\n",
              "      <td>Bowen</td>\n",
              "      <td>7.1</td>\n",
              "      <td>9.8</td>\n",
              "      <td>3</td>\n",
              "      <td>1</td>\n",
              "      <td>91</td>\n",
              "      <td>38.5</td>\n",
              "      <td>...</td>\n",
              "      <td>360</td>\n",
              "      <td>1.0</td>\n",
              "      <td>5.4</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4.72</td>\n",
              "      <td>5.06</td>\n",
              "      <td>4.72</td>\n",
              "      <td>4.38</td>\n",
              "      <td>4.72</td>\n",
              "      <td>23.60</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>167</th>\n",
              "      <td>140</td>\n",
              "      <td>Brighton</td>\n",
              "      <td>M</td>\n",
              "      <td>March</td>\n",
              "      <td>6.6</td>\n",
              "      <td>10.3</td>\n",
              "      <td>3</td>\n",
              "      <td>0</td>\n",
              "      <td>85</td>\n",
              "      <td>35.5</td>\n",
              "      <td>...</td>\n",
              "      <td>314</td>\n",
              "      <td>1.1</td>\n",
              "      <td>4.3</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4.99</td>\n",
              "      <td>3.84</td>\n",
              "      <td>4.99</td>\n",
              "      <td>4.30</td>\n",
              "      <td>4.99</td>\n",
              "      <td>23.11</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>531</th>\n",
              "      <td>369</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>D</td>\n",
              "      <td>Walker</td>\n",
              "      <td>5.2</td>\n",
              "      <td>11.7</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>85</td>\n",
              "      <td>14.2</td>\n",
              "      <td>...</td>\n",
              "      <td>360</td>\n",
              "      <td>1.3</td>\n",
              "      <td>3.8</td>\n",
              "      <td>1.3</td>\n",
              "      <td>4.70</td>\n",
              "      <td>4.16</td>\n",
              "      <td>4.70</td>\n",
              "      <td>4.34</td>\n",
              "      <td>4.70</td>\n",
              "      <td>22.60</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>97</th>\n",
              "      <td>14</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>M</td>\n",
              "      <td>√òdegaard</td>\n",
              "      <td>8.5</td>\n",
              "      <td>21.3</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>77</td>\n",
              "      <td>27.2</td>\n",
              "      <td>...</td>\n",
              "      <td>352</td>\n",
              "      <td>1.2</td>\n",
              "      <td>4.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4.40</td>\n",
              "      <td>4.20</td>\n",
              "      <td>4.40</td>\n",
              "      <td>4.60</td>\n",
              "      <td>4.40</td>\n",
              "      <td>22.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>297</th>\n",
              "      <td>376</td>\n",
              "      <td>Manchester United</td>\n",
              "      <td>M</td>\n",
              "      <td>Casemiro</td>\n",
              "      <td>5.4</td>\n",
              "      <td>3.9</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>60</td>\n",
              "      <td>25.7</td>\n",
              "      <td>...</td>\n",
              "      <td>360</td>\n",
              "      <td>1.1</td>\n",
              "      <td>4.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4.40</td>\n",
              "      <td>4.60</td>\n",
              "      <td>4.40</td>\n",
              "      <td>4.00</td>\n",
              "      <td>4.40</td>\n",
              "      <td>21.80</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>255</th>\n",
              "      <td>303</td>\n",
              "      <td>Liverpool</td>\n",
              "      <td>M</td>\n",
              "      <td>Luis D√≠az</td>\n",
              "      <td>7.7</td>\n",
              "      <td>12.9</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>54</td>\n",
              "      <td>21.3</td>\n",
              "      <td>...</td>\n",
              "      <td>257</td>\n",
              "      <td>1.2</td>\n",
              "      <td>3.9</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4.28</td>\n",
              "      <td>4.47</td>\n",
              "      <td>4.28</td>\n",
              "      <td>4.47</td>\n",
              "      <td>4.28</td>\n",
              "      <td>21.78</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>47</th>\n",
              "      <td>293</td>\n",
              "      <td>Liverpool</td>\n",
              "      <td>F</td>\n",
              "      <td>Darwin</td>\n",
              "      <td>7.4</td>\n",
              "      <td>10.7</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>74</td>\n",
              "      <td>16.7</td>\n",
              "      <td>...</td>\n",
              "      <td>105</td>\n",
              "      <td>1.2</td>\n",
              "      <td>3.8</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4.16</td>\n",
              "      <td>4.34</td>\n",
              "      <td>4.16</td>\n",
              "      <td>4.34</td>\n",
              "      <td>4.16</td>\n",
              "      <td>21.16</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>315</th>\n",
              "      <td>412</td>\n",
              "      <td>Newcastle United</td>\n",
              "      <td>M</td>\n",
              "      <td>Gordon</td>\n",
              "      <td>5.5</td>\n",
              "      <td>1.2</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>47</td>\n",
              "      <td>21.1</td>\n",
              "      <td>...</td>\n",
              "      <td>283</td>\n",
              "      <td>1.2</td>\n",
              "      <td>3.7</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4.38</td>\n",
              "      <td>3.87</td>\n",
              "      <td>4.38</td>\n",
              "      <td>3.87</td>\n",
              "      <td>4.38</td>\n",
              "      <td>20.88</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>369</th>\n",
              "      <td>516</td>\n",
              "      <td>Tottenham</td>\n",
              "      <td>M</td>\n",
              "      <td>Son</td>\n",
              "      <td>9.1</td>\n",
              "      <td>9.9</td>\n",
              "      <td>3</td>\n",
              "      <td>0</td>\n",
              "      <td>104</td>\n",
              "      <td>39.4</td>\n",
              "      <td>...</td>\n",
              "      <td>325</td>\n",
              "      <td>1.0</td>\n",
              "      <td>4.3</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.84</td>\n",
              "      <td>4.53</td>\n",
              "      <td>3.84</td>\n",
              "      <td>4.76</td>\n",
              "      <td>3.84</td>\n",
              "      <td>20.81</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>238</th>\n",
              "      <td>270</td>\n",
              "      <td>Fulham</td>\n",
              "      <td>M</td>\n",
              "      <td>De Cordova-Reid</td>\n",
              "      <td>5.5</td>\n",
              "      <td>0.2</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>42</td>\n",
              "      <td>15.2</td>\n",
              "      <td>...</td>\n",
              "      <td>272</td>\n",
              "      <td>0.9</td>\n",
              "      <td>4.2</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.98</td>\n",
              "      <td>3.98</td>\n",
              "      <td>3.98</td>\n",
              "      <td>4.64</td>\n",
              "      <td>3.98</td>\n",
              "      <td>20.56</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>523</th>\n",
              "      <td>341</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>D</td>\n",
              "      <td>Akanji</td>\n",
              "      <td>5.1</td>\n",
              "      <td>8.7</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>69</td>\n",
              "      <td>8.2</td>\n",
              "      <td>...</td>\n",
              "      <td>270</td>\n",
              "      <td>1.3</td>\n",
              "      <td>3.5</td>\n",
              "      <td>1.3</td>\n",
              "      <td>4.25</td>\n",
              "      <td>3.80</td>\n",
              "      <td>4.25</td>\n",
              "      <td>3.95</td>\n",
              "      <td>4.25</td>\n",
              "      <td>20.50</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>527</th>\n",
              "      <td>357</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>D</td>\n",
              "      <td>Laporte</td>\n",
              "      <td>4.9</td>\n",
              "      <td>0.2</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>4</td>\n",
              "      <td>2.9</td>\n",
              "      <td>...</td>\n",
              "      <td>11</td>\n",
              "      <td>1.3</td>\n",
              "      <td>3.5</td>\n",
              "      <td>1.3</td>\n",
              "      <td>4.25</td>\n",
              "      <td>3.80</td>\n",
              "      <td>4.25</td>\n",
              "      <td>3.95</td>\n",
              "      <td>4.25</td>\n",
              "      <td>20.50</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>89</th>\n",
              "      <td>590</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>F</td>\n",
              "      <td>Cunha</td>\n",
              "      <td>5.5</td>\n",
              "      <td>0.6</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>45</td>\n",
              "      <td>22.8</td>\n",
              "      <td>...</td>\n",
              "      <td>340</td>\n",
              "      <td>0.8</td>\n",
              "      <td>4.2</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4.20</td>\n",
              "      <td>4.20</td>\n",
              "      <td>4.20</td>\n",
              "      <td>3.54</td>\n",
              "      <td>4.20</td>\n",
              "      <td>20.34</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>16</th>\n",
              "      <td>135</td>\n",
              "      <td>Brighton</td>\n",
              "      <td>F</td>\n",
              "      <td>Jo√£o Pedro</td>\n",
              "      <td>5.5</td>\n",
              "      <td>14.8</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>36</td>\n",
              "      <td>23.4</td>\n",
              "      <td>...</td>\n",
              "      <td>226</td>\n",
              "      <td>1.1</td>\n",
              "      <td>3.8</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4.34</td>\n",
              "      <td>3.44</td>\n",
              "      <td>4.34</td>\n",
              "      <td>3.80</td>\n",
              "      <td>4.34</td>\n",
              "      <td>20.26</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>13</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>F</td>\n",
              "      <td>Nketiah</td>\n",
              "      <td>5.6</td>\n",
              "      <td>6.9</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>64</td>\n",
              "      <td>24.6</td>\n",
              "      <td>...</td>\n",
              "      <td>270</td>\n",
              "      <td>1.2</td>\n",
              "      <td>3.7</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4.04</td>\n",
              "      <td>3.87</td>\n",
              "      <td>4.04</td>\n",
              "      <td>4.21</td>\n",
              "      <td>4.04</td>\n",
              "      <td>20.20</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>201</th>\n",
              "      <td>216</td>\n",
              "      <td>Chelsea</td>\n",
              "      <td>M</td>\n",
              "      <td>Sterling</td>\n",
              "      <td>7.2</td>\n",
              "      <td>16.4</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>82</td>\n",
              "      <td>38.1</td>\n",
              "      <td>...</td>\n",
              "      <td>350</td>\n",
              "      <td>1.1</td>\n",
              "      <td>4.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4.00</td>\n",
              "      <td>3.80</td>\n",
              "      <td>4.00</td>\n",
              "      <td>4.40</td>\n",
              "      <td>4.00</td>\n",
              "      <td>20.20</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>223</th>\n",
              "      <td>249</td>\n",
              "      <td>Everton</td>\n",
              "      <td>M</td>\n",
              "      <td>A.Doucoure</td>\n",
              "      <td>5.5</td>\n",
              "      <td>0.2</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>44</td>\n",
              "      <td>32.7</td>\n",
              "      <td>...</td>\n",
              "      <td>360</td>\n",
              "      <td>0.9</td>\n",
              "      <td>4.6</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4.08</td>\n",
              "      <td>3.82</td>\n",
              "      <td>4.08</td>\n",
              "      <td>3.82</td>\n",
              "      <td>4.08</td>\n",
              "      <td>19.88</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>284</th>\n",
              "      <td>353</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>M</td>\n",
              "      <td>Foden</td>\n",
              "      <td>7.6</td>\n",
              "      <td>13.8</td>\n",
              "      <td>0</td>\n",
              "      <td>3</td>\n",
              "      <td>78</td>\n",
              "      <td>34.2</td>\n",
              "      <td>...</td>\n",
              "      <td>273</td>\n",
              "      <td>1.3</td>\n",
              "      <td>3.4</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4.10</td>\n",
              "      <td>3.68</td>\n",
              "      <td>4.10</td>\n",
              "      <td>3.82</td>\n",
              "      <td>4.10</td>\n",
              "      <td>19.80</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>526</th>\n",
              "      <td>350</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>D</td>\n",
              "      <td>R√∫ben</td>\n",
              "      <td>5.5</td>\n",
              "      <td>8.4</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>54</td>\n",
              "      <td>7.4</td>\n",
              "      <td>...</td>\n",
              "      <td>270</td>\n",
              "      <td>1.3</td>\n",
              "      <td>3.4</td>\n",
              "      <td>1.3</td>\n",
              "      <td>4.10</td>\n",
              "      <td>3.68</td>\n",
              "      <td>4.10</td>\n",
              "      <td>3.82</td>\n",
              "      <td>4.10</td>\n",
              "      <td>19.80</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>529</th>\n",
              "      <td>366</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>D</td>\n",
              "      <td>Sergio G√≥mez</td>\n",
              "      <td>3.9</td>\n",
              "      <td>0.9</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>15</td>\n",
              "      <td>3.6</td>\n",
              "      <td>...</td>\n",
              "      <td>14</td>\n",
              "      <td>1.3</td>\n",
              "      <td>3.4</td>\n",
              "      <td>1.3</td>\n",
              "      <td>4.10</td>\n",
              "      <td>3.68</td>\n",
              "      <td>4.10</td>\n",
              "      <td>3.82</td>\n",
              "      <td>4.10</td>\n",
              "      <td>19.80</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>63</th>\n",
              "      <td>415</td>\n",
              "      <td>Newcastle United</td>\n",
              "      <td>F</td>\n",
              "      <td>Isak</td>\n",
              "      <td>7.7</td>\n",
              "      <td>27.5</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>70</td>\n",
              "      <td>19.3</td>\n",
              "      <td>...</td>\n",
              "      <td>276</td>\n",
              "      <td>1.2</td>\n",
              "      <td>3.5</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4.10</td>\n",
              "      <td>3.65</td>\n",
              "      <td>4.10</td>\n",
              "      <td>3.65</td>\n",
              "      <td>4.10</td>\n",
              "      <td>19.60</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>377</th>\n",
              "      <td>539</td>\n",
              "      <td>West Ham</td>\n",
              "      <td>M</td>\n",
              "      <td>L.Paquet√°</td>\n",
              "      <td>6.0</td>\n",
              "      <td>1.9</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>68</td>\n",
              "      <td>27.5</td>\n",
              "      <td>...</td>\n",
              "      <td>354</td>\n",
              "      <td>1.0</td>\n",
              "      <td>4.4</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.92</td>\n",
              "      <td>4.16</td>\n",
              "      <td>3.92</td>\n",
              "      <td>3.68</td>\n",
              "      <td>3.92</td>\n",
              "      <td>19.60</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>367</th>\n",
              "      <td>513</td>\n",
              "      <td>Tottenham</td>\n",
              "      <td>M</td>\n",
              "      <td>Sarr</td>\n",
              "      <td>4.5</td>\n",
              "      <td>3.3</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>63</td>\n",
              "      <td>27.4</td>\n",
              "      <td>...</td>\n",
              "      <td>215</td>\n",
              "      <td>1.0</td>\n",
              "      <td>4.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.60</td>\n",
              "      <td>4.20</td>\n",
              "      <td>3.60</td>\n",
              "      <td>4.40</td>\n",
              "      <td>3.60</td>\n",
              "      <td>19.40</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>164</th>\n",
              "      <td>134</td>\n",
              "      <td>Brighton</td>\n",
              "      <td>M</td>\n",
              "      <td>Gross</td>\n",
              "      <td>6.4</td>\n",
              "      <td>2.4</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>78</td>\n",
              "      <td>42.4</td>\n",
              "      <td>...</td>\n",
              "      <td>348</td>\n",
              "      <td>1.1</td>\n",
              "      <td>3.6</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4.08</td>\n",
              "      <td>3.28</td>\n",
              "      <td>4.08</td>\n",
              "      <td>3.60</td>\n",
              "      <td>4.08</td>\n",
              "      <td>19.12</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>290</th>\n",
              "      <td>365</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>M</td>\n",
              "      <td>Rodrigo</td>\n",
              "      <td>5.7</td>\n",
              "      <td>12.6</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>107</td>\n",
              "      <td>30.9</td>\n",
              "      <td>...</td>\n",
              "      <td>345</td>\n",
              "      <td>1.3</td>\n",
              "      <td>3.3</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.95</td>\n",
              "      <td>3.56</td>\n",
              "      <td>3.95</td>\n",
              "      <td>3.69</td>\n",
              "      <td>3.95</td>\n",
              "      <td>19.10</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>525</th>\n",
              "      <td>346</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>D</td>\n",
              "      <td>Cancelo</td>\n",
              "      <td>5.8</td>\n",
              "      <td>1.7</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>1.3</td>\n",
              "      <td>3.3</td>\n",
              "      <td>1.3</td>\n",
              "      <td>3.95</td>\n",
              "      <td>3.56</td>\n",
              "      <td>3.95</td>\n",
              "      <td>3.69</td>\n",
              "      <td>3.95</td>\n",
              "      <td>19.10</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>528</th>\n",
              "      <td>358</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>D</td>\n",
              "      <td>R.Lewis</td>\n",
              "      <td>4.5</td>\n",
              "      <td>0.4</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>27</td>\n",
              "      <td>1.1</td>\n",
              "      <td>...</td>\n",
              "      <td>79</td>\n",
              "      <td>1.3</td>\n",
              "      <td>3.3</td>\n",
              "      <td>1.3</td>\n",
              "      <td>3.95</td>\n",
              "      <td>3.56</td>\n",
              "      <td>3.95</td>\n",
              "      <td>3.69</td>\n",
              "      <td>3.95</td>\n",
              "      <td>19.10</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>530</th>\n",
              "      <td>368</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>D</td>\n",
              "      <td>Stones</td>\n",
              "      <td>5.3</td>\n",
              "      <td>5.2</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>1.3</td>\n",
              "      <td>3.3</td>\n",
              "      <td>1.3</td>\n",
              "      <td>3.95</td>\n",
              "      <td>3.56</td>\n",
              "      <td>3.95</td>\n",
              "      <td>3.69</td>\n",
              "      <td>3.95</td>\n",
              "      <td>19.10</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>532</th>\n",
              "      <td>616</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>D</td>\n",
              "      <td>Gvardiol</td>\n",
              "      <td>5.1</td>\n",
              "      <td>6.2</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>45</td>\n",
              "      <td>6.8</td>\n",
              "      <td>...</td>\n",
              "      <td>191</td>\n",
              "      <td>1.3</td>\n",
              "      <td>3.3</td>\n",
              "      <td>1.3</td>\n",
              "      <td>3.95</td>\n",
              "      <td>3.56</td>\n",
              "      <td>3.95</td>\n",
              "      <td>3.69</td>\n",
              "      <td>3.95</td>\n",
              "      <td>19.10</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>681</th>\n",
              "      <td>347</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>G</td>\n",
              "      <td>Carson</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>1.3</td>\n",
              "      <td>3.3</td>\n",
              "      <td>1.3</td>\n",
              "      <td>3.95</td>\n",
              "      <td>3.56</td>\n",
              "      <td>3.95</td>\n",
              "      <td>3.69</td>\n",
              "      <td>3.95</td>\n",
              "      <td>19.10</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>682</th>\n",
              "      <td>352</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>G</td>\n",
              "      <td>Ederson M.</td>\n",
              "      <td>5.6</td>\n",
              "      <td>20.9</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>76</td>\n",
              "      <td>7.6</td>\n",
              "      <td>...</td>\n",
              "      <td>360</td>\n",
              "      <td>1.3</td>\n",
              "      <td>3.3</td>\n",
              "      <td>1.3</td>\n",
              "      <td>3.95</td>\n",
              "      <td>3.56</td>\n",
              "      <td>3.95</td>\n",
              "      <td>3.69</td>\n",
              "      <td>3.95</td>\n",
              "      <td>19.10</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>683</th>\n",
              "      <td>361</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>G</td>\n",
              "      <td>Ortega Moreno</td>\n",
              "      <td>3.9</td>\n",
              "      <td>0.7</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>1.3</td>\n",
              "      <td>3.3</td>\n",
              "      <td>1.3</td>\n",
              "      <td>3.95</td>\n",
              "      <td>3.56</td>\n",
              "      <td>3.95</td>\n",
              "      <td>3.69</td>\n",
              "      <td>3.95</td>\n",
              "      <td>19.10</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>684</th>\n",
              "      <td>367</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>G</td>\n",
              "      <td>Steffen</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>1.3</td>\n",
              "      <td>3.3</td>\n",
              "      <td>1.3</td>\n",
              "      <td>3.95</td>\n",
              "      <td>3.56</td>\n",
              "      <td>3.95</td>\n",
              "      <td>3.69</td>\n",
              "      <td>3.95</td>\n",
              "      <td>19.10</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>326</th>\n",
              "      <td>603</td>\n",
              "      <td>Newcastle United</td>\n",
              "      <td>M</td>\n",
              "      <td>Barnes</td>\n",
              "      <td>6.4</td>\n",
              "      <td>2.9</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>41</td>\n",
              "      <td>11.9</td>\n",
              "      <td>...</td>\n",
              "      <td>90</td>\n",
              "      <td>1.2</td>\n",
              "      <td>3.4</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.96</td>\n",
              "      <td>3.54</td>\n",
              "      <td>3.96</td>\n",
              "      <td>3.54</td>\n",
              "      <td>3.96</td>\n",
              "      <td>18.96</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>50 rows √ó 22 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-e22627e4-1694-46b1-9c59-6240188788be')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-e22627e4-1694-46b1-9c59-6240188788be button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-e22627e4-1694-46b1-9c59-6240188788be');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-8d441349-ee5a-47b7-8b40-60a6a69b9b6c\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-8d441349-ee5a-47b7-8b40-60a6a69b9b6c')\"\n",
              "            title=\"Suggest charts.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-8d441349-ee5a-47b7-8b40-60a6a69b9b6c button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 50
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import matplotlib.pyplot as plt\n",
        "import pandas as pd\n",
        "import numpy as np\n",
        "import string"
      ],
      "metadata": {
        "id": "JSw3vk9PJvps"
      },
      "execution_count": 51,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "fig, ax = plt.subplots(1, figsize=(10,8))\n",
        "ax.scatter(x=Top50['cost'],y=Top50['5GW Total'],c='DarkBlue')\n",
        "# set labels\n",
        "ax.set_xlabel('cost')\n",
        "ax.set_ylabel('5GW Total')\n",
        "\n",
        "# annotate points in axis\n",
        "for idx, row in Top50.iterrows():\n",
        "    ax.annotate(row['name'], (row['cost'], row['5GW Total']) )\n",
        "# force matplotlib to draw the graph\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 696
        },
        "id": "435FV-_ocWOi",
        "outputId": "9ac54215-090b-420b-87a4-5e36b7f8c476"
      },
      "execution_count": 52,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1000x800 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "rawdfgw228x"
      ],
      "metadata": {
        "id": "mQ58vdHpUd8O",
        "outputId": "aaaf7ea8-f3fe-4b09-bb32-571ee6247a4e",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 530
        }
      },
      "execution_count": 53,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "      id                     team pos     name  cost  selected_by_percent  \\\n",
              "0      1                  Arsenal   F  Balogun   4.4                  0.4   \n",
              "1      8                  Arsenal   F  G.Jesus   7.9                  2.1   \n",
              "2     13                  Arsenal   F  Nketiah   5.6                  6.9   \n",
              "3     39              Aston Villa   F    Davis   4.9                  0.2   \n",
              "4     44              Aston Villa   F    Duran   5.0                  0.1   \n",
              "..   ...                      ...  ..      ...   ...                  ...   \n",
              "709  647                 West Ham   G    Anang   4.0                  0.0   \n",
              "710  546  Wolverhampton Wanderers   G  Bentley   4.0                  0.4   \n",
              "711  564  Wolverhampton Wanderers   G     King   4.0                  0.8   \n",
              "712  569  Wolverhampton Wanderers   G  Jos√© S√°   5.0                  1.4   \n",
              "713  571  Wolverhampton Wanderers   G   ≈†arkiƒá   4.0                  0.4   \n",
              "\n",
              "     goals_scored  assists  bps  ict_index  ...  minutes  home_adjustment  \\\n",
              "0               0        0    0        0.0  ...        0              1.2   \n",
              "1               1        0   26       10.7  ...       15              1.2   \n",
              "2               2        1   64       24.6  ...      270              1.2   \n",
              "3               0        0    0        0.0  ...        0              1.1   \n",
              "4               1        0   33        7.5  ...       37              1.1   \n",
              "..            ...      ...  ...        ...  ...      ...              ...   \n",
              "709             0        0    0        0.0  ...        0              1.0   \n",
              "710             0        0    0        0.0  ...        0              0.8   \n",
              "711             0        0    0        0.0  ...        0              0.8   \n",
              "712             0        0   94       16.0  ...      360              0.8   \n",
              "713             0        0    0        0.0  ...        0              0.8   \n",
              "\n",
              "     xPallgw  xCSP   gw7   gw9   gw8   gw5   gw6  5GW Total  \n",
              "0        2.0   NaN  2.00  2.00  2.00  2.00  2.00      10.00  \n",
              "1        2.8   NaN  2.96  2.88  2.96  3.04  2.96      14.80  \n",
              "2        3.7   NaN  4.04  3.87  4.04  4.21  4.04      20.20  \n",
              "3        2.0   NaN  2.00  2.00  2.00  2.00  2.00      10.00  \n",
              "4        2.6   NaN  2.60  2.66  2.60  2.66  2.60      13.12  \n",
              "..       ...   ...   ...   ...   ...   ...   ...        ...  \n",
              "709     -0.7  -2.7 -0.16 -0.43 -0.16  0.11 -0.16      -0.80  \n",
              "710     -1.8  -3.8 -1.80 -1.80 -1.80 -0.66 -1.80      -7.86  \n",
              "711     -1.8  -3.8 -1.80 -1.80 -1.80 -0.66 -1.80      -7.86  \n",
              "712     -1.8  -3.8 -1.80 -1.80 -1.80 -0.66 -1.80      -7.86  \n",
              "713     -1.8  -3.8 -1.80 -1.80 -1.80 -0.66 -1.80      -7.86  \n",
              "\n",
              "[693 rows x 22 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-f1502c97-7aee-4ac6-af97-858ea9a4ccb0\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>team</th>\n",
              "      <th>pos</th>\n",
              "      <th>name</th>\n",
              "      <th>cost</th>\n",
              "      <th>selected_by_percent</th>\n",
              "      <th>goals_scored</th>\n",
              "      <th>assists</th>\n",
              "      <th>bps</th>\n",
              "      <th>ict_index</th>\n",
              "      <th>...</th>\n",
              "      <th>minutes</th>\n",
              "      <th>home_adjustment</th>\n",
              "      <th>xPallgw</th>\n",
              "      <th>xCSP</th>\n",
              "      <th>gw7</th>\n",
              "      <th>gw9</th>\n",
              "      <th>gw8</th>\n",
              "      <th>gw5</th>\n",
              "      <th>gw6</th>\n",
              "      <th>5GW Total</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>1</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>F</td>\n",
              "      <td>Balogun</td>\n",
              "      <td>4.4</td>\n",
              "      <td>0.4</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>1.2</td>\n",
              "      <td>2.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>10.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>8</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>F</td>\n",
              "      <td>G.Jesus</td>\n",
              "      <td>7.9</td>\n",
              "      <td>2.1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>26</td>\n",
              "      <td>10.7</td>\n",
              "      <td>...</td>\n",
              "      <td>15</td>\n",
              "      <td>1.2</td>\n",
              "      <td>2.8</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2.96</td>\n",
              "      <td>2.88</td>\n",
              "      <td>2.96</td>\n",
              "      <td>3.04</td>\n",
              "      <td>2.96</td>\n",
              "      <td>14.80</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>13</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>F</td>\n",
              "      <td>Nketiah</td>\n",
              "      <td>5.6</td>\n",
              "      <td>6.9</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>64</td>\n",
              "      <td>24.6</td>\n",
              "      <td>...</td>\n",
              "      <td>270</td>\n",
              "      <td>1.2</td>\n",
              "      <td>3.7</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4.04</td>\n",
              "      <td>3.87</td>\n",
              "      <td>4.04</td>\n",
              "      <td>4.21</td>\n",
              "      <td>4.04</td>\n",
              "      <td>20.20</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>39</td>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>F</td>\n",
              "      <td>Davis</td>\n",
              "      <td>4.9</td>\n",
              "      <td>0.2</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>1.1</td>\n",
              "      <td>2.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>10.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>44</td>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>F</td>\n",
              "      <td>Duran</td>\n",
              "      <td>5.0</td>\n",
              "      <td>0.1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>33</td>\n",
              "      <td>7.5</td>\n",
              "      <td>...</td>\n",
              "      <td>37</td>\n",
              "      <td>1.1</td>\n",
              "      <td>2.6</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2.60</td>\n",
              "      <td>2.66</td>\n",
              "      <td>2.60</td>\n",
              "      <td>2.66</td>\n",
              "      <td>2.60</td>\n",
              "      <td>13.12</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>709</th>\n",
              "      <td>647</td>\n",
              "      <td>West Ham</td>\n",
              "      <td>G</td>\n",
              "      <td>Anang</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>-0.7</td>\n",
              "      <td>-2.7</td>\n",
              "      <td>-0.16</td>\n",
              "      <td>-0.43</td>\n",
              "      <td>-0.16</td>\n",
              "      <td>0.11</td>\n",
              "      <td>-0.16</td>\n",
              "      <td>-0.80</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>710</th>\n",
              "      <td>546</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>G</td>\n",
              "      <td>Bentley</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.4</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0.8</td>\n",
              "      <td>-1.8</td>\n",
              "      <td>-3.8</td>\n",
              "      <td>-1.80</td>\n",
              "      <td>-1.80</td>\n",
              "      <td>-1.80</td>\n",
              "      <td>-0.66</td>\n",
              "      <td>-1.80</td>\n",
              "      <td>-7.86</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>711</th>\n",
              "      <td>564</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>G</td>\n",
              "      <td>King</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.8</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0.8</td>\n",
              "      <td>-1.8</td>\n",
              "      <td>-3.8</td>\n",
              "      <td>-1.80</td>\n",
              "      <td>-1.80</td>\n",
              "      <td>-1.80</td>\n",
              "      <td>-0.66</td>\n",
              "      <td>-1.80</td>\n",
              "      <td>-7.86</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>712</th>\n",
              "      <td>569</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>G</td>\n",
              "      <td>Jos√© S√°</td>\n",
              "      <td>5.0</td>\n",
              "      <td>1.4</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>94</td>\n",
              "      <td>16.0</td>\n",
              "      <td>...</td>\n",
              "      <td>360</td>\n",
              "      <td>0.8</td>\n",
              "      <td>-1.8</td>\n",
              "      <td>-3.8</td>\n",
              "      <td>-1.80</td>\n",
              "      <td>-1.80</td>\n",
              "      <td>-1.80</td>\n",
              "      <td>-0.66</td>\n",
              "      <td>-1.80</td>\n",
              "      <td>-7.86</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>713</th>\n",
              "      <td>571</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>G</td>\n",
              "      <td>≈†arkiƒá</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.4</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0.8</td>\n",
              "      <td>-1.8</td>\n",
              "      <td>-3.8</td>\n",
              "      <td>-1.80</td>\n",
              "      <td>-1.80</td>\n",
              "      <td>-1.80</td>\n",
              "      <td>-0.66</td>\n",
              "      <td>-1.80</td>\n",
              "      <td>-7.86</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>693 rows √ó 22 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-f1502c97-7aee-4ac6-af97-858ea9a4ccb0')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-f1502c97-7aee-4ac6-af97-858ea9a4ccb0 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-f1502c97-7aee-4ac6-af97-858ea9a4ccb0');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-180e3a14-edfb-47dd-9b18-104e1e270258\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-180e3a14-edfb-47dd-9b18-104e1e270258')\"\n",
              "            title=\"Suggest charts.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-180e3a14-edfb-47dd-9b18-104e1e270258 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 53
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "apiplayers = master"
      ],
      "metadata": {
        "id": "3bvpGcxtVMyS"
      },
      "execution_count": 54,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "Mostselected = apiplayers.nlargest(20, 'selected_by_percent')\n",
        "Mostselected"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 818
        },
        "id": "O-wNiNtosYZU",
        "outputId": "eaa78ee9-27c8-4a48-ace6-be652baebbf1"
      },
      "execution_count": 55,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "      id               team pos         name  cost  selected_by_percent  \\\n",
              "437  355    Manchester City   F      Haaland  14.1                 91.9   \n",
              "17    19            Arsenal   M         Saka   8.7                 65.7   \n",
              "144  131           Brighton   D    Estupi√±an   5.3                 64.2   \n",
              "156  143           Brighton   M       Mitoma   6.5                 40.5   \n",
              "477  396  Manchester United   M     Rashford   8.9                 35.9   \n",
              "224  195            Chelsea   D     Chilwell   5.8                 33.3   \n",
              "521  430   Newcastle United   D     Trippier   6.5                 30.4   \n",
              "18    20            Arsenal   D       Saliba   5.2                 28.6   \n",
              "654  524           West Ham   G       Areola   4.1                 28.3   \n",
              "506  415   Newcastle United   F         Isak   7.7                 27.5   \n",
              "119  108          Brentford   M       Mbeumo   6.8                 26.9   \n",
              "630  504          Tottenham   M     Maddison   7.8                 26.2   \n",
              "371  308          Liverpool   M        Salah  12.5                 25.8   \n",
              "484  597  Manchester United   G        Onana   5.0                 25.0   \n",
              "57    60        Aston Villa   F      Watkins   8.0                 21.6   \n",
              "457  373  Manchester United   M  B.Fernandes   8.4                 21.5   \n",
              "12    14            Arsenal   M     √òdegaard   8.5                 21.3   \n",
              "434  352    Manchester City   G   Ederson M.   5.6                 20.9   \n",
              "237  211            Chelsea   F    N.Jackson   7.2                 19.8   \n",
              "129  119          Brentford   F        Wissa   6.2                 16.5   \n",
              "\n",
              "     expected_goals  expected_assists  goals_scored  assists  bps  ict_index  \\\n",
              "437            4.54              0.18             6        1  161       54.4   \n",
              "17             2.16              1.60             2        1  100       52.4   \n",
              "144            0.39              1.12             1        2   95       38.1   \n",
              "156            0.81              1.84             1        3   90       42.4   \n",
              "477            1.24              1.15             1        2   42       28.9   \n",
              "224            0.70              1.26             0        1   65       24.3   \n",
              "521            0.00              0.55             0        0   68       25.2   \n",
              "18             0.04              0.08             0        1   82       14.0   \n",
              "654            0.00              0.00             0        0   82       11.9   \n",
              "506            1.40              0.09             2        0   70       19.3   \n",
              "119            4.02              0.92             4        0   89       43.1   \n",
              "630            1.60              1.80             2        2  109       50.1   \n",
              "371            2.49              0.61             2        2   75       45.5   \n",
              "484            0.00              0.00             0        0   69       12.4   \n",
              "57             1.36              0.18             0        3   39       26.9   \n",
              "457            2.00              1.76             1        1   75       40.1   \n",
              "12             1.39              0.38             2        0   77       27.2   \n",
              "434            0.00              0.02             0        0   76        7.6   \n",
              "237            2.95              0.64             1        0   31       31.8   \n",
              "129            2.46              0.08             2        1   70       25.6   \n",
              "\n",
              "     points  points_per_game  minutes  apppoint  assistvalue  \n",
              "437      39              9.8      349         2            3  \n",
              "17       25              6.2      358         2            3  \n",
              "144      21              5.2      360         2            3  \n",
              "156      23              5.8      350         2            3  \n",
              "477      19              4.8      351         2            3  \n",
              "224      15              3.8      295         2            3  \n",
              "521       5              1.2      360         2            3  \n",
              "18       16              4.0      360         2            3  \n",
              "654      20              5.0      360         2            3  \n",
              "506      19              4.8      276         2            3  \n",
              "119      33              8.2      360         2            3  \n",
              "630      29              7.2      337         2            3  \n",
              "371      23              5.8      341         2            3  \n",
              "484      11              2.8      360         2            3  \n",
              "57       17              4.2      320         2            3  \n",
              "457      18              4.5      360         2            3  \n",
              "12       22              5.5      352         2            3  \n",
              "434      17              4.2      360         2            3  \n",
              "237      10              2.5      352         2            3  \n",
              "129      24              6.0      329         2            3  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-d9970e59-9315-4f0f-a975-f64ff8265657\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>team</th>\n",
              "      <th>pos</th>\n",
              "      <th>name</th>\n",
              "      <th>cost</th>\n",
              "      <th>selected_by_percent</th>\n",
              "      <th>expected_goals</th>\n",
              "      <th>expected_assists</th>\n",
              "      <th>goals_scored</th>\n",
              "      <th>assists</th>\n",
              "      <th>bps</th>\n",
              "      <th>ict_index</th>\n",
              "      <th>points</th>\n",
              "      <th>points_per_game</th>\n",
              "      <th>minutes</th>\n",
              "      <th>apppoint</th>\n",
              "      <th>assistvalue</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>437</th>\n",
              "      <td>355</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>F</td>\n",
              "      <td>Haaland</td>\n",
              "      <td>14.1</td>\n",
              "      <td>91.9</td>\n",
              "      <td>4.54</td>\n",
              "      <td>0.18</td>\n",
              "      <td>6</td>\n",
              "      <td>1</td>\n",
              "      <td>161</td>\n",
              "      <td>54.4</td>\n",
              "      <td>39</td>\n",
              "      <td>9.8</td>\n",
              "      <td>349</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>17</th>\n",
              "      <td>19</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>M</td>\n",
              "      <td>Saka</td>\n",
              "      <td>8.7</td>\n",
              "      <td>65.7</td>\n",
              "      <td>2.16</td>\n",
              "      <td>1.60</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>100</td>\n",
              "      <td>52.4</td>\n",
              "      <td>25</td>\n",
              "      <td>6.2</td>\n",
              "      <td>358</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>144</th>\n",
              "      <td>131</td>\n",
              "      <td>Brighton</td>\n",
              "      <td>D</td>\n",
              "      <td>Estupi√±an</td>\n",
              "      <td>5.3</td>\n",
              "      <td>64.2</td>\n",
              "      <td>0.39</td>\n",
              "      <td>1.12</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>95</td>\n",
              "      <td>38.1</td>\n",
              "      <td>21</td>\n",
              "      <td>5.2</td>\n",
              "      <td>360</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>156</th>\n",
              "      <td>143</td>\n",
              "      <td>Brighton</td>\n",
              "      <td>M</td>\n",
              "      <td>Mitoma</td>\n",
              "      <td>6.5</td>\n",
              "      <td>40.5</td>\n",
              "      <td>0.81</td>\n",
              "      <td>1.84</td>\n",
              "      <td>1</td>\n",
              "      <td>3</td>\n",
              "      <td>90</td>\n",
              "      <td>42.4</td>\n",
              "      <td>23</td>\n",
              "      <td>5.8</td>\n",
              "      <td>350</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>477</th>\n",
              "      <td>396</td>\n",
              "      <td>Manchester United</td>\n",
              "      <td>M</td>\n",
              "      <td>Rashford</td>\n",
              "      <td>8.9</td>\n",
              "      <td>35.9</td>\n",
              "      <td>1.24</td>\n",
              "      <td>1.15</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>42</td>\n",
              "      <td>28.9</td>\n",
              "      <td>19</td>\n",
              "      <td>4.8</td>\n",
              "      <td>351</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>224</th>\n",
              "      <td>195</td>\n",
              "      <td>Chelsea</td>\n",
              "      <td>D</td>\n",
              "      <td>Chilwell</td>\n",
              "      <td>5.8</td>\n",
              "      <td>33.3</td>\n",
              "      <td>0.70</td>\n",
              "      <td>1.26</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>65</td>\n",
              "      <td>24.3</td>\n",
              "      <td>15</td>\n",
              "      <td>3.8</td>\n",
              "      <td>295</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>521</th>\n",
              "      <td>430</td>\n",
              "      <td>Newcastle United</td>\n",
              "      <td>D</td>\n",
              "      <td>Trippier</td>\n",
              "      <td>6.5</td>\n",
              "      <td>30.4</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.55</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>68</td>\n",
              "      <td>25.2</td>\n",
              "      <td>5</td>\n",
              "      <td>1.2</td>\n",
              "      <td>360</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>18</th>\n",
              "      <td>20</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>D</td>\n",
              "      <td>Saliba</td>\n",
              "      <td>5.2</td>\n",
              "      <td>28.6</td>\n",
              "      <td>0.04</td>\n",
              "      <td>0.08</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>82</td>\n",
              "      <td>14.0</td>\n",
              "      <td>16</td>\n",
              "      <td>4.0</td>\n",
              "      <td>360</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>654</th>\n",
              "      <td>524</td>\n",
              "      <td>West Ham</td>\n",
              "      <td>G</td>\n",
              "      <td>Areola</td>\n",
              "      <td>4.1</td>\n",
              "      <td>28.3</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>82</td>\n",
              "      <td>11.9</td>\n",
              "      <td>20</td>\n",
              "      <td>5.0</td>\n",
              "      <td>360</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>506</th>\n",
              "      <td>415</td>\n",
              "      <td>Newcastle United</td>\n",
              "      <td>F</td>\n",
              "      <td>Isak</td>\n",
              "      <td>7.7</td>\n",
              "      <td>27.5</td>\n",
              "      <td>1.40</td>\n",
              "      <td>0.09</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>70</td>\n",
              "      <td>19.3</td>\n",
              "      <td>19</td>\n",
              "      <td>4.8</td>\n",
              "      <td>276</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>119</th>\n",
              "      <td>108</td>\n",
              "      <td>Brentford</td>\n",
              "      <td>M</td>\n",
              "      <td>Mbeumo</td>\n",
              "      <td>6.8</td>\n",
              "      <td>26.9</td>\n",
              "      <td>4.02</td>\n",
              "      <td>0.92</td>\n",
              "      <td>4</td>\n",
              "      <td>0</td>\n",
              "      <td>89</td>\n",
              "      <td>43.1</td>\n",
              "      <td>33</td>\n",
              "      <td>8.2</td>\n",
              "      <td>360</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>630</th>\n",
              "      <td>504</td>\n",
              "      <td>Tottenham</td>\n",
              "      <td>M</td>\n",
              "      <td>Maddison</td>\n",
              "      <td>7.8</td>\n",
              "      <td>26.2</td>\n",
              "      <td>1.60</td>\n",
              "      <td>1.80</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>109</td>\n",
              "      <td>50.1</td>\n",
              "      <td>29</td>\n",
              "      <td>7.2</td>\n",
              "      <td>337</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>371</th>\n",
              "      <td>308</td>\n",
              "      <td>Liverpool</td>\n",
              "      <td>M</td>\n",
              "      <td>Salah</td>\n",
              "      <td>12.5</td>\n",
              "      <td>25.8</td>\n",
              "      <td>2.49</td>\n",
              "      <td>0.61</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>75</td>\n",
              "      <td>45.5</td>\n",
              "      <td>23</td>\n",
              "      <td>5.8</td>\n",
              "      <td>341</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>484</th>\n",
              "      <td>597</td>\n",
              "      <td>Manchester United</td>\n",
              "      <td>G</td>\n",
              "      <td>Onana</td>\n",
              "      <td>5.0</td>\n",
              "      <td>25.0</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>69</td>\n",
              "      <td>12.4</td>\n",
              "      <td>11</td>\n",
              "      <td>2.8</td>\n",
              "      <td>360</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>57</th>\n",
              "      <td>60</td>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>F</td>\n",
              "      <td>Watkins</td>\n",
              "      <td>8.0</td>\n",
              "      <td>21.6</td>\n",
              "      <td>1.36</td>\n",
              "      <td>0.18</td>\n",
              "      <td>0</td>\n",
              "      <td>3</td>\n",
              "      <td>39</td>\n",
              "      <td>26.9</td>\n",
              "      <td>17</td>\n",
              "      <td>4.2</td>\n",
              "      <td>320</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>457</th>\n",
              "      <td>373</td>\n",
              "      <td>Manchester United</td>\n",
              "      <td>M</td>\n",
              "      <td>B.Fernandes</td>\n",
              "      <td>8.4</td>\n",
              "      <td>21.5</td>\n",
              "      <td>2.00</td>\n",
              "      <td>1.76</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>75</td>\n",
              "      <td>40.1</td>\n",
              "      <td>18</td>\n",
              "      <td>4.5</td>\n",
              "      <td>360</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>12</th>\n",
              "      <td>14</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>M</td>\n",
              "      <td>√òdegaard</td>\n",
              "      <td>8.5</td>\n",
              "      <td>21.3</td>\n",
              "      <td>1.39</td>\n",
              "      <td>0.38</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>77</td>\n",
              "      <td>27.2</td>\n",
              "      <td>22</td>\n",
              "      <td>5.5</td>\n",
              "      <td>352</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>434</th>\n",
              "      <td>352</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>G</td>\n",
              "      <td>Ederson M.</td>\n",
              "      <td>5.6</td>\n",
              "      <td>20.9</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.02</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>76</td>\n",
              "      <td>7.6</td>\n",
              "      <td>17</td>\n",
              "      <td>4.2</td>\n",
              "      <td>360</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>237</th>\n",
              "      <td>211</td>\n",
              "      <td>Chelsea</td>\n",
              "      <td>F</td>\n",
              "      <td>N.Jackson</td>\n",
              "      <td>7.2</td>\n",
              "      <td>19.8</td>\n",
              "      <td>2.95</td>\n",
              "      <td>0.64</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>31</td>\n",
              "      <td>31.8</td>\n",
              "      <td>10</td>\n",
              "      <td>2.5</td>\n",
              "      <td>352</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>129</th>\n",
              "      <td>119</td>\n",
              "      <td>Brentford</td>\n",
              "      <td>F</td>\n",
              "      <td>Wissa</td>\n",
              "      <td>6.2</td>\n",
              "      <td>16.5</td>\n",
              "      <td>2.46</td>\n",
              "      <td>0.08</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>70</td>\n",
              "      <td>25.6</td>\n",
              "      <td>24</td>\n",
              "      <td>6.0</td>\n",
              "      <td>329</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-d9970e59-9315-4f0f-a975-f64ff8265657')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-d9970e59-9315-4f0f-a975-f64ff8265657 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-d9970e59-9315-4f0f-a975-f64ff8265657');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-a83bebce-409d-468a-b181-92bec37509ef\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-a83bebce-409d-468a-b181-92bec37509ef')\"\n",
              "            title=\"Suggest charts.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-a83bebce-409d-468a-b181-92bec37509ef button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 55
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "ax = sns.barplot(x='selected_by_percent', y='name', data=Mostselected, hue='pos', dodge=False)\n",
        "sns.set(rc={'figure.figsize':(11.7,8.27)})\n",
        "plt.title(\"Most Selected\")\n",
        "plt.xticks(rotation=90)\n",
        "plt.ylabel(\"selected_by_percent\")\n",
        "plt.legend(bbox_to_anchor=(1.05, 1), loc='upper left', borderaxespad=0)\n",
        "plt.gcf().set_size_inches(30,10)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 476
        },
        "id": "8PBz92opthgG",
        "outputId": "800ee8e6-1f82-4b6b-a8ba-a39500acd342"
      },
      "execution_count": 56,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 3000x1000 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "fbref = pd.read_html('https://fbref.com/en/comps/9/Premier-League-Stats')\n",
        "epltable = fbref[0]\n",
        "epltablexGxGc = epltable.drop(columns=[\n",
        " 'Last 5',\n",
        " 'Attendance',\n",
        " 'Top Team Scorer',\n",
        " 'Goalkeeper',\n",
        " 'Notes'])\n",
        "epltablexGxGc= epltablexGxGc.replace('Newcastle Utd', 'Newcastle United')\n",
        "epltablexGxGc= epltablexGxGc.replace('Wolves','Wolverhampton Wanderers')\n",
        "epltablexGxGc= epltablexGxGc.replace('Leeds United','Leeds')\n",
        "epltablexGxGc= epltablexGxGc.replace('Leicester City','Leicester')\n",
        "epltablexGxGc= epltablexGxGc.replace('Manchester Utd','Manchester United')\n",
        "epltablexGxGc['Squad'] = epltablexGxGc['Squad'].str.replace(r\"[\\\"\\',]\", '')\n",
        "epltablexGxGc= epltablexGxGc.replace('Nottham Forest','Nottingham Forest')\n",
        "epltablexGxGc['xCSP'] = (4 - (epltablexGxGc.xGA * 4/23))\n",
        "epltablexGxGc.rename(columns={'Squad': 'team'}, inplace=True)\n",
        "epltablexGxGc['xG/90'] = (epltablexGxGc.xG / epltablexGxGc.MP)\n",
        "epltablexGxGc['xGA/90'] = (epltablexGxGc.xGA / epltablexGxGc.MP)\n",
        "epltablexGxGc"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 711
        },
        "id": "D8nuKObbLt5s",
        "outputId": "fb433ea5-adf1-4d88-bc89-cd50f953ba3e"
      },
      "execution_count": 57,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "<ipython-input-57-f34def3770e4>:14: FutureWarning: The default value of regex will change from True to False in a future version.\n",
            "  epltablexGxGc['Squad'] = epltablexGxGc['Squad'].str.replace(r\"[\\\"\\',]\", '')\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "    Rk                     team  MP  W  D  L  GF  GA  GD  Pts  Pts/MP   xG  \\\n",
              "0    1          Manchester City   4  4  0  0  11   2   9   12    3.00  8.6   \n",
              "1    2                Tottenham   4  3  1  0  11   4   7   10    2.50  7.3   \n",
              "2    3                Liverpool   4  3  1  0   9   3   6   10    2.50  7.6   \n",
              "3    4                 West Ham   4  3  1  0   9   4   5   10    2.50  6.9   \n",
              "4    5                  Arsenal   4  3  1  0   8   4   4   10    2.50  8.3   \n",
              "5    6                 Brighton   4  3  0  1  12   6   6    9    2.25  9.0   \n",
              "6    7           Crystal Palace   4  2  1  1   5   4   1    7    1.75  5.8   \n",
              "7    8                Brentford   4  1  3  0   8   5   3    6    1.50  9.7   \n",
              "8    9        Nottingham Forest   4  2  0  2   6   6   0    6    1.50  4.5   \n",
              "9   10              Aston Villa   4  2  0  2   8   9  -1    6    1.50  7.8   \n",
              "10  11        Manchester United   4  2  0  2   5   7  -2    6    1.50  8.0   \n",
              "11  12                  Chelsea   4  1  1  2   5   5   0    4    1.00  8.3   \n",
              "12  13                   Fulham   4  1  1  2   4  10  -6    4    1.00  3.9   \n",
              "13  14         Newcastle United   4  1  0  3   7   7   0    3    0.75  6.9   \n",
              "14  15  Wolverhampton Wanderers   4  1  0  3   4   8  -4    3    0.75  6.5   \n",
              "15  16              Bournemouth   4  0  2  2   4   8  -4    2    0.50  5.3   \n",
              "16  17            Sheffield Utd   4  0  1  3   4   7  -3    1    0.25  2.9   \n",
              "17  18                  Everton   4  0  1  3   2   8  -6    1    0.25  7.2   \n",
              "18  19               Luton Town   3  0  0  3   2   9  -7    0    0.00  3.3   \n",
              "19  20                  Burnley   3  0  0  3   3  11  -8    0    0.00  2.4   \n",
              "\n",
              "     xGA  xGD  xGD/90      xCSP  xG/90    xGA/90  \n",
              "0    2.7  6.0    1.49  3.530435  2.150  0.675000  \n",
              "1    6.3  1.0    0.26  2.904348  1.825  1.575000  \n",
              "2    5.3  2.4    0.59  3.078261  1.900  1.325000  \n",
              "3    6.7  0.3    0.06  2.834783  1.725  1.675000  \n",
              "4    3.7  4.6    1.15  3.356522  2.075  0.925000  \n",
              "5    7.8  1.2    0.29  2.643478  2.250  1.950000  \n",
              "6    4.6  1.1    0.28  3.200000  1.450  1.150000  \n",
              "7    4.6  5.1    1.28  3.200000  2.425  1.150000  \n",
              "8    6.4 -1.9   -0.47  2.886957  1.125  1.600000  \n",
              "9    7.1  0.7    0.17  2.765217  1.950  1.775000  \n",
              "10   7.4  0.6    0.15  2.713043  2.000  1.850000  \n",
              "11   4.3  4.1    1.02  3.252174  2.075  1.075000  \n",
              "12  11.7 -7.8   -1.95  1.965217  0.975  2.925000  \n",
              "13   4.9  1.9    0.48  3.147826  1.725  1.225000  \n",
              "14   7.8 -1.3   -0.33  2.643478  1.625  1.950000  \n",
              "15   9.1 -3.7   -0.93  2.417391  1.325  2.275000  \n",
              "16   9.3 -6.4   -1.61  2.382609  0.725  2.325000  \n",
              "17   6.7  0.5    0.12  2.834783  1.800  1.675000  \n",
              "18   7.2 -3.9   -1.32  2.747826  1.100  2.400000  \n",
              "19   6.7 -4.3   -1.43  2.834783  0.800  2.233333  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-c660e0b1-36b9-4443-8ed0-3fc2ab3dc4b2\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Rk</th>\n",
              "      <th>team</th>\n",
              "      <th>MP</th>\n",
              "      <th>W</th>\n",
              "      <th>D</th>\n",
              "      <th>L</th>\n",
              "      <th>GF</th>\n",
              "      <th>GA</th>\n",
              "      <th>GD</th>\n",
              "      <th>Pts</th>\n",
              "      <th>Pts/MP</th>\n",
              "      <th>xG</th>\n",
              "      <th>xGA</th>\n",
              "      <th>xGD</th>\n",
              "      <th>xGD/90</th>\n",
              "      <th>xCSP</th>\n",
              "      <th>xG/90</th>\n",
              "      <th>xGA/90</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>1</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>4</td>\n",
              "      <td>4</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>11</td>\n",
              "      <td>2</td>\n",
              "      <td>9</td>\n",
              "      <td>12</td>\n",
              "      <td>3.00</td>\n",
              "      <td>8.6</td>\n",
              "      <td>2.7</td>\n",
              "      <td>6.0</td>\n",
              "      <td>1.49</td>\n",
              "      <td>3.530435</td>\n",
              "      <td>2.150</td>\n",
              "      <td>0.675000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>2</td>\n",
              "      <td>Tottenham</td>\n",
              "      <td>4</td>\n",
              "      <td>3</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>11</td>\n",
              "      <td>4</td>\n",
              "      <td>7</td>\n",
              "      <td>10</td>\n",
              "      <td>2.50</td>\n",
              "      <td>7.3</td>\n",
              "      <td>6.3</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.26</td>\n",
              "      <td>2.904348</td>\n",
              "      <td>1.825</td>\n",
              "      <td>1.575000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>3</td>\n",
              "      <td>Liverpool</td>\n",
              "      <td>4</td>\n",
              "      <td>3</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>9</td>\n",
              "      <td>3</td>\n",
              "      <td>6</td>\n",
              "      <td>10</td>\n",
              "      <td>2.50</td>\n",
              "      <td>7.6</td>\n",
              "      <td>5.3</td>\n",
              "      <td>2.4</td>\n",
              "      <td>0.59</td>\n",
              "      <td>3.078261</td>\n",
              "      <td>1.900</td>\n",
              "      <td>1.325000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>4</td>\n",
              "      <td>West Ham</td>\n",
              "      <td>4</td>\n",
              "      <td>3</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>9</td>\n",
              "      <td>4</td>\n",
              "      <td>5</td>\n",
              "      <td>10</td>\n",
              "      <td>2.50</td>\n",
              "      <td>6.9</td>\n",
              "      <td>6.7</td>\n",
              "      <td>0.3</td>\n",
              "      <td>0.06</td>\n",
              "      <td>2.834783</td>\n",
              "      <td>1.725</td>\n",
              "      <td>1.675000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>5</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>4</td>\n",
              "      <td>3</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>8</td>\n",
              "      <td>4</td>\n",
              "      <td>4</td>\n",
              "      <td>10</td>\n",
              "      <td>2.50</td>\n",
              "      <td>8.3</td>\n",
              "      <td>3.7</td>\n",
              "      <td>4.6</td>\n",
              "      <td>1.15</td>\n",
              "      <td>3.356522</td>\n",
              "      <td>2.075</td>\n",
              "      <td>0.925000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>6</td>\n",
              "      <td>Brighton</td>\n",
              "      <td>4</td>\n",
              "      <td>3</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>12</td>\n",
              "      <td>6</td>\n",
              "      <td>6</td>\n",
              "      <td>9</td>\n",
              "      <td>2.25</td>\n",
              "      <td>9.0</td>\n",
              "      <td>7.8</td>\n",
              "      <td>1.2</td>\n",
              "      <td>0.29</td>\n",
              "      <td>2.643478</td>\n",
              "      <td>2.250</td>\n",
              "      <td>1.950000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>7</td>\n",
              "      <td>Crystal Palace</td>\n",
              "      <td>4</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>5</td>\n",
              "      <td>4</td>\n",
              "      <td>1</td>\n",
              "      <td>7</td>\n",
              "      <td>1.75</td>\n",
              "      <td>5.8</td>\n",
              "      <td>4.6</td>\n",
              "      <td>1.1</td>\n",
              "      <td>0.28</td>\n",
              "      <td>3.200000</td>\n",
              "      <td>1.450</td>\n",
              "      <td>1.150000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>8</td>\n",
              "      <td>Brentford</td>\n",
              "      <td>4</td>\n",
              "      <td>1</td>\n",
              "      <td>3</td>\n",
              "      <td>0</td>\n",
              "      <td>8</td>\n",
              "      <td>5</td>\n",
              "      <td>3</td>\n",
              "      <td>6</td>\n",
              "      <td>1.50</td>\n",
              "      <td>9.7</td>\n",
              "      <td>4.6</td>\n",
              "      <td>5.1</td>\n",
              "      <td>1.28</td>\n",
              "      <td>3.200000</td>\n",
              "      <td>2.425</td>\n",
              "      <td>1.150000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>9</td>\n",
              "      <td>Nottingham Forest</td>\n",
              "      <td>4</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>6</td>\n",
              "      <td>6</td>\n",
              "      <td>0</td>\n",
              "      <td>6</td>\n",
              "      <td>1.50</td>\n",
              "      <td>4.5</td>\n",
              "      <td>6.4</td>\n",
              "      <td>-1.9</td>\n",
              "      <td>-0.47</td>\n",
              "      <td>2.886957</td>\n",
              "      <td>1.125</td>\n",
              "      <td>1.600000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>10</td>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>4</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>8</td>\n",
              "      <td>9</td>\n",
              "      <td>-1</td>\n",
              "      <td>6</td>\n",
              "      <td>1.50</td>\n",
              "      <td>7.8</td>\n",
              "      <td>7.1</td>\n",
              "      <td>0.7</td>\n",
              "      <td>0.17</td>\n",
              "      <td>2.765217</td>\n",
              "      <td>1.950</td>\n",
              "      <td>1.775000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10</th>\n",
              "      <td>11</td>\n",
              "      <td>Manchester United</td>\n",
              "      <td>4</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>5</td>\n",
              "      <td>7</td>\n",
              "      <td>-2</td>\n",
              "      <td>6</td>\n",
              "      <td>1.50</td>\n",
              "      <td>8.0</td>\n",
              "      <td>7.4</td>\n",
              "      <td>0.6</td>\n",
              "      <td>0.15</td>\n",
              "      <td>2.713043</td>\n",
              "      <td>2.000</td>\n",
              "      <td>1.850000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>11</th>\n",
              "      <td>12</td>\n",
              "      <td>Chelsea</td>\n",
              "      <td>4</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>5</td>\n",
              "      <td>5</td>\n",
              "      <td>0</td>\n",
              "      <td>4</td>\n",
              "      <td>1.00</td>\n",
              "      <td>8.3</td>\n",
              "      <td>4.3</td>\n",
              "      <td>4.1</td>\n",
              "      <td>1.02</td>\n",
              "      <td>3.252174</td>\n",
              "      <td>2.075</td>\n",
              "      <td>1.075000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>12</th>\n",
              "      <td>13</td>\n",
              "      <td>Fulham</td>\n",
              "      <td>4</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>4</td>\n",
              "      <td>10</td>\n",
              "      <td>-6</td>\n",
              "      <td>4</td>\n",
              "      <td>1.00</td>\n",
              "      <td>3.9</td>\n",
              "      <td>11.7</td>\n",
              "      <td>-7.8</td>\n",
              "      <td>-1.95</td>\n",
              "      <td>1.965217</td>\n",
              "      <td>0.975</td>\n",
              "      <td>2.925000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>13</th>\n",
              "      <td>14</td>\n",
              "      <td>Newcastle United</td>\n",
              "      <td>4</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>3</td>\n",
              "      <td>7</td>\n",
              "      <td>7</td>\n",
              "      <td>0</td>\n",
              "      <td>3</td>\n",
              "      <td>0.75</td>\n",
              "      <td>6.9</td>\n",
              "      <td>4.9</td>\n",
              "      <td>1.9</td>\n",
              "      <td>0.48</td>\n",
              "      <td>3.147826</td>\n",
              "      <td>1.725</td>\n",
              "      <td>1.225000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>14</th>\n",
              "      <td>15</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>4</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>3</td>\n",
              "      <td>4</td>\n",
              "      <td>8</td>\n",
              "      <td>-4</td>\n",
              "      <td>3</td>\n",
              "      <td>0.75</td>\n",
              "      <td>6.5</td>\n",
              "      <td>7.8</td>\n",
              "      <td>-1.3</td>\n",
              "      <td>-0.33</td>\n",
              "      <td>2.643478</td>\n",
              "      <td>1.625</td>\n",
              "      <td>1.950000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>15</th>\n",
              "      <td>16</td>\n",
              "      <td>Bournemouth</td>\n",
              "      <td>4</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>4</td>\n",
              "      <td>8</td>\n",
              "      <td>-4</td>\n",
              "      <td>2</td>\n",
              "      <td>0.50</td>\n",
              "      <td>5.3</td>\n",
              "      <td>9.1</td>\n",
              "      <td>-3.7</td>\n",
              "      <td>-0.93</td>\n",
              "      <td>2.417391</td>\n",
              "      <td>1.325</td>\n",
              "      <td>2.275000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>16</th>\n",
              "      <td>17</td>\n",
              "      <td>Sheffield Utd</td>\n",
              "      <td>4</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>3</td>\n",
              "      <td>4</td>\n",
              "      <td>7</td>\n",
              "      <td>-3</td>\n",
              "      <td>1</td>\n",
              "      <td>0.25</td>\n",
              "      <td>2.9</td>\n",
              "      <td>9.3</td>\n",
              "      <td>-6.4</td>\n",
              "      <td>-1.61</td>\n",
              "      <td>2.382609</td>\n",
              "      <td>0.725</td>\n",
              "      <td>2.325000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>17</th>\n",
              "      <td>18</td>\n",
              "      <td>Everton</td>\n",
              "      <td>4</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>3</td>\n",
              "      <td>2</td>\n",
              "      <td>8</td>\n",
              "      <td>-6</td>\n",
              "      <td>1</td>\n",
              "      <td>0.25</td>\n",
              "      <td>7.2</td>\n",
              "      <td>6.7</td>\n",
              "      <td>0.5</td>\n",
              "      <td>0.12</td>\n",
              "      <td>2.834783</td>\n",
              "      <td>1.800</td>\n",
              "      <td>1.675000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>18</th>\n",
              "      <td>19</td>\n",
              "      <td>Luton Town</td>\n",
              "      <td>3</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>3</td>\n",
              "      <td>2</td>\n",
              "      <td>9</td>\n",
              "      <td>-7</td>\n",
              "      <td>0</td>\n",
              "      <td>0.00</td>\n",
              "      <td>3.3</td>\n",
              "      <td>7.2</td>\n",
              "      <td>-3.9</td>\n",
              "      <td>-1.32</td>\n",
              "      <td>2.747826</td>\n",
              "      <td>1.100</td>\n",
              "      <td>2.400000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>19</th>\n",
              "      <td>20</td>\n",
              "      <td>Burnley</td>\n",
              "      <td>3</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>3</td>\n",
              "      <td>3</td>\n",
              "      <td>11</td>\n",
              "      <td>-8</td>\n",
              "      <td>0</td>\n",
              "      <td>0.00</td>\n",
              "      <td>2.4</td>\n",
              "      <td>6.7</td>\n",
              "      <td>-4.3</td>\n",
              "      <td>-1.43</td>\n",
              "      <td>2.834783</td>\n",
              "      <td>0.800</td>\n",
              "      <td>2.233333</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-c660e0b1-36b9-4443-8ed0-3fc2ab3dc4b2')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-c660e0b1-36b9-4443-8ed0-3fc2ab3dc4b2 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-c660e0b1-36b9-4443-8ed0-3fc2ab3dc4b2');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-9b8f839e-303f-4f59-9d38-dca60be6c75a\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-9b8f839e-303f-4f59-9d38-dca60be6c75a')\"\n",
              "            title=\"Suggest charts.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-9b8f839e-303f-4f59-9d38-dca60be6c75a button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 57
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "fig, ax = plt.subplots(1, figsize=(10,8))\n",
        "ax.scatter(x=epltablexGxGc['xG/90'],y=epltablexGxGc['xGA/90'],c='DarkBlue')\n",
        "# set labels\n",
        "ax.set_xlabel('xG/90')\n",
        "ax.set_ylabel('xGA/90')\n",
        "\n",
        "# annotate points in axis\n",
        "for idx, row in epltablexGxGc.iterrows():\n",
        "    ax.annotate(row['team'], (row['xG/90'], row['xGA/90']) )\n",
        "# force matplotlib to draw the graph\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 704
        },
        "id": "TYn5yVsCNlLv",
        "outputId": "bc1ecde0-6d68-4288-c647-c8e7e03c5f36"
      },
      "execution_count": 58,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1000x800 with 1 Axes>"
            ],
            "image/png": "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GRQREREREcmFlAyKiIiIiIjkQkoGRUREREREciElgyIiIiIiIrmQkkEREREREZFcSMmgiIiIiIhILqRkUEREREREJBdSMigiIiIiIpILKRkUERERERHJhZQMioiIiIiI5EJKBkVERERERHIhJYMiIiIiIiK5kJJBERERERGRXEjJoIiIiIiISC6kZFBERERERCQXUjIoIiIiIiKSCykZFBERERERyYWUDIqIiIiIiORCSgZFRERERERyISWDIiIiIiIiuZCSQRERERERkVxIyaCIiIiIiEgupGRQREREREQkF1IyKCIiIiIikgspGRQREREREcmFlAyKiIiIiIjkQkoGRUREREREciElgyIiIiIiIrmQkkEREREREZFcSMmgiIiIiIhILqRkUEREREREJBdSMigiIiIiIpILKRkUERERERHJhZQMioiIiIiI5EJKBkVERERERHIhJYMiIiIiIiK5kJJBERERERGRXEjJoIiIiIiISC6kZFBERERERCQXUjIoIiIiIiKSCykZFBERERERyYWUDIqIiIiIiORCSgZFRERERERyISWDIiIiIiIiuZCSQRERERERkVxIyaCIiIiIiEgupGRQREREREQkF1IyKCIiIiIikgspGRQREREREcmFlAyKiIiIiIjkQkoGRUREREREciElgyIiIiIiIrmQkkEREREREZFcSMmgiIiIiIhILqRkUEREREREJBdSMigiIiIiIpILKRkUERERERHJhZQMioiIiIiI5EJKBkVERERERHIhJYMiIiIiIiK5kJJBERERERGRXEjJoIiIiIiISC6kZFBERERERCQXUjIoIiIiIiKSCykZFBERERERyYWUDIqIiIiIiORCSgZFRERERERyISWDIiIiIiIiuZCSQRERERERkVxIyaCIiIiIiEgupGRQREREREQkF1IyKCIiIiIikgspGRQREREREcmFlAyKiIiIiIjkQkoGRUREREREciElgyIiIiIiIrmQkkEREREREZFcSMmgiIiIiIhILqRkUEREREREJBdSMigiIiIiIpILKRkUERERERHJhZQMioiIiIiI5EJKBkVERERERHIhJYMiIiIiIiK5kJJBERERERGRXEjJoIiIiIiISC6kZFBERERERCQXUjIoIiIiIiKSCzk87gButnr1alasWMGvv/7KtWvXKFGiBL169aJr167Y2dnd9rymTZty/vz5DOVHjhzB2dn5YYYsIiIiIiLyRLKpZPDbb7/Fz8+PUaNG4enpyc6dOxkzZgzR0dEMGjTojue2atWKPn36WJU5OTk9zHBFRERERESeWDaVDE6dOpUCBQpYXterV4/Y2FjmzJnDwIEDsbe//axWLy8vqlev/giiFBERERERefLZ1JrBmxPBdBUqVCA+Pp6EhITHEJGIiIiIiEjOZFMjg5nZv38/RYoUwdXV9Y71Vq5cyU8//YSjoyMBAQG8+eablCtX7oHbd3CwqXz5rgwGe6v/iu1Q39g29Y/tUt/YNvWPbVP/2C71jW3LLf1jZzabzY87iNvZt28fvXr1YuTIkbz88su3rTdu3DiqVq2Kr68vZ8+eZdq0aVy+fJnly5dTrFix+27fbDbfceMaERERERGRJ5XNJoPR0dF0796d0qVLM3v27DuuF7zVxYsXadOmDe3bt+f999+/7xiMRhPXriXe9/mPg8Fgj7t7Xq5dS8RoND3ucOQm6hvbpv6xXeob26b+sW3qH9ulvrFtt/aPu3veHDlKaJPTRK9du8arr76Kh4cHkyZNylIiCFC4cGFq1arFr7/++sCxpKY+md+cRqPpiY09p1Pf2Db1j+1S39g29Y9tU//YLvWNbcvp/WNzyWBSUhL9+vUjLi6OhQsX4ubm9rhDEhERERERyXFsaqwzNTWVoUOHEhERwaxZsyhSpMh9XefChQvs37+fKlWqZHOEIiIiIiIiOYNNjQyOHTuWzZs3M2rUKOLj4zl06JDlWMWKFXFycuKll14iMjKS9evXAxAaGsrmzZtp1KgRhQsX5uzZs8yYMQODwUDv3r0f052IiIiIiIjYNptKBnfs2AHAhAkTMhzbuHEjRYsWxWQyYTQaLeVFixbl4sWLfPTRR8TFxeHm5kZgYCBDhgx5oJ1ERUREREREcjKbSgY3bdp01zpz5861el29evUMZSIiIiIiInJnNrVmUERERERERB4NJYMiIiIiIiK5kJJBERERERGRXEjJoIiIiIiISC6kZFBERERERCQXsqndREXEdoSFreSjj8Yya9b3lC9f8YGv9/33s/H3L8XTTzd+8OCyICoqku7dO9xT3Y0bN+Li4vmQIxIRERGxDUoGReSRmDt3Do0bN3vkyaCHhydjxnxgVbZgwTwuXbrI4MHDLWX29nYUKFCA5GTzI41PRERE5HFRMigiOVrevHlp1aqtVdnGjeuIi4uzKndwsCdfvnwkJ19/1CGKiIiIPBZaMygi9238+Pfp1q19hvKQkOkEBQVYXgcFBZCYmMjq1aEEBQUQFBTA+PHvW47/9dcfjBgxhJYtG9GiRUPeeGMAx44dtbpmWNhKgoICOHLkEJMmfUlwcHOaNw/inXfeJCYm5oHv5cqVK7z77ru0adOcpk3r89JLz7N6dahVnT59XuDdd9+yKnvxxWcJCgrgxInjlrKNG9cRFBTAqVMnrd6Pc+fOMn78+7Ru3ZhWrRrx0UdjSUpKeuDYRURERO6HkkEReejGjPkAJycnqlWrwZgxHzBmzAd07NgFgIiIv3n99Vc5ceIvevToxUsv9SUyMpIhQ/rx66/HMlzrq68+48SJ4/Tu/SqdOnVj585tTJz46QPFl5ycxMCBr7JixQpatWrDwIFDcHV1Zfz49/nppx8t9apWrcGRI4csr69du8rJkxHY29tz+PBBS/nhwwfx8PDE37+kVTvvvTeKhITr9Os3iKZNWxAWtpLZs2c8UOwiIiIi90vTREXkoWvVqi2ff/4xvr5+GaZszpw5ldTUVKZMmYWfX1EAWrcOpkePrkyd+jXffGOdLLm752fixMnY2dkBYDabWLx4IfHx8bi6ut5XfD//vIxTp07y2Wef0bBhM1JTTXTq1I1Bg15j5sypBAd3IF8+F6pVq87ixQs4deok/v4lOXLkMI6OjtSpE8iRIwfp2vUZAA4fPkTVqtUztFO2bDneeec9y+urV6+yatXPDBw45L7iFhEREXkQGhkUkcfGaDSyd284DRs2tiSCAF5eXrRo0YojRw5x/Xq81TkdOnSxJIKQNlpnNBqJjo667zjCw3dQsKAXwcHBljIHBwe6dXuWxMQEDh48AEC1ajUAOHQo7fWRIwcpX74itWvX5fDhQwDExcVx8uTfVKtWPUM7nTp1tXpdrVp1rl69muEeRURERB4FJYMiYmE0mtixI5KlS09w/HjsQ28vNjaGpKQkihcvkeFYiRIlMZlMXLhwwaq8SBFvq9dubm4AxMVdu+84oqOjKFasGPb21j8SS5QoaTkOUKBAQYoWLW6ZKnr48CGqVatBtWo1uXz5EufPn+Po0cOYTCZL4njn2N3/P/a4+45dRERE5H5pmqiIABAaGsHo0TuJjEzbTdPd/S+8vWHbtvO3fc7gzSN0NzOZTA8tToMh879hmc2P5pEQVatWY//+vSQnJ/Hnn7/z8suvUKpUaVxd3Thy5BCnTp0kb958lC1bLsO59vaGTK/5qGIXERERuZlGBkWE0NAI+vZdb0kEb/bhh7sJDY3I9Dw3Nzfi4zOOamU+ZTNj4ujh4UmePHk4c+Z0hmNnzpzC3t6eIkWK3P0GHpC3tw9nz57NkMSeOXPKcjxdtWo1uHAhmg0b1mEymahSpRr29vZUrVqdw4cPcuTIQapUqYrBkHniJyIiImIrlAyK5HJGo4nRo3dyp8Gp0aN3YjRmHO3z9S1KfHy81WMVLl++zC+/bMlQN2/evBkSR4PBQO3agWzfvpWoqEhL+ZUr/7B+/RqqVq2Oi8v9bQqTFYGBDfjnn8uEhYVZylJTU1m8eCF58+ajRo2alvL06Z8//PAdpUuXsWxaU61adfbv38sff/ye6eYxIiIiIrZG00RFcrnw8OhMRwTTubv/SVLSWcaPv0Tx4m6W8meeeZ7mzVsybdok3n33Tbp1e47k5CSWLVtMsWLF+euvP6yuU65cefbt28OCBfPw8iqEj48flSpV5tVXB7Bv324GDnyFzp27YTAY+PnnpaSkpDBgwKPZZbNjx86sWLGUUaNG0b37cxQp4s3mzRs5evQwQ4aMIF8+F0vdokWLUbBgQc6cOU23bs9ayqtVq8nUqZP+/98Z1wuKiIiI2BolgyK53IULCXc87uHxOwDr1u23Km/btj2FCxfho48+Y9KkiUyd+jU+Pr707z+Is2fPZEgGBw8exqeffsTMmVNJTk6mTZtgKlWqTKlSpZk8eSbTpk1m7txvMZtNVKxYmffe+5BKlSpn783ehrNzHqZMmcmsWVMIC1vJ9evXKV68BO+++1/atm2foX7VqjXYvHkDVapUt5SVL1+BPHnyYDQaqVjx0cQtIiIi8iDszNq54LaMRhNXrtx+xMQWOTjY4+npQkzMdVJTH94mHpJ1tto3O3ZE0rnzyrvWW7asPQ0a+D6CiB4PW+0fUd/YOvWPbVP/2C71jW27tX8KFHC57SZ2T7Kcd0cikiWBgd74+rpwm41BsbMDX18XAgO9M68gIiIiIk8kJYMiuZzBYM+4cfUBMiSE6a/HjaufI/8aJiIiIpKb6bc7ESE4uBQhIS3w8XGxKvfxcSEkpAXBwaUeU2QiIiIi8rAoGcyhAgNr8uWXn2TrNa9c+YfRo9+mbdtmBAUF8NNP8wE4e/YMw4a9TqtWjQgKCuCXX7YQFraSoKAAq8cF3KuQkOkEBQXcU92goABCQqZnuY3slpWYbVVwcCn27+/BsmXtmTatGcuWtWf//h5KBEVERERyKO0m+oT5++8TzJkzg99//42YmCu4u+fH378kQUFP063bcw+17a+//pLdu8Pp3ftVChYsSPnyFQEYP/59oqLO89prA3F1daN8+Qrs27fnocaSFQcO7GPIkP58+OEEmjRpnuH4l19+wtKli9i+fZ+l7PvvZ+PvX4qnn278CCN9/AwG+xy9SYyIiIiI/EvJ4BMk7Zln/SlSxJv27TtRsKAXFy9e4Ndfj7Jo0YKHngweOLCPhg0b0aNHL0tZcnISx44d4cUX+9C167/PXGvVqi3NmrXEycnpocb0sMydO4fGjZvlumRQRERERHIPJYNPkO+/n42LiyszZ36Pm5ub1bGYmCsPvf2YmCu4urreUhYLgKurdTwGgwGDwfDQYxIRERERkfujNYNPkPPnz1GyZKkMiSCAp2eBTM/55Zct9Or1DE2a1KNnz2cID9+Zoc6lSxf56KOxtG/f0lIvNPRny/H09X9ms5mlSxcRFBRgWavXrVswAFOm/I+goAC6dWtvdc6tawZ37drBwIGv0Lx5EC1aPM1bb71BRMTfd733Gzdu8PXXXxAc3JwWLZ5m5MhhXLx44a7n3Y+goAASExNZvTrUcq/jx79vOX748CFeeeVFmjatzzPPdGT58iUPJQ4RERERkYdJI4NPEG9vH44dO0pExAlKlSpz1/pHjhxm69bNdO7cjXz5XFi8eAGjR7/NkiWh5M/vAaRtCtOvX28AunZ9Bg8PD8LDdzJhwockJFznmWd6UK1aDcaM+YAPP3yP2rXr0rp1OwBKly6Lm5sbX3/9Jc2bt6JevQbkzZvvtvGsWbOK8ePfp06degwYMJikpCSWL1/CwIGvMGfOD/j43H6t2ieffMjatatp0aI1lStX5cCBvbz11tB7f/OyYMyYD/jkk3FUqFCJDh06A+DnVxRIW7M5fPjreHh40rv3axiNqcyePeO2ybiIiIiIiK1SMvgEef75nrz55hv07v0CFSpUomrV6gQE1KFmzQAcHDJ25enTJ5k3b5ElkalZM4CXX36eDRvWWtb3zZgxBaPRyPffL7AkiJ06deO//32X2bNn0LFjF/z8iuLnV5QPP3yPYsWK06pVW0sbLi4ufP31lzz1VHmr8lslJCTw1VefExzciZEj/2Mpb9MmmB49uvL993Osym92/PhfrF27ms6duzNixEggLXEdO3Y0f/99PGtv4j1o1aotn3/+Mb6+fhnuadasaZjNMHnyLLy90x7C3rhxM1566eGu1xQRERERyW6aJvoEqV07kGnTZtOgwdOcOPEX8+d/z/Dhg+jUqQ3bt2/NUD8goI4lEQQoU6YsLi4uREaeB8BsNrNlyyYaNGiI2QyxsbGWr7p16xEfH8+ff/6RLbHv3bub+Pg4WrRoZdWOvb2BihUrc/DgvtueGx6+A4Du3Z+1Kn/mmeezJbZ7ZTQa2bNnFw0bNrIkggD+/iWpUyfwkcYiIiIiIvKgNDL4hKlQoRIfffQZKSkpnDjxF7/8soWFC+czevRI5syZT9my/04fLVLEO8P5bm7uxMXFARAbG0N8fBwrVixjxYplmbYXExOTLXGfO3cGgCFD+md63MXFJdNygOjoKOzt7fH1LWpVXrx4iWyJ7V7FxsaQnJxMsWLFMxwrXrwEu3bteKTxiIiIiIg8CCWDNs5oNBEeHs2FCwkUKZKPwEBvDAZ7HB0dqVChEhUqVKJYseJ89NFYNm/eYJUM2ttnPvBrNpsBMJlMALRq1YbWrYMzrVumTNlsuQ+TKa3NMWM+oECBghmOP8ydR52cnAFITk7O9HhSUpKljoiIiIhIbqFk0IaFhkYwevROIiOvW8p8fV0YN64+wcGlLGXly1cA4J9/Lmfp+h4enuTL54LRaKJ27brZE/RtpE9X9fQskOW2vL19MJlMREaeo3hxf0v5mTOn7/n8O9U/e/a01bTPNHYZ6nl4eOLs7MzZs2cyHLvXWEREREREbIXWDNqo0NAI+vZdb5UI5s0bSVRUPH37ric0NMJSnj49MavTJg0GA40bN2Xr1k1ERJzIcDy7pogC1K0biIuLC99/P5vU1NQstRUYWB+ARYsWWpX/9NOP99S2l5cXZcs+xbp1qy1TZNP98cfv/PrrMUsb6fLmzUt8vHVdg8FAnTr12LZtK9HR0ZbyU6dOsmdP+D3FIiIiIiJiKzQyaIOMRhOjR+/k/2dzWhQuvBM7u1SuX/fn/fcjSEqqya+/HmXTpvX4+PjStm2HLLfVv/8gDhzYx2uvvUz79p3x9y/JtWvX+OuvP9i3bw+rV2/KlntycXFlxIh3GDfuPfr0eYFmzVri4eHJhQvR7Nq1nSpVqjF8+MhMzy1bthzNm7di2bJFXL8eT+XKVdm/fw/nzp275/YHDx7O8OGD6N27B23aBOPlVYjTp0+yYsUyChb0olev3lb1y5Urz759e1iwYB5eXoXw8fGjUqXK9O3bj927d/H666/QuXM3jEYjS5b8hL9/qYeys6mIiIiIyMOiZNAGhYdHW40Iprt0qS5ubhHky3cWR8c/mDRpKz4+PnTu3I2XXuqb6cPo76ZAgYLMnPkdc+bMZOvWTSxb9g/58+fH3780AwYMzo7bsWjZsjVeXl7Mm/cdP/44lxs3UihUqBDVqtW4ayL7zjvv4eHhyfr1q9m2bQs1awbw2Wdf0aVLu3tqu2bNACZPnsV334WwePFCEhKuU6BAQVq0aE2fPq9leE7g4MHD+PTTj5g5cyrJycm0aRNMpUqVKVOmLF9+OYlJkyYSEjKdQoUK06fPa/zzz2UlgyI52KBBr3H1aixz5/70uEMRERHJNnZm863jT5LOaDRx5UrGpOxhW7r0BP37b7xrvWnTmtGli/XD5x0c7PH0dCEm5jqpqaaHFaLcB/WNbbOV/gkLW8lHH421KvPw8KRkyVL06PEi9eo1eEyRPT6Pqm8uX77Ezz8v5emnG1O2bDmrY0oGb89Wvnckc+of26W+sW239k+BAi4YDDlvhZ1GBm1QkSL5srWeiDx5XnmlPz4+vpjNZq5cucLq1St56603+OSTiTRo0PBxh5cjXb58iTlzZuLj45shGRQREcmJlAzaoMBAb3x9XYiKup5h3SCAnR34+LgQGJjxOYIikjMEBtanfPmKltfBwR3p0KElGzasfaTJYGJiInnz5n1k7YmIiMijk/PGOnMAg8GecePSdre0u+UJB+mvx42rnyOHqkUkc25ubjg7O1s9kzMxMZFJkybSpUs7mjSpx/PPd2H+/LncPPs/KiqSoKAAwsJWZrhmUFAAISHTLa9DQqYTFBTAyZMRvP/+f2jdugkDB/YFoFu39rz99lAOHz7Eq6++SNOm9enevSOrV4dmuG5cXBz/+98XlriefbYT8+Z9a3m26c1xzZ8/lyVLfqJ79440a9aAYcNe58KFaMxmM99+O4vOndvSqFE9BgwYwNWrVzO0tXTpInr2fIYmTerRsWNrvvjikwy7Bnfr1p7x49/PcO6gQa8xaNBrABw4sI9XXnkRgI8+GktQUECm79vJkxEMHtyPZs0a0KlTG3744bsM1xUREXlSaGTQRgUHlyIkpEWG5wz6+GR8zqCI5Dzx8fHExsZiNpuJibnCkiULSUxMpFWrNgCYzWZGjRrOgQP7CA7uSJkyT7Fnzy6mTPkfly9fZMiQEffd9pgxoyhWrBj9+r1ulVieO3eWMWNG0q5dB1q3DmbVqhV89NFYypWrQKlSpQFISkpi0KDXuHz5Ih06dKFIEW+OHTvC9OmT+eeff3jjDeu41q9fTUpKKt26PcO1a9eYP/973nvvHWrWDODQof288MKLREaeZ9GiBeTL58qoUe9Zzg0Jmc6cOTMJCKhD585dOXPmNMuXL+GPP35l6tTZODjc+//i/P1L8sor/Zk1axodOnSmWrUaAFSuXNVSJy4ujhEjBtOoUVOaNm3Bli0bmTp1EqVKlcmVazlFROTJp2TQhgUHl6JNG3/Cw6O5cCGBIkXyERjorRFBkVxg6NCBVq+dnJx45533qF07EIDt27eyf/9eXn11AC+9lDZ617XrM4wePZJFixbQteuz+PkVva+2y5Qpy/vvj89QfubMaSZPnmlJlJo2bUHXru0IC1vJoEFDAViwYB6RkeeYPfsHihUrDkCnTl3x8irEjz/O5bnnXqBIkX+nuF+6dIkFC5bh6uoKgMlkYu7cOSQnJzNr1vc4ODjg4GBPQkIca9euZvjwUTg5ORETE8O8ed9Sp04gn3/+Nfb2aT8Xixf3Z+LET1m7Nox27e79cTsFChQkMLA+s2ZNo3LlqrRq1TZDncuXLzF69Fhat07bxTg4uCPdugWzatXPSgZFROSJpKzCxhkM9jRo4EuXLmVo0MBXiaBILjF8+EgmTpzMxImTee+9D6lRI4AJEz5k69a0Z3/u2rUDg8FA9+7PWZ333HM9MZvNhIfvuO+2O3Xqmmm5v38pSyII4OnpSbFiJYiMPG8p27x5I1Wr1sDNzZ3Y2FjLV0BAHYxGI4cPH7S6ZpMmzS2JIEDFipUAaNmyjdXIXtWqVUlJSeHSpYsA7Nu3m5SUFLp3f96SCAJ06NAZFxcXdu3aft/3fzt58+azShIdHR2pUKGS1f2LiIg8STQyKCLyGBmNJqvRf5MpbVpmxYqVrDaQad68Fb17v8CXX35K/foNiY6OpmBBL/Llc7G6nr9/SQCio6PvOyYfH99My28e0Uvn5uZGXNw1y+tz587w99/HCQ5unuk1YmKu3HLNIlavXVxcMy1Pf45q+nrA9PsrXryEVT1HR0d8ff0e6P5vp3DhwtjdspDbzc2dv/8+ke1tiYiIPApKBkVEHpPQ0IgM64KLFz9FnjwZ69rb21OzZgCLFv3I2bNn7rmNW5OXdEaj8bbnODtnEgDcdmbCzesKzWYztWvXpUePFzOtW6yYdfJmb2/ItN7No323tHab8tu73XtgMpnu0M69x6TH9YqIyJNKcw7liRcWtpKgoACioiIfdygi9yw0NIK+fddbJYIAsbE3ANi2LePUQ6MxFUjbRdTb25t//rlMQoL1+adPnwLA2zttFC99RC0+3nqHzejoqAe/iUz4+hYlMTGR2rXrZvqVHteDSr/OmTOnrcpTUlKIioq0asfNzS3D/UNm70HmSaOIiEhOpWRQ7ll60nXzV3BwCwYP7seuXfe/PkkktzEaTYwevTPT54immzr1CEbjv49iSE1NZc+e3Tg6OuLv70+9eg0wGo0sWfKT1Xk//fQDdnZ2BAambWji4uKKh4cHhw5Zr9Vbtmxx9t3QTZo2bc6xY0fYvXtXhmNxcXGkpqZmSzsBAXVxdHRk8eKFViNzoaE/Ex8fT716QZYyX9+i/PrrMVJSUixlO3Zs4+LFC1bXTH+eYmaJo4iISE6kaaKSZa+80h8fH1/MZjNXrlxh9eqVvPXWG3zyycRH+jBskSdVeHh0hhHBWyUk/MWUKT/y1FOexMRcYf36tZw7d4aePV/GxcWVBg2epmbNAGbMmEJUVCRlyjzF3r3hbNu2lWeeed5qJ9Hg4LTn/E2Y8CHly1fg0KGDWZpqmhU9erzI9u2/8PbbQ2nbtj3lypUnMTGJiIgTbNmykUWLVuLh4fHA7Xh6etKz58vMmTOTESMG06DB05w9e5plyxZToUJFq41e2rfvxJYtGxkxYjBNmzbn/PnzrFsXlmG3VT+/ori6urF8+RLy5ctHnjx5qVixMr6+fg8cr4iIiC1SMihZFhhY32pji+DgjnTo0JING9ZmSzKYmJho+Qu9SE504ULCXet4ee1n4cL9ADg5OVOiRAnefHMUHTum7fRpb2/PhAlfEhIyjY0b1xMWthJvb18GDnyD55/vaXWt3r1fITY2hi1bNrJp0wYCA+vz+edf0759i2y/tzx58vDNNzOYO3cOmzdvYM2aVbi4uFCsWHH69OlntXPog+rbtx8eHp4sXfoTkyZ9ibt7ftq370y/fq9b7URat249Bg0aysKF8/n66y8pV64Cn3zyFd98M9Hqeg4ODowe/T7Tpk3ms88+xmg08u67/1UyKCIiOZadWSvfb8toNHHlyp3/em9rHBzs8fR0ISbmOqmpprufkAVhYSv56KOxzJr1vVUyaDabad26MQ0bNmb06LEcOLCPIUP68/XX06hZM8BSLyoqku7dO/Duu/+lbdv2AIwf/z5btmzk229/ZOLETzl8+BABAbX5+OMvCAoKoEuX7gQE1GXmzCmcO3cWP79iDBo0lMDA+hniWrRohdUuiLt27WDu3Dn89dcf2NnZU716DQYMGGJ5OPaqVSv4+OMPmD17Hk89Vd7qXr//fjazZk1jyZJQChUqnC3v38PsG3lwj7J/duyIpHPnlXett2xZexo0yHxnz9xE3zu2Tf1j29Q/tkt9Y9tu7Z8CBVxy5CPect4dyUMXHx9PbGwsMTExRET8zeeff0xiYiKtWrW5r+sZjUaGDx+Ep2cBXn/9DRo1amo5duTIYb74YgLNmrVkwIAh3LiRzOjRb3P1auwdr7lmzSrefnsoefPmY8CAwbz8cl9OnTrJwIGvWDaaadKkGc7OzqxbtybD+evWraFGjVrZlgiK3Cww0BtfXxdus8kldnbg6+tCYGD2bLYiIiIikhlNE5UsGzp0oNVrJycn3nnnPWrXDryv6924cYMmTZrTv/+gDMdOnz7JvHmLLGt7atYM4OWXn2fDhrV07fpsptdLSEjgq68+Jzi4EyNH/sdS3qZNMD16dOX77+cwcuR/yJfPhYYNG7Nhw1oGDhxi2Tb+r7/+4NSpCHr06HVf9yNyNwaDPePG1adv3/XY2WG1kUx6gjhuXP0c+RdIERERsR1KBiXLhg8fSbFixYG0B0ivXbuaCRM+JF++fFajelnRqVO3TMsDAupYbfJQpkxZXFxciIzMuO1+ur17dxMfH0eLFq2IjY21lNvbG6hYsTIHD+6zlLVu3Y4NG9Zy4MA+AgLqAGmjgs7OzjRufH/3InIvgoNLERLSIsNzBn18XBg3rj7BwaUeY3QiIiKSGygZlNsyGk2Eh0dz4UICRYrkw2RKG76oWLGS1ZrB5s1b0bv3C3z55afUr5/1DWQMBgOFC2c+HbNIkYzT5Nzc3ImLu/3W7+fOpe2SOGRI/0yPu7i4WP5du3ZdChb0Yt261QQE1MFkMrFhw1qCghqRL59LpueLZJfg4FK0aeNv9X0WGOitEUERERF5JJQMSqZCQyMyjFgUL36KPHky1rW3t6dmzQAWLfqRs2fPYHebhVAmU+aLo52cnCxTNDO7dmbutO9RetI6ZswHFChQMMNxg8Fg9e8WLVqzcuUyRowYxdGjh7l8+ZLVtvQiD5PBYK9NYkREROSxUDIoGYSGRtC37/oMD8SOjb2Btzds23beamQQwGhMe5B0YmIibm7uQNpGMzeLjo56eEHfJH1aqadnAWrXrnvX+q1bt2PBgnns2LGN8PAdeHh4UqfO/a1/FBERERF5UmguklgxGk2MHr0zQyJ4s6lTj2A0/jvKl5qayp49u3F0dMTf3x9vbx8MBgOHDx+wOm/ZskUPK2wrdesG4uLiwvffzyY1NTXD8ZiYGKvXZcqUpXTpsoSGLmfr1k00b97S6hllIiIiIiI5kX7jFSvh4dFWU0Mzk5DwF1Om/MhTT3kSE3OF9evXcu7cGXr2fBkXl7QHSjdu3IzFixcCdvj5FWXnzm0ZkrCHxcXFlREj3mHcuPfo0+cFmjVriYeHJxcuRLNr13aqVKnG8OEjrc5p3bodkyd/BUDLlvf3iAwRERERkSeJkkGxcuFCwl3reHntZ+HC/QA4OTlTokQJ3nxzFB07drXUGTbsbYzGVH7+eQmOjk40bdqcgQPf4MUXM38cRHZr2bI1Xl5ezJv3HT/+OJcbN1IoVKgQ1arVoG3bDpnWnzZtEr6+flSsWPmRxCgiIiIi8jjZme+0E0cuZzSauHLlzqNktsbBwR5PTxdiYq6Tmpr5hi13smNHJJ07r7xrvWXL2ueoTS9iY2Pp2LEVvXu/yssvv/JQ2njQvpGHS/1ju9Q3tk39Y9vUP7ZLfWPbbu2fAgVccuRu3znvjuSBBAZ64+vrwm02BMXODnx9XQgMzPjIhydZWNhKTCaTdhEVERERkVxDyaBYMRjsGTeuPkCGhDD99bhx9XPMX0b279/LkiUL+f772TRs2Bgfn5wz2ikiIiIicic54zd6yVbBwaUICWmBj4/1Q9d9fFwICWlBcHCpxxRZ9pszZyaTJk2kbNmnGDbsrccdjoiIiIjII6MNZCRTwcGlaNPGn/DwaC5cSKBIkXwEBnrnmBHBdN98M+NxhyAiIiIi8lgoGZTbMhjsc9QmMSIiIiIi8q+cNcwjIiIiIiIi90TJoIiIiIiISC6kZFBERERERCQXUjIoIiIiIiKSCykZFBERERERyYWUDIqIiIiIiORCSgZFRERERERyISWDIiIiIiIiuZCSQRERERERkVxIyaCIiIiIiEgupGRQREREREQkF1IyKCIiIiIikgspGRQREREREcmFlAyKiIiIiIjkQkoGRUREREREciElgyIiIiIiIrmQkkEREREREZFcSMmgiIiIiIhILqRkUEREREREJBdSMigiIiIiIpILKRkUERERERHJhZQMioiIiIiI5EJKBkVERERERHIhJYMiIiIiIiK5kJJBERERERGRXEjJoIiIiIiISC6kZFBERERERCQXUjIoIiIiIiKSCykZFBERERERyYWUDIqIiIiIiORCSgZFRERERERyISWDIiIiIiIiuZCSQRERERERkVxIyaCIiIiIiEgupGRQREREREQkF1IyKCIiIiIikgspGRQREREREcmFlAyKiIiIiIjkQkoGRUREREREciElgyIiIiIiIrmQkkEREREREZFcSMmgiIiIiIhILqRkUEREREREJBdSMigiIiIiIpILKRkUERERERHJhZQMioiIiIiI5EI2lQyuXr2aAQMG8PTTT1O9enU6duzI4sWLMZvNdzzPbDYzY8YMGjduTNWqVXn22Wc5dOjQowlaRERERETkCWRTyeC3335L3rx5GTVqFFOnTuXpp59mzJgxTJ48+Y7nzZw5k6+//pqXX36Z6dOnU6hQIfr06cPZs2cfUeQiIiIiIiJPFofHHcDNpk6dSoECBSyv69WrR2xsLHPmzGHgwIHY22fMXZOTk5k+fTp9+vTh5ZdfBqBWrVq0bt2akJAQ3n///UcUvYiIiIiIyJPDpkYGb04E01WoUIH4+HgSEhIyPefAgQPEx8fTpk0bS5mTkxMtWrTgl19+eWixioiIiIiIPMlsamQwM/v376dIkSK4urpmejwiIgKAUqVKWZWXLl2a7777jqSkJPLkyXPf7Ts42FS+fFcGg73Vf8V2qG9sm/rHdqlvbJv6x7apf2yX+sa25Zb+selkcN++fYSFhTFy5Mjb1rl27RpOTk44Oztblbu7u2M2m7l69ep9J4P29nZ4errc17mPm7t73scdgtyG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s0TQxiaZAgUuEBtbipiY8ixbZqBlSz/atGlHmzbt6NWrL3FxsRw8eOC+fUdGRpi9dnBwoGzZchiNRlJSkrGzs6N1az/27/+BoKC/U7W/9xLRjLC1tUtVZjQaWbt21UP3JWKpNDMoIiIiIo8sMDDEdGnoHS4uF7GzSyImpgxGIwQHxxIYGIKvrxcANWrUMj2Avnr1mun2PWnSOAoXLkytWnXw8PDgwoULrF+/hqZNfXF2dgHguefGcfLkcZ599mm6du1B2bLliIqK4q+//uD48aNs2/bDQx1PmTJl8fYuyZdfzubGjeu4uLiwb98PZvcUijzulAyKiIiIyCMLDY1LVebm9jcGgx1xcSXTrGdra0uzZs3ZuXMbkZGR6fbdvXtPdu3azurVy7l16xZFixajd+9+DB06wlTHw6Mw8+cvZuHC+f9/T+FNChYsSNmyFRg9evxDH4+9vT3vv/8Js2d/wNKli3BycqRFizb06tWXp58e8ND9iVgiG6Pufk1XSoqBsLDYB1e0IPb2tri7uxAeHktysiG3hyN3UWwsm+JjuRQby6b4WLacjM+hQ8H06LH5gfU2bOhqmhm0ZvrsWLZ74+Ph4YKdXd67wy7vHZGIiIiI5DgfnxJ4eblgY5P2dhsb8PJywcdHD2oXsRRKBkVERETkkdnZ2TJjRjOAVAnhndczZjTLk7MrIo8rfRpFREREJEv4+5cnIKA9np4uZuWeni4EBLTH3798Lo1MRNKiBWREREREJMv4+5enc+eyBAaGEBoaR/Hizvj4lNCMoIgFUjIoIiIiIlnKzs5Wi8SIPAb0JxoRERERERErpGRQRERERETECikZFBERERERsUJKBkVERERERKyQkkERERERERErpGRQRERERETECikZFBERERERsUJKBkVERERERKyQkkERERERERErpGRQRERERETECikZFBERERERsUJKBkVERERERKyQkkERERERERErpGRQRERERETECikZFBERERERsUJKBkVERERERKyQkkERERERERErpGRQRERERETECikZFBERERERsUJKBkVERERERKyQkkERERERERErpGRQRERERETECikZFBERERERsUJKBkVERERERKyQkkERERERERErpGRQRERERETECikZFBERERERsUJKBkVERERERKyQkkERERERERErpGRQRERERETECikZFBERERERsUJKBkVERERERKyQkkERERERERErpGRQRERERETECikZFBERERERsUJKBkVERERERKyQkkERERERERErpGRQRERERETECikZFBERERERsUJKBkVERERERKyQkkERERERERErpGRQRERERETECikZFBERERGxAFu3bqZ584b88cdvuT0Ui3Lnfbl2LTi3h5Ln2Of2AEREREREssPWrZt59903AfjyywXUqVPXbLvRaKRXL3+uXw+lWbPmzJo1O+cHaQHWr19Lvnz56NKla47uNyUlhe3bv2fbti3888/fxMffonDhItSv35CePftQtWr1dNvm1pjzGiWDIiIiIpKnOTo6sWvX9lTJ4M8/n+D69VAcHR1zZ2AWYsOGtRQsWChHE6uEhHheeeV//PTTYerWrc+QIcNwc3MjJOQaP/ywi23btvDtt1soVqw4HTt2oW3bDmZxyo0x50VKBkVEREQkT2vatBn79u1m4sQXsbf/79ffXbt2UKVKNSIjI3JvcHlUcnIyRqMRBweHNLd/+eWn/PTTYSZMmEzfvgPNtg0bNpLVq1eYXtvZ2WFnZ5et47VWumdQRERERPK0du06EhkZybFjP5nKkpKS2LdvD+3bd0yzzYoVS3nuueF06dIWPz9fhg8fzN69u1PVa968IR9//D4HDuxjyJC+tGnTlMGD+xIYeDhV3Rs3rvPee2/RvXsnWrRogp+fH++//y5JSUlm9RITE/n884/x929Hu3bNefnlFwkPD0/V35Ejhxgz5hnatWtO+/Yteeml5wkK+seszs2b//Luu2/So0cX2rRpSvfuHZk6dbLp/rvevbty/nwQv/xykubNG9K8eUPGjXvW1D46OppPP/2Inj2foE2bpvTr9yTLli3CYDCY6ly7Fkzz5g1ZsWIpa9asoG/f7vj5NePChaA039vr10P57rv1NGrUJFUiCLeTv4EDh1CsWHEg9T2D6Y356tUrNG/ekNWrl6fq89dfT9G8eUN27dqe5pislWYGRURERCRP8/T0ombNWuzevYOmTX0BCAw8RGxsDO3adWTdutWp2qxbtwpf35a0b9+J5OQkdu/eyfTpU5k1azbNmjU3q3v69Cn2799Ljx69cXZ2Yd26VUyb9j++/XYLBQsWAuDff28wcuRQYmKi6datB+XKlSM6OoKtW7cRHx9vNoM2e/YHuLq6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MzVGa6BkUEREREQea6GhcVlar0GDRkydOp1lyxbz2Wcf4+npxejR47l2LTjTyWDRosWYO3cxCxbMYefO7cTFxVK8eHGaNGmaqccddOjQiSJFirBs2WJWrlxKYmISRYsWpU6denTp0g2AYsWK065dB06cOMaOHVuxs7OjdOmyvPXWTLPFc4YNe4bQ0GusWLGUuLhY6tatT4MGjciXLx9ffDGPpUsXsnfvbrZv/x4XFxdKlSrN8OGjKFCgQKbeC4B8+fLx4YefsW3bZrZt+57FixcQHx9PkSJFqV+/Ia+//jZFixZLt316Y76jatVqlCtXnosXL2gV0fuwMWb2zlYrkJJiICws61c5yk53nlkTHh5LcrLhwQ0kxyg2lk3xsVyKjWVTfCybtcTn0KFgevR48P18GzZ0xdfXKwdG9GDWEpvcNGzYQNzcCvLpp3Meuu298fHwcEl3YZ/HWd47IhERERGxKj4+JfDyciG9NUVsbMDLywUfn9SPgJC86Y8/fuPcub8yvUCNtVAyKCIiIiKPNTs7W2bMaAaQKiG883rGjGZ5cmZHzAUF/c22bVt47723KFy4CH5+7XN7SBZNnwgREREReez5+5cnIKA9np4uZuWeni4EBLTH3798Lo1MctLevXt49903SU5O5o033sHJKWPPPrRWWkBGRERERPIEf//ydO5clsDAEEJD4yhe3BkfnxKaEbQiI0aMYsSIUbk9jMeGkkERERERyTPs7GwtZpEYEUunP5OIiIiIiIhYISWDIiIiIiIiVkjJoIiIiIiIiBVSMigiIiIiImKFlAyKiIiIiIhYISWDIiIiIiIiVkjJoIiIiIiIiBVSMigiIiIiImKFlAyKiIiIiIhYISWDIiIiIiIiVkjJoIiIiIiIiBVSMigiIiIiImKFlAyKiIiIiIhYISWDIiIiIiIiVkjJoIiIiIiIiBVSMigiIiIiImKFlAyKiIiIiIhYISWDIiIiIiIiVkjJoIiIiIiIiBVSMigiIiIiImKFbIxGozG3B2GpjEYjBsPj9/bY2dmSkmLI7WFIGhQby6b4WC7FxrIpPpZN8bFcio1luzs+trY22NjY5PKIsp6SQRERERERESuky0RFRERERESskJJBERERERERK6RkUERERERExAopGRQREREREbFCSgZFRERERESskJJBERERERERK6RkUERERERExAop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48aNVP3eqXvnclEREZHcoJlBERHJE/744w++/PJLevbsSfXq1Zk2bRrR0dHA7dm6xo0bc+zYMUJDQzPc5759+8wuEb2bnZ0d1apVo0GDBri4uHD48GEAmjVrZqpTtWpVfvvtNwwGg1nb06dPkz9/fsqVK/ewhykiIpJllAyKiMhjLykpiZdffplixYrx6quv8t577/Hvv//y7rvvmuqMHTuWlJQUXnzxRWJjY1P1ce9jd//9919+++03s0tE0xMWFsaCBQuoUqWKWTLYqVMn/v33X3bu3GlWd/v27bRp0ybN+wlFRERyii4TFRGRx96cOXP4/fffWbRoEQUKFKBq1aqMHTuW2bNn06lTJ1q1akXDhg2ZPn06M2bMoGPHjnTt2pXy5cuTmJjIhQsX2Lx5Mw4ODhQpUgS4fYmok5MTTZo0SbW/wYMHU7duXcqUKcONGzdYs2YNcXFxfP3112aPkejYsSN169bl5Zdf5u+//8bd3Z2VK1eSkpLC+PHjc+z9ERERSYuN8d4/hYqIiDxGzp49S9++fRkwYADTpk0zlaekpNCvXz9CQ0P5/vvvcXNzAzAljUePHuXGjRs4ODhQqlQpfH19GTBgAKVLlwZgwoQJxMfHM2/evFT7fO+999izZw+hoaEUKFCAZs2aMXHiRNM9ineLjIxk1qxZ7N69m4SEBGrVqsX//vc/atWqlU3viIiISMYoGRQREblHcnIyTZo0YfLkyQwaNCi3hyMiIpItdM+giIjIPSIjI3n66adp3759bg9FREQk22hmUERERERExAppZlBERERERMQKKRkUERERERGxQkoGRURERERErJCSQRERERERESukZFBERERERMQKKRkUERERERGxQkoGRURERERErJCSQRERERERESukZFBERERERMQKKRkUERERERGxQv8HMLYVHIT0dPkAAAAASUVORK5CYII=\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "EPL_player_df"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 617
        },
        "id": "wrjHrDmJ8OlM",
        "outputId": "16a5c7bf-b4e8-4cfb-f84e-8c8324751904"
      },
      "execution_count": 59,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "        id       player_name games_x time_x goals_1wks_x            xG_1wks_x  \\\n",
              "0     8260    Erling Haaland       4    355            6    4.720618188381195   \n",
              "1     6552      Bryan Mbeumo       4    360            4    3.798690915107727   \n",
              "2    10177     Evan Ferguson       4    205            4   2.2254600673913956   \n",
              "3      453     Son Heung-Min       4    343            3   1.4514826834201813   \n",
              "4     1776      Jarrod Bowen       4    360            3    1.852049708366394   \n",
              "..     ...               ...     ...    ...          ...                  ...   \n",
              "387  11903        Oscar Bobb       1      1            0                    0   \n",
              "388  11926     Edson √Ålvarez       3    179            0   0.0643242746591568   \n",
              "389  11984  Youssef Chermiti       1     22            0  0.06607918441295624   \n",
              "390  11998   Hannes Delcroix       2    129            0  0.23279432207345963   \n",
              "391  12027    Mohammed Kudus       1      1            0                    0   \n",
              "\n",
              "    assists_1wks_x            xA_1wks_x shots_1wks_x key_passes_1wks_x  ...  \\\n",
              "0                1    1.096818134188652           20                 6  ...   \n",
              "1                0  0.47218552231788635            9                 5  ...   \n",
              "2                0  0.06968338042497635           13                 1  ...   \n",
              "3                0   1.3192270509898663           10                 9  ...   \n",
              "4                1   0.8080089539289474           13                 4  ...   \n",
              "..             ...                  ...          ...               ...  ...   \n",
              "387              0                    0            0                 0  ...   \n",
              "388              0  0.05303558334708214            1                 1  ...   \n",
              "389              0                    0            1                 0  ...   \n",
              "390              0   0.0830167606472969            4                 2  ...   \n",
              "391              0                    0            0                 0  ...   \n",
              "\n",
              "    shots_1wks_y key_passes_1wks_y yellow_cards red_cards position_y  \\\n",
              "0             20                 6            0         0          F   \n",
              "1              9                 5            0         0          F   \n",
              "2             13                 1            0         0        F S   \n",
              "3             10                 9            0         0        F M   \n",
              "4             13                 4            1         0          M   \n",
              "..           ...               ...          ...       ...        ...   \n",
              "387            0                 0            0         0          S   \n",
              "388            1                 1            1         0        M S   \n",
              "389            1                 0            1         0          S   \n",
              "390            4                 2            1         0        D S   \n",
              "391            0                 0            0         0          S   \n",
              "\n",
              "        team_title_y npg_1wks_y          npxG_1wks_y              xGChain  \\\n",
              "0    Manchester City          5    3.198280453681946    4.243555068969727   \n",
              "1          Brentford          2    2.276353180408478   3.4031228870153427   \n",
              "2           Brighton          4   2.2254600673913956    2.667408235371113   \n",
              "3          Tottenham          3   1.4514826834201813    4.069049090147018   \n",
              "4           West Ham          3    1.852049708366394    2.132258176803589   \n",
              "..               ...        ...                  ...                  ...   \n",
              "387  Manchester City          0                    0  0.12880565226078033   \n",
              "388         West Ham          0   0.0643242746591568   0.6627934575080872   \n",
              "389          Everton          0  0.06607918441295624                    0   \n",
              "390          Burnley          0  0.23279432207345963   0.5750201642513275   \n",
              "391         West Ham          0                    0                    0   \n",
              "\n",
              "               xGBuildup  \n",
              "0     0.5024585798382759  \n",
              "1     1.0115868896245956  \n",
              "2       0.37226477637887  \n",
              "3      1.541113331913948  \n",
              "4    0.35537485778331757  \n",
              "..                   ...  \n",
              "387  0.12880565226078033  \n",
              "388   0.5454335808753967  \n",
              "389                    0  \n",
              "390   0.4920034073293209  \n",
              "391                    0  \n",
              "\n",
              "[392 rows x 48 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-d0c7d0cb-1366-4c36-8178-b984372b26bf\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>player_name</th>\n",
              "      <th>games_x</th>\n",
              "      <th>time_x</th>\n",
              "      <th>goals_1wks_x</th>\n",
              "      <th>xG_1wks_x</th>\n",
              "      <th>assists_1wks_x</th>\n",
              "      <th>xA_1wks_x</th>\n",
              "      <th>shots_1wks_x</th>\n",
              "      <th>key_passes_1wks_x</th>\n",
              "      <th>...</th>\n",
              "      <th>shots_1wks_y</th>\n",
              "      <th>key_passes_1wks_y</th>\n",
              "      <th>yellow_cards</th>\n",
              "      <th>red_cards</th>\n",
              "      <th>position_y</th>\n",
              "      <th>team_title_y</th>\n",
              "      <th>npg_1wks_y</th>\n",
              "      <th>npxG_1wks_y</th>\n",
              "      <th>xGChain</th>\n",
              "      <th>xGBuildup</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>8260</td>\n",
              "      <td>Erling Haaland</td>\n",
              "      <td>4</td>\n",
              "      <td>355</td>\n",
              "      <td>6</td>\n",
              "      <td>4.720618188381195</td>\n",
              "      <td>1</td>\n",
              "      <td>1.096818134188652</td>\n",
              "      <td>20</td>\n",
              "      <td>6</td>\n",
              "      <td>...</td>\n",
              "      <td>20</td>\n",
              "      <td>6</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>F</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>5</td>\n",
              "      <td>3.198280453681946</td>\n",
              "      <td>4.243555068969727</td>\n",
              "      <td>0.5024585798382759</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>6552</td>\n",
              "      <td>Bryan Mbeumo</td>\n",
              "      <td>4</td>\n",
              "      <td>360</td>\n",
              "      <td>4</td>\n",
              "      <td>3.798690915107727</td>\n",
              "      <td>0</td>\n",
              "      <td>0.47218552231788635</td>\n",
              "      <td>9</td>\n",
              "      <td>5</td>\n",
              "      <td>...</td>\n",
              "      <td>9</td>\n",
              "      <td>5</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>F</td>\n",
              "      <td>Brentford</td>\n",
              "      <td>2</td>\n",
              "      <td>2.276353180408478</td>\n",
              "      <td>3.4031228870153427</td>\n",
              "      <td>1.0115868896245956</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>10177</td>\n",
              "      <td>Evan Ferguson</td>\n",
              "      <td>4</td>\n",
              "      <td>205</td>\n",
              "      <td>4</td>\n",
              "      <td>2.2254600673913956</td>\n",
              "      <td>0</td>\n",
              "      <td>0.06968338042497635</td>\n",
              "      <td>13</td>\n",
              "      <td>1</td>\n",
              "      <td>...</td>\n",
              "      <td>13</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>F S</td>\n",
              "      <td>Brighton</td>\n",
              "      <td>4</td>\n",
              "      <td>2.2254600673913956</td>\n",
              "      <td>2.667408235371113</td>\n",
              "      <td>0.37226477637887</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>453</td>\n",
              "      <td>Son Heung-Min</td>\n",
              "      <td>4</td>\n",
              "      <td>343</td>\n",
              "      <td>3</td>\n",
              "      <td>1.4514826834201813</td>\n",
              "      <td>0</td>\n",
              "      <td>1.3192270509898663</td>\n",
              "      <td>10</td>\n",
              "      <td>9</td>\n",
              "      <td>...</td>\n",
              "      <td>10</td>\n",
              "      <td>9</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>F M</td>\n",
              "      <td>Tottenham</td>\n",
              "      <td>3</td>\n",
              "      <td>1.4514826834201813</td>\n",
              "      <td>4.069049090147018</td>\n",
              "      <td>1.541113331913948</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>1776</td>\n",
              "      <td>Jarrod Bowen</td>\n",
              "      <td>4</td>\n",
              "      <td>360</td>\n",
              "      <td>3</td>\n",
              "      <td>1.852049708366394</td>\n",
              "      <td>1</td>\n",
              "      <td>0.8080089539289474</td>\n",
              "      <td>13</td>\n",
              "      <td>4</td>\n",
              "      <td>...</td>\n",
              "      <td>13</td>\n",
              "      <td>4</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>M</td>\n",
              "      <td>West Ham</td>\n",
              "      <td>3</td>\n",
              "      <td>1.852049708366394</td>\n",
              "      <td>2.132258176803589</td>\n",
              "      <td>0.35537485778331757</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>387</th>\n",
              "      <td>11903</td>\n",
              "      <td>Oscar Bobb</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>S</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.12880565226078033</td>\n",
              "      <td>0.12880565226078033</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>388</th>\n",
              "      <td>11926</td>\n",
              "      <td>Edson √Ålvarez</td>\n",
              "      <td>3</td>\n",
              "      <td>179</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0643242746591568</td>\n",
              "      <td>0</td>\n",
              "      <td>0.05303558334708214</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>...</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>M S</td>\n",
              "      <td>West Ham</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0643242746591568</td>\n",
              "      <td>0.6627934575080872</td>\n",
              "      <td>0.5454335808753967</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>389</th>\n",
              "      <td>11984</td>\n",
              "      <td>Youssef Chermiti</td>\n",
              "      <td>1</td>\n",
              "      <td>22</td>\n",
              "      <td>0</td>\n",
              "      <td>0.06607918441295624</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>S</td>\n",
              "      <td>Everton</td>\n",
              "      <td>0</td>\n",
              "      <td>0.06607918441295624</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>390</th>\n",
              "      <td>11998</td>\n",
              "      <td>Hannes Delcroix</td>\n",
              "      <td>2</td>\n",
              "      <td>129</td>\n",
              "      <td>0</td>\n",
              "      <td>0.23279432207345963</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0830167606472969</td>\n",
              "      <td>4</td>\n",
              "      <td>2</td>\n",
              "      <td>...</td>\n",
              "      <td>4</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>D S</td>\n",
              "      <td>Burnley</td>\n",
              "      <td>0</td>\n",
              "      <td>0.23279432207345963</td>\n",
              "      <td>0.5750201642513275</td>\n",
              "      <td>0.4920034073293209</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>391</th>\n",
              "      <td>12027</td>\n",
              "      <td>Mohammed Kudus</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>S</td>\n",
              "      <td>West Ham</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>392 rows √ó 48 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-d0c7d0cb-1366-4c36-8178-b984372b26bf')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-d0c7d0cb-1366-4c36-8178-b984372b26bf button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-d0c7d0cb-1366-4c36-8178-b984372b26bf');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-2bba5135-1077-4472-8690-704c2e6f6276\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-2bba5135-1077-4472-8690-704c2e6f6276')\"\n",
              "            title=\"Suggest charts.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-2bba5135-1077-4472-8690-704c2e6f6276 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 59
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "EPL_player_df['goals'] = EPL_player_df['goals_1wks_x'].astype(int)\n",
        "top25goals = EPL_player_df.nlargest(20, 'goals')\n",
        "top25goals"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "id": "3H-vTRXF8VDs",
        "outputId": "a4a0844d-aaf7-4d19-c956-6e15aa6ee7a2"
      },
      "execution_count": 60,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "       id      player_name games_x time_x goals_1wks_x           xG_1wks_x  \\\n",
              "0    8260   Erling Haaland       4    355            6   4.720618188381195   \n",
              "1    6552     Bryan Mbeumo       4    360            4   3.798690915107727   \n",
              "2   10177    Evan Ferguson       4    205            4  2.2254600673913956   \n",
              "3     453    Son Heung-Min       4    343            3  1.4514826834201813   \n",
              "4    1776     Jarrod Bowen       4    360            3   1.852049708366394   \n",
              "5    3697  Odsonne Edouard       4    342            3  3.0324513763189316   \n",
              "6    6049      Solly March       4    324            3   2.172745257616043   \n",
              "7    7814    Taiwo Awoniyi       4    253            3  2.2981733083724976   \n",
              "8     468    Callum Wilson       4     76            2  1.6458185389637947   \n",
              "9     531  Michail Antonio       4    329            2  0.9052570015192032   \n",
              "10    618  Raheem Sterling       4    358            2  1.5475750043988228   \n",
              "11   1250    Mohamed Salah       4    354            2   3.051010400056839   \n",
              "12   1679  Dominic Solanke       4    360            2  1.9277420565485954   \n",
              "13   2496            Rodri       4    353            2   1.057547777891159   \n",
              "14   2517  Martin Odegaard       4    356            2  1.3025853112339973   \n",
              "15   5232   Alexander Isak       4    300            2  1.6722202897071838   \n",
              "16   5786      Yoane Wissa       4    344            2  1.9205424934625626   \n",
              "17   6482    Eddie Nketiah       4    281            2  1.7406337410211563   \n",
              "18   6556     Moussa Diaby       4    329            2  0.8467069044709206   \n",
              "19   6818   James Maddison       4    348            2  1.5790969729423523   \n",
              "\n",
              "   assists_1wks_x             xA_1wks_x shots_1wks_x key_passes_1wks_x  ...  \\\n",
              "0               1     1.096818134188652           20                 6  ...   \n",
              "1               0   0.47218552231788635            9                 5  ...   \n",
              "2               0   0.06968338042497635           13                 1  ...   \n",
              "3               0    1.3192270509898663           10                 9  ...   \n",
              "4               1    0.8080089539289474           13                 4  ...   \n",
              "5               0    0.2072524130344391           19                 3  ...   \n",
              "6               0    0.1520106978714466           11                 5  ...   \n",
              "7               1   0.45566320419311523            7                 4  ...   \n",
              "8               0  0.015900330618023872            7                 1  ...   \n",
              "9               0   0.15586480498313904            5                 1  ...   \n",
              "10              0    0.9067768380045891            9                 6  ...   \n",
              "11              2     1.549212247133255           14                 7  ...   \n",
              "12              1   0.24999123811721802            9                 6  ...   \n",
              "13              1    0.5278989188373089            9                 2  ...   \n",
              "14              0   0.13946469873189926           14                 2  ...   \n",
              "15              0   0.04466302692890167            8                 1  ...   \n",
              "16              0   0.07477104663848877           15                 2  ...   \n",
              "17              0    0.3231582045555115           11                 5  ...   \n",
              "18              1    1.9336974620819092            9                 7  ...   \n",
              "19              2    1.1814547665417194           12                10  ...   \n",
              "\n",
              "   key_passes_1wks_y yellow_cards red_cards position_y       team_title_y  \\\n",
              "0                  6            0         0          F    Manchester City   \n",
              "1                  5            0         0          F          Brentford   \n",
              "2                  1            0         0        F S           Brighton   \n",
              "3                  9            0         0        F M          Tottenham   \n",
              "4                  4            1         0          M           West Ham   \n",
              "5                  3            0         0          F     Crystal Palace   \n",
              "6                  5            0         0          M           Brighton   \n",
              "7                  4            0         0        F S  Nottingham Forest   \n",
              "8                  1            0         0          S   Newcastle United   \n",
              "9                  1            1         0          F           West Ham   \n",
              "10                 6            0         0          M            Chelsea   \n",
              "11                 7            0         0          F          Liverpool   \n",
              "12                 6            0         0          F        Bournemouth   \n",
              "13                 2            1         0          M    Manchester City   \n",
              "14                 2            0         0          M            Arsenal   \n",
              "15                 1            0         0          F   Newcastle United   \n",
              "16                 2            0         0          F          Brentford   \n",
              "17                 5            0         0        F S            Arsenal   \n",
              "18                 7            0         0        F M        Aston Villa   \n",
              "19                10            1         0          M          Tottenham   \n",
              "\n",
              "   npg_1wks_y         npxG_1wks_y             xGChain             xGBuildup  \\\n",
              "0           5   3.198280453681946   4.243555068969727    0.5024585798382759   \n",
              "1           2   2.276353180408478  3.4031228870153427    1.0115868896245956   \n",
              "2           4  2.2254600673913956   2.667408235371113      0.37226477637887   \n",
              "3           3  1.4514826834201813   4.069049090147018     1.541113331913948   \n",
              "4           3   1.852049708366394   2.132258176803589   0.35537485778331757   \n",
              "5           3  3.0324513763189316   2.744321569800377    0.3521137423813343   \n",
              "6           3   2.172745257616043   3.237823724746704    1.1398873031139374   \n",
              "7           3  2.2981733083724976    2.09539857506752  0.015222105197608471   \n",
              "8           2  1.6458185389637947  1.7647592965513468    0.1030404269695282   \n",
              "9           2  0.9052570015192032  2.1987280398607254    1.1376062035560608   \n",
              "10          2  1.5475750043988228   4.516494452953339    2.3512800857424736   \n",
              "11          2  2.2898415625095367   2.727378189563751    0.6148081719875336   \n",
              "12          2  1.9277420565485954   2.196756213903427   0.08974084258079529   \n",
              "13          2   1.057547777891159  3.9699942767620087     3.670251578092575   \n",
              "14          1  0.5414532609283924  2.7732569575309753    2.1832747757434845   \n",
              "15          2  1.6722202897071838  1.9089746177196503    0.7165845483541489   \n",
              "16          2  1.9205424934625626  2.1650443971157074    1.0294761061668396   \n",
              "17          2  1.7406337410211563   2.260470688343048   0.46652770787477493   \n",
              "18          2  0.8467069044709206  3.5196747332811356    1.8412092700600624   \n",
              "19          2  1.5790969729423523   4.275703072547913     2.546371728181839   \n",
              "\n",
              "   goals  \n",
              "0      6  \n",
              "1      4  \n",
              "2      4  \n",
              "3      3  \n",
              "4      3  \n",
              "5      3  \n",
              "6      3  \n",
              "7      3  \n",
              "8      2  \n",
              "9      2  \n",
              "10     2  \n",
              "11     2  \n",
              "12     2  \n",
              "13     2  \n",
              "14     2  \n",
              "15     2  \n",
              "16     2  \n",
              "17     2  \n",
              "18     2  \n",
              "19     2  \n",
              "\n",
              "[20 rows x 49 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-463b473c-dc9d-4b1c-953c-6db116aa6157\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>player_name</th>\n",
              "      <th>games_x</th>\n",
              "      <th>time_x</th>\n",
              "      <th>goals_1wks_x</th>\n",
              "      <th>xG_1wks_x</th>\n",
              "      <th>assists_1wks_x</th>\n",
              "      <th>xA_1wks_x</th>\n",
              "      <th>shots_1wks_x</th>\n",
              "      <th>key_passes_1wks_x</th>\n",
              "      <th>...</th>\n",
              "      <th>key_passes_1wks_y</th>\n",
              "      <th>yellow_cards</th>\n",
              "      <th>red_cards</th>\n",
              "      <th>position_y</th>\n",
              "      <th>team_title_y</th>\n",
              "      <th>npg_1wks_y</th>\n",
              "      <th>npxG_1wks_y</th>\n",
              "      <th>xGChain</th>\n",
              "      <th>xGBuildup</th>\n",
              "      <th>goals</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>8260</td>\n",
              "      <td>Erling Haaland</td>\n",
              "      <td>4</td>\n",
              "      <td>355</td>\n",
              "      <td>6</td>\n",
              "      <td>4.720618188381195</td>\n",
              "      <td>1</td>\n",
              "      <td>1.096818134188652</td>\n",
              "      <td>20</td>\n",
              "      <td>6</td>\n",
              "      <td>...</td>\n",
              "      <td>6</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>F</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>5</td>\n",
              "      <td>3.198280453681946</td>\n",
              "      <td>4.243555068969727</td>\n",
              "      <td>0.5024585798382759</td>\n",
              "      <td>6</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>6552</td>\n",
              "      <td>Bryan Mbeumo</td>\n",
              "      <td>4</td>\n",
              "      <td>360</td>\n",
              "      <td>4</td>\n",
              "      <td>3.798690915107727</td>\n",
              "      <td>0</td>\n",
              "      <td>0.47218552231788635</td>\n",
              "      <td>9</td>\n",
              "      <td>5</td>\n",
              "      <td>...</td>\n",
              "      <td>5</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>F</td>\n",
              "      <td>Brentford</td>\n",
              "      <td>2</td>\n",
              "      <td>2.276353180408478</td>\n",
              "      <td>3.4031228870153427</td>\n",
              "      <td>1.0115868896245956</td>\n",
              "      <td>4</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>10177</td>\n",
              "      <td>Evan Ferguson</td>\n",
              "      <td>4</td>\n",
              "      <td>205</td>\n",
              "      <td>4</td>\n",
              "      <td>2.2254600673913956</td>\n",
              "      <td>0</td>\n",
              "      <td>0.06968338042497635</td>\n",
              "      <td>13</td>\n",
              "      <td>1</td>\n",
              "      <td>...</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>F S</td>\n",
              "      <td>Brighton</td>\n",
              "      <td>4</td>\n",
              "      <td>2.2254600673913956</td>\n",
              "      <td>2.667408235371113</td>\n",
              "      <td>0.37226477637887</td>\n",
              "      <td>4</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>453</td>\n",
              "      <td>Son Heung-Min</td>\n",
              "      <td>4</td>\n",
              "      <td>343</td>\n",
              "      <td>3</td>\n",
              "      <td>1.4514826834201813</td>\n",
              "      <td>0</td>\n",
              "      <td>1.3192270509898663</td>\n",
              "      <td>10</td>\n",
              "      <td>9</td>\n",
              "      <td>...</td>\n",
              "      <td>9</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>F M</td>\n",
              "      <td>Tottenham</td>\n",
              "      <td>3</td>\n",
              "      <td>1.4514826834201813</td>\n",
              "      <td>4.069049090147018</td>\n",
              "      <td>1.541113331913948</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>1776</td>\n",
              "      <td>Jarrod Bowen</td>\n",
              "      <td>4</td>\n",
              "      <td>360</td>\n",
              "      <td>3</td>\n",
              "      <td>1.852049708366394</td>\n",
              "      <td>1</td>\n",
              "      <td>0.8080089539289474</td>\n",
              "      <td>13</td>\n",
              "      <td>4</td>\n",
              "      <td>...</td>\n",
              "      <td>4</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>M</td>\n",
              "      <td>West Ham</td>\n",
              "      <td>3</td>\n",
              "      <td>1.852049708366394</td>\n",
              "      <td>2.132258176803589</td>\n",
              "      <td>0.35537485778331757</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>3697</td>\n",
              "      <td>Odsonne Edouard</td>\n",
              "      <td>4</td>\n",
              "      <td>342</td>\n",
              "      <td>3</td>\n",
              "      <td>3.0324513763189316</td>\n",
              "      <td>0</td>\n",
              "      <td>0.2072524130344391</td>\n",
              "      <td>19</td>\n",
              "      <td>3</td>\n",
              "      <td>...</td>\n",
              "      <td>3</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>F</td>\n",
              "      <td>Crystal Palace</td>\n",
              "      <td>3</td>\n",
              "      <td>3.0324513763189316</td>\n",
              "      <td>2.744321569800377</td>\n",
              "      <td>0.3521137423813343</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>6049</td>\n",
              "      <td>Solly March</td>\n",
              "      <td>4</td>\n",
              "      <td>324</td>\n",
              "      <td>3</td>\n",
              "      <td>2.172745257616043</td>\n",
              "      <td>0</td>\n",
              "      <td>0.1520106978714466</td>\n",
              "      <td>11</td>\n",
              "      <td>5</td>\n",
              "      <td>...</td>\n",
              "      <td>5</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>M</td>\n",
              "      <td>Brighton</td>\n",
              "      <td>3</td>\n",
              "      <td>2.172745257616043</td>\n",
              "      <td>3.237823724746704</td>\n",
              "      <td>1.1398873031139374</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>7814</td>\n",
              "      <td>Taiwo Awoniyi</td>\n",
              "      <td>4</td>\n",
              "      <td>253</td>\n",
              "      <td>3</td>\n",
              "      <td>2.2981733083724976</td>\n",
              "      <td>1</td>\n",
              "      <td>0.45566320419311523</td>\n",
              "      <td>7</td>\n",
              "      <td>4</td>\n",
              "      <td>...</td>\n",
              "      <td>4</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>F S</td>\n",
              "      <td>Nottingham Forest</td>\n",
              "      <td>3</td>\n",
              "      <td>2.2981733083724976</td>\n",
              "      <td>2.09539857506752</td>\n",
              "      <td>0.015222105197608471</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>468</td>\n",
              "      <td>Callum Wilson</td>\n",
              "      <td>4</td>\n",
              "      <td>76</td>\n",
              "      <td>2</td>\n",
              "      <td>1.6458185389637947</td>\n",
              "      <td>0</td>\n",
              "      <td>0.015900330618023872</td>\n",
              "      <td>7</td>\n",
              "      <td>1</td>\n",
              "      <td>...</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>S</td>\n",
              "      <td>Newcastle United</td>\n",
              "      <td>2</td>\n",
              "      <td>1.6458185389637947</td>\n",
              "      <td>1.7647592965513468</td>\n",
              "      <td>0.1030404269695282</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>531</td>\n",
              "      <td>Michail Antonio</td>\n",
              "      <td>4</td>\n",
              "      <td>329</td>\n",
              "      <td>2</td>\n",
              "      <td>0.9052570015192032</td>\n",
              "      <td>0</td>\n",
              "      <td>0.15586480498313904</td>\n",
              "      <td>5</td>\n",
              "      <td>1</td>\n",
              "      <td>...</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>F</td>\n",
              "      <td>West Ham</td>\n",
              "      <td>2</td>\n",
              "      <td>0.9052570015192032</td>\n",
              "      <td>2.1987280398607254</td>\n",
              "      <td>1.1376062035560608</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10</th>\n",
              "      <td>618</td>\n",
              "      <td>Raheem Sterling</td>\n",
              "      <td>4</td>\n",
              "      <td>358</td>\n",
              "      <td>2</td>\n",
              "      <td>1.5475750043988228</td>\n",
              "      <td>0</td>\n",
              "      <td>0.9067768380045891</td>\n",
              "      <td>9</td>\n",
              "      <td>6</td>\n",
              "      <td>...</td>\n",
              "      <td>6</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>M</td>\n",
              "      <td>Chelsea</td>\n",
              "      <td>2</td>\n",
              "      <td>1.5475750043988228</td>\n",
              "      <td>4.516494452953339</td>\n",
              "      <td>2.3512800857424736</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>11</th>\n",
              "      <td>1250</td>\n",
              "      <td>Mohamed Salah</td>\n",
              "      <td>4</td>\n",
              "      <td>354</td>\n",
              "      <td>2</td>\n",
              "      <td>3.051010400056839</td>\n",
              "      <td>2</td>\n",
              "      <td>1.549212247133255</td>\n",
              "      <td>14</td>\n",
              "      <td>7</td>\n",
              "      <td>...</td>\n",
              "      <td>7</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>F</td>\n",
              "      <td>Liverpool</td>\n",
              "      <td>2</td>\n",
              "      <td>2.2898415625095367</td>\n",
              "      <td>2.727378189563751</td>\n",
              "      <td>0.6148081719875336</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>12</th>\n",
              "      <td>1679</td>\n",
              "      <td>Dominic Solanke</td>\n",
              "      <td>4</td>\n",
              "      <td>360</td>\n",
              "      <td>2</td>\n",
              "      <td>1.9277420565485954</td>\n",
              "      <td>1</td>\n",
              "      <td>0.24999123811721802</td>\n",
              "      <td>9</td>\n",
              "      <td>6</td>\n",
              "      <td>...</td>\n",
              "      <td>6</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>F</td>\n",
              "      <td>Bournemouth</td>\n",
              "      <td>2</td>\n",
              "      <td>1.9277420565485954</td>\n",
              "      <td>2.196756213903427</td>\n",
              "      <td>0.08974084258079529</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>13</th>\n",
              "      <td>2496</td>\n",
              "      <td>Rodri</td>\n",
              "      <td>4</td>\n",
              "      <td>353</td>\n",
              "      <td>2</td>\n",
              "      <td>1.057547777891159</td>\n",
              "      <td>1</td>\n",
              "      <td>0.5278989188373089</td>\n",
              "      <td>9</td>\n",
              "      <td>2</td>\n",
              "      <td>...</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>M</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>2</td>\n",
              "      <td>1.057547777891159</td>\n",
              "      <td>3.9699942767620087</td>\n",
              "      <td>3.670251578092575</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>14</th>\n",
              "      <td>2517</td>\n",
              "      <td>Martin Odegaard</td>\n",
              "      <td>4</td>\n",
              "      <td>356</td>\n",
              "      <td>2</td>\n",
              "      <td>1.3025853112339973</td>\n",
              "      <td>0</td>\n",
              "      <td>0.13946469873189926</td>\n",
              "      <td>14</td>\n",
              "      <td>2</td>\n",
              "      <td>...</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>M</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>1</td>\n",
              "      <td>0.5414532609283924</td>\n",
              "      <td>2.7732569575309753</td>\n",
              "      <td>2.1832747757434845</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>15</th>\n",
              "      <td>5232</td>\n",
              "      <td>Alexander Isak</td>\n",
              "      <td>4</td>\n",
              "      <td>300</td>\n",
              "      <td>2</td>\n",
              "      <td>1.6722202897071838</td>\n",
              "      <td>0</td>\n",
              "      <td>0.04466302692890167</td>\n",
              "      <td>8</td>\n",
              "      <td>1</td>\n",
              "      <td>...</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>F</td>\n",
              "      <td>Newcastle United</td>\n",
              "      <td>2</td>\n",
              "      <td>1.6722202897071838</td>\n",
              "      <td>1.9089746177196503</td>\n",
              "      <td>0.7165845483541489</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>16</th>\n",
              "      <td>5786</td>\n",
              "      <td>Yoane Wissa</td>\n",
              "      <td>4</td>\n",
              "      <td>344</td>\n",
              "      <td>2</td>\n",
              "      <td>1.9205424934625626</td>\n",
              "      <td>0</td>\n",
              "      <td>0.07477104663848877</td>\n",
              "      <td>15</td>\n",
              "      <td>2</td>\n",
              "      <td>...</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>F</td>\n",
              "      <td>Brentford</td>\n",
              "      <td>2</td>\n",
              "      <td>1.9205424934625626</td>\n",
              "      <td>2.1650443971157074</td>\n",
              "      <td>1.0294761061668396</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>17</th>\n",
              "      <td>6482</td>\n",
              "      <td>Eddie Nketiah</td>\n",
              "      <td>4</td>\n",
              "      <td>281</td>\n",
              "      <td>2</td>\n",
              "      <td>1.7406337410211563</td>\n",
              "      <td>0</td>\n",
              "      <td>0.3231582045555115</td>\n",
              "      <td>11</td>\n",
              "      <td>5</td>\n",
              "      <td>...</td>\n",
              "      <td>5</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>F S</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>2</td>\n",
              "      <td>1.7406337410211563</td>\n",
              "      <td>2.260470688343048</td>\n",
              "      <td>0.46652770787477493</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>18</th>\n",
              "      <td>6556</td>\n",
              "      <td>Moussa Diaby</td>\n",
              "      <td>4</td>\n",
              "      <td>329</td>\n",
              "      <td>2</td>\n",
              "      <td>0.8467069044709206</td>\n",
              "      <td>1</td>\n",
              "      <td>1.9336974620819092</td>\n",
              "      <td>9</td>\n",
              "      <td>7</td>\n",
              "      <td>...</td>\n",
              "      <td>7</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>F M</td>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>2</td>\n",
              "      <td>0.8467069044709206</td>\n",
              "      <td>3.5196747332811356</td>\n",
              "      <td>1.8412092700600624</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>19</th>\n",
              "      <td>6818</td>\n",
              "      <td>James Maddison</td>\n",
              "      <td>4</td>\n",
              "      <td>348</td>\n",
              "      <td>2</td>\n",
              "      <td>1.5790969729423523</td>\n",
              "      <td>2</td>\n",
              "      <td>1.1814547665417194</td>\n",
              "      <td>12</td>\n",
              "      <td>10</td>\n",
              "      <td>...</td>\n",
              "      <td>10</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>M</td>\n",
              "      <td>Tottenham</td>\n",
              "      <td>2</td>\n",
              "      <td>1.5790969729423523</td>\n",
              "      <td>4.275703072547913</td>\n",
              "      <td>2.546371728181839</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>20 rows √ó 49 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-463b473c-dc9d-4b1c-953c-6db116aa6157')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-463b473c-dc9d-4b1c-953c-6db116aa6157 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-463b473c-dc9d-4b1c-953c-6db116aa6157');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-3184cd4c-e3d2-4c75-9ed8-e3b1604781ad\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-3184cd4c-e3d2-4c75-9ed8-e3b1604781ad')\"\n",
              "            title=\"Suggest charts.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-3184cd4c-e3d2-4c75-9ed8-e3b1604781ad button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 60
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "EPL_player_df['assists'] = EPL_player_df['assists_1wks_x'].astype(int)\n",
        "top25assists = EPL_player_df.nlargest(20, 'assists')\n",
        "top25assists"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "id": "QhNKarUM-fT7",
        "outputId": "cdd5dd14-56db-494a-8e9e-6ed19681005e"
      },
      "execution_count": 61,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "        id             player_name games_x time_x goals_1wks_x  \\\n",
              "32     843       James Ward-Prowse       3    270            1   \n",
              "76   10806            Kaoru Mitoma       4    353            1   \n",
              "192   6055              Phil Foden       4    271            0   \n",
              "203   6382              Pedro Neto       4    360            0   \n",
              "11    1250           Mohamed Salah       4    354            2   \n",
              "19    6818          James Maddison       4    348            2   \n",
              "40    5136               Estupi√±√°n       4    360            1   \n",
              "108    672             Jordan Ayew       4    360            0   \n",
              "163   3600            Serge Aurier       4    347            0   \n",
              "182   5735    Jean-Philippe Mateta       2     34            0   \n",
              "245   7752      Gabriel Martinelli       4    342            0   \n",
              "272   8831  Iyenoma Destiny Udogie       4    340            0   \n",
              "276   8865           Ollie Watkins       4    339            0   \n",
              "283   9017              Malo Gusto       4    269            0   \n",
              "328  10716           Manor Solomon       2     74            0   \n",
              "349  11007            F√°bio Vieira       2     42            0   \n",
              "351  11058            Julio Enciso       2     70            0   \n",
              "0     8260          Erling Haaland       4    355            6   \n",
              "4     1776            Jarrod Bowen       4    360            3   \n",
              "7     7814           Taiwo Awoniyi       4    253            3   \n",
              "\n",
              "                xG_1wks_x assists_1wks_x            xA_1wks_x shots_1wks_x  \\\n",
              "32      1.061242589727044              3   0.8192325830459595            4   \n",
              "76     0.7941503189504147              3   2.0108523070812225            8   \n",
              "192    0.5751295909285545              3   1.0996337458491325            7   \n",
              "203    0.7942149862647057              3   2.1783278211951256            9   \n",
              "11      3.051010400056839              2    1.549212247133255           14   \n",
              "19     1.5790969729423523              2   1.1814547665417194           12   \n",
              "40     0.6273901937529445              2   2.0448221787810326            6   \n",
              "108    1.3352972716093063              2    1.040465697646141           12   \n",
              "163  0.022981125861406326              2    0.566937267780304            1   \n",
              "182                     0              2   0.5984772443771362            0   \n",
              "245     0.666835606098175              2   0.2102539911866188            9   \n",
              "272    0.3593902289867401              2   0.8345238612964749            1   \n",
              "276    2.0876741111278534              2    1.212147779762745           10   \n",
              "283    0.0372829083353281              2   0.6125726103782654            2   \n",
              "328   0.11632221937179565              2    0.680159330368042            2   \n",
              "349  0.042633067816495895              2   0.9986213147640228            1   \n",
              "351    0.4382677674293518              2     1.22417414188385            4   \n",
              "0       4.720618188381195              1    1.096818134188652           20   \n",
              "4       1.852049708366394              1   0.8080089539289474           13   \n",
              "7      2.2981733083724976              1  0.45566320419311523            7   \n",
              "\n",
              "    key_passes_1wks_x  ... yellow_cards red_cards position_y  \\\n",
              "32                  3  ...            1         0          M   \n",
              "76                 14  ...            2         0          M   \n",
              "192                12  ...            0         0        M S   \n",
              "203                13  ...            1         0          M   \n",
              "11                  7  ...            0         0          F   \n",
              "19                 10  ...            1         0          M   \n",
              "40                 12  ...            2         0          D   \n",
              "108                 7  ...            1         0          M   \n",
              "163                 2  ...            2         0          D   \n",
              "182                 2  ...            0         0          S   \n",
              "245                 4  ...            0         0          F   \n",
              "272                 4  ...            1         0          D   \n",
              "276                 8  ...            0         0          F   \n",
              "283                 2  ...            0         0        D S   \n",
              "328                 5  ...            0         0        M S   \n",
              "349                 2  ...            0         0          S   \n",
              "351                 2  ...            1         0        M S   \n",
              "0                   6  ...            0         0          F   \n",
              "4                   4  ...            1         0          M   \n",
              "7                   4  ...            0         0        F S   \n",
              "\n",
              "                team_title_y npg_1wks_y           npxG_1wks_y  \\\n",
              "32                  West Ham          1     1.061242589727044   \n",
              "76                  Brighton          1    0.7941503189504147   \n",
              "192          Manchester City          0    0.5751295909285545   \n",
              "203  Wolverhampton Wanderers          0    0.7942149862647057   \n",
              "11                 Liverpool          2    2.2898415625095367   \n",
              "19                 Tottenham          2    1.5790969729423523   \n",
              "40                  Brighton          1    0.6273901937529445   \n",
              "108           Crystal Palace          0    1.3352972716093063   \n",
              "163        Nottingham Forest          0  0.022981125861406326   \n",
              "182           Crystal Palace          0                     0   \n",
              "245                  Arsenal          0     0.666835606098175   \n",
              "272                Tottenham          0    0.3593902289867401   \n",
              "276              Aston Villa          0    2.0876741111278534   \n",
              "283                  Chelsea          0    0.0372829083353281   \n",
              "328                Tottenham          0   0.11632221937179565   \n",
              "349                  Arsenal          0  0.042633067816495895   \n",
              "351                 Brighton          0    0.4382677674293518   \n",
              "0            Manchester City          5     3.198280453681946   \n",
              "4                   West Ham          3     1.852049708366394   \n",
              "7          Nottingham Forest          3    2.2981733083724976   \n",
              "\n",
              "                xGChain             xGBuildup goals assists  \n",
              "32   1.9025266822427511    0.8412839751690626     1       3  \n",
              "76    4.623990893363953     2.471905816346407     1       3  \n",
              "192   2.016752250492573    1.1527626290917397     0       3  \n",
              "203  2.8690931499004364   0.38755708560347557     0       3  \n",
              "11    2.727378189563751    0.6148081719875336     2       2  \n",
              "19    4.275703072547913     2.546371728181839     2       2  \n",
              "40    4.539102166891098    3.5398470759391785     1       2  \n",
              "108  2.3114949762821198    1.1384435147047043     0       2  \n",
              "163   1.259076088666916     0.692138809710741     0       2  \n",
              "182  0.5984772443771362    0.1231609508395195     0       2  \n",
              "245  2.5816489160060883     2.073520690202713     0       2  \n",
              "272   2.768367737531662    2.1835775822401047     0       2  \n",
              "276  4.0177226066589355    0.9439038410782814     0       2  \n",
              "283   1.518527776002884    1.3742604553699493     0       2  \n",
              "328  1.4156764224171638    0.8486997559666634     0       2  \n",
              "349  0.6662588827311993                     0     0       2  \n",
              "351   1.779298186302185   0.17649975419044495     0       2  \n",
              "0     4.243555068969727    0.5024585798382759     6       1  \n",
              "4     2.132258176803589   0.35537485778331757     3       1  \n",
              "7      2.09539857506752  0.015222105197608471     3       1  \n",
              "\n",
              "[20 rows x 50 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-d14a9be9-dbe7-4ccf-bb02-f8307ee9c279\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>player_name</th>\n",
              "      <th>games_x</th>\n",
              "      <th>time_x</th>\n",
              "      <th>goals_1wks_x</th>\n",
              "      <th>xG_1wks_x</th>\n",
              "      <th>assists_1wks_x</th>\n",
              "      <th>xA_1wks_x</th>\n",
              "      <th>shots_1wks_x</th>\n",
              "      <th>key_passes_1wks_x</th>\n",
              "      <th>...</th>\n",
              "      <th>yellow_cards</th>\n",
              "      <th>red_cards</th>\n",
              "      <th>position_y</th>\n",
              "      <th>team_title_y</th>\n",
              "      <th>npg_1wks_y</th>\n",
              "      <th>npxG_1wks_y</th>\n",
              "      <th>xGChain</th>\n",
              "      <th>xGBuildup</th>\n",
              "      <th>goals</th>\n",
              "      <th>assists</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>32</th>\n",
              "      <td>843</td>\n",
              "      <td>James Ward-Prowse</td>\n",
              "      <td>3</td>\n",
              "      <td>270</td>\n",
              "      <td>1</td>\n",
              "      <td>1.061242589727044</td>\n",
              "      <td>3</td>\n",
              "      <td>0.8192325830459595</td>\n",
              "      <td>4</td>\n",
              "      <td>3</td>\n",
              "      <td>...</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>M</td>\n",
              "      <td>West Ham</td>\n",
              "      <td>1</td>\n",
              "      <td>1.061242589727044</td>\n",
              "      <td>1.9025266822427511</td>\n",
              "      <td>0.8412839751690626</td>\n",
              "      <td>1</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>76</th>\n",
              "      <td>10806</td>\n",
              "      <td>Kaoru Mitoma</td>\n",
              "      <td>4</td>\n",
              "      <td>353</td>\n",
              "      <td>1</td>\n",
              "      <td>0.7941503189504147</td>\n",
              "      <td>3</td>\n",
              "      <td>2.0108523070812225</td>\n",
              "      <td>8</td>\n",
              "      <td>14</td>\n",
              "      <td>...</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>M</td>\n",
              "      <td>Brighton</td>\n",
              "      <td>1</td>\n",
              "      <td>0.7941503189504147</td>\n",
              "      <td>4.623990893363953</td>\n",
              "      <td>2.471905816346407</td>\n",
              "      <td>1</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>192</th>\n",
              "      <td>6055</td>\n",
              "      <td>Phil Foden</td>\n",
              "      <td>4</td>\n",
              "      <td>271</td>\n",
              "      <td>0</td>\n",
              "      <td>0.5751295909285545</td>\n",
              "      <td>3</td>\n",
              "      <td>1.0996337458491325</td>\n",
              "      <td>7</td>\n",
              "      <td>12</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>M S</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>0</td>\n",
              "      <td>0.5751295909285545</td>\n",
              "      <td>2.016752250492573</td>\n",
              "      <td>1.1527626290917397</td>\n",
              "      <td>0</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>203</th>\n",
              "      <td>6382</td>\n",
              "      <td>Pedro Neto</td>\n",
              "      <td>4</td>\n",
              "      <td>360</td>\n",
              "      <td>0</td>\n",
              "      <td>0.7942149862647057</td>\n",
              "      <td>3</td>\n",
              "      <td>2.1783278211951256</td>\n",
              "      <td>9</td>\n",
              "      <td>13</td>\n",
              "      <td>...</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>M</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>0</td>\n",
              "      <td>0.7942149862647057</td>\n",
              "      <td>2.8690931499004364</td>\n",
              "      <td>0.38755708560347557</td>\n",
              "      <td>0</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>11</th>\n",
              "      <td>1250</td>\n",
              "      <td>Mohamed Salah</td>\n",
              "      <td>4</td>\n",
              "      <td>354</td>\n",
              "      <td>2</td>\n",
              "      <td>3.051010400056839</td>\n",
              "      <td>2</td>\n",
              "      <td>1.549212247133255</td>\n",
              "      <td>14</td>\n",
              "      <td>7</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>F</td>\n",
              "      <td>Liverpool</td>\n",
              "      <td>2</td>\n",
              "      <td>2.2898415625095367</td>\n",
              "      <td>2.727378189563751</td>\n",
              "      <td>0.6148081719875336</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>19</th>\n",
              "      <td>6818</td>\n",
              "      <td>James Maddison</td>\n",
              "      <td>4</td>\n",
              "      <td>348</td>\n",
              "      <td>2</td>\n",
              "      <td>1.5790969729423523</td>\n",
              "      <td>2</td>\n",
              "      <td>1.1814547665417194</td>\n",
              "      <td>12</td>\n",
              "      <td>10</td>\n",
              "      <td>...</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>M</td>\n",
              "      <td>Tottenham</td>\n",
              "      <td>2</td>\n",
              "      <td>1.5790969729423523</td>\n",
              "      <td>4.275703072547913</td>\n",
              "      <td>2.546371728181839</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>40</th>\n",
              "      <td>5136</td>\n",
              "      <td>Estupi√±√°n</td>\n",
              "      <td>4</td>\n",
              "      <td>360</td>\n",
              "      <td>1</td>\n",
              "      <td>0.6273901937529445</td>\n",
              "      <td>2</td>\n",
              "      <td>2.0448221787810326</td>\n",
              "      <td>6</td>\n",
              "      <td>12</td>\n",
              "      <td>...</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>D</td>\n",
              "      <td>Brighton</td>\n",
              "      <td>1</td>\n",
              "      <td>0.6273901937529445</td>\n",
              "      <td>4.539102166891098</td>\n",
              "      <td>3.5398470759391785</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>108</th>\n",
              "      <td>672</td>\n",
              "      <td>Jordan Ayew</td>\n",
              "      <td>4</td>\n",
              "      <td>360</td>\n",
              "      <td>0</td>\n",
              "      <td>1.3352972716093063</td>\n",
              "      <td>2</td>\n",
              "      <td>1.040465697646141</td>\n",
              "      <td>12</td>\n",
              "      <td>7</td>\n",
              "      <td>...</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>M</td>\n",
              "      <td>Crystal Palace</td>\n",
              "      <td>0</td>\n",
              "      <td>1.3352972716093063</td>\n",
              "      <td>2.3114949762821198</td>\n",
              "      <td>1.1384435147047043</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>163</th>\n",
              "      <td>3600</td>\n",
              "      <td>Serge Aurier</td>\n",
              "      <td>4</td>\n",
              "      <td>347</td>\n",
              "      <td>0</td>\n",
              "      <td>0.022981125861406326</td>\n",
              "      <td>2</td>\n",
              "      <td>0.566937267780304</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>...</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>D</td>\n",
              "      <td>Nottingham Forest</td>\n",
              "      <td>0</td>\n",
              "      <td>0.022981125861406326</td>\n",
              "      <td>1.259076088666916</td>\n",
              "      <td>0.692138809710741</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>182</th>\n",
              "      <td>5735</td>\n",
              "      <td>Jean-Philippe Mateta</td>\n",
              "      <td>2</td>\n",
              "      <td>34</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>0.5984772443771362</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>S</td>\n",
              "      <td>Crystal Palace</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.5984772443771362</td>\n",
              "      <td>0.1231609508395195</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>245</th>\n",
              "      <td>7752</td>\n",
              "      <td>Gabriel Martinelli</td>\n",
              "      <td>4</td>\n",
              "      <td>342</td>\n",
              "      <td>0</td>\n",
              "      <td>0.666835606098175</td>\n",
              "      <td>2</td>\n",
              "      <td>0.2102539911866188</td>\n",
              "      <td>9</td>\n",
              "      <td>4</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>F</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>0</td>\n",
              "      <td>0.666835606098175</td>\n",
              "      <td>2.5816489160060883</td>\n",
              "      <td>2.073520690202713</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>272</th>\n",
              "      <td>8831</td>\n",
              "      <td>Iyenoma Destiny Udogie</td>\n",
              "      <td>4</td>\n",
              "      <td>340</td>\n",
              "      <td>0</td>\n",
              "      <td>0.3593902289867401</td>\n",
              "      <td>2</td>\n",
              "      <td>0.8345238612964749</td>\n",
              "      <td>1</td>\n",
              "      <td>4</td>\n",
              "      <td>...</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>D</td>\n",
              "      <td>Tottenham</td>\n",
              "      <td>0</td>\n",
              "      <td>0.3593902289867401</td>\n",
              "      <td>2.768367737531662</td>\n",
              "      <td>2.1835775822401047</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>276</th>\n",
              "      <td>8865</td>\n",
              "      <td>Ollie Watkins</td>\n",
              "      <td>4</td>\n",
              "      <td>339</td>\n",
              "      <td>0</td>\n",
              "      <td>2.0876741111278534</td>\n",
              "      <td>2</td>\n",
              "      <td>1.212147779762745</td>\n",
              "      <td>10</td>\n",
              "      <td>8</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>F</td>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>0</td>\n",
              "      <td>2.0876741111278534</td>\n",
              "      <td>4.0177226066589355</td>\n",
              "      <td>0.9439038410782814</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>283</th>\n",
              "      <td>9017</td>\n",
              "      <td>Malo Gusto</td>\n",
              "      <td>4</td>\n",
              "      <td>269</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0372829083353281</td>\n",
              "      <td>2</td>\n",
              "      <td>0.6125726103782654</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>D S</td>\n",
              "      <td>Chelsea</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0372829083353281</td>\n",
              "      <td>1.518527776002884</td>\n",
              "      <td>1.3742604553699493</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>328</th>\n",
              "      <td>10716</td>\n",
              "      <td>Manor Solomon</td>\n",
              "      <td>2</td>\n",
              "      <td>74</td>\n",
              "      <td>0</td>\n",
              "      <td>0.11632221937179565</td>\n",
              "      <td>2</td>\n",
              "      <td>0.680159330368042</td>\n",
              "      <td>2</td>\n",
              "      <td>5</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>M S</td>\n",
              "      <td>Tottenham</td>\n",
              "      <td>0</td>\n",
              "      <td>0.11632221937179565</td>\n",
              "      <td>1.4156764224171638</td>\n",
              "      <td>0.8486997559666634</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>349</th>\n",
              "      <td>11007</td>\n",
              "      <td>F√°bio Vieira</td>\n",
              "      <td>2</td>\n",
              "      <td>42</td>\n",
              "      <td>0</td>\n",
              "      <td>0.042633067816495895</td>\n",
              "      <td>2</td>\n",
              "      <td>0.9986213147640228</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>S</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>0</td>\n",
              "      <td>0.042633067816495895</td>\n",
              "      <td>0.6662588827311993</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>351</th>\n",
              "      <td>11058</td>\n",
              "      <td>Julio Enciso</td>\n",
              "      <td>2</td>\n",
              "      <td>70</td>\n",
              "      <td>0</td>\n",
              "      <td>0.4382677674293518</td>\n",
              "      <td>2</td>\n",
              "      <td>1.22417414188385</td>\n",
              "      <td>4</td>\n",
              "      <td>2</td>\n",
              "      <td>...</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>M S</td>\n",
              "      <td>Brighton</td>\n",
              "      <td>0</td>\n",
              "      <td>0.4382677674293518</td>\n",
              "      <td>1.779298186302185</td>\n",
              "      <td>0.17649975419044495</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>8260</td>\n",
              "      <td>Erling Haaland</td>\n",
              "      <td>4</td>\n",
              "      <td>355</td>\n",
              "      <td>6</td>\n",
              "      <td>4.720618188381195</td>\n",
              "      <td>1</td>\n",
              "      <td>1.096818134188652</td>\n",
              "      <td>20</td>\n",
              "      <td>6</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>F</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>5</td>\n",
              "      <td>3.198280453681946</td>\n",
              "      <td>4.243555068969727</td>\n",
              "      <td>0.5024585798382759</td>\n",
              "      <td>6</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>1776</td>\n",
              "      <td>Jarrod Bowen</td>\n",
              "      <td>4</td>\n",
              "      <td>360</td>\n",
              "      <td>3</td>\n",
              "      <td>1.852049708366394</td>\n",
              "      <td>1</td>\n",
              "      <td>0.8080089539289474</td>\n",
              "      <td>13</td>\n",
              "      <td>4</td>\n",
              "      <td>...</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>M</td>\n",
              "      <td>West Ham</td>\n",
              "      <td>3</td>\n",
              "      <td>1.852049708366394</td>\n",
              "      <td>2.132258176803589</td>\n",
              "      <td>0.35537485778331757</td>\n",
              "      <td>3</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>7814</td>\n",
              "      <td>Taiwo Awoniyi</td>\n",
              "      <td>4</td>\n",
              "      <td>253</td>\n",
              "      <td>3</td>\n",
              "      <td>2.2981733083724976</td>\n",
              "      <td>1</td>\n",
              "      <td>0.45566320419311523</td>\n",
              "      <td>7</td>\n",
              "      <td>4</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>F S</td>\n",
              "      <td>Nottingham Forest</td>\n",
              "      <td>3</td>\n",
              "      <td>2.2981733083724976</td>\n",
              "      <td>2.09539857506752</td>\n",
              "      <td>0.015222105197608471</td>\n",
              "      <td>3</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>20 rows √ó 50 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-d14a9be9-dbe7-4ccf-bb02-f8307ee9c279')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-d14a9be9-dbe7-4ccf-bb02-f8307ee9c279 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-d14a9be9-dbe7-4ccf-bb02-f8307ee9c279');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-e8affb6d-dd7f-439b-a2a9-c9522308b0a3\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-e8affb6d-dd7f-439b-a2a9-c9522308b0a3')\"\n",
              "            title=\"Suggest charts.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-e8affb6d-dd7f-439b-a2a9-c9522308b0a3 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 61
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import pandas as pd\n",
        "import plotly.express as px\n",
        "import plotly.graph_objects as go"
      ],
      "metadata": {
        "id": "t81EQEbg_2jQ"
      },
      "execution_count": 62,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "fig3= go.Figure()\n",
        "fig3.add_trace(go.Scatter(x = top25goals[\"goals\"],\n",
        "                          y = top25goals[\"player_name\"],\n",
        "                          mode = 'markers',\n",
        "                          marker_color = 'darkblue',\n",
        "                          marker_size = 10,\n",
        "                          name = 'goals'))\n",
        "fig3.add_trace(go.Scatter(x = top25goals[\"xG_1wks_x\"],\n",
        "                          y = top25goals[\"player_name\"],\n",
        "                          mode = 'markers',\n",
        "                          marker_color = 'darkorange',\n",
        "                          marker_size = 10,\n",
        "                          name = 'xG'))\n",
        "for i in range(0, len(top25goals)):\n",
        "               fig3.add_shape(type='line',\n",
        "                              x0 = top25goals[\"goals\"][i],\n",
        "                              y0 = i,\n",
        "                              x1 = top25goals[\"xG_1wks_x\"][i],\n",
        "                              y1 = i,\n",
        "                              line=dict(color='crimson', width = 3))\n",
        "fig3.update_layout(title_text =\n",
        "                    \"Goals vs xG\",\n",
        "                    title_font_size = 30)\n",
        "fig3.update_xaxes(range=[0, 30])\n",
        "fig3.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 542
        },
        "id": "pCjmRmyw-6sd",
        "outputId": "adbf3713-450b-49af-e970-8da74552c91c"
      },
      "execution_count": 63,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<html>\n",
              "<head><meta charset=\"utf-8\" /></head>\n",
              "<body>\n",
              "    <div>            <script src=\"https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.5/MathJax.js?config=TeX-AMS-MML_SVG\"></script><script type=\"text/javascript\">if (window.MathJax && window.MathJax.Hub && window.MathJax.Hub.Config) {window.MathJax.Hub.Config({SVG: {font: \"STIX-Web\"}});}</script>                <script type=\"text/javascript\">window.PlotlyConfig = {MathJaxConfig: 'local'};</script>\n",
              "        <script charset=\"utf-8\" src=\"https://cdn.plot.ly/plotly-2.24.1.min.js\"></script>                <div id=\"73c586b9-0169-497b-9c62-3f38b2c84e57\" class=\"plotly-graph-div\" style=\"height:525px; width:100%;\"></div>            <script type=\"text/javascript\">                                    window.PLOTLYENV=window.PLOTLYENV || {};                                    if (document.getElementById(\"73c586b9-0169-497b-9c62-3f38b2c84e57\")) {                    Plotly.newPlot(                        \"73c586b9-0169-497b-9c62-3f38b2c84e57\",                        [{\"marker\":{\"color\":\"darkblue\",\"size\":10},\"mode\":\"markers\",\"name\":\"goals\",\"x\":[6,4,4,3,3,3,3,3,2,2,2,2,2,2,2,2,2,2,2,2],\"y\":[\"Erling Haaland\",\"Bryan Mbeumo\",\"Evan Ferguson\",\"Son Heung-Min\",\"Jarrod Bowen\",\"Odsonne Edouard\",\"Solly March\",\"Taiwo Awoniyi\",\"Callum Wilson\",\"Michail Antonio\",\"Raheem Sterling\",\"Mohamed Salah\",\"Dominic Solanke\",\"Rodri\",\"Martin Odegaard\",\"Alexander Isak\",\"Yoane Wissa\",\"Eddie Nketiah\",\"Moussa Diaby\",\"James Maddison\"],\"type\":\"scatter\"},{\"marker\":{\"color\":\"darkorange\",\"size\":10},\"mode\":\"markers\",\"name\":\"xG\",\"x\":[\"4.720618188381195\",\"3.798690915107727\",\"2.2254600673913956\",\"1.4514826834201813\",\"1.852049708366394\",\"3.0324513763189316\",\"2.172745257616043\",\"2.2981733083724976\",\"1.6458185389637947\",\"0.9052570015192032\",\"1.5475750043988228\",\"3.051010400056839\",\"1.9277420565485954\",\"1.057547777891159\",\"1.3025853112339973\",\"1.6722202897071838\",\"1.9205424934625626\",\"1.7406337410211563\",\"0.8467069044709206\",\"1.5790969729423523\"],\"y\":[\"Erling Haaland\",\"Bryan Mbeumo\",\"Evan Ferguson\",\"Son Heung-Min\",\"Jarrod Bowen\",\"Odsonne Edouard\",\"Solly March\",\"Taiwo Awoniyi\",\"Callum Wilson\",\"Michail Antonio\",\"Raheem Sterling\",\"Mohamed Salah\",\"Dominic Solanke\",\"Rodri\",\"Martin Odegaard\",\"Alexander Isak\",\"Yoane Wissa\",\"Eddie Nketiah\",\"Moussa Diaby\",\"James Maddison\"],\"type\":\"scatter\"}],                        {\"template\":{\"data\":{\"histogram2dcontour\":[{\"type\":\"histogram2dcontour\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"choropleth\":[{\"type\":\"choropleth\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"histogram2d\":[{\"type\":\"histogram2d\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"heatmap\":[{\"type\":\"heatmap\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"heatmapgl\":[{\"type\":\"heatmapgl\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"contourcarpet\":[{\"type\":\"contourcarpet\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"contour\":[{\"type\":\"contour\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"surface\":[{\"type\":\"surface\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"mesh3d\":[{\"type\":\"mesh3d\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"scatter\":[{\"fillpattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2},\"type\":\"scatter\"}],\"parcoords\":[{\"type\":\"parcoords\",\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterpolargl\":[{\"type\":\"scatterpolargl\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"bar\":[{\"error_x\":{\"color\":\"#2a3f5f\"},\"error_y\":{\"color\":\"#2a3f5f\"},\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"bar\"}],\"scattergeo\":[{\"type\":\"scattergeo\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterpolar\":[{\"type\":\"scatterpolar\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"histogram\":[{\"marker\":{\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"histogram\"}],\"scattergl\":[{\"type\":\"scattergl\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatter3d\":[{\"type\":\"scatter3d\",\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scattermapbox\":[{\"type\":\"scattermapbox\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterternary\":[{\"type\":\"scatterternary\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scattercarpet\":[{\"type\":\"scattercarpet\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"carpet\":[{\"aaxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"baxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"type\":\"carpet\"}],\"table\":[{\"cells\":{\"fill\":{\"color\":\"#EBF0F8\"},\"line\":{\"color\":\"white\"}},\"header\":{\"fill\":{\"color\":\"#C8D4E3\"},\"line\":{\"color\":\"white\"}},\"type\":\"table\"}],\"barpolar\":[{\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"barpolar\"}],\"pie\":[{\"automargin\":true,\"type\":\"pie\"}]},\"layout\":{\"autotypenumbers\":\"strict\",\"colorway\":[\"#636efa\",\"#EF553B\",\"#00cc96\",\"#ab63fa\",\"#FFA15A\",\"#19d3f3\",\"#FF6692\",\"#B6E880\",\"#FF97FF\",\"#FECB52\"],\"font\":{\"color\":\"#2a3f5f\"},\"hovermode\":\"closest\",\"hoverlabel\":{\"align\":\"left\"},\"paper_bgcolor\":\"white\",\"plot_bgcolor\":\"#E5ECF6\",\"polar\":{\"bgcolor\":\"#E5ECF6\",\"angularaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"radialaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"ternary\":{\"bgcolor\":\"#E5ECF6\",\"aaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"baxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"caxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"coloraxis\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"colorscale\":{\"sequential\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"sequentialminus\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"diverging\":[[0,\"#8e0152\"],[0.1,\"#c51b7d\"],[0.2,\"#de77ae\"],[0.3,\"#f1b6da\"],[0.4,\"#fde0ef\"],[0.5,\"#f7f7f7\"],[0.6,\"#e6f5d0\"],[0.7,\"#b8e186\"],[0.8,\"#7fbc41\"],[0.9,\"#4d9221\"],[1,\"#276419\"]]},\"xaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"automargin\":true,\"zerolinewidth\":2},\"yaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"automargin\":true,\"zerolinewidth\":2},\"scene\":{\"xaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2},\"yaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2},\"zaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2}},\"shapedefaults\":{\"line\":{\"color\":\"#2a3f5f\"}},\"annotationdefaults\":{\"arrowcolor\":\"#2a3f5f\",\"arrowhead\":0,\"arrowwidth\":1},\"geo\":{\"bgcolor\":\"white\",\"landcolor\":\"#E5ECF6\",\"subunitcolor\":\"white\",\"showland\":true,\"showlakes\":true,\"lakecolor\":\"white\"},\"title\":{\"x\":0.05},\"mapbox\":{\"style\":\"light\"}}},\"shapes\":[{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":6,\"x1\":\"4.720618188381195\",\"y0\":0,\"y1\":0},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":4,\"x1\":\"3.798690915107727\",\"y0\":1,\"y1\":1},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":4,\"x1\":\"2.2254600673913956\",\"y0\":2,\"y1\":2},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":3,\"x1\":\"1.4514826834201813\",\"y0\":3,\"y1\":3},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":3,\"x1\":\"1.852049708366394\",\"y0\":4,\"y1\":4},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":3,\"x1\":\"3.0324513763189316\",\"y0\":5,\"y1\":5},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":3,\"x1\":\"2.172745257616043\",\"y0\":6,\"y1\":6},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":3,\"x1\":\"2.2981733083724976\",\"y0\":7,\"y1\":7},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":2,\"x1\":\"1.6458185389637947\",\"y0\":8,\"y1\":8},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":2,\"x1\":\"0.9052570015192032\",\"y0\":9,\"y1\":9},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":2,\"x1\":\"1.5475750043988228\",\"y0\":10,\"y1\":10},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":2,\"x1\":\"3.051010400056839\",\"y0\":11,\"y1\":11},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":2,\"x1\":\"1.9277420565485954\",\"y0\":12,\"y1\":12},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":2,\"x1\":\"1.057547777891159\",\"y0\":13,\"y1\":13},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":2,\"x1\":\"1.3025853112339973\",\"y0\":14,\"y1\":14},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":2,\"x1\":\"1.6722202897071838\",\"y0\":15,\"y1\":15},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":2,\"x1\":\"1.9205424934625626\",\"y0\":16,\"y1\":16},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":2,\"x1\":\"1.7406337410211563\",\"y0\":17,\"y1\":17},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":2,\"x1\":\"0.8467069044709206\",\"y0\":18,\"y1\":18},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":2,\"x1\":\"1.5790969729423523\",\"y0\":19,\"y1\":19}],\"title\":{\"font\":{\"size\":30},\"text\":\"Goals vs xG\"},\"xaxis\":{\"range\":[0,30]}},                        {\"responsive\": true}                    ).then(function(){\n",
              "                            \n",
              "var gd = document.getElementById('73c586b9-0169-497b-9c62-3f38b2c84e57');\n",
              "var x = new MutationObserver(function (mutations, observer) {{\n",
              "        var display = window.getComputedStyle(gd).display;\n",
              "        if (!display || display === 'none') {{\n",
              "            console.log([gd, 'removed!']);\n",
              "            Plotly.purge(gd);\n",
              "            observer.disconnect();\n",
              "        }}\n",
              "}});\n",
              "\n",
              "// Listen for the removal of the full notebook cells\n",
              "var notebookContainer = gd.closest('#notebook-container');\n",
              "if (notebookContainer) {{\n",
              "    x.observe(notebookContainer, {childList: true});\n",
              "}}\n",
              "\n",
              "// Listen for the clearing of the current output cell\n",
              "var outputEl = gd.closest('.output');\n",
              "if (outputEl) {{\n",
              "    x.observe(outputEl, {childList: true});\n",
              "}}\n",
              "\n",
              "                        })                };                            </script>        </div>\n",
              "</body>\n",
              "</html>"
            ]
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "seasonedit = one_game_df.drop(columns=[ 'yellow_cards','red_cards','time'])"
      ],
      "metadata": {
        "id": "zxhwefRPFQDN"
      },
      "execution_count": 64,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "top25assists.columns"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "wSmCXk6YFSz5",
        "outputId": "aa4f1cad-e5e4-47fe-9e00-58b34719c656"
      },
      "execution_count": 65,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Index(['id', 'player_name', 'games_x', 'time_x', 'goals_1wks_x', 'xG_1wks_x',\n",
              "       'assists_1wks_x', 'xA_1wks_x', 'shots_1wks_x', 'key_passes_1wks_x',\n",
              "       'yellow_cards_x', 'red_cards_x', 'position_x', 'team_title_x',\n",
              "       'npg_1wks_x', 'npxG_1wks_x', 'xGChain_x', 'xGBuildup_x', 'games_y',\n",
              "       'time_y', 'goals_season', 'xG_season', 'assists_season', 'xA_season',\n",
              "       'shots_season', 'key_passes_season', 'yellow_cards_y', 'red_cards_y',\n",
              "       'npg_season', 'npxG_season', 'xGChain_y', 'xGBuildup_y', 'games',\n",
              "       'time', 'goals_1wks_y', 'xG_1wks_y', 'assists_1wks_y', 'xA_1wks_y',\n",
              "       'shots_1wks_y', 'key_passes_1wks_y', 'yellow_cards', 'red_cards',\n",
              "       'position_y', 'team_title_y', 'npg_1wks_y', 'npxG_1wks_y', 'xGChain',\n",
              "       'xGBuildup', 'goals', 'assists'],\n",
              "      dtype='object')"
            ]
          },
          "metadata": {},
          "execution_count": 65
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "top20assists = top25assists.drop(columns=[ 'shots_1wks_x', 'key_passes_1wks_x',\n",
        "       'yellow_cards_x', 'red_cards_x', 'position_x', 'team_title_x',\n",
        "       'npg_1wks_x', 'npxG_1wks_x', 'xGChain_x', 'xGBuildup_x', 'games_y',\n",
        "       'time_y', 'goals_season', 'xG_season', 'assists_season', 'xA_season',\n",
        "       'shots_season', 'key_passes_season', 'yellow_cards_y', 'red_cards_y',\n",
        "       'npg_season', 'npxG_season', 'xGChain_y', 'xGBuildup_y', 'games',\n",
        "       'time', 'goals_1wks_y', 'xG_1wks_y', 'assists_1wks_y', 'xA_1wks_y',\n",
        "       'shots_1wks_y', 'key_passes_1wks_y', 'yellow_cards', 'red_cards',\n",
        "       'position_y', 'team_title_y', 'npg_1wks_y', 'npxG_1wks_y', 'xGChain',\n",
        "       'xGBuildup', 'assists_1wks_x', 'games_x', 'time_x', 'goals_1wks_x', 'id' ])\n",
        "\n",
        "top20assists.reset_index(inplace = True,drop = True)\n",
        "top20assists"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 676
        },
        "id": "_Xn659fiFXvb",
        "outputId": "601d89ab-308e-431f-a476-9e7835a044bf"
      },
      "execution_count": 66,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "               player_name             xG_1wks_x            xA_1wks_x  goals  \\\n",
              "0        James Ward-Prowse     1.061242589727044   0.8192325830459595      1   \n",
              "1             Kaoru Mitoma    0.7941503189504147   2.0108523070812225      1   \n",
              "2               Phil Foden    0.5751295909285545   1.0996337458491325      0   \n",
              "3               Pedro Neto    0.7942149862647057   2.1783278211951256      0   \n",
              "4            Mohamed Salah     3.051010400056839    1.549212247133255      2   \n",
              "5           James Maddison    1.5790969729423523   1.1814547665417194      2   \n",
              "6                Estupi√±√°n    0.6273901937529445   2.0448221787810326      1   \n",
              "7              Jordan Ayew    1.3352972716093063    1.040465697646141      0   \n",
              "8             Serge Aurier  0.022981125861406326    0.566937267780304      0   \n",
              "9     Jean-Philippe Mateta                     0   0.5984772443771362      0   \n",
              "10      Gabriel Martinelli     0.666835606098175   0.2102539911866188      0   \n",
              "11  Iyenoma Destiny Udogie    0.3593902289867401   0.8345238612964749      0   \n",
              "12           Ollie Watkins    2.0876741111278534    1.212147779762745      0   \n",
              "13              Malo Gusto    0.0372829083353281   0.6125726103782654      0   \n",
              "14           Manor Solomon   0.11632221937179565    0.680159330368042      0   \n",
              "15            F√°bio Vieira  0.042633067816495895   0.9986213147640228      0   \n",
              "16            Julio Enciso    0.4382677674293518     1.22417414188385      0   \n",
              "17          Erling Haaland     4.720618188381195    1.096818134188652      6   \n",
              "18            Jarrod Bowen     1.852049708366394   0.8080089539289474      3   \n",
              "19           Taiwo Awoniyi    2.2981733083724976  0.45566320419311523      3   \n",
              "\n",
              "    assists  \n",
              "0         3  \n",
              "1         3  \n",
              "2         3  \n",
              "3         3  \n",
              "4         2  \n",
              "5         2  \n",
              "6         2  \n",
              "7         2  \n",
              "8         2  \n",
              "9         2  \n",
              "10        2  \n",
              "11        2  \n",
              "12        2  \n",
              "13        2  \n",
              "14        2  \n",
              "15        2  \n",
              "16        2  \n",
              "17        1  \n",
              "18        1  \n",
              "19        1  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-9477d6cf-b379-451d-a975-f34146703939\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>player_name</th>\n",
              "      <th>xG_1wks_x</th>\n",
              "      <th>xA_1wks_x</th>\n",
              "      <th>goals</th>\n",
              "      <th>assists</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>James Ward-Prowse</td>\n",
              "      <td>1.061242589727044</td>\n",
              "      <td>0.8192325830459595</td>\n",
              "      <td>1</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Kaoru Mitoma</td>\n",
              "      <td>0.7941503189504147</td>\n",
              "      <td>2.0108523070812225</td>\n",
              "      <td>1</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>Phil Foden</td>\n",
              "      <td>0.5751295909285545</td>\n",
              "      <td>1.0996337458491325</td>\n",
              "      <td>0</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>Pedro Neto</td>\n",
              "      <td>0.7942149862647057</td>\n",
              "      <td>2.1783278211951256</td>\n",
              "      <td>0</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>Mohamed Salah</td>\n",
              "      <td>3.051010400056839</td>\n",
              "      <td>1.549212247133255</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>James Maddison</td>\n",
              "      <td>1.5790969729423523</td>\n",
              "      <td>1.1814547665417194</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>Estupi√±√°n</td>\n",
              "      <td>0.6273901937529445</td>\n",
              "      <td>2.0448221787810326</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>Jordan Ayew</td>\n",
              "      <td>1.3352972716093063</td>\n",
              "      <td>1.040465697646141</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>Serge Aurier</td>\n",
              "      <td>0.022981125861406326</td>\n",
              "      <td>0.566937267780304</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>Jean-Philippe Mateta</td>\n",
              "      <td>0</td>\n",
              "      <td>0.5984772443771362</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10</th>\n",
              "      <td>Gabriel Martinelli</td>\n",
              "      <td>0.666835606098175</td>\n",
              "      <td>0.2102539911866188</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>11</th>\n",
              "      <td>Iyenoma Destiny Udogie</td>\n",
              "      <td>0.3593902289867401</td>\n",
              "      <td>0.8345238612964749</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>12</th>\n",
              "      <td>Ollie Watkins</td>\n",
              "      <td>2.0876741111278534</td>\n",
              "      <td>1.212147779762745</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>13</th>\n",
              "      <td>Malo Gusto</td>\n",
              "      <td>0.0372829083353281</td>\n",
              "      <td>0.6125726103782654</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>14</th>\n",
              "      <td>Manor Solomon</td>\n",
              "      <td>0.11632221937179565</td>\n",
              "      <td>0.680159330368042</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>15</th>\n",
              "      <td>F√°bio Vieira</td>\n",
              "      <td>0.042633067816495895</td>\n",
              "      <td>0.9986213147640228</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>16</th>\n",
              "      <td>Julio Enciso</td>\n",
              "      <td>0.4382677674293518</td>\n",
              "      <td>1.22417414188385</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>17</th>\n",
              "      <td>Erling Haaland</td>\n",
              "      <td>4.720618188381195</td>\n",
              "      <td>1.096818134188652</td>\n",
              "      <td>6</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>18</th>\n",
              "      <td>Jarrod Bowen</td>\n",
              "      <td>1.852049708366394</td>\n",
              "      <td>0.8080089539289474</td>\n",
              "      <td>3</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>19</th>\n",
              "      <td>Taiwo Awoniyi</td>\n",
              "      <td>2.2981733083724976</td>\n",
              "      <td>0.45566320419311523</td>\n",
              "      <td>3</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-9477d6cf-b379-451d-a975-f34146703939')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-9477d6cf-b379-451d-a975-f34146703939 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-9477d6cf-b379-451d-a975-f34146703939');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-4c19cd55-b21b-45e4-b2ef-8d58e7823cb1\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-4c19cd55-b21b-45e4-b2ef-8d58e7823cb1')\"\n",
              "            title=\"Suggest charts.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-4c19cd55-b21b-45e4-b2ef-8d58e7823cb1 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 66
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "fig4= go.Figure()\n",
        "fig4.add_trace(go.Scatter(x = top20assists[\"assists\"],\n",
        "                          y = top20assists[\"player_name\"],\n",
        "                          mode = 'markers',\n",
        "                          marker_color = 'darkblue',\n",
        "                          marker_size = 10,\n",
        "                          name = 'assists'))\n",
        "fig4.add_trace(go.Scatter(x = top20assists[\"xA_1wks_x\"],\n",
        "                          y = top20assists[\"player_name\"],\n",
        "                          mode = 'markers',\n",
        "                          marker_color = 'darkorange',\n",
        "                          marker_size = 10,\n",
        "                          name = 'xA'))\n",
        "for i in range(0, len(top20assists)):\n",
        "               fig4.add_shape(type='line',\n",
        "                              x0 = top20assists['assists'][i],\n",
        "                              y0 = i,\n",
        "                              x1 = top20assists[\"xA_1wks_x\"][i],\n",
        "                              y1 = i,\n",
        "                              line=dict(color='crimson', width = 3))\n",
        "fig4.update_layout(title_text =\n",
        "                    \"assists vs xG\",\n",
        "                    title_font_size = 15)\n",
        "fig4.update_xaxes(range=[0, 15])\n",
        "fig4.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 542
        },
        "id": "P6oVjqCSF4Pw",
        "outputId": "bc0effc2-34f8-4cdc-a3e8-3b354abcaa8c"
      },
      "execution_count": 67,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<html>\n",
              "<head><meta charset=\"utf-8\" /></head>\n",
              "<body>\n",
              "    <div>            <script src=\"https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.5/MathJax.js?config=TeX-AMS-MML_SVG\"></script><script type=\"text/javascript\">if (window.MathJax && window.MathJax.Hub && window.MathJax.Hub.Config) {window.MathJax.Hub.Config({SVG: {font: \"STIX-Web\"}});}</script>                <script type=\"text/javascript\">window.PlotlyConfig = {MathJaxConfig: 'local'};</script>\n",
              "        <script charset=\"utf-8\" src=\"https://cdn.plot.ly/plotly-2.24.1.min.js\"></script>                <div id=\"beb9ec6a-d81c-464c-9834-7abfbcf688d0\" class=\"plotly-graph-div\" style=\"height:525px; width:100%;\"></div>            <script type=\"text/javascript\">                                    window.PLOTLYENV=window.PLOTLYENV || {};                                    if (document.getElementById(\"beb9ec6a-d81c-464c-9834-7abfbcf688d0\")) {                    Plotly.newPlot(                        \"beb9ec6a-d81c-464c-9834-7abfbcf688d0\",                        [{\"marker\":{\"color\":\"darkblue\",\"size\":10},\"mode\":\"markers\",\"name\":\"assists\",\"x\":[3,3,3,3,2,2,2,2,2,2,2,2,2,2,2,2,2,1,1,1],\"y\":[\"James Ward-Prowse\",\"Kaoru Mitoma\",\"Phil Foden\",\"Pedro Neto\",\"Mohamed Salah\",\"James Maddison\",\"Estupi\\u00f1\\u00e1n\",\"Jordan Ayew\",\"Serge Aurier\",\"Jean-Philippe Mateta\",\"Gabriel Martinelli\",\"Iyenoma Destiny Udogie\",\"Ollie Watkins\",\"Malo Gusto\",\"Manor Solomon\",\"F\\u00e1bio Vieira\",\"Julio Enciso\",\"Erling Haaland\",\"Jarrod Bowen\",\"Taiwo Awoniyi\"],\"type\":\"scatter\"},{\"marker\":{\"color\":\"darkorange\",\"size\":10},\"mode\":\"markers\",\"name\":\"xA\",\"x\":[\"0.8192325830459595\",\"2.0108523070812225\",\"1.0996337458491325\",\"2.1783278211951256\",\"1.549212247133255\",\"1.1814547665417194\",\"2.0448221787810326\",\"1.040465697646141\",\"0.566937267780304\",\"0.5984772443771362\",\"0.2102539911866188\",\"0.8345238612964749\",\"1.212147779762745\",\"0.6125726103782654\",\"0.680159330368042\",\"0.9986213147640228\",\"1.22417414188385\",\"1.096818134188652\",\"0.8080089539289474\",\"0.45566320419311523\"],\"y\":[\"James Ward-Prowse\",\"Kaoru Mitoma\",\"Phil Foden\",\"Pedro Neto\",\"Mohamed Salah\",\"James Maddison\",\"Estupi\\u00f1\\u00e1n\",\"Jordan Ayew\",\"Serge Aurier\",\"Jean-Philippe Mateta\",\"Gabriel Martinelli\",\"Iyenoma Destiny Udogie\",\"Ollie Watkins\",\"Malo Gusto\",\"Manor Solomon\",\"F\\u00e1bio Vieira\",\"Julio Enciso\",\"Erling Haaland\",\"Jarrod Bowen\",\"Taiwo Awoniyi\"],\"type\":\"scatter\"}],                        {\"template\":{\"data\":{\"histogram2dcontour\":[{\"type\":\"histogram2dcontour\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"choropleth\":[{\"type\":\"choropleth\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"histogram2d\":[{\"type\":\"histogram2d\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"heatmap\":[{\"type\":\"heatmap\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"heatmapgl\":[{\"type\":\"heatmapgl\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"contourcarpet\":[{\"type\":\"contourcarpet\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"contour\":[{\"type\":\"contour\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"surface\":[{\"type\":\"surface\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"mesh3d\":[{\"type\":\"mesh3d\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"scatter\":[{\"fillpattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2},\"type\":\"scatter\"}],\"parcoords\":[{\"type\":\"parcoords\",\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterpolargl\":[{\"type\":\"scatterpolargl\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"bar\":[{\"error_x\":{\"color\":\"#2a3f5f\"},\"error_y\":{\"color\":\"#2a3f5f\"},\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"bar\"}],\"scattergeo\":[{\"type\":\"scattergeo\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterpolar\":[{\"type\":\"scatterpolar\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"histogram\":[{\"marker\":{\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"histogram\"}],\"scattergl\":[{\"type\":\"scattergl\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatter3d\":[{\"type\":\"scatter3d\",\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scattermapbox\":[{\"type\":\"scattermapbox\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterternary\":[{\"type\":\"scatterternary\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scattercarpet\":[{\"type\":\"scattercarpet\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"carpet\":[{\"aaxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"baxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"type\":\"carpet\"}],\"table\":[{\"cells\":{\"fill\":{\"color\":\"#EBF0F8\"},\"line\":{\"color\":\"white\"}},\"header\":{\"fill\":{\"color\":\"#C8D4E3\"},\"line\":{\"color\":\"white\"}},\"type\":\"table\"}],\"barpolar\":[{\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"barpolar\"}],\"pie\":[{\"automargin\":true,\"type\":\"pie\"}]},\"layout\":{\"autotypenumbers\":\"strict\",\"colorway\":[\"#636efa\",\"#EF553B\",\"#00cc96\",\"#ab63fa\",\"#FFA15A\",\"#19d3f3\",\"#FF6692\",\"#B6E880\",\"#FF97FF\",\"#FECB52\"],\"font\":{\"color\":\"#2a3f5f\"},\"hovermode\":\"closest\",\"hoverlabel\":{\"align\":\"left\"},\"paper_bgcolor\":\"white\",\"plot_bgcolor\":\"#E5ECF6\",\"polar\":{\"bgcolor\":\"#E5ECF6\",\"angularaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"radialaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"ternary\":{\"bgcolor\":\"#E5ECF6\",\"aaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"baxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"caxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"coloraxis\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"colorscale\":{\"sequential\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"sequentialminus\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"diverging\":[[0,\"#8e0152\"],[0.1,\"#c51b7d\"],[0.2,\"#de77ae\"],[0.3,\"#f1b6da\"],[0.4,\"#fde0ef\"],[0.5,\"#f7f7f7\"],[0.6,\"#e6f5d0\"],[0.7,\"#b8e186\"],[0.8,\"#7fbc41\"],[0.9,\"#4d9221\"],[1,\"#276419\"]]},\"xaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"automargin\":true,\"zerolinewidth\":2},\"yaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"automargin\":true,\"zerolinewidth\":2},\"scene\":{\"xaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2},\"yaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2},\"zaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2}},\"shapedefaults\":{\"line\":{\"color\":\"#2a3f5f\"}},\"annotationdefaults\":{\"arrowcolor\":\"#2a3f5f\",\"arrowhead\":0,\"arrowwidth\":1},\"geo\":{\"bgcolor\":\"white\",\"landcolor\":\"#E5ECF6\",\"subunitcolor\":\"white\",\"showland\":true,\"showlakes\":true,\"lakecolor\":\"white\"},\"title\":{\"x\":0.05},\"mapbox\":{\"style\":\"light\"}}},\"shapes\":[{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":3,\"x1\":\"0.8192325830459595\",\"y0\":0,\"y1\":0},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":3,\"x1\":\"2.0108523070812225\",\"y0\":1,\"y1\":1},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":3,\"x1\":\"1.0996337458491325\",\"y0\":2,\"y1\":2},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":3,\"x1\":\"2.1783278211951256\",\"y0\":3,\"y1\":3},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":2,\"x1\":\"1.549212247133255\",\"y0\":4,\"y1\":4},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":2,\"x1\":\"1.1814547665417194\",\"y0\":5,\"y1\":5},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":2,\"x1\":\"2.0448221787810326\",\"y0\":6,\"y1\":6},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":2,\"x1\":\"1.040465697646141\",\"y0\":7,\"y1\":7},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":2,\"x1\":\"0.566937267780304\",\"y0\":8,\"y1\":8},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":2,\"x1\":\"0.5984772443771362\",\"y0\":9,\"y1\":9},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":2,\"x1\":\"0.2102539911866188\",\"y0\":10,\"y1\":10},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":2,\"x1\":\"0.8345238612964749\",\"y0\":11,\"y1\":11},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":2,\"x1\":\"1.212147779762745\",\"y0\":12,\"y1\":12},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":2,\"x1\":\"0.6125726103782654\",\"y0\":13,\"y1\":13},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":2,\"x1\":\"0.680159330368042\",\"y0\":14,\"y1\":14},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":2,\"x1\":\"0.9986213147640228\",\"y0\":15,\"y1\":15},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":2,\"x1\":\"1.22417414188385\",\"y0\":16,\"y1\":16},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":1,\"x1\":\"1.096818134188652\",\"y0\":17,\"y1\":17},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":1,\"x1\":\"0.8080089539289474\",\"y0\":18,\"y1\":18},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":1,\"x1\":\"0.45566320419311523\",\"y0\":19,\"y1\":19}],\"title\":{\"font\":{\"size\":15},\"text\":\"assists vs xG\"},\"xaxis\":{\"range\":[0,15]}},                        {\"responsive\": true}                    ).then(function(){\n",
              "                            \n",
              "var gd = document.getElementById('beb9ec6a-d81c-464c-9834-7abfbcf688d0');\n",
              "var x = new MutationObserver(function (mutations, observer) {{\n",
              "        var display = window.getComputedStyle(gd).display;\n",
              "        if (!display || display === 'none') {{\n",
              "            console.log([gd, 'removed!']);\n",
              "            Plotly.purge(gd);\n",
              "            observer.disconnect();\n",
              "        }}\n",
              "}});\n",
              "\n",
              "// Listen for the removal of the full notebook cells\n",
              "var notebookContainer = gd.closest('#notebook-container');\n",
              "if (notebookContainer) {{\n",
              "    x.observe(notebookContainer, {childList: true});\n",
              "}}\n",
              "\n",
              "// Listen for the clearing of the current output cell\n",
              "var outputEl = gd.closest('.output');\n",
              "if (outputEl) {{\n",
              "    x.observe(outputEl, {childList: true});\n",
              "}}\n",
              "\n",
              "                        })                };                            </script>        </div>\n",
              "</body>\n",
              "</html>"
            ]
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import pandas as pd\n",
        "import matplotlib.pyplot as plt\n",
        "\n",
        "# Assuming you have already loaded the DataFrame named 'Top50'\n",
        "\n",
        "# Filter the DataFrame by position type\n",
        "midfielders = Top50[Top50['pos'] == 'M']\n",
        "forwards = Top50[Top50['pos'] == 'F']\n",
        "defenders = Top50[Top50['pos'] == 'D']\n",
        "\n",
        "# Sort the filtered DataFrames by '5GW Total' in descending order\n",
        "midfielders = midfielders.sort_values(by='5GW Total', ascending=False)\n",
        "forwards = forwards.sort_values(by='5GW Total', ascending=False)\n",
        "defenders = defenders.sort_values(by='5GW Total', ascending=False)\n",
        "\n",
        "# Plotting the bar charts\n",
        "plt.figure(figsize=(12, 6))\n",
        "\n",
        "# Midfielders chart\n",
        "plt.subplot(131)\n",
        "plt.bar(midfielders['name'][:10], midfielders['5GW Total'][:10])\n",
        "plt.title('Top 10 Midfielders by 5GW Total')\n",
        "plt.xticks(rotation=45)\n",
        "\n",
        "# Forwards chart\n",
        "plt.subplot(132)\n",
        "plt.bar(forwards['name'][:10], forwards['5GW Total'][:10])\n",
        "plt.title('Top 10 Forwards by 5GW Total')\n",
        "plt.xticks(rotation=45)\n",
        "\n",
        "# Defenders chart\n",
        "plt.subplot(133)\n",
        "plt.bar(defenders['name'][:10], defenders['5GW Total'][:10])\n",
        "plt.title('Top 10 Defenders by 5GW Total')\n",
        "plt.xticks(rotation=45)\n",
        "\n",
        "plt.tight_layout()\n",
        "plt.show()\n"
      ],
      "metadata": {
        "id": "FN06IYwSKGLw",
        "outputId": "7b5580c7-7ad1-4783-affe-a684daf0ad45",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 601
        }
      },
      "execution_count": 68,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1200x600 with 3 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import pandas as pd\n",
        "import matplotlib.pyplot as plt\n",
        "\n",
        "# Assuming you have already loaded the DataFrame named 'Top50'\n",
        "\n",
        "# Filter the DataFrame by position type\n",
        "midfielders = Top50[Top50['pos'] == 'M']\n",
        "forwards = Top50[Top50['pos'] == 'F']\n",
        "defenders = Top50[Top50['pos'] == 'D']\n",
        "\n",
        "# Sort the filtered DataFrames by '5GW Total' in descending order\n",
        "midfielders = midfielders.sort_values(by='5GW Total', ascending=False)\n",
        "forwards = forwards.sort_values(by='5GW Total', ascending=False)\n",
        "defenders = defenders.sort_values(by='5GW Total', ascending=False)\n",
        "\n",
        "# Create a list of colors for each chart\n",
        "colors = ['blue', 'green', 'red']\n",
        "\n",
        "# Plotting the horizontal bar charts with different colors\n",
        "plt.figure(figsize=(10, 6))\n",
        "\n",
        "# Midfielders chart\n",
        "plt.barh(midfielders['name'][:10], midfielders['5GW Total'][:10], color=colors[0])\n",
        "plt.title('Top 10 Midfielders by 5GW Total')\n",
        "plt.xlabel('5GW Total')\n",
        "plt.gca().invert_yaxis()  # Invert y-axis to have higher values at the top\n",
        "\n",
        "# Forwards chart\n",
        "plt.figure(figsize=(10, 6))\n",
        "plt.barh(forwards['name'][:10], forwards['5GW Total'][:10], color=colors[1])\n",
        "plt.title('Top 10 Forwards by 5GW Total')\n",
        "plt.xlabel('5GW Total')\n",
        "plt.gca().invert_yaxis()  # Invert y-axis to have higher values at the top\n",
        "\n",
        "# Defenders chart\n",
        "plt.figure(figsize=(10, 6))\n",
        "plt.barh(defenders['name'][:10], defenders['5GW Total'][:10], color=colors[2])\n",
        "plt.title('Top 10 Defenders by 5GW Total')\n",
        "plt.xlabel('5GW Total')\n",
        "plt.gca().invert_yaxis()  # Invert y-axis to have higher values at the top\n",
        "\n",
        "plt.tight_layout()\n",
        "plt.show()\n"
      ],
      "metadata": {
        "id": "VSYcUse-SrV-",
        "outputId": "ba77a86f-601e-49b3-f384-6289e0621672",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        }
      },
      "execution_count": 69,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1000x600 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1000x600 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1000x600 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import pandas as pd\n",
        "import seaborn as sns\n",
        "import matplotlib.pyplot as plt\n",
        "\n",
        "# Assuming you have already loaded the DataFrame named 'gwadjustments26'\n",
        "\n",
        "# Set the index column\n",
        "gwadjustments26.set_index('team', inplace=True)\n",
        "\n",
        "# Create a color map\n",
        "cmap = sns.diverging_palette(240, 10, as_cmap=True)\n",
        "\n",
        "# Plot the heatmap\n",
        "plt.figure(figsize=(8, 6))\n",
        "sns.heatmap(gwadjustments26, annot=True, cmap=cmap, center=0)\n",
        "plt.title('Color-Coded Table of GW Adjustments')\n",
        "plt.show()\n"
      ],
      "metadata": {
        "id": "X2DQdb15YZfr",
        "outputId": "decbd92e-b829-48a1-8fb0-58f7cb91304b",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 245
        }
      },
      "execution_count": 70,
      "outputs": [
        {
          "output_type": "error",
          "ename": "NameError",
          "evalue": "ignored",
          "traceback": [
            "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
            "\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)",
            "\u001b[0;32m<ipython-input-70-41580282a9ec>\u001b[0m in \u001b[0;36m<cell line: 8>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      6\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      7\u001b[0m \u001b[0;31m# Set the index column\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 8\u001b[0;31m \u001b[0mgwadjustments26\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mset_index\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m'team'\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0minplace\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mTrue\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      9\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     10\u001b[0m \u001b[0;31m# Create a color map\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;31mNameError\u001b[0m: name 'gwadjustments26' is not defined"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "plt.figure(figsize=(10, 6))\n",
        "\n",
        "scores_columns = ['gw2adjustment', 'gw3adjustment', 'gw4adjustment', 'gw5adjustment', 'gw6adjustment']\n",
        "\n",
        "bottom = [0] * len(gwadjustments26)\n",
        "\n",
        "for score_col in scores_columns:\n",
        "    plt.bar(gwadjustments26.index, gwadjustments26[score_col], bottom=bottom, label=score_col)\n",
        "    bottom += gwadjustments26[score_col]\n",
        "\n",
        "plt.xlabel('Teams')\n",
        "plt.ylabel('Score Adjustments')\n",
        "plt.title('Stacked GW Adjustments for Different Teams')\n",
        "plt.xticks(rotation=45)\n",
        "plt.legend()\n",
        "plt.tight_layout()\n",
        "\n",
        "plt.show()\n"
      ],
      "metadata": {
        "id": "z7T7SgQSYyL8"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "plt.figure(figsize=(10, 6))\n",
        "\n",
        "# Calculate the total score adjustments for each team\n",
        "gwadjustments26['Total'] = gwadjustments26.sum(axis=1)\n",
        "\n",
        "# Sort the DataFrame by the 'Total' column in descending order\n",
        "gwadjustments26 = gwadjustments26.sort_values(by='Total', ascending=False)\n",
        "\n",
        "# Get the scores columns\n",
        "scores_columns = ['gw2adjustment', 'gw3adjustment', 'gw4adjustment', 'gw5adjustment', 'gw6adjustment']\n",
        "\n",
        "bottom = [0] * len(gwadjustments26)\n",
        "\n",
        "for score_col in scores_columns:\n",
        "    plt.bar(gwadjustments26.index, gwadjustments26[score_col], bottom=bottom, label=score_col)\n",
        "    bottom += gwadjustments26[score_col]\n",
        "\n",
        "plt.xlabel('Teams')\n",
        "plt.ylabel('Score Adjustments')\n",
        "plt.title('Stacked GW Adjustments for Different Teams')\n",
        "plt.xticks(rotation=45)\n",
        "plt.legend()\n",
        "plt.tight_layout()\n",
        "\n",
        "plt.show()\n"
      ],
      "metadata": {
        "id": "XxE_pa9xZB8N"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "import pandas as pd\n",
        "import seaborn as sns\n",
        "import matplotlib.pyplot as plt\n",
        "\n",
        "# Assuming you have already loaded the DataFrame named 'gwadjustments26'\n",
        "\n",
        "# Set the index column\n",
        "gwadjustments26.set_index('team', inplace=True)\n",
        "\n",
        "# Create a custom color map\n",
        "cmap = sns.diverging_palette(240, 10, n=21, as_cmap=True)\n",
        "colors = ['red', 'orange', 'green']\n",
        "\n",
        "# Define color thresholds\n",
        "color_thresholds = [0.9, 1.1, 2.0]\n",
        "\n",
        "# Normalize values for coloring\n",
        "normalized_values = (gwadjustments26 - 0.9) / (2.0 - 0.9)\n",
        "\n",
        "# Apply color map and thresholds\n",
        "colored_values = pd.cut(normalized_values, bins=color_thresholds, labels=colors)\n",
        "\n",
        "# Plot the heatmap with customized color coding\n",
        "plt.figure(figsize=(8, 6))\n",
        "sns.heatmap(normalized_values, annot=True, cmap=cmap, center=1, cbar=False, fmt=\".2f\", linewidths=0.5, linecolor='white')\n",
        "plt.title('Custom Color-Coded Table of GW Adjustments')\n",
        "plt.xticks(rotation=45)\n",
        "plt.show()\n"
      ],
      "metadata": {
        "id": "_YnxO1yMZekH"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "plt.figure(figsize=(10, 8))\n",
        "\n",
        "# Calculate the total score adjustments for each team\n",
        "gwadjustments26['Total'] = gwadjustments26.sum(axis=1)\n",
        "\n",
        "# Sort the DataFrame by the 'Total' column in descending order\n",
        "gwadjustments26 = gwadjustments26.sort_values(by='Total', ascending=False)\n",
        "\n",
        "# Get the scores columns\n",
        "scores_columns = ['gw2adjustment', 'gw3adjustment', 'gw4adjustment', 'gw5adjustment', 'gw6adjustment']\n",
        "\n",
        "# Define color thresholds and corresponding colors\n",
        "color_thresholds = [0.9, 1.1, 2.0]\n",
        "colors = ['red', 'orange', 'green']\n",
        "\n",
        "bottom = [0] * len(gwadjustments26)\n",
        "\n",
        "for score_col in scores_columns:\n",
        "    adjusted_values = gwadjustments26[score_col]\n",
        "\n",
        "    # Create a color list based on thresholds\n",
        "    colors_for_col = [colors[-1] if val is None else\n",
        "                      colors[0] if val < color_thresholds[0] else\n",
        "                      colors[1] if val <= color_thresholds[1] else\n",
        "                      colors[2]\n",
        "                      for val in adjusted_values]\n",
        "\n",
        "    for i, (val, color) in enumerate(zip(adjusted_values, colors_for_col)):\n",
        "        plt.barh(gwadjustments26.index[i], val, color=color, edgecolor='white')\n",
        "\n",
        "    bottom += adjusted_values\n",
        "\n",
        "plt.xlabel('Score Adjustments')\n",
        "plt.ylabel('Teams')\n",
        "plt.title('Horizontally Stacked GW Adjustments for Different Teams')\n",
        "plt.legend(labels=scores_columns)\n",
        "plt.gca().invert_yaxis()  # Invert y-axis to have higher values at the top\n",
        "plt.tight_layout()\n",
        "\n",
        "plt.show()\n"
      ],
      "metadata": {
        "id": "5agSlfUragM2"
      },
      "execution_count": null,
      "outputs": []
    }
  ]
}