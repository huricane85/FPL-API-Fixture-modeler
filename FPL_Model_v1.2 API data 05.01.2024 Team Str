{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "authorship_tag": "ABX9TyNtXBEqTVmBarIuU/8T+ZMH",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/huricane85/FPL-API-Fixture-modeler/blob/main/FPL_Model_v1.2%20API%20data%2005.01.2024%20Team%20Str\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 1,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "b6S0KMo-gSGQ",
        "outputId": "c6d47112-14f3-48f6-b6e1-6c8097c0a83a"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Cloning into 'UnderstatScraper'...\n",
            "remote: Enumerating objects: 34, done.\u001b[K\n",
            "remote: Counting objects: 100% (34/34), done.\u001b[K\n",
            "remote: Compressing objects: 100% (31/31), done.\u001b[K\n",
            "remote: Total 34 (delta 11), reused 25 (delta 2), pack-reused 0\u001b[K\n",
            "Receiving objects: 100% (34/34), 268.30 KiB | 6.39 MiB/s, done.\n",
            "Resolving deltas: 100% (11/11), done.\n"
          ]
        }
      ],
      "source": [
        "!git clone https://github.com/doughagey/UnderstatScraper"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#!/usr/bin/env python3\n",
        "# -*- coding: utf-8 -*-\n",
        "\"\"\"\n",
        "Created on Mar 1 17:50:36 2020\n",
        "@author: doug hagey\n",
        "\"\"\"\n",
        "\n",
        "import pandas as pd\n",
        "import requests\n",
        "\n",
        "def scrape_understat(payload):\n",
        "    #Build request using url, headers (mimicking what Firefox does normally)\n",
        "    #Works best with verify=True as you won't get the ssl errors. Payload is\n",
        "    #taylored for each request\n",
        "    url = 'https://understat.com/main/getPlayersStats/'\n",
        "    headers = {'content-type':'application/json; charset=utf-8',\n",
        "    'Host': 'understat.com',\n",
        "    'User-Agent': 'Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:73.0) Gecko/20100101 Firefox/73.0',\n",
        "    'Accept': 'application/json, text/javascript, */*; q=0.01',\n",
        "    'Accept-Encoding': 'gzip, deflate, br',\n",
        "    'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8',\n",
        "    'X-Requested-With': 'XMLHttpRequest',\n",
        "    'Content-Length': '310',\n",
        "    'Origin': 'https: // understat.com',\n",
        "    'Connection': 'keep - alive',\n",
        "    'Referer': 'https: // understat.com / league / EPL'\n",
        "    }\n",
        "    response = requests.post(url, data=payload, headers = headers, verify=True)\n",
        "    response_json = response.json()\n",
        "    inner_wrapper = response_json['response']\n",
        "    json_player_data = inner_wrapper['players']\n",
        "    return json_player_data\n",
        "\n",
        "def clean_df(player_df, weeks):\n",
        "    # Get rid of the columns that we don't care about\n",
        "    #player_df.drop(['yellow_cards','red_cards', 'xGChain','xGBuildup','games','time'], axis=1, inplace=True)\n",
        "    player_df  = player_df.rename(columns={'goals':'goals_'+weeks,'xG':'xG_'+weeks,'assists':'assists_'+weeks, 'xA':'xA_'+weeks, 'shots':'shots_'+weeks, 'key_passes':\n",
        "        'key_passes_'+weeks,'npg':'npg_'+weeks,'npxG':'npxG_'+weeks})\n",
        "    if weeks != '1wks':\n",
        "        player_df.drop(['position','team_title'], axis=1, inplace=True)\n",
        "    return(player_df)\n",
        "\n",
        "#Creprint('Getting data for last 1 matches')\n",
        "json_player_data = scrape_understat({'league':'EPL', 'season':'2023', 'n_last_matches': '20'})\n",
        "one_game_table = pd.DataFrame(json_player_data)\n",
        "one_game_df = clean_df(one_game_table,'6wks')\n",
        "\n",
        "\n",
        "print('Getting data for the whole season')\n",
        "json_player_data = scrape_understat({'league':'EPL', 'season':'2023'})\n",
        "season_table = pd.DataFrame(json_player_data)\n",
        "season_df = clean_df(season_table, 'season')\n",
        "\n",
        "print('Getting data for last 1 matches')\n",
        "json_player_data = scrape_understat({'league':'EPL', 'season':'2023', 'n_last_matches': '20'})\n",
        "one_game_table = pd.DataFrame(json_player_data)\n",
        "one_game_df = clean_df(one_game_table, '1wks')\n",
        "\n",
        "print('Merging Tables')\n",
        "EPL_player_df = pd.merge(one_game_df, season_df, on=['id','player_name'])\n",
        "EPL_player_df = pd.merge(EPL_player_df, one_game_df, on=['id','player_name'])\n",
        "\n",
        "\n",
        "print('Writing CSV File')\n",
        "EPL_player_df.to_csv('Understat_EPL_Player_Data_Combined 2021.csv', encoding='utf-8', index=False)\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "D7aK55NHgZOt",
        "outputId": "faac2a43-347b-4a5c-a77f-25409aacdc2f"
      },
      "execution_count": 2,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Getting data for the whole season\n",
            "Getting data for last 1 matches\n",
            "Merging Tables\n",
            "Writing CSV File\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "EPL_player_df = EPL_player_df.round(2)\n",
        "EPL_player_df"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 652
        },
        "id": "n__CYp9pmkGz",
        "outputId": "dbf5c678-5164-43fe-8836-4da42d334fc5"
      },
      "execution_count": 3,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "        id             player_name games_x time_x goals_1wks_x  \\\n",
              "0     1250           Mohamed Salah      20   1768           14   \n",
              "1     8260          Erling Haaland      15   1305           14   \n",
              "2      453           Son Heung-Min      20   1739           12   \n",
              "3     1679         Dominic Solanke      19   1708           12   \n",
              "4     1776            Jarrod Bowen      19   1710           11   \n",
              "..     ...                     ...     ...    ...          ...   \n",
              "500  12204   Benicio Baker-Boaitey       2      2            0   \n",
              "501  12215         Michael Ndiweni       1      1            0   \n",
              "502  12251              Sydie Peck       1      6            0   \n",
              "503  12275          Willy Kambwala       2     88            0   \n",
              "504  12291  Rhys Norrington-Davies       1      1            0   \n",
              "\n",
              "              xG_1wks_x assists_1wks_x           xA_1wks_x shots_1wks_x  \\\n",
              "0    13.610325902700424              8    9.57847910746932           65   \n",
              "1    16.727499932050705              4  3.2472310978919268           58   \n",
              "2      7.47495724260807              5   6.843130592256784           52   \n",
              "3    12.378114826977253              1  0.9976950995624065           66   \n",
              "4      8.29572493582964              2   3.144163405522704           47   \n",
              "..                  ...            ...                 ...          ...   \n",
              "500                   0              0                   0            0   \n",
              "501                   0              0                   0            0   \n",
              "502                   0              0                   0            0   \n",
              "503                   0              0                   0            0   \n",
              "504                   0              0                   0            0   \n",
              "\n",
              "    key_passes_1wks_x  ... shots_1wks_y key_passes_1wks_y yellow_cards  \\\n",
              "0                  47  ...           65                47            2   \n",
              "1                  16  ...           58                16            1   \n",
              "2                  37  ...           52                37            1   \n",
              "3                  14  ...           66                14            1   \n",
              "4                  14  ...           47                14            1   \n",
              "..                ...  ...          ...               ...          ...   \n",
              "500                 0  ...            0                 0            0   \n",
              "501                 0  ...            0                 0            0   \n",
              "502                 0  ...            0                 0            0   \n",
              "503                 0  ...            0                 0            0   \n",
              "504                 0  ...            0                 0            0   \n",
              "\n",
              "    red_cards position_y       team_title_y npg_1wks_y        npxG_1wks_y  \\\n",
              "0           0          F          Liverpool         10  9.043387070298195   \n",
              "1           0          F    Manchester City         11  13.68282476067543   \n",
              "2           0        F M          Tottenham         11  6.713788405060768   \n",
              "3           0          F        Bournemouth         11  11.61694597452879   \n",
              "4           0        F M           West Ham         11   8.29572493582964   \n",
              "..        ...        ...                ...        ...                ...   \n",
              "500         0          S           Brighton          0                  0   \n",
              "501         0          S   Newcastle United          0                  0   \n",
              "502         0          S   Sheffield United          0                  0   \n",
              "503         0        D S  Manchester United          0                  0   \n",
              "504         0          S   Sheffield United          0                  0   \n",
              "\n",
              "                 xGChain            xGBuildup  \n",
              "0      19.68034301698208    5.720102474093437  \n",
              "1     16.214465029537678   1.3705047406256199  \n",
              "2     16.887082293629646    6.178518561646342  \n",
              "3     12.262300044298172   1.8974752612411976  \n",
              "4      9.910744827240705   1.9265567287802696  \n",
              "..                   ...                  ...  \n",
              "500   0.1531512588262558   0.1531512588262558  \n",
              "501                    0                    0  \n",
              "502                    0                    0  \n",
              "503  0.07591637223958969  0.07591637223958969  \n",
              "504                    0                    0  \n",
              "\n",
              "[505 rows x 48 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-c0fe0f12-c138-4791-b28a-27317e3aa179\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>player_name</th>\n",
              "      <th>games_x</th>\n",
              "      <th>time_x</th>\n",
              "      <th>goals_1wks_x</th>\n",
              "      <th>xG_1wks_x</th>\n",
              "      <th>assists_1wks_x</th>\n",
              "      <th>xA_1wks_x</th>\n",
              "      <th>shots_1wks_x</th>\n",
              "      <th>key_passes_1wks_x</th>\n",
              "      <th>...</th>\n",
              "      <th>shots_1wks_y</th>\n",
              "      <th>key_passes_1wks_y</th>\n",
              "      <th>yellow_cards</th>\n",
              "      <th>red_cards</th>\n",
              "      <th>position_y</th>\n",
              "      <th>team_title_y</th>\n",
              "      <th>npg_1wks_y</th>\n",
              "      <th>npxG_1wks_y</th>\n",
              "      <th>xGChain</th>\n",
              "      <th>xGBuildup</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>1250</td>\n",
              "      <td>Mohamed Salah</td>\n",
              "      <td>20</td>\n",
              "      <td>1768</td>\n",
              "      <td>14</td>\n",
              "      <td>13.610325902700424</td>\n",
              "      <td>8</td>\n",
              "      <td>9.57847910746932</td>\n",
              "      <td>65</td>\n",
              "      <td>47</td>\n",
              "      <td>...</td>\n",
              "      <td>65</td>\n",
              "      <td>47</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>F</td>\n",
              "      <td>Liverpool</td>\n",
              "      <td>10</td>\n",
              "      <td>9.043387070298195</td>\n",
              "      <td>19.68034301698208</td>\n",
              "      <td>5.720102474093437</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>8260</td>\n",
              "      <td>Erling Haaland</td>\n",
              "      <td>15</td>\n",
              "      <td>1305</td>\n",
              "      <td>14</td>\n",
              "      <td>16.727499932050705</td>\n",
              "      <td>4</td>\n",
              "      <td>3.2472310978919268</td>\n",
              "      <td>58</td>\n",
              "      <td>16</td>\n",
              "      <td>...</td>\n",
              "      <td>58</td>\n",
              "      <td>16</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>F</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>11</td>\n",
              "      <td>13.68282476067543</td>\n",
              "      <td>16.214465029537678</td>\n",
              "      <td>1.3705047406256199</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>453</td>\n",
              "      <td>Son Heung-Min</td>\n",
              "      <td>20</td>\n",
              "      <td>1739</td>\n",
              "      <td>12</td>\n",
              "      <td>7.47495724260807</td>\n",
              "      <td>5</td>\n",
              "      <td>6.843130592256784</td>\n",
              "      <td>52</td>\n",
              "      <td>37</td>\n",
              "      <td>...</td>\n",
              "      <td>52</td>\n",
              "      <td>37</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>F M</td>\n",
              "      <td>Tottenham</td>\n",
              "      <td>11</td>\n",
              "      <td>6.713788405060768</td>\n",
              "      <td>16.887082293629646</td>\n",
              "      <td>6.178518561646342</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>1679</td>\n",
              "      <td>Dominic Solanke</td>\n",
              "      <td>19</td>\n",
              "      <td>1708</td>\n",
              "      <td>12</td>\n",
              "      <td>12.378114826977253</td>\n",
              "      <td>1</td>\n",
              "      <td>0.9976950995624065</td>\n",
              "      <td>66</td>\n",
              "      <td>14</td>\n",
              "      <td>...</td>\n",
              "      <td>66</td>\n",
              "      <td>14</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>F</td>\n",
              "      <td>Bournemouth</td>\n",
              "      <td>11</td>\n",
              "      <td>11.61694597452879</td>\n",
              "      <td>12.262300044298172</td>\n",
              "      <td>1.8974752612411976</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>1776</td>\n",
              "      <td>Jarrod Bowen</td>\n",
              "      <td>19</td>\n",
              "      <td>1710</td>\n",
              "      <td>11</td>\n",
              "      <td>8.29572493582964</td>\n",
              "      <td>2</td>\n",
              "      <td>3.144163405522704</td>\n",
              "      <td>47</td>\n",
              "      <td>14</td>\n",
              "      <td>...</td>\n",
              "      <td>47</td>\n",
              "      <td>14</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>F M</td>\n",
              "      <td>West Ham</td>\n",
              "      <td>11</td>\n",
              "      <td>8.29572493582964</td>\n",
              "      <td>9.910744827240705</td>\n",
              "      <td>1.9265567287802696</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>500</th>\n",
              "      <td>12204</td>\n",
              "      <td>Benicio Baker-Boaitey</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>S</td>\n",
              "      <td>Brighton</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.1531512588262558</td>\n",
              "      <td>0.1531512588262558</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>501</th>\n",
              "      <td>12215</td>\n",
              "      <td>Michael Ndiweni</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>S</td>\n",
              "      <td>Newcastle United</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>502</th>\n",
              "      <td>12251</td>\n",
              "      <td>Sydie Peck</td>\n",
              "      <td>1</td>\n",
              "      <td>6</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>S</td>\n",
              "      <td>Sheffield United</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>503</th>\n",
              "      <td>12275</td>\n",
              "      <td>Willy Kambwala</td>\n",
              "      <td>2</td>\n",
              "      <td>88</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>D S</td>\n",
              "      <td>Manchester United</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.07591637223958969</td>\n",
              "      <td>0.07591637223958969</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>504</th>\n",
              "      <td>12291</td>\n",
              "      <td>Rhys Norrington-Davies</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>S</td>\n",
              "      <td>Sheffield United</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>505 rows × 48 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-c0fe0f12-c138-4791-b28a-27317e3aa179')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-c0fe0f12-c138-4791-b28a-27317e3aa179 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-c0fe0f12-c138-4791-b28a-27317e3aa179');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-594d2602-166f-459a-9812-63634272be49\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-594d2602-166f-459a-9812-63634272be49')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-594d2602-166f-459a-9812-63634272be49 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 3
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "one_game_df.to_csv('one_game_df.csv', encoding='utf-8', index=False)\n",
        "one_game_df['time'] = one_game_df['time'].astype(int)\n",
        "one_game_df = one_game_df[one_game_df['time'] > 40]\n",
        "one_game_df['goals_1wks'] = one_game_df['goals_1wks'].astype(int)\n",
        "one_game_df['xG_1wks'] = one_game_df['xG_1wks'].astype(float)\n",
        "one_game_df['xgdifference'] = one_game_df.goals_1wks - one_game_df.xG_1wks\n",
        "one_game_df['assists_1wks'] = one_game_df['assists_1wks'].astype(int)\n",
        "one_game_df['xA_1wks'] = one_game_df['xA_1wks'].astype(float)\n",
        "one_game_df['xAdifference'] = one_game_df.assists_1wks - one_game_df.xA_1wks\n",
        "seasonedit = one_game_df.drop(columns=[ 'yellow_cards','red_cards','time'])\n",
        "sortXgDifference = seasonedit.sort_values('xgdifference')\n",
        "sortXgDifference.head(10)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "id": "IrXPzyJNg3ui",
        "outputId": "1d430e84-83aa-47c9-d5b4-0ea88ac08c30"
      },
      "execution_count": 4,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "<ipython-input-4-30b8c2331977>:4: SettingWithCopyWarning: \n",
            "A value is trying to be set on a copy of a slice from a DataFrame.\n",
            "Try using .loc[row_indexer,col_indexer] = value instead\n",
            "\n",
            "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
            "  one_game_df['goals_1wks'] = one_game_df['goals_1wks'].astype(int)\n",
            "<ipython-input-4-30b8c2331977>:5: SettingWithCopyWarning: \n",
            "A value is trying to be set on a copy of a slice from a DataFrame.\n",
            "Try using .loc[row_indexer,col_indexer] = value instead\n",
            "\n",
            "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
            "  one_game_df['xG_1wks'] = one_game_df['xG_1wks'].astype(float)\n",
            "<ipython-input-4-30b8c2331977>:6: SettingWithCopyWarning: \n",
            "A value is trying to be set on a copy of a slice from a DataFrame.\n",
            "Try using .loc[row_indexer,col_indexer] = value instead\n",
            "\n",
            "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
            "  one_game_df['xgdifference'] = one_game_df.goals_1wks - one_game_df.xG_1wks\n",
            "<ipython-input-4-30b8c2331977>:7: SettingWithCopyWarning: \n",
            "A value is trying to be set on a copy of a slice from a DataFrame.\n",
            "Try using .loc[row_indexer,col_indexer] = value instead\n",
            "\n",
            "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
            "  one_game_df['assists_1wks'] = one_game_df['assists_1wks'].astype(int)\n",
            "<ipython-input-4-30b8c2331977>:8: SettingWithCopyWarning: \n",
            "A value is trying to be set on a copy of a slice from a DataFrame.\n",
            "Try using .loc[row_indexer,col_indexer] = value instead\n",
            "\n",
            "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
            "  one_game_df['xA_1wks'] = one_game_df['xA_1wks'].astype(float)\n",
            "<ipython-input-4-30b8c2331977>:9: SettingWithCopyWarning: \n",
            "A value is trying to be set on a copy of a slice from a DataFrame.\n",
            "Try using .loc[row_indexer,col_indexer] = value instead\n",
            "\n",
            "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
            "  one_game_df['xAdifference'] = one_game_df.assists_1wks - one_game_df.xA_1wks\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "        id            player_name games  goals_1wks    xG_1wks  assists_1wks  \\\n",
              "36   10720           Darwin Núñez    19           5  11.132159             6   \n",
              "13   10048        Nicolas Jackson    19           7  11.180736             2   \n",
              "59    5555  Dominic Calvert-Lewin    16           3   7.067316             0   \n",
              "86    3621            Neal Maupay    16           2   5.165133             3   \n",
              "121  11356         Enzo Fernández    17           2   4.734172             0   \n",
              "1     8260         Erling Haaland    15          14  16.727500             4   \n",
              "214  11055         Rasmus Højlund    15           1   3.694961             0   \n",
              "43    5786            Yoane Wissa    19           4   6.614129             1   \n",
              "210  10760        Brennan Johnson    17           1   3.610425             4   \n",
              "52     556        Marcus Rashford    19           3   5.393616             2   \n",
              "\n",
              "      xA_1wks shots_1wks key_passes_1wks position  \\\n",
              "36   3.891612         58              19      F S   \n",
              "13   2.957573         45              16    F M S   \n",
              "59   0.732500         33              10      F S   \n",
              "86   1.431693         29              10      F S   \n",
              "121  1.619420         30              14      M S   \n",
              "1    3.247231         58              16        F   \n",
              "214  0.811963         19              12      F S   \n",
              "43   1.780400         43              15      F S   \n",
              "210  2.887639         26              19    F M S   \n",
              "52   1.999449         42              15    F M S   \n",
              "\n",
              "                      team_title npg_1wks           npxG_1wks  \\\n",
              "36                     Liverpool        5  11.132159125991166   \n",
              "13                       Chelsea        7  11.180736033245921   \n",
              "59                       Everton        3   7.067315865308046   \n",
              "86             Brentford,Everton        2   5.165133114904165   \n",
              "121                      Chelsea        1   3.211833940818906   \n",
              "1                Manchester City       11   13.68282476067543   \n",
              "214            Manchester United        1   3.694960955530405   \n",
              "43                     Brentford        4   6.614129316061735   \n",
              "210  Nottingham Forest,Tottenham        1  3.6104250103235245   \n",
              "52             Manchester United        2   4.632446790114045   \n",
              "\n",
              "                xGChain           xGBuildup  xgdifference  xAdifference  \n",
              "36   14.982022352516651    2.60064285248518     -6.132159      2.108388  \n",
              "13   14.183117497712374   2.219442430883646     -4.180736     -0.957573  \n",
              "59   6.4377016462385654  0.6413102764636278     -4.067316     -0.732500  \n",
              "86    8.070751886814833  2.0382075533270836     -3.165133      1.568307  \n",
              "121     8.2339046895504   5.353159258142114     -2.734172     -1.619420  \n",
              "1    16.214465029537678  1.3705047406256199     -2.727500      0.752769  \n",
              "214   4.302262082695961  0.9778778217732906     -2.694961     -0.811963  \n",
              "43    8.974249444901943  2.4045274388045073     -2.614129     -0.780400  \n",
              "210   7.822363168001175  2.0388473197817802     -2.610425      1.112361  \n",
              "52    8.831173861399293  2.8092545457184315     -2.393616      0.000551  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-4cfcae57-d094-48b9-afe2-621688c7e274\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>player_name</th>\n",
              "      <th>games</th>\n",
              "      <th>goals_1wks</th>\n",
              "      <th>xG_1wks</th>\n",
              "      <th>assists_1wks</th>\n",
              "      <th>xA_1wks</th>\n",
              "      <th>shots_1wks</th>\n",
              "      <th>key_passes_1wks</th>\n",
              "      <th>position</th>\n",
              "      <th>team_title</th>\n",
              "      <th>npg_1wks</th>\n",
              "      <th>npxG_1wks</th>\n",
              "      <th>xGChain</th>\n",
              "      <th>xGBuildup</th>\n",
              "      <th>xgdifference</th>\n",
              "      <th>xAdifference</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>36</th>\n",
              "      <td>10720</td>\n",
              "      <td>Darwin Núñez</td>\n",
              "      <td>19</td>\n",
              "      <td>5</td>\n",
              "      <td>11.132159</td>\n",
              "      <td>6</td>\n",
              "      <td>3.891612</td>\n",
              "      <td>58</td>\n",
              "      <td>19</td>\n",
              "      <td>F S</td>\n",
              "      <td>Liverpool</td>\n",
              "      <td>5</td>\n",
              "      <td>11.132159125991166</td>\n",
              "      <td>14.982022352516651</td>\n",
              "      <td>2.60064285248518</td>\n",
              "      <td>-6.132159</td>\n",
              "      <td>2.108388</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>13</th>\n",
              "      <td>10048</td>\n",
              "      <td>Nicolas Jackson</td>\n",
              "      <td>19</td>\n",
              "      <td>7</td>\n",
              "      <td>11.180736</td>\n",
              "      <td>2</td>\n",
              "      <td>2.957573</td>\n",
              "      <td>45</td>\n",
              "      <td>16</td>\n",
              "      <td>F M S</td>\n",
              "      <td>Chelsea</td>\n",
              "      <td>7</td>\n",
              "      <td>11.180736033245921</td>\n",
              "      <td>14.183117497712374</td>\n",
              "      <td>2.219442430883646</td>\n",
              "      <td>-4.180736</td>\n",
              "      <td>-0.957573</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>59</th>\n",
              "      <td>5555</td>\n",
              "      <td>Dominic Calvert-Lewin</td>\n",
              "      <td>16</td>\n",
              "      <td>3</td>\n",
              "      <td>7.067316</td>\n",
              "      <td>0</td>\n",
              "      <td>0.732500</td>\n",
              "      <td>33</td>\n",
              "      <td>10</td>\n",
              "      <td>F S</td>\n",
              "      <td>Everton</td>\n",
              "      <td>3</td>\n",
              "      <td>7.067315865308046</td>\n",
              "      <td>6.4377016462385654</td>\n",
              "      <td>0.6413102764636278</td>\n",
              "      <td>-4.067316</td>\n",
              "      <td>-0.732500</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>86</th>\n",
              "      <td>3621</td>\n",
              "      <td>Neal Maupay</td>\n",
              "      <td>16</td>\n",
              "      <td>2</td>\n",
              "      <td>5.165133</td>\n",
              "      <td>3</td>\n",
              "      <td>1.431693</td>\n",
              "      <td>29</td>\n",
              "      <td>10</td>\n",
              "      <td>F S</td>\n",
              "      <td>Brentford,Everton</td>\n",
              "      <td>2</td>\n",
              "      <td>5.165133114904165</td>\n",
              "      <td>8.070751886814833</td>\n",
              "      <td>2.0382075533270836</td>\n",
              "      <td>-3.165133</td>\n",
              "      <td>1.568307</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>121</th>\n",
              "      <td>11356</td>\n",
              "      <td>Enzo Fernández</td>\n",
              "      <td>17</td>\n",
              "      <td>2</td>\n",
              "      <td>4.734172</td>\n",
              "      <td>0</td>\n",
              "      <td>1.619420</td>\n",
              "      <td>30</td>\n",
              "      <td>14</td>\n",
              "      <td>M S</td>\n",
              "      <td>Chelsea</td>\n",
              "      <td>1</td>\n",
              "      <td>3.211833940818906</td>\n",
              "      <td>8.2339046895504</td>\n",
              "      <td>5.353159258142114</td>\n",
              "      <td>-2.734172</td>\n",
              "      <td>-1.619420</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>8260</td>\n",
              "      <td>Erling Haaland</td>\n",
              "      <td>15</td>\n",
              "      <td>14</td>\n",
              "      <td>16.727500</td>\n",
              "      <td>4</td>\n",
              "      <td>3.247231</td>\n",
              "      <td>58</td>\n",
              "      <td>16</td>\n",
              "      <td>F</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>11</td>\n",
              "      <td>13.68282476067543</td>\n",
              "      <td>16.214465029537678</td>\n",
              "      <td>1.3705047406256199</td>\n",
              "      <td>-2.727500</td>\n",
              "      <td>0.752769</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>214</th>\n",
              "      <td>11055</td>\n",
              "      <td>Rasmus Højlund</td>\n",
              "      <td>15</td>\n",
              "      <td>1</td>\n",
              "      <td>3.694961</td>\n",
              "      <td>0</td>\n",
              "      <td>0.811963</td>\n",
              "      <td>19</td>\n",
              "      <td>12</td>\n",
              "      <td>F S</td>\n",
              "      <td>Manchester United</td>\n",
              "      <td>1</td>\n",
              "      <td>3.694960955530405</td>\n",
              "      <td>4.302262082695961</td>\n",
              "      <td>0.9778778217732906</td>\n",
              "      <td>-2.694961</td>\n",
              "      <td>-0.811963</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>43</th>\n",
              "      <td>5786</td>\n",
              "      <td>Yoane Wissa</td>\n",
              "      <td>19</td>\n",
              "      <td>4</td>\n",
              "      <td>6.614129</td>\n",
              "      <td>1</td>\n",
              "      <td>1.780400</td>\n",
              "      <td>43</td>\n",
              "      <td>15</td>\n",
              "      <td>F S</td>\n",
              "      <td>Brentford</td>\n",
              "      <td>4</td>\n",
              "      <td>6.614129316061735</td>\n",
              "      <td>8.974249444901943</td>\n",
              "      <td>2.4045274388045073</td>\n",
              "      <td>-2.614129</td>\n",
              "      <td>-0.780400</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>210</th>\n",
              "      <td>10760</td>\n",
              "      <td>Brennan Johnson</td>\n",
              "      <td>17</td>\n",
              "      <td>1</td>\n",
              "      <td>3.610425</td>\n",
              "      <td>4</td>\n",
              "      <td>2.887639</td>\n",
              "      <td>26</td>\n",
              "      <td>19</td>\n",
              "      <td>F M S</td>\n",
              "      <td>Nottingham Forest,Tottenham</td>\n",
              "      <td>1</td>\n",
              "      <td>3.6104250103235245</td>\n",
              "      <td>7.822363168001175</td>\n",
              "      <td>2.0388473197817802</td>\n",
              "      <td>-2.610425</td>\n",
              "      <td>1.112361</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>52</th>\n",
              "      <td>556</td>\n",
              "      <td>Marcus Rashford</td>\n",
              "      <td>19</td>\n",
              "      <td>3</td>\n",
              "      <td>5.393616</td>\n",
              "      <td>2</td>\n",
              "      <td>1.999449</td>\n",
              "      <td>42</td>\n",
              "      <td>15</td>\n",
              "      <td>F M S</td>\n",
              "      <td>Manchester United</td>\n",
              "      <td>2</td>\n",
              "      <td>4.632446790114045</td>\n",
              "      <td>8.831173861399293</td>\n",
              "      <td>2.8092545457184315</td>\n",
              "      <td>-2.393616</td>\n",
              "      <td>0.000551</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-4cfcae57-d094-48b9-afe2-621688c7e274')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-4cfcae57-d094-48b9-afe2-621688c7e274 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-4cfcae57-d094-48b9-afe2-621688c7e274');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-0f0d4dfb-5e94-4a69-95a2-571cce96cfce\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-0f0d4dfb-5e94-4a69-95a2-571cce96cfce')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-0f0d4dfb-5e94-4a69-95a2-571cce96cfce button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 4
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "sortXgDifference.tail(10)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 484
        },
        "id": "UxuLfRINhwx7",
        "outputId": "48632b6c-fb5f-4f9d-e067-2ff8f3b51581"
      },
      "execution_count": 5,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "       id     player_name games  goals_1wks   xG_1wks  assists_1wks   xA_1wks  \\\n",
              "66   8323  Josh Brownhill    19           3  0.814102             0  0.788727   \n",
              "72  10822  Wilson Odobert    11           3  0.671918             1  1.323721   \n",
              "62   7166  Mathias Jensen    14           3  0.483322             2  2.500248   \n",
              "4    1776    Jarrod Bowen    19          11  8.295725             2  3.144163   \n",
              "16   5221     Leon Bailey    18           6  3.263503             5  4.156177   \n",
              "22  10177   Evan Ferguson    18           6  3.116367             0  0.606391   \n",
              "26   3635  Bernardo Silva    16           5  2.044409             4  4.979103   \n",
              "5    8845  Hee-Chan Hwang    20          10  6.790350             3  3.036631   \n",
              "24  12027  Mohammed Kudus    16           6  1.817115             1  1.332198   \n",
              "2     453   Son Heung-Min    20          12  7.474957             5  6.843131   \n",
              "\n",
              "   shots_1wks key_passes_1wks position               team_title npg_1wks  \\\n",
              "66         18              17      M S                  Burnley        3   \n",
              "72         12              10    F M S                  Burnley        3   \n",
              "62          8              20      M S                Brentford        3   \n",
              "4          47              14      F M                 West Ham       11   \n",
              "16         27              19      M S              Aston Villa        6   \n",
              "22         26               5      F S                 Brighton        6   \n",
              "26         16              33      M S          Manchester City        5   \n",
              "5          35              14    F M S  Wolverhampton Wanderers        9   \n",
              "24         21              11    F M S                 West Ham        6   \n",
              "2          52              37      F M                Tottenham       11   \n",
              "\n",
              "              npxG_1wks             xGChain           xGBuildup  xgdifference  \\\n",
              "66   0.8141022082418203   3.013436533510685  2.2119256537407637      2.185898   \n",
              "72   0.6719179842621088    2.43447501771152  0.6107225157320499      2.328082   \n",
              "62  0.48332162480801344   5.923113073222339   5.234428940340877      2.516678   \n",
              "4      8.29572493582964   9.910744827240705  1.9265567287802696      2.704275   \n",
              "16   3.2635028287768364   8.750119514763355   2.968475740402937      2.736497   \n",
              "22    3.116366809234023   5.664436191320419  2.0616533048450947      2.883633   \n",
              "26     2.04440888017416  13.449813580140471   8.570691099390388      2.955591   \n",
              "5     6.029180759564042   9.669545919634402   2.148992163129151      3.209650   \n",
              "24   1.8171145021915436   4.752290626987815  2.4629297740757465      4.182885   \n",
              "2     6.713788405060768  16.887082293629646   6.178518561646342      4.525043   \n",
              "\n",
              "    xAdifference  \n",
              "66     -0.788727  \n",
              "72     -0.323721  \n",
              "62     -0.500248  \n",
              "4      -1.144163  \n",
              "16      0.843823  \n",
              "22     -0.606391  \n",
              "26     -0.979103  \n",
              "5      -0.036631  \n",
              "24     -0.332198  \n",
              "2      -1.843131  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-456c682c-f635-47a4-83a9-1950f3b247e9\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>player_name</th>\n",
              "      <th>games</th>\n",
              "      <th>goals_1wks</th>\n",
              "      <th>xG_1wks</th>\n",
              "      <th>assists_1wks</th>\n",
              "      <th>xA_1wks</th>\n",
              "      <th>shots_1wks</th>\n",
              "      <th>key_passes_1wks</th>\n",
              "      <th>position</th>\n",
              "      <th>team_title</th>\n",
              "      <th>npg_1wks</th>\n",
              "      <th>npxG_1wks</th>\n",
              "      <th>xGChain</th>\n",
              "      <th>xGBuildup</th>\n",
              "      <th>xgdifference</th>\n",
              "      <th>xAdifference</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>66</th>\n",
              "      <td>8323</td>\n",
              "      <td>Josh Brownhill</td>\n",
              "      <td>19</td>\n",
              "      <td>3</td>\n",
              "      <td>0.814102</td>\n",
              "      <td>0</td>\n",
              "      <td>0.788727</td>\n",
              "      <td>18</td>\n",
              "      <td>17</td>\n",
              "      <td>M S</td>\n",
              "      <td>Burnley</td>\n",
              "      <td>3</td>\n",
              "      <td>0.8141022082418203</td>\n",
              "      <td>3.013436533510685</td>\n",
              "      <td>2.2119256537407637</td>\n",
              "      <td>2.185898</td>\n",
              "      <td>-0.788727</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>72</th>\n",
              "      <td>10822</td>\n",
              "      <td>Wilson Odobert</td>\n",
              "      <td>11</td>\n",
              "      <td>3</td>\n",
              "      <td>0.671918</td>\n",
              "      <td>1</td>\n",
              "      <td>1.323721</td>\n",
              "      <td>12</td>\n",
              "      <td>10</td>\n",
              "      <td>F M S</td>\n",
              "      <td>Burnley</td>\n",
              "      <td>3</td>\n",
              "      <td>0.6719179842621088</td>\n",
              "      <td>2.43447501771152</td>\n",
              "      <td>0.6107225157320499</td>\n",
              "      <td>2.328082</td>\n",
              "      <td>-0.323721</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>62</th>\n",
              "      <td>7166</td>\n",
              "      <td>Mathias Jensen</td>\n",
              "      <td>14</td>\n",
              "      <td>3</td>\n",
              "      <td>0.483322</td>\n",
              "      <td>2</td>\n",
              "      <td>2.500248</td>\n",
              "      <td>8</td>\n",
              "      <td>20</td>\n",
              "      <td>M S</td>\n",
              "      <td>Brentford</td>\n",
              "      <td>3</td>\n",
              "      <td>0.48332162480801344</td>\n",
              "      <td>5.923113073222339</td>\n",
              "      <td>5.234428940340877</td>\n",
              "      <td>2.516678</td>\n",
              "      <td>-0.500248</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>1776</td>\n",
              "      <td>Jarrod Bowen</td>\n",
              "      <td>19</td>\n",
              "      <td>11</td>\n",
              "      <td>8.295725</td>\n",
              "      <td>2</td>\n",
              "      <td>3.144163</td>\n",
              "      <td>47</td>\n",
              "      <td>14</td>\n",
              "      <td>F M</td>\n",
              "      <td>West Ham</td>\n",
              "      <td>11</td>\n",
              "      <td>8.29572493582964</td>\n",
              "      <td>9.910744827240705</td>\n",
              "      <td>1.9265567287802696</td>\n",
              "      <td>2.704275</td>\n",
              "      <td>-1.144163</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>16</th>\n",
              "      <td>5221</td>\n",
              "      <td>Leon Bailey</td>\n",
              "      <td>18</td>\n",
              "      <td>6</td>\n",
              "      <td>3.263503</td>\n",
              "      <td>5</td>\n",
              "      <td>4.156177</td>\n",
              "      <td>27</td>\n",
              "      <td>19</td>\n",
              "      <td>M S</td>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>6</td>\n",
              "      <td>3.2635028287768364</td>\n",
              "      <td>8.750119514763355</td>\n",
              "      <td>2.968475740402937</td>\n",
              "      <td>2.736497</td>\n",
              "      <td>0.843823</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>22</th>\n",
              "      <td>10177</td>\n",
              "      <td>Evan Ferguson</td>\n",
              "      <td>18</td>\n",
              "      <td>6</td>\n",
              "      <td>3.116367</td>\n",
              "      <td>0</td>\n",
              "      <td>0.606391</td>\n",
              "      <td>26</td>\n",
              "      <td>5</td>\n",
              "      <td>F S</td>\n",
              "      <td>Brighton</td>\n",
              "      <td>6</td>\n",
              "      <td>3.116366809234023</td>\n",
              "      <td>5.664436191320419</td>\n",
              "      <td>2.0616533048450947</td>\n",
              "      <td>2.883633</td>\n",
              "      <td>-0.606391</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>26</th>\n",
              "      <td>3635</td>\n",
              "      <td>Bernardo Silva</td>\n",
              "      <td>16</td>\n",
              "      <td>5</td>\n",
              "      <td>2.044409</td>\n",
              "      <td>4</td>\n",
              "      <td>4.979103</td>\n",
              "      <td>16</td>\n",
              "      <td>33</td>\n",
              "      <td>M S</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>5</td>\n",
              "      <td>2.04440888017416</td>\n",
              "      <td>13.449813580140471</td>\n",
              "      <td>8.570691099390388</td>\n",
              "      <td>2.955591</td>\n",
              "      <td>-0.979103</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>8845</td>\n",
              "      <td>Hee-Chan Hwang</td>\n",
              "      <td>20</td>\n",
              "      <td>10</td>\n",
              "      <td>6.790350</td>\n",
              "      <td>3</td>\n",
              "      <td>3.036631</td>\n",
              "      <td>35</td>\n",
              "      <td>14</td>\n",
              "      <td>F M S</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>9</td>\n",
              "      <td>6.029180759564042</td>\n",
              "      <td>9.669545919634402</td>\n",
              "      <td>2.148992163129151</td>\n",
              "      <td>3.209650</td>\n",
              "      <td>-0.036631</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>24</th>\n",
              "      <td>12027</td>\n",
              "      <td>Mohammed Kudus</td>\n",
              "      <td>16</td>\n",
              "      <td>6</td>\n",
              "      <td>1.817115</td>\n",
              "      <td>1</td>\n",
              "      <td>1.332198</td>\n",
              "      <td>21</td>\n",
              "      <td>11</td>\n",
              "      <td>F M S</td>\n",
              "      <td>West Ham</td>\n",
              "      <td>6</td>\n",
              "      <td>1.8171145021915436</td>\n",
              "      <td>4.752290626987815</td>\n",
              "      <td>2.4629297740757465</td>\n",
              "      <td>4.182885</td>\n",
              "      <td>-0.332198</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>453</td>\n",
              "      <td>Son Heung-Min</td>\n",
              "      <td>20</td>\n",
              "      <td>12</td>\n",
              "      <td>7.474957</td>\n",
              "      <td>5</td>\n",
              "      <td>6.843131</td>\n",
              "      <td>52</td>\n",
              "      <td>37</td>\n",
              "      <td>F M</td>\n",
              "      <td>Tottenham</td>\n",
              "      <td>11</td>\n",
              "      <td>6.713788405060768</td>\n",
              "      <td>16.887082293629646</td>\n",
              "      <td>6.178518561646342</td>\n",
              "      <td>4.525043</td>\n",
              "      <td>-1.843131</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-456c682c-f635-47a4-83a9-1950f3b247e9')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-456c682c-f635-47a4-83a9-1950f3b247e9 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-456c682c-f635-47a4-83a9-1950f3b247e9');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-19c333b6-a02a-4ca4-b56b-8b31071cea17\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-19c333b6-a02a-4ca4-b56b-8b31071cea17')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-19c333b6-a02a-4ca4-b56b-8b31071cea17 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 5
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "one_game_df"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 583
        },
        "id": "NDPdgpJUVBBZ",
        "outputId": "fd4e3470-903a-4dd1-eedf-3794b7e37be1"
      },
      "execution_count": 6,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "        id       player_name games  time  goals_1wks    xG_1wks  assists_1wks  \\\n",
              "0     1250     Mohamed Salah    20  1768          14  13.610326             8   \n",
              "1     8260    Erling Haaland    15  1305          14  16.727500             4   \n",
              "2      453     Son Heung-Min    20  1739          12   7.474957             5   \n",
              "3     1679   Dominic Solanke    19  1708          12  12.378115             1   \n",
              "4     1776      Jarrod Bowen    19  1710          11   8.295725             2   \n",
              "..     ...               ...   ...   ...         ...        ...           ...   \n",
              "488  12032  Djordje Petrovic     5   362           0   0.000000             0   \n",
              "491  12094       Mike Trésor    13   372           0   0.661599             0   \n",
              "493  12123           Murillo    14  1243           0   0.774332             1   \n",
              "496  12187      Jordan Clark     5    72           0   0.000000             0   \n",
              "503  12275    Willy Kambwala     2    88           0   0.000000             0   \n",
              "\n",
              "      xA_1wks shots_1wks key_passes_1wks yellow_cards red_cards position  \\\n",
              "0    9.578479         65              47            2         0        F   \n",
              "1    3.247231         58              16            1         0        F   \n",
              "2    6.843131         52              37            1         0      F M   \n",
              "3    0.997695         66              14            1         0        F   \n",
              "4    3.144163         47              14            1         0      F M   \n",
              "..        ...        ...             ...          ...       ...      ...   \n",
              "488  0.000000          0               0            0         0     GK S   \n",
              "491  0.649103          5               7            0         0    F M S   \n",
              "493  1.033867          8               5            2         0        D   \n",
              "496  0.028226          0               1            1         0        S   \n",
              "503  0.000000          0               0            0         0      D S   \n",
              "\n",
              "            team_title npg_1wks           npxG_1wks               xGChain  \\\n",
              "0            Liverpool       10   9.043387070298195     19.68034301698208   \n",
              "1      Manchester City       11   13.68282476067543    16.214465029537678   \n",
              "2            Tottenham       11   6.713788405060768    16.887082293629646   \n",
              "3          Bournemouth       11   11.61694597452879    12.262300044298172   \n",
              "4             West Ham       11    8.29572493582964     9.910744827240705   \n",
              "..                 ...      ...                 ...                   ...   \n",
              "488            Chelsea        0                   0    0.1869112327694893   \n",
              "491            Burnley        0  0.6615988579578698    0.9640207779593766   \n",
              "493  Nottingham Forest        0  0.7743317726999521     4.068312864750624   \n",
              "496              Luton        0                   0  0.028225945308804512   \n",
              "503  Manchester United        0                   0   0.07591637223958969   \n",
              "\n",
              "               xGBuildup  xgdifference  xAdifference  \n",
              "0      5.720102474093437      0.389674     -1.578479  \n",
              "1     1.3705047406256199     -2.727500      0.752769  \n",
              "2      6.178518561646342      4.525043     -1.843131  \n",
              "3     1.8974752612411976     -0.378115      0.002305  \n",
              "4     1.9265567287802696      2.704275     -1.144163  \n",
              "..                   ...           ...           ...  \n",
              "488   0.1869112327694893      0.000000      0.000000  \n",
              "491   0.3211935800500214     -0.661599     -0.649103  \n",
              "493    3.109786381945014     -0.774332     -0.033867  \n",
              "496                    0      0.000000     -0.028226  \n",
              "503  0.07591637223958969      0.000000      0.000000  \n",
              "\n",
              "[453 rows x 20 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-a15a5999-870f-4725-ac7e-b3a2eba15b97\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>player_name</th>\n",
              "      <th>games</th>\n",
              "      <th>time</th>\n",
              "      <th>goals_1wks</th>\n",
              "      <th>xG_1wks</th>\n",
              "      <th>assists_1wks</th>\n",
              "      <th>xA_1wks</th>\n",
              "      <th>shots_1wks</th>\n",
              "      <th>key_passes_1wks</th>\n",
              "      <th>yellow_cards</th>\n",
              "      <th>red_cards</th>\n",
              "      <th>position</th>\n",
              "      <th>team_title</th>\n",
              "      <th>npg_1wks</th>\n",
              "      <th>npxG_1wks</th>\n",
              "      <th>xGChain</th>\n",
              "      <th>xGBuildup</th>\n",
              "      <th>xgdifference</th>\n",
              "      <th>xAdifference</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>1250</td>\n",
              "      <td>Mohamed Salah</td>\n",
              "      <td>20</td>\n",
              "      <td>1768</td>\n",
              "      <td>14</td>\n",
              "      <td>13.610326</td>\n",
              "      <td>8</td>\n",
              "      <td>9.578479</td>\n",
              "      <td>65</td>\n",
              "      <td>47</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>F</td>\n",
              "      <td>Liverpool</td>\n",
              "      <td>10</td>\n",
              "      <td>9.043387070298195</td>\n",
              "      <td>19.68034301698208</td>\n",
              "      <td>5.720102474093437</td>\n",
              "      <td>0.389674</td>\n",
              "      <td>-1.578479</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>8260</td>\n",
              "      <td>Erling Haaland</td>\n",
              "      <td>15</td>\n",
              "      <td>1305</td>\n",
              "      <td>14</td>\n",
              "      <td>16.727500</td>\n",
              "      <td>4</td>\n",
              "      <td>3.247231</td>\n",
              "      <td>58</td>\n",
              "      <td>16</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>F</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>11</td>\n",
              "      <td>13.68282476067543</td>\n",
              "      <td>16.214465029537678</td>\n",
              "      <td>1.3705047406256199</td>\n",
              "      <td>-2.727500</td>\n",
              "      <td>0.752769</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>453</td>\n",
              "      <td>Son Heung-Min</td>\n",
              "      <td>20</td>\n",
              "      <td>1739</td>\n",
              "      <td>12</td>\n",
              "      <td>7.474957</td>\n",
              "      <td>5</td>\n",
              "      <td>6.843131</td>\n",
              "      <td>52</td>\n",
              "      <td>37</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>F M</td>\n",
              "      <td>Tottenham</td>\n",
              "      <td>11</td>\n",
              "      <td>6.713788405060768</td>\n",
              "      <td>16.887082293629646</td>\n",
              "      <td>6.178518561646342</td>\n",
              "      <td>4.525043</td>\n",
              "      <td>-1.843131</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>1679</td>\n",
              "      <td>Dominic Solanke</td>\n",
              "      <td>19</td>\n",
              "      <td>1708</td>\n",
              "      <td>12</td>\n",
              "      <td>12.378115</td>\n",
              "      <td>1</td>\n",
              "      <td>0.997695</td>\n",
              "      <td>66</td>\n",
              "      <td>14</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>F</td>\n",
              "      <td>Bournemouth</td>\n",
              "      <td>11</td>\n",
              "      <td>11.61694597452879</td>\n",
              "      <td>12.262300044298172</td>\n",
              "      <td>1.8974752612411976</td>\n",
              "      <td>-0.378115</td>\n",
              "      <td>0.002305</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>1776</td>\n",
              "      <td>Jarrod Bowen</td>\n",
              "      <td>19</td>\n",
              "      <td>1710</td>\n",
              "      <td>11</td>\n",
              "      <td>8.295725</td>\n",
              "      <td>2</td>\n",
              "      <td>3.144163</td>\n",
              "      <td>47</td>\n",
              "      <td>14</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>F M</td>\n",
              "      <td>West Ham</td>\n",
              "      <td>11</td>\n",
              "      <td>8.29572493582964</td>\n",
              "      <td>9.910744827240705</td>\n",
              "      <td>1.9265567287802696</td>\n",
              "      <td>2.704275</td>\n",
              "      <td>-1.144163</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>488</th>\n",
              "      <td>12032</td>\n",
              "      <td>Djordje Petrovic</td>\n",
              "      <td>5</td>\n",
              "      <td>362</td>\n",
              "      <td>0</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>GK S</td>\n",
              "      <td>Chelsea</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.1869112327694893</td>\n",
              "      <td>0.1869112327694893</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>491</th>\n",
              "      <td>12094</td>\n",
              "      <td>Mike Trésor</td>\n",
              "      <td>13</td>\n",
              "      <td>372</td>\n",
              "      <td>0</td>\n",
              "      <td>0.661599</td>\n",
              "      <td>0</td>\n",
              "      <td>0.649103</td>\n",
              "      <td>5</td>\n",
              "      <td>7</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>F M S</td>\n",
              "      <td>Burnley</td>\n",
              "      <td>0</td>\n",
              "      <td>0.6615988579578698</td>\n",
              "      <td>0.9640207779593766</td>\n",
              "      <td>0.3211935800500214</td>\n",
              "      <td>-0.661599</td>\n",
              "      <td>-0.649103</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>493</th>\n",
              "      <td>12123</td>\n",
              "      <td>Murillo</td>\n",
              "      <td>14</td>\n",
              "      <td>1243</td>\n",
              "      <td>0</td>\n",
              "      <td>0.774332</td>\n",
              "      <td>1</td>\n",
              "      <td>1.033867</td>\n",
              "      <td>8</td>\n",
              "      <td>5</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>D</td>\n",
              "      <td>Nottingham Forest</td>\n",
              "      <td>0</td>\n",
              "      <td>0.7743317726999521</td>\n",
              "      <td>4.068312864750624</td>\n",
              "      <td>3.109786381945014</td>\n",
              "      <td>-0.774332</td>\n",
              "      <td>-0.033867</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>496</th>\n",
              "      <td>12187</td>\n",
              "      <td>Jordan Clark</td>\n",
              "      <td>5</td>\n",
              "      <td>72</td>\n",
              "      <td>0</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0</td>\n",
              "      <td>0.028226</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>S</td>\n",
              "      <td>Luton</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.028225945308804512</td>\n",
              "      <td>0</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>-0.028226</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>503</th>\n",
              "      <td>12275</td>\n",
              "      <td>Willy Kambwala</td>\n",
              "      <td>2</td>\n",
              "      <td>88</td>\n",
              "      <td>0</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>D S</td>\n",
              "      <td>Manchester United</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.07591637223958969</td>\n",
              "      <td>0.07591637223958969</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>453 rows × 20 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-a15a5999-870f-4725-ac7e-b3a2eba15b97')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-a15a5999-870f-4725-ac7e-b3a2eba15b97 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-a15a5999-870f-4725-ac7e-b3a2eba15b97');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-f35a33b3-ceee-41cb-a6db-be0a09ae87e4\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-f35a33b3-ceee-41cb-a6db-be0a09ae87e4')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-f35a33b3-ceee-41cb-a6db-be0a09ae87e4 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 6
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "onegamedftidy = one_game_df.drop(columns=[\n",
        " 'time',\n",
        " 'goals_1wks',\n",
        " 'assists_1wks',\n",
        " 'shots_1wks',\n",
        " 'key_passes_1wks',\n",
        " 'yellow_cards',\n",
        " 'red_cards',\n",
        " 'npg_1wks',\n",
        " 'npxG_1wks',\n",
        " 'xGChain',\n",
        " 'xGBuildup',\n",
        " 'xgdifference',\n",
        " 'xAdifference'])\n",
        "onegamedftidy"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 424
        },
        "id": "RKf0tUGEh8FV",
        "outputId": "82109822-4dda-42aa-cd91-e74be565bd99"
      },
      "execution_count": 7,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "        id       player_name games    xG_1wks   xA_1wks position  \\\n",
              "0     1250     Mohamed Salah    20  13.610326  9.578479        F   \n",
              "1     8260    Erling Haaland    15  16.727500  3.247231        F   \n",
              "2      453     Son Heung-Min    20   7.474957  6.843131      F M   \n",
              "3     1679   Dominic Solanke    19  12.378115  0.997695        F   \n",
              "4     1776      Jarrod Bowen    19   8.295725  3.144163      F M   \n",
              "..     ...               ...   ...        ...       ...      ...   \n",
              "488  12032  Djordje Petrovic     5   0.000000  0.000000     GK S   \n",
              "491  12094       Mike Trésor    13   0.661599  0.649103    F M S   \n",
              "493  12123           Murillo    14   0.774332  1.033867        D   \n",
              "496  12187      Jordan Clark     5   0.000000  0.028226        S   \n",
              "503  12275    Willy Kambwala     2   0.000000  0.000000      D S   \n",
              "\n",
              "            team_title  \n",
              "0            Liverpool  \n",
              "1      Manchester City  \n",
              "2            Tottenham  \n",
              "3          Bournemouth  \n",
              "4             West Ham  \n",
              "..                 ...  \n",
              "488            Chelsea  \n",
              "491            Burnley  \n",
              "493  Nottingham Forest  \n",
              "496              Luton  \n",
              "503  Manchester United  \n",
              "\n",
              "[453 rows x 7 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-fcbb756f-cdae-4e61-b0db-bcfd86b2d504\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>player_name</th>\n",
              "      <th>games</th>\n",
              "      <th>xG_1wks</th>\n",
              "      <th>xA_1wks</th>\n",
              "      <th>position</th>\n",
              "      <th>team_title</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>1250</td>\n",
              "      <td>Mohamed Salah</td>\n",
              "      <td>20</td>\n",
              "      <td>13.610326</td>\n",
              "      <td>9.578479</td>\n",
              "      <td>F</td>\n",
              "      <td>Liverpool</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>8260</td>\n",
              "      <td>Erling Haaland</td>\n",
              "      <td>15</td>\n",
              "      <td>16.727500</td>\n",
              "      <td>3.247231</td>\n",
              "      <td>F</td>\n",
              "      <td>Manchester City</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>453</td>\n",
              "      <td>Son Heung-Min</td>\n",
              "      <td>20</td>\n",
              "      <td>7.474957</td>\n",
              "      <td>6.843131</td>\n",
              "      <td>F M</td>\n",
              "      <td>Tottenham</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>1679</td>\n",
              "      <td>Dominic Solanke</td>\n",
              "      <td>19</td>\n",
              "      <td>12.378115</td>\n",
              "      <td>0.997695</td>\n",
              "      <td>F</td>\n",
              "      <td>Bournemouth</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>1776</td>\n",
              "      <td>Jarrod Bowen</td>\n",
              "      <td>19</td>\n",
              "      <td>8.295725</td>\n",
              "      <td>3.144163</td>\n",
              "      <td>F M</td>\n",
              "      <td>West Ham</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>488</th>\n",
              "      <td>12032</td>\n",
              "      <td>Djordje Petrovic</td>\n",
              "      <td>5</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>GK S</td>\n",
              "      <td>Chelsea</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>491</th>\n",
              "      <td>12094</td>\n",
              "      <td>Mike Trésor</td>\n",
              "      <td>13</td>\n",
              "      <td>0.661599</td>\n",
              "      <td>0.649103</td>\n",
              "      <td>F M S</td>\n",
              "      <td>Burnley</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>493</th>\n",
              "      <td>12123</td>\n",
              "      <td>Murillo</td>\n",
              "      <td>14</td>\n",
              "      <td>0.774332</td>\n",
              "      <td>1.033867</td>\n",
              "      <td>D</td>\n",
              "      <td>Nottingham Forest</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>496</th>\n",
              "      <td>12187</td>\n",
              "      <td>Jordan Clark</td>\n",
              "      <td>5</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.028226</td>\n",
              "      <td>S</td>\n",
              "      <td>Luton</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>503</th>\n",
              "      <td>12275</td>\n",
              "      <td>Willy Kambwala</td>\n",
              "      <td>2</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>D S</td>\n",
              "      <td>Manchester United</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>453 rows × 7 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-fcbb756f-cdae-4e61-b0db-bcfd86b2d504')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-fcbb756f-cdae-4e61-b0db-bcfd86b2d504 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-fcbb756f-cdae-4e61-b0db-bcfd86b2d504');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-e4960844-810f-4afe-952d-be5ad9cf30d8\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-e4960844-810f-4afe-952d-be5ad9cf30d8')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-e4960844-810f-4afe-952d-be5ad9cf30d8 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 7
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "!git clone https://github.com/pratos/fpl-mappers\n",
        "!git clone https://github.com/ChrisMusson/FPL-ID-Map\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "B9kCj8OeiKGn",
        "outputId": "64c6ec46-4b25-4b2a-de92-56b74cec8165"
      },
      "execution_count": 8,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Cloning into 'fpl-mappers'...\n",
            "remote: Enumerating objects: 94, done.\u001b[K\n",
            "remote: Counting objects: 100% (94/94), done.\u001b[K\n",
            "remote: Compressing objects: 100% (56/56), done.\u001b[K\n",
            "remote: Total 94 (delta 32), reused 89 (delta 30), pack-reused 0\u001b[K\n",
            "Receiving objects: 100% (94/94), 217.69 KiB | 5.73 MiB/s, done.\n",
            "Resolving deltas: 100% (32/32), done.\n",
            "Cloning into 'FPL-ID-Map'...\n",
            "remote: Enumerating objects: 242, done.\u001b[K\n",
            "remote: Counting objects: 100% (242/242), done.\u001b[K\n",
            "remote: Compressing objects: 100% (120/120), done.\u001b[K\n",
            "remote: Total 242 (delta 176), reused 188 (delta 122), pack-reused 0\u001b[K\n",
            "Receiving objects: 100% (242/242), 273.05 KiB | 7.38 MiB/s, done.\n",
            "Resolving deltas: 100% (176/176), done.\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "data1 = pd.read_csv('/content/FPL-ID-Map/Understat.csv', on_bad_lines='skip')\n",
        "data2 = pd.read_csv('/content/FPL-ID-Map/FPL/22-23.csv', on_bad_lines='skip')\n",
        "understatwithfplid1 = pd.merge(data2,\n",
        "                     data1,\n",
        "                     on ='code',\n",
        "                     how ='left')\n",
        "understatid = understatwithfplid1.drop(columns=[\n",
        "'code',\n",
        " 'first_name_x',\n",
        " 'second_name_x',\n",
        " 'web_name_x',\n",
        " 'first_name_y',\n",
        " 'second_name_y',\n",
        " 'web_name_y',])\n",
        "one_game_df.rename(columns={'id': 'understat'}, inplace=True)\n",
        "one_game_df"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 583
        },
        "id": "SaX7692EiQA7",
        "outputId": "a7b4384c-c1df-49cc-f283-f72ac879c9c8"
      },
      "execution_count": 9,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "    understat       player_name games  time  goals_1wks    xG_1wks  \\\n",
              "0        1250     Mohamed Salah    20  1768          14  13.610326   \n",
              "1        8260    Erling Haaland    15  1305          14  16.727500   \n",
              "2         453     Son Heung-Min    20  1739          12   7.474957   \n",
              "3        1679   Dominic Solanke    19  1708          12  12.378115   \n",
              "4        1776      Jarrod Bowen    19  1710          11   8.295725   \n",
              "..        ...               ...   ...   ...         ...        ...   \n",
              "488     12032  Djordje Petrovic     5   362           0   0.000000   \n",
              "491     12094       Mike Trésor    13   372           0   0.661599   \n",
              "493     12123           Murillo    14  1243           0   0.774332   \n",
              "496     12187      Jordan Clark     5    72           0   0.000000   \n",
              "503     12275    Willy Kambwala     2    88           0   0.000000   \n",
              "\n",
              "     assists_1wks   xA_1wks shots_1wks key_passes_1wks yellow_cards red_cards  \\\n",
              "0               8  9.578479         65              47            2         0   \n",
              "1               4  3.247231         58              16            1         0   \n",
              "2               5  6.843131         52              37            1         0   \n",
              "3               1  0.997695         66              14            1         0   \n",
              "4               2  3.144163         47              14            1         0   \n",
              "..            ...       ...        ...             ...          ...       ...   \n",
              "488             0  0.000000          0               0            0         0   \n",
              "491             0  0.649103          5               7            0         0   \n",
              "493             1  1.033867          8               5            2         0   \n",
              "496             0  0.028226          0               1            1         0   \n",
              "503             0  0.000000          0               0            0         0   \n",
              "\n",
              "    position         team_title npg_1wks           npxG_1wks  \\\n",
              "0          F          Liverpool       10   9.043387070298195   \n",
              "1          F    Manchester City       11   13.68282476067543   \n",
              "2        F M          Tottenham       11   6.713788405060768   \n",
              "3          F        Bournemouth       11   11.61694597452879   \n",
              "4        F M           West Ham       11    8.29572493582964   \n",
              "..       ...                ...      ...                 ...   \n",
              "488     GK S            Chelsea        0                   0   \n",
              "491    F M S            Burnley        0  0.6615988579578698   \n",
              "493        D  Nottingham Forest        0  0.7743317726999521   \n",
              "496        S              Luton        0                   0   \n",
              "503      D S  Manchester United        0                   0   \n",
              "\n",
              "                  xGChain            xGBuildup  xgdifference  xAdifference  \n",
              "0       19.68034301698208    5.720102474093437      0.389674     -1.578479  \n",
              "1      16.214465029537678   1.3705047406256199     -2.727500      0.752769  \n",
              "2      16.887082293629646    6.178518561646342      4.525043     -1.843131  \n",
              "3      12.262300044298172   1.8974752612411976     -0.378115      0.002305  \n",
              "4       9.910744827240705   1.9265567287802696      2.704275     -1.144163  \n",
              "..                    ...                  ...           ...           ...  \n",
              "488    0.1869112327694893   0.1869112327694893      0.000000      0.000000  \n",
              "491    0.9640207779593766   0.3211935800500214     -0.661599     -0.649103  \n",
              "493     4.068312864750624    3.109786381945014     -0.774332     -0.033867  \n",
              "496  0.028225945308804512                    0      0.000000     -0.028226  \n",
              "503   0.07591637223958969  0.07591637223958969      0.000000      0.000000  \n",
              "\n",
              "[453 rows x 20 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-d437a222-3303-435a-b364-fcc0aa5bf307\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>understat</th>\n",
              "      <th>player_name</th>\n",
              "      <th>games</th>\n",
              "      <th>time</th>\n",
              "      <th>goals_1wks</th>\n",
              "      <th>xG_1wks</th>\n",
              "      <th>assists_1wks</th>\n",
              "      <th>xA_1wks</th>\n",
              "      <th>shots_1wks</th>\n",
              "      <th>key_passes_1wks</th>\n",
              "      <th>yellow_cards</th>\n",
              "      <th>red_cards</th>\n",
              "      <th>position</th>\n",
              "      <th>team_title</th>\n",
              "      <th>npg_1wks</th>\n",
              "      <th>npxG_1wks</th>\n",
              "      <th>xGChain</th>\n",
              "      <th>xGBuildup</th>\n",
              "      <th>xgdifference</th>\n",
              "      <th>xAdifference</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>1250</td>\n",
              "      <td>Mohamed Salah</td>\n",
              "      <td>20</td>\n",
              "      <td>1768</td>\n",
              "      <td>14</td>\n",
              "      <td>13.610326</td>\n",
              "      <td>8</td>\n",
              "      <td>9.578479</td>\n",
              "      <td>65</td>\n",
              "      <td>47</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>F</td>\n",
              "      <td>Liverpool</td>\n",
              "      <td>10</td>\n",
              "      <td>9.043387070298195</td>\n",
              "      <td>19.68034301698208</td>\n",
              "      <td>5.720102474093437</td>\n",
              "      <td>0.389674</td>\n",
              "      <td>-1.578479</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>8260</td>\n",
              "      <td>Erling Haaland</td>\n",
              "      <td>15</td>\n",
              "      <td>1305</td>\n",
              "      <td>14</td>\n",
              "      <td>16.727500</td>\n",
              "      <td>4</td>\n",
              "      <td>3.247231</td>\n",
              "      <td>58</td>\n",
              "      <td>16</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>F</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>11</td>\n",
              "      <td>13.68282476067543</td>\n",
              "      <td>16.214465029537678</td>\n",
              "      <td>1.3705047406256199</td>\n",
              "      <td>-2.727500</td>\n",
              "      <td>0.752769</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>453</td>\n",
              "      <td>Son Heung-Min</td>\n",
              "      <td>20</td>\n",
              "      <td>1739</td>\n",
              "      <td>12</td>\n",
              "      <td>7.474957</td>\n",
              "      <td>5</td>\n",
              "      <td>6.843131</td>\n",
              "      <td>52</td>\n",
              "      <td>37</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>F M</td>\n",
              "      <td>Tottenham</td>\n",
              "      <td>11</td>\n",
              "      <td>6.713788405060768</td>\n",
              "      <td>16.887082293629646</td>\n",
              "      <td>6.178518561646342</td>\n",
              "      <td>4.525043</td>\n",
              "      <td>-1.843131</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>1679</td>\n",
              "      <td>Dominic Solanke</td>\n",
              "      <td>19</td>\n",
              "      <td>1708</td>\n",
              "      <td>12</td>\n",
              "      <td>12.378115</td>\n",
              "      <td>1</td>\n",
              "      <td>0.997695</td>\n",
              "      <td>66</td>\n",
              "      <td>14</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>F</td>\n",
              "      <td>Bournemouth</td>\n",
              "      <td>11</td>\n",
              "      <td>11.61694597452879</td>\n",
              "      <td>12.262300044298172</td>\n",
              "      <td>1.8974752612411976</td>\n",
              "      <td>-0.378115</td>\n",
              "      <td>0.002305</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>1776</td>\n",
              "      <td>Jarrod Bowen</td>\n",
              "      <td>19</td>\n",
              "      <td>1710</td>\n",
              "      <td>11</td>\n",
              "      <td>8.295725</td>\n",
              "      <td>2</td>\n",
              "      <td>3.144163</td>\n",
              "      <td>47</td>\n",
              "      <td>14</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>F M</td>\n",
              "      <td>West Ham</td>\n",
              "      <td>11</td>\n",
              "      <td>8.29572493582964</td>\n",
              "      <td>9.910744827240705</td>\n",
              "      <td>1.9265567287802696</td>\n",
              "      <td>2.704275</td>\n",
              "      <td>-1.144163</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>488</th>\n",
              "      <td>12032</td>\n",
              "      <td>Djordje Petrovic</td>\n",
              "      <td>5</td>\n",
              "      <td>362</td>\n",
              "      <td>0</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>GK S</td>\n",
              "      <td>Chelsea</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.1869112327694893</td>\n",
              "      <td>0.1869112327694893</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>491</th>\n",
              "      <td>12094</td>\n",
              "      <td>Mike Trésor</td>\n",
              "      <td>13</td>\n",
              "      <td>372</td>\n",
              "      <td>0</td>\n",
              "      <td>0.661599</td>\n",
              "      <td>0</td>\n",
              "      <td>0.649103</td>\n",
              "      <td>5</td>\n",
              "      <td>7</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>F M S</td>\n",
              "      <td>Burnley</td>\n",
              "      <td>0</td>\n",
              "      <td>0.6615988579578698</td>\n",
              "      <td>0.9640207779593766</td>\n",
              "      <td>0.3211935800500214</td>\n",
              "      <td>-0.661599</td>\n",
              "      <td>-0.649103</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>493</th>\n",
              "      <td>12123</td>\n",
              "      <td>Murillo</td>\n",
              "      <td>14</td>\n",
              "      <td>1243</td>\n",
              "      <td>0</td>\n",
              "      <td>0.774332</td>\n",
              "      <td>1</td>\n",
              "      <td>1.033867</td>\n",
              "      <td>8</td>\n",
              "      <td>5</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>D</td>\n",
              "      <td>Nottingham Forest</td>\n",
              "      <td>0</td>\n",
              "      <td>0.7743317726999521</td>\n",
              "      <td>4.068312864750624</td>\n",
              "      <td>3.109786381945014</td>\n",
              "      <td>-0.774332</td>\n",
              "      <td>-0.033867</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>496</th>\n",
              "      <td>12187</td>\n",
              "      <td>Jordan Clark</td>\n",
              "      <td>5</td>\n",
              "      <td>72</td>\n",
              "      <td>0</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0</td>\n",
              "      <td>0.028226</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>S</td>\n",
              "      <td>Luton</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.028225945308804512</td>\n",
              "      <td>0</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>-0.028226</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>503</th>\n",
              "      <td>12275</td>\n",
              "      <td>Willy Kambwala</td>\n",
              "      <td>2</td>\n",
              "      <td>88</td>\n",
              "      <td>0</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>D S</td>\n",
              "      <td>Manchester United</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.07591637223958969</td>\n",
              "      <td>0.07591637223958969</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>453 rows × 20 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-d437a222-3303-435a-b364-fcc0aa5bf307')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-d437a222-3303-435a-b364-fcc0aa5bf307 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-d437a222-3303-435a-b364-fcc0aa5bf307');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-06c0ce7e-c0ce-4361-98c7-b43427ab813c\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-06c0ce7e-c0ce-4361-98c7-b43427ab813c')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-06c0ce7e-c0ce-4361-98c7-b43427ab813c button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 9
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "!git clone https://github.com/huricane85/FPL-API-Fixture-modeler"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "dU1giLdZir3J",
        "outputId": "31df3d37-0834-4ff2-fdb7-d34f3a4577ef"
      },
      "execution_count": 10,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Cloning into 'FPL-API-Fixture-modeler'...\n",
            "remote: Enumerating objects: 108, done.\u001b[K\n",
            "remote: Counting objects: 100% (108/108), done.\u001b[K\n",
            "remote: Compressing objects: 100% (108/108), done.\u001b[K\n",
            "remote: Total 108 (delta 60), reused 0 (delta 0), pack-reused 0\u001b[K\n",
            "Receiving objects: 100% (108/108), 6.85 MiB | 5.85 MiB/s, done.\n",
            "Resolving deltas: 100% (60/60), done.\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import pandas as pd\n",
        "\n",
        "# read the CSV file from GitHub into a DataFrame\n",
        "url = \"https://raw.githubusercontent.com/ChrisMusson/FPL-ID-Map/main/Master.csv\"\n",
        "df = pd.read_csv(url)\n",
        "\n",
        "# rename the \"22-23\" column to \"id\"\n",
        "df.rename(columns={'22-23': 'id'}, inplace=True)\n",
        "\n",
        "# convert \"id\" and \"understat\" columns to int64 and float64 respectively\n",
        "df['id'] = pd.to_numeric(df['id'], errors='coerce', downcast='integer').astype('Int64')\n",
        "df['understat'] = pd.to_numeric(df['understat'], errors='coerce', downcast='integer').astype('Int64')\n",
        "\n",
        "# filter out rows where \"understat\" is null\n",
        "df = df.dropna(subset=['understat'])\n",
        "\n",
        "# change data type of \"id\" column to float64\n",
        "df['id'] = df['id'].astype('float64')\n",
        "\n",
        "# create a new DataFrame with only the \"understat\" and \"id\" columns\n",
        "new_df = df[['understat', 'id']].dropna(subset=['id']).copy()\n",
        "\n",
        "# display the new DataFrame\n",
        "\n",
        "new_df\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 424
        },
        "id": "WRijWphEVPuN",
        "outputId": "f53af5e5-9569-4a27-b530-9befcf4db1a7"
      },
      "execution_count": 11,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "      understat     id\n",
              "37         7821  760.0\n",
              "38         1697  627.0\n",
              "55         2371  326.0\n",
              "62          489  274.0\n",
              "77         8158  502.0\n",
              "...         ...    ...\n",
              "1933      11301  695.0\n",
              "1934      11146  632.0\n",
              "1935      11189  646.0\n",
              "1936      11302  696.0\n",
              "1937      11195  650.0\n",
              "\n",
              "[763 rows x 2 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-9a799a7a-24b7-4ebe-83de-1a7791470ab4\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>understat</th>\n",
              "      <th>id</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>37</th>\n",
              "      <td>7821</td>\n",
              "      <td>760.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>38</th>\n",
              "      <td>1697</td>\n",
              "      <td>627.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>55</th>\n",
              "      <td>2371</td>\n",
              "      <td>326.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>62</th>\n",
              "      <td>489</td>\n",
              "      <td>274.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>77</th>\n",
              "      <td>8158</td>\n",
              "      <td>502.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1933</th>\n",
              "      <td>11301</td>\n",
              "      <td>695.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1934</th>\n",
              "      <td>11146</td>\n",
              "      <td>632.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1935</th>\n",
              "      <td>11189</td>\n",
              "      <td>646.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1936</th>\n",
              "      <td>11302</td>\n",
              "      <td>696.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1937</th>\n",
              "      <td>11195</td>\n",
              "      <td>650.0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>763 rows × 2 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-9a799a7a-24b7-4ebe-83de-1a7791470ab4')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-9a799a7a-24b7-4ebe-83de-1a7791470ab4 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-9a799a7a-24b7-4ebe-83de-1a7791470ab4');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-a564170b-bfdd-4859-8fd8-02df11953fa1\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-a564170b-bfdd-4859-8fd8-02df11953fa1')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-a564170b-bfdd-4859-8fd8-02df11953fa1 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 11
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "new_df"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 424
        },
        "id": "NhQ4dZKdUv36",
        "outputId": "cb070b6b-2512-4acf-a4a7-702bc0d20d08"
      },
      "execution_count": 12,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "      understat     id\n",
              "37         7821  760.0\n",
              "38         1697  627.0\n",
              "55         2371  326.0\n",
              "62          489  274.0\n",
              "77         8158  502.0\n",
              "...         ...    ...\n",
              "1933      11301  695.0\n",
              "1934      11146  632.0\n",
              "1935      11189  646.0\n",
              "1936      11302  696.0\n",
              "1937      11195  650.0\n",
              "\n",
              "[763 rows x 2 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-8ee4db90-3193-48bd-8254-645d05540a78\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>understat</th>\n",
              "      <th>id</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>37</th>\n",
              "      <td>7821</td>\n",
              "      <td>760.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>38</th>\n",
              "      <td>1697</td>\n",
              "      <td>627.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>55</th>\n",
              "      <td>2371</td>\n",
              "      <td>326.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>62</th>\n",
              "      <td>489</td>\n",
              "      <td>274.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>77</th>\n",
              "      <td>8158</td>\n",
              "      <td>502.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1933</th>\n",
              "      <td>11301</td>\n",
              "      <td>695.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1934</th>\n",
              "      <td>11146</td>\n",
              "      <td>632.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1935</th>\n",
              "      <td>11189</td>\n",
              "      <td>646.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1936</th>\n",
              "      <td>11302</td>\n",
              "      <td>696.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1937</th>\n",
              "      <td>11195</td>\n",
              "      <td>650.0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>763 rows × 2 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-8ee4db90-3193-48bd-8254-645d05540a78')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-8ee4db90-3193-48bd-8254-645d05540a78 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-8ee4db90-3193-48bd-8254-645d05540a78');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-1d81acdb-da33-4397-b488-e2a461557f76\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-1d81acdb-da33-4397-b488-e2a461557f76')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-1d81acdb-da33-4397-b488-e2a461557f76 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 12
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "one_game_df[\"understat\"] = one_game_df[\"understat\"].astype(str).astype(int)\n",
        "understatid2 = new_df\n",
        "understatwithfplid = pd.merge(one_game_df,\n",
        "                     understatid2,\n",
        "                     on ='understat',\n",
        "                     how ='left')\n",
        "understatwithfplid"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 583
        },
        "id": "KmDbXEnfi2v1",
        "outputId": "6c9e769b-7b5a-4b31-bae9-c62621ff7cc6"
      },
      "execution_count": 13,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "     understat       player_name games  time  goals_1wks    xG_1wks  \\\n",
              "0         1250     Mohamed Salah    20  1768          14  13.610326   \n",
              "1         8260    Erling Haaland    15  1305          14  16.727500   \n",
              "2          453     Son Heung-Min    20  1739          12   7.474957   \n",
              "3         1679   Dominic Solanke    19  1708          12  12.378115   \n",
              "4         1776      Jarrod Bowen    19  1710          11   8.295725   \n",
              "..         ...               ...   ...   ...         ...        ...   \n",
              "448      12032  Djordje Petrovic     5   362           0   0.000000   \n",
              "449      12094       Mike Trésor    13   372           0   0.661599   \n",
              "450      12123           Murillo    14  1243           0   0.774332   \n",
              "451      12187      Jordan Clark     5    72           0   0.000000   \n",
              "452      12275    Willy Kambwala     2    88           0   0.000000   \n",
              "\n",
              "     assists_1wks   xA_1wks shots_1wks key_passes_1wks  ... red_cards  \\\n",
              "0               8  9.578479         65              47  ...         0   \n",
              "1               4  3.247231         58              16  ...         0   \n",
              "2               5  6.843131         52              37  ...         0   \n",
              "3               1  0.997695         66              14  ...         0   \n",
              "4               2  3.144163         47              14  ...         0   \n",
              "..            ...       ...        ...             ...  ...       ...   \n",
              "448             0  0.000000          0               0  ...         0   \n",
              "449             0  0.649103          5               7  ...         0   \n",
              "450             1  1.033867          8               5  ...         0   \n",
              "451             0  0.028226          0               1  ...         0   \n",
              "452             0  0.000000          0               0  ...         0   \n",
              "\n",
              "    position         team_title npg_1wks           npxG_1wks  \\\n",
              "0          F          Liverpool       10   9.043387070298195   \n",
              "1          F    Manchester City       11   13.68282476067543   \n",
              "2        F M          Tottenham       11   6.713788405060768   \n",
              "3          F        Bournemouth       11   11.61694597452879   \n",
              "4        F M           West Ham       11    8.29572493582964   \n",
              "..       ...                ...      ...                 ...   \n",
              "448     GK S            Chelsea        0                   0   \n",
              "449    F M S            Burnley        0  0.6615988579578698   \n",
              "450        D  Nottingham Forest        0  0.7743317726999521   \n",
              "451        S              Luton        0                   0   \n",
              "452      D S  Manchester United        0                   0   \n",
              "\n",
              "                  xGChain            xGBuildup xgdifference  xAdifference  \\\n",
              "0       19.68034301698208    5.720102474093437     0.389674     -1.578479   \n",
              "1      16.214465029537678   1.3705047406256199    -2.727500      0.752769   \n",
              "2      16.887082293629646    6.178518561646342     4.525043     -1.843131   \n",
              "3      12.262300044298172   1.8974752612411976    -0.378115      0.002305   \n",
              "4       9.910744827240705   1.9265567287802696     2.704275     -1.144163   \n",
              "..                    ...                  ...          ...           ...   \n",
              "448    0.1869112327694893   0.1869112327694893     0.000000      0.000000   \n",
              "449    0.9640207779593766   0.3211935800500214    -0.661599     -0.649103   \n",
              "450     4.068312864750624    3.109786381945014    -0.774332     -0.033867   \n",
              "451  0.028225945308804512                    0     0.000000     -0.028226   \n",
              "452   0.07591637223958969  0.07591637223958969     0.000000      0.000000   \n",
              "\n",
              "        id  \n",
              "0    283.0  \n",
              "1    318.0  \n",
              "2    428.0  \n",
              "3     66.0  \n",
              "4    465.0  \n",
              "..     ...  \n",
              "448    NaN  \n",
              "449    NaN  \n",
              "450    NaN  \n",
              "451    NaN  \n",
              "452    NaN  \n",
              "\n",
              "[453 rows x 21 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-9cd9afa4-e368-470a-9b17-6bf698eb67ff\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>understat</th>\n",
              "      <th>player_name</th>\n",
              "      <th>games</th>\n",
              "      <th>time</th>\n",
              "      <th>goals_1wks</th>\n",
              "      <th>xG_1wks</th>\n",
              "      <th>assists_1wks</th>\n",
              "      <th>xA_1wks</th>\n",
              "      <th>shots_1wks</th>\n",
              "      <th>key_passes_1wks</th>\n",
              "      <th>...</th>\n",
              "      <th>red_cards</th>\n",
              "      <th>position</th>\n",
              "      <th>team_title</th>\n",
              "      <th>npg_1wks</th>\n",
              "      <th>npxG_1wks</th>\n",
              "      <th>xGChain</th>\n",
              "      <th>xGBuildup</th>\n",
              "      <th>xgdifference</th>\n",
              "      <th>xAdifference</th>\n",
              "      <th>id</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>1250</td>\n",
              "      <td>Mohamed Salah</td>\n",
              "      <td>20</td>\n",
              "      <td>1768</td>\n",
              "      <td>14</td>\n",
              "      <td>13.610326</td>\n",
              "      <td>8</td>\n",
              "      <td>9.578479</td>\n",
              "      <td>65</td>\n",
              "      <td>47</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>F</td>\n",
              "      <td>Liverpool</td>\n",
              "      <td>10</td>\n",
              "      <td>9.043387070298195</td>\n",
              "      <td>19.68034301698208</td>\n",
              "      <td>5.720102474093437</td>\n",
              "      <td>0.389674</td>\n",
              "      <td>-1.578479</td>\n",
              "      <td>283.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>8260</td>\n",
              "      <td>Erling Haaland</td>\n",
              "      <td>15</td>\n",
              "      <td>1305</td>\n",
              "      <td>14</td>\n",
              "      <td>16.727500</td>\n",
              "      <td>4</td>\n",
              "      <td>3.247231</td>\n",
              "      <td>58</td>\n",
              "      <td>16</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>F</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>11</td>\n",
              "      <td>13.68282476067543</td>\n",
              "      <td>16.214465029537678</td>\n",
              "      <td>1.3705047406256199</td>\n",
              "      <td>-2.727500</td>\n",
              "      <td>0.752769</td>\n",
              "      <td>318.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>453</td>\n",
              "      <td>Son Heung-Min</td>\n",
              "      <td>20</td>\n",
              "      <td>1739</td>\n",
              "      <td>12</td>\n",
              "      <td>7.474957</td>\n",
              "      <td>5</td>\n",
              "      <td>6.843131</td>\n",
              "      <td>52</td>\n",
              "      <td>37</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>F M</td>\n",
              "      <td>Tottenham</td>\n",
              "      <td>11</td>\n",
              "      <td>6.713788405060768</td>\n",
              "      <td>16.887082293629646</td>\n",
              "      <td>6.178518561646342</td>\n",
              "      <td>4.525043</td>\n",
              "      <td>-1.843131</td>\n",
              "      <td>428.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>1679</td>\n",
              "      <td>Dominic Solanke</td>\n",
              "      <td>19</td>\n",
              "      <td>1708</td>\n",
              "      <td>12</td>\n",
              "      <td>12.378115</td>\n",
              "      <td>1</td>\n",
              "      <td>0.997695</td>\n",
              "      <td>66</td>\n",
              "      <td>14</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>F</td>\n",
              "      <td>Bournemouth</td>\n",
              "      <td>11</td>\n",
              "      <td>11.61694597452879</td>\n",
              "      <td>12.262300044298172</td>\n",
              "      <td>1.8974752612411976</td>\n",
              "      <td>-0.378115</td>\n",
              "      <td>0.002305</td>\n",
              "      <td>66.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>1776</td>\n",
              "      <td>Jarrod Bowen</td>\n",
              "      <td>19</td>\n",
              "      <td>1710</td>\n",
              "      <td>11</td>\n",
              "      <td>8.295725</td>\n",
              "      <td>2</td>\n",
              "      <td>3.144163</td>\n",
              "      <td>47</td>\n",
              "      <td>14</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>F M</td>\n",
              "      <td>West Ham</td>\n",
              "      <td>11</td>\n",
              "      <td>8.29572493582964</td>\n",
              "      <td>9.910744827240705</td>\n",
              "      <td>1.9265567287802696</td>\n",
              "      <td>2.704275</td>\n",
              "      <td>-1.144163</td>\n",
              "      <td>465.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>448</th>\n",
              "      <td>12032</td>\n",
              "      <td>Djordje Petrovic</td>\n",
              "      <td>5</td>\n",
              "      <td>362</td>\n",
              "      <td>0</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>GK S</td>\n",
              "      <td>Chelsea</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.1869112327694893</td>\n",
              "      <td>0.1869112327694893</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>449</th>\n",
              "      <td>12094</td>\n",
              "      <td>Mike Trésor</td>\n",
              "      <td>13</td>\n",
              "      <td>372</td>\n",
              "      <td>0</td>\n",
              "      <td>0.661599</td>\n",
              "      <td>0</td>\n",
              "      <td>0.649103</td>\n",
              "      <td>5</td>\n",
              "      <td>7</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>F M S</td>\n",
              "      <td>Burnley</td>\n",
              "      <td>0</td>\n",
              "      <td>0.6615988579578698</td>\n",
              "      <td>0.9640207779593766</td>\n",
              "      <td>0.3211935800500214</td>\n",
              "      <td>-0.661599</td>\n",
              "      <td>-0.649103</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>450</th>\n",
              "      <td>12123</td>\n",
              "      <td>Murillo</td>\n",
              "      <td>14</td>\n",
              "      <td>1243</td>\n",
              "      <td>0</td>\n",
              "      <td>0.774332</td>\n",
              "      <td>1</td>\n",
              "      <td>1.033867</td>\n",
              "      <td>8</td>\n",
              "      <td>5</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>D</td>\n",
              "      <td>Nottingham Forest</td>\n",
              "      <td>0</td>\n",
              "      <td>0.7743317726999521</td>\n",
              "      <td>4.068312864750624</td>\n",
              "      <td>3.109786381945014</td>\n",
              "      <td>-0.774332</td>\n",
              "      <td>-0.033867</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>451</th>\n",
              "      <td>12187</td>\n",
              "      <td>Jordan Clark</td>\n",
              "      <td>5</td>\n",
              "      <td>72</td>\n",
              "      <td>0</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0</td>\n",
              "      <td>0.028226</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>S</td>\n",
              "      <td>Luton</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.028225945308804512</td>\n",
              "      <td>0</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>-0.028226</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>452</th>\n",
              "      <td>12275</td>\n",
              "      <td>Willy Kambwala</td>\n",
              "      <td>2</td>\n",
              "      <td>88</td>\n",
              "      <td>0</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>D S</td>\n",
              "      <td>Manchester United</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.07591637223958969</td>\n",
              "      <td>0.07591637223958969</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>453 rows × 21 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-9cd9afa4-e368-470a-9b17-6bf698eb67ff')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-9cd9afa4-e368-470a-9b17-6bf698eb67ff button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-9cd9afa4-e368-470a-9b17-6bf698eb67ff');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-d15a5fe2-babb-4535-8ceb-e5603bb668d3\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-d15a5fe2-babb-4535-8ceb-e5603bb668d3')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-d15a5fe2-babb-4535-8ceb-e5603bb668d3 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 13
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "from urllib.request import urlopen\n",
        "from json import loads\n",
        "from csv import writer\n",
        "\n",
        "\n",
        "def team_converter(team_id):\n",
        "    '''Converts a team's ID to their actual name'''\n",
        "    team_map = {\n",
        "        1: \"Arsenal\",\n",
        "        2: \"Aston Villa\",\n",
        "        3: \"Bournemouth\",\n",
        "        4: \"Brentford\",\n",
        "        5: \"Brighton\",\n",
        "        6: \"Burnley\",\n",
        "        7: \"Chelsea\",\n",
        "        8: \"Crystal Palace\",\n",
        "        9: \"Everton\",\n",
        "        10: \"Fulham\",\n",
        "        11: \"Liverpool\",\n",
        "        12: \"Luton Town\",\n",
        "        13: \"Manchester City\",\n",
        "        14: \"Manchester United\",\n",
        "        15: \"Newcastle United\",\n",
        "        16: \"Nottingham Forest\",\n",
        "        17: \"Sheffield United\",\n",
        "        18: \"Tottenham\",\n",
        "        19: \"West Ham\",\n",
        "        20: \"Wolverhampton Wanderers\",\n",
        "        None: None\n",
        "    }\n",
        "    return team_map[team_id]\n",
        "\n",
        "\n",
        "def position_converter(position):\n",
        "    '''Converts a player's element_type to their actual position'''\n",
        "    position_map = {\n",
        "        1: \"Goalkeeper\",\n",
        "        2: \"Defender\",\n",
        "        3: \"Midfielder\",\n",
        "        4: \"Forward\"\n",
        "    }\n",
        "    return position_map[position]\n",
        "\n",
        "\n",
        "def main():\n",
        "    all_data = loads(urlopen(\"https://fantasy.premierleague.com/api/fixtures/\").read())\n",
        "    fixtures = all_data\n",
        "\n",
        "    important_data = [\n",
        "        [\n",
        "            x[\"event\"],\n",
        "            team_converter(x[\"team_h\"]),\n",
        "            team_converter(x[\"team_a\"]),\n",
        "            x[\"kickoff_time\"],\n",
        "\n",
        "        ]\n",
        "        for x in fixtures\n",
        "    ]\n",
        "\n",
        "    with open(\"/fixtures_data.csv\", \"w\", encoding=\"utf-8\", newline=\"\") as out:\n",
        "        headers = [\"event\",\"team_h\",\"team_a\",\"kickoff_time\"]\n",
        "        w = writer(out)\n",
        "        w.writerow(headers)\n",
        "        w.writerows(important_data)\n",
        "\n",
        "if __name__ == \"__main__\":\n",
        "    main()"
      ],
      "metadata": {
        "id": "Y_cV1kyak7XX"
      },
      "execution_count": 14,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "import pandas as pd\n",
        "import scipy\n",
        "import numpy as np\n",
        "from numpy import random\n",
        "import matplotlib.pyplot as plt\n",
        "import seaborn as sns\n",
        "import matplotlib"
      ],
      "metadata": {
        "id": "DXejj-4jjUI-"
      },
      "execution_count": 15,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "from urllib.request import urlopen\n",
        "from json import loads\n",
        "from csv import writer\n",
        "\n",
        "\n",
        "def team_converter(team_id):\n",
        "    '''Converts a team's ID to their actual name'''\n",
        "    team_map = {\n",
        "        1: \"Arsenal\",\n",
        "        2: \"Aston Villa\",\n",
        "        3: \"Bournemouth\",\n",
        "        4: \"Brentford\",\n",
        "        5: \"Brighton\",\n",
        "        6: \"Burnley\",\n",
        "        7: \"Chelsea\",\n",
        "        8: \"Crystal Palace\",\n",
        "        9: \"Everton\",\n",
        "        10: \"Fulham\",\n",
        "        11: \"Liverpool\",\n",
        "        12: \"Luton Town\",\n",
        "        13: \"Manchester City\",\n",
        "        14: \"Manchester United\",\n",
        "        15: \"Newcastle United\",\n",
        "        16: \"Nottingham Forest\",\n",
        "        17: \"Sheffield United\",\n",
        "        18: \"Tottenham\",\n",
        "        19: \"West Ham\",\n",
        "        20: \"Wolverhampton Wanderers\",\n",
        "        None: None\n",
        "    }\n",
        "    return team_map[team_id]\n",
        "\n",
        "\n",
        "def position_converter(position):\n",
        "    '''Converts a player's element_type to their actual position'''\n",
        "    position_map = {\n",
        "        1: \"Goalkeeper\",\n",
        "        2: \"Defender\",\n",
        "        3: \"Midfielder\",\n",
        "        4: \"Forward\"\n",
        "    }\n",
        "    return position_map[position]\n",
        "\n",
        "\n",
        "def main():\n",
        "    all_data = loads(urlopen(\"https://fantasy.premierleague.com/api/bootstrap-static/\").read())\n",
        "    players = all_data[\"elements\"]\n",
        "\n",
        "    important_data = [\n",
        "        [\n",
        "            x[\"id\"],\n",
        "            team_converter(x[\"team\"]),\n",
        "            position_converter(x[\"element_type\"])[0],\n",
        "            x[\"web_name\"],\n",
        "            x[\"now_cost\"] / 10,\n",
        "            x[\"selected_by_percent\"],\n",
        "            float(x[\"expected_goals\"]),  # Convert to float\n",
        "            float(x[\"expected_assists\"]),  # Convert to float\n",
        "            x[\"goals_scored\"],\n",
        "            x[\"assists\"],\n",
        "            x[\"bps\"],\n",
        "            x[\"ict_index\"],\n",
        "            x[\"total_points\"],\n",
        "            x[\"points_per_game\"],\n",
        "            x[\"minutes\"]\n",
        "        ]\n",
        "        for x in players\n",
        "    ]\n",
        "\n",
        "    with open(\"players_data.csv\", \"w\", encoding=\"utf-8\", newline=\"\") as out:\n",
        "        headers = [\"id\",\"team\", \"pos\", \"name\", \"cost\", \"selected_by_percent\", \"expected_goals\", \"expected_assists\", \"goals_scored\", \"assists\", \"bps\", \"ict_index\",\"points\", \"points_per_game\", \"minutes\"]\n",
        "        w = writer(out)\n",
        "        w.writerow(headers)\n",
        "        w.writerows(important_data)\n",
        "\n",
        "if __name__ == \"__main__\":\n",
        "    main()"
      ],
      "metadata": {
        "id": "CKZZPD0xQGLu"
      },
      "execution_count": 16,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "import pandas as pd\n",
        "playerdata = pd.read_csv(\"/content/players_data.csv\")\n",
        "master = playerdata\n",
        "#master = master.dropna()\n",
        "master['apppoint'] = 2\n",
        "master['assistvalue'] = 3\n",
        "#master['BPS90'] = master.bps/(master.minutes/90)\n",
        "master"
      ],
      "metadata": {
        "id": "VOx8tP0bjttO",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 424
        },
        "outputId": "d12f1431-e01a-43dd-bb4d-5243917aa1a4"
      },
      "execution_count": 17,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "      id                     team pos          name  cost  \\\n",
              "0      1                  Arsenal   F       Balogun   4.4   \n",
              "1      2                  Arsenal   D        Cédric   3.9   \n",
              "2      3                  Arsenal   M      M.Elneny   4.4   \n",
              "3      4                  Arsenal   M  Fábio Vieira   5.4   \n",
              "4      5                  Arsenal   D       Gabriel   5.0   \n",
              "..   ...                      ...  ..           ...   ...   \n",
              "768  749  Wolverhampton Wanderers   M   Whittingham   4.5   \n",
              "769  750  Wolverhampton Wanderers   M       Chirewa   4.5   \n",
              "770  751  Wolverhampton Wanderers   D        Hubner   4.0   \n",
              "771  769  Wolverhampton Wanderers   M       Hesketh   4.5   \n",
              "772  770  Wolverhampton Wanderers   M       Barnett   4.5   \n",
              "\n",
              "     selected_by_percent  expected_goals  expected_assists  goals_scored  \\\n",
              "0                    0.2            0.00              0.00             0   \n",
              "1                    0.4            0.00              0.00             0   \n",
              "2                    0.1            0.00              0.00             0   \n",
              "3                    0.1            1.20              0.35             1   \n",
              "4                   17.5            1.12              0.34             1   \n",
              "..                   ...             ...               ...           ...   \n",
              "768                  0.0            0.00              0.00             0   \n",
              "769                  0.0            0.00              0.00             0   \n",
              "770                  0.0            0.00              0.00             0   \n",
              "771                  0.0            0.00              0.00             0   \n",
              "772                  0.0            0.00              0.00             0   \n",
              "\n",
              "     assists  bps  ict_index  points  points_per_game  minutes  apppoint  \\\n",
              "0          0    0        0.0       0              0.0        0         2   \n",
              "1          0    0        0.0       0              0.0        0         2   \n",
              "2          1   12        0.4       4              4.0        1         2   \n",
              "3          3   62       21.9      21              2.6      236         2   \n",
              "4          0  296       51.0      58              3.2     1464         2   \n",
              "..       ...  ...        ...     ...              ...      ...       ...   \n",
              "768        0    0        0.0       0              0.0        0         2   \n",
              "769        0    0        0.0       0              0.0        0         2   \n",
              "770        0    0        0.0       0              0.0        0         2   \n",
              "771        0    0        0.0       0              0.0        0         2   \n",
              "772        0    0        0.0       0              0.0        0         2   \n",
              "\n",
              "     assistvalue  \n",
              "0              3  \n",
              "1              3  \n",
              "2              3  \n",
              "3              3  \n",
              "4              3  \n",
              "..           ...  \n",
              "768            3  \n",
              "769            3  \n",
              "770            3  \n",
              "771            3  \n",
              "772            3  \n",
              "\n",
              "[773 rows x 17 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-346ea53b-d79d-46cc-83e7-0c33d5b02e98\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>team</th>\n",
              "      <th>pos</th>\n",
              "      <th>name</th>\n",
              "      <th>cost</th>\n",
              "      <th>selected_by_percent</th>\n",
              "      <th>expected_goals</th>\n",
              "      <th>expected_assists</th>\n",
              "      <th>goals_scored</th>\n",
              "      <th>assists</th>\n",
              "      <th>bps</th>\n",
              "      <th>ict_index</th>\n",
              "      <th>points</th>\n",
              "      <th>points_per_game</th>\n",
              "      <th>minutes</th>\n",
              "      <th>apppoint</th>\n",
              "      <th>assistvalue</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>1</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>F</td>\n",
              "      <td>Balogun</td>\n",
              "      <td>4.4</td>\n",
              "      <td>0.2</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>2</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>D</td>\n",
              "      <td>Cédric</td>\n",
              "      <td>3.9</td>\n",
              "      <td>0.4</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>3</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>M</td>\n",
              "      <td>M.Elneny</td>\n",
              "      <td>4.4</td>\n",
              "      <td>0.1</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>12</td>\n",
              "      <td>0.4</td>\n",
              "      <td>4</td>\n",
              "      <td>4.0</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>4</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>M</td>\n",
              "      <td>Fábio Vieira</td>\n",
              "      <td>5.4</td>\n",
              "      <td>0.1</td>\n",
              "      <td>1.20</td>\n",
              "      <td>0.35</td>\n",
              "      <td>1</td>\n",
              "      <td>3</td>\n",
              "      <td>62</td>\n",
              "      <td>21.9</td>\n",
              "      <td>21</td>\n",
              "      <td>2.6</td>\n",
              "      <td>236</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>5</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>D</td>\n",
              "      <td>Gabriel</td>\n",
              "      <td>5.0</td>\n",
              "      <td>17.5</td>\n",
              "      <td>1.12</td>\n",
              "      <td>0.34</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>296</td>\n",
              "      <td>51.0</td>\n",
              "      <td>58</td>\n",
              "      <td>3.2</td>\n",
              "      <td>1464</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>768</th>\n",
              "      <td>749</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>M</td>\n",
              "      <td>Whittingham</td>\n",
              "      <td>4.5</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>769</th>\n",
              "      <td>750</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>M</td>\n",
              "      <td>Chirewa</td>\n",
              "      <td>4.5</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>770</th>\n",
              "      <td>751</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>D</td>\n",
              "      <td>Hubner</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>771</th>\n",
              "      <td>769</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>M</td>\n",
              "      <td>Hesketh</td>\n",
              "      <td>4.5</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>772</th>\n",
              "      <td>770</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>M</td>\n",
              "      <td>Barnett</td>\n",
              "      <td>4.5</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>773 rows × 17 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-346ea53b-d79d-46cc-83e7-0c33d5b02e98')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-346ea53b-d79d-46cc-83e7-0c33d5b02e98 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-346ea53b-d79d-46cc-83e7-0c33d5b02e98');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-4b2cf139-e1c1-47e5-8140-560aceab206a\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-4b2cf139-e1c1-47e5-8140-560aceab206a')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-4b2cf139-e1c1-47e5-8140-560aceab206a button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 17
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import pandas as pd\n",
        "gwfixtures = pd.read_csv(\"/fixtures_data.csv\")\n",
        "import requests\n",
        "import pandas as pd\n",
        "url = 'https://projects.fivethirtyeight.com/soccer-api/club/spi_global_rankings.csv'\n",
        "r = requests.get(url)\n",
        "open('temp.csv', 'wb').write(r.content)\n",
        "spi = pd.read_csv('temp.csv')\n",
        "spi['team_h'] = spi['name']\n",
        "spi['team_a'] = spi['name']\n",
        "spi= spi.replace('Newcastle', 'Newcastle United')\n",
        "spi= spi.replace('Wolverhampton','Wolverhampton Wanderers')\n",
        "spi= spi.replace('Tottenham Hotspur','Tottenham')\n",
        "spi= spi.replace('Leeds United','Leeds')\n",
        "spi= spi.replace('Leicester City','Leicester')\n",
        "spi= spi.replace('West Ham United','West Ham')\n",
        "spi= spi.replace('Brighton and Hove Albion','Brighton')\n",
        "spi= spi.replace('Norwich City','Norwich')\n",
        "spi= spi.replace('AFC Bournemouth','Bournemouth')\n",
        "Left_join = pd.merge(gwfixtures,\n",
        "                     spi,\n",
        "                     on ='team_h',\n",
        "                     how ='left')\n",
        "homespi = Left_join.drop(columns=[\n",
        " 'rank',\n",
        " 'prev_rank',\n",
        " 'league',\n",
        "  'off',\n",
        " 'def',\n",
        " 'name',\n",
        " 'team_a_y',])\n",
        "homespi.rename(columns = {'team_a_x':'team_a', 'spi':'Home SPI'}, inplace = True)\n",
        "away_join = pd.merge(homespi,\n",
        "                     spi,\n",
        "                     on ='team_a',\n",
        "                     how ='left')\n",
        "homesawayspi = away_join.drop(columns=[\n",
        " 'rank',\n",
        " 'prev_rank',\n",
        " 'name',\n",
        " 'league',\n",
        " 'off',\n",
        " 'def',\n",
        " 'team_h_y'])\n",
        "homesawayspi.rename(columns = {'team_h_x':'team_h', 'spi':'Away SPI'}, inplace = True)\n",
        "homesawayspi['Event'] = homesawayspi['event'].astype(str)\n",
        "gw21 = homesawayspi.query('Event==\"21.0\"')\n",
        "PLSPI = spi.query('league==\"Barclays Premier League\"')\n",
        "PLSPI['League Average']  = PLSPI[\"spi\"].mean()\n",
        "laverage = PLSPI[\"spi\"].mean()\n",
        "PLSPI['League Average'].astype(int)\n",
        "gw21['League_Average']  = laverage\n",
        "gw21.rename(columns = {'Home SPI':'HomeSPI', 'Away SPI':'AwaySPI'}, inplace = True)\n",
        "gw21['home_difference'] = gw21.HomeSPI - gw21.League_Average\n",
        "gw21['away_difference'] = gw21.AwaySPI - gw21.League_Average\n",
        "gw21['home_adjustment'] = (gw21.home_difference + gw21.League_Average)/gw21.League_Average\n",
        "gw21['away_adjustment'] = (gw21.away_difference + gw21.League_Average)/gw21.League_Average\n",
        "gw21adjustments = gw21[['team_h', 'home_adjustment']].append(gw21[['team_a','away_adjustment']].set_axis(['team_h', 'home_adjustment'], axis=1)).reset_index(drop=True)\n",
        "gw21adjustments.rename(columns = {'team_h':'team'}, inplace = True)\n",
        "gw21adjustments\n"
      ],
      "metadata": {
        "id": "0oqPsFQJjyR0",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "outputId": "11f04b8e-08a9-4c85-da04-01dbfe19adaa"
      },
      "execution_count": 19,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "<ipython-input-19-0f2c973a35d1>:49: SettingWithCopyWarning: \n",
            "A value is trying to be set on a copy of a slice from a DataFrame.\n",
            "Try using .loc[row_indexer,col_indexer] = value instead\n",
            "\n",
            "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
            "  PLSPI['League Average']  = PLSPI[\"spi\"].mean()\n",
            "<ipython-input-19-0f2c973a35d1>:52: SettingWithCopyWarning: \n",
            "A value is trying to be set on a copy of a slice from a DataFrame.\n",
            "Try using .loc[row_indexer,col_indexer] = value instead\n",
            "\n",
            "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
            "  gw21['League_Average']  = laverage\n",
            "<ipython-input-19-0f2c973a35d1>:53: SettingWithCopyWarning: \n",
            "A value is trying to be set on a copy of a slice from a DataFrame\n",
            "\n",
            "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
            "  gw21.rename(columns = {'Home SPI':'HomeSPI', 'Away SPI':'AwaySPI'}, inplace = True)\n",
            "<ipython-input-19-0f2c973a35d1>:54: SettingWithCopyWarning: \n",
            "A value is trying to be set on a copy of a slice from a DataFrame.\n",
            "Try using .loc[row_indexer,col_indexer] = value instead\n",
            "\n",
            "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
            "  gw21['home_difference'] = gw21.HomeSPI - gw21.League_Average\n",
            "<ipython-input-19-0f2c973a35d1>:55: SettingWithCopyWarning: \n",
            "A value is trying to be set on a copy of a slice from a DataFrame.\n",
            "Try using .loc[row_indexer,col_indexer] = value instead\n",
            "\n",
            "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
            "  gw21['away_difference'] = gw21.AwaySPI - gw21.League_Average\n",
            "<ipython-input-19-0f2c973a35d1>:56: SettingWithCopyWarning: \n",
            "A value is trying to be set on a copy of a slice from a DataFrame.\n",
            "Try using .loc[row_indexer,col_indexer] = value instead\n",
            "\n",
            "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
            "  gw21['home_adjustment'] = (gw21.home_difference + gw21.League_Average)/gw21.League_Average\n",
            "<ipython-input-19-0f2c973a35d1>:57: SettingWithCopyWarning: \n",
            "A value is trying to be set on a copy of a slice from a DataFrame.\n",
            "Try using .loc[row_indexer,col_indexer] = value instead\n",
            "\n",
            "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
            "  gw21['away_adjustment'] = (gw21.away_difference + gw21.League_Average)/gw21.League_Average\n",
            "<ipython-input-19-0f2c973a35d1>:58: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  gw21adjustments = gw21[['team_h', 'home_adjustment']].append(gw21[['team_a','away_adjustment']].set_axis(['team_h', 'home_adjustment'], axis=1)).reset_index(drop=True)\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                       team  home_adjustment\n",
              "0                   Chelsea         1.053063\n",
              "1          Newcastle United         1.163122\n",
              "2                   Everton         0.884223\n",
              "3         Manchester United         1.098921\n",
              "4                   Burnley         0.874634\n",
              "5                   Arsenal         1.166179\n",
              "6                 Brentford         1.071962\n",
              "7          Sheffield United         0.786115\n",
              "8               Bournemouth         0.827943\n",
              "9                  Brighton         1.123934\n",
              "10                   Fulham         0.948007\n",
              "11          Manchester City         1.278461\n",
              "12              Aston Villa         1.101978\n",
              "13                Tottenham         1.002480\n",
              "14               Luton Town         0.770968\n",
              "15           Crystal Palace         1.020824\n",
              "16        Nottingham Forest         0.780000\n",
              "17                 West Ham         0.988306\n",
              "18                Liverpool         1.166318\n",
              "19  Wolverhampton Wanderers         0.820717"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-2f5f1aac-448d-487a-9715-a8e4936eb45a\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>team</th>\n",
              "      <th>home_adjustment</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>Chelsea</td>\n",
              "      <td>1.053063</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Newcastle United</td>\n",
              "      <td>1.163122</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>Everton</td>\n",
              "      <td>0.884223</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>Manchester United</td>\n",
              "      <td>1.098921</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>Burnley</td>\n",
              "      <td>0.874634</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>Arsenal</td>\n",
              "      <td>1.166179</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>Brentford</td>\n",
              "      <td>1.071962</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>Sheffield United</td>\n",
              "      <td>0.786115</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>Bournemouth</td>\n",
              "      <td>0.827943</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>Brighton</td>\n",
              "      <td>1.123934</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10</th>\n",
              "      <td>Fulham</td>\n",
              "      <td>0.948007</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>11</th>\n",
              "      <td>Manchester City</td>\n",
              "      <td>1.278461</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>12</th>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>1.101978</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>13</th>\n",
              "      <td>Tottenham</td>\n",
              "      <td>1.002480</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>14</th>\n",
              "      <td>Luton Town</td>\n",
              "      <td>0.770968</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>15</th>\n",
              "      <td>Crystal Palace</td>\n",
              "      <td>1.020824</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>16</th>\n",
              "      <td>Nottingham Forest</td>\n",
              "      <td>0.780000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>17</th>\n",
              "      <td>West Ham</td>\n",
              "      <td>0.988306</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>18</th>\n",
              "      <td>Liverpool</td>\n",
              "      <td>1.166318</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>19</th>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>0.820717</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-2f5f1aac-448d-487a-9715-a8e4936eb45a')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-2f5f1aac-448d-487a-9715-a8e4936eb45a button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-2f5f1aac-448d-487a-9715-a8e4936eb45a');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-186ae04b-9fe7-4ea5-8470-96b23c3d0a6a\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-186ae04b-9fe7-4ea5-8470-96b23c3d0a6a')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-186ae04b-9fe7-4ea5-8470-96b23c3d0a6a button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 19
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "rawdf = pd.merge(master,\n",
        "                     gw21adjustments,\n",
        "                     on ='team',\n",
        "                     how ='left')\n",
        "rawfwd = rawdf.query('pos==\"F\"')\n",
        "rawfwd['xP'] = ((rawfwd.expected_goals * 4/20)+(rawfwd.expected_assists * 3/20) + (rawfwd.apppoint)) * rawfwd.home_adjustment\n",
        "rawfwd = rawfwd.drop(columns=[\n",
        " 'expected_goals',\n",
        " 'team',\n",
        " 'expected_assists',\n",
        " 'apppoint',\n",
        " 'assistvalue',\n",
        "'home_adjustment'])\n",
        "rawmd = rawdf.query('pos==\"M\"')\n",
        "rawmd['xP'] = ((rawmd.expected_goals * 5/20)+(rawmd.expected_assists * 3/20) + (rawmd.apppoint)) * rawmd.home_adjustment\n",
        "rawmd = rawmd.drop(columns=[\n",
        " 'expected_goals',\n",
        " 'team',\n",
        " 'expected_assists',\n",
        " 'apppoint',\n",
        " 'assistvalue',\n",
        "'home_adjustment'])\n",
        "fbref = pd.read_html('https://fbref.com/en/comps/9/Premier-League-Stats')\n",
        "epltable = fbref[0]\n",
        "epltabledef = epltable.drop(columns=[ 'Rk',\n",
        " 'MP',\n",
        " 'W',\n",
        " 'D',\n",
        " 'L',\n",
        " 'GF',\n",
        " 'GA',\n",
        " 'GD',\n",
        " 'xG',\n",
        " 'xGD',\n",
        " 'xGD/90',\n",
        " 'Pts',\n",
        " 'Pts/MP',\n",
        " 'Last 5',\n",
        " 'Attendance',\n",
        " 'Top Team Scorer',\n",
        " 'Goalkeeper',\n",
        " 'Notes'])\n",
        "epltabledef= epltabledef.replace('Newcastle Utd', 'Newcastle United')\n",
        "epltabledef= epltabledef.replace('Wolves','Wolverhampton Wanderers')\n",
        "epltabledef= epltabledef.replace('Leeds United','Leeds')\n",
        "epltabledef= epltabledef.replace('Leicester City','Leicester')\n",
        "epltabledef= epltabledef.replace('Manchester Utd','Manchester United')\n",
        "epltabledef['Squad'] = epltabledef['Squad'].str.replace(r\"[\\\"\\',]\", '')\n",
        "epltabledef= epltabledef.replace('Nottham Forest','Nottingham Forest')\n",
        "epltabledef['xCSP'] = (4 - (epltabledef.xGA * 4/20))/4\n",
        "epltabledef.rename(columns={'Squad': 'team'}, inplace=True)\n",
        "rawdfcs = pd.merge(rawdf,\n",
        "                     epltabledef,\n",
        "                     on ='team',\n",
        "                     how ='left')\n",
        "rawgk= rawdfcs.query('pos==\"G\"')\n",
        "rawgk['xP'] = ((rawgk.xCSP)+ (rawgk.apppoint)) * rawgk.home_adjustment\n",
        "#rawgk['xP'] = rawgk.apppoint * rawgk.home_adjustment\n",
        "rawgk = rawgk.drop(columns=[\n",
        " 'expected_goals',\n",
        " 'team',\n",
        " 'expected_assists',\n",
        " 'apppoint',\n",
        " 'assistvalue',\n",
        "  'xGA',\n",
        "'home_adjustment'])\n",
        "rawdef= rawdfcs.query('pos==\"D\"')\n",
        "rawdef['xP'] = ((rawdef.expected_goals * 6/20)+(rawdef.expected_assists * 3/20) +(rawdef.xCSP)+ (rawdef.apppoint) * rawdef.home_adjustment)\n",
        "#rawdef['xP'] = ((rawdef.expected_goals * 6/3)+(rawdef.expected_assists * 3/3) + (rawdef.apppoint) * rawdef.home_adjustment)\n",
        "rawdef = rawdef.drop(columns=[\n",
        " 'expected_goals',\n",
        " 'team',\n",
        " 'expected_assists',\n",
        " 'apppoint',\n",
        " 'assistvalue',\n",
        "  'xGA',\n",
        " 'home_adjustment'])\n",
        "rawallplayers = pd.concat([rawfwd, rawmd, rawdef, rawgk], ignore_index=True)\n",
        "rawallplayers\n",
        "\n",
        "\n",
        "\n"
      ],
      "metadata": {
        "id": "AWnYpVh5kDzO",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 875
        },
        "outputId": "1d67765f-3678-4f74-ce49-56ccfb07eea2"
      },
      "execution_count": 20,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "<ipython-input-20-63ddd8182def>:6: SettingWithCopyWarning: \n",
            "A value is trying to be set on a copy of a slice from a DataFrame.\n",
            "Try using .loc[row_indexer,col_indexer] = value instead\n",
            "\n",
            "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
            "  rawfwd['xP'] = ((rawfwd.expected_goals * 4/20)+(rawfwd.expected_assists * 3/20) + (rawfwd.apppoint)) * rawfwd.home_adjustment\n",
            "<ipython-input-20-63ddd8182def>:15: SettingWithCopyWarning: \n",
            "A value is trying to be set on a copy of a slice from a DataFrame.\n",
            "Try using .loc[row_indexer,col_indexer] = value instead\n",
            "\n",
            "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
            "  rawmd['xP'] = ((rawmd.expected_goals * 5/20)+(rawmd.expected_assists * 3/20) + (rawmd.apppoint)) * rawmd.home_adjustment\n",
            "<ipython-input-20-63ddd8182def>:48: FutureWarning: The default value of regex will change from True to False in a future version.\n",
            "  epltabledef['Squad'] = epltabledef['Squad'].str.replace(r\"[\\\"\\',]\", '')\n",
            "<ipython-input-20-63ddd8182def>:57: SettingWithCopyWarning: \n",
            "A value is trying to be set on a copy of a slice from a DataFrame.\n",
            "Try using .loc[row_indexer,col_indexer] = value instead\n",
            "\n",
            "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
            "  rawgk['xP'] = ((rawgk.xCSP)+ (rawgk.apppoint)) * rawgk.home_adjustment\n",
            "<ipython-input-20-63ddd8182def>:68: SettingWithCopyWarning: \n",
            "A value is trying to be set on a copy of a slice from a DataFrame.\n",
            "Try using .loc[row_indexer,col_indexer] = value instead\n",
            "\n",
            "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
            "  rawdef['xP'] = ((rawdef.expected_goals * 6/20)+(rawdef.expected_assists * 3/20) +(rawdef.xCSP)+ (rawdef.apppoint) * rawdef.home_adjustment)\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "      id pos     name  cost  selected_by_percent  goals_scored  assists  bps  \\\n",
              "0      1   F  Balogun   4.4                  0.2             0        0    0   \n",
              "1      8   F  G.Jesus   8.0                  5.4             3        2  153   \n",
              "2     13   F  Nketiah   5.3                  4.5             5        3  180   \n",
              "3     39   F    Davis   4.9                  0.1             0        0    0   \n",
              "4     44   F    Duran   5.0                  0.2             2        1   77   \n",
              "..   ...  ..      ...   ...                  ...           ...      ...  ...   \n",
              "768  647   G    Anang   4.0                  0.1             0        0    0   \n",
              "769  546   G  Bentley   3.9                  1.2             0        0   60   \n",
              "770  564   G     King   3.9                  0.7             0        0    0   \n",
              "771  569   G  José Sá   5.0                  1.4             0        0  288   \n",
              "772  571   G   Šarkić   4.0                  0.3             0        0    0   \n",
              "\n",
              "     ict_index  points  points_per_game  minutes        xP   xCSP  \n",
              "0          0.0       0              0.0        0  2.332358    NaN  \n",
              "1         95.0      48              3.2      934  3.690374    NaN  \n",
              "2         65.4      60              3.2      958  3.358596    NaN  \n",
              "3          0.0       0              0.0        0  2.203956    NaN  \n",
              "4         17.7      23              1.8      148  2.390742    NaN  \n",
              "..         ...     ...              ...      ...       ...    ...  \n",
              "768        0.0       0              0.0        0  1.225500 -0.760  \n",
              "769        5.7      16              5.3      247  1.103864 -0.655  \n",
              "770        0.0       0              0.0        0  1.103864 -0.655  \n",
              "771       39.9      52              2.9     1552  1.103864 -0.655  \n",
              "772        0.0       0              0.0        0  1.103864 -0.655  \n",
              "\n",
              "[773 rows x 14 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-51e0cd6a-5127-4732-ae5a-d2fb34acc544\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>pos</th>\n",
              "      <th>name</th>\n",
              "      <th>cost</th>\n",
              "      <th>selected_by_percent</th>\n",
              "      <th>goals_scored</th>\n",
              "      <th>assists</th>\n",
              "      <th>bps</th>\n",
              "      <th>ict_index</th>\n",
              "      <th>points</th>\n",
              "      <th>points_per_game</th>\n",
              "      <th>minutes</th>\n",
              "      <th>xP</th>\n",
              "      <th>xCSP</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>1</td>\n",
              "      <td>F</td>\n",
              "      <td>Balogun</td>\n",
              "      <td>4.4</td>\n",
              "      <td>0.2</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>2.332358</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>8</td>\n",
              "      <td>F</td>\n",
              "      <td>G.Jesus</td>\n",
              "      <td>8.0</td>\n",
              "      <td>5.4</td>\n",
              "      <td>3</td>\n",
              "      <td>2</td>\n",
              "      <td>153</td>\n",
              "      <td>95.0</td>\n",
              "      <td>48</td>\n",
              "      <td>3.2</td>\n",
              "      <td>934</td>\n",
              "      <td>3.690374</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>13</td>\n",
              "      <td>F</td>\n",
              "      <td>Nketiah</td>\n",
              "      <td>5.3</td>\n",
              "      <td>4.5</td>\n",
              "      <td>5</td>\n",
              "      <td>3</td>\n",
              "      <td>180</td>\n",
              "      <td>65.4</td>\n",
              "      <td>60</td>\n",
              "      <td>3.2</td>\n",
              "      <td>958</td>\n",
              "      <td>3.358596</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>39</td>\n",
              "      <td>F</td>\n",
              "      <td>Davis</td>\n",
              "      <td>4.9</td>\n",
              "      <td>0.1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>2.203956</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>44</td>\n",
              "      <td>F</td>\n",
              "      <td>Duran</td>\n",
              "      <td>5.0</td>\n",
              "      <td>0.2</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>77</td>\n",
              "      <td>17.7</td>\n",
              "      <td>23</td>\n",
              "      <td>1.8</td>\n",
              "      <td>148</td>\n",
              "      <td>2.390742</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>768</th>\n",
              "      <td>647</td>\n",
              "      <td>G</td>\n",
              "      <td>Anang</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>1.225500</td>\n",
              "      <td>-0.760</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>769</th>\n",
              "      <td>546</td>\n",
              "      <td>G</td>\n",
              "      <td>Bentley</td>\n",
              "      <td>3.9</td>\n",
              "      <td>1.2</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>60</td>\n",
              "      <td>5.7</td>\n",
              "      <td>16</td>\n",
              "      <td>5.3</td>\n",
              "      <td>247</td>\n",
              "      <td>1.103864</td>\n",
              "      <td>-0.655</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>770</th>\n",
              "      <td>564</td>\n",
              "      <td>G</td>\n",
              "      <td>King</td>\n",
              "      <td>3.9</td>\n",
              "      <td>0.7</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>1.103864</td>\n",
              "      <td>-0.655</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>771</th>\n",
              "      <td>569</td>\n",
              "      <td>G</td>\n",
              "      <td>José Sá</td>\n",
              "      <td>5.0</td>\n",
              "      <td>1.4</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>288</td>\n",
              "      <td>39.9</td>\n",
              "      <td>52</td>\n",
              "      <td>2.9</td>\n",
              "      <td>1552</td>\n",
              "      <td>1.103864</td>\n",
              "      <td>-0.655</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>772</th>\n",
              "      <td>571</td>\n",
              "      <td>G</td>\n",
              "      <td>Šarkić</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.3</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>1.103864</td>\n",
              "      <td>-0.655</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>773 rows × 14 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-51e0cd6a-5127-4732-ae5a-d2fb34acc544')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-51e0cd6a-5127-4732-ae5a-d2fb34acc544 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-51e0cd6a-5127-4732-ae5a-d2fb34acc544');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-4e004970-5210-474c-88cf-3a541bae9ca4\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-4e004970-5210-474c-88cf-3a541bae9ca4')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-4e004970-5210-474c-88cf-3a541bae9ca4 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 20
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "rawgk1= rawdfcs.query('pos==\"G\"')\n",
        "rawgk1"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 687
        },
        "id": "z3FgmhoCb3GG",
        "outputId": "67c03c59-7cfa-4162-c6de-9315dea38e59"
      },
      "execution_count": 21,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "      id                     team pos       name  cost  selected_by_percent  \\\n",
              "15    17                  Arsenal   G   Ramsdale   4.6                  6.2   \n",
              "16    18                  Arsenal   G  Rúnarsson   4.0                  0.1   \n",
              "26   113                  Arsenal   G       Raya   4.9                  6.1   \n",
              "30   646                  Arsenal   G       Hein   4.0                  0.1   \n",
              "52    49              Aston Villa   G   Martinez   5.2                 12.2   \n",
              "..   ...                      ...  ..        ...   ...                  ...   \n",
              "728  647                 West Ham   G      Anang   4.0                  0.1   \n",
              "736  546  Wolverhampton Wanderers   G    Bentley   3.9                  1.2   \n",
              "752  564  Wolverhampton Wanderers   G       King   3.9                  0.7   \n",
              "756  569  Wolverhampton Wanderers   G    José Sá   5.0                  1.4   \n",
              "758  571  Wolverhampton Wanderers   G     Šarkić   4.0                  0.3   \n",
              "\n",
              "     expected_goals  expected_assists  goals_scored  assists  bps  ict_index  \\\n",
              "15              0.0              0.01             0        0   77        5.6   \n",
              "16              0.0              0.00             0        0    0        0.0   \n",
              "26              0.0              0.02             0        0  253       22.4   \n",
              "30              0.0              0.00             0        0    0        0.0   \n",
              "52              0.0              0.00             0        0  348       47.4   \n",
              "..              ...               ...           ...      ...  ...        ...   \n",
              "728             0.0              0.00             0        0    0        0.0   \n",
              "736             0.0              0.00             0        0   60        5.7   \n",
              "752             0.0              0.00             0        0    0        0.0   \n",
              "756             0.0              0.00             0        0  288       39.9   \n",
              "758             0.0              0.00             0        0    0        0.0   \n",
              "\n",
              "     points  points_per_game  minutes  apppoint  assistvalue  home_adjustment  \\\n",
              "15       17              3.4      450         2            3         1.166179   \n",
              "16        0              0.0        0         2            3         1.166179   \n",
              "26       55              3.7     1350         2            3         1.166179   \n",
              "30        0              0.0        0         2            3         1.166179   \n",
              "52       61              3.2     1710         2            3         1.101978   \n",
              "..      ...              ...      ...       ...          ...              ...   \n",
              "728       0              0.0        0         2            3         0.988306   \n",
              "736      16              5.3      247         2            3         0.820717   \n",
              "752       0              0.0        0         2            3         0.820717   \n",
              "756      52              2.9     1552         2            3         0.820717   \n",
              "758       0              0.0        0         2            3         0.820717   \n",
              "\n",
              "      xGA   xCSP  \n",
              "15   16.3  0.185  \n",
              "16   16.3  0.185  \n",
              "26   16.3  0.185  \n",
              "30   16.3  0.185  \n",
              "52   25.6 -0.280  \n",
              "..    ...    ...  \n",
              "728  35.2 -0.760  \n",
              "736  33.1 -0.655  \n",
              "752  33.1 -0.655  \n",
              "756  33.1 -0.655  \n",
              "758  33.1 -0.655  \n",
              "\n",
              "[88 rows x 20 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-2a51033a-e290-4b97-aa80-d63de668e55f\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>team</th>\n",
              "      <th>pos</th>\n",
              "      <th>name</th>\n",
              "      <th>cost</th>\n",
              "      <th>selected_by_percent</th>\n",
              "      <th>expected_goals</th>\n",
              "      <th>expected_assists</th>\n",
              "      <th>goals_scored</th>\n",
              "      <th>assists</th>\n",
              "      <th>bps</th>\n",
              "      <th>ict_index</th>\n",
              "      <th>points</th>\n",
              "      <th>points_per_game</th>\n",
              "      <th>minutes</th>\n",
              "      <th>apppoint</th>\n",
              "      <th>assistvalue</th>\n",
              "      <th>home_adjustment</th>\n",
              "      <th>xGA</th>\n",
              "      <th>xCSP</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>15</th>\n",
              "      <td>17</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>G</td>\n",
              "      <td>Ramsdale</td>\n",
              "      <td>4.6</td>\n",
              "      <td>6.2</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.01</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>77</td>\n",
              "      <td>5.6</td>\n",
              "      <td>17</td>\n",
              "      <td>3.4</td>\n",
              "      <td>450</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "      <td>1.166179</td>\n",
              "      <td>16.3</td>\n",
              "      <td>0.185</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>16</th>\n",
              "      <td>18</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>G</td>\n",
              "      <td>Rúnarsson</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.1</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "      <td>1.166179</td>\n",
              "      <td>16.3</td>\n",
              "      <td>0.185</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>26</th>\n",
              "      <td>113</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>G</td>\n",
              "      <td>Raya</td>\n",
              "      <td>4.9</td>\n",
              "      <td>6.1</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.02</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>253</td>\n",
              "      <td>22.4</td>\n",
              "      <td>55</td>\n",
              "      <td>3.7</td>\n",
              "      <td>1350</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "      <td>1.166179</td>\n",
              "      <td>16.3</td>\n",
              "      <td>0.185</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>30</th>\n",
              "      <td>646</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>G</td>\n",
              "      <td>Hein</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.1</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "      <td>1.166179</td>\n",
              "      <td>16.3</td>\n",
              "      <td>0.185</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>52</th>\n",
              "      <td>49</td>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>G</td>\n",
              "      <td>Martinez</td>\n",
              "      <td>5.2</td>\n",
              "      <td>12.2</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>348</td>\n",
              "      <td>47.4</td>\n",
              "      <td>61</td>\n",
              "      <td>3.2</td>\n",
              "      <td>1710</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "      <td>1.101978</td>\n",
              "      <td>25.6</td>\n",
              "      <td>-0.280</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>728</th>\n",
              "      <td>647</td>\n",
              "      <td>West Ham</td>\n",
              "      <td>G</td>\n",
              "      <td>Anang</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.1</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "      <td>0.988306</td>\n",
              "      <td>35.2</td>\n",
              "      <td>-0.760</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>736</th>\n",
              "      <td>546</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>G</td>\n",
              "      <td>Bentley</td>\n",
              "      <td>3.9</td>\n",
              "      <td>1.2</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>60</td>\n",
              "      <td>5.7</td>\n",
              "      <td>16</td>\n",
              "      <td>5.3</td>\n",
              "      <td>247</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "      <td>0.820717</td>\n",
              "      <td>33.1</td>\n",
              "      <td>-0.655</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>752</th>\n",
              "      <td>564</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>G</td>\n",
              "      <td>King</td>\n",
              "      <td>3.9</td>\n",
              "      <td>0.7</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "      <td>0.820717</td>\n",
              "      <td>33.1</td>\n",
              "      <td>-0.655</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>756</th>\n",
              "      <td>569</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>G</td>\n",
              "      <td>José Sá</td>\n",
              "      <td>5.0</td>\n",
              "      <td>1.4</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>288</td>\n",
              "      <td>39.9</td>\n",
              "      <td>52</td>\n",
              "      <td>2.9</td>\n",
              "      <td>1552</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "      <td>0.820717</td>\n",
              "      <td>33.1</td>\n",
              "      <td>-0.655</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>758</th>\n",
              "      <td>571</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>G</td>\n",
              "      <td>Šarkić</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.3</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "      <td>0.820717</td>\n",
              "      <td>33.1</td>\n",
              "      <td>-0.655</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>88 rows × 20 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-2a51033a-e290-4b97-aa80-d63de668e55f')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-2a51033a-e290-4b97-aa80-d63de668e55f button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-2a51033a-e290-4b97-aa80-d63de668e55f');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-c56d68c4-e686-47e6-ad42-86fb41142de0\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-c56d68c4-e686-47e6-ad42-86fb41142de0')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-c56d68c4-e686-47e6-ad42-86fb41142de0 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 21
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "from pandas import ExcelWriter"
      ],
      "metadata": {
        "id": "ONZy1SvCDu6y"
      },
      "execution_count": 22,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "writer = ExcelWriter('notes.xlsx')"
      ],
      "metadata": {
        "id": "iubZBRlVEhiz"
      },
      "execution_count": 23,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "rawallplayers.to_excel(writer, sheet_name='Sheet1')\n",
        "gw21adjustments.to_excel(writer, sheet_name='Sheet2')\n",
        "#fplwithunderstat.to_excel(writer, sheet_name='Sheet3')\n",
        "\n",
        "# Close the Pandas Excel writer and output the Excel file.\n",
        "writer.save()"
      ],
      "metadata": {
        "id": "slYEIma_E0uP",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "bbb542ef-66fb-470b-8479-6ca32de0b9e8"
      },
      "execution_count": 24,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "<ipython-input-24-4f86553b64db>:6: FutureWarning: save is not part of the public API, usage can give unexpected results and will be removed in a future version\n",
            "  writer.save()\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "gwfixtures"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 424
        },
        "id": "3udskoGrT73A",
        "outputId": "c4abcf04-3bd7-4a74-be13-bcc0afbf95dc"
      },
      "execution_count": 25,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "     event            team_h                   team_a          kickoff_time\n",
              "0      NaN       Bournemouth               Luton Town                   NaN\n",
              "1      NaN   Manchester City                Brentford                   NaN\n",
              "2      1.0           Burnley          Manchester City  2023-08-11T19:00:00Z\n",
              "3      1.0           Arsenal        Nottingham Forest  2023-08-12T12:00:00Z\n",
              "4      1.0       Bournemouth                 West Ham  2023-08-12T14:00:00Z\n",
              "..     ...               ...                      ...                   ...\n",
              "375   38.0    Crystal Palace              Aston Villa  2024-05-19T15:00:00Z\n",
              "376   38.0         Liverpool  Wolverhampton Wanderers  2024-05-19T15:00:00Z\n",
              "377   38.0        Luton Town                   Fulham  2024-05-19T15:00:00Z\n",
              "378   38.0   Manchester City                 West Ham  2024-05-19T15:00:00Z\n",
              "379   38.0  Sheffield United                Tottenham  2024-05-19T15:00:00Z\n",
              "\n",
              "[380 rows x 4 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-fe83df68-d8bd-4830-adc5-9a0a901bd34c\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>event</th>\n",
              "      <th>team_h</th>\n",
              "      <th>team_a</th>\n",
              "      <th>kickoff_time</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>NaN</td>\n",
              "      <td>Bournemouth</td>\n",
              "      <td>Luton Town</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>NaN</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>Brentford</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>1.0</td>\n",
              "      <td>Burnley</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>2023-08-11T19:00:00Z</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>1.0</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>Nottingham Forest</td>\n",
              "      <td>2023-08-12T12:00:00Z</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>1.0</td>\n",
              "      <td>Bournemouth</td>\n",
              "      <td>West Ham</td>\n",
              "      <td>2023-08-12T14:00:00Z</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>375</th>\n",
              "      <td>38.0</td>\n",
              "      <td>Crystal Palace</td>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>2024-05-19T15:00:00Z</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>376</th>\n",
              "      <td>38.0</td>\n",
              "      <td>Liverpool</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>2024-05-19T15:00:00Z</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>377</th>\n",
              "      <td>38.0</td>\n",
              "      <td>Luton Town</td>\n",
              "      <td>Fulham</td>\n",
              "      <td>2024-05-19T15:00:00Z</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>378</th>\n",
              "      <td>38.0</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>West Ham</td>\n",
              "      <td>2024-05-19T15:00:00Z</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>379</th>\n",
              "      <td>38.0</td>\n",
              "      <td>Sheffield United</td>\n",
              "      <td>Tottenham</td>\n",
              "      <td>2024-05-19T15:00:00Z</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>380 rows × 4 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-fe83df68-d8bd-4830-adc5-9a0a901bd34c')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-fe83df68-d8bd-4830-adc5-9a0a901bd34c button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-fe83df68-d8bd-4830-adc5-9a0a901bd34c');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-2fff7752-5d90-4e00-8114-a56e3cae8e40\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-2fff7752-5d90-4e00-8114-a56e3cae8e40')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-2fff7752-5d90-4e00-8114-a56e3cae8e40 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 25
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "rawdfallgw = pd.merge(master,\n",
        "                     gw21adjustments,\n",
        "                     on ='team',\n",
        "                     how ='left')\n",
        "rawfwdallgw = rawdfallgw.query('pos==\"F\"')\n",
        "rawfwdallgw['xPallgw'] = ((rawfwdallgw.expected_goals * 4/20)+(rawfwdallgw.expected_assists * 3/20) + (rawfwdallgw.apppoint))\n",
        "rawfwdallgw = rawfwdallgw.drop(columns=[\n",
        " 'expected_goals',\n",
        " 'expected_assists',\n",
        " 'apppoint',\n",
        " 'assistvalue',\n",
        "])\n",
        "rawmdallgw = rawdfallgw.query('pos==\"M\"')\n",
        "rawmdallgw['xPallgw'] = ((rawmdallgw.expected_goals * 5/20)+(rawmdallgw.expected_assists * 3/20) + (rawmdallgw.apppoint))\n",
        "rawmdallgw = rawmdallgw.drop(columns=[\n",
        " 'expected_goals',\n",
        " 'expected_assists',\n",
        " 'apppoint',\n",
        " 'assistvalue',\n",
        "])\n",
        "fbref = pd.read_html('https://fbref.com/en/comps/9/Premier-League-Stats')\n",
        "epltable = fbref[0]\n",
        "epltabledef = epltable.drop(columns=[ 'Rk',\n",
        " 'MP',\n",
        " 'W',\n",
        " 'D',\n",
        " 'L',\n",
        " 'GF',\n",
        " 'GA',\n",
        " 'GD',\n",
        " 'xG',\n",
        " 'xGD',\n",
        " 'xGD/90',\n",
        " 'Pts',\n",
        " 'Pts/MP',\n",
        " 'Last 5',\n",
        " 'Attendance',\n",
        " 'Top Team Scorer',\n",
        " 'Goalkeeper',\n",
        " 'Notes'])\n",
        "epltabledef= epltabledef.replace('Newcastle Utd', 'Newcastle United')\n",
        "epltabledef= epltabledef.replace('Wolves','Wolverhampton Wanderers')\n",
        "epltabledef= epltabledef.replace('Leeds United','Leeds')\n",
        "epltabledef= epltabledef.replace('Leicester City','Leicester')\n",
        "epltabledef= epltabledef.replace('Manchester Utd','Manchester United')\n",
        "epltabledef['Squad'] = epltabledef['Squad'].str.replace(r\"[\\\"\\',]\", '')\n",
        "epltabledef= epltabledef.replace('Nottham Forest','Nottingham Forest')\n",
        "epltabledef['xCSP'] = ((4 - (epltabledef.xGA * 4/20))/4) + 0.75\n",
        "epltabledef.rename(columns={'Squad': 'team'}, inplace=True)\n",
        "rawdfcs = pd.merge(rawdf,\n",
        "                     epltabledef,\n",
        "                     on ='team',\n",
        "                     how ='left')\n",
        "rawgkallgw= rawdfcs.query('pos==\"G\"')\n",
        "#rawgkallgw['xPallgw'] = (rawgkallgw.apppoint)\n",
        "rawgkallgw['xPallgw'] = ((rawgkallgw.xCSP)+ (rawgkallgw.apppoint))\n",
        "rawgkallgw = rawgkallgw.drop(columns=[\n",
        " 'expected_goals',\n",
        "  'expected_assists',\n",
        " 'apppoint',\n",
        " 'assistvalue',\n",
        "  'xGA',\n",
        "])\n",
        "rawdefallgw= rawdfcs.query('pos==\"D\"')\n",
        "rawdefallgw['xPallgw'] = (rawdefallgw.expected_goals * 6/20)+(rawdefallgw.expected_assists * 3/20) +(rawdefallgw.xCSP)+ (rawdefallgw.apppoint)\n",
        "#rawdefallgw['xPallgw'] = (rawdefallgw.expected_goals * 6/3)+(rawdefallgw.expected_assists * 3/3) + (rawdefallgw.apppoint)\n",
        "rawdefallgw = rawdefallgw.drop(columns=[\n",
        " 'expected_goals',\n",
        " 'expected_assists',\n",
        " 'apppoint',\n",
        " 'assistvalue',\n",
        "  'xGA',])\n",
        "rawallplayersallgw = pd.concat([rawfwdallgw, rawmdallgw, rawdefallgw, rawgkallgw], ignore_index=True)\n",
        "rawallplayersallgw\n",
        "\n",
        "\n",
        "\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 875
        },
        "id": "xxPTwE3TZZC0",
        "outputId": "5ebdc249-35bc-4fa1-ab91-042aaa34cede"
      },
      "execution_count": 26,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "<ipython-input-26-ad1913fab121>:6: SettingWithCopyWarning: \n",
            "A value is trying to be set on a copy of a slice from a DataFrame.\n",
            "Try using .loc[row_indexer,col_indexer] = value instead\n",
            "\n",
            "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
            "  rawfwdallgw['xPallgw'] = ((rawfwdallgw.expected_goals * 4/20)+(rawfwdallgw.expected_assists * 3/20) + (rawfwdallgw.apppoint))\n",
            "<ipython-input-26-ad1913fab121>:14: SettingWithCopyWarning: \n",
            "A value is trying to be set on a copy of a slice from a DataFrame.\n",
            "Try using .loc[row_indexer,col_indexer] = value instead\n",
            "\n",
            "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
            "  rawmdallgw['xPallgw'] = ((rawmdallgw.expected_goals * 5/20)+(rawmdallgw.expected_assists * 3/20) + (rawmdallgw.apppoint))\n",
            "<ipython-input-26-ad1913fab121>:46: FutureWarning: The default value of regex will change from True to False in a future version.\n",
            "  epltabledef['Squad'] = epltabledef['Squad'].str.replace(r\"[\\\"\\',]\", '')\n",
            "<ipython-input-26-ad1913fab121>:56: SettingWithCopyWarning: \n",
            "A value is trying to be set on a copy of a slice from a DataFrame.\n",
            "Try using .loc[row_indexer,col_indexer] = value instead\n",
            "\n",
            "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
            "  rawgkallgw['xPallgw'] = ((rawgkallgw.xCSP)+ (rawgkallgw.apppoint))\n",
            "<ipython-input-26-ad1913fab121>:65: SettingWithCopyWarning: \n",
            "A value is trying to be set on a copy of a slice from a DataFrame.\n",
            "Try using .loc[row_indexer,col_indexer] = value instead\n",
            "\n",
            "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
            "  rawdefallgw['xPallgw'] = (rawdefallgw.expected_goals * 6/20)+(rawdefallgw.expected_assists * 3/20) +(rawdefallgw.xCSP)+ (rawdefallgw.apppoint)\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "      id                     team pos     name  cost  selected_by_percent  \\\n",
              "0      1                  Arsenal   F  Balogun   4.4                  0.2   \n",
              "1      8                  Arsenal   F  G.Jesus   8.0                  5.4   \n",
              "2     13                  Arsenal   F  Nketiah   5.3                  4.5   \n",
              "3     39              Aston Villa   F    Davis   4.9                  0.1   \n",
              "4     44              Aston Villa   F    Duran   5.0                  0.2   \n",
              "..   ...                      ...  ..      ...   ...                  ...   \n",
              "768  647                 West Ham   G    Anang   4.0                  0.1   \n",
              "769  546  Wolverhampton Wanderers   G  Bentley   3.9                  1.2   \n",
              "770  564  Wolverhampton Wanderers   G     King   3.9                  0.7   \n",
              "771  569  Wolverhampton Wanderers   G  José Sá   5.0                  1.4   \n",
              "772  571  Wolverhampton Wanderers   G   Šarkić   4.0                  0.3   \n",
              "\n",
              "     goals_scored  assists  bps  ict_index  points  points_per_game  minutes  \\\n",
              "0               0        0    0        0.0       0              0.0        0   \n",
              "1               3        2  153       95.0      48              3.2      934   \n",
              "2               5        3  180       65.4      60              3.2      958   \n",
              "3               0        0    0        0.0       0              0.0        0   \n",
              "4               2        1   77       17.7      23              1.8      148   \n",
              "..            ...      ...  ...        ...     ...              ...      ...   \n",
              "768             0        0    0        0.0       0              0.0        0   \n",
              "769             0        0   60        5.7      16              5.3      247   \n",
              "770             0        0    0        0.0       0              0.0        0   \n",
              "771             0        0  288       39.9      52              2.9     1552   \n",
              "772             0        0    0        0.0       0              0.0        0   \n",
              "\n",
              "     home_adjustment  xPallgw   xCSP  \n",
              "0           1.166179   2.0000    NaN  \n",
              "1           1.166179   3.1645    NaN  \n",
              "2           1.166179   2.8800    NaN  \n",
              "3           1.101978   2.0000    NaN  \n",
              "4           1.101978   2.1695    NaN  \n",
              "..               ...      ...    ...  \n",
              "768         0.988306   1.9900 -0.010  \n",
              "769         0.820717   2.0950  0.095  \n",
              "770         0.820717   2.0950  0.095  \n",
              "771         0.820717   2.0950  0.095  \n",
              "772         0.820717   2.0950  0.095  \n",
              "\n",
              "[773 rows x 16 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-8ea099e6-ceaa-43c2-affc-9fc69f91b258\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>team</th>\n",
              "      <th>pos</th>\n",
              "      <th>name</th>\n",
              "      <th>cost</th>\n",
              "      <th>selected_by_percent</th>\n",
              "      <th>goals_scored</th>\n",
              "      <th>assists</th>\n",
              "      <th>bps</th>\n",
              "      <th>ict_index</th>\n",
              "      <th>points</th>\n",
              "      <th>points_per_game</th>\n",
              "      <th>minutes</th>\n",
              "      <th>home_adjustment</th>\n",
              "      <th>xPallgw</th>\n",
              "      <th>xCSP</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>1</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>F</td>\n",
              "      <td>Balogun</td>\n",
              "      <td>4.4</td>\n",
              "      <td>0.2</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>1.166179</td>\n",
              "      <td>2.0000</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>8</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>F</td>\n",
              "      <td>G.Jesus</td>\n",
              "      <td>8.0</td>\n",
              "      <td>5.4</td>\n",
              "      <td>3</td>\n",
              "      <td>2</td>\n",
              "      <td>153</td>\n",
              "      <td>95.0</td>\n",
              "      <td>48</td>\n",
              "      <td>3.2</td>\n",
              "      <td>934</td>\n",
              "      <td>1.166179</td>\n",
              "      <td>3.1645</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>13</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>F</td>\n",
              "      <td>Nketiah</td>\n",
              "      <td>5.3</td>\n",
              "      <td>4.5</td>\n",
              "      <td>5</td>\n",
              "      <td>3</td>\n",
              "      <td>180</td>\n",
              "      <td>65.4</td>\n",
              "      <td>60</td>\n",
              "      <td>3.2</td>\n",
              "      <td>958</td>\n",
              "      <td>1.166179</td>\n",
              "      <td>2.8800</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>39</td>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>F</td>\n",
              "      <td>Davis</td>\n",
              "      <td>4.9</td>\n",
              "      <td>0.1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>1.101978</td>\n",
              "      <td>2.0000</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>44</td>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>F</td>\n",
              "      <td>Duran</td>\n",
              "      <td>5.0</td>\n",
              "      <td>0.2</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>77</td>\n",
              "      <td>17.7</td>\n",
              "      <td>23</td>\n",
              "      <td>1.8</td>\n",
              "      <td>148</td>\n",
              "      <td>1.101978</td>\n",
              "      <td>2.1695</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>768</th>\n",
              "      <td>647</td>\n",
              "      <td>West Ham</td>\n",
              "      <td>G</td>\n",
              "      <td>Anang</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.988306</td>\n",
              "      <td>1.9900</td>\n",
              "      <td>-0.010</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>769</th>\n",
              "      <td>546</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>G</td>\n",
              "      <td>Bentley</td>\n",
              "      <td>3.9</td>\n",
              "      <td>1.2</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>60</td>\n",
              "      <td>5.7</td>\n",
              "      <td>16</td>\n",
              "      <td>5.3</td>\n",
              "      <td>247</td>\n",
              "      <td>0.820717</td>\n",
              "      <td>2.0950</td>\n",
              "      <td>0.095</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>770</th>\n",
              "      <td>564</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>G</td>\n",
              "      <td>King</td>\n",
              "      <td>3.9</td>\n",
              "      <td>0.7</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.820717</td>\n",
              "      <td>2.0950</td>\n",
              "      <td>0.095</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>771</th>\n",
              "      <td>569</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>G</td>\n",
              "      <td>José Sá</td>\n",
              "      <td>5.0</td>\n",
              "      <td>1.4</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>288</td>\n",
              "      <td>39.9</td>\n",
              "      <td>52</td>\n",
              "      <td>2.9</td>\n",
              "      <td>1552</td>\n",
              "      <td>0.820717</td>\n",
              "      <td>2.0950</td>\n",
              "      <td>0.095</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>772</th>\n",
              "      <td>571</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>G</td>\n",
              "      <td>Šarkić</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.3</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.820717</td>\n",
              "      <td>2.0950</td>\n",
              "      <td>0.095</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>773 rows × 16 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-8ea099e6-ceaa-43c2-affc-9fc69f91b258')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-8ea099e6-ceaa-43c2-affc-9fc69f91b258 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-8ea099e6-ceaa-43c2-affc-9fc69f91b258');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-52ad06ca-3fbd-472d-865e-4c4120c597ee\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-52ad06ca-3fbd-472d-865e-4c4120c597ee')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-52ad06ca-3fbd-472d-865e-4c4120c597ee button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 26
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "rawmdallgw"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 424
        },
        "id": "ZtNrmQMhefCc",
        "outputId": "fd84e52e-09a7-436a-ae35-bcb56be9638e"
      },
      "execution_count": 27,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "      id                     team pos          name  cost  \\\n",
              "2      3                  Arsenal   M      M.Elneny   4.4   \n",
              "3      4                  Arsenal   M  Fábio Vieira   5.4   \n",
              "5      6                  Arsenal   M       Havertz   7.1   \n",
              "7      9                  Arsenal   M      Jorginho   5.3   \n",
              "9     11                  Arsenal   M    Marquinhos   4.5   \n",
              "..   ...                      ...  ..           ...   ...   \n",
              "767  715  Wolverhampton Wanderers   M    Bellegarde   4.9   \n",
              "768  749  Wolverhampton Wanderers   M   Whittingham   4.5   \n",
              "769  750  Wolverhampton Wanderers   M       Chirewa   4.5   \n",
              "771  769  Wolverhampton Wanderers   M       Hesketh   4.5   \n",
              "772  770  Wolverhampton Wanderers   M       Barnett   4.5   \n",
              "\n",
              "     selected_by_percent  goals_scored  assists  bps  ict_index  points  \\\n",
              "2                    0.1             0        1   12        0.4       4   \n",
              "3                    0.1             1        3   62       21.9      21   \n",
              "5                    1.6             4        1  152       72.0      52   \n",
              "7                    0.2             0        0   66       12.4      15   \n",
              "9                    0.0             0        0    0        0.0       0   \n",
              "..                   ...           ...      ...  ...        ...     ...   \n",
              "767                  0.0             2        1  101       33.1      27   \n",
              "768                  0.0             0        0    0        0.0       0   \n",
              "769                  0.0             0        0    0        0.0       0   \n",
              "771                  0.0             0        0    0        0.0       0   \n",
              "772                  0.0             0        0    0        0.0       0   \n",
              "\n",
              "     points_per_game  minutes  home_adjustment  xPallgw  \n",
              "2                4.0        1         1.166179   2.0000  \n",
              "3                2.6      236         1.166179   2.3525  \n",
              "5                2.7     1168         1.166179   3.2175  \n",
              "7                1.4      383         1.166179   2.0675  \n",
              "9                0.0        0         1.166179   2.0000  \n",
              "..               ...      ...              ...      ...  \n",
              "767              2.5      515         0.820717   2.2255  \n",
              "768              0.0        0         0.820717   2.0000  \n",
              "769              0.0        0         0.820717   2.0000  \n",
              "771              0.0        0         0.820717   2.0000  \n",
              "772              0.0        0         0.820717   2.0000  \n",
              "\n",
              "[337 rows x 15 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-e11742cb-414b-4329-a167-f2a4bbf8b995\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>team</th>\n",
              "      <th>pos</th>\n",
              "      <th>name</th>\n",
              "      <th>cost</th>\n",
              "      <th>selected_by_percent</th>\n",
              "      <th>goals_scored</th>\n",
              "      <th>assists</th>\n",
              "      <th>bps</th>\n",
              "      <th>ict_index</th>\n",
              "      <th>points</th>\n",
              "      <th>points_per_game</th>\n",
              "      <th>minutes</th>\n",
              "      <th>home_adjustment</th>\n",
              "      <th>xPallgw</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>3</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>M</td>\n",
              "      <td>M.Elneny</td>\n",
              "      <td>4.4</td>\n",
              "      <td>0.1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>12</td>\n",
              "      <td>0.4</td>\n",
              "      <td>4</td>\n",
              "      <td>4.0</td>\n",
              "      <td>1</td>\n",
              "      <td>1.166179</td>\n",
              "      <td>2.0000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>4</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>M</td>\n",
              "      <td>Fábio Vieira</td>\n",
              "      <td>5.4</td>\n",
              "      <td>0.1</td>\n",
              "      <td>1</td>\n",
              "      <td>3</td>\n",
              "      <td>62</td>\n",
              "      <td>21.9</td>\n",
              "      <td>21</td>\n",
              "      <td>2.6</td>\n",
              "      <td>236</td>\n",
              "      <td>1.166179</td>\n",
              "      <td>2.3525</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>6</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>M</td>\n",
              "      <td>Havertz</td>\n",
              "      <td>7.1</td>\n",
              "      <td>1.6</td>\n",
              "      <td>4</td>\n",
              "      <td>1</td>\n",
              "      <td>152</td>\n",
              "      <td>72.0</td>\n",
              "      <td>52</td>\n",
              "      <td>2.7</td>\n",
              "      <td>1168</td>\n",
              "      <td>1.166179</td>\n",
              "      <td>3.2175</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>9</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>M</td>\n",
              "      <td>Jorginho</td>\n",
              "      <td>5.3</td>\n",
              "      <td>0.2</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>66</td>\n",
              "      <td>12.4</td>\n",
              "      <td>15</td>\n",
              "      <td>1.4</td>\n",
              "      <td>383</td>\n",
              "      <td>1.166179</td>\n",
              "      <td>2.0675</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>11</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>M</td>\n",
              "      <td>Marquinhos</td>\n",
              "      <td>4.5</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>1.166179</td>\n",
              "      <td>2.0000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>767</th>\n",
              "      <td>715</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>M</td>\n",
              "      <td>Bellegarde</td>\n",
              "      <td>4.9</td>\n",
              "      <td>0.0</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>101</td>\n",
              "      <td>33.1</td>\n",
              "      <td>27</td>\n",
              "      <td>2.5</td>\n",
              "      <td>515</td>\n",
              "      <td>0.820717</td>\n",
              "      <td>2.2255</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>768</th>\n",
              "      <td>749</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>M</td>\n",
              "      <td>Whittingham</td>\n",
              "      <td>4.5</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.820717</td>\n",
              "      <td>2.0000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>769</th>\n",
              "      <td>750</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>M</td>\n",
              "      <td>Chirewa</td>\n",
              "      <td>4.5</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.820717</td>\n",
              "      <td>2.0000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>771</th>\n",
              "      <td>769</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>M</td>\n",
              "      <td>Hesketh</td>\n",
              "      <td>4.5</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.820717</td>\n",
              "      <td>2.0000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>772</th>\n",
              "      <td>770</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>M</td>\n",
              "      <td>Barnett</td>\n",
              "      <td>4.5</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.820717</td>\n",
              "      <td>2.0000</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>337 rows × 15 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-e11742cb-414b-4329-a167-f2a4bbf8b995')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-e11742cb-414b-4329-a167-f2a4bbf8b995 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-e11742cb-414b-4329-a167-f2a4bbf8b995');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-15f6fc62-a23f-4220-89b3-dafea39ca400\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-15f6fc62-a23f-4220-89b3-dafea39ca400')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-15f6fc62-a23f-4220-89b3-dafea39ca400 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 27
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "gw2blanks = [['Burnley', 0], ['Luton Town', 0]]\n",
        "\n",
        "# Create the pandas DataFrame\n",
        "blanks2 = pd.DataFrame(gw2blanks, columns=['team', 'gw2adjustment'])\n",
        "blanks2"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 112
        },
        "id": "xkGffHD0iXWI",
        "outputId": "2d45520e-01cf-4e4c-cd46-ff0c871fe571"
      },
      "execution_count": 28,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "         team  gw2adjustment\n",
              "0     Burnley              0\n",
              "1  Luton Town              0"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-635aa9f6-5217-45b4-8cb6-f9179a3e2b5e\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>team</th>\n",
              "      <th>gw2adjustment</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>Burnley</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Luton Town</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-635aa9f6-5217-45b4-8cb6-f9179a3e2b5e')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-635aa9f6-5217-45b4-8cb6-f9179a3e2b5e button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-635aa9f6-5217-45b4-8cb6-f9179a3e2b5e');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-266f28a8-6838-42c8-99ff-1fb0fe7fa7e4\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-266f28a8-6838-42c8-99ff-1fb0fe7fa7e4')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-266f28a8-6838-42c8-99ff-1fb0fe7fa7e4 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 28
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#gw2adjustments = pd.concat([gw2adjustments, blanks2])\n",
        "#gw2adjustments = gw2adjustments.reset_index(drop=True)\n",
        "#gw2adjustments"
      ],
      "metadata": {
        "id": "JNr3eV5Rir58"
      },
      "execution_count": 29,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "##gw3blanks = [['Newcastle United', 0], ['Manchester United', 0], ['Brentford', 0], ['Brighton', 0]]\n",
        "\n",
        "# Create the pandas DataFrame\n",
        "##blanks = pd.DataFrame(gw3blanks, columns=['team', 'gw3adjustment'])\n",
        "##blanks"
      ],
      "metadata": {
        "id": "iCizQgwMD84B"
      },
      "execution_count": 30,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "gw24 = homesawayspi.query('Event==\"24.0\"')\n",
        "pd.options.mode.chained_assignment = None  # default='warn'\n",
        "PLSPI = spi.query('league==\"Barclays Premier League\"')\n",
        "PLSPI['League Average']  = PLSPI[\"spi\"].mean()\n",
        "laverage = PLSPI[\"spi\"].mean()\n",
        "PLSPI['League Average'].astype(int)\n",
        "gw24['League_Average']  = laverage\n",
        "gw24.rename(columns = {'Home SPI':'HomeSPI', 'Away SPI':'AwaySPI'}, inplace = True)\n",
        "gw24['home_difference'] = gw24.HomeSPI - gw24.League_Average\n",
        "gw24['away_difference'] = gw24.AwaySPI - gw24.League_Average\n",
        "gw24['home_adjustment'] = (gw24.home_difference - gw24.away_difference + gw24.League_Average)/gw24.League_Average\n",
        "gw24['away_adjustment'] = (gw24.away_difference - gw24.home_difference+ gw24.League_Average)/gw24.League_Average\n",
        "gw24adjustments = gw24[['team_h', 'home_adjustment']].append(gw24[['team_a','away_adjustment']].set_axis(['team_h', 'home_adjustment'], axis=1)).reset_index(drop=True)\n",
        "gw24adjustments.rename(columns = {'team_h':'team'}, inplace = True)\n",
        "gw24adjustments.rename(columns = {'home_adjustment':'gw24adjustment'}, inplace = True)\n",
        "gw24adjustments"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 711
        },
        "id": "pzyah3Z-kgct",
        "outputId": "a1d9230b-1ead-4014-bca0-aa54f1cedacc"
      },
      "execution_count": 31,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "<ipython-input-31-faa33f5a3858>:13: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  gw24adjustments = gw24[['team_h', 'home_adjustment']].append(gw24[['team_a','away_adjustment']].set_axis(['team_h', 'home_adjustment'], axis=1)).reset_index(drop=True)\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                       team  gw24adjustment\n",
              "0           Manchester City        1.394239\n",
              "1                    Fulham        1.120064\n",
              "2                 Liverpool        1.291684\n",
              "3                Luton Town        0.984853\n",
              "4                 Tottenham        0.878546\n",
              "5   Wolverhampton Wanderers        0.748755\n",
              "6         Nottingham Forest        0.616878\n",
              "7                  West Ham        0.822127\n",
              "8               Aston Villa        1.003057\n",
              "9            Crystal Palace        0.967761\n",
              "10                  Everton        0.605761\n",
              "11              Bournemouth        0.879936\n",
              "12                  Burnley        0.708316\n",
              "13         Sheffield United        1.015147\n",
              "14                 Brighton        1.121454\n",
              "15                Brentford        1.251245\n",
              "16         Newcastle United        1.383122\n",
              "17                  Arsenal        1.177873\n",
              "18        Manchester United        0.996943\n",
              "19                  Chelsea        1.032239"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-daea3b25-6634-4fec-879c-734b4c6fb51a\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>team</th>\n",
              "      <th>gw24adjustment</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>Manchester City</td>\n",
              "      <td>1.394239</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Fulham</td>\n",
              "      <td>1.120064</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>Liverpool</td>\n",
              "      <td>1.291684</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>Luton Town</td>\n",
              "      <td>0.984853</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>Tottenham</td>\n",
              "      <td>0.878546</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>0.748755</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>Nottingham Forest</td>\n",
              "      <td>0.616878</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>West Ham</td>\n",
              "      <td>0.822127</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>1.003057</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>Crystal Palace</td>\n",
              "      <td>0.967761</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10</th>\n",
              "      <td>Everton</td>\n",
              "      <td>0.605761</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>11</th>\n",
              "      <td>Bournemouth</td>\n",
              "      <td>0.879936</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>12</th>\n",
              "      <td>Burnley</td>\n",
              "      <td>0.708316</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>13</th>\n",
              "      <td>Sheffield United</td>\n",
              "      <td>1.015147</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>14</th>\n",
              "      <td>Brighton</td>\n",
              "      <td>1.121454</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>15</th>\n",
              "      <td>Brentford</td>\n",
              "      <td>1.251245</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>16</th>\n",
              "      <td>Newcastle United</td>\n",
              "      <td>1.383122</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>17</th>\n",
              "      <td>Arsenal</td>\n",
              "      <td>1.177873</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>18</th>\n",
              "      <td>Manchester United</td>\n",
              "      <td>0.996943</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>19</th>\n",
              "      <td>Chelsea</td>\n",
              "      <td>1.032239</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-daea3b25-6634-4fec-879c-734b4c6fb51a')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-daea3b25-6634-4fec-879c-734b4c6fb51a button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-daea3b25-6634-4fec-879c-734b4c6fb51a');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-3acf2f68-9b47-4360-b71b-6417707d203f\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-3acf2f68-9b47-4360-b71b-6417707d203f')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-3acf2f68-9b47-4360-b71b-6417707d203f button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 31
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "gw25 = homesawayspi.query('Event==\"25.0\"')\n",
        "pd.options.mode.chained_assignment = None  # default='warn'\n",
        "PLSPI = spi.query('league==\"Barclays Premier League\"')\n",
        "PLSPI['League Average']  = PLSPI[\"spi\"].mean()\n",
        "laverage = PLSPI[\"spi\"].mean()\n",
        "PLSPI['League Average'].astype(int)\n",
        "gw25['League_Average']  = laverage\n",
        "gw25.rename(columns = {'Home SPI':'HomeSPI', 'Away SPI':'AwaySPI'}, inplace = True)\n",
        "gw25['home_difference'] = gw25.HomeSPI - gw25.League_Average\n",
        "gw25['away_difference'] = gw25.AwaySPI - gw25.League_Average\n",
        "gw25['home_adjustment'] = (gw25.home_difference - gw25.away_difference + gw25.League_Average)/gw25.League_Average\n",
        "gw25['away_adjustment'] = (gw25.away_difference - gw25.home_difference+ gw25.League_Average)/gw25.League_Average\n",
        "gw25adjustments = gw25[['team_h', 'home_adjustment']].append(gw25[['team_a','away_adjustment']].set_axis(['team_h', 'home_adjustment'], axis=1)).reset_index(drop=True)\n",
        "gw25adjustments.rename(columns = {'team_h':'team'}, inplace = True)\n",
        "gw25adjustments.rename(columns = {'home_adjustment':'gw25adjustment'}, inplace = True)\n",
        "gw25adjustments"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 711
        },
        "id": "7uE1H7R4Gems",
        "outputId": "55b108a2-5117-4778-9be5-ea4ade725911"
      },
      "execution_count": 32,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "<ipython-input-32-8f36e990e082>:13: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  gw25adjustments = gw25[['team_h', 'home_adjustment']].append(gw25[['team_a','away_adjustment']].set_axis(['team_h', 'home_adjustment'], axis=1)).reset_index(drop=True)\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                       team  gw25adjustment\n",
              "0                 Brentford        0.905644\n",
              "1                   Burnley        0.708455\n",
              "2                    Fulham        0.846029\n",
              "3          Newcastle United        1.335179\n",
              "4         Nottingham Forest        0.791694\n",
              "5                 Tottenham        1.181764\n",
              "6           Manchester City        1.225398\n",
              "7          Sheffield United        0.662180\n",
              "8                Luton Town        0.672047\n",
              "9                   Everton        0.863399\n",
              "10                Liverpool        1.094356\n",
              "11                  Arsenal        1.291545\n",
              "12              Aston Villa        1.153971\n",
              "13              Bournemouth        0.664821\n",
              "14                 West Ham        1.208306\n",
              "15  Wolverhampton Wanderers        0.818236\n",
              "16                  Chelsea        0.774602\n",
              "17                 Brighton        1.337820\n",
              "18        Manchester United        1.327953\n",
              "19           Crystal Palace        1.136601"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-9ec77936-0489-410e-8531-2359724fef76\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>team</th>\n",
              "      <th>gw25adjustment</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>Brentford</td>\n",
              "      <td>0.905644</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Burnley</td>\n",
              "      <td>0.708455</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>Fulham</td>\n",
              "      <td>0.846029</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>Newcastle United</td>\n",
              "      <td>1.335179</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>Nottingham Forest</td>\n",
              "      <td>0.791694</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>Tottenham</td>\n",
              "      <td>1.181764</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>Manchester City</td>\n",
              "      <td>1.225398</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>Sheffield United</td>\n",
              "      <td>0.662180</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>Luton Town</td>\n",
              "      <td>0.672047</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>Everton</td>\n",
              "      <td>0.863399</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10</th>\n",
              "      <td>Liverpool</td>\n",
              "      <td>1.094356</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>11</th>\n",
              "      <td>Arsenal</td>\n",
              "      <td>1.291545</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>12</th>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>1.153971</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>13</th>\n",
              "      <td>Bournemouth</td>\n",
              "      <td>0.664821</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>14</th>\n",
              "      <td>West Ham</td>\n",
              "      <td>1.208306</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>15</th>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>0.818236</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>16</th>\n",
              "      <td>Chelsea</td>\n",
              "      <td>0.774602</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>17</th>\n",
              "      <td>Brighton</td>\n",
              "      <td>1.337820</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>18</th>\n",
              "      <td>Manchester United</td>\n",
              "      <td>1.327953</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>19</th>\n",
              "      <td>Crystal Palace</td>\n",
              "      <td>1.136601</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-9ec77936-0489-410e-8531-2359724fef76')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-9ec77936-0489-410e-8531-2359724fef76 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-9ec77936-0489-410e-8531-2359724fef76');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-a8ee679b-272a-4bde-9684-13e1474ba1d1\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-a8ee679b-272a-4bde-9684-13e1474ba1d1')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-a8ee679b-272a-4bde-9684-13e1474ba1d1 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 32
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#gw5blanks = [['Chelsea', 0], ['Manchester United', 0], ['Manchester City', 0], ['Brighton', 0]]\n",
        "\n",
        "# Create the pandas DataFrame\n",
        "#blanks32 = pd.DataFrame(gw5blanks, columns=['team', 'gw5adjustment'])\n",
        "#blanks32"
      ],
      "metadata": {
        "id": "p00QYlZ7UbAu"
      },
      "execution_count": 33,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "#gw5adjustments = pd.concat([gw5adjustments, blanks32])\n",
        "#gw5adjustments = gw5adjustments.reset_index(drop=True)\n",
        "#gw5adjustments"
      ],
      "metadata": {
        "id": "xh_AhxKJU0VW"
      },
      "execution_count": 34,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "gw21= homesawayspi.query('Event==\"21.0\"')\n",
        "pd.options.mode.chained_assignment = None  # default='warn'\n",
        "PLSPI = spi.query('league==\"Barclays Premier League\"')\n",
        "PLSPI['League Average']  = PLSPI[\"spi\"].mean()\n",
        "laverage = PLSPI[\"spi\"].mean()\n",
        "PLSPI['League Average'].astype(int)\n",
        "gw21['League_Average']  = laverage\n",
        "gw21.rename(columns = {'Home SPI':'HomeSPI', 'Away SPI':'AwaySPI'}, inplace = True)\n",
        "gw21['home_difference'] = gw21.HomeSPI - gw21.League_Average\n",
        "gw21['away_difference'] = gw21.AwaySPI - gw21.League_Average\n",
        "gw21['home_adjustment'] = (gw21.home_difference - gw21.away_difference + gw21.League_Average)/gw21.League_Average\n",
        "gw21['away_adjustment'] = (gw21.away_difference - gw21.home_difference+ gw21.League_Average)/gw21.League_Average\n",
        "gw21adjustments = gw21[['team_h', 'home_adjustment']].append(gw21[['team_a','away_adjustment']].set_axis(['team_h', 'home_adjustment'], axis=1)).reset_index(drop=True)\n",
        "gw21adjustments.rename(columns = {'team_h':'team'}, inplace = True)\n",
        "gw21adjustments.rename(columns = {'home_adjustment':'gw21adjustment'}, inplace = True)\n",
        "gw21adjustments"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 711
        },
        "id": "OPB6Pz8sGZNe",
        "outputId": "cb93db3f-9acb-4934-f105-557afaff6f05"
      },
      "execution_count": 35,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "<ipython-input-35-2ad4e0fa35aa>:13: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  gw21adjustments = gw21[['team_h', 'home_adjustment']].append(gw21[['team_a','away_adjustment']].set_axis(['team_h', 'home_adjustment'], axis=1)).reset_index(drop=True)\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                       team  gw21adjustment\n",
              "0                   Chelsea        1.105056\n",
              "1          Newcastle United        0.884661\n",
              "2                   Everton        0.782245\n",
              "3         Manchester United        1.096440\n",
              "4                   Burnley        1.103667\n",
              "5                   Arsenal        1.145356\n",
              "6                 Brentford        1.291962\n",
              "7          Sheffield United        0.797809\n",
              "8               Bournemouth        0.661625\n",
              "9                  Brighton        1.303218\n",
              "10                   Fulham        0.894944\n",
              "11          Manchester City        1.115339\n",
              "12              Aston Villa        1.217755\n",
              "13                Tottenham        0.903560\n",
              "14               Luton Town        0.896333\n",
              "15           Crystal Palace        0.854644\n",
              "16        Nottingham Forest        0.708038\n",
              "17                 West Ham        1.202191\n",
              "18                Liverpool        1.338375\n",
              "19  Wolverhampton Wanderers        0.696782"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-e7da71b2-431c-429b-bfe6-53763aa18ca6\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>team</th>\n",
              "      <th>gw21adjustment</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>Chelsea</td>\n",
              "      <td>1.105056</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Newcastle United</td>\n",
              "      <td>0.884661</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>Everton</td>\n",
              "      <td>0.782245</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>Manchester United</td>\n",
              "      <td>1.096440</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>Burnley</td>\n",
              "      <td>1.103667</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>Arsenal</td>\n",
              "      <td>1.145356</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>Brentford</td>\n",
              "      <td>1.291962</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>Sheffield United</td>\n",
              "      <td>0.797809</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>Bournemouth</td>\n",
              "      <td>0.661625</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>Brighton</td>\n",
              "      <td>1.303218</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10</th>\n",
              "      <td>Fulham</td>\n",
              "      <td>0.894944</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>11</th>\n",
              "      <td>Manchester City</td>\n",
              "      <td>1.115339</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>12</th>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>1.217755</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>13</th>\n",
              "      <td>Tottenham</td>\n",
              "      <td>0.903560</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>14</th>\n",
              "      <td>Luton Town</td>\n",
              "      <td>0.896333</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>15</th>\n",
              "      <td>Crystal Palace</td>\n",
              "      <td>0.854644</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>16</th>\n",
              "      <td>Nottingham Forest</td>\n",
              "      <td>0.708038</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>17</th>\n",
              "      <td>West Ham</td>\n",
              "      <td>1.202191</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>18</th>\n",
              "      <td>Liverpool</td>\n",
              "      <td>1.338375</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>19</th>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>0.696782</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-e7da71b2-431c-429b-bfe6-53763aa18ca6')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-e7da71b2-431c-429b-bfe6-53763aa18ca6 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-e7da71b2-431c-429b-bfe6-53763aa18ca6');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-a8fb25fb-24dc-4b99-86e1-bf7f71e8ea46\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-a8fb25fb-24dc-4b99-86e1-bf7f71e8ea46')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-a8fb25fb-24dc-4b99-86e1-bf7f71e8ea46 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 35
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "gw22= homesawayspi.query('Event==\"22.0\"')\n",
        "pd.options.mode.chained_assignment = None  # default='warn'\n",
        "PLSPI = spi.query('league==\"Barclays Premier League\"')\n",
        "PLSPI['League Average']  = PLSPI[\"spi\"].mean()\n",
        "laverage = PLSPI[\"spi\"].mean()\n",
        "PLSPI['League Average'].astype(int)\n",
        "gw22['League_Average']  = laverage\n",
        "gw22.rename(columns = {'Home SPI':'HomeSPI', 'Away SPI':'AwaySPI'}, inplace = True)\n",
        "gw22['home_difference'] = gw22.HomeSPI - gw22.League_Average\n",
        "gw22['away_difference'] = gw22.AwaySPI - gw22.League_Average\n",
        "gw22['home_adjustment'] = (gw22.home_difference - gw22.away_difference + gw22.League_Average)/gw22.League_Average\n",
        "gw22['away_adjustment'] = (gw22.away_difference - gw22.home_difference+ gw22.League_Average)/gw22.League_Average\n",
        "gw22adjustments = gw22[['team_h', 'home_adjustment']].append(gw22[['team_a','away_adjustment']].set_axis(['team_h', 'home_adjustment'], axis=1)).reset_index(drop=True)\n",
        "gw22adjustments.rename(columns = {'team_h':'team'}, inplace = True)\n",
        "gw22adjustments.rename(columns = {'home_adjustment':'gw22adjustment'}, inplace = True)\n",
        "gw22adjustments = gw22adjustments.groupby('team', as_index=False)['gw22adjustment'].aggregate('sum')\n",
        "gw22adjustments"
      ],
      "metadata": {
        "id": "Ns7V93Gobs3z",
        "outputId": "d7deba70-de94-4c48-abfd-6eccd9c3f0f5",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 711
        }
      },
      "execution_count": 36,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "<ipython-input-36-82067015817a>:13: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  gw22adjustments = gw22[['team_h', 'home_adjustment']].append(gw22[['team_a','away_adjustment']].set_axis(['team_h', 'home_adjustment'], axis=1)).reset_index(drop=True)\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                       team  gw22adjustment\n",
              "0                   Arsenal        1.386179\n",
              "1               Aston Villa        0.938856\n",
              "2               Bournemouth        0.839636\n",
              "3                 Brentford        1.069482\n",
              "4                  Brighton        1.352967\n",
              "5                   Burnley        0.596173\n",
              "6                   Chelsea        0.886745\n",
              "7            Crystal Palace        1.234709\n",
              "8                   Everton        0.936216\n",
              "9                    Fulham        1.063784\n",
              "10                Liverpool        1.113255\n",
              "11               Luton Town        0.647033\n",
              "12          Manchester City        1.403827\n",
              "13        Manchester United        1.278204\n",
              "14         Newcastle United        1.061144\n",
              "15        Nottingham Forest        0.613821\n",
              "16         Sheffield United        0.765291\n",
              "17                Tottenham        0.930518\n",
              "18                 West Ham        1.160364\n",
              "19  Wolverhampton Wanderers        0.721796"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-97172995-752b-415a-9a3b-fa34ba63d0b4\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>team</th>\n",
              "      <th>gw22adjustment</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>Arsenal</td>\n",
              "      <td>1.386179</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>0.938856</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>Bournemouth</td>\n",
              "      <td>0.839636</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>Brentford</td>\n",
              "      <td>1.069482</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>Brighton</td>\n",
              "      <td>1.352967</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>Burnley</td>\n",
              "      <td>0.596173</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>Chelsea</td>\n",
              "      <td>0.886745</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>Crystal Palace</td>\n",
              "      <td>1.234709</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>Everton</td>\n",
              "      <td>0.936216</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>Fulham</td>\n",
              "      <td>1.063784</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10</th>\n",
              "      <td>Liverpool</td>\n",
              "      <td>1.113255</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>11</th>\n",
              "      <td>Luton Town</td>\n",
              "      <td>0.647033</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>12</th>\n",
              "      <td>Manchester City</td>\n",
              "      <td>1.403827</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>13</th>\n",
              "      <td>Manchester United</td>\n",
              "      <td>1.278204</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>14</th>\n",
              "      <td>Newcastle United</td>\n",
              "      <td>1.061144</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>15</th>\n",
              "      <td>Nottingham Forest</td>\n",
              "      <td>0.613821</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>16</th>\n",
              "      <td>Sheffield United</td>\n",
              "      <td>0.765291</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>17</th>\n",
              "      <td>Tottenham</td>\n",
              "      <td>0.930518</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>18</th>\n",
              "      <td>West Ham</td>\n",
              "      <td>1.160364</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>19</th>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>0.721796</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-97172995-752b-415a-9a3b-fa34ba63d0b4')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-97172995-752b-415a-9a3b-fa34ba63d0b4 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-97172995-752b-415a-9a3b-fa34ba63d0b4');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-73d4732a-aaed-4f76-a0ed-f2f350b03ab9\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-73d4732a-aaed-4f76-a0ed-f2f350b03ab9')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-73d4732a-aaed-4f76-a0ed-f2f350b03ab9 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 36
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "\n",
        "gw23= homesawayspi.query('Event==\"23.0\"')\n",
        "pd.options.mode.chained_assignment = None  # default='warn'\n",
        "PLSPI = spi.query('league==\"Barclays Premier League\"')\n",
        "PLSPI['League Average']  = PLSPI[\"spi\"].mean()\n",
        "laverage = PLSPI[\"spi\"].mean()\n",
        "PLSPI['League Average'].astype(int)\n",
        "gw23['League_Average']  = laverage\n",
        "gw23.rename(columns = {'Home SPI':'HomeSPI', 'Away SPI':'AwaySPI'}, inplace = True)\n",
        "gw23['home_difference'] = gw23.HomeSPI - gw23.League_Average\n",
        "gw23['away_difference'] = gw23.AwaySPI - gw23.League_Average\n",
        "gw23['home_adjustment'] = (gw23.home_difference - gw23.away_difference + gw23.League_Average)/gw23.League_Average\n",
        "gw23['away_adjustment'] = (gw23.away_difference - gw23.home_difference+ gw23.League_Average)/gw23.League_Average\n",
        "gw23adjustments = gw23[['team_h', 'home_adjustment']].append(gw23[['team_a','away_adjustment']].set_axis(['team_h', 'home_adjustment'], axis=1)).reset_index(drop=True)\n",
        "gw23adjustments.rename(columns = {'team_h':'team'}, inplace = True)\n",
        "gw23adjustments.rename(columns = {'home_adjustment':'gw23adjustment'}, inplace = True)\n",
        "gw23adjustments"
      ],
      "metadata": {
        "id": "wlvV4OeQb34Z",
        "outputId": "40832072-9df2-4c83-fc91-72d552632846",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 711
        }
      },
      "execution_count": 37,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "<ipython-input-37-fbb78387e832>:13: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  gw23adjustments = gw23[['team_h', 'home_adjustment']].append(gw23[['team_a','away_adjustment']].set_axis(['team_h', 'home_adjustment'], axis=1)).reset_index(drop=True)\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                       team  gw23adjustment\n",
              "0                   Everton        0.881742\n",
              "1                  Brighton        1.103111\n",
              "2                   Burnley        0.926627\n",
              "3          Newcastle United        1.392154\n",
              "4          Sheffield United        0.684137\n",
              "5               Bournemouth        1.047942\n",
              "6                   Chelsea        1.232346\n",
              "7         Manchester United        1.110615\n",
              "8                   Arsenal        0.999861\n",
              "9                 Brentford        0.793501\n",
              "10                Tottenham        1.118258\n",
              "11           Crystal Palace        0.896889\n",
              "12                   Fulham        1.073373\n",
              "13               Luton Town        0.607846\n",
              "14              Aston Villa        1.315863\n",
              "15        Nottingham Forest        0.952058\n",
              "16  Wolverhampton Wanderers        0.767654\n",
              "17                 West Ham        0.889385\n",
              "18                Liverpool        1.000139\n",
              "19          Manchester City        1.206499"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-c5fafbb4-64d4-4683-91e6-48cb10f31f19\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>team</th>\n",
              "      <th>gw23adjustment</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>Everton</td>\n",
              "      <td>0.881742</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Brighton</td>\n",
              "      <td>1.103111</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>Burnley</td>\n",
              "      <td>0.926627</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>Newcastle United</td>\n",
              "      <td>1.392154</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>Sheffield United</td>\n",
              "      <td>0.684137</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>Bournemouth</td>\n",
              "      <td>1.047942</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>Chelsea</td>\n",
              "      <td>1.232346</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>Manchester United</td>\n",
              "      <td>1.110615</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>Arsenal</td>\n",
              "      <td>0.999861</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>Brentford</td>\n",
              "      <td>0.793501</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10</th>\n",
              "      <td>Tottenham</td>\n",
              "      <td>1.118258</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>11</th>\n",
              "      <td>Crystal Palace</td>\n",
              "      <td>0.896889</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>12</th>\n",
              "      <td>Fulham</td>\n",
              "      <td>1.073373</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>13</th>\n",
              "      <td>Luton Town</td>\n",
              "      <td>0.607846</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>14</th>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>1.315863</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>15</th>\n",
              "      <td>Nottingham Forest</td>\n",
              "      <td>0.952058</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>16</th>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>0.767654</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>17</th>\n",
              "      <td>West Ham</td>\n",
              "      <td>0.889385</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>18</th>\n",
              "      <td>Liverpool</td>\n",
              "      <td>1.000139</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>19</th>\n",
              "      <td>Manchester City</td>\n",
              "      <td>1.206499</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-c5fafbb4-64d4-4683-91e6-48cb10f31f19')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-c5fafbb4-64d4-4683-91e6-48cb10f31f19 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-c5fafbb4-64d4-4683-91e6-48cb10f31f19');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-b544ae7a-635b-41c5-b93e-c8f4ffdbee11\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-b544ae7a-635b-41c5-b93e-c8f4ffdbee11')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-b544ae7a-635b-41c5-b93e-c8f4ffdbee11 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 37
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "gw18blanks = [['Brentford', 0], ['Manchester City', 0]]\n",
        "\n",
        "# Create the pandas DataFrame\n",
        "blanks18 = pd.DataFrame(gw18blanks, columns=['team', 'gw18adjustment'])\n",
        "blanks18"
      ],
      "metadata": {
        "id": "1jYqDQfTYSo9",
        "outputId": "0476c0e9-443a-4733-d839-b189c9101a25",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 112
        }
      },
      "execution_count": 38,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "              team  gw18adjustment\n",
              "0        Brentford               0\n",
              "1  Manchester City               0"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-aa3fb974-4793-453d-bfdc-706986158e90\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>team</th>\n",
              "      <th>gw18adjustment</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>Brentford</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Manchester City</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-aa3fb974-4793-453d-bfdc-706986158e90')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-aa3fb974-4793-453d-bfdc-706986158e90 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-aa3fb974-4793-453d-bfdc-706986158e90');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-de5625d7-43f0-4d7b-a200-76bfc54438b1\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-de5625d7-43f0-4d7b-a200-76bfc54438b1')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-de5625d7-43f0-4d7b-a200-76bfc54438b1 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 38
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#gw18adjustments = pd.concat([gw18adjustments, blanks18])\n",
        "#gw18adjustments = gw18adjustments.reset_index(drop=True)\n",
        "#gw18adjustments"
      ],
      "metadata": {
        "id": "6Bcop9gVZCW7"
      },
      "execution_count": 39,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "gwadjustments2125 = pd.merge(gw21adjustments,gw22adjustments, on ='team')\n",
        "gwadjustments2125 = pd.merge(gwadjustments2125,gw23adjustments, on ='team')\n",
        "gwadjustments2125 = pd.merge(gwadjustments2125,gw24adjustments, on ='team')\n",
        "gwadjustments2125 = pd.merge(gwadjustments2125,gw25adjustments, on ='team')\n",
        "gwadjustments2125"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 677
        },
        "id": "P6_WVsnNkztJ",
        "outputId": "c511d8e6-8030-4c87-ec49-2f7b5ed2e1a0"
      },
      "execution_count": 40,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                       team  gw21adjustment  gw22adjustment  gw23adjustment  \\\n",
              "0                   Chelsea        1.105056        0.886745        1.232346   \n",
              "1          Newcastle United        0.884661        1.061144        1.392154   \n",
              "2                   Everton        0.782245        0.936216        0.881742   \n",
              "3         Manchester United        1.096440        1.278204        1.110615   \n",
              "4                   Burnley        1.103667        0.596173        0.926627   \n",
              "5                   Arsenal        1.145356        1.386179        0.999861   \n",
              "6                 Brentford        1.291962        1.069482        0.793501   \n",
              "7          Sheffield United        0.797809        0.765291        0.684137   \n",
              "8               Bournemouth        0.661625        0.839636        1.047942   \n",
              "9                  Brighton        1.303218        1.352967        1.103111   \n",
              "10                   Fulham        0.894944        1.063784        1.073373   \n",
              "11          Manchester City        1.115339        1.403827        1.206499   \n",
              "12              Aston Villa        1.217755        0.938856        1.315863   \n",
              "13                Tottenham        0.903560        0.930518        1.118258   \n",
              "14               Luton Town        0.896333        0.647033        0.607846   \n",
              "15           Crystal Palace        0.854644        1.234709        0.896889   \n",
              "16        Nottingham Forest        0.708038        0.613821        0.952058   \n",
              "17                 West Ham        1.202191        1.160364        0.889385   \n",
              "18                Liverpool        1.338375        1.113255        1.000139   \n",
              "19  Wolverhampton Wanderers        0.696782        0.721796        0.767654   \n",
              "\n",
              "    gw24adjustment  gw25adjustment  \n",
              "0         1.032239        0.774602  \n",
              "1         1.383122        1.335179  \n",
              "2         0.605761        0.863399  \n",
              "3         0.996943        1.327953  \n",
              "4         0.708316        0.708455  \n",
              "5         1.177873        1.291545  \n",
              "6         1.251245        0.905644  \n",
              "7         1.015147        0.662180  \n",
              "8         0.879936        0.664821  \n",
              "9         1.121454        1.337820  \n",
              "10        1.120064        0.846029  \n",
              "11        1.394239        1.225398  \n",
              "12        1.003057        1.153971  \n",
              "13        0.878546        1.181764  \n",
              "14        0.984853        0.672047  \n",
              "15        0.967761        1.136601  \n",
              "16        0.616878        0.791694  \n",
              "17        0.822127        1.208306  \n",
              "18        1.291684        1.094356  \n",
              "19        0.748755        0.818236  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-13092f6e-b615-4d3b-80d2-8eb5f5fb1aba\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>team</th>\n",
              "      <th>gw21adjustment</th>\n",
              "      <th>gw22adjustment</th>\n",
              "      <th>gw23adjustment</th>\n",
              "      <th>gw24adjustment</th>\n",
              "      <th>gw25adjustment</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>Chelsea</td>\n",
              "      <td>1.105056</td>\n",
              "      <td>0.886745</td>\n",
              "      <td>1.232346</td>\n",
              "      <td>1.032239</td>\n",
              "      <td>0.774602</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Newcastle United</td>\n",
              "      <td>0.884661</td>\n",
              "      <td>1.061144</td>\n",
              "      <td>1.392154</td>\n",
              "      <td>1.383122</td>\n",
              "      <td>1.335179</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>Everton</td>\n",
              "      <td>0.782245</td>\n",
              "      <td>0.936216</td>\n",
              "      <td>0.881742</td>\n",
              "      <td>0.605761</td>\n",
              "      <td>0.863399</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>Manchester United</td>\n",
              "      <td>1.096440</td>\n",
              "      <td>1.278204</td>\n",
              "      <td>1.110615</td>\n",
              "      <td>0.996943</td>\n",
              "      <td>1.327953</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>Burnley</td>\n",
              "      <td>1.103667</td>\n",
              "      <td>0.596173</td>\n",
              "      <td>0.926627</td>\n",
              "      <td>0.708316</td>\n",
              "      <td>0.708455</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>Arsenal</td>\n",
              "      <td>1.145356</td>\n",
              "      <td>1.386179</td>\n",
              "      <td>0.999861</td>\n",
              "      <td>1.177873</td>\n",
              "      <td>1.291545</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>Brentford</td>\n",
              "      <td>1.291962</td>\n",
              "      <td>1.069482</td>\n",
              "      <td>0.793501</td>\n",
              "      <td>1.251245</td>\n",
              "      <td>0.905644</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>Sheffield United</td>\n",
              "      <td>0.797809</td>\n",
              "      <td>0.765291</td>\n",
              "      <td>0.684137</td>\n",
              "      <td>1.015147</td>\n",
              "      <td>0.662180</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>Bournemouth</td>\n",
              "      <td>0.661625</td>\n",
              "      <td>0.839636</td>\n",
              "      <td>1.047942</td>\n",
              "      <td>0.879936</td>\n",
              "      <td>0.664821</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>Brighton</td>\n",
              "      <td>1.303218</td>\n",
              "      <td>1.352967</td>\n",
              "      <td>1.103111</td>\n",
              "      <td>1.121454</td>\n",
              "      <td>1.337820</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10</th>\n",
              "      <td>Fulham</td>\n",
              "      <td>0.894944</td>\n",
              "      <td>1.063784</td>\n",
              "      <td>1.073373</td>\n",
              "      <td>1.120064</td>\n",
              "      <td>0.846029</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>11</th>\n",
              "      <td>Manchester City</td>\n",
              "      <td>1.115339</td>\n",
              "      <td>1.403827</td>\n",
              "      <td>1.206499</td>\n",
              "      <td>1.394239</td>\n",
              "      <td>1.225398</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>12</th>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>1.217755</td>\n",
              "      <td>0.938856</td>\n",
              "      <td>1.315863</td>\n",
              "      <td>1.003057</td>\n",
              "      <td>1.153971</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>13</th>\n",
              "      <td>Tottenham</td>\n",
              "      <td>0.903560</td>\n",
              "      <td>0.930518</td>\n",
              "      <td>1.118258</td>\n",
              "      <td>0.878546</td>\n",
              "      <td>1.181764</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>14</th>\n",
              "      <td>Luton Town</td>\n",
              "      <td>0.896333</td>\n",
              "      <td>0.647033</td>\n",
              "      <td>0.607846</td>\n",
              "      <td>0.984853</td>\n",
              "      <td>0.672047</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>15</th>\n",
              "      <td>Crystal Palace</td>\n",
              "      <td>0.854644</td>\n",
              "      <td>1.234709</td>\n",
              "      <td>0.896889</td>\n",
              "      <td>0.967761</td>\n",
              "      <td>1.136601</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>16</th>\n",
              "      <td>Nottingham Forest</td>\n",
              "      <td>0.708038</td>\n",
              "      <td>0.613821</td>\n",
              "      <td>0.952058</td>\n",
              "      <td>0.616878</td>\n",
              "      <td>0.791694</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>17</th>\n",
              "      <td>West Ham</td>\n",
              "      <td>1.202191</td>\n",
              "      <td>1.160364</td>\n",
              "      <td>0.889385</td>\n",
              "      <td>0.822127</td>\n",
              "      <td>1.208306</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>18</th>\n",
              "      <td>Liverpool</td>\n",
              "      <td>1.338375</td>\n",
              "      <td>1.113255</td>\n",
              "      <td>1.000139</td>\n",
              "      <td>1.291684</td>\n",
              "      <td>1.094356</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>19</th>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>0.696782</td>\n",
              "      <td>0.721796</td>\n",
              "      <td>0.767654</td>\n",
              "      <td>0.748755</td>\n",
              "      <td>0.818236</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-13092f6e-b615-4d3b-80d2-8eb5f5fb1aba')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-13092f6e-b615-4d3b-80d2-8eb5f5fb1aba button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-13092f6e-b615-4d3b-80d2-8eb5f5fb1aba');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-791f35ea-ebd8-448f-9f6a-aa286336075a\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-791f35ea-ebd8-448f-9f6a-aa286336075a')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-791f35ea-ebd8-448f-9f6a-aa286336075a button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 40
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "rawdfgw228x = pd.merge(rawallplayersallgw,\n",
        "                     gwadjustments2125,\n",
        "                     on ='team',\n",
        "                     how ='left')\n",
        "rawdfgw228x.rename(columns = {'gw14adjustment_y':'gw14adjustment'}, inplace = True)\n",
        "rawdfgw228x = rawdfgw228x.round(1)\n",
        "rawdfgw228x"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 513
        },
        "id": "-b-0jux2PKIX",
        "outputId": "64017000-cff2-4719-9dec-038f14a9404a"
      },
      "execution_count": 41,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "      id                     team pos     name  cost  selected_by_percent  \\\n",
              "0      1                  Arsenal   F  Balogun   4.4                  0.2   \n",
              "1      8                  Arsenal   F  G.Jesus   8.0                  5.4   \n",
              "2     13                  Arsenal   F  Nketiah   5.3                  4.5   \n",
              "3     39              Aston Villa   F    Davis   4.9                  0.1   \n",
              "4     44              Aston Villa   F    Duran   5.0                  0.2   \n",
              "..   ...                      ...  ..      ...   ...                  ...   \n",
              "768  647                 West Ham   G    Anang   4.0                  0.1   \n",
              "769  546  Wolverhampton Wanderers   G  Bentley   3.9                  1.2   \n",
              "770  564  Wolverhampton Wanderers   G     King   3.9                  0.7   \n",
              "771  569  Wolverhampton Wanderers   G  José Sá   5.0                  1.4   \n",
              "772  571  Wolverhampton Wanderers   G   Šarkić   4.0                  0.3   \n",
              "\n",
              "     goals_scored  assists  bps  ict_index  ...  points_per_game  minutes  \\\n",
              "0               0        0    0        0.0  ...              0.0        0   \n",
              "1               3        2  153       95.0  ...              3.2      934   \n",
              "2               5        3  180       65.4  ...              3.2      958   \n",
              "3               0        0    0        0.0  ...              0.0        0   \n",
              "4               2        1   77       17.7  ...              1.8      148   \n",
              "..            ...      ...  ...        ...  ...              ...      ...   \n",
              "768             0        0    0        0.0  ...              0.0        0   \n",
              "769             0        0   60        5.7  ...              5.3      247   \n",
              "770             0        0    0        0.0  ...              0.0        0   \n",
              "771             0        0  288       39.9  ...              2.9     1552   \n",
              "772             0        0    0        0.0  ...              0.0        0   \n",
              "\n",
              "     home_adjustment  xPallgw  xCSP  gw21adjustment  gw22adjustment  \\\n",
              "0                1.2      2.0   NaN             1.1             1.4   \n",
              "1                1.2      3.2   NaN             1.1             1.4   \n",
              "2                1.2      2.9   NaN             1.1             1.4   \n",
              "3                1.1      2.0   NaN             1.2             0.9   \n",
              "4                1.1      2.2   NaN             1.2             0.9   \n",
              "..               ...      ...   ...             ...             ...   \n",
              "768              1.0      2.0  -0.0             1.2             1.2   \n",
              "769              0.8      2.1   0.1             0.7             0.7   \n",
              "770              0.8      2.1   0.1             0.7             0.7   \n",
              "771              0.8      2.1   0.1             0.7             0.7   \n",
              "772              0.8      2.1   0.1             0.7             0.7   \n",
              "\n",
              "     gw23adjustment  gw24adjustment  gw25adjustment  \n",
              "0               1.0             1.2             1.3  \n",
              "1               1.0             1.2             1.3  \n",
              "2               1.0             1.2             1.3  \n",
              "3               1.3             1.0             1.2  \n",
              "4               1.3             1.0             1.2  \n",
              "..              ...             ...             ...  \n",
              "768             0.9             0.8             1.2  \n",
              "769             0.8             0.7             0.8  \n",
              "770             0.8             0.7             0.8  \n",
              "771             0.8             0.7             0.8  \n",
              "772             0.8             0.7             0.8  \n",
              "\n",
              "[773 rows x 21 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-841378a1-a1e5-4e51-b1bf-a51b6a32134f\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>team</th>\n",
              "      <th>pos</th>\n",
              "      <th>name</th>\n",
              "      <th>cost</th>\n",
              "      <th>selected_by_percent</th>\n",
              "      <th>goals_scored</th>\n",
              "      <th>assists</th>\n",
              "      <th>bps</th>\n",
              "      <th>ict_index</th>\n",
              "      <th>...</th>\n",
              "      <th>points_per_game</th>\n",
              "      <th>minutes</th>\n",
              "      <th>home_adjustment</th>\n",
              "      <th>xPallgw</th>\n",
              "      <th>xCSP</th>\n",
              "      <th>gw21adjustment</th>\n",
              "      <th>gw22adjustment</th>\n",
              "      <th>gw23adjustment</th>\n",
              "      <th>gw24adjustment</th>\n",
              "      <th>gw25adjustment</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>1</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>F</td>\n",
              "      <td>Balogun</td>\n",
              "      <td>4.4</td>\n",
              "      <td>0.2</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>1.2</td>\n",
              "      <td>2.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1.1</td>\n",
              "      <td>1.4</td>\n",
              "      <td>1.0</td>\n",
              "      <td>1.2</td>\n",
              "      <td>1.3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>8</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>F</td>\n",
              "      <td>G.Jesus</td>\n",
              "      <td>8.0</td>\n",
              "      <td>5.4</td>\n",
              "      <td>3</td>\n",
              "      <td>2</td>\n",
              "      <td>153</td>\n",
              "      <td>95.0</td>\n",
              "      <td>...</td>\n",
              "      <td>3.2</td>\n",
              "      <td>934</td>\n",
              "      <td>1.2</td>\n",
              "      <td>3.2</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1.1</td>\n",
              "      <td>1.4</td>\n",
              "      <td>1.0</td>\n",
              "      <td>1.2</td>\n",
              "      <td>1.3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>13</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>F</td>\n",
              "      <td>Nketiah</td>\n",
              "      <td>5.3</td>\n",
              "      <td>4.5</td>\n",
              "      <td>5</td>\n",
              "      <td>3</td>\n",
              "      <td>180</td>\n",
              "      <td>65.4</td>\n",
              "      <td>...</td>\n",
              "      <td>3.2</td>\n",
              "      <td>958</td>\n",
              "      <td>1.2</td>\n",
              "      <td>2.9</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1.1</td>\n",
              "      <td>1.4</td>\n",
              "      <td>1.0</td>\n",
              "      <td>1.2</td>\n",
              "      <td>1.3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>39</td>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>F</td>\n",
              "      <td>Davis</td>\n",
              "      <td>4.9</td>\n",
              "      <td>0.1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>1.1</td>\n",
              "      <td>2.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1.2</td>\n",
              "      <td>0.9</td>\n",
              "      <td>1.3</td>\n",
              "      <td>1.0</td>\n",
              "      <td>1.2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>44</td>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>F</td>\n",
              "      <td>Duran</td>\n",
              "      <td>5.0</td>\n",
              "      <td>0.2</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>77</td>\n",
              "      <td>17.7</td>\n",
              "      <td>...</td>\n",
              "      <td>1.8</td>\n",
              "      <td>148</td>\n",
              "      <td>1.1</td>\n",
              "      <td>2.2</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1.2</td>\n",
              "      <td>0.9</td>\n",
              "      <td>1.3</td>\n",
              "      <td>1.0</td>\n",
              "      <td>1.2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>768</th>\n",
              "      <td>647</td>\n",
              "      <td>West Ham</td>\n",
              "      <td>G</td>\n",
              "      <td>Anang</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>2.0</td>\n",
              "      <td>-0.0</td>\n",
              "      <td>1.2</td>\n",
              "      <td>1.2</td>\n",
              "      <td>0.9</td>\n",
              "      <td>0.8</td>\n",
              "      <td>1.2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>769</th>\n",
              "      <td>546</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>G</td>\n",
              "      <td>Bentley</td>\n",
              "      <td>3.9</td>\n",
              "      <td>1.2</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>60</td>\n",
              "      <td>5.7</td>\n",
              "      <td>...</td>\n",
              "      <td>5.3</td>\n",
              "      <td>247</td>\n",
              "      <td>0.8</td>\n",
              "      <td>2.1</td>\n",
              "      <td>0.1</td>\n",
              "      <td>0.7</td>\n",
              "      <td>0.7</td>\n",
              "      <td>0.8</td>\n",
              "      <td>0.7</td>\n",
              "      <td>0.8</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>770</th>\n",
              "      <td>564</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>G</td>\n",
              "      <td>King</td>\n",
              "      <td>3.9</td>\n",
              "      <td>0.7</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.8</td>\n",
              "      <td>2.1</td>\n",
              "      <td>0.1</td>\n",
              "      <td>0.7</td>\n",
              "      <td>0.7</td>\n",
              "      <td>0.8</td>\n",
              "      <td>0.7</td>\n",
              "      <td>0.8</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>771</th>\n",
              "      <td>569</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>G</td>\n",
              "      <td>José Sá</td>\n",
              "      <td>5.0</td>\n",
              "      <td>1.4</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>288</td>\n",
              "      <td>39.9</td>\n",
              "      <td>...</td>\n",
              "      <td>2.9</td>\n",
              "      <td>1552</td>\n",
              "      <td>0.8</td>\n",
              "      <td>2.1</td>\n",
              "      <td>0.1</td>\n",
              "      <td>0.7</td>\n",
              "      <td>0.7</td>\n",
              "      <td>0.8</td>\n",
              "      <td>0.7</td>\n",
              "      <td>0.8</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>772</th>\n",
              "      <td>571</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>G</td>\n",
              "      <td>Šarkić</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.3</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.8</td>\n",
              "      <td>2.1</td>\n",
              "      <td>0.1</td>\n",
              "      <td>0.7</td>\n",
              "      <td>0.7</td>\n",
              "      <td>0.8</td>\n",
              "      <td>0.7</td>\n",
              "      <td>0.8</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>773 rows × 21 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-841378a1-a1e5-4e51-b1bf-a51b6a32134f')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-841378a1-a1e5-4e51-b1bf-a51b6a32134f button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-841378a1-a1e5-4e51-b1bf-a51b6a32134f');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-c5189654-fa9b-4f97-b922-709c5b2dc31b\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-c5189654-fa9b-4f97-b922-709c5b2dc31b')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-c5189654-fa9b-4f97-b922-709c5b2dc31b button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 41
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#gw3adjustments = gw3adjustments.groupby('team', as_index=False)['gw3adjustment'].aggregate('sum')\n",
        "#gw3adjustments"
      ],
      "metadata": {
        "id": "6x3Lj7jPTCVC"
      },
      "execution_count": 42,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "rawdfgw228x['gw21'] = (((rawdfgw228x.xPallgw - 2)*rawdfgw228x.gw21adjustment)+2)\n",
        "rawdfgw228x['gw22'] = (((rawdfgw228x.xPallgw - 2)*rawdfgw228x.gw22adjustment)+2)\n",
        "rawdfgw228x['gw23'] = (((rawdfgw228x.xPallgw - 2)*rawdfgw228x.gw23adjustment)+2)\n",
        "rawdfgw228x['gw24'] = (((rawdfgw228x.xPallgw - 2)*rawdfgw228x.gw24adjustment)+2)\n",
        "rawdfgw228x['gw25'] = (((rawdfgw228x.xPallgw - 2)*rawdfgw228x.gw25adjustment)+2)\n",
        "\n",
        "rawdfgw228x['5GW Total'] = rawdfgw228x.gw22 + rawdfgw228x.gw23 + rawdfgw228x.gw24 + rawdfgw228x.gw25 + rawdfgw228x.gw21\n",
        "rawdfgw228x['3GW Total'] = rawdfgw228x.gw21 + rawdfgw228x.gw22 + rawdfgw228x.gw23\n",
        "rawdfgw228x = rawdfgw228x.drop(columns=[\n",
        "  'gw22adjustment',\n",
        "  'gw23adjustment',\n",
        "  'gw24adjustment',\n",
        "  'gw25adjustment',\n",
        "  'gw21adjustment'\n",
        "  ])\n",
        "rawdfgw228x"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 424
        },
        "id": "Dgw1xB0YUN9D",
        "outputId": "3e2929fd-14e7-4d44-daf7-832fb45dacf7"
      },
      "execution_count": 43,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "      id                     team pos     name  cost  selected_by_percent  \\\n",
              "0      1                  Arsenal   F  Balogun   4.4                  0.2   \n",
              "1      8                  Arsenal   F  G.Jesus   8.0                  5.4   \n",
              "2     13                  Arsenal   F  Nketiah   5.3                  4.5   \n",
              "3     39              Aston Villa   F    Davis   4.9                  0.1   \n",
              "4     44              Aston Villa   F    Duran   5.0                  0.2   \n",
              "..   ...                      ...  ..      ...   ...                  ...   \n",
              "768  647                 West Ham   G    Anang   4.0                  0.1   \n",
              "769  546  Wolverhampton Wanderers   G  Bentley   3.9                  1.2   \n",
              "770  564  Wolverhampton Wanderers   G     King   3.9                  0.7   \n",
              "771  569  Wolverhampton Wanderers   G  José Sá   5.0                  1.4   \n",
              "772  571  Wolverhampton Wanderers   G   Šarkić   4.0                  0.3   \n",
              "\n",
              "     goals_scored  assists  bps  ict_index  ...  home_adjustment  xPallgw  \\\n",
              "0               0        0    0        0.0  ...              1.2      2.0   \n",
              "1               3        2  153       95.0  ...              1.2      3.2   \n",
              "2               5        3  180       65.4  ...              1.2      2.9   \n",
              "3               0        0    0        0.0  ...              1.1      2.0   \n",
              "4               2        1   77       17.7  ...              1.1      2.2   \n",
              "..            ...      ...  ...        ...  ...              ...      ...   \n",
              "768             0        0    0        0.0  ...              1.0      2.0   \n",
              "769             0        0   60        5.7  ...              0.8      2.1   \n",
              "770             0        0    0        0.0  ...              0.8      2.1   \n",
              "771             0        0  288       39.9  ...              0.8      2.1   \n",
              "772             0        0    0        0.0  ...              0.8      2.1   \n",
              "\n",
              "     xCSP  gw21  gw22  gw23  gw24  gw25  5GW Total  3GW Total  \n",
              "0     NaN  2.00  2.00  2.00  2.00  2.00      10.00       6.00  \n",
              "1     NaN  3.32  3.68  3.20  3.44  3.56      17.20      10.20  \n",
              "2     NaN  2.99  3.26  2.90  3.08  3.17      15.40       9.15  \n",
              "3     NaN  2.00  2.00  2.00  2.00  2.00      10.00       6.00  \n",
              "4     NaN  2.24  2.18  2.26  2.20  2.24      11.12       6.68  \n",
              "..    ...   ...   ...   ...   ...   ...        ...        ...  \n",
              "768  -0.0  2.00  2.00  2.00  2.00  2.00      10.00       6.00  \n",
              "769   0.1  2.07  2.07  2.08  2.07  2.08      10.37       6.22  \n",
              "770   0.1  2.07  2.07  2.08  2.07  2.08      10.37       6.22  \n",
              "771   0.1  2.07  2.07  2.08  2.07  2.08      10.37       6.22  \n",
              "772   0.1  2.07  2.07  2.08  2.07  2.08      10.37       6.22  \n",
              "\n",
              "[773 rows x 23 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-0b824245-80f4-4cec-8414-c21cd0a49c9b\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>team</th>\n",
              "      <th>pos</th>\n",
              "      <th>name</th>\n",
              "      <th>cost</th>\n",
              "      <th>selected_by_percent</th>\n",
              "      <th>goals_scored</th>\n",
              "      <th>assists</th>\n",
              "      <th>bps</th>\n",
              "      <th>ict_index</th>\n",
              "      <th>...</th>\n",
              "      <th>home_adjustment</th>\n",
              "      <th>xPallgw</th>\n",
              "      <th>xCSP</th>\n",
              "      <th>gw21</th>\n",
              "      <th>gw22</th>\n",
              "      <th>gw23</th>\n",
              "      <th>gw24</th>\n",
              "      <th>gw25</th>\n",
              "      <th>5GW Total</th>\n",
              "      <th>3GW Total</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>1</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>F</td>\n",
              "      <td>Balogun</td>\n",
              "      <td>4.4</td>\n",
              "      <td>0.2</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>1.2</td>\n",
              "      <td>2.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>10.00</td>\n",
              "      <td>6.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>8</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>F</td>\n",
              "      <td>G.Jesus</td>\n",
              "      <td>8.0</td>\n",
              "      <td>5.4</td>\n",
              "      <td>3</td>\n",
              "      <td>2</td>\n",
              "      <td>153</td>\n",
              "      <td>95.0</td>\n",
              "      <td>...</td>\n",
              "      <td>1.2</td>\n",
              "      <td>3.2</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.32</td>\n",
              "      <td>3.68</td>\n",
              "      <td>3.20</td>\n",
              "      <td>3.44</td>\n",
              "      <td>3.56</td>\n",
              "      <td>17.20</td>\n",
              "      <td>10.20</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>13</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>F</td>\n",
              "      <td>Nketiah</td>\n",
              "      <td>5.3</td>\n",
              "      <td>4.5</td>\n",
              "      <td>5</td>\n",
              "      <td>3</td>\n",
              "      <td>180</td>\n",
              "      <td>65.4</td>\n",
              "      <td>...</td>\n",
              "      <td>1.2</td>\n",
              "      <td>2.9</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2.99</td>\n",
              "      <td>3.26</td>\n",
              "      <td>2.90</td>\n",
              "      <td>3.08</td>\n",
              "      <td>3.17</td>\n",
              "      <td>15.40</td>\n",
              "      <td>9.15</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>39</td>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>F</td>\n",
              "      <td>Davis</td>\n",
              "      <td>4.9</td>\n",
              "      <td>0.1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>1.1</td>\n",
              "      <td>2.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>10.00</td>\n",
              "      <td>6.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>44</td>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>F</td>\n",
              "      <td>Duran</td>\n",
              "      <td>5.0</td>\n",
              "      <td>0.2</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>77</td>\n",
              "      <td>17.7</td>\n",
              "      <td>...</td>\n",
              "      <td>1.1</td>\n",
              "      <td>2.2</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2.24</td>\n",
              "      <td>2.18</td>\n",
              "      <td>2.26</td>\n",
              "      <td>2.20</td>\n",
              "      <td>2.24</td>\n",
              "      <td>11.12</td>\n",
              "      <td>6.68</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>768</th>\n",
              "      <td>647</td>\n",
              "      <td>West Ham</td>\n",
              "      <td>G</td>\n",
              "      <td>Anang</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>1.0</td>\n",
              "      <td>2.0</td>\n",
              "      <td>-0.0</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>10.00</td>\n",
              "      <td>6.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>769</th>\n",
              "      <td>546</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>G</td>\n",
              "      <td>Bentley</td>\n",
              "      <td>3.9</td>\n",
              "      <td>1.2</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>60</td>\n",
              "      <td>5.7</td>\n",
              "      <td>...</td>\n",
              "      <td>0.8</td>\n",
              "      <td>2.1</td>\n",
              "      <td>0.1</td>\n",
              "      <td>2.07</td>\n",
              "      <td>2.07</td>\n",
              "      <td>2.08</td>\n",
              "      <td>2.07</td>\n",
              "      <td>2.08</td>\n",
              "      <td>10.37</td>\n",
              "      <td>6.22</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>770</th>\n",
              "      <td>564</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>G</td>\n",
              "      <td>King</td>\n",
              "      <td>3.9</td>\n",
              "      <td>0.7</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0.8</td>\n",
              "      <td>2.1</td>\n",
              "      <td>0.1</td>\n",
              "      <td>2.07</td>\n",
              "      <td>2.07</td>\n",
              "      <td>2.08</td>\n",
              "      <td>2.07</td>\n",
              "      <td>2.08</td>\n",
              "      <td>10.37</td>\n",
              "      <td>6.22</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>771</th>\n",
              "      <td>569</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>G</td>\n",
              "      <td>José Sá</td>\n",
              "      <td>5.0</td>\n",
              "      <td>1.4</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>288</td>\n",
              "      <td>39.9</td>\n",
              "      <td>...</td>\n",
              "      <td>0.8</td>\n",
              "      <td>2.1</td>\n",
              "      <td>0.1</td>\n",
              "      <td>2.07</td>\n",
              "      <td>2.07</td>\n",
              "      <td>2.08</td>\n",
              "      <td>2.07</td>\n",
              "      <td>2.08</td>\n",
              "      <td>10.37</td>\n",
              "      <td>6.22</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>772</th>\n",
              "      <td>571</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>G</td>\n",
              "      <td>Šarkić</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.3</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0.8</td>\n",
              "      <td>2.1</td>\n",
              "      <td>0.1</td>\n",
              "      <td>2.07</td>\n",
              "      <td>2.07</td>\n",
              "      <td>2.08</td>\n",
              "      <td>2.07</td>\n",
              "      <td>2.08</td>\n",
              "      <td>10.37</td>\n",
              "      <td>6.22</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>773 rows × 23 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-0b824245-80f4-4cec-8414-c21cd0a49c9b')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-0b824245-80f4-4cec-8414-c21cd0a49c9b button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-0b824245-80f4-4cec-8414-c21cd0a49c9b');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-5630cfee-104f-49c1-8ad4-4cc124c7661c\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-5630cfee-104f-49c1-8ad4-4cc124c7661c')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-5630cfee-104f-49c1-8ad4-4cc124c7661c button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 43
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "rawdfgw228x.drop_duplicates(subset='name', keep='last', inplace=True)\n",
        "rawdfgw228x"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 424
        },
        "id": "Jud88GRHgLWf",
        "outputId": "0f443c24-224a-4295-d523-caa0fea972e4"
      },
      "execution_count": 44,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "      id                     team pos     name  cost  selected_by_percent  \\\n",
              "0      1                  Arsenal   F  Balogun   4.4                  0.2   \n",
              "1      8                  Arsenal   F  G.Jesus   8.0                  5.4   \n",
              "2     13                  Arsenal   F  Nketiah   5.3                  4.5   \n",
              "3     39              Aston Villa   F    Davis   4.9                  0.1   \n",
              "4     44              Aston Villa   F    Duran   5.0                  0.2   \n",
              "..   ...                      ...  ..      ...   ...                  ...   \n",
              "768  647                 West Ham   G    Anang   4.0                  0.1   \n",
              "769  546  Wolverhampton Wanderers   G  Bentley   3.9                  1.2   \n",
              "770  564  Wolverhampton Wanderers   G     King   3.9                  0.7   \n",
              "771  569  Wolverhampton Wanderers   G  José Sá   5.0                  1.4   \n",
              "772  571  Wolverhampton Wanderers   G   Šarkić   4.0                  0.3   \n",
              "\n",
              "     goals_scored  assists  bps  ict_index  ...  home_adjustment  xPallgw  \\\n",
              "0               0        0    0        0.0  ...              1.2      2.0   \n",
              "1               3        2  153       95.0  ...              1.2      3.2   \n",
              "2               5        3  180       65.4  ...              1.2      2.9   \n",
              "3               0        0    0        0.0  ...              1.1      2.0   \n",
              "4               2        1   77       17.7  ...              1.1      2.2   \n",
              "..            ...      ...  ...        ...  ...              ...      ...   \n",
              "768             0        0    0        0.0  ...              1.0      2.0   \n",
              "769             0        0   60        5.7  ...              0.8      2.1   \n",
              "770             0        0    0        0.0  ...              0.8      2.1   \n",
              "771             0        0  288       39.9  ...              0.8      2.1   \n",
              "772             0        0    0        0.0  ...              0.8      2.1   \n",
              "\n",
              "     xCSP  gw21  gw22  gw23  gw24  gw25  5GW Total  3GW Total  \n",
              "0     NaN  2.00  2.00  2.00  2.00  2.00      10.00       6.00  \n",
              "1     NaN  3.32  3.68  3.20  3.44  3.56      17.20      10.20  \n",
              "2     NaN  2.99  3.26  2.90  3.08  3.17      15.40       9.15  \n",
              "3     NaN  2.00  2.00  2.00  2.00  2.00      10.00       6.00  \n",
              "4     NaN  2.24  2.18  2.26  2.20  2.24      11.12       6.68  \n",
              "..    ...   ...   ...   ...   ...   ...        ...        ...  \n",
              "768  -0.0  2.00  2.00  2.00  2.00  2.00      10.00       6.00  \n",
              "769   0.1  2.07  2.07  2.08  2.07  2.08      10.37       6.22  \n",
              "770   0.1  2.07  2.07  2.08  2.07  2.08      10.37       6.22  \n",
              "771   0.1  2.07  2.07  2.08  2.07  2.08      10.37       6.22  \n",
              "772   0.1  2.07  2.07  2.08  2.07  2.08      10.37       6.22  \n",
              "\n",
              "[749 rows x 23 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-98144238-2779-4020-925f-63b166120a23\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>team</th>\n",
              "      <th>pos</th>\n",
              "      <th>name</th>\n",
              "      <th>cost</th>\n",
              "      <th>selected_by_percent</th>\n",
              "      <th>goals_scored</th>\n",
              "      <th>assists</th>\n",
              "      <th>bps</th>\n",
              "      <th>ict_index</th>\n",
              "      <th>...</th>\n",
              "      <th>home_adjustment</th>\n",
              "      <th>xPallgw</th>\n",
              "      <th>xCSP</th>\n",
              "      <th>gw21</th>\n",
              "      <th>gw22</th>\n",
              "      <th>gw23</th>\n",
              "      <th>gw24</th>\n",
              "      <th>gw25</th>\n",
              "      <th>5GW Total</th>\n",
              "      <th>3GW Total</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>1</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>F</td>\n",
              "      <td>Balogun</td>\n",
              "      <td>4.4</td>\n",
              "      <td>0.2</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>1.2</td>\n",
              "      <td>2.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>10.00</td>\n",
              "      <td>6.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>8</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>F</td>\n",
              "      <td>G.Jesus</td>\n",
              "      <td>8.0</td>\n",
              "      <td>5.4</td>\n",
              "      <td>3</td>\n",
              "      <td>2</td>\n",
              "      <td>153</td>\n",
              "      <td>95.0</td>\n",
              "      <td>...</td>\n",
              "      <td>1.2</td>\n",
              "      <td>3.2</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.32</td>\n",
              "      <td>3.68</td>\n",
              "      <td>3.20</td>\n",
              "      <td>3.44</td>\n",
              "      <td>3.56</td>\n",
              "      <td>17.20</td>\n",
              "      <td>10.20</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>13</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>F</td>\n",
              "      <td>Nketiah</td>\n",
              "      <td>5.3</td>\n",
              "      <td>4.5</td>\n",
              "      <td>5</td>\n",
              "      <td>3</td>\n",
              "      <td>180</td>\n",
              "      <td>65.4</td>\n",
              "      <td>...</td>\n",
              "      <td>1.2</td>\n",
              "      <td>2.9</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2.99</td>\n",
              "      <td>3.26</td>\n",
              "      <td>2.90</td>\n",
              "      <td>3.08</td>\n",
              "      <td>3.17</td>\n",
              "      <td>15.40</td>\n",
              "      <td>9.15</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>39</td>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>F</td>\n",
              "      <td>Davis</td>\n",
              "      <td>4.9</td>\n",
              "      <td>0.1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>1.1</td>\n",
              "      <td>2.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>10.00</td>\n",
              "      <td>6.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>44</td>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>F</td>\n",
              "      <td>Duran</td>\n",
              "      <td>5.0</td>\n",
              "      <td>0.2</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>77</td>\n",
              "      <td>17.7</td>\n",
              "      <td>...</td>\n",
              "      <td>1.1</td>\n",
              "      <td>2.2</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2.24</td>\n",
              "      <td>2.18</td>\n",
              "      <td>2.26</td>\n",
              "      <td>2.20</td>\n",
              "      <td>2.24</td>\n",
              "      <td>11.12</td>\n",
              "      <td>6.68</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>768</th>\n",
              "      <td>647</td>\n",
              "      <td>West Ham</td>\n",
              "      <td>G</td>\n",
              "      <td>Anang</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>1.0</td>\n",
              "      <td>2.0</td>\n",
              "      <td>-0.0</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>10.00</td>\n",
              "      <td>6.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>769</th>\n",
              "      <td>546</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>G</td>\n",
              "      <td>Bentley</td>\n",
              "      <td>3.9</td>\n",
              "      <td>1.2</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>60</td>\n",
              "      <td>5.7</td>\n",
              "      <td>...</td>\n",
              "      <td>0.8</td>\n",
              "      <td>2.1</td>\n",
              "      <td>0.1</td>\n",
              "      <td>2.07</td>\n",
              "      <td>2.07</td>\n",
              "      <td>2.08</td>\n",
              "      <td>2.07</td>\n",
              "      <td>2.08</td>\n",
              "      <td>10.37</td>\n",
              "      <td>6.22</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>770</th>\n",
              "      <td>564</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>G</td>\n",
              "      <td>King</td>\n",
              "      <td>3.9</td>\n",
              "      <td>0.7</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0.8</td>\n",
              "      <td>2.1</td>\n",
              "      <td>0.1</td>\n",
              "      <td>2.07</td>\n",
              "      <td>2.07</td>\n",
              "      <td>2.08</td>\n",
              "      <td>2.07</td>\n",
              "      <td>2.08</td>\n",
              "      <td>10.37</td>\n",
              "      <td>6.22</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>771</th>\n",
              "      <td>569</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>G</td>\n",
              "      <td>José Sá</td>\n",
              "      <td>5.0</td>\n",
              "      <td>1.4</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>288</td>\n",
              "      <td>39.9</td>\n",
              "      <td>...</td>\n",
              "      <td>0.8</td>\n",
              "      <td>2.1</td>\n",
              "      <td>0.1</td>\n",
              "      <td>2.07</td>\n",
              "      <td>2.07</td>\n",
              "      <td>2.08</td>\n",
              "      <td>2.07</td>\n",
              "      <td>2.08</td>\n",
              "      <td>10.37</td>\n",
              "      <td>6.22</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>772</th>\n",
              "      <td>571</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>G</td>\n",
              "      <td>Šarkić</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.3</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0.8</td>\n",
              "      <td>2.1</td>\n",
              "      <td>0.1</td>\n",
              "      <td>2.07</td>\n",
              "      <td>2.07</td>\n",
              "      <td>2.08</td>\n",
              "      <td>2.07</td>\n",
              "      <td>2.08</td>\n",
              "      <td>10.37</td>\n",
              "      <td>6.22</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>749 rows × 23 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-98144238-2779-4020-925f-63b166120a23')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-98144238-2779-4020-925f-63b166120a23 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-98144238-2779-4020-925f-63b166120a23');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-9edba730-b128-44d9-abfb-7eaa75689a8b\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-9edba730-b128-44d9-abfb-7eaa75689a8b')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-9edba730-b128-44d9-abfb-7eaa75689a8b button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 44
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "from pandas import ExcelWriter\n",
        "writer = ExcelWriter('API model.xlsx')\n",
        "rawdfgw228x.to_excel(writer, sheet_name='Sheet1')\n",
        "gwadjustments2125.to_excel(writer, sheet_name='Sheet2')\n",
        "#fplwithunderstat.to_excel(writer, sheet_name='Sheet3')\n",
        "\n",
        "# Close the Pandas Excel writer and output the Excel file.\n",
        "writer.save()"
      ],
      "metadata": {
        "id": "tdXsMsuwaWa4",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "9a79588d-d14a-4057-9db5-bfb9d79b00ae"
      },
      "execution_count": 45,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "<ipython-input-45-e5b5d18c302a>:8: FutureWarning: save is not part of the public API, usage can give unexpected results and will be removed in a future version\n",
            "  writer.save()\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#from google.colab import drive\n",
        "#drive.mount('/content/drive')"
      ],
      "metadata": {
        "id": "GzSzE5_Ckuq3"
      },
      "execution_count": 46,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "import shutil"
      ],
      "metadata": {
        "id": "xSIwXnyAk2op"
      },
      "execution_count": 47,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "#shutil.copy(\"/content/API model.xlsx\",\"/content/drive/MyDrive/FPL\")"
      ],
      "metadata": {
        "id": "O724A90vk3b4"
      },
      "execution_count": 48,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "rawdfgw228x.nlargest(50, '5GW Total')"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "id": "4ULMO_eqJXIT",
        "outputId": "4883346e-3f8d-4b93-cb94-d0f1be474a29"
      },
      "execution_count": 49,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "      id                     team pos              name  cost  \\\n",
              "279  308                Liverpool   M             Salah  13.2   \n",
              "62   355          Manchester City   F           Haaland  13.9   \n",
              "107   19                  Arsenal   M              Saka   9.0   \n",
              "160  108                Brentford   M            Mbeumo   6.8   \n",
              "61   343          Manchester City   F         J.Alvarez   7.0   \n",
              "5     60              Aston Villa   F           Watkins   8.9   \n",
              "67   415         Newcastle United   F              Isak   7.6   \n",
              "404  526                 West Ham   M             Bowen   8.1   \n",
              "50   293                Liverpool   F            Darwin   7.4   \n",
              "400  516                Tottenham   M               Son   9.8   \n",
              "16   135                 Brighton   F        João Pedro   5.4   \n",
              "324  373        Manchester United   M       B.Fernandes   8.2   \n",
              "30   211                  Chelsea   F         N.Jackson   6.9   \n",
              "219  362                  Chelsea   M            Palmer   5.6   \n",
              "548  290                Liverpool   D  Alexander-Arnold   8.5   \n",
              "343  412         Newcastle United   M            Gordon   6.1   \n",
              "310  353          Manchester City   M             Foden   7.8   \n",
              "446   36              Aston Villa   D              Cash   4.7   \n",
              "104   14                  Arsenal   M          Ødegaard   8.4   \n",
              "9     85              Bournemouth   F           Solanke   7.1   \n",
              "177  134                 Brighton   M             Gross   6.4   \n",
              "121   43              Aston Villa   M      Douglas Luiz   5.5   \n",
              "574  342          Manchester City   D               Aké   5.0   \n",
              "333  396        Manchester United   M          Rashford   8.4   \n",
              "397  509                Tottenham   M       Richarlison   6.9   \n",
              "130  599              Aston Villa   M             Diaby   6.6   \n",
              "438   20                  Arsenal   D            Saliba   5.6   \n",
              "441   29                  Arsenal   D             White   5.6   \n",
              "442   31                  Arsenal   D         Zinchenko   5.2   \n",
              "182  143                 Brighton   M            Mitoma   6.4   \n",
              "436    5                  Arsenal   D           Gabriel   5.0   \n",
              "573  341          Manchester City   D            Akanji   4.9   \n",
              "576  350          Manchester City   D             Rúben   5.5   \n",
              "581  369          Manchester City   D            Walker   5.4   \n",
              "12   119                Brentford   F             Wissa   5.7   \n",
              "277  303                Liverpool   M         Luis Díaz   7.3   \n",
              "217  216                  Chelsea   M          Sterling   7.1   \n",
              "477  129                 Brighton   D              Dunk   5.0   \n",
              "413  664                 West Ham   M       Ward-Prowse   6.0   \n",
              "1      8                  Arsenal   F           G.Jesus   8.0   \n",
              "100    6                  Arsenal   M           Havertz   7.1   \n",
              "212  199                  Chelsea   M              Enzo   4.8   \n",
              "556  313                Liverpool   D            Virgil   6.3   \n",
              "306  344          Manchester City   M          Bernardo   6.5   \n",
              "316  365          Manchester City   M           Rodrigo   5.6   \n",
              "582  616          Manchester City   D          Gvardiol   4.8   \n",
              "117   34              Aston Villa   M            Bailey   5.7   \n",
              "124   50              Aston Villa   M            McGinn   5.6   \n",
              "339  402         Newcastle United   M           Almirón   6.2   \n",
              "421  557  Wolverhampton Wanderers   M          Hee Chan   5.7   \n",
              "\n",
              "     selected_by_percent  goals_scored  assists  bps  ict_index  ...  \\\n",
              "279                 44.0            14        8  469      233.1  ...   \n",
              "62                  53.7            14        5  417      159.8  ...   \n",
              "107                 59.3             6        8  388      199.2  ...   \n",
              "160                  7.1             7        4  250      122.1  ...   \n",
              "61                  35.1             6        8  403      156.1  ...   \n",
              "5                   54.5             9       11  406      167.0  ...   \n",
              "67                  14.2             9        0  276       97.1  ...   \n",
              "404                 32.5            11        2  314      148.1  ...   \n",
              "50                  13.5             5        8  215      124.1  ...   \n",
              "400                 35.8            12        5  442      180.2  ...   \n",
              "16                  11.5             7        2  267      123.4  ...   \n",
              "324                  9.9             3        3  309      160.4  ...   \n",
              "30                   5.5             7        2  218      124.2  ...   \n",
              "219                 28.6             8        5  323      125.8  ...   \n",
              "548                 28.4             2        4  439      131.7  ...   \n",
              "343                 19.3             6        7  308      123.8  ...   \n",
              "310                 20.5             5        6  379      152.5  ...   \n",
              "446                 17.7             2        1  231       71.2  ...   \n",
              "104                 15.9             4        4  314      145.8  ...   \n",
              "9                   27.7            12        1  313      150.2  ...   \n",
              "177                  4.1             3        6  360      162.6  ...   \n",
              "121                  8.9             6        3  403      116.5  ...   \n",
              "574                  6.0             2        2  257       52.5  ...   \n",
              "333                 10.7             3        3  174       90.3  ...   \n",
              "397                  7.6             6        3  162       89.6  ...   \n",
              "130                  9.1             4        7  252      109.6  ...   \n",
              "438                 36.5             1        1  376       52.7  ...   \n",
              "441                 10.9             1        2  343       71.5  ...   \n",
              "442                 12.5             1        1  320       67.7  ...   \n",
              "182                 15.4             3        5  211      118.9  ...   \n",
              "436                 17.5             1        0  296       51.0  ...   \n",
              "573                  5.2             2        0  259       49.5  ...   \n",
              "576                  6.5             0        0  234       49.4  ...   \n",
              "581                 16.7             0        1  346       63.5  ...   \n",
              "12                   5.7             4        2  195       90.4  ...   \n",
              "277                  6.0             3        2  147       90.6  ...   \n",
              "217                  8.4             5        6  231      121.7  ...   \n",
              "477                  2.6             1        0  219       66.4  ...   \n",
              "413                  8.2             3        6  396      124.6  ...   \n",
              "1                    5.4             3        2  153       95.0  ...   \n",
              "100                  1.6             4        1  152       72.0  ...   \n",
              "212                  2.3             2        1  199       78.9  ...   \n",
              "556                 12.2             1        2  361       81.3  ...   \n",
              "306                  5.2             5        4  353      125.2  ...   \n",
              "316                  5.0             4        3  303      100.5  ...   \n",
              "582                  3.4             0        0  233       52.0  ...   \n",
              "117                  3.8             6        5  224       91.5  ...   \n",
              "124                  2.0             5        2  302      110.7  ...   \n",
              "339                  4.1             3        1  210       78.3  ...   \n",
              "421                  9.2            10        3  280      110.0  ...   \n",
              "\n",
              "     home_adjustment  xPallgw  xCSP  gw21  gw22  gw23  gw24  gw25  5GW Total  \\\n",
              "279              1.2      6.3   NaN  7.59  6.73  6.30  7.59  6.73      34.94   \n",
              "62               1.3      5.2   NaN  5.52  6.48  5.84  6.48  5.84      30.16   \n",
              "107              1.2      4.7   NaN  4.97  5.78  4.70  5.24  5.51      26.20   \n",
              "160              1.1      4.7   NaN  5.51  4.97  4.16  5.51  4.43      24.58   \n",
              "61               1.3      4.0   NaN  4.20  4.80  4.40  4.80  4.40      22.60   \n",
              "5                1.1      4.2   NaN  4.64  3.98  4.86  4.20  4.64      22.32   \n",
              "67               1.2      4.0   NaN  3.80  4.20  4.80  4.80  4.60      22.20   \n",
              "404              1.0      4.3   NaN  4.76  4.76  4.07  3.84  4.76      22.19   \n",
              "50               1.2      4.1   NaN  4.73  4.31  4.10  4.73  4.31      22.18   \n",
              "400              1.0      4.4   NaN  4.16  4.16  4.64  4.16  4.88      22.00   \n",
              "16               1.1      3.9   NaN  4.47  4.66  4.09  4.09  4.47      21.78   \n",
              "324              1.1      4.0   NaN  4.20  4.60  4.20  4.00  4.60      21.60   \n",
              "30               1.1      4.3   NaN  4.53  4.07  4.76  4.30  3.84      21.50   \n",
              "219              1.1      4.1   NaN  4.31  3.89  4.52  4.10  3.68      20.50   \n",
              "548              1.2      3.8   0.6  4.34  3.98  3.80  4.34  3.98      20.44   \n",
              "343              1.2      3.7   NaN  3.53  3.87  4.38  4.38  4.21      20.37   \n",
              "310              1.3      3.6   NaN  3.76  4.24  3.92  4.24  3.92      20.08   \n",
              "446              1.1      3.8   0.5  4.16  3.62  4.34  3.80  4.16      20.08   \n",
              "104              1.2      3.6   NaN  3.76  4.24  3.60  3.92  4.08      19.60   \n",
              "9                0.8      4.3   NaN  3.61  3.84  4.30  4.07  3.61      19.43   \n",
              "177              1.1      3.5   NaN  3.95  4.10  3.65  3.65  3.95      19.30   \n",
              "121              1.1      3.6   NaN  3.92  3.44  4.08  3.60  3.92      18.96   \n",
              "574              1.3      3.4   0.9  3.54  3.96  3.68  3.96  3.68      18.82   \n",
              "333              1.1      3.5   NaN  3.65  3.95  3.65  3.50  3.95      18.70   \n",
              "397              1.0      3.7   NaN  3.53  3.53  3.87  3.53  4.04      18.50   \n",
              "130              1.1      3.5   NaN  3.80  3.35  3.95  3.50  3.80      18.40   \n",
              "438              1.2      3.4   0.9  3.54  3.96  3.40  3.68  3.82      18.40   \n",
              "441              1.2      3.4   0.9  3.54  3.96  3.40  3.68  3.82      18.40   \n",
              "442              1.2      3.4   0.9  3.54  3.96  3.40  3.68  3.82      18.40   \n",
              "182              1.1      3.3   NaN  3.69  3.82  3.43  3.43  3.69      18.06   \n",
              "436              1.2      3.3   0.9  3.43  3.82  3.30  3.56  3.69      17.80   \n",
              "573              1.3      3.2   0.9  3.32  3.68  3.44  3.68  3.44      17.56   \n",
              "576              1.3      3.2   0.9  3.32  3.68  3.44  3.68  3.44      17.56   \n",
              "581              1.3      3.2   0.9  3.32  3.68  3.44  3.68  3.44      17.56   \n",
              "12               1.1      3.4   NaN  3.82  3.54  3.12  3.82  3.26      17.56   \n",
              "277              1.2      3.3   NaN  3.69  3.43  3.30  3.69  3.43      17.54   \n",
              "217              1.1      3.5   NaN  3.65  3.35  3.80  3.50  3.20      17.50   \n",
              "477              1.1      3.2   0.3  3.56  3.68  3.32  3.32  3.56      17.44   \n",
              "413              1.0      3.4   NaN  3.68  3.68  3.26  3.12  3.68      17.42   \n",
              "1                1.2      3.2   NaN  3.32  3.68  3.20  3.44  3.56      17.20   \n",
              "100              1.2      3.2   NaN  3.32  3.68  3.20  3.44  3.56      17.20   \n",
              "212              1.1      3.4   NaN  3.54  3.26  3.68  3.40  3.12      17.00   \n",
              "556              1.2      3.2   0.6  3.56  3.32  3.20  3.56  3.32      16.96   \n",
              "306              1.3      3.1   NaN  3.21  3.54  3.32  3.54  3.32      16.93   \n",
              "316              1.3      3.1   NaN  3.21  3.54  3.32  3.54  3.32      16.93   \n",
              "582              1.3      3.1   0.9  3.21  3.54  3.32  3.54  3.32      16.93   \n",
              "117              1.1      3.2   NaN  3.44  3.08  3.56  3.20  3.44      16.72   \n",
              "124              1.1      3.2   NaN  3.44  3.08  3.56  3.20  3.44      16.72   \n",
              "339              1.2      3.1   NaN  2.99  3.21  3.54  3.54  3.43      16.71   \n",
              "421              0.8      3.8   NaN  3.26  3.26  3.44  3.26  3.44      16.66   \n",
              "\n",
              "     3GW Total  \n",
              "279      20.62  \n",
              "62       17.84  \n",
              "107      15.45  \n",
              "160      14.64  \n",
              "61       13.40  \n",
              "5        13.48  \n",
              "67       12.80  \n",
              "404      13.59  \n",
              "50       13.14  \n",
              "400      12.96  \n",
              "16       13.22  \n",
              "324      13.00  \n",
              "30       13.36  \n",
              "219      12.72  \n",
              "548      12.12  \n",
              "343      11.78  \n",
              "310      11.92  \n",
              "446      12.12  \n",
              "104      11.60  \n",
              "9        11.75  \n",
              "177      11.70  \n",
              "121      11.44  \n",
              "574      11.18  \n",
              "333      11.25  \n",
              "397      10.93  \n",
              "130      11.10  \n",
              "438      10.90  \n",
              "441      10.90  \n",
              "442      10.90  \n",
              "182      10.94  \n",
              "436      10.55  \n",
              "573      10.44  \n",
              "576      10.44  \n",
              "581      10.44  \n",
              "12       10.48  \n",
              "277      10.42  \n",
              "217      10.80  \n",
              "477      10.56  \n",
              "413      10.62  \n",
              "1        10.20  \n",
              "100      10.20  \n",
              "212      10.48  \n",
              "556      10.08  \n",
              "306      10.07  \n",
              "316      10.07  \n",
              "582      10.07  \n",
              "117      10.08  \n",
              "124      10.08  \n",
              "339       9.74  \n",
              "421       9.96  \n",
              "\n",
              "[50 rows x 23 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-9828e366-9017-4698-be7d-f5663ad2c2ab\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>team</th>\n",
              "      <th>pos</th>\n",
              "      <th>name</th>\n",
              "      <th>cost</th>\n",
              "      <th>selected_by_percent</th>\n",
              "      <th>goals_scored</th>\n",
              "      <th>assists</th>\n",
              "      <th>bps</th>\n",
              "      <th>ict_index</th>\n",
              "      <th>...</th>\n",
              "      <th>home_adjustment</th>\n",
              "      <th>xPallgw</th>\n",
              "      <th>xCSP</th>\n",
              "      <th>gw21</th>\n",
              "      <th>gw22</th>\n",
              "      <th>gw23</th>\n",
              "      <th>gw24</th>\n",
              "      <th>gw25</th>\n",
              "      <th>5GW Total</th>\n",
              "      <th>3GW Total</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>279</th>\n",
              "      <td>308</td>\n",
              "      <td>Liverpool</td>\n",
              "      <td>M</td>\n",
              "      <td>Salah</td>\n",
              "      <td>13.2</td>\n",
              "      <td>44.0</td>\n",
              "      <td>14</td>\n",
              "      <td>8</td>\n",
              "      <td>469</td>\n",
              "      <td>233.1</td>\n",
              "      <td>...</td>\n",
              "      <td>1.2</td>\n",
              "      <td>6.3</td>\n",
              "      <td>NaN</td>\n",
              "      <td>7.59</td>\n",
              "      <td>6.73</td>\n",
              "      <td>6.30</td>\n",
              "      <td>7.59</td>\n",
              "      <td>6.73</td>\n",
              "      <td>34.94</td>\n",
              "      <td>20.62</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>62</th>\n",
              "      <td>355</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>F</td>\n",
              "      <td>Haaland</td>\n",
              "      <td>13.9</td>\n",
              "      <td>53.7</td>\n",
              "      <td>14</td>\n",
              "      <td>5</td>\n",
              "      <td>417</td>\n",
              "      <td>159.8</td>\n",
              "      <td>...</td>\n",
              "      <td>1.3</td>\n",
              "      <td>5.2</td>\n",
              "      <td>NaN</td>\n",
              "      <td>5.52</td>\n",
              "      <td>6.48</td>\n",
              "      <td>5.84</td>\n",
              "      <td>6.48</td>\n",
              "      <td>5.84</td>\n",
              "      <td>30.16</td>\n",
              "      <td>17.84</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>107</th>\n",
              "      <td>19</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>M</td>\n",
              "      <td>Saka</td>\n",
              "      <td>9.0</td>\n",
              "      <td>59.3</td>\n",
              "      <td>6</td>\n",
              "      <td>8</td>\n",
              "      <td>388</td>\n",
              "      <td>199.2</td>\n",
              "      <td>...</td>\n",
              "      <td>1.2</td>\n",
              "      <td>4.7</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4.97</td>\n",
              "      <td>5.78</td>\n",
              "      <td>4.70</td>\n",
              "      <td>5.24</td>\n",
              "      <td>5.51</td>\n",
              "      <td>26.20</td>\n",
              "      <td>15.45</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>160</th>\n",
              "      <td>108</td>\n",
              "      <td>Brentford</td>\n",
              "      <td>M</td>\n",
              "      <td>Mbeumo</td>\n",
              "      <td>6.8</td>\n",
              "      <td>7.1</td>\n",
              "      <td>7</td>\n",
              "      <td>4</td>\n",
              "      <td>250</td>\n",
              "      <td>122.1</td>\n",
              "      <td>...</td>\n",
              "      <td>1.1</td>\n",
              "      <td>4.7</td>\n",
              "      <td>NaN</td>\n",
              "      <td>5.51</td>\n",
              "      <td>4.97</td>\n",
              "      <td>4.16</td>\n",
              "      <td>5.51</td>\n",
              "      <td>4.43</td>\n",
              "      <td>24.58</td>\n",
              "      <td>14.64</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>61</th>\n",
              "      <td>343</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>F</td>\n",
              "      <td>J.Alvarez</td>\n",
              "      <td>7.0</td>\n",
              "      <td>35.1</td>\n",
              "      <td>6</td>\n",
              "      <td>8</td>\n",
              "      <td>403</td>\n",
              "      <td>156.1</td>\n",
              "      <td>...</td>\n",
              "      <td>1.3</td>\n",
              "      <td>4.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4.20</td>\n",
              "      <td>4.80</td>\n",
              "      <td>4.40</td>\n",
              "      <td>4.80</td>\n",
              "      <td>4.40</td>\n",
              "      <td>22.60</td>\n",
              "      <td>13.40</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>60</td>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>F</td>\n",
              "      <td>Watkins</td>\n",
              "      <td>8.9</td>\n",
              "      <td>54.5</td>\n",
              "      <td>9</td>\n",
              "      <td>11</td>\n",
              "      <td>406</td>\n",
              "      <td>167.0</td>\n",
              "      <td>...</td>\n",
              "      <td>1.1</td>\n",
              "      <td>4.2</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4.64</td>\n",
              "      <td>3.98</td>\n",
              "      <td>4.86</td>\n",
              "      <td>4.20</td>\n",
              "      <td>4.64</td>\n",
              "      <td>22.32</td>\n",
              "      <td>13.48</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>67</th>\n",
              "      <td>415</td>\n",
              "      <td>Newcastle United</td>\n",
              "      <td>F</td>\n",
              "      <td>Isak</td>\n",
              "      <td>7.6</td>\n",
              "      <td>14.2</td>\n",
              "      <td>9</td>\n",
              "      <td>0</td>\n",
              "      <td>276</td>\n",
              "      <td>97.1</td>\n",
              "      <td>...</td>\n",
              "      <td>1.2</td>\n",
              "      <td>4.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.80</td>\n",
              "      <td>4.20</td>\n",
              "      <td>4.80</td>\n",
              "      <td>4.80</td>\n",
              "      <td>4.60</td>\n",
              "      <td>22.20</td>\n",
              "      <td>12.80</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>404</th>\n",
              "      <td>526</td>\n",
              "      <td>West Ham</td>\n",
              "      <td>M</td>\n",
              "      <td>Bowen</td>\n",
              "      <td>8.1</td>\n",
              "      <td>32.5</td>\n",
              "      <td>11</td>\n",
              "      <td>2</td>\n",
              "      <td>314</td>\n",
              "      <td>148.1</td>\n",
              "      <td>...</td>\n",
              "      <td>1.0</td>\n",
              "      <td>4.3</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4.76</td>\n",
              "      <td>4.76</td>\n",
              "      <td>4.07</td>\n",
              "      <td>3.84</td>\n",
              "      <td>4.76</td>\n",
              "      <td>22.19</td>\n",
              "      <td>13.59</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>50</th>\n",
              "      <td>293</td>\n",
              "      <td>Liverpool</td>\n",
              "      <td>F</td>\n",
              "      <td>Darwin</td>\n",
              "      <td>7.4</td>\n",
              "      <td>13.5</td>\n",
              "      <td>5</td>\n",
              "      <td>8</td>\n",
              "      <td>215</td>\n",
              "      <td>124.1</td>\n",
              "      <td>...</td>\n",
              "      <td>1.2</td>\n",
              "      <td>4.1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4.73</td>\n",
              "      <td>4.31</td>\n",
              "      <td>4.10</td>\n",
              "      <td>4.73</td>\n",
              "      <td>4.31</td>\n",
              "      <td>22.18</td>\n",
              "      <td>13.14</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>400</th>\n",
              "      <td>516</td>\n",
              "      <td>Tottenham</td>\n",
              "      <td>M</td>\n",
              "      <td>Son</td>\n",
              "      <td>9.8</td>\n",
              "      <td>35.8</td>\n",
              "      <td>12</td>\n",
              "      <td>5</td>\n",
              "      <td>442</td>\n",
              "      <td>180.2</td>\n",
              "      <td>...</td>\n",
              "      <td>1.0</td>\n",
              "      <td>4.4</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4.16</td>\n",
              "      <td>4.16</td>\n",
              "      <td>4.64</td>\n",
              "      <td>4.16</td>\n",
              "      <td>4.88</td>\n",
              "      <td>22.00</td>\n",
              "      <td>12.96</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>16</th>\n",
              "      <td>135</td>\n",
              "      <td>Brighton</td>\n",
              "      <td>F</td>\n",
              "      <td>João Pedro</td>\n",
              "      <td>5.4</td>\n",
              "      <td>11.5</td>\n",
              "      <td>7</td>\n",
              "      <td>2</td>\n",
              "      <td>267</td>\n",
              "      <td>123.4</td>\n",
              "      <td>...</td>\n",
              "      <td>1.1</td>\n",
              "      <td>3.9</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4.47</td>\n",
              "      <td>4.66</td>\n",
              "      <td>4.09</td>\n",
              "      <td>4.09</td>\n",
              "      <td>4.47</td>\n",
              "      <td>21.78</td>\n",
              "      <td>13.22</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>324</th>\n",
              "      <td>373</td>\n",
              "      <td>Manchester United</td>\n",
              "      <td>M</td>\n",
              "      <td>B.Fernandes</td>\n",
              "      <td>8.2</td>\n",
              "      <td>9.9</td>\n",
              "      <td>3</td>\n",
              "      <td>3</td>\n",
              "      <td>309</td>\n",
              "      <td>160.4</td>\n",
              "      <td>...</td>\n",
              "      <td>1.1</td>\n",
              "      <td>4.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4.20</td>\n",
              "      <td>4.60</td>\n",
              "      <td>4.20</td>\n",
              "      <td>4.00</td>\n",
              "      <td>4.60</td>\n",
              "      <td>21.60</td>\n",
              "      <td>13.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>30</th>\n",
              "      <td>211</td>\n",
              "      <td>Chelsea</td>\n",
              "      <td>F</td>\n",
              "      <td>N.Jackson</td>\n",
              "      <td>6.9</td>\n",
              "      <td>5.5</td>\n",
              "      <td>7</td>\n",
              "      <td>2</td>\n",
              "      <td>218</td>\n",
              "      <td>124.2</td>\n",
              "      <td>...</td>\n",
              "      <td>1.1</td>\n",
              "      <td>4.3</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4.53</td>\n",
              "      <td>4.07</td>\n",
              "      <td>4.76</td>\n",
              "      <td>4.30</td>\n",
              "      <td>3.84</td>\n",
              "      <td>21.50</td>\n",
              "      <td>13.36</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>219</th>\n",
              "      <td>362</td>\n",
              "      <td>Chelsea</td>\n",
              "      <td>M</td>\n",
              "      <td>Palmer</td>\n",
              "      <td>5.6</td>\n",
              "      <td>28.6</td>\n",
              "      <td>8</td>\n",
              "      <td>5</td>\n",
              "      <td>323</td>\n",
              "      <td>125.8</td>\n",
              "      <td>...</td>\n",
              "      <td>1.1</td>\n",
              "      <td>4.1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4.31</td>\n",
              "      <td>3.89</td>\n",
              "      <td>4.52</td>\n",
              "      <td>4.10</td>\n",
              "      <td>3.68</td>\n",
              "      <td>20.50</td>\n",
              "      <td>12.72</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>548</th>\n",
              "      <td>290</td>\n",
              "      <td>Liverpool</td>\n",
              "      <td>D</td>\n",
              "      <td>Alexander-Arnold</td>\n",
              "      <td>8.5</td>\n",
              "      <td>28.4</td>\n",
              "      <td>2</td>\n",
              "      <td>4</td>\n",
              "      <td>439</td>\n",
              "      <td>131.7</td>\n",
              "      <td>...</td>\n",
              "      <td>1.2</td>\n",
              "      <td>3.8</td>\n",
              "      <td>0.6</td>\n",
              "      <td>4.34</td>\n",
              "      <td>3.98</td>\n",
              "      <td>3.80</td>\n",
              "      <td>4.34</td>\n",
              "      <td>3.98</td>\n",
              "      <td>20.44</td>\n",
              "      <td>12.12</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>343</th>\n",
              "      <td>412</td>\n",
              "      <td>Newcastle United</td>\n",
              "      <td>M</td>\n",
              "      <td>Gordon</td>\n",
              "      <td>6.1</td>\n",
              "      <td>19.3</td>\n",
              "      <td>6</td>\n",
              "      <td>7</td>\n",
              "      <td>308</td>\n",
              "      <td>123.8</td>\n",
              "      <td>...</td>\n",
              "      <td>1.2</td>\n",
              "      <td>3.7</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.53</td>\n",
              "      <td>3.87</td>\n",
              "      <td>4.38</td>\n",
              "      <td>4.38</td>\n",
              "      <td>4.21</td>\n",
              "      <td>20.37</td>\n",
              "      <td>11.78</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>310</th>\n",
              "      <td>353</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>M</td>\n",
              "      <td>Foden</td>\n",
              "      <td>7.8</td>\n",
              "      <td>20.5</td>\n",
              "      <td>5</td>\n",
              "      <td>6</td>\n",
              "      <td>379</td>\n",
              "      <td>152.5</td>\n",
              "      <td>...</td>\n",
              "      <td>1.3</td>\n",
              "      <td>3.6</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.76</td>\n",
              "      <td>4.24</td>\n",
              "      <td>3.92</td>\n",
              "      <td>4.24</td>\n",
              "      <td>3.92</td>\n",
              "      <td>20.08</td>\n",
              "      <td>11.92</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>446</th>\n",
              "      <td>36</td>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>D</td>\n",
              "      <td>Cash</td>\n",
              "      <td>4.7</td>\n",
              "      <td>17.7</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>231</td>\n",
              "      <td>71.2</td>\n",
              "      <td>...</td>\n",
              "      <td>1.1</td>\n",
              "      <td>3.8</td>\n",
              "      <td>0.5</td>\n",
              "      <td>4.16</td>\n",
              "      <td>3.62</td>\n",
              "      <td>4.34</td>\n",
              "      <td>3.80</td>\n",
              "      <td>4.16</td>\n",
              "      <td>20.08</td>\n",
              "      <td>12.12</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>104</th>\n",
              "      <td>14</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>M</td>\n",
              "      <td>Ødegaard</td>\n",
              "      <td>8.4</td>\n",
              "      <td>15.9</td>\n",
              "      <td>4</td>\n",
              "      <td>4</td>\n",
              "      <td>314</td>\n",
              "      <td>145.8</td>\n",
              "      <td>...</td>\n",
              "      <td>1.2</td>\n",
              "      <td>3.6</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.76</td>\n",
              "      <td>4.24</td>\n",
              "      <td>3.60</td>\n",
              "      <td>3.92</td>\n",
              "      <td>4.08</td>\n",
              "      <td>19.60</td>\n",
              "      <td>11.60</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>85</td>\n",
              "      <td>Bournemouth</td>\n",
              "      <td>F</td>\n",
              "      <td>Solanke</td>\n",
              "      <td>7.1</td>\n",
              "      <td>27.7</td>\n",
              "      <td>12</td>\n",
              "      <td>1</td>\n",
              "      <td>313</td>\n",
              "      <td>150.2</td>\n",
              "      <td>...</td>\n",
              "      <td>0.8</td>\n",
              "      <td>4.3</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.61</td>\n",
              "      <td>3.84</td>\n",
              "      <td>4.30</td>\n",
              "      <td>4.07</td>\n",
              "      <td>3.61</td>\n",
              "      <td>19.43</td>\n",
              "      <td>11.75</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>177</th>\n",
              "      <td>134</td>\n",
              "      <td>Brighton</td>\n",
              "      <td>M</td>\n",
              "      <td>Gross</td>\n",
              "      <td>6.4</td>\n",
              "      <td>4.1</td>\n",
              "      <td>3</td>\n",
              "      <td>6</td>\n",
              "      <td>360</td>\n",
              "      <td>162.6</td>\n",
              "      <td>...</td>\n",
              "      <td>1.1</td>\n",
              "      <td>3.5</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.95</td>\n",
              "      <td>4.10</td>\n",
              "      <td>3.65</td>\n",
              "      <td>3.65</td>\n",
              "      <td>3.95</td>\n",
              "      <td>19.30</td>\n",
              "      <td>11.70</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>121</th>\n",
              "      <td>43</td>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>M</td>\n",
              "      <td>Douglas Luiz</td>\n",
              "      <td>5.5</td>\n",
              "      <td>8.9</td>\n",
              "      <td>6</td>\n",
              "      <td>3</td>\n",
              "      <td>403</td>\n",
              "      <td>116.5</td>\n",
              "      <td>...</td>\n",
              "      <td>1.1</td>\n",
              "      <td>3.6</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.92</td>\n",
              "      <td>3.44</td>\n",
              "      <td>4.08</td>\n",
              "      <td>3.60</td>\n",
              "      <td>3.92</td>\n",
              "      <td>18.96</td>\n",
              "      <td>11.44</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>574</th>\n",
              "      <td>342</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>D</td>\n",
              "      <td>Aké</td>\n",
              "      <td>5.0</td>\n",
              "      <td>6.0</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>257</td>\n",
              "      <td>52.5</td>\n",
              "      <td>...</td>\n",
              "      <td>1.3</td>\n",
              "      <td>3.4</td>\n",
              "      <td>0.9</td>\n",
              "      <td>3.54</td>\n",
              "      <td>3.96</td>\n",
              "      <td>3.68</td>\n",
              "      <td>3.96</td>\n",
              "      <td>3.68</td>\n",
              "      <td>18.82</td>\n",
              "      <td>11.18</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>333</th>\n",
              "      <td>396</td>\n",
              "      <td>Manchester United</td>\n",
              "      <td>M</td>\n",
              "      <td>Rashford</td>\n",
              "      <td>8.4</td>\n",
              "      <td>10.7</td>\n",
              "      <td>3</td>\n",
              "      <td>3</td>\n",
              "      <td>174</td>\n",
              "      <td>90.3</td>\n",
              "      <td>...</td>\n",
              "      <td>1.1</td>\n",
              "      <td>3.5</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.65</td>\n",
              "      <td>3.95</td>\n",
              "      <td>3.65</td>\n",
              "      <td>3.50</td>\n",
              "      <td>3.95</td>\n",
              "      <td>18.70</td>\n",
              "      <td>11.25</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>397</th>\n",
              "      <td>509</td>\n",
              "      <td>Tottenham</td>\n",
              "      <td>M</td>\n",
              "      <td>Richarlison</td>\n",
              "      <td>6.9</td>\n",
              "      <td>7.6</td>\n",
              "      <td>6</td>\n",
              "      <td>3</td>\n",
              "      <td>162</td>\n",
              "      <td>89.6</td>\n",
              "      <td>...</td>\n",
              "      <td>1.0</td>\n",
              "      <td>3.7</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.53</td>\n",
              "      <td>3.53</td>\n",
              "      <td>3.87</td>\n",
              "      <td>3.53</td>\n",
              "      <td>4.04</td>\n",
              "      <td>18.50</td>\n",
              "      <td>10.93</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>130</th>\n",
              "      <td>599</td>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>M</td>\n",
              "      <td>Diaby</td>\n",
              "      <td>6.6</td>\n",
              "      <td>9.1</td>\n",
              "      <td>4</td>\n",
              "      <td>7</td>\n",
              "      <td>252</td>\n",
              "      <td>109.6</td>\n",
              "      <td>...</td>\n",
              "      <td>1.1</td>\n",
              "      <td>3.5</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.80</td>\n",
              "      <td>3.35</td>\n",
              "      <td>3.95</td>\n",
              "      <td>3.50</td>\n",
              "      <td>3.80</td>\n",
              "      <td>18.40</td>\n",
              "      <td>11.10</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>438</th>\n",
              "      <td>20</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>D</td>\n",
              "      <td>Saliba</td>\n",
              "      <td>5.6</td>\n",
              "      <td>36.5</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>376</td>\n",
              "      <td>52.7</td>\n",
              "      <td>...</td>\n",
              "      <td>1.2</td>\n",
              "      <td>3.4</td>\n",
              "      <td>0.9</td>\n",
              "      <td>3.54</td>\n",
              "      <td>3.96</td>\n",
              "      <td>3.40</td>\n",
              "      <td>3.68</td>\n",
              "      <td>3.82</td>\n",
              "      <td>18.40</td>\n",
              "      <td>10.90</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>441</th>\n",
              "      <td>29</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>D</td>\n",
              "      <td>White</td>\n",
              "      <td>5.6</td>\n",
              "      <td>10.9</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>343</td>\n",
              "      <td>71.5</td>\n",
              "      <td>...</td>\n",
              "      <td>1.2</td>\n",
              "      <td>3.4</td>\n",
              "      <td>0.9</td>\n",
              "      <td>3.54</td>\n",
              "      <td>3.96</td>\n",
              "      <td>3.40</td>\n",
              "      <td>3.68</td>\n",
              "      <td>3.82</td>\n",
              "      <td>18.40</td>\n",
              "      <td>10.90</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>442</th>\n",
              "      <td>31</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>D</td>\n",
              "      <td>Zinchenko</td>\n",
              "      <td>5.2</td>\n",
              "      <td>12.5</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>320</td>\n",
              "      <td>67.7</td>\n",
              "      <td>...</td>\n",
              "      <td>1.2</td>\n",
              "      <td>3.4</td>\n",
              "      <td>0.9</td>\n",
              "      <td>3.54</td>\n",
              "      <td>3.96</td>\n",
              "      <td>3.40</td>\n",
              "      <td>3.68</td>\n",
              "      <td>3.82</td>\n",
              "      <td>18.40</td>\n",
              "      <td>10.90</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>182</th>\n",
              "      <td>143</td>\n",
              "      <td>Brighton</td>\n",
              "      <td>M</td>\n",
              "      <td>Mitoma</td>\n",
              "      <td>6.4</td>\n",
              "      <td>15.4</td>\n",
              "      <td>3</td>\n",
              "      <td>5</td>\n",
              "      <td>211</td>\n",
              "      <td>118.9</td>\n",
              "      <td>...</td>\n",
              "      <td>1.1</td>\n",
              "      <td>3.3</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.69</td>\n",
              "      <td>3.82</td>\n",
              "      <td>3.43</td>\n",
              "      <td>3.43</td>\n",
              "      <td>3.69</td>\n",
              "      <td>18.06</td>\n",
              "      <td>10.94</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>436</th>\n",
              "      <td>5</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>D</td>\n",
              "      <td>Gabriel</td>\n",
              "      <td>5.0</td>\n",
              "      <td>17.5</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>296</td>\n",
              "      <td>51.0</td>\n",
              "      <td>...</td>\n",
              "      <td>1.2</td>\n",
              "      <td>3.3</td>\n",
              "      <td>0.9</td>\n",
              "      <td>3.43</td>\n",
              "      <td>3.82</td>\n",
              "      <td>3.30</td>\n",
              "      <td>3.56</td>\n",
              "      <td>3.69</td>\n",
              "      <td>17.80</td>\n",
              "      <td>10.55</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>573</th>\n",
              "      <td>341</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>D</td>\n",
              "      <td>Akanji</td>\n",
              "      <td>4.9</td>\n",
              "      <td>5.2</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>259</td>\n",
              "      <td>49.5</td>\n",
              "      <td>...</td>\n",
              "      <td>1.3</td>\n",
              "      <td>3.2</td>\n",
              "      <td>0.9</td>\n",
              "      <td>3.32</td>\n",
              "      <td>3.68</td>\n",
              "      <td>3.44</td>\n",
              "      <td>3.68</td>\n",
              "      <td>3.44</td>\n",
              "      <td>17.56</td>\n",
              "      <td>10.44</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>576</th>\n",
              "      <td>350</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>D</td>\n",
              "      <td>Rúben</td>\n",
              "      <td>5.5</td>\n",
              "      <td>6.5</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>234</td>\n",
              "      <td>49.4</td>\n",
              "      <td>...</td>\n",
              "      <td>1.3</td>\n",
              "      <td>3.2</td>\n",
              "      <td>0.9</td>\n",
              "      <td>3.32</td>\n",
              "      <td>3.68</td>\n",
              "      <td>3.44</td>\n",
              "      <td>3.68</td>\n",
              "      <td>3.44</td>\n",
              "      <td>17.56</td>\n",
              "      <td>10.44</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>581</th>\n",
              "      <td>369</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>D</td>\n",
              "      <td>Walker</td>\n",
              "      <td>5.4</td>\n",
              "      <td>16.7</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>346</td>\n",
              "      <td>63.5</td>\n",
              "      <td>...</td>\n",
              "      <td>1.3</td>\n",
              "      <td>3.2</td>\n",
              "      <td>0.9</td>\n",
              "      <td>3.32</td>\n",
              "      <td>3.68</td>\n",
              "      <td>3.44</td>\n",
              "      <td>3.68</td>\n",
              "      <td>3.44</td>\n",
              "      <td>17.56</td>\n",
              "      <td>10.44</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>12</th>\n",
              "      <td>119</td>\n",
              "      <td>Brentford</td>\n",
              "      <td>F</td>\n",
              "      <td>Wissa</td>\n",
              "      <td>5.7</td>\n",
              "      <td>5.7</td>\n",
              "      <td>4</td>\n",
              "      <td>2</td>\n",
              "      <td>195</td>\n",
              "      <td>90.4</td>\n",
              "      <td>...</td>\n",
              "      <td>1.1</td>\n",
              "      <td>3.4</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.82</td>\n",
              "      <td>3.54</td>\n",
              "      <td>3.12</td>\n",
              "      <td>3.82</td>\n",
              "      <td>3.26</td>\n",
              "      <td>17.56</td>\n",
              "      <td>10.48</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>277</th>\n",
              "      <td>303</td>\n",
              "      <td>Liverpool</td>\n",
              "      <td>M</td>\n",
              "      <td>Luis Díaz</td>\n",
              "      <td>7.3</td>\n",
              "      <td>6.0</td>\n",
              "      <td>3</td>\n",
              "      <td>2</td>\n",
              "      <td>147</td>\n",
              "      <td>90.6</td>\n",
              "      <td>...</td>\n",
              "      <td>1.2</td>\n",
              "      <td>3.3</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.69</td>\n",
              "      <td>3.43</td>\n",
              "      <td>3.30</td>\n",
              "      <td>3.69</td>\n",
              "      <td>3.43</td>\n",
              "      <td>17.54</td>\n",
              "      <td>10.42</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>217</th>\n",
              "      <td>216</td>\n",
              "      <td>Chelsea</td>\n",
              "      <td>M</td>\n",
              "      <td>Sterling</td>\n",
              "      <td>7.1</td>\n",
              "      <td>8.4</td>\n",
              "      <td>5</td>\n",
              "      <td>6</td>\n",
              "      <td>231</td>\n",
              "      <td>121.7</td>\n",
              "      <td>...</td>\n",
              "      <td>1.1</td>\n",
              "      <td>3.5</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.65</td>\n",
              "      <td>3.35</td>\n",
              "      <td>3.80</td>\n",
              "      <td>3.50</td>\n",
              "      <td>3.20</td>\n",
              "      <td>17.50</td>\n",
              "      <td>10.80</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>477</th>\n",
              "      <td>129</td>\n",
              "      <td>Brighton</td>\n",
              "      <td>D</td>\n",
              "      <td>Dunk</td>\n",
              "      <td>5.0</td>\n",
              "      <td>2.6</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>219</td>\n",
              "      <td>66.4</td>\n",
              "      <td>...</td>\n",
              "      <td>1.1</td>\n",
              "      <td>3.2</td>\n",
              "      <td>0.3</td>\n",
              "      <td>3.56</td>\n",
              "      <td>3.68</td>\n",
              "      <td>3.32</td>\n",
              "      <td>3.32</td>\n",
              "      <td>3.56</td>\n",
              "      <td>17.44</td>\n",
              "      <td>10.56</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>413</th>\n",
              "      <td>664</td>\n",
              "      <td>West Ham</td>\n",
              "      <td>M</td>\n",
              "      <td>Ward-Prowse</td>\n",
              "      <td>6.0</td>\n",
              "      <td>8.2</td>\n",
              "      <td>3</td>\n",
              "      <td>6</td>\n",
              "      <td>396</td>\n",
              "      <td>124.6</td>\n",
              "      <td>...</td>\n",
              "      <td>1.0</td>\n",
              "      <td>3.4</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.68</td>\n",
              "      <td>3.68</td>\n",
              "      <td>3.26</td>\n",
              "      <td>3.12</td>\n",
              "      <td>3.68</td>\n",
              "      <td>17.42</td>\n",
              "      <td>10.62</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>8</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>F</td>\n",
              "      <td>G.Jesus</td>\n",
              "      <td>8.0</td>\n",
              "      <td>5.4</td>\n",
              "      <td>3</td>\n",
              "      <td>2</td>\n",
              "      <td>153</td>\n",
              "      <td>95.0</td>\n",
              "      <td>...</td>\n",
              "      <td>1.2</td>\n",
              "      <td>3.2</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.32</td>\n",
              "      <td>3.68</td>\n",
              "      <td>3.20</td>\n",
              "      <td>3.44</td>\n",
              "      <td>3.56</td>\n",
              "      <td>17.20</td>\n",
              "      <td>10.20</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>100</th>\n",
              "      <td>6</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>M</td>\n",
              "      <td>Havertz</td>\n",
              "      <td>7.1</td>\n",
              "      <td>1.6</td>\n",
              "      <td>4</td>\n",
              "      <td>1</td>\n",
              "      <td>152</td>\n",
              "      <td>72.0</td>\n",
              "      <td>...</td>\n",
              "      <td>1.2</td>\n",
              "      <td>3.2</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.32</td>\n",
              "      <td>3.68</td>\n",
              "      <td>3.20</td>\n",
              "      <td>3.44</td>\n",
              "      <td>3.56</td>\n",
              "      <td>17.20</td>\n",
              "      <td>10.20</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>212</th>\n",
              "      <td>199</td>\n",
              "      <td>Chelsea</td>\n",
              "      <td>M</td>\n",
              "      <td>Enzo</td>\n",
              "      <td>4.8</td>\n",
              "      <td>2.3</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>199</td>\n",
              "      <td>78.9</td>\n",
              "      <td>...</td>\n",
              "      <td>1.1</td>\n",
              "      <td>3.4</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.54</td>\n",
              "      <td>3.26</td>\n",
              "      <td>3.68</td>\n",
              "      <td>3.40</td>\n",
              "      <td>3.12</td>\n",
              "      <td>17.00</td>\n",
              "      <td>10.48</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>556</th>\n",
              "      <td>313</td>\n",
              "      <td>Liverpool</td>\n",
              "      <td>D</td>\n",
              "      <td>Virgil</td>\n",
              "      <td>6.3</td>\n",
              "      <td>12.2</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>361</td>\n",
              "      <td>81.3</td>\n",
              "      <td>...</td>\n",
              "      <td>1.2</td>\n",
              "      <td>3.2</td>\n",
              "      <td>0.6</td>\n",
              "      <td>3.56</td>\n",
              "      <td>3.32</td>\n",
              "      <td>3.20</td>\n",
              "      <td>3.56</td>\n",
              "      <td>3.32</td>\n",
              "      <td>16.96</td>\n",
              "      <td>10.08</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>306</th>\n",
              "      <td>344</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>M</td>\n",
              "      <td>Bernardo</td>\n",
              "      <td>6.5</td>\n",
              "      <td>5.2</td>\n",
              "      <td>5</td>\n",
              "      <td>4</td>\n",
              "      <td>353</td>\n",
              "      <td>125.2</td>\n",
              "      <td>...</td>\n",
              "      <td>1.3</td>\n",
              "      <td>3.1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.21</td>\n",
              "      <td>3.54</td>\n",
              "      <td>3.32</td>\n",
              "      <td>3.54</td>\n",
              "      <td>3.32</td>\n",
              "      <td>16.93</td>\n",
              "      <td>10.07</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>316</th>\n",
              "      <td>365</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>M</td>\n",
              "      <td>Rodrigo</td>\n",
              "      <td>5.6</td>\n",
              "      <td>5.0</td>\n",
              "      <td>4</td>\n",
              "      <td>3</td>\n",
              "      <td>303</td>\n",
              "      <td>100.5</td>\n",
              "      <td>...</td>\n",
              "      <td>1.3</td>\n",
              "      <td>3.1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.21</td>\n",
              "      <td>3.54</td>\n",
              "      <td>3.32</td>\n",
              "      <td>3.54</td>\n",
              "      <td>3.32</td>\n",
              "      <td>16.93</td>\n",
              "      <td>10.07</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>582</th>\n",
              "      <td>616</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>D</td>\n",
              "      <td>Gvardiol</td>\n",
              "      <td>4.8</td>\n",
              "      <td>3.4</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>233</td>\n",
              "      <td>52.0</td>\n",
              "      <td>...</td>\n",
              "      <td>1.3</td>\n",
              "      <td>3.1</td>\n",
              "      <td>0.9</td>\n",
              "      <td>3.21</td>\n",
              "      <td>3.54</td>\n",
              "      <td>3.32</td>\n",
              "      <td>3.54</td>\n",
              "      <td>3.32</td>\n",
              "      <td>16.93</td>\n",
              "      <td>10.07</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>117</th>\n",
              "      <td>34</td>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>M</td>\n",
              "      <td>Bailey</td>\n",
              "      <td>5.7</td>\n",
              "      <td>3.8</td>\n",
              "      <td>6</td>\n",
              "      <td>5</td>\n",
              "      <td>224</td>\n",
              "      <td>91.5</td>\n",
              "      <td>...</td>\n",
              "      <td>1.1</td>\n",
              "      <td>3.2</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.44</td>\n",
              "      <td>3.08</td>\n",
              "      <td>3.56</td>\n",
              "      <td>3.20</td>\n",
              "      <td>3.44</td>\n",
              "      <td>16.72</td>\n",
              "      <td>10.08</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>124</th>\n",
              "      <td>50</td>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>M</td>\n",
              "      <td>McGinn</td>\n",
              "      <td>5.6</td>\n",
              "      <td>2.0</td>\n",
              "      <td>5</td>\n",
              "      <td>2</td>\n",
              "      <td>302</td>\n",
              "      <td>110.7</td>\n",
              "      <td>...</td>\n",
              "      <td>1.1</td>\n",
              "      <td>3.2</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.44</td>\n",
              "      <td>3.08</td>\n",
              "      <td>3.56</td>\n",
              "      <td>3.20</td>\n",
              "      <td>3.44</td>\n",
              "      <td>16.72</td>\n",
              "      <td>10.08</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>339</th>\n",
              "      <td>402</td>\n",
              "      <td>Newcastle United</td>\n",
              "      <td>M</td>\n",
              "      <td>Almirón</td>\n",
              "      <td>6.2</td>\n",
              "      <td>4.1</td>\n",
              "      <td>3</td>\n",
              "      <td>1</td>\n",
              "      <td>210</td>\n",
              "      <td>78.3</td>\n",
              "      <td>...</td>\n",
              "      <td>1.2</td>\n",
              "      <td>3.1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2.99</td>\n",
              "      <td>3.21</td>\n",
              "      <td>3.54</td>\n",
              "      <td>3.54</td>\n",
              "      <td>3.43</td>\n",
              "      <td>16.71</td>\n",
              "      <td>9.74</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>421</th>\n",
              "      <td>557</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>M</td>\n",
              "      <td>Hee Chan</td>\n",
              "      <td>5.7</td>\n",
              "      <td>9.2</td>\n",
              "      <td>10</td>\n",
              "      <td>3</td>\n",
              "      <td>280</td>\n",
              "      <td>110.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0.8</td>\n",
              "      <td>3.8</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.26</td>\n",
              "      <td>3.26</td>\n",
              "      <td>3.44</td>\n",
              "      <td>3.26</td>\n",
              "      <td>3.44</td>\n",
              "      <td>16.66</td>\n",
              "      <td>9.96</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>50 rows × 23 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-9828e366-9017-4698-be7d-f5663ad2c2ab')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-9828e366-9017-4698-be7d-f5663ad2c2ab button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-9828e366-9017-4698-be7d-f5663ad2c2ab');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-218110a9-97d0-43fc-94dd-93eb34b82651\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-218110a9-97d0-43fc-94dd-93eb34b82651')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-218110a9-97d0-43fc-94dd-93eb34b82651 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 49
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "rawdfgw228x.nlargest(50, '3GW Total')"
      ],
      "metadata": {
        "id": "6NQhOGTZgSrO",
        "outputId": "ccc9ccee-a578-41e0-e17a-c0edbb689d87",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        }
      },
      "execution_count": 50,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "      id                     team pos              name  cost  \\\n",
              "279  308                Liverpool   M             Salah  13.2   \n",
              "62   355          Manchester City   F           Haaland  13.9   \n",
              "107   19                  Arsenal   M              Saka   9.0   \n",
              "160  108                Brentford   M            Mbeumo   6.8   \n",
              "404  526                 West Ham   M             Bowen   8.1   \n",
              "5     60              Aston Villa   F           Watkins   8.9   \n",
              "61   343          Manchester City   F         J.Alvarez   7.0   \n",
              "30   211                  Chelsea   F         N.Jackson   6.9   \n",
              "16   135                 Brighton   F        João Pedro   5.4   \n",
              "50   293                Liverpool   F            Darwin   7.4   \n",
              "324  373        Manchester United   M       B.Fernandes   8.2   \n",
              "400  516                Tottenham   M               Son   9.8   \n",
              "67   415         Newcastle United   F              Isak   7.6   \n",
              "219  362                  Chelsea   M            Palmer   5.6   \n",
              "446   36              Aston Villa   D              Cash   4.7   \n",
              "548  290                Liverpool   D  Alexander-Arnold   8.5   \n",
              "310  353          Manchester City   M             Foden   7.8   \n",
              "343  412         Newcastle United   M            Gordon   6.1   \n",
              "9     85              Bournemouth   F           Solanke   7.1   \n",
              "177  134                 Brighton   M             Gross   6.4   \n",
              "104   14                  Arsenal   M          Ødegaard   8.4   \n",
              "121   43              Aston Villa   M      Douglas Luiz   5.5   \n",
              "333  396        Manchester United   M          Rashford   8.4   \n",
              "574  342          Manchester City   D               Aké   5.0   \n",
              "130  599              Aston Villa   M             Diaby   6.6   \n",
              "182  143                 Brighton   M            Mitoma   6.4   \n",
              "397  509                Tottenham   M       Richarlison   6.9   \n",
              "438   20                  Arsenal   D            Saliba   5.6   \n",
              "441   29                  Arsenal   D             White   5.6   \n",
              "442   31                  Arsenal   D         Zinchenko   5.2   \n",
              "217  216                  Chelsea   M          Sterling   7.1   \n",
              "413  664                 West Ham   M       Ward-Prowse   6.0   \n",
              "477  129                 Brighton   D              Dunk   5.0   \n",
              "436    5                  Arsenal   D           Gabriel   5.0   \n",
              "12   119                Brentford   F             Wissa   5.7   \n",
              "212  199                  Chelsea   M              Enzo   4.8   \n",
              "573  341          Manchester City   D            Akanji   4.9   \n",
              "576  350          Manchester City   D             Rúben   5.5   \n",
              "581  369          Manchester City   D            Walker   5.4   \n",
              "277  303                Liverpool   M         Luis Díaz   7.3   \n",
              "1      8                  Arsenal   F           G.Jesus   8.0   \n",
              "100    6                  Arsenal   M           Havertz   7.1   \n",
              "117   34              Aston Villa   M            Bailey   5.7   \n",
              "124   50              Aston Villa   M            McGinn   5.6   \n",
              "556  313                Liverpool   D            Virgil   6.3   \n",
              "306  344          Manchester City   M          Bernardo   6.5   \n",
              "316  365          Manchester City   M           Rodrigo   5.6   \n",
              "582  616          Manchester City   D          Gvardiol   4.8   \n",
              "410  542                 West Ham   M            Souček   4.9   \n",
              "421  557  Wolverhampton Wanderers   M          Hee Chan   5.7   \n",
              "\n",
              "     selected_by_percent  goals_scored  assists  bps  ict_index  ...  \\\n",
              "279                 44.0            14        8  469      233.1  ...   \n",
              "62                  53.7            14        5  417      159.8  ...   \n",
              "107                 59.3             6        8  388      199.2  ...   \n",
              "160                  7.1             7        4  250      122.1  ...   \n",
              "404                 32.5            11        2  314      148.1  ...   \n",
              "5                   54.5             9       11  406      167.0  ...   \n",
              "61                  35.1             6        8  403      156.1  ...   \n",
              "30                   5.5             7        2  218      124.2  ...   \n",
              "16                  11.5             7        2  267      123.4  ...   \n",
              "50                  13.5             5        8  215      124.1  ...   \n",
              "324                  9.9             3        3  309      160.4  ...   \n",
              "400                 35.8            12        5  442      180.2  ...   \n",
              "67                  14.2             9        0  276       97.1  ...   \n",
              "219                 28.6             8        5  323      125.8  ...   \n",
              "446                 17.7             2        1  231       71.2  ...   \n",
              "548                 28.4             2        4  439      131.7  ...   \n",
              "310                 20.5             5        6  379      152.5  ...   \n",
              "343                 19.3             6        7  308      123.8  ...   \n",
              "9                   27.7            12        1  313      150.2  ...   \n",
              "177                  4.1             3        6  360      162.6  ...   \n",
              "104                 15.9             4        4  314      145.8  ...   \n",
              "121                  8.9             6        3  403      116.5  ...   \n",
              "333                 10.7             3        3  174       90.3  ...   \n",
              "574                  6.0             2        2  257       52.5  ...   \n",
              "130                  9.1             4        7  252      109.6  ...   \n",
              "182                 15.4             3        5  211      118.9  ...   \n",
              "397                  7.6             6        3  162       89.6  ...   \n",
              "438                 36.5             1        1  376       52.7  ...   \n",
              "441                 10.9             1        2  343       71.5  ...   \n",
              "442                 12.5             1        1  320       67.7  ...   \n",
              "217                  8.4             5        6  231      121.7  ...   \n",
              "413                  8.2             3        6  396      124.6  ...   \n",
              "477                  2.6             1        0  219       66.4  ...   \n",
              "436                 17.5             1        0  296       51.0  ...   \n",
              "12                   5.7             4        2  195       90.4  ...   \n",
              "212                  2.3             2        1  199       78.9  ...   \n",
              "573                  5.2             2        0  259       49.5  ...   \n",
              "576                  6.5             0        0  234       49.4  ...   \n",
              "581                 16.7             0        1  346       63.5  ...   \n",
              "277                  6.0             3        2  147       90.6  ...   \n",
              "1                    5.4             3        2  153       95.0  ...   \n",
              "100                  1.6             4        1  152       72.0  ...   \n",
              "117                  3.8             6        5  224       91.5  ...   \n",
              "124                  2.0             5        2  302      110.7  ...   \n",
              "556                 12.2             1        2  361       81.3  ...   \n",
              "306                  5.2             5        4  353      125.2  ...   \n",
              "316                  5.0             4        3  303      100.5  ...   \n",
              "582                  3.4             0        0  233       52.0  ...   \n",
              "410                  1.5             5        1  242       81.5  ...   \n",
              "421                  9.2            10        3  280      110.0  ...   \n",
              "\n",
              "     home_adjustment  xPallgw  xCSP  gw21  gw22  gw23  gw24  gw25  5GW Total  \\\n",
              "279              1.2      6.3   NaN  7.59  6.73  6.30  7.59  6.73      34.94   \n",
              "62               1.3      5.2   NaN  5.52  6.48  5.84  6.48  5.84      30.16   \n",
              "107              1.2      4.7   NaN  4.97  5.78  4.70  5.24  5.51      26.20   \n",
              "160              1.1      4.7   NaN  5.51  4.97  4.16  5.51  4.43      24.58   \n",
              "404              1.0      4.3   NaN  4.76  4.76  4.07  3.84  4.76      22.19   \n",
              "5                1.1      4.2   NaN  4.64  3.98  4.86  4.20  4.64      22.32   \n",
              "61               1.3      4.0   NaN  4.20  4.80  4.40  4.80  4.40      22.60   \n",
              "30               1.1      4.3   NaN  4.53  4.07  4.76  4.30  3.84      21.50   \n",
              "16               1.1      3.9   NaN  4.47  4.66  4.09  4.09  4.47      21.78   \n",
              "50               1.2      4.1   NaN  4.73  4.31  4.10  4.73  4.31      22.18   \n",
              "324              1.1      4.0   NaN  4.20  4.60  4.20  4.00  4.60      21.60   \n",
              "400              1.0      4.4   NaN  4.16  4.16  4.64  4.16  4.88      22.00   \n",
              "67               1.2      4.0   NaN  3.80  4.20  4.80  4.80  4.60      22.20   \n",
              "219              1.1      4.1   NaN  4.31  3.89  4.52  4.10  3.68      20.50   \n",
              "446              1.1      3.8   0.5  4.16  3.62  4.34  3.80  4.16      20.08   \n",
              "548              1.2      3.8   0.6  4.34  3.98  3.80  4.34  3.98      20.44   \n",
              "310              1.3      3.6   NaN  3.76  4.24  3.92  4.24  3.92      20.08   \n",
              "343              1.2      3.7   NaN  3.53  3.87  4.38  4.38  4.21      20.37   \n",
              "9                0.8      4.3   NaN  3.61  3.84  4.30  4.07  3.61      19.43   \n",
              "177              1.1      3.5   NaN  3.95  4.10  3.65  3.65  3.95      19.30   \n",
              "104              1.2      3.6   NaN  3.76  4.24  3.60  3.92  4.08      19.60   \n",
              "121              1.1      3.6   NaN  3.92  3.44  4.08  3.60  3.92      18.96   \n",
              "333              1.1      3.5   NaN  3.65  3.95  3.65  3.50  3.95      18.70   \n",
              "574              1.3      3.4   0.9  3.54  3.96  3.68  3.96  3.68      18.82   \n",
              "130              1.1      3.5   NaN  3.80  3.35  3.95  3.50  3.80      18.40   \n",
              "182              1.1      3.3   NaN  3.69  3.82  3.43  3.43  3.69      18.06   \n",
              "397              1.0      3.7   NaN  3.53  3.53  3.87  3.53  4.04      18.50   \n",
              "438              1.2      3.4   0.9  3.54  3.96  3.40  3.68  3.82      18.40   \n",
              "441              1.2      3.4   0.9  3.54  3.96  3.40  3.68  3.82      18.40   \n",
              "442              1.2      3.4   0.9  3.54  3.96  3.40  3.68  3.82      18.40   \n",
              "217              1.1      3.5   NaN  3.65  3.35  3.80  3.50  3.20      17.50   \n",
              "413              1.0      3.4   NaN  3.68  3.68  3.26  3.12  3.68      17.42   \n",
              "477              1.1      3.2   0.3  3.56  3.68  3.32  3.32  3.56      17.44   \n",
              "436              1.2      3.3   0.9  3.43  3.82  3.30  3.56  3.69      17.80   \n",
              "12               1.1      3.4   NaN  3.82  3.54  3.12  3.82  3.26      17.56   \n",
              "212              1.1      3.4   NaN  3.54  3.26  3.68  3.40  3.12      17.00   \n",
              "573              1.3      3.2   0.9  3.32  3.68  3.44  3.68  3.44      17.56   \n",
              "576              1.3      3.2   0.9  3.32  3.68  3.44  3.68  3.44      17.56   \n",
              "581              1.3      3.2   0.9  3.32  3.68  3.44  3.68  3.44      17.56   \n",
              "277              1.2      3.3   NaN  3.69  3.43  3.30  3.69  3.43      17.54   \n",
              "1                1.2      3.2   NaN  3.32  3.68  3.20  3.44  3.56      17.20   \n",
              "100              1.2      3.2   NaN  3.32  3.68  3.20  3.44  3.56      17.20   \n",
              "117              1.1      3.2   NaN  3.44  3.08  3.56  3.20  3.44      16.72   \n",
              "124              1.1      3.2   NaN  3.44  3.08  3.56  3.20  3.44      16.72   \n",
              "556              1.2      3.2   0.6  3.56  3.32  3.20  3.56  3.32      16.96   \n",
              "306              1.3      3.1   NaN  3.21  3.54  3.32  3.54  3.32      16.93   \n",
              "316              1.3      3.1   NaN  3.21  3.54  3.32  3.54  3.32      16.93   \n",
              "582              1.3      3.1   0.9  3.21  3.54  3.32  3.54  3.32      16.93   \n",
              "410              1.0      3.2   NaN  3.44  3.44  3.08  2.96  3.44      16.36   \n",
              "421              0.8      3.8   NaN  3.26  3.26  3.44  3.26  3.44      16.66   \n",
              "\n",
              "     3GW Total  \n",
              "279      20.62  \n",
              "62       17.84  \n",
              "107      15.45  \n",
              "160      14.64  \n",
              "404      13.59  \n",
              "5        13.48  \n",
              "61       13.40  \n",
              "30       13.36  \n",
              "16       13.22  \n",
              "50       13.14  \n",
              "324      13.00  \n",
              "400      12.96  \n",
              "67       12.80  \n",
              "219      12.72  \n",
              "446      12.12  \n",
              "548      12.12  \n",
              "310      11.92  \n",
              "343      11.78  \n",
              "9        11.75  \n",
              "177      11.70  \n",
              "104      11.60  \n",
              "121      11.44  \n",
              "333      11.25  \n",
              "574      11.18  \n",
              "130      11.10  \n",
              "182      10.94  \n",
              "397      10.93  \n",
              "438      10.90  \n",
              "441      10.90  \n",
              "442      10.90  \n",
              "217      10.80  \n",
              "413      10.62  \n",
              "477      10.56  \n",
              "436      10.55  \n",
              "12       10.48  \n",
              "212      10.48  \n",
              "573      10.44  \n",
              "576      10.44  \n",
              "581      10.44  \n",
              "277      10.42  \n",
              "1        10.20  \n",
              "100      10.20  \n",
              "117      10.08  \n",
              "124      10.08  \n",
              "556      10.08  \n",
              "306      10.07  \n",
              "316      10.07  \n",
              "582      10.07  \n",
              "410       9.96  \n",
              "421       9.96  \n",
              "\n",
              "[50 rows x 23 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-e3bdb359-4678-43c0-a685-9e0882a4e1c7\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>team</th>\n",
              "      <th>pos</th>\n",
              "      <th>name</th>\n",
              "      <th>cost</th>\n",
              "      <th>selected_by_percent</th>\n",
              "      <th>goals_scored</th>\n",
              "      <th>assists</th>\n",
              "      <th>bps</th>\n",
              "      <th>ict_index</th>\n",
              "      <th>...</th>\n",
              "      <th>home_adjustment</th>\n",
              "      <th>xPallgw</th>\n",
              "      <th>xCSP</th>\n",
              "      <th>gw21</th>\n",
              "      <th>gw22</th>\n",
              "      <th>gw23</th>\n",
              "      <th>gw24</th>\n",
              "      <th>gw25</th>\n",
              "      <th>5GW Total</th>\n",
              "      <th>3GW Total</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>279</th>\n",
              "      <td>308</td>\n",
              "      <td>Liverpool</td>\n",
              "      <td>M</td>\n",
              "      <td>Salah</td>\n",
              "      <td>13.2</td>\n",
              "      <td>44.0</td>\n",
              "      <td>14</td>\n",
              "      <td>8</td>\n",
              "      <td>469</td>\n",
              "      <td>233.1</td>\n",
              "      <td>...</td>\n",
              "      <td>1.2</td>\n",
              "      <td>6.3</td>\n",
              "      <td>NaN</td>\n",
              "      <td>7.59</td>\n",
              "      <td>6.73</td>\n",
              "      <td>6.30</td>\n",
              "      <td>7.59</td>\n",
              "      <td>6.73</td>\n",
              "      <td>34.94</td>\n",
              "      <td>20.62</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>62</th>\n",
              "      <td>355</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>F</td>\n",
              "      <td>Haaland</td>\n",
              "      <td>13.9</td>\n",
              "      <td>53.7</td>\n",
              "      <td>14</td>\n",
              "      <td>5</td>\n",
              "      <td>417</td>\n",
              "      <td>159.8</td>\n",
              "      <td>...</td>\n",
              "      <td>1.3</td>\n",
              "      <td>5.2</td>\n",
              "      <td>NaN</td>\n",
              "      <td>5.52</td>\n",
              "      <td>6.48</td>\n",
              "      <td>5.84</td>\n",
              "      <td>6.48</td>\n",
              "      <td>5.84</td>\n",
              "      <td>30.16</td>\n",
              "      <td>17.84</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>107</th>\n",
              "      <td>19</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>M</td>\n",
              "      <td>Saka</td>\n",
              "      <td>9.0</td>\n",
              "      <td>59.3</td>\n",
              "      <td>6</td>\n",
              "      <td>8</td>\n",
              "      <td>388</td>\n",
              "      <td>199.2</td>\n",
              "      <td>...</td>\n",
              "      <td>1.2</td>\n",
              "      <td>4.7</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4.97</td>\n",
              "      <td>5.78</td>\n",
              "      <td>4.70</td>\n",
              "      <td>5.24</td>\n",
              "      <td>5.51</td>\n",
              "      <td>26.20</td>\n",
              "      <td>15.45</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>160</th>\n",
              "      <td>108</td>\n",
              "      <td>Brentford</td>\n",
              "      <td>M</td>\n",
              "      <td>Mbeumo</td>\n",
              "      <td>6.8</td>\n",
              "      <td>7.1</td>\n",
              "      <td>7</td>\n",
              "      <td>4</td>\n",
              "      <td>250</td>\n",
              "      <td>122.1</td>\n",
              "      <td>...</td>\n",
              "      <td>1.1</td>\n",
              "      <td>4.7</td>\n",
              "      <td>NaN</td>\n",
              "      <td>5.51</td>\n",
              "      <td>4.97</td>\n",
              "      <td>4.16</td>\n",
              "      <td>5.51</td>\n",
              "      <td>4.43</td>\n",
              "      <td>24.58</td>\n",
              "      <td>14.64</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>404</th>\n",
              "      <td>526</td>\n",
              "      <td>West Ham</td>\n",
              "      <td>M</td>\n",
              "      <td>Bowen</td>\n",
              "      <td>8.1</td>\n",
              "      <td>32.5</td>\n",
              "      <td>11</td>\n",
              "      <td>2</td>\n",
              "      <td>314</td>\n",
              "      <td>148.1</td>\n",
              "      <td>...</td>\n",
              "      <td>1.0</td>\n",
              "      <td>4.3</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4.76</td>\n",
              "      <td>4.76</td>\n",
              "      <td>4.07</td>\n",
              "      <td>3.84</td>\n",
              "      <td>4.76</td>\n",
              "      <td>22.19</td>\n",
              "      <td>13.59</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>60</td>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>F</td>\n",
              "      <td>Watkins</td>\n",
              "      <td>8.9</td>\n",
              "      <td>54.5</td>\n",
              "      <td>9</td>\n",
              "      <td>11</td>\n",
              "      <td>406</td>\n",
              "      <td>167.0</td>\n",
              "      <td>...</td>\n",
              "      <td>1.1</td>\n",
              "      <td>4.2</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4.64</td>\n",
              "      <td>3.98</td>\n",
              "      <td>4.86</td>\n",
              "      <td>4.20</td>\n",
              "      <td>4.64</td>\n",
              "      <td>22.32</td>\n",
              "      <td>13.48</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>61</th>\n",
              "      <td>343</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>F</td>\n",
              "      <td>J.Alvarez</td>\n",
              "      <td>7.0</td>\n",
              "      <td>35.1</td>\n",
              "      <td>6</td>\n",
              "      <td>8</td>\n",
              "      <td>403</td>\n",
              "      <td>156.1</td>\n",
              "      <td>...</td>\n",
              "      <td>1.3</td>\n",
              "      <td>4.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4.20</td>\n",
              "      <td>4.80</td>\n",
              "      <td>4.40</td>\n",
              "      <td>4.80</td>\n",
              "      <td>4.40</td>\n",
              "      <td>22.60</td>\n",
              "      <td>13.40</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>30</th>\n",
              "      <td>211</td>\n",
              "      <td>Chelsea</td>\n",
              "      <td>F</td>\n",
              "      <td>N.Jackson</td>\n",
              "      <td>6.9</td>\n",
              "      <td>5.5</td>\n",
              "      <td>7</td>\n",
              "      <td>2</td>\n",
              "      <td>218</td>\n",
              "      <td>124.2</td>\n",
              "      <td>...</td>\n",
              "      <td>1.1</td>\n",
              "      <td>4.3</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4.53</td>\n",
              "      <td>4.07</td>\n",
              "      <td>4.76</td>\n",
              "      <td>4.30</td>\n",
              "      <td>3.84</td>\n",
              "      <td>21.50</td>\n",
              "      <td>13.36</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>16</th>\n",
              "      <td>135</td>\n",
              "      <td>Brighton</td>\n",
              "      <td>F</td>\n",
              "      <td>João Pedro</td>\n",
              "      <td>5.4</td>\n",
              "      <td>11.5</td>\n",
              "      <td>7</td>\n",
              "      <td>2</td>\n",
              "      <td>267</td>\n",
              "      <td>123.4</td>\n",
              "      <td>...</td>\n",
              "      <td>1.1</td>\n",
              "      <td>3.9</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4.47</td>\n",
              "      <td>4.66</td>\n",
              "      <td>4.09</td>\n",
              "      <td>4.09</td>\n",
              "      <td>4.47</td>\n",
              "      <td>21.78</td>\n",
              "      <td>13.22</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>50</th>\n",
              "      <td>293</td>\n",
              "      <td>Liverpool</td>\n",
              "      <td>F</td>\n",
              "      <td>Darwin</td>\n",
              "      <td>7.4</td>\n",
              "      <td>13.5</td>\n",
              "      <td>5</td>\n",
              "      <td>8</td>\n",
              "      <td>215</td>\n",
              "      <td>124.1</td>\n",
              "      <td>...</td>\n",
              "      <td>1.2</td>\n",
              "      <td>4.1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4.73</td>\n",
              "      <td>4.31</td>\n",
              "      <td>4.10</td>\n",
              "      <td>4.73</td>\n",
              "      <td>4.31</td>\n",
              "      <td>22.18</td>\n",
              "      <td>13.14</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>324</th>\n",
              "      <td>373</td>\n",
              "      <td>Manchester United</td>\n",
              "      <td>M</td>\n",
              "      <td>B.Fernandes</td>\n",
              "      <td>8.2</td>\n",
              "      <td>9.9</td>\n",
              "      <td>3</td>\n",
              "      <td>3</td>\n",
              "      <td>309</td>\n",
              "      <td>160.4</td>\n",
              "      <td>...</td>\n",
              "      <td>1.1</td>\n",
              "      <td>4.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4.20</td>\n",
              "      <td>4.60</td>\n",
              "      <td>4.20</td>\n",
              "      <td>4.00</td>\n",
              "      <td>4.60</td>\n",
              "      <td>21.60</td>\n",
              "      <td>13.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>400</th>\n",
              "      <td>516</td>\n",
              "      <td>Tottenham</td>\n",
              "      <td>M</td>\n",
              "      <td>Son</td>\n",
              "      <td>9.8</td>\n",
              "      <td>35.8</td>\n",
              "      <td>12</td>\n",
              "      <td>5</td>\n",
              "      <td>442</td>\n",
              "      <td>180.2</td>\n",
              "      <td>...</td>\n",
              "      <td>1.0</td>\n",
              "      <td>4.4</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4.16</td>\n",
              "      <td>4.16</td>\n",
              "      <td>4.64</td>\n",
              "      <td>4.16</td>\n",
              "      <td>4.88</td>\n",
              "      <td>22.00</td>\n",
              "      <td>12.96</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>67</th>\n",
              "      <td>415</td>\n",
              "      <td>Newcastle United</td>\n",
              "      <td>F</td>\n",
              "      <td>Isak</td>\n",
              "      <td>7.6</td>\n",
              "      <td>14.2</td>\n",
              "      <td>9</td>\n",
              "      <td>0</td>\n",
              "      <td>276</td>\n",
              "      <td>97.1</td>\n",
              "      <td>...</td>\n",
              "      <td>1.2</td>\n",
              "      <td>4.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.80</td>\n",
              "      <td>4.20</td>\n",
              "      <td>4.80</td>\n",
              "      <td>4.80</td>\n",
              "      <td>4.60</td>\n",
              "      <td>22.20</td>\n",
              "      <td>12.80</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>219</th>\n",
              "      <td>362</td>\n",
              "      <td>Chelsea</td>\n",
              "      <td>M</td>\n",
              "      <td>Palmer</td>\n",
              "      <td>5.6</td>\n",
              "      <td>28.6</td>\n",
              "      <td>8</td>\n",
              "      <td>5</td>\n",
              "      <td>323</td>\n",
              "      <td>125.8</td>\n",
              "      <td>...</td>\n",
              "      <td>1.1</td>\n",
              "      <td>4.1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4.31</td>\n",
              "      <td>3.89</td>\n",
              "      <td>4.52</td>\n",
              "      <td>4.10</td>\n",
              "      <td>3.68</td>\n",
              "      <td>20.50</td>\n",
              "      <td>12.72</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>446</th>\n",
              "      <td>36</td>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>D</td>\n",
              "      <td>Cash</td>\n",
              "      <td>4.7</td>\n",
              "      <td>17.7</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>231</td>\n",
              "      <td>71.2</td>\n",
              "      <td>...</td>\n",
              "      <td>1.1</td>\n",
              "      <td>3.8</td>\n",
              "      <td>0.5</td>\n",
              "      <td>4.16</td>\n",
              "      <td>3.62</td>\n",
              "      <td>4.34</td>\n",
              "      <td>3.80</td>\n",
              "      <td>4.16</td>\n",
              "      <td>20.08</td>\n",
              "      <td>12.12</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>548</th>\n",
              "      <td>290</td>\n",
              "      <td>Liverpool</td>\n",
              "      <td>D</td>\n",
              "      <td>Alexander-Arnold</td>\n",
              "      <td>8.5</td>\n",
              "      <td>28.4</td>\n",
              "      <td>2</td>\n",
              "      <td>4</td>\n",
              "      <td>439</td>\n",
              "      <td>131.7</td>\n",
              "      <td>...</td>\n",
              "      <td>1.2</td>\n",
              "      <td>3.8</td>\n",
              "      <td>0.6</td>\n",
              "      <td>4.34</td>\n",
              "      <td>3.98</td>\n",
              "      <td>3.80</td>\n",
              "      <td>4.34</td>\n",
              "      <td>3.98</td>\n",
              "      <td>20.44</td>\n",
              "      <td>12.12</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>310</th>\n",
              "      <td>353</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>M</td>\n",
              "      <td>Foden</td>\n",
              "      <td>7.8</td>\n",
              "      <td>20.5</td>\n",
              "      <td>5</td>\n",
              "      <td>6</td>\n",
              "      <td>379</td>\n",
              "      <td>152.5</td>\n",
              "      <td>...</td>\n",
              "      <td>1.3</td>\n",
              "      <td>3.6</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.76</td>\n",
              "      <td>4.24</td>\n",
              "      <td>3.92</td>\n",
              "      <td>4.24</td>\n",
              "      <td>3.92</td>\n",
              "      <td>20.08</td>\n",
              "      <td>11.92</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>343</th>\n",
              "      <td>412</td>\n",
              "      <td>Newcastle United</td>\n",
              "      <td>M</td>\n",
              "      <td>Gordon</td>\n",
              "      <td>6.1</td>\n",
              "      <td>19.3</td>\n",
              "      <td>6</td>\n",
              "      <td>7</td>\n",
              "      <td>308</td>\n",
              "      <td>123.8</td>\n",
              "      <td>...</td>\n",
              "      <td>1.2</td>\n",
              "      <td>3.7</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.53</td>\n",
              "      <td>3.87</td>\n",
              "      <td>4.38</td>\n",
              "      <td>4.38</td>\n",
              "      <td>4.21</td>\n",
              "      <td>20.37</td>\n",
              "      <td>11.78</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>85</td>\n",
              "      <td>Bournemouth</td>\n",
              "      <td>F</td>\n",
              "      <td>Solanke</td>\n",
              "      <td>7.1</td>\n",
              "      <td>27.7</td>\n",
              "      <td>12</td>\n",
              "      <td>1</td>\n",
              "      <td>313</td>\n",
              "      <td>150.2</td>\n",
              "      <td>...</td>\n",
              "      <td>0.8</td>\n",
              "      <td>4.3</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.61</td>\n",
              "      <td>3.84</td>\n",
              "      <td>4.30</td>\n",
              "      <td>4.07</td>\n",
              "      <td>3.61</td>\n",
              "      <td>19.43</td>\n",
              "      <td>11.75</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>177</th>\n",
              "      <td>134</td>\n",
              "      <td>Brighton</td>\n",
              "      <td>M</td>\n",
              "      <td>Gross</td>\n",
              "      <td>6.4</td>\n",
              "      <td>4.1</td>\n",
              "      <td>3</td>\n",
              "      <td>6</td>\n",
              "      <td>360</td>\n",
              "      <td>162.6</td>\n",
              "      <td>...</td>\n",
              "      <td>1.1</td>\n",
              "      <td>3.5</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.95</td>\n",
              "      <td>4.10</td>\n",
              "      <td>3.65</td>\n",
              "      <td>3.65</td>\n",
              "      <td>3.95</td>\n",
              "      <td>19.30</td>\n",
              "      <td>11.70</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>104</th>\n",
              "      <td>14</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>M</td>\n",
              "      <td>Ødegaard</td>\n",
              "      <td>8.4</td>\n",
              "      <td>15.9</td>\n",
              "      <td>4</td>\n",
              "      <td>4</td>\n",
              "      <td>314</td>\n",
              "      <td>145.8</td>\n",
              "      <td>...</td>\n",
              "      <td>1.2</td>\n",
              "      <td>3.6</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.76</td>\n",
              "      <td>4.24</td>\n",
              "      <td>3.60</td>\n",
              "      <td>3.92</td>\n",
              "      <td>4.08</td>\n",
              "      <td>19.60</td>\n",
              "      <td>11.60</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>121</th>\n",
              "      <td>43</td>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>M</td>\n",
              "      <td>Douglas Luiz</td>\n",
              "      <td>5.5</td>\n",
              "      <td>8.9</td>\n",
              "      <td>6</td>\n",
              "      <td>3</td>\n",
              "      <td>403</td>\n",
              "      <td>116.5</td>\n",
              "      <td>...</td>\n",
              "      <td>1.1</td>\n",
              "      <td>3.6</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.92</td>\n",
              "      <td>3.44</td>\n",
              "      <td>4.08</td>\n",
              "      <td>3.60</td>\n",
              "      <td>3.92</td>\n",
              "      <td>18.96</td>\n",
              "      <td>11.44</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>333</th>\n",
              "      <td>396</td>\n",
              "      <td>Manchester United</td>\n",
              "      <td>M</td>\n",
              "      <td>Rashford</td>\n",
              "      <td>8.4</td>\n",
              "      <td>10.7</td>\n",
              "      <td>3</td>\n",
              "      <td>3</td>\n",
              "      <td>174</td>\n",
              "      <td>90.3</td>\n",
              "      <td>...</td>\n",
              "      <td>1.1</td>\n",
              "      <td>3.5</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.65</td>\n",
              "      <td>3.95</td>\n",
              "      <td>3.65</td>\n",
              "      <td>3.50</td>\n",
              "      <td>3.95</td>\n",
              "      <td>18.70</td>\n",
              "      <td>11.25</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>574</th>\n",
              "      <td>342</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>D</td>\n",
              "      <td>Aké</td>\n",
              "      <td>5.0</td>\n",
              "      <td>6.0</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>257</td>\n",
              "      <td>52.5</td>\n",
              "      <td>...</td>\n",
              "      <td>1.3</td>\n",
              "      <td>3.4</td>\n",
              "      <td>0.9</td>\n",
              "      <td>3.54</td>\n",
              "      <td>3.96</td>\n",
              "      <td>3.68</td>\n",
              "      <td>3.96</td>\n",
              "      <td>3.68</td>\n",
              "      <td>18.82</td>\n",
              "      <td>11.18</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>130</th>\n",
              "      <td>599</td>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>M</td>\n",
              "      <td>Diaby</td>\n",
              "      <td>6.6</td>\n",
              "      <td>9.1</td>\n",
              "      <td>4</td>\n",
              "      <td>7</td>\n",
              "      <td>252</td>\n",
              "      <td>109.6</td>\n",
              "      <td>...</td>\n",
              "      <td>1.1</td>\n",
              "      <td>3.5</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.80</td>\n",
              "      <td>3.35</td>\n",
              "      <td>3.95</td>\n",
              "      <td>3.50</td>\n",
              "      <td>3.80</td>\n",
              "      <td>18.40</td>\n",
              "      <td>11.10</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>182</th>\n",
              "      <td>143</td>\n",
              "      <td>Brighton</td>\n",
              "      <td>M</td>\n",
              "      <td>Mitoma</td>\n",
              "      <td>6.4</td>\n",
              "      <td>15.4</td>\n",
              "      <td>3</td>\n",
              "      <td>5</td>\n",
              "      <td>211</td>\n",
              "      <td>118.9</td>\n",
              "      <td>...</td>\n",
              "      <td>1.1</td>\n",
              "      <td>3.3</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.69</td>\n",
              "      <td>3.82</td>\n",
              "      <td>3.43</td>\n",
              "      <td>3.43</td>\n",
              "      <td>3.69</td>\n",
              "      <td>18.06</td>\n",
              "      <td>10.94</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>397</th>\n",
              "      <td>509</td>\n",
              "      <td>Tottenham</td>\n",
              "      <td>M</td>\n",
              "      <td>Richarlison</td>\n",
              "      <td>6.9</td>\n",
              "      <td>7.6</td>\n",
              "      <td>6</td>\n",
              "      <td>3</td>\n",
              "      <td>162</td>\n",
              "      <td>89.6</td>\n",
              "      <td>...</td>\n",
              "      <td>1.0</td>\n",
              "      <td>3.7</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.53</td>\n",
              "      <td>3.53</td>\n",
              "      <td>3.87</td>\n",
              "      <td>3.53</td>\n",
              "      <td>4.04</td>\n",
              "      <td>18.50</td>\n",
              "      <td>10.93</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>438</th>\n",
              "      <td>20</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>D</td>\n",
              "      <td>Saliba</td>\n",
              "      <td>5.6</td>\n",
              "      <td>36.5</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>376</td>\n",
              "      <td>52.7</td>\n",
              "      <td>...</td>\n",
              "      <td>1.2</td>\n",
              "      <td>3.4</td>\n",
              "      <td>0.9</td>\n",
              "      <td>3.54</td>\n",
              "      <td>3.96</td>\n",
              "      <td>3.40</td>\n",
              "      <td>3.68</td>\n",
              "      <td>3.82</td>\n",
              "      <td>18.40</td>\n",
              "      <td>10.90</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>441</th>\n",
              "      <td>29</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>D</td>\n",
              "      <td>White</td>\n",
              "      <td>5.6</td>\n",
              "      <td>10.9</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>343</td>\n",
              "      <td>71.5</td>\n",
              "      <td>...</td>\n",
              "      <td>1.2</td>\n",
              "      <td>3.4</td>\n",
              "      <td>0.9</td>\n",
              "      <td>3.54</td>\n",
              "      <td>3.96</td>\n",
              "      <td>3.40</td>\n",
              "      <td>3.68</td>\n",
              "      <td>3.82</td>\n",
              "      <td>18.40</td>\n",
              "      <td>10.90</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>442</th>\n",
              "      <td>31</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>D</td>\n",
              "      <td>Zinchenko</td>\n",
              "      <td>5.2</td>\n",
              "      <td>12.5</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>320</td>\n",
              "      <td>67.7</td>\n",
              "      <td>...</td>\n",
              "      <td>1.2</td>\n",
              "      <td>3.4</td>\n",
              "      <td>0.9</td>\n",
              "      <td>3.54</td>\n",
              "      <td>3.96</td>\n",
              "      <td>3.40</td>\n",
              "      <td>3.68</td>\n",
              "      <td>3.82</td>\n",
              "      <td>18.40</td>\n",
              "      <td>10.90</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>217</th>\n",
              "      <td>216</td>\n",
              "      <td>Chelsea</td>\n",
              "      <td>M</td>\n",
              "      <td>Sterling</td>\n",
              "      <td>7.1</td>\n",
              "      <td>8.4</td>\n",
              "      <td>5</td>\n",
              "      <td>6</td>\n",
              "      <td>231</td>\n",
              "      <td>121.7</td>\n",
              "      <td>...</td>\n",
              "      <td>1.1</td>\n",
              "      <td>3.5</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.65</td>\n",
              "      <td>3.35</td>\n",
              "      <td>3.80</td>\n",
              "      <td>3.50</td>\n",
              "      <td>3.20</td>\n",
              "      <td>17.50</td>\n",
              "      <td>10.80</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>413</th>\n",
              "      <td>664</td>\n",
              "      <td>West Ham</td>\n",
              "      <td>M</td>\n",
              "      <td>Ward-Prowse</td>\n",
              "      <td>6.0</td>\n",
              "      <td>8.2</td>\n",
              "      <td>3</td>\n",
              "      <td>6</td>\n",
              "      <td>396</td>\n",
              "      <td>124.6</td>\n",
              "      <td>...</td>\n",
              "      <td>1.0</td>\n",
              "      <td>3.4</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.68</td>\n",
              "      <td>3.68</td>\n",
              "      <td>3.26</td>\n",
              "      <td>3.12</td>\n",
              "      <td>3.68</td>\n",
              "      <td>17.42</td>\n",
              "      <td>10.62</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>477</th>\n",
              "      <td>129</td>\n",
              "      <td>Brighton</td>\n",
              "      <td>D</td>\n",
              "      <td>Dunk</td>\n",
              "      <td>5.0</td>\n",
              "      <td>2.6</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>219</td>\n",
              "      <td>66.4</td>\n",
              "      <td>...</td>\n",
              "      <td>1.1</td>\n",
              "      <td>3.2</td>\n",
              "      <td>0.3</td>\n",
              "      <td>3.56</td>\n",
              "      <td>3.68</td>\n",
              "      <td>3.32</td>\n",
              "      <td>3.32</td>\n",
              "      <td>3.56</td>\n",
              "      <td>17.44</td>\n",
              "      <td>10.56</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>436</th>\n",
              "      <td>5</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>D</td>\n",
              "      <td>Gabriel</td>\n",
              "      <td>5.0</td>\n",
              "      <td>17.5</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>296</td>\n",
              "      <td>51.0</td>\n",
              "      <td>...</td>\n",
              "      <td>1.2</td>\n",
              "      <td>3.3</td>\n",
              "      <td>0.9</td>\n",
              "      <td>3.43</td>\n",
              "      <td>3.82</td>\n",
              "      <td>3.30</td>\n",
              "      <td>3.56</td>\n",
              "      <td>3.69</td>\n",
              "      <td>17.80</td>\n",
              "      <td>10.55</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>12</th>\n",
              "      <td>119</td>\n",
              "      <td>Brentford</td>\n",
              "      <td>F</td>\n",
              "      <td>Wissa</td>\n",
              "      <td>5.7</td>\n",
              "      <td>5.7</td>\n",
              "      <td>4</td>\n",
              "      <td>2</td>\n",
              "      <td>195</td>\n",
              "      <td>90.4</td>\n",
              "      <td>...</td>\n",
              "      <td>1.1</td>\n",
              "      <td>3.4</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.82</td>\n",
              "      <td>3.54</td>\n",
              "      <td>3.12</td>\n",
              "      <td>3.82</td>\n",
              "      <td>3.26</td>\n",
              "      <td>17.56</td>\n",
              "      <td>10.48</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>212</th>\n",
              "      <td>199</td>\n",
              "      <td>Chelsea</td>\n",
              "      <td>M</td>\n",
              "      <td>Enzo</td>\n",
              "      <td>4.8</td>\n",
              "      <td>2.3</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>199</td>\n",
              "      <td>78.9</td>\n",
              "      <td>...</td>\n",
              "      <td>1.1</td>\n",
              "      <td>3.4</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.54</td>\n",
              "      <td>3.26</td>\n",
              "      <td>3.68</td>\n",
              "      <td>3.40</td>\n",
              "      <td>3.12</td>\n",
              "      <td>17.00</td>\n",
              "      <td>10.48</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>573</th>\n",
              "      <td>341</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>D</td>\n",
              "      <td>Akanji</td>\n",
              "      <td>4.9</td>\n",
              "      <td>5.2</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>259</td>\n",
              "      <td>49.5</td>\n",
              "      <td>...</td>\n",
              "      <td>1.3</td>\n",
              "      <td>3.2</td>\n",
              "      <td>0.9</td>\n",
              "      <td>3.32</td>\n",
              "      <td>3.68</td>\n",
              "      <td>3.44</td>\n",
              "      <td>3.68</td>\n",
              "      <td>3.44</td>\n",
              "      <td>17.56</td>\n",
              "      <td>10.44</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>576</th>\n",
              "      <td>350</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>D</td>\n",
              "      <td>Rúben</td>\n",
              "      <td>5.5</td>\n",
              "      <td>6.5</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>234</td>\n",
              "      <td>49.4</td>\n",
              "      <td>...</td>\n",
              "      <td>1.3</td>\n",
              "      <td>3.2</td>\n",
              "      <td>0.9</td>\n",
              "      <td>3.32</td>\n",
              "      <td>3.68</td>\n",
              "      <td>3.44</td>\n",
              "      <td>3.68</td>\n",
              "      <td>3.44</td>\n",
              "      <td>17.56</td>\n",
              "      <td>10.44</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>581</th>\n",
              "      <td>369</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>D</td>\n",
              "      <td>Walker</td>\n",
              "      <td>5.4</td>\n",
              "      <td>16.7</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>346</td>\n",
              "      <td>63.5</td>\n",
              "      <td>...</td>\n",
              "      <td>1.3</td>\n",
              "      <td>3.2</td>\n",
              "      <td>0.9</td>\n",
              "      <td>3.32</td>\n",
              "      <td>3.68</td>\n",
              "      <td>3.44</td>\n",
              "      <td>3.68</td>\n",
              "      <td>3.44</td>\n",
              "      <td>17.56</td>\n",
              "      <td>10.44</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>277</th>\n",
              "      <td>303</td>\n",
              "      <td>Liverpool</td>\n",
              "      <td>M</td>\n",
              "      <td>Luis Díaz</td>\n",
              "      <td>7.3</td>\n",
              "      <td>6.0</td>\n",
              "      <td>3</td>\n",
              "      <td>2</td>\n",
              "      <td>147</td>\n",
              "      <td>90.6</td>\n",
              "      <td>...</td>\n",
              "      <td>1.2</td>\n",
              "      <td>3.3</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.69</td>\n",
              "      <td>3.43</td>\n",
              "      <td>3.30</td>\n",
              "      <td>3.69</td>\n",
              "      <td>3.43</td>\n",
              "      <td>17.54</td>\n",
              "      <td>10.42</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>8</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>F</td>\n",
              "      <td>G.Jesus</td>\n",
              "      <td>8.0</td>\n",
              "      <td>5.4</td>\n",
              "      <td>3</td>\n",
              "      <td>2</td>\n",
              "      <td>153</td>\n",
              "      <td>95.0</td>\n",
              "      <td>...</td>\n",
              "      <td>1.2</td>\n",
              "      <td>3.2</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.32</td>\n",
              "      <td>3.68</td>\n",
              "      <td>3.20</td>\n",
              "      <td>3.44</td>\n",
              "      <td>3.56</td>\n",
              "      <td>17.20</td>\n",
              "      <td>10.20</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>100</th>\n",
              "      <td>6</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>M</td>\n",
              "      <td>Havertz</td>\n",
              "      <td>7.1</td>\n",
              "      <td>1.6</td>\n",
              "      <td>4</td>\n",
              "      <td>1</td>\n",
              "      <td>152</td>\n",
              "      <td>72.0</td>\n",
              "      <td>...</td>\n",
              "      <td>1.2</td>\n",
              "      <td>3.2</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.32</td>\n",
              "      <td>3.68</td>\n",
              "      <td>3.20</td>\n",
              "      <td>3.44</td>\n",
              "      <td>3.56</td>\n",
              "      <td>17.20</td>\n",
              "      <td>10.20</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>117</th>\n",
              "      <td>34</td>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>M</td>\n",
              "      <td>Bailey</td>\n",
              "      <td>5.7</td>\n",
              "      <td>3.8</td>\n",
              "      <td>6</td>\n",
              "      <td>5</td>\n",
              "      <td>224</td>\n",
              "      <td>91.5</td>\n",
              "      <td>...</td>\n",
              "      <td>1.1</td>\n",
              "      <td>3.2</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.44</td>\n",
              "      <td>3.08</td>\n",
              "      <td>3.56</td>\n",
              "      <td>3.20</td>\n",
              "      <td>3.44</td>\n",
              "      <td>16.72</td>\n",
              "      <td>10.08</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>124</th>\n",
              "      <td>50</td>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>M</td>\n",
              "      <td>McGinn</td>\n",
              "      <td>5.6</td>\n",
              "      <td>2.0</td>\n",
              "      <td>5</td>\n",
              "      <td>2</td>\n",
              "      <td>302</td>\n",
              "      <td>110.7</td>\n",
              "      <td>...</td>\n",
              "      <td>1.1</td>\n",
              "      <td>3.2</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.44</td>\n",
              "      <td>3.08</td>\n",
              "      <td>3.56</td>\n",
              "      <td>3.20</td>\n",
              "      <td>3.44</td>\n",
              "      <td>16.72</td>\n",
              "      <td>10.08</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>556</th>\n",
              "      <td>313</td>\n",
              "      <td>Liverpool</td>\n",
              "      <td>D</td>\n",
              "      <td>Virgil</td>\n",
              "      <td>6.3</td>\n",
              "      <td>12.2</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>361</td>\n",
              "      <td>81.3</td>\n",
              "      <td>...</td>\n",
              "      <td>1.2</td>\n",
              "      <td>3.2</td>\n",
              "      <td>0.6</td>\n",
              "      <td>3.56</td>\n",
              "      <td>3.32</td>\n",
              "      <td>3.20</td>\n",
              "      <td>3.56</td>\n",
              "      <td>3.32</td>\n",
              "      <td>16.96</td>\n",
              "      <td>10.08</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>306</th>\n",
              "      <td>344</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>M</td>\n",
              "      <td>Bernardo</td>\n",
              "      <td>6.5</td>\n",
              "      <td>5.2</td>\n",
              "      <td>5</td>\n",
              "      <td>4</td>\n",
              "      <td>353</td>\n",
              "      <td>125.2</td>\n",
              "      <td>...</td>\n",
              "      <td>1.3</td>\n",
              "      <td>3.1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.21</td>\n",
              "      <td>3.54</td>\n",
              "      <td>3.32</td>\n",
              "      <td>3.54</td>\n",
              "      <td>3.32</td>\n",
              "      <td>16.93</td>\n",
              "      <td>10.07</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>316</th>\n",
              "      <td>365</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>M</td>\n",
              "      <td>Rodrigo</td>\n",
              "      <td>5.6</td>\n",
              "      <td>5.0</td>\n",
              "      <td>4</td>\n",
              "      <td>3</td>\n",
              "      <td>303</td>\n",
              "      <td>100.5</td>\n",
              "      <td>...</td>\n",
              "      <td>1.3</td>\n",
              "      <td>3.1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.21</td>\n",
              "      <td>3.54</td>\n",
              "      <td>3.32</td>\n",
              "      <td>3.54</td>\n",
              "      <td>3.32</td>\n",
              "      <td>16.93</td>\n",
              "      <td>10.07</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>582</th>\n",
              "      <td>616</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>D</td>\n",
              "      <td>Gvardiol</td>\n",
              "      <td>4.8</td>\n",
              "      <td>3.4</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>233</td>\n",
              "      <td>52.0</td>\n",
              "      <td>...</td>\n",
              "      <td>1.3</td>\n",
              "      <td>3.1</td>\n",
              "      <td>0.9</td>\n",
              "      <td>3.21</td>\n",
              "      <td>3.54</td>\n",
              "      <td>3.32</td>\n",
              "      <td>3.54</td>\n",
              "      <td>3.32</td>\n",
              "      <td>16.93</td>\n",
              "      <td>10.07</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>410</th>\n",
              "      <td>542</td>\n",
              "      <td>West Ham</td>\n",
              "      <td>M</td>\n",
              "      <td>Souček</td>\n",
              "      <td>4.9</td>\n",
              "      <td>1.5</td>\n",
              "      <td>5</td>\n",
              "      <td>1</td>\n",
              "      <td>242</td>\n",
              "      <td>81.5</td>\n",
              "      <td>...</td>\n",
              "      <td>1.0</td>\n",
              "      <td>3.2</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.44</td>\n",
              "      <td>3.44</td>\n",
              "      <td>3.08</td>\n",
              "      <td>2.96</td>\n",
              "      <td>3.44</td>\n",
              "      <td>16.36</td>\n",
              "      <td>9.96</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>421</th>\n",
              "      <td>557</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>M</td>\n",
              "      <td>Hee Chan</td>\n",
              "      <td>5.7</td>\n",
              "      <td>9.2</td>\n",
              "      <td>10</td>\n",
              "      <td>3</td>\n",
              "      <td>280</td>\n",
              "      <td>110.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0.8</td>\n",
              "      <td>3.8</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.26</td>\n",
              "      <td>3.26</td>\n",
              "      <td>3.44</td>\n",
              "      <td>3.26</td>\n",
              "      <td>3.44</td>\n",
              "      <td>16.66</td>\n",
              "      <td>9.96</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>50 rows × 23 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-e3bdb359-4678-43c0-a685-9e0882a4e1c7')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-e3bdb359-4678-43c0-a685-9e0882a4e1c7 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-e3bdb359-4678-43c0-a685-9e0882a4e1c7');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-ccc6b34b-fcd8-4b6d-8aab-1a5689c5fa5b\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-ccc6b34b-fcd8-4b6d-8aab-1a5689c5fa5b')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-ccc6b34b-fcd8-4b6d-8aab-1a5689c5fa5b button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 50
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "Top50 = rawdfgw228x.nlargest(50, '5GW Total')\n",
        "Top50"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "id": "Vuuihhw-Jx7s",
        "outputId": "42711125-af5b-4163-aded-706c2ec3e63f"
      },
      "execution_count": 51,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "      id                     team pos              name  cost  \\\n",
              "279  308                Liverpool   M             Salah  13.2   \n",
              "62   355          Manchester City   F           Haaland  13.9   \n",
              "107   19                  Arsenal   M              Saka   9.0   \n",
              "160  108                Brentford   M            Mbeumo   6.8   \n",
              "61   343          Manchester City   F         J.Alvarez   7.0   \n",
              "5     60              Aston Villa   F           Watkins   8.9   \n",
              "67   415         Newcastle United   F              Isak   7.6   \n",
              "404  526                 West Ham   M             Bowen   8.1   \n",
              "50   293                Liverpool   F            Darwin   7.4   \n",
              "400  516                Tottenham   M               Son   9.8   \n",
              "16   135                 Brighton   F        João Pedro   5.4   \n",
              "324  373        Manchester United   M       B.Fernandes   8.2   \n",
              "30   211                  Chelsea   F         N.Jackson   6.9   \n",
              "219  362                  Chelsea   M            Palmer   5.6   \n",
              "548  290                Liverpool   D  Alexander-Arnold   8.5   \n",
              "343  412         Newcastle United   M            Gordon   6.1   \n",
              "310  353          Manchester City   M             Foden   7.8   \n",
              "446   36              Aston Villa   D              Cash   4.7   \n",
              "104   14                  Arsenal   M          Ødegaard   8.4   \n",
              "9     85              Bournemouth   F           Solanke   7.1   \n",
              "177  134                 Brighton   M             Gross   6.4   \n",
              "121   43              Aston Villa   M      Douglas Luiz   5.5   \n",
              "574  342          Manchester City   D               Aké   5.0   \n",
              "333  396        Manchester United   M          Rashford   8.4   \n",
              "397  509                Tottenham   M       Richarlison   6.9   \n",
              "130  599              Aston Villa   M             Diaby   6.6   \n",
              "438   20                  Arsenal   D            Saliba   5.6   \n",
              "441   29                  Arsenal   D             White   5.6   \n",
              "442   31                  Arsenal   D         Zinchenko   5.2   \n",
              "182  143                 Brighton   M            Mitoma   6.4   \n",
              "436    5                  Arsenal   D           Gabriel   5.0   \n",
              "573  341          Manchester City   D            Akanji   4.9   \n",
              "576  350          Manchester City   D             Rúben   5.5   \n",
              "581  369          Manchester City   D            Walker   5.4   \n",
              "12   119                Brentford   F             Wissa   5.7   \n",
              "277  303                Liverpool   M         Luis Díaz   7.3   \n",
              "217  216                  Chelsea   M          Sterling   7.1   \n",
              "477  129                 Brighton   D              Dunk   5.0   \n",
              "413  664                 West Ham   M       Ward-Prowse   6.0   \n",
              "1      8                  Arsenal   F           G.Jesus   8.0   \n",
              "100    6                  Arsenal   M           Havertz   7.1   \n",
              "212  199                  Chelsea   M              Enzo   4.8   \n",
              "556  313                Liverpool   D            Virgil   6.3   \n",
              "306  344          Manchester City   M          Bernardo   6.5   \n",
              "316  365          Manchester City   M           Rodrigo   5.6   \n",
              "582  616          Manchester City   D          Gvardiol   4.8   \n",
              "117   34              Aston Villa   M            Bailey   5.7   \n",
              "124   50              Aston Villa   M            McGinn   5.6   \n",
              "339  402         Newcastle United   M           Almirón   6.2   \n",
              "421  557  Wolverhampton Wanderers   M          Hee Chan   5.7   \n",
              "\n",
              "     selected_by_percent  goals_scored  assists  bps  ict_index  ...  \\\n",
              "279                 44.0            14        8  469      233.1  ...   \n",
              "62                  53.7            14        5  417      159.8  ...   \n",
              "107                 59.3             6        8  388      199.2  ...   \n",
              "160                  7.1             7        4  250      122.1  ...   \n",
              "61                  35.1             6        8  403      156.1  ...   \n",
              "5                   54.5             9       11  406      167.0  ...   \n",
              "67                  14.2             9        0  276       97.1  ...   \n",
              "404                 32.5            11        2  314      148.1  ...   \n",
              "50                  13.5             5        8  215      124.1  ...   \n",
              "400                 35.8            12        5  442      180.2  ...   \n",
              "16                  11.5             7        2  267      123.4  ...   \n",
              "324                  9.9             3        3  309      160.4  ...   \n",
              "30                   5.5             7        2  218      124.2  ...   \n",
              "219                 28.6             8        5  323      125.8  ...   \n",
              "548                 28.4             2        4  439      131.7  ...   \n",
              "343                 19.3             6        7  308      123.8  ...   \n",
              "310                 20.5             5        6  379      152.5  ...   \n",
              "446                 17.7             2        1  231       71.2  ...   \n",
              "104                 15.9             4        4  314      145.8  ...   \n",
              "9                   27.7            12        1  313      150.2  ...   \n",
              "177                  4.1             3        6  360      162.6  ...   \n",
              "121                  8.9             6        3  403      116.5  ...   \n",
              "574                  6.0             2        2  257       52.5  ...   \n",
              "333                 10.7             3        3  174       90.3  ...   \n",
              "397                  7.6             6        3  162       89.6  ...   \n",
              "130                  9.1             4        7  252      109.6  ...   \n",
              "438                 36.5             1        1  376       52.7  ...   \n",
              "441                 10.9             1        2  343       71.5  ...   \n",
              "442                 12.5             1        1  320       67.7  ...   \n",
              "182                 15.4             3        5  211      118.9  ...   \n",
              "436                 17.5             1        0  296       51.0  ...   \n",
              "573                  5.2             2        0  259       49.5  ...   \n",
              "576                  6.5             0        0  234       49.4  ...   \n",
              "581                 16.7             0        1  346       63.5  ...   \n",
              "12                   5.7             4        2  195       90.4  ...   \n",
              "277                  6.0             3        2  147       90.6  ...   \n",
              "217                  8.4             5        6  231      121.7  ...   \n",
              "477                  2.6             1        0  219       66.4  ...   \n",
              "413                  8.2             3        6  396      124.6  ...   \n",
              "1                    5.4             3        2  153       95.0  ...   \n",
              "100                  1.6             4        1  152       72.0  ...   \n",
              "212                  2.3             2        1  199       78.9  ...   \n",
              "556                 12.2             1        2  361       81.3  ...   \n",
              "306                  5.2             5        4  353      125.2  ...   \n",
              "316                  5.0             4        3  303      100.5  ...   \n",
              "582                  3.4             0        0  233       52.0  ...   \n",
              "117                  3.8             6        5  224       91.5  ...   \n",
              "124                  2.0             5        2  302      110.7  ...   \n",
              "339                  4.1             3        1  210       78.3  ...   \n",
              "421                  9.2            10        3  280      110.0  ...   \n",
              "\n",
              "     home_adjustment  xPallgw  xCSP  gw21  gw22  gw23  gw24  gw25  5GW Total  \\\n",
              "279              1.2      6.3   NaN  7.59  6.73  6.30  7.59  6.73      34.94   \n",
              "62               1.3      5.2   NaN  5.52  6.48  5.84  6.48  5.84      30.16   \n",
              "107              1.2      4.7   NaN  4.97  5.78  4.70  5.24  5.51      26.20   \n",
              "160              1.1      4.7   NaN  5.51  4.97  4.16  5.51  4.43      24.58   \n",
              "61               1.3      4.0   NaN  4.20  4.80  4.40  4.80  4.40      22.60   \n",
              "5                1.1      4.2   NaN  4.64  3.98  4.86  4.20  4.64      22.32   \n",
              "67               1.2      4.0   NaN  3.80  4.20  4.80  4.80  4.60      22.20   \n",
              "404              1.0      4.3   NaN  4.76  4.76  4.07  3.84  4.76      22.19   \n",
              "50               1.2      4.1   NaN  4.73  4.31  4.10  4.73  4.31      22.18   \n",
              "400              1.0      4.4   NaN  4.16  4.16  4.64  4.16  4.88      22.00   \n",
              "16               1.1      3.9   NaN  4.47  4.66  4.09  4.09  4.47      21.78   \n",
              "324              1.1      4.0   NaN  4.20  4.60  4.20  4.00  4.60      21.60   \n",
              "30               1.1      4.3   NaN  4.53  4.07  4.76  4.30  3.84      21.50   \n",
              "219              1.1      4.1   NaN  4.31  3.89  4.52  4.10  3.68      20.50   \n",
              "548              1.2      3.8   0.6  4.34  3.98  3.80  4.34  3.98      20.44   \n",
              "343              1.2      3.7   NaN  3.53  3.87  4.38  4.38  4.21      20.37   \n",
              "310              1.3      3.6   NaN  3.76  4.24  3.92  4.24  3.92      20.08   \n",
              "446              1.1      3.8   0.5  4.16  3.62  4.34  3.80  4.16      20.08   \n",
              "104              1.2      3.6   NaN  3.76  4.24  3.60  3.92  4.08      19.60   \n",
              "9                0.8      4.3   NaN  3.61  3.84  4.30  4.07  3.61      19.43   \n",
              "177              1.1      3.5   NaN  3.95  4.10  3.65  3.65  3.95      19.30   \n",
              "121              1.1      3.6   NaN  3.92  3.44  4.08  3.60  3.92      18.96   \n",
              "574              1.3      3.4   0.9  3.54  3.96  3.68  3.96  3.68      18.82   \n",
              "333              1.1      3.5   NaN  3.65  3.95  3.65  3.50  3.95      18.70   \n",
              "397              1.0      3.7   NaN  3.53  3.53  3.87  3.53  4.04      18.50   \n",
              "130              1.1      3.5   NaN  3.80  3.35  3.95  3.50  3.80      18.40   \n",
              "438              1.2      3.4   0.9  3.54  3.96  3.40  3.68  3.82      18.40   \n",
              "441              1.2      3.4   0.9  3.54  3.96  3.40  3.68  3.82      18.40   \n",
              "442              1.2      3.4   0.9  3.54  3.96  3.40  3.68  3.82      18.40   \n",
              "182              1.1      3.3   NaN  3.69  3.82  3.43  3.43  3.69      18.06   \n",
              "436              1.2      3.3   0.9  3.43  3.82  3.30  3.56  3.69      17.80   \n",
              "573              1.3      3.2   0.9  3.32  3.68  3.44  3.68  3.44      17.56   \n",
              "576              1.3      3.2   0.9  3.32  3.68  3.44  3.68  3.44      17.56   \n",
              "581              1.3      3.2   0.9  3.32  3.68  3.44  3.68  3.44      17.56   \n",
              "12               1.1      3.4   NaN  3.82  3.54  3.12  3.82  3.26      17.56   \n",
              "277              1.2      3.3   NaN  3.69  3.43  3.30  3.69  3.43      17.54   \n",
              "217              1.1      3.5   NaN  3.65  3.35  3.80  3.50  3.20      17.50   \n",
              "477              1.1      3.2   0.3  3.56  3.68  3.32  3.32  3.56      17.44   \n",
              "413              1.0      3.4   NaN  3.68  3.68  3.26  3.12  3.68      17.42   \n",
              "1                1.2      3.2   NaN  3.32  3.68  3.20  3.44  3.56      17.20   \n",
              "100              1.2      3.2   NaN  3.32  3.68  3.20  3.44  3.56      17.20   \n",
              "212              1.1      3.4   NaN  3.54  3.26  3.68  3.40  3.12      17.00   \n",
              "556              1.2      3.2   0.6  3.56  3.32  3.20  3.56  3.32      16.96   \n",
              "306              1.3      3.1   NaN  3.21  3.54  3.32  3.54  3.32      16.93   \n",
              "316              1.3      3.1   NaN  3.21  3.54  3.32  3.54  3.32      16.93   \n",
              "582              1.3      3.1   0.9  3.21  3.54  3.32  3.54  3.32      16.93   \n",
              "117              1.1      3.2   NaN  3.44  3.08  3.56  3.20  3.44      16.72   \n",
              "124              1.1      3.2   NaN  3.44  3.08  3.56  3.20  3.44      16.72   \n",
              "339              1.2      3.1   NaN  2.99  3.21  3.54  3.54  3.43      16.71   \n",
              "421              0.8      3.8   NaN  3.26  3.26  3.44  3.26  3.44      16.66   \n",
              "\n",
              "     3GW Total  \n",
              "279      20.62  \n",
              "62       17.84  \n",
              "107      15.45  \n",
              "160      14.64  \n",
              "61       13.40  \n",
              "5        13.48  \n",
              "67       12.80  \n",
              "404      13.59  \n",
              "50       13.14  \n",
              "400      12.96  \n",
              "16       13.22  \n",
              "324      13.00  \n",
              "30       13.36  \n",
              "219      12.72  \n",
              "548      12.12  \n",
              "343      11.78  \n",
              "310      11.92  \n",
              "446      12.12  \n",
              "104      11.60  \n",
              "9        11.75  \n",
              "177      11.70  \n",
              "121      11.44  \n",
              "574      11.18  \n",
              "333      11.25  \n",
              "397      10.93  \n",
              "130      11.10  \n",
              "438      10.90  \n",
              "441      10.90  \n",
              "442      10.90  \n",
              "182      10.94  \n",
              "436      10.55  \n",
              "573      10.44  \n",
              "576      10.44  \n",
              "581      10.44  \n",
              "12       10.48  \n",
              "277      10.42  \n",
              "217      10.80  \n",
              "477      10.56  \n",
              "413      10.62  \n",
              "1        10.20  \n",
              "100      10.20  \n",
              "212      10.48  \n",
              "556      10.08  \n",
              "306      10.07  \n",
              "316      10.07  \n",
              "582      10.07  \n",
              "117      10.08  \n",
              "124      10.08  \n",
              "339       9.74  \n",
              "421       9.96  \n",
              "\n",
              "[50 rows x 23 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-249afa6f-7c1c-4564-99fd-afddbc982a79\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>team</th>\n",
              "      <th>pos</th>\n",
              "      <th>name</th>\n",
              "      <th>cost</th>\n",
              "      <th>selected_by_percent</th>\n",
              "      <th>goals_scored</th>\n",
              "      <th>assists</th>\n",
              "      <th>bps</th>\n",
              "      <th>ict_index</th>\n",
              "      <th>...</th>\n",
              "      <th>home_adjustment</th>\n",
              "      <th>xPallgw</th>\n",
              "      <th>xCSP</th>\n",
              "      <th>gw21</th>\n",
              "      <th>gw22</th>\n",
              "      <th>gw23</th>\n",
              "      <th>gw24</th>\n",
              "      <th>gw25</th>\n",
              "      <th>5GW Total</th>\n",
              "      <th>3GW Total</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>279</th>\n",
              "      <td>308</td>\n",
              "      <td>Liverpool</td>\n",
              "      <td>M</td>\n",
              "      <td>Salah</td>\n",
              "      <td>13.2</td>\n",
              "      <td>44.0</td>\n",
              "      <td>14</td>\n",
              "      <td>8</td>\n",
              "      <td>469</td>\n",
              "      <td>233.1</td>\n",
              "      <td>...</td>\n",
              "      <td>1.2</td>\n",
              "      <td>6.3</td>\n",
              "      <td>NaN</td>\n",
              "      <td>7.59</td>\n",
              "      <td>6.73</td>\n",
              "      <td>6.30</td>\n",
              "      <td>7.59</td>\n",
              "      <td>6.73</td>\n",
              "      <td>34.94</td>\n",
              "      <td>20.62</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>62</th>\n",
              "      <td>355</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>F</td>\n",
              "      <td>Haaland</td>\n",
              "      <td>13.9</td>\n",
              "      <td>53.7</td>\n",
              "      <td>14</td>\n",
              "      <td>5</td>\n",
              "      <td>417</td>\n",
              "      <td>159.8</td>\n",
              "      <td>...</td>\n",
              "      <td>1.3</td>\n",
              "      <td>5.2</td>\n",
              "      <td>NaN</td>\n",
              "      <td>5.52</td>\n",
              "      <td>6.48</td>\n",
              "      <td>5.84</td>\n",
              "      <td>6.48</td>\n",
              "      <td>5.84</td>\n",
              "      <td>30.16</td>\n",
              "      <td>17.84</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>107</th>\n",
              "      <td>19</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>M</td>\n",
              "      <td>Saka</td>\n",
              "      <td>9.0</td>\n",
              "      <td>59.3</td>\n",
              "      <td>6</td>\n",
              "      <td>8</td>\n",
              "      <td>388</td>\n",
              "      <td>199.2</td>\n",
              "      <td>...</td>\n",
              "      <td>1.2</td>\n",
              "      <td>4.7</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4.97</td>\n",
              "      <td>5.78</td>\n",
              "      <td>4.70</td>\n",
              "      <td>5.24</td>\n",
              "      <td>5.51</td>\n",
              "      <td>26.20</td>\n",
              "      <td>15.45</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>160</th>\n",
              "      <td>108</td>\n",
              "      <td>Brentford</td>\n",
              "      <td>M</td>\n",
              "      <td>Mbeumo</td>\n",
              "      <td>6.8</td>\n",
              "      <td>7.1</td>\n",
              "      <td>7</td>\n",
              "      <td>4</td>\n",
              "      <td>250</td>\n",
              "      <td>122.1</td>\n",
              "      <td>...</td>\n",
              "      <td>1.1</td>\n",
              "      <td>4.7</td>\n",
              "      <td>NaN</td>\n",
              "      <td>5.51</td>\n",
              "      <td>4.97</td>\n",
              "      <td>4.16</td>\n",
              "      <td>5.51</td>\n",
              "      <td>4.43</td>\n",
              "      <td>24.58</td>\n",
              "      <td>14.64</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>61</th>\n",
              "      <td>343</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>F</td>\n",
              "      <td>J.Alvarez</td>\n",
              "      <td>7.0</td>\n",
              "      <td>35.1</td>\n",
              "      <td>6</td>\n",
              "      <td>8</td>\n",
              "      <td>403</td>\n",
              "      <td>156.1</td>\n",
              "      <td>...</td>\n",
              "      <td>1.3</td>\n",
              "      <td>4.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4.20</td>\n",
              "      <td>4.80</td>\n",
              "      <td>4.40</td>\n",
              "      <td>4.80</td>\n",
              "      <td>4.40</td>\n",
              "      <td>22.60</td>\n",
              "      <td>13.40</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>60</td>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>F</td>\n",
              "      <td>Watkins</td>\n",
              "      <td>8.9</td>\n",
              "      <td>54.5</td>\n",
              "      <td>9</td>\n",
              "      <td>11</td>\n",
              "      <td>406</td>\n",
              "      <td>167.0</td>\n",
              "      <td>...</td>\n",
              "      <td>1.1</td>\n",
              "      <td>4.2</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4.64</td>\n",
              "      <td>3.98</td>\n",
              "      <td>4.86</td>\n",
              "      <td>4.20</td>\n",
              "      <td>4.64</td>\n",
              "      <td>22.32</td>\n",
              "      <td>13.48</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>67</th>\n",
              "      <td>415</td>\n",
              "      <td>Newcastle United</td>\n",
              "      <td>F</td>\n",
              "      <td>Isak</td>\n",
              "      <td>7.6</td>\n",
              "      <td>14.2</td>\n",
              "      <td>9</td>\n",
              "      <td>0</td>\n",
              "      <td>276</td>\n",
              "      <td>97.1</td>\n",
              "      <td>...</td>\n",
              "      <td>1.2</td>\n",
              "      <td>4.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.80</td>\n",
              "      <td>4.20</td>\n",
              "      <td>4.80</td>\n",
              "      <td>4.80</td>\n",
              "      <td>4.60</td>\n",
              "      <td>22.20</td>\n",
              "      <td>12.80</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>404</th>\n",
              "      <td>526</td>\n",
              "      <td>West Ham</td>\n",
              "      <td>M</td>\n",
              "      <td>Bowen</td>\n",
              "      <td>8.1</td>\n",
              "      <td>32.5</td>\n",
              "      <td>11</td>\n",
              "      <td>2</td>\n",
              "      <td>314</td>\n",
              "      <td>148.1</td>\n",
              "      <td>...</td>\n",
              "      <td>1.0</td>\n",
              "      <td>4.3</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4.76</td>\n",
              "      <td>4.76</td>\n",
              "      <td>4.07</td>\n",
              "      <td>3.84</td>\n",
              "      <td>4.76</td>\n",
              "      <td>22.19</td>\n",
              "      <td>13.59</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>50</th>\n",
              "      <td>293</td>\n",
              "      <td>Liverpool</td>\n",
              "      <td>F</td>\n",
              "      <td>Darwin</td>\n",
              "      <td>7.4</td>\n",
              "      <td>13.5</td>\n",
              "      <td>5</td>\n",
              "      <td>8</td>\n",
              "      <td>215</td>\n",
              "      <td>124.1</td>\n",
              "      <td>...</td>\n",
              "      <td>1.2</td>\n",
              "      <td>4.1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4.73</td>\n",
              "      <td>4.31</td>\n",
              "      <td>4.10</td>\n",
              "      <td>4.73</td>\n",
              "      <td>4.31</td>\n",
              "      <td>22.18</td>\n",
              "      <td>13.14</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>400</th>\n",
              "      <td>516</td>\n",
              "      <td>Tottenham</td>\n",
              "      <td>M</td>\n",
              "      <td>Son</td>\n",
              "      <td>9.8</td>\n",
              "      <td>35.8</td>\n",
              "      <td>12</td>\n",
              "      <td>5</td>\n",
              "      <td>442</td>\n",
              "      <td>180.2</td>\n",
              "      <td>...</td>\n",
              "      <td>1.0</td>\n",
              "      <td>4.4</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4.16</td>\n",
              "      <td>4.16</td>\n",
              "      <td>4.64</td>\n",
              "      <td>4.16</td>\n",
              "      <td>4.88</td>\n",
              "      <td>22.00</td>\n",
              "      <td>12.96</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>16</th>\n",
              "      <td>135</td>\n",
              "      <td>Brighton</td>\n",
              "      <td>F</td>\n",
              "      <td>João Pedro</td>\n",
              "      <td>5.4</td>\n",
              "      <td>11.5</td>\n",
              "      <td>7</td>\n",
              "      <td>2</td>\n",
              "      <td>267</td>\n",
              "      <td>123.4</td>\n",
              "      <td>...</td>\n",
              "      <td>1.1</td>\n",
              "      <td>3.9</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4.47</td>\n",
              "      <td>4.66</td>\n",
              "      <td>4.09</td>\n",
              "      <td>4.09</td>\n",
              "      <td>4.47</td>\n",
              "      <td>21.78</td>\n",
              "      <td>13.22</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>324</th>\n",
              "      <td>373</td>\n",
              "      <td>Manchester United</td>\n",
              "      <td>M</td>\n",
              "      <td>B.Fernandes</td>\n",
              "      <td>8.2</td>\n",
              "      <td>9.9</td>\n",
              "      <td>3</td>\n",
              "      <td>3</td>\n",
              "      <td>309</td>\n",
              "      <td>160.4</td>\n",
              "      <td>...</td>\n",
              "      <td>1.1</td>\n",
              "      <td>4.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4.20</td>\n",
              "      <td>4.60</td>\n",
              "      <td>4.20</td>\n",
              "      <td>4.00</td>\n",
              "      <td>4.60</td>\n",
              "      <td>21.60</td>\n",
              "      <td>13.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>30</th>\n",
              "      <td>211</td>\n",
              "      <td>Chelsea</td>\n",
              "      <td>F</td>\n",
              "      <td>N.Jackson</td>\n",
              "      <td>6.9</td>\n",
              "      <td>5.5</td>\n",
              "      <td>7</td>\n",
              "      <td>2</td>\n",
              "      <td>218</td>\n",
              "      <td>124.2</td>\n",
              "      <td>...</td>\n",
              "      <td>1.1</td>\n",
              "      <td>4.3</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4.53</td>\n",
              "      <td>4.07</td>\n",
              "      <td>4.76</td>\n",
              "      <td>4.30</td>\n",
              "      <td>3.84</td>\n",
              "      <td>21.50</td>\n",
              "      <td>13.36</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>219</th>\n",
              "      <td>362</td>\n",
              "      <td>Chelsea</td>\n",
              "      <td>M</td>\n",
              "      <td>Palmer</td>\n",
              "      <td>5.6</td>\n",
              "      <td>28.6</td>\n",
              "      <td>8</td>\n",
              "      <td>5</td>\n",
              "      <td>323</td>\n",
              "      <td>125.8</td>\n",
              "      <td>...</td>\n",
              "      <td>1.1</td>\n",
              "      <td>4.1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4.31</td>\n",
              "      <td>3.89</td>\n",
              "      <td>4.52</td>\n",
              "      <td>4.10</td>\n",
              "      <td>3.68</td>\n",
              "      <td>20.50</td>\n",
              "      <td>12.72</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>548</th>\n",
              "      <td>290</td>\n",
              "      <td>Liverpool</td>\n",
              "      <td>D</td>\n",
              "      <td>Alexander-Arnold</td>\n",
              "      <td>8.5</td>\n",
              "      <td>28.4</td>\n",
              "      <td>2</td>\n",
              "      <td>4</td>\n",
              "      <td>439</td>\n",
              "      <td>131.7</td>\n",
              "      <td>...</td>\n",
              "      <td>1.2</td>\n",
              "      <td>3.8</td>\n",
              "      <td>0.6</td>\n",
              "      <td>4.34</td>\n",
              "      <td>3.98</td>\n",
              "      <td>3.80</td>\n",
              "      <td>4.34</td>\n",
              "      <td>3.98</td>\n",
              "      <td>20.44</td>\n",
              "      <td>12.12</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>343</th>\n",
              "      <td>412</td>\n",
              "      <td>Newcastle United</td>\n",
              "      <td>M</td>\n",
              "      <td>Gordon</td>\n",
              "      <td>6.1</td>\n",
              "      <td>19.3</td>\n",
              "      <td>6</td>\n",
              "      <td>7</td>\n",
              "      <td>308</td>\n",
              "      <td>123.8</td>\n",
              "      <td>...</td>\n",
              "      <td>1.2</td>\n",
              "      <td>3.7</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.53</td>\n",
              "      <td>3.87</td>\n",
              "      <td>4.38</td>\n",
              "      <td>4.38</td>\n",
              "      <td>4.21</td>\n",
              "      <td>20.37</td>\n",
              "      <td>11.78</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>310</th>\n",
              "      <td>353</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>M</td>\n",
              "      <td>Foden</td>\n",
              "      <td>7.8</td>\n",
              "      <td>20.5</td>\n",
              "      <td>5</td>\n",
              "      <td>6</td>\n",
              "      <td>379</td>\n",
              "      <td>152.5</td>\n",
              "      <td>...</td>\n",
              "      <td>1.3</td>\n",
              "      <td>3.6</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.76</td>\n",
              "      <td>4.24</td>\n",
              "      <td>3.92</td>\n",
              "      <td>4.24</td>\n",
              "      <td>3.92</td>\n",
              "      <td>20.08</td>\n",
              "      <td>11.92</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>446</th>\n",
              "      <td>36</td>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>D</td>\n",
              "      <td>Cash</td>\n",
              "      <td>4.7</td>\n",
              "      <td>17.7</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>231</td>\n",
              "      <td>71.2</td>\n",
              "      <td>...</td>\n",
              "      <td>1.1</td>\n",
              "      <td>3.8</td>\n",
              "      <td>0.5</td>\n",
              "      <td>4.16</td>\n",
              "      <td>3.62</td>\n",
              "      <td>4.34</td>\n",
              "      <td>3.80</td>\n",
              "      <td>4.16</td>\n",
              "      <td>20.08</td>\n",
              "      <td>12.12</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>104</th>\n",
              "      <td>14</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>M</td>\n",
              "      <td>Ødegaard</td>\n",
              "      <td>8.4</td>\n",
              "      <td>15.9</td>\n",
              "      <td>4</td>\n",
              "      <td>4</td>\n",
              "      <td>314</td>\n",
              "      <td>145.8</td>\n",
              "      <td>...</td>\n",
              "      <td>1.2</td>\n",
              "      <td>3.6</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.76</td>\n",
              "      <td>4.24</td>\n",
              "      <td>3.60</td>\n",
              "      <td>3.92</td>\n",
              "      <td>4.08</td>\n",
              "      <td>19.60</td>\n",
              "      <td>11.60</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>85</td>\n",
              "      <td>Bournemouth</td>\n",
              "      <td>F</td>\n",
              "      <td>Solanke</td>\n",
              "      <td>7.1</td>\n",
              "      <td>27.7</td>\n",
              "      <td>12</td>\n",
              "      <td>1</td>\n",
              "      <td>313</td>\n",
              "      <td>150.2</td>\n",
              "      <td>...</td>\n",
              "      <td>0.8</td>\n",
              "      <td>4.3</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.61</td>\n",
              "      <td>3.84</td>\n",
              "      <td>4.30</td>\n",
              "      <td>4.07</td>\n",
              "      <td>3.61</td>\n",
              "      <td>19.43</td>\n",
              "      <td>11.75</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>177</th>\n",
              "      <td>134</td>\n",
              "      <td>Brighton</td>\n",
              "      <td>M</td>\n",
              "      <td>Gross</td>\n",
              "      <td>6.4</td>\n",
              "      <td>4.1</td>\n",
              "      <td>3</td>\n",
              "      <td>6</td>\n",
              "      <td>360</td>\n",
              "      <td>162.6</td>\n",
              "      <td>...</td>\n",
              "      <td>1.1</td>\n",
              "      <td>3.5</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.95</td>\n",
              "      <td>4.10</td>\n",
              "      <td>3.65</td>\n",
              "      <td>3.65</td>\n",
              "      <td>3.95</td>\n",
              "      <td>19.30</td>\n",
              "      <td>11.70</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>121</th>\n",
              "      <td>43</td>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>M</td>\n",
              "      <td>Douglas Luiz</td>\n",
              "      <td>5.5</td>\n",
              "      <td>8.9</td>\n",
              "      <td>6</td>\n",
              "      <td>3</td>\n",
              "      <td>403</td>\n",
              "      <td>116.5</td>\n",
              "      <td>...</td>\n",
              "      <td>1.1</td>\n",
              "      <td>3.6</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.92</td>\n",
              "      <td>3.44</td>\n",
              "      <td>4.08</td>\n",
              "      <td>3.60</td>\n",
              "      <td>3.92</td>\n",
              "      <td>18.96</td>\n",
              "      <td>11.44</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>574</th>\n",
              "      <td>342</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>D</td>\n",
              "      <td>Aké</td>\n",
              "      <td>5.0</td>\n",
              "      <td>6.0</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>257</td>\n",
              "      <td>52.5</td>\n",
              "      <td>...</td>\n",
              "      <td>1.3</td>\n",
              "      <td>3.4</td>\n",
              "      <td>0.9</td>\n",
              "      <td>3.54</td>\n",
              "      <td>3.96</td>\n",
              "      <td>3.68</td>\n",
              "      <td>3.96</td>\n",
              "      <td>3.68</td>\n",
              "      <td>18.82</td>\n",
              "      <td>11.18</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>333</th>\n",
              "      <td>396</td>\n",
              "      <td>Manchester United</td>\n",
              "      <td>M</td>\n",
              "      <td>Rashford</td>\n",
              "      <td>8.4</td>\n",
              "      <td>10.7</td>\n",
              "      <td>3</td>\n",
              "      <td>3</td>\n",
              "      <td>174</td>\n",
              "      <td>90.3</td>\n",
              "      <td>...</td>\n",
              "      <td>1.1</td>\n",
              "      <td>3.5</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.65</td>\n",
              "      <td>3.95</td>\n",
              "      <td>3.65</td>\n",
              "      <td>3.50</td>\n",
              "      <td>3.95</td>\n",
              "      <td>18.70</td>\n",
              "      <td>11.25</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>397</th>\n",
              "      <td>509</td>\n",
              "      <td>Tottenham</td>\n",
              "      <td>M</td>\n",
              "      <td>Richarlison</td>\n",
              "      <td>6.9</td>\n",
              "      <td>7.6</td>\n",
              "      <td>6</td>\n",
              "      <td>3</td>\n",
              "      <td>162</td>\n",
              "      <td>89.6</td>\n",
              "      <td>...</td>\n",
              "      <td>1.0</td>\n",
              "      <td>3.7</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.53</td>\n",
              "      <td>3.53</td>\n",
              "      <td>3.87</td>\n",
              "      <td>3.53</td>\n",
              "      <td>4.04</td>\n",
              "      <td>18.50</td>\n",
              "      <td>10.93</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>130</th>\n",
              "      <td>599</td>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>M</td>\n",
              "      <td>Diaby</td>\n",
              "      <td>6.6</td>\n",
              "      <td>9.1</td>\n",
              "      <td>4</td>\n",
              "      <td>7</td>\n",
              "      <td>252</td>\n",
              "      <td>109.6</td>\n",
              "      <td>...</td>\n",
              "      <td>1.1</td>\n",
              "      <td>3.5</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.80</td>\n",
              "      <td>3.35</td>\n",
              "      <td>3.95</td>\n",
              "      <td>3.50</td>\n",
              "      <td>3.80</td>\n",
              "      <td>18.40</td>\n",
              "      <td>11.10</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>438</th>\n",
              "      <td>20</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>D</td>\n",
              "      <td>Saliba</td>\n",
              "      <td>5.6</td>\n",
              "      <td>36.5</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>376</td>\n",
              "      <td>52.7</td>\n",
              "      <td>...</td>\n",
              "      <td>1.2</td>\n",
              "      <td>3.4</td>\n",
              "      <td>0.9</td>\n",
              "      <td>3.54</td>\n",
              "      <td>3.96</td>\n",
              "      <td>3.40</td>\n",
              "      <td>3.68</td>\n",
              "      <td>3.82</td>\n",
              "      <td>18.40</td>\n",
              "      <td>10.90</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>441</th>\n",
              "      <td>29</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>D</td>\n",
              "      <td>White</td>\n",
              "      <td>5.6</td>\n",
              "      <td>10.9</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>343</td>\n",
              "      <td>71.5</td>\n",
              "      <td>...</td>\n",
              "      <td>1.2</td>\n",
              "      <td>3.4</td>\n",
              "      <td>0.9</td>\n",
              "      <td>3.54</td>\n",
              "      <td>3.96</td>\n",
              "      <td>3.40</td>\n",
              "      <td>3.68</td>\n",
              "      <td>3.82</td>\n",
              "      <td>18.40</td>\n",
              "      <td>10.90</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>442</th>\n",
              "      <td>31</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>D</td>\n",
              "      <td>Zinchenko</td>\n",
              "      <td>5.2</td>\n",
              "      <td>12.5</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>320</td>\n",
              "      <td>67.7</td>\n",
              "      <td>...</td>\n",
              "      <td>1.2</td>\n",
              "      <td>3.4</td>\n",
              "      <td>0.9</td>\n",
              "      <td>3.54</td>\n",
              "      <td>3.96</td>\n",
              "      <td>3.40</td>\n",
              "      <td>3.68</td>\n",
              "      <td>3.82</td>\n",
              "      <td>18.40</td>\n",
              "      <td>10.90</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>182</th>\n",
              "      <td>143</td>\n",
              "      <td>Brighton</td>\n",
              "      <td>M</td>\n",
              "      <td>Mitoma</td>\n",
              "      <td>6.4</td>\n",
              "      <td>15.4</td>\n",
              "      <td>3</td>\n",
              "      <td>5</td>\n",
              "      <td>211</td>\n",
              "      <td>118.9</td>\n",
              "      <td>...</td>\n",
              "      <td>1.1</td>\n",
              "      <td>3.3</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.69</td>\n",
              "      <td>3.82</td>\n",
              "      <td>3.43</td>\n",
              "      <td>3.43</td>\n",
              "      <td>3.69</td>\n",
              "      <td>18.06</td>\n",
              "      <td>10.94</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>436</th>\n",
              "      <td>5</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>D</td>\n",
              "      <td>Gabriel</td>\n",
              "      <td>5.0</td>\n",
              "      <td>17.5</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>296</td>\n",
              "      <td>51.0</td>\n",
              "      <td>...</td>\n",
              "      <td>1.2</td>\n",
              "      <td>3.3</td>\n",
              "      <td>0.9</td>\n",
              "      <td>3.43</td>\n",
              "      <td>3.82</td>\n",
              "      <td>3.30</td>\n",
              "      <td>3.56</td>\n",
              "      <td>3.69</td>\n",
              "      <td>17.80</td>\n",
              "      <td>10.55</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>573</th>\n",
              "      <td>341</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>D</td>\n",
              "      <td>Akanji</td>\n",
              "      <td>4.9</td>\n",
              "      <td>5.2</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>259</td>\n",
              "      <td>49.5</td>\n",
              "      <td>...</td>\n",
              "      <td>1.3</td>\n",
              "      <td>3.2</td>\n",
              "      <td>0.9</td>\n",
              "      <td>3.32</td>\n",
              "      <td>3.68</td>\n",
              "      <td>3.44</td>\n",
              "      <td>3.68</td>\n",
              "      <td>3.44</td>\n",
              "      <td>17.56</td>\n",
              "      <td>10.44</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>576</th>\n",
              "      <td>350</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>D</td>\n",
              "      <td>Rúben</td>\n",
              "      <td>5.5</td>\n",
              "      <td>6.5</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>234</td>\n",
              "      <td>49.4</td>\n",
              "      <td>...</td>\n",
              "      <td>1.3</td>\n",
              "      <td>3.2</td>\n",
              "      <td>0.9</td>\n",
              "      <td>3.32</td>\n",
              "      <td>3.68</td>\n",
              "      <td>3.44</td>\n",
              "      <td>3.68</td>\n",
              "      <td>3.44</td>\n",
              "      <td>17.56</td>\n",
              "      <td>10.44</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>581</th>\n",
              "      <td>369</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>D</td>\n",
              "      <td>Walker</td>\n",
              "      <td>5.4</td>\n",
              "      <td>16.7</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>346</td>\n",
              "      <td>63.5</td>\n",
              "      <td>...</td>\n",
              "      <td>1.3</td>\n",
              "      <td>3.2</td>\n",
              "      <td>0.9</td>\n",
              "      <td>3.32</td>\n",
              "      <td>3.68</td>\n",
              "      <td>3.44</td>\n",
              "      <td>3.68</td>\n",
              "      <td>3.44</td>\n",
              "      <td>17.56</td>\n",
              "      <td>10.44</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>12</th>\n",
              "      <td>119</td>\n",
              "      <td>Brentford</td>\n",
              "      <td>F</td>\n",
              "      <td>Wissa</td>\n",
              "      <td>5.7</td>\n",
              "      <td>5.7</td>\n",
              "      <td>4</td>\n",
              "      <td>2</td>\n",
              "      <td>195</td>\n",
              "      <td>90.4</td>\n",
              "      <td>...</td>\n",
              "      <td>1.1</td>\n",
              "      <td>3.4</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.82</td>\n",
              "      <td>3.54</td>\n",
              "      <td>3.12</td>\n",
              "      <td>3.82</td>\n",
              "      <td>3.26</td>\n",
              "      <td>17.56</td>\n",
              "      <td>10.48</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>277</th>\n",
              "      <td>303</td>\n",
              "      <td>Liverpool</td>\n",
              "      <td>M</td>\n",
              "      <td>Luis Díaz</td>\n",
              "      <td>7.3</td>\n",
              "      <td>6.0</td>\n",
              "      <td>3</td>\n",
              "      <td>2</td>\n",
              "      <td>147</td>\n",
              "      <td>90.6</td>\n",
              "      <td>...</td>\n",
              "      <td>1.2</td>\n",
              "      <td>3.3</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.69</td>\n",
              "      <td>3.43</td>\n",
              "      <td>3.30</td>\n",
              "      <td>3.69</td>\n",
              "      <td>3.43</td>\n",
              "      <td>17.54</td>\n",
              "      <td>10.42</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>217</th>\n",
              "      <td>216</td>\n",
              "      <td>Chelsea</td>\n",
              "      <td>M</td>\n",
              "      <td>Sterling</td>\n",
              "      <td>7.1</td>\n",
              "      <td>8.4</td>\n",
              "      <td>5</td>\n",
              "      <td>6</td>\n",
              "      <td>231</td>\n",
              "      <td>121.7</td>\n",
              "      <td>...</td>\n",
              "      <td>1.1</td>\n",
              "      <td>3.5</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.65</td>\n",
              "      <td>3.35</td>\n",
              "      <td>3.80</td>\n",
              "      <td>3.50</td>\n",
              "      <td>3.20</td>\n",
              "      <td>17.50</td>\n",
              "      <td>10.80</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>477</th>\n",
              "      <td>129</td>\n",
              "      <td>Brighton</td>\n",
              "      <td>D</td>\n",
              "      <td>Dunk</td>\n",
              "      <td>5.0</td>\n",
              "      <td>2.6</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>219</td>\n",
              "      <td>66.4</td>\n",
              "      <td>...</td>\n",
              "      <td>1.1</td>\n",
              "      <td>3.2</td>\n",
              "      <td>0.3</td>\n",
              "      <td>3.56</td>\n",
              "      <td>3.68</td>\n",
              "      <td>3.32</td>\n",
              "      <td>3.32</td>\n",
              "      <td>3.56</td>\n",
              "      <td>17.44</td>\n",
              "      <td>10.56</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>413</th>\n",
              "      <td>664</td>\n",
              "      <td>West Ham</td>\n",
              "      <td>M</td>\n",
              "      <td>Ward-Prowse</td>\n",
              "      <td>6.0</td>\n",
              "      <td>8.2</td>\n",
              "      <td>3</td>\n",
              "      <td>6</td>\n",
              "      <td>396</td>\n",
              "      <td>124.6</td>\n",
              "      <td>...</td>\n",
              "      <td>1.0</td>\n",
              "      <td>3.4</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.68</td>\n",
              "      <td>3.68</td>\n",
              "      <td>3.26</td>\n",
              "      <td>3.12</td>\n",
              "      <td>3.68</td>\n",
              "      <td>17.42</td>\n",
              "      <td>10.62</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>8</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>F</td>\n",
              "      <td>G.Jesus</td>\n",
              "      <td>8.0</td>\n",
              "      <td>5.4</td>\n",
              "      <td>3</td>\n",
              "      <td>2</td>\n",
              "      <td>153</td>\n",
              "      <td>95.0</td>\n",
              "      <td>...</td>\n",
              "      <td>1.2</td>\n",
              "      <td>3.2</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.32</td>\n",
              "      <td>3.68</td>\n",
              "      <td>3.20</td>\n",
              "      <td>3.44</td>\n",
              "      <td>3.56</td>\n",
              "      <td>17.20</td>\n",
              "      <td>10.20</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>100</th>\n",
              "      <td>6</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>M</td>\n",
              "      <td>Havertz</td>\n",
              "      <td>7.1</td>\n",
              "      <td>1.6</td>\n",
              "      <td>4</td>\n",
              "      <td>1</td>\n",
              "      <td>152</td>\n",
              "      <td>72.0</td>\n",
              "      <td>...</td>\n",
              "      <td>1.2</td>\n",
              "      <td>3.2</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.32</td>\n",
              "      <td>3.68</td>\n",
              "      <td>3.20</td>\n",
              "      <td>3.44</td>\n",
              "      <td>3.56</td>\n",
              "      <td>17.20</td>\n",
              "      <td>10.20</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>212</th>\n",
              "      <td>199</td>\n",
              "      <td>Chelsea</td>\n",
              "      <td>M</td>\n",
              "      <td>Enzo</td>\n",
              "      <td>4.8</td>\n",
              "      <td>2.3</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>199</td>\n",
              "      <td>78.9</td>\n",
              "      <td>...</td>\n",
              "      <td>1.1</td>\n",
              "      <td>3.4</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.54</td>\n",
              "      <td>3.26</td>\n",
              "      <td>3.68</td>\n",
              "      <td>3.40</td>\n",
              "      <td>3.12</td>\n",
              "      <td>17.00</td>\n",
              "      <td>10.48</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>556</th>\n",
              "      <td>313</td>\n",
              "      <td>Liverpool</td>\n",
              "      <td>D</td>\n",
              "      <td>Virgil</td>\n",
              "      <td>6.3</td>\n",
              "      <td>12.2</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>361</td>\n",
              "      <td>81.3</td>\n",
              "      <td>...</td>\n",
              "      <td>1.2</td>\n",
              "      <td>3.2</td>\n",
              "      <td>0.6</td>\n",
              "      <td>3.56</td>\n",
              "      <td>3.32</td>\n",
              "      <td>3.20</td>\n",
              "      <td>3.56</td>\n",
              "      <td>3.32</td>\n",
              "      <td>16.96</td>\n",
              "      <td>10.08</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>306</th>\n",
              "      <td>344</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>M</td>\n",
              "      <td>Bernardo</td>\n",
              "      <td>6.5</td>\n",
              "      <td>5.2</td>\n",
              "      <td>5</td>\n",
              "      <td>4</td>\n",
              "      <td>353</td>\n",
              "      <td>125.2</td>\n",
              "      <td>...</td>\n",
              "      <td>1.3</td>\n",
              "      <td>3.1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.21</td>\n",
              "      <td>3.54</td>\n",
              "      <td>3.32</td>\n",
              "      <td>3.54</td>\n",
              "      <td>3.32</td>\n",
              "      <td>16.93</td>\n",
              "      <td>10.07</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>316</th>\n",
              "      <td>365</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>M</td>\n",
              "      <td>Rodrigo</td>\n",
              "      <td>5.6</td>\n",
              "      <td>5.0</td>\n",
              "      <td>4</td>\n",
              "      <td>3</td>\n",
              "      <td>303</td>\n",
              "      <td>100.5</td>\n",
              "      <td>...</td>\n",
              "      <td>1.3</td>\n",
              "      <td>3.1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.21</td>\n",
              "      <td>3.54</td>\n",
              "      <td>3.32</td>\n",
              "      <td>3.54</td>\n",
              "      <td>3.32</td>\n",
              "      <td>16.93</td>\n",
              "      <td>10.07</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>582</th>\n",
              "      <td>616</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>D</td>\n",
              "      <td>Gvardiol</td>\n",
              "      <td>4.8</td>\n",
              "      <td>3.4</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>233</td>\n",
              "      <td>52.0</td>\n",
              "      <td>...</td>\n",
              "      <td>1.3</td>\n",
              "      <td>3.1</td>\n",
              "      <td>0.9</td>\n",
              "      <td>3.21</td>\n",
              "      <td>3.54</td>\n",
              "      <td>3.32</td>\n",
              "      <td>3.54</td>\n",
              "      <td>3.32</td>\n",
              "      <td>16.93</td>\n",
              "      <td>10.07</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>117</th>\n",
              "      <td>34</td>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>M</td>\n",
              "      <td>Bailey</td>\n",
              "      <td>5.7</td>\n",
              "      <td>3.8</td>\n",
              "      <td>6</td>\n",
              "      <td>5</td>\n",
              "      <td>224</td>\n",
              "      <td>91.5</td>\n",
              "      <td>...</td>\n",
              "      <td>1.1</td>\n",
              "      <td>3.2</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.44</td>\n",
              "      <td>3.08</td>\n",
              "      <td>3.56</td>\n",
              "      <td>3.20</td>\n",
              "      <td>3.44</td>\n",
              "      <td>16.72</td>\n",
              "      <td>10.08</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>124</th>\n",
              "      <td>50</td>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>M</td>\n",
              "      <td>McGinn</td>\n",
              "      <td>5.6</td>\n",
              "      <td>2.0</td>\n",
              "      <td>5</td>\n",
              "      <td>2</td>\n",
              "      <td>302</td>\n",
              "      <td>110.7</td>\n",
              "      <td>...</td>\n",
              "      <td>1.1</td>\n",
              "      <td>3.2</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.44</td>\n",
              "      <td>3.08</td>\n",
              "      <td>3.56</td>\n",
              "      <td>3.20</td>\n",
              "      <td>3.44</td>\n",
              "      <td>16.72</td>\n",
              "      <td>10.08</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>339</th>\n",
              "      <td>402</td>\n",
              "      <td>Newcastle United</td>\n",
              "      <td>M</td>\n",
              "      <td>Almirón</td>\n",
              "      <td>6.2</td>\n",
              "      <td>4.1</td>\n",
              "      <td>3</td>\n",
              "      <td>1</td>\n",
              "      <td>210</td>\n",
              "      <td>78.3</td>\n",
              "      <td>...</td>\n",
              "      <td>1.2</td>\n",
              "      <td>3.1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2.99</td>\n",
              "      <td>3.21</td>\n",
              "      <td>3.54</td>\n",
              "      <td>3.54</td>\n",
              "      <td>3.43</td>\n",
              "      <td>16.71</td>\n",
              "      <td>9.74</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>421</th>\n",
              "      <td>557</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>M</td>\n",
              "      <td>Hee Chan</td>\n",
              "      <td>5.7</td>\n",
              "      <td>9.2</td>\n",
              "      <td>10</td>\n",
              "      <td>3</td>\n",
              "      <td>280</td>\n",
              "      <td>110.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0.8</td>\n",
              "      <td>3.8</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.26</td>\n",
              "      <td>3.26</td>\n",
              "      <td>3.44</td>\n",
              "      <td>3.26</td>\n",
              "      <td>3.44</td>\n",
              "      <td>16.66</td>\n",
              "      <td>9.96</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>50 rows × 23 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-249afa6f-7c1c-4564-99fd-afddbc982a79')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-249afa6f-7c1c-4564-99fd-afddbc982a79 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-249afa6f-7c1c-4564-99fd-afddbc982a79');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-c541b294-2955-49d9-b199-bd6425e12b5a\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-c541b294-2955-49d9-b199-bd6425e12b5a')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-c541b294-2955-49d9-b199-bd6425e12b5a button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 51
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import matplotlib.pyplot as plt\n",
        "import pandas as pd\n",
        "import numpy as np\n",
        "import string"
      ],
      "metadata": {
        "id": "JSw3vk9PJvps"
      },
      "execution_count": 52,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "fig, ax = plt.subplots(1, figsize=(10,8))\n",
        "ax.scatter(x=Top50['cost'],y=Top50['5GW Total'],c='DarkBlue')\n",
        "# set labels\n",
        "ax.set_xlabel('cost')\n",
        "ax.set_ylabel('5GW Total')\n",
        "\n",
        "# annotate points in axis\n",
        "for idx, row in Top50.iterrows():\n",
        "    ax.annotate(row['name'], (row['cost'], row['5GW Total']) )\n",
        "# force matplotlib to draw the graph\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 696
        },
        "id": "435FV-_ocWOi",
        "outputId": "1eb969cb-bdd7-4e8f-a6d2-df3922d797e9"
      },
      "execution_count": 53,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1000x800 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "rawdfgw228x"
      ],
      "metadata": {
        "id": "mQ58vdHpUd8O",
        "outputId": "e5f2e4f3-227a-4a51-a34f-40b493c0b7b5",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 424
        }
      },
      "execution_count": 54,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "      id                     team pos     name  cost  selected_by_percent  \\\n",
              "0      1                  Arsenal   F  Balogun   4.4                  0.2   \n",
              "1      8                  Arsenal   F  G.Jesus   8.0                  5.4   \n",
              "2     13                  Arsenal   F  Nketiah   5.3                  4.5   \n",
              "3     39              Aston Villa   F    Davis   4.9                  0.1   \n",
              "4     44              Aston Villa   F    Duran   5.0                  0.2   \n",
              "..   ...                      ...  ..      ...   ...                  ...   \n",
              "768  647                 West Ham   G    Anang   4.0                  0.1   \n",
              "769  546  Wolverhampton Wanderers   G  Bentley   3.9                  1.2   \n",
              "770  564  Wolverhampton Wanderers   G     King   3.9                  0.7   \n",
              "771  569  Wolverhampton Wanderers   G  José Sá   5.0                  1.4   \n",
              "772  571  Wolverhampton Wanderers   G   Šarkić   4.0                  0.3   \n",
              "\n",
              "     goals_scored  assists  bps  ict_index  ...  home_adjustment  xPallgw  \\\n",
              "0               0        0    0        0.0  ...              1.2      2.0   \n",
              "1               3        2  153       95.0  ...              1.2      3.2   \n",
              "2               5        3  180       65.4  ...              1.2      2.9   \n",
              "3               0        0    0        0.0  ...              1.1      2.0   \n",
              "4               2        1   77       17.7  ...              1.1      2.2   \n",
              "..            ...      ...  ...        ...  ...              ...      ...   \n",
              "768             0        0    0        0.0  ...              1.0      2.0   \n",
              "769             0        0   60        5.7  ...              0.8      2.1   \n",
              "770             0        0    0        0.0  ...              0.8      2.1   \n",
              "771             0        0  288       39.9  ...              0.8      2.1   \n",
              "772             0        0    0        0.0  ...              0.8      2.1   \n",
              "\n",
              "     xCSP  gw21  gw22  gw23  gw24  gw25  5GW Total  3GW Total  \n",
              "0     NaN  2.00  2.00  2.00  2.00  2.00      10.00       6.00  \n",
              "1     NaN  3.32  3.68  3.20  3.44  3.56      17.20      10.20  \n",
              "2     NaN  2.99  3.26  2.90  3.08  3.17      15.40       9.15  \n",
              "3     NaN  2.00  2.00  2.00  2.00  2.00      10.00       6.00  \n",
              "4     NaN  2.24  2.18  2.26  2.20  2.24      11.12       6.68  \n",
              "..    ...   ...   ...   ...   ...   ...        ...        ...  \n",
              "768  -0.0  2.00  2.00  2.00  2.00  2.00      10.00       6.00  \n",
              "769   0.1  2.07  2.07  2.08  2.07  2.08      10.37       6.22  \n",
              "770   0.1  2.07  2.07  2.08  2.07  2.08      10.37       6.22  \n",
              "771   0.1  2.07  2.07  2.08  2.07  2.08      10.37       6.22  \n",
              "772   0.1  2.07  2.07  2.08  2.07  2.08      10.37       6.22  \n",
              "\n",
              "[749 rows x 23 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-bd5e81c8-3687-4818-9d50-8df9e0e914e3\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>team</th>\n",
              "      <th>pos</th>\n",
              "      <th>name</th>\n",
              "      <th>cost</th>\n",
              "      <th>selected_by_percent</th>\n",
              "      <th>goals_scored</th>\n",
              "      <th>assists</th>\n",
              "      <th>bps</th>\n",
              "      <th>ict_index</th>\n",
              "      <th>...</th>\n",
              "      <th>home_adjustment</th>\n",
              "      <th>xPallgw</th>\n",
              "      <th>xCSP</th>\n",
              "      <th>gw21</th>\n",
              "      <th>gw22</th>\n",
              "      <th>gw23</th>\n",
              "      <th>gw24</th>\n",
              "      <th>gw25</th>\n",
              "      <th>5GW Total</th>\n",
              "      <th>3GW Total</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>1</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>F</td>\n",
              "      <td>Balogun</td>\n",
              "      <td>4.4</td>\n",
              "      <td>0.2</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>1.2</td>\n",
              "      <td>2.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>10.00</td>\n",
              "      <td>6.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>8</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>F</td>\n",
              "      <td>G.Jesus</td>\n",
              "      <td>8.0</td>\n",
              "      <td>5.4</td>\n",
              "      <td>3</td>\n",
              "      <td>2</td>\n",
              "      <td>153</td>\n",
              "      <td>95.0</td>\n",
              "      <td>...</td>\n",
              "      <td>1.2</td>\n",
              "      <td>3.2</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.32</td>\n",
              "      <td>3.68</td>\n",
              "      <td>3.20</td>\n",
              "      <td>3.44</td>\n",
              "      <td>3.56</td>\n",
              "      <td>17.20</td>\n",
              "      <td>10.20</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>13</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>F</td>\n",
              "      <td>Nketiah</td>\n",
              "      <td>5.3</td>\n",
              "      <td>4.5</td>\n",
              "      <td>5</td>\n",
              "      <td>3</td>\n",
              "      <td>180</td>\n",
              "      <td>65.4</td>\n",
              "      <td>...</td>\n",
              "      <td>1.2</td>\n",
              "      <td>2.9</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2.99</td>\n",
              "      <td>3.26</td>\n",
              "      <td>2.90</td>\n",
              "      <td>3.08</td>\n",
              "      <td>3.17</td>\n",
              "      <td>15.40</td>\n",
              "      <td>9.15</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>39</td>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>F</td>\n",
              "      <td>Davis</td>\n",
              "      <td>4.9</td>\n",
              "      <td>0.1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>1.1</td>\n",
              "      <td>2.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>10.00</td>\n",
              "      <td>6.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>44</td>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>F</td>\n",
              "      <td>Duran</td>\n",
              "      <td>5.0</td>\n",
              "      <td>0.2</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>77</td>\n",
              "      <td>17.7</td>\n",
              "      <td>...</td>\n",
              "      <td>1.1</td>\n",
              "      <td>2.2</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2.24</td>\n",
              "      <td>2.18</td>\n",
              "      <td>2.26</td>\n",
              "      <td>2.20</td>\n",
              "      <td>2.24</td>\n",
              "      <td>11.12</td>\n",
              "      <td>6.68</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>768</th>\n",
              "      <td>647</td>\n",
              "      <td>West Ham</td>\n",
              "      <td>G</td>\n",
              "      <td>Anang</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>1.0</td>\n",
              "      <td>2.0</td>\n",
              "      <td>-0.0</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>10.00</td>\n",
              "      <td>6.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>769</th>\n",
              "      <td>546</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>G</td>\n",
              "      <td>Bentley</td>\n",
              "      <td>3.9</td>\n",
              "      <td>1.2</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>60</td>\n",
              "      <td>5.7</td>\n",
              "      <td>...</td>\n",
              "      <td>0.8</td>\n",
              "      <td>2.1</td>\n",
              "      <td>0.1</td>\n",
              "      <td>2.07</td>\n",
              "      <td>2.07</td>\n",
              "      <td>2.08</td>\n",
              "      <td>2.07</td>\n",
              "      <td>2.08</td>\n",
              "      <td>10.37</td>\n",
              "      <td>6.22</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>770</th>\n",
              "      <td>564</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>G</td>\n",
              "      <td>King</td>\n",
              "      <td>3.9</td>\n",
              "      <td>0.7</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0.8</td>\n",
              "      <td>2.1</td>\n",
              "      <td>0.1</td>\n",
              "      <td>2.07</td>\n",
              "      <td>2.07</td>\n",
              "      <td>2.08</td>\n",
              "      <td>2.07</td>\n",
              "      <td>2.08</td>\n",
              "      <td>10.37</td>\n",
              "      <td>6.22</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>771</th>\n",
              "      <td>569</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>G</td>\n",
              "      <td>José Sá</td>\n",
              "      <td>5.0</td>\n",
              "      <td>1.4</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>288</td>\n",
              "      <td>39.9</td>\n",
              "      <td>...</td>\n",
              "      <td>0.8</td>\n",
              "      <td>2.1</td>\n",
              "      <td>0.1</td>\n",
              "      <td>2.07</td>\n",
              "      <td>2.07</td>\n",
              "      <td>2.08</td>\n",
              "      <td>2.07</td>\n",
              "      <td>2.08</td>\n",
              "      <td>10.37</td>\n",
              "      <td>6.22</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>772</th>\n",
              "      <td>571</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>G</td>\n",
              "      <td>Šarkić</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.3</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0.8</td>\n",
              "      <td>2.1</td>\n",
              "      <td>0.1</td>\n",
              "      <td>2.07</td>\n",
              "      <td>2.07</td>\n",
              "      <td>2.08</td>\n",
              "      <td>2.07</td>\n",
              "      <td>2.08</td>\n",
              "      <td>10.37</td>\n",
              "      <td>6.22</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>749 rows × 23 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-bd5e81c8-3687-4818-9d50-8df9e0e914e3')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-bd5e81c8-3687-4818-9d50-8df9e0e914e3 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-bd5e81c8-3687-4818-9d50-8df9e0e914e3');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-12c17864-e6c9-4835-b37c-a140ecd1aa71\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-12c17864-e6c9-4835-b37c-a140ecd1aa71')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-12c17864-e6c9-4835-b37c-a140ecd1aa71 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 54
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "apiplayers = master"
      ],
      "metadata": {
        "id": "3bvpGcxtVMyS"
      },
      "execution_count": 55,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "Mostselected = apiplayers.nlargest(20, 'selected_by_percent')\n",
        "Mostselected"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 677
        },
        "id": "O-wNiNtosYZU",
        "outputId": "15047181-242b-442a-8df7-3802337c2281"
      },
      "execution_count": 56,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "      id              team pos              name  cost  selected_by_percent  \\\n",
              "17    19           Arsenal   M              Saka   9.0                 59.3   \n",
              "62    60       Aston Villa   F           Watkins   8.9                 54.5   \n",
              "475  355   Manchester City   F           Haaland  13.9                 53.7   \n",
              "401  308         Liverpool   M             Salah  13.2                 44.0   \n",
              "564  430  Newcastle United   D          Trippier   6.8                 38.0   \n",
              "18    20           Arsenal   D            Saliba   5.6                 36.5   \n",
              "690  516         Tottenham   M               Son   9.8                 35.8   \n",
              "464  343   Manchester City   F         J.Alvarez   7.0                 35.1   \n",
              "706  524          West Ham   G            Areola   4.2                 34.6   \n",
              "708  526          West Ham   M             Bowen   8.1                 32.5   \n",
              "262  362           Chelsea   M            Palmer   5.6                 28.6   \n",
              "681  506         Tottenham   D       Pedro Porro   5.7                 28.6   \n",
              "383  290         Liverpool   D  Alexander-Arnold   8.5                 28.4   \n",
              "96    85       Bournemouth   F           Solanke   7.1                 27.7   \n",
              "473  353   Manchester City   M             Foden   7.8                 20.5   \n",
              "546  412  Newcastle United   M            Gordon   6.1                 19.3   \n",
              "155  131          Brighton   D         Estupiñan   4.9                 18.3   \n",
              "39    36       Aston Villa   D              Cash   4.7                 17.7   \n",
              "4      5           Arsenal   D           Gabriel   5.0                 17.5   \n",
              "282  220    Crystal Palace   D          Andersen   4.9                 17.1   \n",
              "\n",
              "     expected_goals  expected_assists  goals_scored  assists  bps  ict_index  \\\n",
              "17             6.81              6.41             6        8  388      199.2   \n",
              "62             8.89              2.77             9       11  406      167.0   \n",
              "475           14.95              1.17            14        5  417      159.8   \n",
              "401           13.82              5.80            14        8  469      233.1   \n",
              "564            0.25              5.84             0        7  442      138.4   \n",
              "18             1.17              0.59             1        1  376       52.7   \n",
              "690            7.04              4.21            12        5  442      180.2   \n",
              "464            6.68              4.66             6        8  403      156.1   \n",
              "706            0.00              0.00             0        0  343       51.7   \n",
              "708            7.75              2.36            11        2  314      148.1   \n",
              "262            6.54              3.29             8        5  323      125.8   \n",
              "681            2.05              4.08             0        7  438      122.2   \n",
              "383            1.95              4.10             2        4  439      131.7   \n",
              "96            10.77              0.94            12        1  313      150.2   \n",
              "473            4.24              3.47             5        6  379      152.5   \n",
              "546            5.43              2.60             6        7  308      123.8   \n",
              "155            0.93              1.53             2        3  165       55.5   \n",
              "39             3.72              1.62             2        1  231       71.2   \n",
              "4              1.12              0.34             1        0  296       51.0   \n",
              "282            1.26              0.94             2        1  365       91.2   \n",
              "\n",
              "     points  points_per_game  minutes  apppoint  assistvalue  \n",
              "17      107              5.6     1663         2            3  \n",
              "62      120              6.0     1759         2            3  \n",
              "475     112              7.5     1294         2            3  \n",
              "401     156              7.8     1740         2            3  \n",
              "564      85              4.7     1572         2            3  \n",
              "18       75              3.8     1800         2            3  \n",
              "690     136              6.8     1690         2            3  \n",
              "464      97              5.1     1589         2            3  \n",
              "706      74              4.4     1530         2            3  \n",
              "708     111              5.8     1707         2            3  \n",
              "262      92              5.4     1150         2            3  \n",
              "681      77              4.1     1707         2            3  \n",
              "383      97              5.4     1498         2            3  \n",
              "96       98              5.2     1695         2            3  \n",
              "473      96              5.1     1514         2            3  \n",
              "546      97              5.1     1576         2            3  \n",
              "155      37              4.6      630         2            3  \n",
              "39       50              2.9     1262         2            3  \n",
              "4        58              3.2     1464         2            3  \n",
              "282      69              3.5     1800         2            3  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-5dbced34-627c-46f6-9b3b-b2408f01095b\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>team</th>\n",
              "      <th>pos</th>\n",
              "      <th>name</th>\n",
              "      <th>cost</th>\n",
              "      <th>selected_by_percent</th>\n",
              "      <th>expected_goals</th>\n",
              "      <th>expected_assists</th>\n",
              "      <th>goals_scored</th>\n",
              "      <th>assists</th>\n",
              "      <th>bps</th>\n",
              "      <th>ict_index</th>\n",
              "      <th>points</th>\n",
              "      <th>points_per_game</th>\n",
              "      <th>minutes</th>\n",
              "      <th>apppoint</th>\n",
              "      <th>assistvalue</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>17</th>\n",
              "      <td>19</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>M</td>\n",
              "      <td>Saka</td>\n",
              "      <td>9.0</td>\n",
              "      <td>59.3</td>\n",
              "      <td>6.81</td>\n",
              "      <td>6.41</td>\n",
              "      <td>6</td>\n",
              "      <td>8</td>\n",
              "      <td>388</td>\n",
              "      <td>199.2</td>\n",
              "      <td>107</td>\n",
              "      <td>5.6</td>\n",
              "      <td>1663</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>62</th>\n",
              "      <td>60</td>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>F</td>\n",
              "      <td>Watkins</td>\n",
              "      <td>8.9</td>\n",
              "      <td>54.5</td>\n",
              "      <td>8.89</td>\n",
              "      <td>2.77</td>\n",
              "      <td>9</td>\n",
              "      <td>11</td>\n",
              "      <td>406</td>\n",
              "      <td>167.0</td>\n",
              "      <td>120</td>\n",
              "      <td>6.0</td>\n",
              "      <td>1759</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>475</th>\n",
              "      <td>355</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>F</td>\n",
              "      <td>Haaland</td>\n",
              "      <td>13.9</td>\n",
              "      <td>53.7</td>\n",
              "      <td>14.95</td>\n",
              "      <td>1.17</td>\n",
              "      <td>14</td>\n",
              "      <td>5</td>\n",
              "      <td>417</td>\n",
              "      <td>159.8</td>\n",
              "      <td>112</td>\n",
              "      <td>7.5</td>\n",
              "      <td>1294</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>401</th>\n",
              "      <td>308</td>\n",
              "      <td>Liverpool</td>\n",
              "      <td>M</td>\n",
              "      <td>Salah</td>\n",
              "      <td>13.2</td>\n",
              "      <td>44.0</td>\n",
              "      <td>13.82</td>\n",
              "      <td>5.80</td>\n",
              "      <td>14</td>\n",
              "      <td>8</td>\n",
              "      <td>469</td>\n",
              "      <td>233.1</td>\n",
              "      <td>156</td>\n",
              "      <td>7.8</td>\n",
              "      <td>1740</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>564</th>\n",
              "      <td>430</td>\n",
              "      <td>Newcastle United</td>\n",
              "      <td>D</td>\n",
              "      <td>Trippier</td>\n",
              "      <td>6.8</td>\n",
              "      <td>38.0</td>\n",
              "      <td>0.25</td>\n",
              "      <td>5.84</td>\n",
              "      <td>0</td>\n",
              "      <td>7</td>\n",
              "      <td>442</td>\n",
              "      <td>138.4</td>\n",
              "      <td>85</td>\n",
              "      <td>4.7</td>\n",
              "      <td>1572</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>18</th>\n",
              "      <td>20</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>D</td>\n",
              "      <td>Saliba</td>\n",
              "      <td>5.6</td>\n",
              "      <td>36.5</td>\n",
              "      <td>1.17</td>\n",
              "      <td>0.59</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>376</td>\n",
              "      <td>52.7</td>\n",
              "      <td>75</td>\n",
              "      <td>3.8</td>\n",
              "      <td>1800</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>690</th>\n",
              "      <td>516</td>\n",
              "      <td>Tottenham</td>\n",
              "      <td>M</td>\n",
              "      <td>Son</td>\n",
              "      <td>9.8</td>\n",
              "      <td>35.8</td>\n",
              "      <td>7.04</td>\n",
              "      <td>4.21</td>\n",
              "      <td>12</td>\n",
              "      <td>5</td>\n",
              "      <td>442</td>\n",
              "      <td>180.2</td>\n",
              "      <td>136</td>\n",
              "      <td>6.8</td>\n",
              "      <td>1690</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>464</th>\n",
              "      <td>343</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>F</td>\n",
              "      <td>J.Alvarez</td>\n",
              "      <td>7.0</td>\n",
              "      <td>35.1</td>\n",
              "      <td>6.68</td>\n",
              "      <td>4.66</td>\n",
              "      <td>6</td>\n",
              "      <td>8</td>\n",
              "      <td>403</td>\n",
              "      <td>156.1</td>\n",
              "      <td>97</td>\n",
              "      <td>5.1</td>\n",
              "      <td>1589</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>706</th>\n",
              "      <td>524</td>\n",
              "      <td>West Ham</td>\n",
              "      <td>G</td>\n",
              "      <td>Areola</td>\n",
              "      <td>4.2</td>\n",
              "      <td>34.6</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>343</td>\n",
              "      <td>51.7</td>\n",
              "      <td>74</td>\n",
              "      <td>4.4</td>\n",
              "      <td>1530</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>708</th>\n",
              "      <td>526</td>\n",
              "      <td>West Ham</td>\n",
              "      <td>M</td>\n",
              "      <td>Bowen</td>\n",
              "      <td>8.1</td>\n",
              "      <td>32.5</td>\n",
              "      <td>7.75</td>\n",
              "      <td>2.36</td>\n",
              "      <td>11</td>\n",
              "      <td>2</td>\n",
              "      <td>314</td>\n",
              "      <td>148.1</td>\n",
              "      <td>111</td>\n",
              "      <td>5.8</td>\n",
              "      <td>1707</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>262</th>\n",
              "      <td>362</td>\n",
              "      <td>Chelsea</td>\n",
              "      <td>M</td>\n",
              "      <td>Palmer</td>\n",
              "      <td>5.6</td>\n",
              "      <td>28.6</td>\n",
              "      <td>6.54</td>\n",
              "      <td>3.29</td>\n",
              "      <td>8</td>\n",
              "      <td>5</td>\n",
              "      <td>323</td>\n",
              "      <td>125.8</td>\n",
              "      <td>92</td>\n",
              "      <td>5.4</td>\n",
              "      <td>1150</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>681</th>\n",
              "      <td>506</td>\n",
              "      <td>Tottenham</td>\n",
              "      <td>D</td>\n",
              "      <td>Pedro Porro</td>\n",
              "      <td>5.7</td>\n",
              "      <td>28.6</td>\n",
              "      <td>2.05</td>\n",
              "      <td>4.08</td>\n",
              "      <td>0</td>\n",
              "      <td>7</td>\n",
              "      <td>438</td>\n",
              "      <td>122.2</td>\n",
              "      <td>77</td>\n",
              "      <td>4.1</td>\n",
              "      <td>1707</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>383</th>\n",
              "      <td>290</td>\n",
              "      <td>Liverpool</td>\n",
              "      <td>D</td>\n",
              "      <td>Alexander-Arnold</td>\n",
              "      <td>8.5</td>\n",
              "      <td>28.4</td>\n",
              "      <td>1.95</td>\n",
              "      <td>4.10</td>\n",
              "      <td>2</td>\n",
              "      <td>4</td>\n",
              "      <td>439</td>\n",
              "      <td>131.7</td>\n",
              "      <td>97</td>\n",
              "      <td>5.4</td>\n",
              "      <td>1498</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>96</th>\n",
              "      <td>85</td>\n",
              "      <td>Bournemouth</td>\n",
              "      <td>F</td>\n",
              "      <td>Solanke</td>\n",
              "      <td>7.1</td>\n",
              "      <td>27.7</td>\n",
              "      <td>10.77</td>\n",
              "      <td>0.94</td>\n",
              "      <td>12</td>\n",
              "      <td>1</td>\n",
              "      <td>313</td>\n",
              "      <td>150.2</td>\n",
              "      <td>98</td>\n",
              "      <td>5.2</td>\n",
              "      <td>1695</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>473</th>\n",
              "      <td>353</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>M</td>\n",
              "      <td>Foden</td>\n",
              "      <td>7.8</td>\n",
              "      <td>20.5</td>\n",
              "      <td>4.24</td>\n",
              "      <td>3.47</td>\n",
              "      <td>5</td>\n",
              "      <td>6</td>\n",
              "      <td>379</td>\n",
              "      <td>152.5</td>\n",
              "      <td>96</td>\n",
              "      <td>5.1</td>\n",
              "      <td>1514</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>546</th>\n",
              "      <td>412</td>\n",
              "      <td>Newcastle United</td>\n",
              "      <td>M</td>\n",
              "      <td>Gordon</td>\n",
              "      <td>6.1</td>\n",
              "      <td>19.3</td>\n",
              "      <td>5.43</td>\n",
              "      <td>2.60</td>\n",
              "      <td>6</td>\n",
              "      <td>7</td>\n",
              "      <td>308</td>\n",
              "      <td>123.8</td>\n",
              "      <td>97</td>\n",
              "      <td>5.1</td>\n",
              "      <td>1576</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>155</th>\n",
              "      <td>131</td>\n",
              "      <td>Brighton</td>\n",
              "      <td>D</td>\n",
              "      <td>Estupiñan</td>\n",
              "      <td>4.9</td>\n",
              "      <td>18.3</td>\n",
              "      <td>0.93</td>\n",
              "      <td>1.53</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "      <td>165</td>\n",
              "      <td>55.5</td>\n",
              "      <td>37</td>\n",
              "      <td>4.6</td>\n",
              "      <td>630</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>39</th>\n",
              "      <td>36</td>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>D</td>\n",
              "      <td>Cash</td>\n",
              "      <td>4.7</td>\n",
              "      <td>17.7</td>\n",
              "      <td>3.72</td>\n",
              "      <td>1.62</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>231</td>\n",
              "      <td>71.2</td>\n",
              "      <td>50</td>\n",
              "      <td>2.9</td>\n",
              "      <td>1262</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>5</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>D</td>\n",
              "      <td>Gabriel</td>\n",
              "      <td>5.0</td>\n",
              "      <td>17.5</td>\n",
              "      <td>1.12</td>\n",
              "      <td>0.34</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>296</td>\n",
              "      <td>51.0</td>\n",
              "      <td>58</td>\n",
              "      <td>3.2</td>\n",
              "      <td>1464</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>282</th>\n",
              "      <td>220</td>\n",
              "      <td>Crystal Palace</td>\n",
              "      <td>D</td>\n",
              "      <td>Andersen</td>\n",
              "      <td>4.9</td>\n",
              "      <td>17.1</td>\n",
              "      <td>1.26</td>\n",
              "      <td>0.94</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>365</td>\n",
              "      <td>91.2</td>\n",
              "      <td>69</td>\n",
              "      <td>3.5</td>\n",
              "      <td>1800</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-5dbced34-627c-46f6-9b3b-b2408f01095b')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-5dbced34-627c-46f6-9b3b-b2408f01095b button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-5dbced34-627c-46f6-9b3b-b2408f01095b');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-752c6246-342a-4884-b234-dfd8ac798898\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-752c6246-342a-4884-b234-dfd8ac798898')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-752c6246-342a-4884-b234-dfd8ac798898 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 56
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "ax = sns.barplot(x='selected_by_percent', y='name', data=Mostselected, hue='pos', dodge=False)\n",
        "sns.set(rc={'figure.figsize':(11.7,8.27)})\n",
        "plt.title(\"Most Selected\")\n",
        "plt.xticks(rotation=90)\n",
        "plt.ylabel(\"selected_by_percent\")\n",
        "plt.legend(bbox_to_anchor=(1.05, 1), loc='upper left', borderaxespad=0)\n",
        "plt.gcf().set_size_inches(30,10)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 593
        },
        "id": "8PBz92opthgG",
        "outputId": "5ac7252c-a60e-4960-f5d8-cd6217c431d9"
      },
      "execution_count": 57,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 3000x1000 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "fbref = pd.read_html('https://fbref.com/en/comps/9/Premier-League-Stats')\n",
        "epltable = fbref[0]\n",
        "epltablexGxGc = epltable.drop(columns=[\n",
        " 'Last 5',\n",
        " 'Attendance',\n",
        " 'Top Team Scorer',\n",
        " 'Goalkeeper',\n",
        " 'Notes'])\n",
        "epltablexGxGc= epltablexGxGc.replace('Newcastle Utd', 'Newcastle United')\n",
        "epltablexGxGc= epltablexGxGc.replace('Wolves','Wolverhampton Wanderers')\n",
        "epltablexGxGc= epltablexGxGc.replace('Leeds United','Leeds')\n",
        "epltablexGxGc= epltablexGxGc.replace('Leicester City','Leicester')\n",
        "epltablexGxGc= epltablexGxGc.replace('Manchester Utd','Manchester United')\n",
        "epltablexGxGc['Squad'] = epltablexGxGc['Squad'].str.replace(r\"[\\\"\\',]\", '')\n",
        "epltablexGxGc= epltablexGxGc.replace('Nottham Forest','Nottingham Forest')\n",
        "epltablexGxGc['xCSP'] = (4 - (epltablexGxGc.xGA * 4/23))\n",
        "epltablexGxGc.rename(columns={'Squad': 'team'}, inplace=True)\n",
        "epltablexGxGc['xG/90'] = (epltablexGxGc.xG / epltablexGxGc.MP)\n",
        "epltablexGxGc['xGA/90'] = (epltablexGxGc.xGA / epltablexGxGc.MP)\n",
        "epltablexGxGc"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 711
        },
        "id": "D8nuKObbLt5s",
        "outputId": "60ad20a6-969c-4068-825b-9c455bcbffb4"
      },
      "execution_count": 58,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "<ipython-input-58-f34def3770e4>:14: FutureWarning: The default value of regex will change from True to False in a future version.\n",
            "  epltablexGxGc['Squad'] = epltablexGxGc['Squad'].str.replace(r\"[\\\"\\',]\", '')\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "    Rk                     team  MP   W  D   L  GF  GA  GD  Pts  Pts/MP    xG  \\\n",
              "0    1                Liverpool  20  13  6   1  43  18  25   45    2.25  44.1   \n",
              "1    2              Aston Villa  20  13  3   4  43  27  16   42    2.10  36.0   \n",
              "2    3          Manchester City  19  12  4   3  45  21  24   40    2.11  36.8   \n",
              "3    4                  Arsenal  20  12  4   4  37  20  17   40    2.00  36.4   \n",
              "4    5                Tottenham  20  12  3   5  42  29  13   39    1.95  35.2   \n",
              "5    6                 West Ham  20  10  4   6  33  30   3   34    1.70  27.7   \n",
              "6    7                 Brighton  20   8  7   5  38  33   5   31    1.55  35.0   \n",
              "7    8        Manchester United  20  10  1   9  22  27  -5   31    1.55  29.1   \n",
              "8    9         Newcastle United  20   9  2   9  39  29  10   29    1.45  39.2   \n",
              "9   10                  Chelsea  20   8  4   8  34  31   3   28    1.40  39.4   \n",
              "10  11  Wolverhampton Wanderers  20   8  4   8  30  31  -1   28    1.40  26.6   \n",
              "11  12              Bournemouth  19   7  4   8  28  35  -7   25    1.32  27.0   \n",
              "12  13                   Fulham  20   7  3  10  28  35  -7   24    1.20  24.4   \n",
              "13  14           Crystal Palace  20   5  6   9  22  29  -7   21    1.05  24.6   \n",
              "14  15        Nottingham Forest  20   5  5  10  24  35 -11   20    1.00  23.8   \n",
              "15  16                Brentford  19   5  4  10  26  31  -5   19    1.00  32.6   \n",
              "16  17                  Everton  20   8  2  10  24  28  -4   16    0.80  30.1   \n",
              "17  18               Luton Town  19   4  3  12  23  37 -14   15    0.79  19.2   \n",
              "18  19                  Burnley  20   3  2  15  20  41 -21   11    0.55  17.4   \n",
              "19  20            Sheffield Utd  20   2  3  15  15  49 -34    9    0.45  16.2   \n",
              "\n",
              "     xGA   xGD  xGD/90      xCSP     xG/90    xGA/90  \n",
              "0   22.6  21.5    1.08  0.069565  2.205000  1.130000  \n",
              "1   25.6  10.3    0.52 -0.452174  1.800000  1.280000  \n",
              "2   17.8  18.9    1.00  0.904348  1.936842  0.936842  \n",
              "3   16.3  20.0    1.00  1.165217  1.820000  0.815000  \n",
              "4   34.7   0.4    0.02 -2.034783  1.760000  1.735000  \n",
              "5   35.2  -7.5   -0.38 -2.121739  1.385000  1.760000  \n",
              "6   29.6   5.4    0.27 -1.147826  1.750000  1.480000  \n",
              "7   32.5  -3.4   -0.17 -1.652174  1.455000  1.625000  \n",
              "8   33.5   5.7    0.29 -1.826087  1.960000  1.675000  \n",
              "9   28.8  10.6    0.53 -1.008696  1.970000  1.440000  \n",
              "10  33.1  -6.5   -0.32 -1.756522  1.330000  1.655000  \n",
              "11  31.4  -4.3   -0.23 -1.460870  1.421053  1.652632  \n",
              "12  34.3  -9.9   -0.50 -1.965217  1.220000  1.715000  \n",
              "13  28.6  -4.0   -0.20 -0.973913  1.230000  1.430000  \n",
              "14  30.8  -7.0   -0.35 -1.356522  1.190000  1.540000  \n",
              "15  25.2   7.3    0.39 -0.382609  1.715789  1.326316  \n",
              "16  27.7   2.4    0.12 -0.817391  1.505000  1.385000  \n",
              "17  38.5 -19.3   -1.02 -2.695652  1.010526  2.026316  \n",
              "18  34.5 -17.0   -0.85 -2.000000  0.870000  1.725000  \n",
              "19  39.9 -23.7   -1.18 -2.939130  0.810000  1.995000  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-c9dc2098-f349-4dda-9bfb-22e859c3ebd4\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Rk</th>\n",
              "      <th>team</th>\n",
              "      <th>MP</th>\n",
              "      <th>W</th>\n",
              "      <th>D</th>\n",
              "      <th>L</th>\n",
              "      <th>GF</th>\n",
              "      <th>GA</th>\n",
              "      <th>GD</th>\n",
              "      <th>Pts</th>\n",
              "      <th>Pts/MP</th>\n",
              "      <th>xG</th>\n",
              "      <th>xGA</th>\n",
              "      <th>xGD</th>\n",
              "      <th>xGD/90</th>\n",
              "      <th>xCSP</th>\n",
              "      <th>xG/90</th>\n",
              "      <th>xGA/90</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>1</td>\n",
              "      <td>Liverpool</td>\n",
              "      <td>20</td>\n",
              "      <td>13</td>\n",
              "      <td>6</td>\n",
              "      <td>1</td>\n",
              "      <td>43</td>\n",
              "      <td>18</td>\n",
              "      <td>25</td>\n",
              "      <td>45</td>\n",
              "      <td>2.25</td>\n",
              "      <td>44.1</td>\n",
              "      <td>22.6</td>\n",
              "      <td>21.5</td>\n",
              "      <td>1.08</td>\n",
              "      <td>0.069565</td>\n",
              "      <td>2.205000</td>\n",
              "      <td>1.130000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>2</td>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>20</td>\n",
              "      <td>13</td>\n",
              "      <td>3</td>\n",
              "      <td>4</td>\n",
              "      <td>43</td>\n",
              "      <td>27</td>\n",
              "      <td>16</td>\n",
              "      <td>42</td>\n",
              "      <td>2.10</td>\n",
              "      <td>36.0</td>\n",
              "      <td>25.6</td>\n",
              "      <td>10.3</td>\n",
              "      <td>0.52</td>\n",
              "      <td>-0.452174</td>\n",
              "      <td>1.800000</td>\n",
              "      <td>1.280000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>3</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>19</td>\n",
              "      <td>12</td>\n",
              "      <td>4</td>\n",
              "      <td>3</td>\n",
              "      <td>45</td>\n",
              "      <td>21</td>\n",
              "      <td>24</td>\n",
              "      <td>40</td>\n",
              "      <td>2.11</td>\n",
              "      <td>36.8</td>\n",
              "      <td>17.8</td>\n",
              "      <td>18.9</td>\n",
              "      <td>1.00</td>\n",
              "      <td>0.904348</td>\n",
              "      <td>1.936842</td>\n",
              "      <td>0.936842</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>4</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>20</td>\n",
              "      <td>12</td>\n",
              "      <td>4</td>\n",
              "      <td>4</td>\n",
              "      <td>37</td>\n",
              "      <td>20</td>\n",
              "      <td>17</td>\n",
              "      <td>40</td>\n",
              "      <td>2.00</td>\n",
              "      <td>36.4</td>\n",
              "      <td>16.3</td>\n",
              "      <td>20.0</td>\n",
              "      <td>1.00</td>\n",
              "      <td>1.165217</td>\n",
              "      <td>1.820000</td>\n",
              "      <td>0.815000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>5</td>\n",
              "      <td>Tottenham</td>\n",
              "      <td>20</td>\n",
              "      <td>12</td>\n",
              "      <td>3</td>\n",
              "      <td>5</td>\n",
              "      <td>42</td>\n",
              "      <td>29</td>\n",
              "      <td>13</td>\n",
              "      <td>39</td>\n",
              "      <td>1.95</td>\n",
              "      <td>35.2</td>\n",
              "      <td>34.7</td>\n",
              "      <td>0.4</td>\n",
              "      <td>0.02</td>\n",
              "      <td>-2.034783</td>\n",
              "      <td>1.760000</td>\n",
              "      <td>1.735000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>6</td>\n",
              "      <td>West Ham</td>\n",
              "      <td>20</td>\n",
              "      <td>10</td>\n",
              "      <td>4</td>\n",
              "      <td>6</td>\n",
              "      <td>33</td>\n",
              "      <td>30</td>\n",
              "      <td>3</td>\n",
              "      <td>34</td>\n",
              "      <td>1.70</td>\n",
              "      <td>27.7</td>\n",
              "      <td>35.2</td>\n",
              "      <td>-7.5</td>\n",
              "      <td>-0.38</td>\n",
              "      <td>-2.121739</td>\n",
              "      <td>1.385000</td>\n",
              "      <td>1.760000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>7</td>\n",
              "      <td>Brighton</td>\n",
              "      <td>20</td>\n",
              "      <td>8</td>\n",
              "      <td>7</td>\n",
              "      <td>5</td>\n",
              "      <td>38</td>\n",
              "      <td>33</td>\n",
              "      <td>5</td>\n",
              "      <td>31</td>\n",
              "      <td>1.55</td>\n",
              "      <td>35.0</td>\n",
              "      <td>29.6</td>\n",
              "      <td>5.4</td>\n",
              "      <td>0.27</td>\n",
              "      <td>-1.147826</td>\n",
              "      <td>1.750000</td>\n",
              "      <td>1.480000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>8</td>\n",
              "      <td>Manchester United</td>\n",
              "      <td>20</td>\n",
              "      <td>10</td>\n",
              "      <td>1</td>\n",
              "      <td>9</td>\n",
              "      <td>22</td>\n",
              "      <td>27</td>\n",
              "      <td>-5</td>\n",
              "      <td>31</td>\n",
              "      <td>1.55</td>\n",
              "      <td>29.1</td>\n",
              "      <td>32.5</td>\n",
              "      <td>-3.4</td>\n",
              "      <td>-0.17</td>\n",
              "      <td>-1.652174</td>\n",
              "      <td>1.455000</td>\n",
              "      <td>1.625000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>9</td>\n",
              "      <td>Newcastle United</td>\n",
              "      <td>20</td>\n",
              "      <td>9</td>\n",
              "      <td>2</td>\n",
              "      <td>9</td>\n",
              "      <td>39</td>\n",
              "      <td>29</td>\n",
              "      <td>10</td>\n",
              "      <td>29</td>\n",
              "      <td>1.45</td>\n",
              "      <td>39.2</td>\n",
              "      <td>33.5</td>\n",
              "      <td>5.7</td>\n",
              "      <td>0.29</td>\n",
              "      <td>-1.826087</td>\n",
              "      <td>1.960000</td>\n",
              "      <td>1.675000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>10</td>\n",
              "      <td>Chelsea</td>\n",
              "      <td>20</td>\n",
              "      <td>8</td>\n",
              "      <td>4</td>\n",
              "      <td>8</td>\n",
              "      <td>34</td>\n",
              "      <td>31</td>\n",
              "      <td>3</td>\n",
              "      <td>28</td>\n",
              "      <td>1.40</td>\n",
              "      <td>39.4</td>\n",
              "      <td>28.8</td>\n",
              "      <td>10.6</td>\n",
              "      <td>0.53</td>\n",
              "      <td>-1.008696</td>\n",
              "      <td>1.970000</td>\n",
              "      <td>1.440000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10</th>\n",
              "      <td>11</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>20</td>\n",
              "      <td>8</td>\n",
              "      <td>4</td>\n",
              "      <td>8</td>\n",
              "      <td>30</td>\n",
              "      <td>31</td>\n",
              "      <td>-1</td>\n",
              "      <td>28</td>\n",
              "      <td>1.40</td>\n",
              "      <td>26.6</td>\n",
              "      <td>33.1</td>\n",
              "      <td>-6.5</td>\n",
              "      <td>-0.32</td>\n",
              "      <td>-1.756522</td>\n",
              "      <td>1.330000</td>\n",
              "      <td>1.655000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>11</th>\n",
              "      <td>12</td>\n",
              "      <td>Bournemouth</td>\n",
              "      <td>19</td>\n",
              "      <td>7</td>\n",
              "      <td>4</td>\n",
              "      <td>8</td>\n",
              "      <td>28</td>\n",
              "      <td>35</td>\n",
              "      <td>-7</td>\n",
              "      <td>25</td>\n",
              "      <td>1.32</td>\n",
              "      <td>27.0</td>\n",
              "      <td>31.4</td>\n",
              "      <td>-4.3</td>\n",
              "      <td>-0.23</td>\n",
              "      <td>-1.460870</td>\n",
              "      <td>1.421053</td>\n",
              "      <td>1.652632</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>12</th>\n",
              "      <td>13</td>\n",
              "      <td>Fulham</td>\n",
              "      <td>20</td>\n",
              "      <td>7</td>\n",
              "      <td>3</td>\n",
              "      <td>10</td>\n",
              "      <td>28</td>\n",
              "      <td>35</td>\n",
              "      <td>-7</td>\n",
              "      <td>24</td>\n",
              "      <td>1.20</td>\n",
              "      <td>24.4</td>\n",
              "      <td>34.3</td>\n",
              "      <td>-9.9</td>\n",
              "      <td>-0.50</td>\n",
              "      <td>-1.965217</td>\n",
              "      <td>1.220000</td>\n",
              "      <td>1.715000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>13</th>\n",
              "      <td>14</td>\n",
              "      <td>Crystal Palace</td>\n",
              "      <td>20</td>\n",
              "      <td>5</td>\n",
              "      <td>6</td>\n",
              "      <td>9</td>\n",
              "      <td>22</td>\n",
              "      <td>29</td>\n",
              "      <td>-7</td>\n",
              "      <td>21</td>\n",
              "      <td>1.05</td>\n",
              "      <td>24.6</td>\n",
              "      <td>28.6</td>\n",
              "      <td>-4.0</td>\n",
              "      <td>-0.20</td>\n",
              "      <td>-0.973913</td>\n",
              "      <td>1.230000</td>\n",
              "      <td>1.430000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>14</th>\n",
              "      <td>15</td>\n",
              "      <td>Nottingham Forest</td>\n",
              "      <td>20</td>\n",
              "      <td>5</td>\n",
              "      <td>5</td>\n",
              "      <td>10</td>\n",
              "      <td>24</td>\n",
              "      <td>35</td>\n",
              "      <td>-11</td>\n",
              "      <td>20</td>\n",
              "      <td>1.00</td>\n",
              "      <td>23.8</td>\n",
              "      <td>30.8</td>\n",
              "      <td>-7.0</td>\n",
              "      <td>-0.35</td>\n",
              "      <td>-1.356522</td>\n",
              "      <td>1.190000</td>\n",
              "      <td>1.540000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>15</th>\n",
              "      <td>16</td>\n",
              "      <td>Brentford</td>\n",
              "      <td>19</td>\n",
              "      <td>5</td>\n",
              "      <td>4</td>\n",
              "      <td>10</td>\n",
              "      <td>26</td>\n",
              "      <td>31</td>\n",
              "      <td>-5</td>\n",
              "      <td>19</td>\n",
              "      <td>1.00</td>\n",
              "      <td>32.6</td>\n",
              "      <td>25.2</td>\n",
              "      <td>7.3</td>\n",
              "      <td>0.39</td>\n",
              "      <td>-0.382609</td>\n",
              "      <td>1.715789</td>\n",
              "      <td>1.326316</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>16</th>\n",
              "      <td>17</td>\n",
              "      <td>Everton</td>\n",
              "      <td>20</td>\n",
              "      <td>8</td>\n",
              "      <td>2</td>\n",
              "      <td>10</td>\n",
              "      <td>24</td>\n",
              "      <td>28</td>\n",
              "      <td>-4</td>\n",
              "      <td>16</td>\n",
              "      <td>0.80</td>\n",
              "      <td>30.1</td>\n",
              "      <td>27.7</td>\n",
              "      <td>2.4</td>\n",
              "      <td>0.12</td>\n",
              "      <td>-0.817391</td>\n",
              "      <td>1.505000</td>\n",
              "      <td>1.385000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>17</th>\n",
              "      <td>18</td>\n",
              "      <td>Luton Town</td>\n",
              "      <td>19</td>\n",
              "      <td>4</td>\n",
              "      <td>3</td>\n",
              "      <td>12</td>\n",
              "      <td>23</td>\n",
              "      <td>37</td>\n",
              "      <td>-14</td>\n",
              "      <td>15</td>\n",
              "      <td>0.79</td>\n",
              "      <td>19.2</td>\n",
              "      <td>38.5</td>\n",
              "      <td>-19.3</td>\n",
              "      <td>-1.02</td>\n",
              "      <td>-2.695652</td>\n",
              "      <td>1.010526</td>\n",
              "      <td>2.026316</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>18</th>\n",
              "      <td>19</td>\n",
              "      <td>Burnley</td>\n",
              "      <td>20</td>\n",
              "      <td>3</td>\n",
              "      <td>2</td>\n",
              "      <td>15</td>\n",
              "      <td>20</td>\n",
              "      <td>41</td>\n",
              "      <td>-21</td>\n",
              "      <td>11</td>\n",
              "      <td>0.55</td>\n",
              "      <td>17.4</td>\n",
              "      <td>34.5</td>\n",
              "      <td>-17.0</td>\n",
              "      <td>-0.85</td>\n",
              "      <td>-2.000000</td>\n",
              "      <td>0.870000</td>\n",
              "      <td>1.725000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>19</th>\n",
              "      <td>20</td>\n",
              "      <td>Sheffield Utd</td>\n",
              "      <td>20</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "      <td>15</td>\n",
              "      <td>15</td>\n",
              "      <td>49</td>\n",
              "      <td>-34</td>\n",
              "      <td>9</td>\n",
              "      <td>0.45</td>\n",
              "      <td>16.2</td>\n",
              "      <td>39.9</td>\n",
              "      <td>-23.7</td>\n",
              "      <td>-1.18</td>\n",
              "      <td>-2.939130</td>\n",
              "      <td>0.810000</td>\n",
              "      <td>1.995000</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-c9dc2098-f349-4dda-9bfb-22e859c3ebd4')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-c9dc2098-f349-4dda-9bfb-22e859c3ebd4 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-c9dc2098-f349-4dda-9bfb-22e859c3ebd4');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-01d6d837-6ad1-47ac-818c-007190a93663\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-01d6d837-6ad1-47ac-818c-007190a93663')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-01d6d837-6ad1-47ac-818c-007190a93663 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 58
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "fig, ax = plt.subplots(1, figsize=(10,8))\n",
        "ax.scatter(x=epltablexGxGc['xG/90'],y=epltablexGxGc['xGA/90'],c='DarkBlue')\n",
        "# set labels\n",
        "ax.set_xlabel('xG/90')\n",
        "ax.set_ylabel('xGA/90')\n",
        "\n",
        "# annotate points in axis\n",
        "for idx, row in epltablexGxGc.iterrows():\n",
        "    ax.annotate(row['team'], (row['xG/90'], row['xGA/90']) )\n",
        "# force matplotlib to draw the graph\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 704
        },
        "id": "TYn5yVsCNlLv",
        "outputId": "61186980-cf46-4c59-f946-d81c4f429fbe"
      },
      "execution_count": 59,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1000x800 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "EPL_player_df"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 652
        },
        "id": "wrjHrDmJ8OlM",
        "outputId": "5f687865-3e9b-41d0-8737-0bdee3878706"
      },
      "execution_count": 60,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "        id             player_name games_x time_x goals_1wks_x  \\\n",
              "0     1250           Mohamed Salah      20   1768           14   \n",
              "1     8260          Erling Haaland      15   1305           14   \n",
              "2      453           Son Heung-Min      20   1739           12   \n",
              "3     1679         Dominic Solanke      19   1708           12   \n",
              "4     1776            Jarrod Bowen      19   1710           11   \n",
              "..     ...                     ...     ...    ...          ...   \n",
              "500  12204   Benicio Baker-Boaitey       2      2            0   \n",
              "501  12215         Michael Ndiweni       1      1            0   \n",
              "502  12251              Sydie Peck       1      6            0   \n",
              "503  12275          Willy Kambwala       2     88            0   \n",
              "504  12291  Rhys Norrington-Davies       1      1            0   \n",
              "\n",
              "              xG_1wks_x assists_1wks_x           xA_1wks_x shots_1wks_x  \\\n",
              "0    13.610325902700424              8    9.57847910746932           65   \n",
              "1    16.727499932050705              4  3.2472310978919268           58   \n",
              "2      7.47495724260807              5   6.843130592256784           52   \n",
              "3    12.378114826977253              1  0.9976950995624065           66   \n",
              "4      8.29572493582964              2   3.144163405522704           47   \n",
              "..                  ...            ...                 ...          ...   \n",
              "500                   0              0                   0            0   \n",
              "501                   0              0                   0            0   \n",
              "502                   0              0                   0            0   \n",
              "503                   0              0                   0            0   \n",
              "504                   0              0                   0            0   \n",
              "\n",
              "    key_passes_1wks_x  ... shots_1wks_y key_passes_1wks_y yellow_cards  \\\n",
              "0                  47  ...           65                47            2   \n",
              "1                  16  ...           58                16            1   \n",
              "2                  37  ...           52                37            1   \n",
              "3                  14  ...           66                14            1   \n",
              "4                  14  ...           47                14            1   \n",
              "..                ...  ...          ...               ...          ...   \n",
              "500                 0  ...            0                 0            0   \n",
              "501                 0  ...            0                 0            0   \n",
              "502                 0  ...            0                 0            0   \n",
              "503                 0  ...            0                 0            0   \n",
              "504                 0  ...            0                 0            0   \n",
              "\n",
              "    red_cards position_y       team_title_y npg_1wks_y        npxG_1wks_y  \\\n",
              "0           0          F          Liverpool         10  9.043387070298195   \n",
              "1           0          F    Manchester City         11  13.68282476067543   \n",
              "2           0        F M          Tottenham         11  6.713788405060768   \n",
              "3           0          F        Bournemouth         11  11.61694597452879   \n",
              "4           0        F M           West Ham         11   8.29572493582964   \n",
              "..        ...        ...                ...        ...                ...   \n",
              "500         0          S           Brighton          0                  0   \n",
              "501         0          S   Newcastle United          0                  0   \n",
              "502         0          S   Sheffield United          0                  0   \n",
              "503         0        D S  Manchester United          0                  0   \n",
              "504         0          S   Sheffield United          0                  0   \n",
              "\n",
              "                 xGChain            xGBuildup  \n",
              "0      19.68034301698208    5.720102474093437  \n",
              "1     16.214465029537678   1.3705047406256199  \n",
              "2     16.887082293629646    6.178518561646342  \n",
              "3     12.262300044298172   1.8974752612411976  \n",
              "4      9.910744827240705   1.9265567287802696  \n",
              "..                   ...                  ...  \n",
              "500   0.1531512588262558   0.1531512588262558  \n",
              "501                    0                    0  \n",
              "502                    0                    0  \n",
              "503  0.07591637223958969  0.07591637223958969  \n",
              "504                    0                    0  \n",
              "\n",
              "[505 rows x 48 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-1648ed9d-ba23-4f84-9fae-e9dd27e724de\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>player_name</th>\n",
              "      <th>games_x</th>\n",
              "      <th>time_x</th>\n",
              "      <th>goals_1wks_x</th>\n",
              "      <th>xG_1wks_x</th>\n",
              "      <th>assists_1wks_x</th>\n",
              "      <th>xA_1wks_x</th>\n",
              "      <th>shots_1wks_x</th>\n",
              "      <th>key_passes_1wks_x</th>\n",
              "      <th>...</th>\n",
              "      <th>shots_1wks_y</th>\n",
              "      <th>key_passes_1wks_y</th>\n",
              "      <th>yellow_cards</th>\n",
              "      <th>red_cards</th>\n",
              "      <th>position_y</th>\n",
              "      <th>team_title_y</th>\n",
              "      <th>npg_1wks_y</th>\n",
              "      <th>npxG_1wks_y</th>\n",
              "      <th>xGChain</th>\n",
              "      <th>xGBuildup</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>1250</td>\n",
              "      <td>Mohamed Salah</td>\n",
              "      <td>20</td>\n",
              "      <td>1768</td>\n",
              "      <td>14</td>\n",
              "      <td>13.610325902700424</td>\n",
              "      <td>8</td>\n",
              "      <td>9.57847910746932</td>\n",
              "      <td>65</td>\n",
              "      <td>47</td>\n",
              "      <td>...</td>\n",
              "      <td>65</td>\n",
              "      <td>47</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>F</td>\n",
              "      <td>Liverpool</td>\n",
              "      <td>10</td>\n",
              "      <td>9.043387070298195</td>\n",
              "      <td>19.68034301698208</td>\n",
              "      <td>5.720102474093437</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>8260</td>\n",
              "      <td>Erling Haaland</td>\n",
              "      <td>15</td>\n",
              "      <td>1305</td>\n",
              "      <td>14</td>\n",
              "      <td>16.727499932050705</td>\n",
              "      <td>4</td>\n",
              "      <td>3.2472310978919268</td>\n",
              "      <td>58</td>\n",
              "      <td>16</td>\n",
              "      <td>...</td>\n",
              "      <td>58</td>\n",
              "      <td>16</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>F</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>11</td>\n",
              "      <td>13.68282476067543</td>\n",
              "      <td>16.214465029537678</td>\n",
              "      <td>1.3705047406256199</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>453</td>\n",
              "      <td>Son Heung-Min</td>\n",
              "      <td>20</td>\n",
              "      <td>1739</td>\n",
              "      <td>12</td>\n",
              "      <td>7.47495724260807</td>\n",
              "      <td>5</td>\n",
              "      <td>6.843130592256784</td>\n",
              "      <td>52</td>\n",
              "      <td>37</td>\n",
              "      <td>...</td>\n",
              "      <td>52</td>\n",
              "      <td>37</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>F M</td>\n",
              "      <td>Tottenham</td>\n",
              "      <td>11</td>\n",
              "      <td>6.713788405060768</td>\n",
              "      <td>16.887082293629646</td>\n",
              "      <td>6.178518561646342</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>1679</td>\n",
              "      <td>Dominic Solanke</td>\n",
              "      <td>19</td>\n",
              "      <td>1708</td>\n",
              "      <td>12</td>\n",
              "      <td>12.378114826977253</td>\n",
              "      <td>1</td>\n",
              "      <td>0.9976950995624065</td>\n",
              "      <td>66</td>\n",
              "      <td>14</td>\n",
              "      <td>...</td>\n",
              "      <td>66</td>\n",
              "      <td>14</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>F</td>\n",
              "      <td>Bournemouth</td>\n",
              "      <td>11</td>\n",
              "      <td>11.61694597452879</td>\n",
              "      <td>12.262300044298172</td>\n",
              "      <td>1.8974752612411976</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>1776</td>\n",
              "      <td>Jarrod Bowen</td>\n",
              "      <td>19</td>\n",
              "      <td>1710</td>\n",
              "      <td>11</td>\n",
              "      <td>8.29572493582964</td>\n",
              "      <td>2</td>\n",
              "      <td>3.144163405522704</td>\n",
              "      <td>47</td>\n",
              "      <td>14</td>\n",
              "      <td>...</td>\n",
              "      <td>47</td>\n",
              "      <td>14</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>F M</td>\n",
              "      <td>West Ham</td>\n",
              "      <td>11</td>\n",
              "      <td>8.29572493582964</td>\n",
              "      <td>9.910744827240705</td>\n",
              "      <td>1.9265567287802696</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>500</th>\n",
              "      <td>12204</td>\n",
              "      <td>Benicio Baker-Boaitey</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>S</td>\n",
              "      <td>Brighton</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.1531512588262558</td>\n",
              "      <td>0.1531512588262558</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>501</th>\n",
              "      <td>12215</td>\n",
              "      <td>Michael Ndiweni</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>S</td>\n",
              "      <td>Newcastle United</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>502</th>\n",
              "      <td>12251</td>\n",
              "      <td>Sydie Peck</td>\n",
              "      <td>1</td>\n",
              "      <td>6</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>S</td>\n",
              "      <td>Sheffield United</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>503</th>\n",
              "      <td>12275</td>\n",
              "      <td>Willy Kambwala</td>\n",
              "      <td>2</td>\n",
              "      <td>88</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>D S</td>\n",
              "      <td>Manchester United</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.07591637223958969</td>\n",
              "      <td>0.07591637223958969</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>504</th>\n",
              "      <td>12291</td>\n",
              "      <td>Rhys Norrington-Davies</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>S</td>\n",
              "      <td>Sheffield United</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>505 rows × 48 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-1648ed9d-ba23-4f84-9fae-e9dd27e724de')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-1648ed9d-ba23-4f84-9fae-e9dd27e724de button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-1648ed9d-ba23-4f84-9fae-e9dd27e724de');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-e77c200a-6344-4d1b-a61e-080731ebc44e\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-e77c200a-6344-4d1b-a61e-080731ebc44e')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-e77c200a-6344-4d1b-a61e-080731ebc44e button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 60
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "EPL_player_df['goals'] = EPL_player_df['goals_1wks_x'].astype(int)\n",
        "top25goals = EPL_player_df.nlargest(20, 'goals')\n",
        "top25goals"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 969
        },
        "id": "3H-vTRXF8VDs",
        "outputId": "e60c7179-3f0a-4125-db93-5b381482e21d"
      },
      "execution_count": 61,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "       id         player_name games_x time_x goals_1wks_x           xG_1wks_x  \\\n",
              "0    1250       Mohamed Salah      20   1768           14  13.610325902700424   \n",
              "1    8260      Erling Haaland      15   1305           14  16.727499932050705   \n",
              "2     453       Son Heung-Min      20   1739           12    7.47495724260807   \n",
              "3    1679     Dominic Solanke      19   1708           12  12.378114826977253   \n",
              "4    1776        Jarrod Bowen      19   1710           11    8.29572493582964   \n",
              "5    8845      Hee-Chan Hwang      20   1466           10   6.790349626913667   \n",
              "6    5232      Alexander Isak      15   1071            9   9.814618289470673   \n",
              "7    8865       Ollie Watkins      20   1779            9  10.453795365989208   \n",
              "8    8497         Cole Palmer      17   1145            8   6.911410814151168   \n",
              "9     468       Callum Wilson      14    710            7   8.662500880658627   \n",
              "10   4456          Chris Wood      18    706            7   5.063202641904354   \n",
              "11   6552        Bryan Mbeumo      15   1289            7   7.574615128338337   \n",
              "12   8272          João Pedro      20   1120            7   6.923017270863056   \n",
              "13  10048     Nicolas Jackson      19   1458            7  11.180736033245921   \n",
              "14   1726  Abdoulaye Doucouré      17   1460            6   7.047202989459038   \n",
              "15   3697     Odsonne Edouard      15   1270            6   6.131767854094505   \n",
              "16   5221         Leon Bailey      18    872            6  3.2635028287768364   \n",
              "17   6026         Richarlison      17    946            6   6.742483241483569   \n",
              "18   6122        Douglas Luiz      19   1678            6   5.316661614924669   \n",
              "19   7080       Matheus Cunha      20   1718            6   5.866328570060432   \n",
              "\n",
              "   assists_1wks_x            xA_1wks_x shots_1wks_x key_passes_1wks_x  ...  \\\n",
              "0               8     9.57847910746932           65                47  ...   \n",
              "1               4   3.2472310978919268           58                16  ...   \n",
              "2               5    6.843130592256784           52                37  ...   \n",
              "3               1   0.9976950995624065           66                14  ...   \n",
              "4               2    3.144163405522704           47                14  ...   \n",
              "5               3   3.0366309229284525           35                14  ...   \n",
              "6               0   1.3252181969583035           32                11  ...   \n",
              "7               8    4.449759863317013           55                30  ...   \n",
              "8               4    5.017751751467586           38                27  ...   \n",
              "9               1  0.42866930179297924           31                 5  ...   \n",
              "10              1   1.0724100936204195           19                12  ...   \n",
              "11              3   2.8948017433285713           41                22  ...   \n",
              "12              2    2.871623874641955           40                18  ...   \n",
              "13              2    2.957573415711522           45                16  ...   \n",
              "14              0    2.036896336823702           28                22  ...   \n",
              "15              0    0.864791008643806           39                13  ...   \n",
              "16              5    4.156177133321762           27                19  ...   \n",
              "17              3   1.0897221639752388           39                 9  ...   \n",
              "18              3   2.5393043514341116           36                27  ...   \n",
              "19              5   3.1632621362805367           47                21  ...   \n",
              "\n",
              "   key_passes_1wks_y yellow_cards red_cards position_y  \\\n",
              "0                 47            2         0          F   \n",
              "1                 16            1         0          F   \n",
              "2                 37            1         0        F M   \n",
              "3                 14            1         0          F   \n",
              "4                 14            1         0        F M   \n",
              "5                 14            4         0      F M S   \n",
              "6                 11            0         0        F S   \n",
              "7                 30            3         0          F   \n",
              "8                 27            5         0      F M S   \n",
              "9                  5            1         0        F S   \n",
              "10                12            0         0        F S   \n",
              "11                22            1         0          F   \n",
              "12                18            2         0      F M S   \n",
              "13                16            8         0      F M S   \n",
              "14                22            4         0          M   \n",
              "15                13            3         0          F   \n",
              "16                19            3         0        M S   \n",
              "17                 9            3         0      F M S   \n",
              "18                27            5         0          M   \n",
              "19                21            3         0        F M   \n",
              "\n",
              "               team_title_y npg_1wks_y         npxG_1wks_y  \\\n",
              "0                 Liverpool         10   9.043387070298195   \n",
              "1           Manchester City         11   13.68282476067543   \n",
              "2                 Tottenham         11   6.713788405060768   \n",
              "3               Bournemouth         11   11.61694597452879   \n",
              "4                  West Ham         11    8.29572493582964   \n",
              "5   Wolverhampton Wanderers          9   6.029180759564042   \n",
              "6          Newcastle United          7   8.292280554771423   \n",
              "7               Aston Villa          9  10.453795365989208   \n",
              "8   Chelsea,Manchester City          4   3.866735367104411   \n",
              "9          Newcastle United          5    7.14016330987215   \n",
              "10        Nottingham Forest          7   5.063202641904354   \n",
              "11                Brentford          4   5.291108556091785   \n",
              "12                 Brighton          3  3.8784161042422056   \n",
              "13                  Chelsea          7  11.180736033245921   \n",
              "14                  Everton          6   7.047202989459038   \n",
              "15           Crystal Palace          6   6.131767854094505   \n",
              "16              Aston Villa          6  3.2635028287768364   \n",
              "17                Tottenham          6   6.742483241483569   \n",
              "18              Aston Villa          2  2.2719862572848797   \n",
              "19  Wolverhampton Wanderers          6   5.866328570060432   \n",
              "\n",
              "               xGChain            xGBuildup goals  \n",
              "0    19.68034301698208    5.720102474093437    14  \n",
              "1   16.214465029537678   1.3705047406256199    14  \n",
              "2   16.887082293629646    6.178518561646342    12  \n",
              "3   12.262300044298172   1.8974752612411976    12  \n",
              "4    9.910744827240705   1.9265567287802696    11  \n",
              "5    9.669545919634402    2.148992163129151    10  \n",
              "6   10.588064163923264    2.808706644922495     9  \n",
              "7   15.558012336492538   2.1048314729705453     9  \n",
              "8   11.178717771545053    4.832333065569401     8  \n",
              "9    7.621083067730069   0.8389131352305412     7  \n",
              "10    5.99279666878283  0.21865982562303543     7  \n",
              "11   9.410030841827393   3.1749180927872658     7  \n",
              "12   9.901699712499976    4.285971317440271     7  \n",
              "13  14.183117497712374    2.219442430883646     7  \n",
              "14   9.405437964946032   3.6784230321645737     6  \n",
              "15    6.33973165974021    1.469034243375063     6  \n",
              "16   8.750119514763355    2.968475740402937     6  \n",
              "17   8.496763460338116   1.4466600809246302     6  \n",
              "18  10.123004015535116    8.010031690821052     6  \n",
              "19   8.991567961871624   1.5023581953719258     6  \n",
              "\n",
              "[20 rows x 49 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-8979c1d2-6c1b-4bc0-9ee5-0ff65ed355b6\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>player_name</th>\n",
              "      <th>games_x</th>\n",
              "      <th>time_x</th>\n",
              "      <th>goals_1wks_x</th>\n",
              "      <th>xG_1wks_x</th>\n",
              "      <th>assists_1wks_x</th>\n",
              "      <th>xA_1wks_x</th>\n",
              "      <th>shots_1wks_x</th>\n",
              "      <th>key_passes_1wks_x</th>\n",
              "      <th>...</th>\n",
              "      <th>key_passes_1wks_y</th>\n",
              "      <th>yellow_cards</th>\n",
              "      <th>red_cards</th>\n",
              "      <th>position_y</th>\n",
              "      <th>team_title_y</th>\n",
              "      <th>npg_1wks_y</th>\n",
              "      <th>npxG_1wks_y</th>\n",
              "      <th>xGChain</th>\n",
              "      <th>xGBuildup</th>\n",
              "      <th>goals</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>1250</td>\n",
              "      <td>Mohamed Salah</td>\n",
              "      <td>20</td>\n",
              "      <td>1768</td>\n",
              "      <td>14</td>\n",
              "      <td>13.610325902700424</td>\n",
              "      <td>8</td>\n",
              "      <td>9.57847910746932</td>\n",
              "      <td>65</td>\n",
              "      <td>47</td>\n",
              "      <td>...</td>\n",
              "      <td>47</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>F</td>\n",
              "      <td>Liverpool</td>\n",
              "      <td>10</td>\n",
              "      <td>9.043387070298195</td>\n",
              "      <td>19.68034301698208</td>\n",
              "      <td>5.720102474093437</td>\n",
              "      <td>14</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>8260</td>\n",
              "      <td>Erling Haaland</td>\n",
              "      <td>15</td>\n",
              "      <td>1305</td>\n",
              "      <td>14</td>\n",
              "      <td>16.727499932050705</td>\n",
              "      <td>4</td>\n",
              "      <td>3.2472310978919268</td>\n",
              "      <td>58</td>\n",
              "      <td>16</td>\n",
              "      <td>...</td>\n",
              "      <td>16</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>F</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>11</td>\n",
              "      <td>13.68282476067543</td>\n",
              "      <td>16.214465029537678</td>\n",
              "      <td>1.3705047406256199</td>\n",
              "      <td>14</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>453</td>\n",
              "      <td>Son Heung-Min</td>\n",
              "      <td>20</td>\n",
              "      <td>1739</td>\n",
              "      <td>12</td>\n",
              "      <td>7.47495724260807</td>\n",
              "      <td>5</td>\n",
              "      <td>6.843130592256784</td>\n",
              "      <td>52</td>\n",
              "      <td>37</td>\n",
              "      <td>...</td>\n",
              "      <td>37</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>F M</td>\n",
              "      <td>Tottenham</td>\n",
              "      <td>11</td>\n",
              "      <td>6.713788405060768</td>\n",
              "      <td>16.887082293629646</td>\n",
              "      <td>6.178518561646342</td>\n",
              "      <td>12</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>1679</td>\n",
              "      <td>Dominic Solanke</td>\n",
              "      <td>19</td>\n",
              "      <td>1708</td>\n",
              "      <td>12</td>\n",
              "      <td>12.378114826977253</td>\n",
              "      <td>1</td>\n",
              "      <td>0.9976950995624065</td>\n",
              "      <td>66</td>\n",
              "      <td>14</td>\n",
              "      <td>...</td>\n",
              "      <td>14</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>F</td>\n",
              "      <td>Bournemouth</td>\n",
              "      <td>11</td>\n",
              "      <td>11.61694597452879</td>\n",
              "      <td>12.262300044298172</td>\n",
              "      <td>1.8974752612411976</td>\n",
              "      <td>12</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>1776</td>\n",
              "      <td>Jarrod Bowen</td>\n",
              "      <td>19</td>\n",
              "      <td>1710</td>\n",
              "      <td>11</td>\n",
              "      <td>8.29572493582964</td>\n",
              "      <td>2</td>\n",
              "      <td>3.144163405522704</td>\n",
              "      <td>47</td>\n",
              "      <td>14</td>\n",
              "      <td>...</td>\n",
              "      <td>14</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>F M</td>\n",
              "      <td>West Ham</td>\n",
              "      <td>11</td>\n",
              "      <td>8.29572493582964</td>\n",
              "      <td>9.910744827240705</td>\n",
              "      <td>1.9265567287802696</td>\n",
              "      <td>11</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>8845</td>\n",
              "      <td>Hee-Chan Hwang</td>\n",
              "      <td>20</td>\n",
              "      <td>1466</td>\n",
              "      <td>10</td>\n",
              "      <td>6.790349626913667</td>\n",
              "      <td>3</td>\n",
              "      <td>3.0366309229284525</td>\n",
              "      <td>35</td>\n",
              "      <td>14</td>\n",
              "      <td>...</td>\n",
              "      <td>14</td>\n",
              "      <td>4</td>\n",
              "      <td>0</td>\n",
              "      <td>F M S</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>9</td>\n",
              "      <td>6.029180759564042</td>\n",
              "      <td>9.669545919634402</td>\n",
              "      <td>2.148992163129151</td>\n",
              "      <td>10</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>5232</td>\n",
              "      <td>Alexander Isak</td>\n",
              "      <td>15</td>\n",
              "      <td>1071</td>\n",
              "      <td>9</td>\n",
              "      <td>9.814618289470673</td>\n",
              "      <td>0</td>\n",
              "      <td>1.3252181969583035</td>\n",
              "      <td>32</td>\n",
              "      <td>11</td>\n",
              "      <td>...</td>\n",
              "      <td>11</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>F S</td>\n",
              "      <td>Newcastle United</td>\n",
              "      <td>7</td>\n",
              "      <td>8.292280554771423</td>\n",
              "      <td>10.588064163923264</td>\n",
              "      <td>2.808706644922495</td>\n",
              "      <td>9</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>8865</td>\n",
              "      <td>Ollie Watkins</td>\n",
              "      <td>20</td>\n",
              "      <td>1779</td>\n",
              "      <td>9</td>\n",
              "      <td>10.453795365989208</td>\n",
              "      <td>8</td>\n",
              "      <td>4.449759863317013</td>\n",
              "      <td>55</td>\n",
              "      <td>30</td>\n",
              "      <td>...</td>\n",
              "      <td>30</td>\n",
              "      <td>3</td>\n",
              "      <td>0</td>\n",
              "      <td>F</td>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>9</td>\n",
              "      <td>10.453795365989208</td>\n",
              "      <td>15.558012336492538</td>\n",
              "      <td>2.1048314729705453</td>\n",
              "      <td>9</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>8497</td>\n",
              "      <td>Cole Palmer</td>\n",
              "      <td>17</td>\n",
              "      <td>1145</td>\n",
              "      <td>8</td>\n",
              "      <td>6.911410814151168</td>\n",
              "      <td>4</td>\n",
              "      <td>5.017751751467586</td>\n",
              "      <td>38</td>\n",
              "      <td>27</td>\n",
              "      <td>...</td>\n",
              "      <td>27</td>\n",
              "      <td>5</td>\n",
              "      <td>0</td>\n",
              "      <td>F M S</td>\n",
              "      <td>Chelsea,Manchester City</td>\n",
              "      <td>4</td>\n",
              "      <td>3.866735367104411</td>\n",
              "      <td>11.178717771545053</td>\n",
              "      <td>4.832333065569401</td>\n",
              "      <td>8</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>468</td>\n",
              "      <td>Callum Wilson</td>\n",
              "      <td>14</td>\n",
              "      <td>710</td>\n",
              "      <td>7</td>\n",
              "      <td>8.662500880658627</td>\n",
              "      <td>1</td>\n",
              "      <td>0.42866930179297924</td>\n",
              "      <td>31</td>\n",
              "      <td>5</td>\n",
              "      <td>...</td>\n",
              "      <td>5</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>F S</td>\n",
              "      <td>Newcastle United</td>\n",
              "      <td>5</td>\n",
              "      <td>7.14016330987215</td>\n",
              "      <td>7.621083067730069</td>\n",
              "      <td>0.8389131352305412</td>\n",
              "      <td>7</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10</th>\n",
              "      <td>4456</td>\n",
              "      <td>Chris Wood</td>\n",
              "      <td>18</td>\n",
              "      <td>706</td>\n",
              "      <td>7</td>\n",
              "      <td>5.063202641904354</td>\n",
              "      <td>1</td>\n",
              "      <td>1.0724100936204195</td>\n",
              "      <td>19</td>\n",
              "      <td>12</td>\n",
              "      <td>...</td>\n",
              "      <td>12</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>F S</td>\n",
              "      <td>Nottingham Forest</td>\n",
              "      <td>7</td>\n",
              "      <td>5.063202641904354</td>\n",
              "      <td>5.99279666878283</td>\n",
              "      <td>0.21865982562303543</td>\n",
              "      <td>7</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>11</th>\n",
              "      <td>6552</td>\n",
              "      <td>Bryan Mbeumo</td>\n",
              "      <td>15</td>\n",
              "      <td>1289</td>\n",
              "      <td>7</td>\n",
              "      <td>7.574615128338337</td>\n",
              "      <td>3</td>\n",
              "      <td>2.8948017433285713</td>\n",
              "      <td>41</td>\n",
              "      <td>22</td>\n",
              "      <td>...</td>\n",
              "      <td>22</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>F</td>\n",
              "      <td>Brentford</td>\n",
              "      <td>4</td>\n",
              "      <td>5.291108556091785</td>\n",
              "      <td>9.410030841827393</td>\n",
              "      <td>3.1749180927872658</td>\n",
              "      <td>7</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>12</th>\n",
              "      <td>8272</td>\n",
              "      <td>João Pedro</td>\n",
              "      <td>20</td>\n",
              "      <td>1120</td>\n",
              "      <td>7</td>\n",
              "      <td>6.923017270863056</td>\n",
              "      <td>2</td>\n",
              "      <td>2.871623874641955</td>\n",
              "      <td>40</td>\n",
              "      <td>18</td>\n",
              "      <td>...</td>\n",
              "      <td>18</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>F M S</td>\n",
              "      <td>Brighton</td>\n",
              "      <td>3</td>\n",
              "      <td>3.8784161042422056</td>\n",
              "      <td>9.901699712499976</td>\n",
              "      <td>4.285971317440271</td>\n",
              "      <td>7</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>13</th>\n",
              "      <td>10048</td>\n",
              "      <td>Nicolas Jackson</td>\n",
              "      <td>19</td>\n",
              "      <td>1458</td>\n",
              "      <td>7</td>\n",
              "      <td>11.180736033245921</td>\n",
              "      <td>2</td>\n",
              "      <td>2.957573415711522</td>\n",
              "      <td>45</td>\n",
              "      <td>16</td>\n",
              "      <td>...</td>\n",
              "      <td>16</td>\n",
              "      <td>8</td>\n",
              "      <td>0</td>\n",
              "      <td>F M S</td>\n",
              "      <td>Chelsea</td>\n",
              "      <td>7</td>\n",
              "      <td>11.180736033245921</td>\n",
              "      <td>14.183117497712374</td>\n",
              "      <td>2.219442430883646</td>\n",
              "      <td>7</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>14</th>\n",
              "      <td>1726</td>\n",
              "      <td>Abdoulaye Doucouré</td>\n",
              "      <td>17</td>\n",
              "      <td>1460</td>\n",
              "      <td>6</td>\n",
              "      <td>7.047202989459038</td>\n",
              "      <td>0</td>\n",
              "      <td>2.036896336823702</td>\n",
              "      <td>28</td>\n",
              "      <td>22</td>\n",
              "      <td>...</td>\n",
              "      <td>22</td>\n",
              "      <td>4</td>\n",
              "      <td>0</td>\n",
              "      <td>M</td>\n",
              "      <td>Everton</td>\n",
              "      <td>6</td>\n",
              "      <td>7.047202989459038</td>\n",
              "      <td>9.405437964946032</td>\n",
              "      <td>3.6784230321645737</td>\n",
              "      <td>6</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>15</th>\n",
              "      <td>3697</td>\n",
              "      <td>Odsonne Edouard</td>\n",
              "      <td>15</td>\n",
              "      <td>1270</td>\n",
              "      <td>6</td>\n",
              "      <td>6.131767854094505</td>\n",
              "      <td>0</td>\n",
              "      <td>0.864791008643806</td>\n",
              "      <td>39</td>\n",
              "      <td>13</td>\n",
              "      <td>...</td>\n",
              "      <td>13</td>\n",
              "      <td>3</td>\n",
              "      <td>0</td>\n",
              "      <td>F</td>\n",
              "      <td>Crystal Palace</td>\n",
              "      <td>6</td>\n",
              "      <td>6.131767854094505</td>\n",
              "      <td>6.33973165974021</td>\n",
              "      <td>1.469034243375063</td>\n",
              "      <td>6</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>16</th>\n",
              "      <td>5221</td>\n",
              "      <td>Leon Bailey</td>\n",
              "      <td>18</td>\n",
              "      <td>872</td>\n",
              "      <td>6</td>\n",
              "      <td>3.2635028287768364</td>\n",
              "      <td>5</td>\n",
              "      <td>4.156177133321762</td>\n",
              "      <td>27</td>\n",
              "      <td>19</td>\n",
              "      <td>...</td>\n",
              "      <td>19</td>\n",
              "      <td>3</td>\n",
              "      <td>0</td>\n",
              "      <td>M S</td>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>6</td>\n",
              "      <td>3.2635028287768364</td>\n",
              "      <td>8.750119514763355</td>\n",
              "      <td>2.968475740402937</td>\n",
              "      <td>6</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>17</th>\n",
              "      <td>6026</td>\n",
              "      <td>Richarlison</td>\n",
              "      <td>17</td>\n",
              "      <td>946</td>\n",
              "      <td>6</td>\n",
              "      <td>6.742483241483569</td>\n",
              "      <td>3</td>\n",
              "      <td>1.0897221639752388</td>\n",
              "      <td>39</td>\n",
              "      <td>9</td>\n",
              "      <td>...</td>\n",
              "      <td>9</td>\n",
              "      <td>3</td>\n",
              "      <td>0</td>\n",
              "      <td>F M S</td>\n",
              "      <td>Tottenham</td>\n",
              "      <td>6</td>\n",
              "      <td>6.742483241483569</td>\n",
              "      <td>8.496763460338116</td>\n",
              "      <td>1.4466600809246302</td>\n",
              "      <td>6</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>18</th>\n",
              "      <td>6122</td>\n",
              "      <td>Douglas Luiz</td>\n",
              "      <td>19</td>\n",
              "      <td>1678</td>\n",
              "      <td>6</td>\n",
              "      <td>5.316661614924669</td>\n",
              "      <td>3</td>\n",
              "      <td>2.5393043514341116</td>\n",
              "      <td>36</td>\n",
              "      <td>27</td>\n",
              "      <td>...</td>\n",
              "      <td>27</td>\n",
              "      <td>5</td>\n",
              "      <td>0</td>\n",
              "      <td>M</td>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>2</td>\n",
              "      <td>2.2719862572848797</td>\n",
              "      <td>10.123004015535116</td>\n",
              "      <td>8.010031690821052</td>\n",
              "      <td>6</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>19</th>\n",
              "      <td>7080</td>\n",
              "      <td>Matheus Cunha</td>\n",
              "      <td>20</td>\n",
              "      <td>1718</td>\n",
              "      <td>6</td>\n",
              "      <td>5.866328570060432</td>\n",
              "      <td>5</td>\n",
              "      <td>3.1632621362805367</td>\n",
              "      <td>47</td>\n",
              "      <td>21</td>\n",
              "      <td>...</td>\n",
              "      <td>21</td>\n",
              "      <td>3</td>\n",
              "      <td>0</td>\n",
              "      <td>F M</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>6</td>\n",
              "      <td>5.866328570060432</td>\n",
              "      <td>8.991567961871624</td>\n",
              "      <td>1.5023581953719258</td>\n",
              "      <td>6</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>20 rows × 49 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-8979c1d2-6c1b-4bc0-9ee5-0ff65ed355b6')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-8979c1d2-6c1b-4bc0-9ee5-0ff65ed355b6 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-8979c1d2-6c1b-4bc0-9ee5-0ff65ed355b6');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-aed2e5f8-6dbe-482e-9c86-552a6f28c421\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-aed2e5f8-6dbe-482e-9c86-552a6f28c421')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-aed2e5f8-6dbe-482e-9c86-552a6f28c421 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 61
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "EPL_player_df['assists'] = EPL_player_df['assists_1wks_x'].astype(int)\n",
        "top25assists = EPL_player_df.nlargest(20, 'assists')\n",
        "top25assists"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 969
        },
        "id": "QhNKarUM-fT7",
        "outputId": "ad30a2b3-c024-49e7-b0f6-7c9612a4d7df"
      },
      "execution_count": 62,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "        id        player_name games_x time_x goals_1wks_x           xG_1wks_x  \\\n",
              "0     1250      Mohamed Salah      20   1768           14  13.610325902700424   \n",
              "7     8865      Ollie Watkins      20   1779            9  10.453795365989208   \n",
              "158   6382         Pedro Neto      11    899            1   1.971568487584591   \n",
              "251    652    Kieran Trippier      18   1589            0  0.2488715760409832   \n",
              "20    7322        Bukayo Saka      19   1682            6   7.936890881508589   \n",
              "29    6055         Phil Foden      19   1521            5   4.718718251213431   \n",
              "36   10720       Darwin Núñez      19   1118            5  11.132159125991166   \n",
              "48    9524     Anthony Elanga      20   1353            4  3.1140028964728117   \n",
              "50     239        Pascal Groß      18   1550            3  3.2966111712157726   \n",
              "54     843  James Ward-Prowse      19   1698            3   2.980880512855947   \n",
              "329   6912        Pedro Porro      19   1710            0  1.9460078608244658   \n",
              "2      453      Son Heung-Min      20   1739           12    7.47495724260807   \n",
              "16    5221        Leon Bailey      18    872            6  3.2635028287768364   \n",
              "19    7080      Matheus Cunha      20   1718            6   5.866328570060432   \n",
              "21    8150     Anthony Gordon      19   1615            6    5.91298695653677   \n",
              "23   10846     Julián Álvarez      19   1621            6   7.060728475451469   \n",
              "61    6818     James Maddison      11    909            3   2.944616189226508   \n",
              "83     672        Jordan Ayew      19   1557            2   3.114279456436634   \n",
              "100   7365      Lucas Paquetá      18   1538            2   2.485358458943665   \n",
              "111   8981        Jéremy Doku      11    721            2  1.2312334701418877   \n",
              "\n",
              "    assists_1wks_x           xA_1wks_x shots_1wks_x key_passes_1wks_x  ...  \\\n",
              "0                8    9.57847910746932           65                47  ...   \n",
              "7                8   4.449759863317013           55                30  ...   \n",
              "158              7  3.4589802250266075           19                24  ...   \n",
              "251              7   6.974743170663714            6                53  ...   \n",
              "20               6   6.405137315392494           49                48  ...   \n",
              "29               6   4.824954718351364           43                38  ...   \n",
              "36               6  3.8916123947128654           58                19  ...   \n",
              "48               6  4.6477286368608475           35                19  ...   \n",
              "50               6   4.212384800426662           35                50  ...   \n",
              "54               6   4.275119975209236           24                36  ...   \n",
              "329              6   5.015945693477988           33                35  ...   \n",
              "2                5   6.843130592256784           52                37  ...   \n",
              "16               5   4.156177133321762           27                19  ...   \n",
              "19               5  3.1632621362805367           47                21  ...   \n",
              "21               5    4.88668311573565           41                21  ...   \n",
              "23               5   4.053520877845585           50                43  ...   \n",
              "61               5  3.4641558043658733           27                31  ...   \n",
              "83               5   3.983744007535279           31                16  ...   \n",
              "100              5   4.096440831199288           21                26  ...   \n",
              "111              5   3.068725273013115           22                19  ...   \n",
              "\n",
              "    yellow_cards red_cards position_y             team_title_y npg_1wks_y  \\\n",
              "0              2         0          F                Liverpool         10   \n",
              "7              3         0          F              Aston Villa          9   \n",
              "158            3         0      F M S  Wolverhampton Wanderers          1   \n",
              "251            5         0          D         Newcastle United          0   \n",
              "20             2         0          F                  Arsenal          4   \n",
              "29             1         0      F M S          Manchester City          5   \n",
              "36             4         0        F S                Liverpool          5   \n",
              "48             1         0      F M S        Nottingham Forest          4   \n",
              "50             3         0      D M S                 Brighton          3   \n",
              "54             3         0          M                 West Ham          3   \n",
              "329            3         0          D                Tottenham          0   \n",
              "2              1         0        F M                Tottenham         11   \n",
              "16             3         0        M S              Aston Villa          6   \n",
              "19             3         0        F M  Wolverhampton Wanderers          6   \n",
              "21             7         0        F S         Newcastle United          6   \n",
              "23             2         0        F M          Manchester City          5   \n",
              "61             2         0          M                Tottenham          3   \n",
              "83             4         1      F M S           Crystal Palace          2   \n",
              "100            6         0        F M                 West Ham          1   \n",
              "111            2         0      D M S          Manchester City          2   \n",
              "\n",
              "            npxG_1wks_y             xGChain           xGBuildup goals assists  \n",
              "0     9.043387070298195   19.68034301698208   5.720102474093437    14       8  \n",
              "7    10.453795365989208  15.558012336492538  2.1048314729705453     9       8  \n",
              "158   1.971568487584591  4.9082733280956745  1.1124582178890705     1       7  \n",
              "251  0.2488715760409832  12.362247381359339   9.310317102819681     0       7  \n",
              "20   6.4145532585680485   16.48086705803871   7.043163921684027     6       6  \n",
              "29    4.718718251213431  14.404275462031364    8.72297485359013     5       6  \n",
              "36   11.132159125991166  14.982022352516651    2.60064285248518     5       6  \n",
              "48   3.1140028964728117   9.760287281125784  2.8164664208889008     4       6  \n",
              "50   3.2966111712157726  12.585024908185005   9.521034626290202     3       6  \n",
              "54    2.980880512855947   8.146866022609174     5.2532610129565     3       6  \n",
              "329  1.9460078608244658   12.48712913878262    9.68901078402996     0       6  \n",
              "2     6.713788405060768  16.887082293629646   6.178518561646342    12       5  \n",
              "16   3.2635028287768364   8.750119514763355   2.968475740402937     6       5  \n",
              "19    5.866328570060432   8.991567961871624  1.5023581953719258     6       5  \n",
              "21     5.91298695653677  14.979310542345047   6.110510502010584     6       5  \n",
              "23    6.299559578299522  15.726500384509563   8.395436748862267     6       5  \n",
              "61    2.944616189226508    9.78583274781704   5.331316661089659     3       5  \n",
              "83    3.114279456436634   7.141842287033796    3.52212190721184     2       5  \n",
              "100  1.7241896213963628   7.715505393221974   3.421996710821986     2       5  \n",
              "111  1.2312334701418877   5.178026407957077  2.0440204814076424     2       5  \n",
              "\n",
              "[20 rows x 50 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-2f1189b8-7eca-4d63-ba68-79dc3b06eba4\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>player_name</th>\n",
              "      <th>games_x</th>\n",
              "      <th>time_x</th>\n",
              "      <th>goals_1wks_x</th>\n",
              "      <th>xG_1wks_x</th>\n",
              "      <th>assists_1wks_x</th>\n",
              "      <th>xA_1wks_x</th>\n",
              "      <th>shots_1wks_x</th>\n",
              "      <th>key_passes_1wks_x</th>\n",
              "      <th>...</th>\n",
              "      <th>yellow_cards</th>\n",
              "      <th>red_cards</th>\n",
              "      <th>position_y</th>\n",
              "      <th>team_title_y</th>\n",
              "      <th>npg_1wks_y</th>\n",
              "      <th>npxG_1wks_y</th>\n",
              "      <th>xGChain</th>\n",
              "      <th>xGBuildup</th>\n",
              "      <th>goals</th>\n",
              "      <th>assists</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>1250</td>\n",
              "      <td>Mohamed Salah</td>\n",
              "      <td>20</td>\n",
              "      <td>1768</td>\n",
              "      <td>14</td>\n",
              "      <td>13.610325902700424</td>\n",
              "      <td>8</td>\n",
              "      <td>9.57847910746932</td>\n",
              "      <td>65</td>\n",
              "      <td>47</td>\n",
              "      <td>...</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>F</td>\n",
              "      <td>Liverpool</td>\n",
              "      <td>10</td>\n",
              "      <td>9.043387070298195</td>\n",
              "      <td>19.68034301698208</td>\n",
              "      <td>5.720102474093437</td>\n",
              "      <td>14</td>\n",
              "      <td>8</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>8865</td>\n",
              "      <td>Ollie Watkins</td>\n",
              "      <td>20</td>\n",
              "      <td>1779</td>\n",
              "      <td>9</td>\n",
              "      <td>10.453795365989208</td>\n",
              "      <td>8</td>\n",
              "      <td>4.449759863317013</td>\n",
              "      <td>55</td>\n",
              "      <td>30</td>\n",
              "      <td>...</td>\n",
              "      <td>3</td>\n",
              "      <td>0</td>\n",
              "      <td>F</td>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>9</td>\n",
              "      <td>10.453795365989208</td>\n",
              "      <td>15.558012336492538</td>\n",
              "      <td>2.1048314729705453</td>\n",
              "      <td>9</td>\n",
              "      <td>8</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>158</th>\n",
              "      <td>6382</td>\n",
              "      <td>Pedro Neto</td>\n",
              "      <td>11</td>\n",
              "      <td>899</td>\n",
              "      <td>1</td>\n",
              "      <td>1.971568487584591</td>\n",
              "      <td>7</td>\n",
              "      <td>3.4589802250266075</td>\n",
              "      <td>19</td>\n",
              "      <td>24</td>\n",
              "      <td>...</td>\n",
              "      <td>3</td>\n",
              "      <td>0</td>\n",
              "      <td>F M S</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>1</td>\n",
              "      <td>1.971568487584591</td>\n",
              "      <td>4.9082733280956745</td>\n",
              "      <td>1.1124582178890705</td>\n",
              "      <td>1</td>\n",
              "      <td>7</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>251</th>\n",
              "      <td>652</td>\n",
              "      <td>Kieran Trippier</td>\n",
              "      <td>18</td>\n",
              "      <td>1589</td>\n",
              "      <td>0</td>\n",
              "      <td>0.2488715760409832</td>\n",
              "      <td>7</td>\n",
              "      <td>6.974743170663714</td>\n",
              "      <td>6</td>\n",
              "      <td>53</td>\n",
              "      <td>...</td>\n",
              "      <td>5</td>\n",
              "      <td>0</td>\n",
              "      <td>D</td>\n",
              "      <td>Newcastle United</td>\n",
              "      <td>0</td>\n",
              "      <td>0.2488715760409832</td>\n",
              "      <td>12.362247381359339</td>\n",
              "      <td>9.310317102819681</td>\n",
              "      <td>0</td>\n",
              "      <td>7</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>20</th>\n",
              "      <td>7322</td>\n",
              "      <td>Bukayo Saka</td>\n",
              "      <td>19</td>\n",
              "      <td>1682</td>\n",
              "      <td>6</td>\n",
              "      <td>7.936890881508589</td>\n",
              "      <td>6</td>\n",
              "      <td>6.405137315392494</td>\n",
              "      <td>49</td>\n",
              "      <td>48</td>\n",
              "      <td>...</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>F</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>4</td>\n",
              "      <td>6.4145532585680485</td>\n",
              "      <td>16.48086705803871</td>\n",
              "      <td>7.043163921684027</td>\n",
              "      <td>6</td>\n",
              "      <td>6</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>29</th>\n",
              "      <td>6055</td>\n",
              "      <td>Phil Foden</td>\n",
              "      <td>19</td>\n",
              "      <td>1521</td>\n",
              "      <td>5</td>\n",
              "      <td>4.718718251213431</td>\n",
              "      <td>6</td>\n",
              "      <td>4.824954718351364</td>\n",
              "      <td>43</td>\n",
              "      <td>38</td>\n",
              "      <td>...</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>F M S</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>5</td>\n",
              "      <td>4.718718251213431</td>\n",
              "      <td>14.404275462031364</td>\n",
              "      <td>8.72297485359013</td>\n",
              "      <td>5</td>\n",
              "      <td>6</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>36</th>\n",
              "      <td>10720</td>\n",
              "      <td>Darwin Núñez</td>\n",
              "      <td>19</td>\n",
              "      <td>1118</td>\n",
              "      <td>5</td>\n",
              "      <td>11.132159125991166</td>\n",
              "      <td>6</td>\n",
              "      <td>3.8916123947128654</td>\n",
              "      <td>58</td>\n",
              "      <td>19</td>\n",
              "      <td>...</td>\n",
              "      <td>4</td>\n",
              "      <td>0</td>\n",
              "      <td>F S</td>\n",
              "      <td>Liverpool</td>\n",
              "      <td>5</td>\n",
              "      <td>11.132159125991166</td>\n",
              "      <td>14.982022352516651</td>\n",
              "      <td>2.60064285248518</td>\n",
              "      <td>5</td>\n",
              "      <td>6</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>48</th>\n",
              "      <td>9524</td>\n",
              "      <td>Anthony Elanga</td>\n",
              "      <td>20</td>\n",
              "      <td>1353</td>\n",
              "      <td>4</td>\n",
              "      <td>3.1140028964728117</td>\n",
              "      <td>6</td>\n",
              "      <td>4.6477286368608475</td>\n",
              "      <td>35</td>\n",
              "      <td>19</td>\n",
              "      <td>...</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>F M S</td>\n",
              "      <td>Nottingham Forest</td>\n",
              "      <td>4</td>\n",
              "      <td>3.1140028964728117</td>\n",
              "      <td>9.760287281125784</td>\n",
              "      <td>2.8164664208889008</td>\n",
              "      <td>4</td>\n",
              "      <td>6</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>50</th>\n",
              "      <td>239</td>\n",
              "      <td>Pascal Groß</td>\n",
              "      <td>18</td>\n",
              "      <td>1550</td>\n",
              "      <td>3</td>\n",
              "      <td>3.2966111712157726</td>\n",
              "      <td>6</td>\n",
              "      <td>4.212384800426662</td>\n",
              "      <td>35</td>\n",
              "      <td>50</td>\n",
              "      <td>...</td>\n",
              "      <td>3</td>\n",
              "      <td>0</td>\n",
              "      <td>D M S</td>\n",
              "      <td>Brighton</td>\n",
              "      <td>3</td>\n",
              "      <td>3.2966111712157726</td>\n",
              "      <td>12.585024908185005</td>\n",
              "      <td>9.521034626290202</td>\n",
              "      <td>3</td>\n",
              "      <td>6</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>54</th>\n",
              "      <td>843</td>\n",
              "      <td>James Ward-Prowse</td>\n",
              "      <td>19</td>\n",
              "      <td>1698</td>\n",
              "      <td>3</td>\n",
              "      <td>2.980880512855947</td>\n",
              "      <td>6</td>\n",
              "      <td>4.275119975209236</td>\n",
              "      <td>24</td>\n",
              "      <td>36</td>\n",
              "      <td>...</td>\n",
              "      <td>3</td>\n",
              "      <td>0</td>\n",
              "      <td>M</td>\n",
              "      <td>West Ham</td>\n",
              "      <td>3</td>\n",
              "      <td>2.980880512855947</td>\n",
              "      <td>8.146866022609174</td>\n",
              "      <td>5.2532610129565</td>\n",
              "      <td>3</td>\n",
              "      <td>6</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>329</th>\n",
              "      <td>6912</td>\n",
              "      <td>Pedro Porro</td>\n",
              "      <td>19</td>\n",
              "      <td>1710</td>\n",
              "      <td>0</td>\n",
              "      <td>1.9460078608244658</td>\n",
              "      <td>6</td>\n",
              "      <td>5.015945693477988</td>\n",
              "      <td>33</td>\n",
              "      <td>35</td>\n",
              "      <td>...</td>\n",
              "      <td>3</td>\n",
              "      <td>0</td>\n",
              "      <td>D</td>\n",
              "      <td>Tottenham</td>\n",
              "      <td>0</td>\n",
              "      <td>1.9460078608244658</td>\n",
              "      <td>12.48712913878262</td>\n",
              "      <td>9.68901078402996</td>\n",
              "      <td>0</td>\n",
              "      <td>6</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>453</td>\n",
              "      <td>Son Heung-Min</td>\n",
              "      <td>20</td>\n",
              "      <td>1739</td>\n",
              "      <td>12</td>\n",
              "      <td>7.47495724260807</td>\n",
              "      <td>5</td>\n",
              "      <td>6.843130592256784</td>\n",
              "      <td>52</td>\n",
              "      <td>37</td>\n",
              "      <td>...</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>F M</td>\n",
              "      <td>Tottenham</td>\n",
              "      <td>11</td>\n",
              "      <td>6.713788405060768</td>\n",
              "      <td>16.887082293629646</td>\n",
              "      <td>6.178518561646342</td>\n",
              "      <td>12</td>\n",
              "      <td>5</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>16</th>\n",
              "      <td>5221</td>\n",
              "      <td>Leon Bailey</td>\n",
              "      <td>18</td>\n",
              "      <td>872</td>\n",
              "      <td>6</td>\n",
              "      <td>3.2635028287768364</td>\n",
              "      <td>5</td>\n",
              "      <td>4.156177133321762</td>\n",
              "      <td>27</td>\n",
              "      <td>19</td>\n",
              "      <td>...</td>\n",
              "      <td>3</td>\n",
              "      <td>0</td>\n",
              "      <td>M S</td>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>6</td>\n",
              "      <td>3.2635028287768364</td>\n",
              "      <td>8.750119514763355</td>\n",
              "      <td>2.968475740402937</td>\n",
              "      <td>6</td>\n",
              "      <td>5</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>19</th>\n",
              "      <td>7080</td>\n",
              "      <td>Matheus Cunha</td>\n",
              "      <td>20</td>\n",
              "      <td>1718</td>\n",
              "      <td>6</td>\n",
              "      <td>5.866328570060432</td>\n",
              "      <td>5</td>\n",
              "      <td>3.1632621362805367</td>\n",
              "      <td>47</td>\n",
              "      <td>21</td>\n",
              "      <td>...</td>\n",
              "      <td>3</td>\n",
              "      <td>0</td>\n",
              "      <td>F M</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>6</td>\n",
              "      <td>5.866328570060432</td>\n",
              "      <td>8.991567961871624</td>\n",
              "      <td>1.5023581953719258</td>\n",
              "      <td>6</td>\n",
              "      <td>5</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>21</th>\n",
              "      <td>8150</td>\n",
              "      <td>Anthony Gordon</td>\n",
              "      <td>19</td>\n",
              "      <td>1615</td>\n",
              "      <td>6</td>\n",
              "      <td>5.91298695653677</td>\n",
              "      <td>5</td>\n",
              "      <td>4.88668311573565</td>\n",
              "      <td>41</td>\n",
              "      <td>21</td>\n",
              "      <td>...</td>\n",
              "      <td>7</td>\n",
              "      <td>0</td>\n",
              "      <td>F S</td>\n",
              "      <td>Newcastle United</td>\n",
              "      <td>6</td>\n",
              "      <td>5.91298695653677</td>\n",
              "      <td>14.979310542345047</td>\n",
              "      <td>6.110510502010584</td>\n",
              "      <td>6</td>\n",
              "      <td>5</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>23</th>\n",
              "      <td>10846</td>\n",
              "      <td>Julián Álvarez</td>\n",
              "      <td>19</td>\n",
              "      <td>1621</td>\n",
              "      <td>6</td>\n",
              "      <td>7.060728475451469</td>\n",
              "      <td>5</td>\n",
              "      <td>4.053520877845585</td>\n",
              "      <td>50</td>\n",
              "      <td>43</td>\n",
              "      <td>...</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>F M</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>5</td>\n",
              "      <td>6.299559578299522</td>\n",
              "      <td>15.726500384509563</td>\n",
              "      <td>8.395436748862267</td>\n",
              "      <td>6</td>\n",
              "      <td>5</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>61</th>\n",
              "      <td>6818</td>\n",
              "      <td>James Maddison</td>\n",
              "      <td>11</td>\n",
              "      <td>909</td>\n",
              "      <td>3</td>\n",
              "      <td>2.944616189226508</td>\n",
              "      <td>5</td>\n",
              "      <td>3.4641558043658733</td>\n",
              "      <td>27</td>\n",
              "      <td>31</td>\n",
              "      <td>...</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>M</td>\n",
              "      <td>Tottenham</td>\n",
              "      <td>3</td>\n",
              "      <td>2.944616189226508</td>\n",
              "      <td>9.78583274781704</td>\n",
              "      <td>5.331316661089659</td>\n",
              "      <td>3</td>\n",
              "      <td>5</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>83</th>\n",
              "      <td>672</td>\n",
              "      <td>Jordan Ayew</td>\n",
              "      <td>19</td>\n",
              "      <td>1557</td>\n",
              "      <td>2</td>\n",
              "      <td>3.114279456436634</td>\n",
              "      <td>5</td>\n",
              "      <td>3.983744007535279</td>\n",
              "      <td>31</td>\n",
              "      <td>16</td>\n",
              "      <td>...</td>\n",
              "      <td>4</td>\n",
              "      <td>1</td>\n",
              "      <td>F M S</td>\n",
              "      <td>Crystal Palace</td>\n",
              "      <td>2</td>\n",
              "      <td>3.114279456436634</td>\n",
              "      <td>7.141842287033796</td>\n",
              "      <td>3.52212190721184</td>\n",
              "      <td>2</td>\n",
              "      <td>5</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>100</th>\n",
              "      <td>7365</td>\n",
              "      <td>Lucas Paquetá</td>\n",
              "      <td>18</td>\n",
              "      <td>1538</td>\n",
              "      <td>2</td>\n",
              "      <td>2.485358458943665</td>\n",
              "      <td>5</td>\n",
              "      <td>4.096440831199288</td>\n",
              "      <td>21</td>\n",
              "      <td>26</td>\n",
              "      <td>...</td>\n",
              "      <td>6</td>\n",
              "      <td>0</td>\n",
              "      <td>F M</td>\n",
              "      <td>West Ham</td>\n",
              "      <td>1</td>\n",
              "      <td>1.7241896213963628</td>\n",
              "      <td>7.715505393221974</td>\n",
              "      <td>3.421996710821986</td>\n",
              "      <td>2</td>\n",
              "      <td>5</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>111</th>\n",
              "      <td>8981</td>\n",
              "      <td>Jéremy Doku</td>\n",
              "      <td>11</td>\n",
              "      <td>721</td>\n",
              "      <td>2</td>\n",
              "      <td>1.2312334701418877</td>\n",
              "      <td>5</td>\n",
              "      <td>3.068725273013115</td>\n",
              "      <td>22</td>\n",
              "      <td>19</td>\n",
              "      <td>...</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>D M S</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>2</td>\n",
              "      <td>1.2312334701418877</td>\n",
              "      <td>5.178026407957077</td>\n",
              "      <td>2.0440204814076424</td>\n",
              "      <td>2</td>\n",
              "      <td>5</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>20 rows × 50 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-2f1189b8-7eca-4d63-ba68-79dc3b06eba4')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-2f1189b8-7eca-4d63-ba68-79dc3b06eba4 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-2f1189b8-7eca-4d63-ba68-79dc3b06eba4');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-13001b8d-839a-4cd6-88a5-9e5b17ccdaf2\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-13001b8d-839a-4cd6-88a5-9e5b17ccdaf2')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-13001b8d-839a-4cd6-88a5-9e5b17ccdaf2 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 62
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import pandas as pd\n",
        "import plotly.express as px\n",
        "import plotly.graph_objects as go"
      ],
      "metadata": {
        "id": "t81EQEbg_2jQ"
      },
      "execution_count": 63,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "fig3= go.Figure()\n",
        "fig3.add_trace(go.Scatter(x = top25goals[\"goals\"],\n",
        "                          y = top25goals[\"player_name\"],\n",
        "                          mode = 'markers',\n",
        "                          marker_color = 'darkblue',\n",
        "                          marker_size = 10,\n",
        "                          name = 'goals'))\n",
        "fig3.add_trace(go.Scatter(x = top25goals[\"xG_1wks_x\"],\n",
        "                          y = top25goals[\"player_name\"],\n",
        "                          mode = 'markers',\n",
        "                          marker_color = 'darkorange',\n",
        "                          marker_size = 10,\n",
        "                          name = 'xG'))\n",
        "for i in range(0, len(top25goals)):\n",
        "               fig3.add_shape(type='line',\n",
        "                              x0 = top25goals[\"goals\"][i],\n",
        "                              y0 = i,\n",
        "                              x1 = top25goals[\"xG_1wks_x\"][i],\n",
        "                              y1 = i,\n",
        "                              line=dict(color='crimson', width = 3))\n",
        "fig3.update_layout(title_text =\n",
        "                    \"Goals vs xG\",\n",
        "                    title_font_size = 30)\n",
        "fig3.update_xaxes(range=[0, 30])\n",
        "fig3.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 542
        },
        "id": "pCjmRmyw-6sd",
        "outputId": "0be2fc41-57da-4a34-e290-dbeb71861ec8"
      },
      "execution_count": 64,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<html>\n",
              "<head><meta charset=\"utf-8\" /></head>\n",
              "<body>\n",
              "    <div>            <script src=\"https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.5/MathJax.js?config=TeX-AMS-MML_SVG\"></script><script type=\"text/javascript\">if (window.MathJax && window.MathJax.Hub && window.MathJax.Hub.Config) {window.MathJax.Hub.Config({SVG: {font: \"STIX-Web\"}});}</script>                <script type=\"text/javascript\">window.PlotlyConfig = {MathJaxConfig: 'local'};</script>\n",
              "        <script charset=\"utf-8\" src=\"https://cdn.plot.ly/plotly-2.24.1.min.js\"></script>                <div id=\"a6c1d88a-99d9-4f08-9119-43a86a75df26\" class=\"plotly-graph-div\" style=\"height:525px; width:100%;\"></div>            <script type=\"text/javascript\">                                    window.PLOTLYENV=window.PLOTLYENV || {};                                    if (document.getElementById(\"a6c1d88a-99d9-4f08-9119-43a86a75df26\")) {                    Plotly.newPlot(                        \"a6c1d88a-99d9-4f08-9119-43a86a75df26\",                        [{\"marker\":{\"color\":\"darkblue\",\"size\":10},\"mode\":\"markers\",\"name\":\"goals\",\"x\":[14,14,12,12,11,10,9,9,8,7,7,7,7,7,6,6,6,6,6,6],\"y\":[\"Mohamed Salah\",\"Erling Haaland\",\"Son Heung-Min\",\"Dominic Solanke\",\"Jarrod Bowen\",\"Hee-Chan Hwang\",\"Alexander Isak\",\"Ollie Watkins\",\"Cole Palmer\",\"Callum Wilson\",\"Chris Wood\",\"Bryan Mbeumo\",\"Jo\\u00e3o Pedro\",\"Nicolas Jackson\",\"Abdoulaye Doucour\\u00e9\",\"Odsonne Edouard\",\"Leon Bailey\",\"Richarlison\",\"Douglas Luiz\",\"Matheus Cunha\"],\"type\":\"scatter\"},{\"marker\":{\"color\":\"darkorange\",\"size\":10},\"mode\":\"markers\",\"name\":\"xG\",\"x\":[\"13.610325902700424\",\"16.727499932050705\",\"7.47495724260807\",\"12.378114826977253\",\"8.29572493582964\",\"6.790349626913667\",\"9.814618289470673\",\"10.453795365989208\",\"6.911410814151168\",\"8.662500880658627\",\"5.063202641904354\",\"7.574615128338337\",\"6.923017270863056\",\"11.180736033245921\",\"7.047202989459038\",\"6.131767854094505\",\"3.2635028287768364\",\"6.742483241483569\",\"5.316661614924669\",\"5.866328570060432\"],\"y\":[\"Mohamed Salah\",\"Erling Haaland\",\"Son Heung-Min\",\"Dominic Solanke\",\"Jarrod Bowen\",\"Hee-Chan Hwang\",\"Alexander Isak\",\"Ollie Watkins\",\"Cole Palmer\",\"Callum Wilson\",\"Chris Wood\",\"Bryan Mbeumo\",\"Jo\\u00e3o Pedro\",\"Nicolas Jackson\",\"Abdoulaye Doucour\\u00e9\",\"Odsonne Edouard\",\"Leon Bailey\",\"Richarlison\",\"Douglas Luiz\",\"Matheus Cunha\"],\"type\":\"scatter\"}],                        {\"template\":{\"data\":{\"histogram2dcontour\":[{\"type\":\"histogram2dcontour\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"choropleth\":[{\"type\":\"choropleth\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"histogram2d\":[{\"type\":\"histogram2d\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"heatmap\":[{\"type\":\"heatmap\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"heatmapgl\":[{\"type\":\"heatmapgl\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"contourcarpet\":[{\"type\":\"contourcarpet\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"contour\":[{\"type\":\"contour\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"surface\":[{\"type\":\"surface\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"mesh3d\":[{\"type\":\"mesh3d\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"scatter\":[{\"fillpattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2},\"type\":\"scatter\"}],\"parcoords\":[{\"type\":\"parcoords\",\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterpolargl\":[{\"type\":\"scatterpolargl\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"bar\":[{\"error_x\":{\"color\":\"#2a3f5f\"},\"error_y\":{\"color\":\"#2a3f5f\"},\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"bar\"}],\"scattergeo\":[{\"type\":\"scattergeo\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterpolar\":[{\"type\":\"scatterpolar\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"histogram\":[{\"marker\":{\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"histogram\"}],\"scattergl\":[{\"type\":\"scattergl\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatter3d\":[{\"type\":\"scatter3d\",\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scattermapbox\":[{\"type\":\"scattermapbox\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterternary\":[{\"type\":\"scatterternary\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scattercarpet\":[{\"type\":\"scattercarpet\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"carpet\":[{\"aaxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"baxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"type\":\"carpet\"}],\"table\":[{\"cells\":{\"fill\":{\"color\":\"#EBF0F8\"},\"line\":{\"color\":\"white\"}},\"header\":{\"fill\":{\"color\":\"#C8D4E3\"},\"line\":{\"color\":\"white\"}},\"type\":\"table\"}],\"barpolar\":[{\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"barpolar\"}],\"pie\":[{\"automargin\":true,\"type\":\"pie\"}]},\"layout\":{\"autotypenumbers\":\"strict\",\"colorway\":[\"#636efa\",\"#EF553B\",\"#00cc96\",\"#ab63fa\",\"#FFA15A\",\"#19d3f3\",\"#FF6692\",\"#B6E880\",\"#FF97FF\",\"#FECB52\"],\"font\":{\"color\":\"#2a3f5f\"},\"hovermode\":\"closest\",\"hoverlabel\":{\"align\":\"left\"},\"paper_bgcolor\":\"white\",\"plot_bgcolor\":\"#E5ECF6\",\"polar\":{\"bgcolor\":\"#E5ECF6\",\"angularaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"radialaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"ternary\":{\"bgcolor\":\"#E5ECF6\",\"aaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"baxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"caxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"coloraxis\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"colorscale\":{\"sequential\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"sequentialminus\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"diverging\":[[0,\"#8e0152\"],[0.1,\"#c51b7d\"],[0.2,\"#de77ae\"],[0.3,\"#f1b6da\"],[0.4,\"#fde0ef\"],[0.5,\"#f7f7f7\"],[0.6,\"#e6f5d0\"],[0.7,\"#b8e186\"],[0.8,\"#7fbc41\"],[0.9,\"#4d9221\"],[1,\"#276419\"]]},\"xaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"automargin\":true,\"zerolinewidth\":2},\"yaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"automargin\":true,\"zerolinewidth\":2},\"scene\":{\"xaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2},\"yaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2},\"zaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2}},\"shapedefaults\":{\"line\":{\"color\":\"#2a3f5f\"}},\"annotationdefaults\":{\"arrowcolor\":\"#2a3f5f\",\"arrowhead\":0,\"arrowwidth\":1},\"geo\":{\"bgcolor\":\"white\",\"landcolor\":\"#E5ECF6\",\"subunitcolor\":\"white\",\"showland\":true,\"showlakes\":true,\"lakecolor\":\"white\"},\"title\":{\"x\":0.05},\"mapbox\":{\"style\":\"light\"}}},\"shapes\":[{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":14,\"x1\":\"13.610325902700424\",\"y0\":0,\"y1\":0},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":14,\"x1\":\"16.727499932050705\",\"y0\":1,\"y1\":1},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":12,\"x1\":\"7.47495724260807\",\"y0\":2,\"y1\":2},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":12,\"x1\":\"12.378114826977253\",\"y0\":3,\"y1\":3},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":11,\"x1\":\"8.29572493582964\",\"y0\":4,\"y1\":4},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":10,\"x1\":\"6.790349626913667\",\"y0\":5,\"y1\":5},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":9,\"x1\":\"9.814618289470673\",\"y0\":6,\"y1\":6},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":9,\"x1\":\"10.453795365989208\",\"y0\":7,\"y1\":7},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":8,\"x1\":\"6.911410814151168\",\"y0\":8,\"y1\":8},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":7,\"x1\":\"8.662500880658627\",\"y0\":9,\"y1\":9},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":7,\"x1\":\"5.063202641904354\",\"y0\":10,\"y1\":10},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":7,\"x1\":\"7.574615128338337\",\"y0\":11,\"y1\":11},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":7,\"x1\":\"6.923017270863056\",\"y0\":12,\"y1\":12},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":7,\"x1\":\"11.180736033245921\",\"y0\":13,\"y1\":13},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":6,\"x1\":\"7.047202989459038\",\"y0\":14,\"y1\":14},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":6,\"x1\":\"6.131767854094505\",\"y0\":15,\"y1\":15},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":6,\"x1\":\"3.2635028287768364\",\"y0\":16,\"y1\":16},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":6,\"x1\":\"6.742483241483569\",\"y0\":17,\"y1\":17},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":6,\"x1\":\"5.316661614924669\",\"y0\":18,\"y1\":18},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":6,\"x1\":\"5.866328570060432\",\"y0\":19,\"y1\":19}],\"title\":{\"font\":{\"size\":30},\"text\":\"Goals vs xG\"},\"xaxis\":{\"range\":[0,30]}},                        {\"responsive\": true}                    ).then(function(){\n",
              "                            \n",
              "var gd = document.getElementById('a6c1d88a-99d9-4f08-9119-43a86a75df26');\n",
              "var x = new MutationObserver(function (mutations, observer) {{\n",
              "        var display = window.getComputedStyle(gd).display;\n",
              "        if (!display || display === 'none') {{\n",
              "            console.log([gd, 'removed!']);\n",
              "            Plotly.purge(gd);\n",
              "            observer.disconnect();\n",
              "        }}\n",
              "}});\n",
              "\n",
              "// Listen for the removal of the full notebook cells\n",
              "var notebookContainer = gd.closest('#notebook-container');\n",
              "if (notebookContainer) {{\n",
              "    x.observe(notebookContainer, {childList: true});\n",
              "}}\n",
              "\n",
              "// Listen for the clearing of the current output cell\n",
              "var outputEl = gd.closest('.output');\n",
              "if (outputEl) {{\n",
              "    x.observe(outputEl, {childList: true});\n",
              "}}\n",
              "\n",
              "                        })                };                            </script>        </div>\n",
              "</body>\n",
              "</html>"
            ]
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "seasonedit = one_game_df.drop(columns=[ 'yellow_cards','red_cards','time'])"
      ],
      "metadata": {
        "id": "zxhwefRPFQDN"
      },
      "execution_count": 65,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "top25assists.columns"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "wSmCXk6YFSz5",
        "outputId": "e1578fd5-52bf-4ed1-fe93-1d67d2f57e07"
      },
      "execution_count": 66,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Index(['id', 'player_name', 'games_x', 'time_x', 'goals_1wks_x', 'xG_1wks_x',\n",
              "       'assists_1wks_x', 'xA_1wks_x', 'shots_1wks_x', 'key_passes_1wks_x',\n",
              "       'yellow_cards_x', 'red_cards_x', 'position_x', 'team_title_x',\n",
              "       'npg_1wks_x', 'npxG_1wks_x', 'xGChain_x', 'xGBuildup_x', 'games_y',\n",
              "       'time_y', 'goals_season', 'xG_season', 'assists_season', 'xA_season',\n",
              "       'shots_season', 'key_passes_season', 'yellow_cards_y', 'red_cards_y',\n",
              "       'npg_season', 'npxG_season', 'xGChain_y', 'xGBuildup_y', 'games',\n",
              "       'time', 'goals_1wks_y', 'xG_1wks_y', 'assists_1wks_y', 'xA_1wks_y',\n",
              "       'shots_1wks_y', 'key_passes_1wks_y', 'yellow_cards', 'red_cards',\n",
              "       'position_y', 'team_title_y', 'npg_1wks_y', 'npxG_1wks_y', 'xGChain',\n",
              "       'xGBuildup', 'goals', 'assists'],\n",
              "      dtype='object')"
            ]
          },
          "metadata": {},
          "execution_count": 66
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "top20assists = top25assists.drop(columns=[ 'shots_1wks_x', 'key_passes_1wks_x',\n",
        "       'yellow_cards_x', 'red_cards_x', 'position_x', 'team_title_x',\n",
        "       'npg_1wks_x', 'npxG_1wks_x', 'xGChain_x', 'xGBuildup_x', 'games_y',\n",
        "       'time_y', 'goals_season', 'xG_season', 'assists_season', 'xA_season',\n",
        "       'shots_season', 'key_passes_season', 'yellow_cards_y', 'red_cards_y',\n",
        "       'npg_season', 'npxG_season', 'xGChain_y', 'xGBuildup_y', 'games',\n",
        "       'time', 'goals_1wks_y', 'xG_1wks_y', 'assists_1wks_y', 'xA_1wks_y',\n",
        "       'shots_1wks_y', 'key_passes_1wks_y', 'yellow_cards', 'red_cards',\n",
        "       'position_y', 'team_title_y', 'npg_1wks_y', 'npxG_1wks_y', 'xGChain',\n",
        "       'xGBuildup', 'assists_1wks_x', 'games_x', 'time_x', 'goals_1wks_x', 'id' ])\n",
        "\n",
        "top20assists.reset_index(inplace = True,drop = True)\n",
        "top20assists"
      ],
      "metadata": {
        "id": "_Xn659fiFXvb",
        "outputId": "7f03d385-ffc3-44d8-9a61-699680e0898a",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 677
        }
      },
      "execution_count": 67,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "          player_name           xG_1wks_x           xA_1wks_x  goals  assists\n",
              "0       Mohamed Salah  13.610325902700424    9.57847910746932     14        8\n",
              "1       Ollie Watkins  10.453795365989208   4.449759863317013      9        8\n",
              "2          Pedro Neto   1.971568487584591  3.4589802250266075      1        7\n",
              "3     Kieran Trippier  0.2488715760409832   6.974743170663714      0        7\n",
              "4         Bukayo Saka   7.936890881508589   6.405137315392494      6        6\n",
              "5          Phil Foden   4.718718251213431   4.824954718351364      5        6\n",
              "6        Darwin Núñez  11.132159125991166  3.8916123947128654      5        6\n",
              "7      Anthony Elanga  3.1140028964728117  4.6477286368608475      4        6\n",
              "8         Pascal Groß  3.2966111712157726   4.212384800426662      3        6\n",
              "9   James Ward-Prowse   2.980880512855947   4.275119975209236      3        6\n",
              "10        Pedro Porro  1.9460078608244658   5.015945693477988      0        6\n",
              "11      Son Heung-Min    7.47495724260807   6.843130592256784     12        5\n",
              "12        Leon Bailey  3.2635028287768364   4.156177133321762      6        5\n",
              "13      Matheus Cunha   5.866328570060432  3.1632621362805367      6        5\n",
              "14     Anthony Gordon    5.91298695653677    4.88668311573565      6        5\n",
              "15     Julián Álvarez   7.060728475451469   4.053520877845585      6        5\n",
              "16     James Maddison   2.944616189226508  3.4641558043658733      3        5\n",
              "17        Jordan Ayew   3.114279456436634   3.983744007535279      2        5\n",
              "18      Lucas Paquetá   2.485358458943665   4.096440831199288      2        5\n",
              "19        Jéremy Doku  1.2312334701418877   3.068725273013115      2        5"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-5e7b1c83-e006-46f8-8378-3a02430444e2\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>player_name</th>\n",
              "      <th>xG_1wks_x</th>\n",
              "      <th>xA_1wks_x</th>\n",
              "      <th>goals</th>\n",
              "      <th>assists</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>Mohamed Salah</td>\n",
              "      <td>13.610325902700424</td>\n",
              "      <td>9.57847910746932</td>\n",
              "      <td>14</td>\n",
              "      <td>8</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Ollie Watkins</td>\n",
              "      <td>10.453795365989208</td>\n",
              "      <td>4.449759863317013</td>\n",
              "      <td>9</td>\n",
              "      <td>8</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>Pedro Neto</td>\n",
              "      <td>1.971568487584591</td>\n",
              "      <td>3.4589802250266075</td>\n",
              "      <td>1</td>\n",
              "      <td>7</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>Kieran Trippier</td>\n",
              "      <td>0.2488715760409832</td>\n",
              "      <td>6.974743170663714</td>\n",
              "      <td>0</td>\n",
              "      <td>7</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>Bukayo Saka</td>\n",
              "      <td>7.936890881508589</td>\n",
              "      <td>6.405137315392494</td>\n",
              "      <td>6</td>\n",
              "      <td>6</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>Phil Foden</td>\n",
              "      <td>4.718718251213431</td>\n",
              "      <td>4.824954718351364</td>\n",
              "      <td>5</td>\n",
              "      <td>6</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>Darwin Núñez</td>\n",
              "      <td>11.132159125991166</td>\n",
              "      <td>3.8916123947128654</td>\n",
              "      <td>5</td>\n",
              "      <td>6</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>Anthony Elanga</td>\n",
              "      <td>3.1140028964728117</td>\n",
              "      <td>4.6477286368608475</td>\n",
              "      <td>4</td>\n",
              "      <td>6</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>Pascal Groß</td>\n",
              "      <td>3.2966111712157726</td>\n",
              "      <td>4.212384800426662</td>\n",
              "      <td>3</td>\n",
              "      <td>6</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>James Ward-Prowse</td>\n",
              "      <td>2.980880512855947</td>\n",
              "      <td>4.275119975209236</td>\n",
              "      <td>3</td>\n",
              "      <td>6</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10</th>\n",
              "      <td>Pedro Porro</td>\n",
              "      <td>1.9460078608244658</td>\n",
              "      <td>5.015945693477988</td>\n",
              "      <td>0</td>\n",
              "      <td>6</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>11</th>\n",
              "      <td>Son Heung-Min</td>\n",
              "      <td>7.47495724260807</td>\n",
              "      <td>6.843130592256784</td>\n",
              "      <td>12</td>\n",
              "      <td>5</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>12</th>\n",
              "      <td>Leon Bailey</td>\n",
              "      <td>3.2635028287768364</td>\n",
              "      <td>4.156177133321762</td>\n",
              "      <td>6</td>\n",
              "      <td>5</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>13</th>\n",
              "      <td>Matheus Cunha</td>\n",
              "      <td>5.866328570060432</td>\n",
              "      <td>3.1632621362805367</td>\n",
              "      <td>6</td>\n",
              "      <td>5</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>14</th>\n",
              "      <td>Anthony Gordon</td>\n",
              "      <td>5.91298695653677</td>\n",
              "      <td>4.88668311573565</td>\n",
              "      <td>6</td>\n",
              "      <td>5</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>15</th>\n",
              "      <td>Julián Álvarez</td>\n",
              "      <td>7.060728475451469</td>\n",
              "      <td>4.053520877845585</td>\n",
              "      <td>6</td>\n",
              "      <td>5</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>16</th>\n",
              "      <td>James Maddison</td>\n",
              "      <td>2.944616189226508</td>\n",
              "      <td>3.4641558043658733</td>\n",
              "      <td>3</td>\n",
              "      <td>5</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>17</th>\n",
              "      <td>Jordan Ayew</td>\n",
              "      <td>3.114279456436634</td>\n",
              "      <td>3.983744007535279</td>\n",
              "      <td>2</td>\n",
              "      <td>5</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>18</th>\n",
              "      <td>Lucas Paquetá</td>\n",
              "      <td>2.485358458943665</td>\n",
              "      <td>4.096440831199288</td>\n",
              "      <td>2</td>\n",
              "      <td>5</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>19</th>\n",
              "      <td>Jéremy Doku</td>\n",
              "      <td>1.2312334701418877</td>\n",
              "      <td>3.068725273013115</td>\n",
              "      <td>2</td>\n",
              "      <td>5</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-5e7b1c83-e006-46f8-8378-3a02430444e2')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-5e7b1c83-e006-46f8-8378-3a02430444e2 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-5e7b1c83-e006-46f8-8378-3a02430444e2');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-6ad79fc6-f788-4592-b44c-46290871724d\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-6ad79fc6-f788-4592-b44c-46290871724d')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-6ad79fc6-f788-4592-b44c-46290871724d button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 67
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "fig4= go.Figure()\n",
        "fig4.add_trace(go.Scatter(x = top20assists[\"assists\"],\n",
        "                          y = top20assists[\"player_name\"],\n",
        "                          mode = 'markers',\n",
        "                          marker_color = 'darkblue',\n",
        "                          marker_size = 10,\n",
        "                          name = 'assists'))\n",
        "fig4.add_trace(go.Scatter(x = top20assists[\"xA_1wks_x\"],\n",
        "                          y = top20assists[\"player_name\"],\n",
        "                          mode = 'markers',\n",
        "                          marker_color = 'darkorange',\n",
        "                          marker_size = 10,\n",
        "                          name = 'xA'))\n",
        "for i in range(0, len(top20assists)):\n",
        "               fig4.add_shape(type='line',\n",
        "                              x0 = top20assists['assists'][i],\n",
        "                              y0 = i,\n",
        "                              x1 = top20assists[\"xA_1wks_x\"][i],\n",
        "                              y1 = i,\n",
        "                              line=dict(color='crimson', width = 3))\n",
        "fig4.update_layout(title_text =\n",
        "                    \"assists vs xA\",\n",
        "                    title_font_size = 15)\n",
        "fig4.update_xaxes(range=[0, 15])\n",
        "fig4.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 542
        },
        "id": "P6oVjqCSF4Pw",
        "outputId": "18ec446a-187d-4af3-d97b-676f3aaafb21"
      },
      "execution_count": 68,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<html>\n",
              "<head><meta charset=\"utf-8\" /></head>\n",
              "<body>\n",
              "    <div>            <script src=\"https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.5/MathJax.js?config=TeX-AMS-MML_SVG\"></script><script type=\"text/javascript\">if (window.MathJax && window.MathJax.Hub && window.MathJax.Hub.Config) {window.MathJax.Hub.Config({SVG: {font: \"STIX-Web\"}});}</script>                <script type=\"text/javascript\">window.PlotlyConfig = {MathJaxConfig: 'local'};</script>\n",
              "        <script charset=\"utf-8\" src=\"https://cdn.plot.ly/plotly-2.24.1.min.js\"></script>                <div id=\"09b6fcf5-beb1-4db7-a005-349a486398aa\" class=\"plotly-graph-div\" style=\"height:525px; width:100%;\"></div>            <script type=\"text/javascript\">                                    window.PLOTLYENV=window.PLOTLYENV || {};                                    if (document.getElementById(\"09b6fcf5-beb1-4db7-a005-349a486398aa\")) {                    Plotly.newPlot(                        \"09b6fcf5-beb1-4db7-a005-349a486398aa\",                        [{\"marker\":{\"color\":\"darkblue\",\"size\":10},\"mode\":\"markers\",\"name\":\"assists\",\"x\":[8,8,7,7,6,6,6,6,6,6,6,5,5,5,5,5,5,5,5,5],\"y\":[\"Mohamed Salah\",\"Ollie Watkins\",\"Pedro Neto\",\"Kieran Trippier\",\"Bukayo Saka\",\"Phil Foden\",\"Darwin N\\u00fa\\u00f1ez\",\"Anthony Elanga\",\"Pascal Gro\\u00df\",\"James Ward-Prowse\",\"Pedro Porro\",\"Son Heung-Min\",\"Leon Bailey\",\"Matheus Cunha\",\"Anthony Gordon\",\"Juli\\u00e1n \\u00c1lvarez\",\"James Maddison\",\"Jordan Ayew\",\"Lucas Paquet\\u00e1\",\"J\\u00e9remy Doku\"],\"type\":\"scatter\"},{\"marker\":{\"color\":\"darkorange\",\"size\":10},\"mode\":\"markers\",\"name\":\"xA\",\"x\":[\"9.57847910746932\",\"4.449759863317013\",\"3.4589802250266075\",\"6.974743170663714\",\"6.405137315392494\",\"4.824954718351364\",\"3.8916123947128654\",\"4.6477286368608475\",\"4.212384800426662\",\"4.275119975209236\",\"5.015945693477988\",\"6.843130592256784\",\"4.156177133321762\",\"3.1632621362805367\",\"4.88668311573565\",\"4.053520877845585\",\"3.4641558043658733\",\"3.983744007535279\",\"4.096440831199288\",\"3.068725273013115\"],\"y\":[\"Mohamed Salah\",\"Ollie Watkins\",\"Pedro Neto\",\"Kieran Trippier\",\"Bukayo Saka\",\"Phil Foden\",\"Darwin N\\u00fa\\u00f1ez\",\"Anthony Elanga\",\"Pascal Gro\\u00df\",\"James Ward-Prowse\",\"Pedro Porro\",\"Son Heung-Min\",\"Leon Bailey\",\"Matheus Cunha\",\"Anthony Gordon\",\"Juli\\u00e1n \\u00c1lvarez\",\"James Maddison\",\"Jordan Ayew\",\"Lucas Paquet\\u00e1\",\"J\\u00e9remy Doku\"],\"type\":\"scatter\"}],                        {\"template\":{\"data\":{\"histogram2dcontour\":[{\"type\":\"histogram2dcontour\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"choropleth\":[{\"type\":\"choropleth\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"histogram2d\":[{\"type\":\"histogram2d\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"heatmap\":[{\"type\":\"heatmap\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"heatmapgl\":[{\"type\":\"heatmapgl\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"contourcarpet\":[{\"type\":\"contourcarpet\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"contour\":[{\"type\":\"contour\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"surface\":[{\"type\":\"surface\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"mesh3d\":[{\"type\":\"mesh3d\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"scatter\":[{\"fillpattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2},\"type\":\"scatter\"}],\"parcoords\":[{\"type\":\"parcoords\",\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterpolargl\":[{\"type\":\"scatterpolargl\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"bar\":[{\"error_x\":{\"color\":\"#2a3f5f\"},\"error_y\":{\"color\":\"#2a3f5f\"},\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"bar\"}],\"scattergeo\":[{\"type\":\"scattergeo\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterpolar\":[{\"type\":\"scatterpolar\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"histogram\":[{\"marker\":{\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"histogram\"}],\"scattergl\":[{\"type\":\"scattergl\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatter3d\":[{\"type\":\"scatter3d\",\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scattermapbox\":[{\"type\":\"scattermapbox\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterternary\":[{\"type\":\"scatterternary\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scattercarpet\":[{\"type\":\"scattercarpet\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"carpet\":[{\"aaxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"baxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"type\":\"carpet\"}],\"table\":[{\"cells\":{\"fill\":{\"color\":\"#EBF0F8\"},\"line\":{\"color\":\"white\"}},\"header\":{\"fill\":{\"color\":\"#C8D4E3\"},\"line\":{\"color\":\"white\"}},\"type\":\"table\"}],\"barpolar\":[{\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"barpolar\"}],\"pie\":[{\"automargin\":true,\"type\":\"pie\"}]},\"layout\":{\"autotypenumbers\":\"strict\",\"colorway\":[\"#636efa\",\"#EF553B\",\"#00cc96\",\"#ab63fa\",\"#FFA15A\",\"#19d3f3\",\"#FF6692\",\"#B6E880\",\"#FF97FF\",\"#FECB52\"],\"font\":{\"color\":\"#2a3f5f\"},\"hovermode\":\"closest\",\"hoverlabel\":{\"align\":\"left\"},\"paper_bgcolor\":\"white\",\"plot_bgcolor\":\"#E5ECF6\",\"polar\":{\"bgcolor\":\"#E5ECF6\",\"angularaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"radialaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"ternary\":{\"bgcolor\":\"#E5ECF6\",\"aaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"baxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"caxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"coloraxis\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"colorscale\":{\"sequential\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"sequentialminus\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"diverging\":[[0,\"#8e0152\"],[0.1,\"#c51b7d\"],[0.2,\"#de77ae\"],[0.3,\"#f1b6da\"],[0.4,\"#fde0ef\"],[0.5,\"#f7f7f7\"],[0.6,\"#e6f5d0\"],[0.7,\"#b8e186\"],[0.8,\"#7fbc41\"],[0.9,\"#4d9221\"],[1,\"#276419\"]]},\"xaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"automargin\":true,\"zerolinewidth\":2},\"yaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"automargin\":true,\"zerolinewidth\":2},\"scene\":{\"xaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2},\"yaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2},\"zaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2}},\"shapedefaults\":{\"line\":{\"color\":\"#2a3f5f\"}},\"annotationdefaults\":{\"arrowcolor\":\"#2a3f5f\",\"arrowhead\":0,\"arrowwidth\":1},\"geo\":{\"bgcolor\":\"white\",\"landcolor\":\"#E5ECF6\",\"subunitcolor\":\"white\",\"showland\":true,\"showlakes\":true,\"lakecolor\":\"white\"},\"title\":{\"x\":0.05},\"mapbox\":{\"style\":\"light\"}}},\"shapes\":[{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":8,\"x1\":\"9.57847910746932\",\"y0\":0,\"y1\":0},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":8,\"x1\":\"4.449759863317013\",\"y0\":1,\"y1\":1},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":7,\"x1\":\"3.4589802250266075\",\"y0\":2,\"y1\":2},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":7,\"x1\":\"6.974743170663714\",\"y0\":3,\"y1\":3},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":6,\"x1\":\"6.405137315392494\",\"y0\":4,\"y1\":4},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":6,\"x1\":\"4.824954718351364\",\"y0\":5,\"y1\":5},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":6,\"x1\":\"3.8916123947128654\",\"y0\":6,\"y1\":6},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":6,\"x1\":\"4.6477286368608475\",\"y0\":7,\"y1\":7},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":6,\"x1\":\"4.212384800426662\",\"y0\":8,\"y1\":8},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":6,\"x1\":\"4.275119975209236\",\"y0\":9,\"y1\":9},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":6,\"x1\":\"5.015945693477988\",\"y0\":10,\"y1\":10},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":5,\"x1\":\"6.843130592256784\",\"y0\":11,\"y1\":11},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":5,\"x1\":\"4.156177133321762\",\"y0\":12,\"y1\":12},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":5,\"x1\":\"3.1632621362805367\",\"y0\":13,\"y1\":13},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":5,\"x1\":\"4.88668311573565\",\"y0\":14,\"y1\":14},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":5,\"x1\":\"4.053520877845585\",\"y0\":15,\"y1\":15},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":5,\"x1\":\"3.4641558043658733\",\"y0\":16,\"y1\":16},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":5,\"x1\":\"3.983744007535279\",\"y0\":17,\"y1\":17},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":5,\"x1\":\"4.096440831199288\",\"y0\":18,\"y1\":18},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":5,\"x1\":\"3.068725273013115\",\"y0\":19,\"y1\":19}],\"title\":{\"font\":{\"size\":15},\"text\":\"assists vs xA\"},\"xaxis\":{\"range\":[0,15]}},                        {\"responsive\": true}                    ).then(function(){\n",
              "                            \n",
              "var gd = document.getElementById('09b6fcf5-beb1-4db7-a005-349a486398aa');\n",
              "var x = new MutationObserver(function (mutations, observer) {{\n",
              "        var display = window.getComputedStyle(gd).display;\n",
              "        if (!display || display === 'none') {{\n",
              "            console.log([gd, 'removed!']);\n",
              "            Plotly.purge(gd);\n",
              "            observer.disconnect();\n",
              "        }}\n",
              "}});\n",
              "\n",
              "// Listen for the removal of the full notebook cells\n",
              "var notebookContainer = gd.closest('#notebook-container');\n",
              "if (notebookContainer) {{\n",
              "    x.observe(notebookContainer, {childList: true});\n",
              "}}\n",
              "\n",
              "// Listen for the clearing of the current output cell\n",
              "var outputEl = gd.closest('.output');\n",
              "if (outputEl) {{\n",
              "    x.observe(outputEl, {childList: true});\n",
              "}}\n",
              "\n",
              "                        })                };                            </script>        </div>\n",
              "</body>\n",
              "</html>"
            ]
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import pandas as pd\n",
        "import matplotlib.pyplot as plt\n",
        "\n",
        "# Assuming you have already loaded the DataFrame named 'Top50'\n",
        "\n",
        "# Filter the DataFrame by position type\n",
        "midfielders = Top50[Top50['pos'] == 'M']\n",
        "forwards = Top50[Top50['pos'] == 'F']\n",
        "defenders = Top50[Top50['pos'] == 'D']\n",
        "\n",
        "# Sort the filtered DataFrames by '5GW Total' in descending order\n",
        "midfielders = midfielders.sort_values(by='5GW Total', ascending=False)\n",
        "forwards = forwards.sort_values(by='5GW Total', ascending=False)\n",
        "defenders = defenders.sort_values(by='5GW Total', ascending=False)\n",
        "\n",
        "# Plotting the bar charts\n",
        "plt.figure(figsize=(12, 6))\n",
        "\n",
        "# Midfielders chart\n",
        "plt.subplot(131)\n",
        "plt.bar(midfielders['name'][:10], midfielders['5GW Total'][:10])\n",
        "plt.title('Top 10 Midfielders by 5GW Total')\n",
        "plt.xticks(rotation=45)\n",
        "\n",
        "# Forwards chart\n",
        "plt.subplot(132)\n",
        "plt.bar(forwards['name'][:10], forwards['5GW Total'][:10])\n",
        "plt.title('Top 10 Forwards by 5GW Total')\n",
        "plt.xticks(rotation=45)\n",
        "\n",
        "# Defenders chart\n",
        "plt.subplot(133)\n",
        "plt.bar(defenders['name'][:10], defenders['5GW Total'][:10])\n",
        "plt.title('Top 10 Defenders by 5GW Total')\n",
        "plt.xticks(rotation=45)\n",
        "\n",
        "plt.tight_layout()\n",
        "plt.show()\n"
      ],
      "metadata": {
        "id": "FN06IYwSKGLw",
        "outputId": "f58217c3-a4e8-4957-85b1-eaec39568e27",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 601
        }
      },
      "execution_count": 69,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1200x600 with 3 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import pandas as pd\n",
        "import matplotlib.pyplot as plt\n",
        "\n",
        "# Assuming you have already loaded the DataFrame named 'Top50'\n",
        "\n",
        "# Filter the DataFrame by position type\n",
        "midfielders = Top50[Top50['pos'] == 'M']\n",
        "forwards = Top50[Top50['pos'] == 'F']\n",
        "defenders = Top50[Top50['pos'] == 'D']\n",
        "\n",
        "# Sort the filtered DataFrames by '5GW Total' in descending order\n",
        "midfielders = midfielders.sort_values(by='5GW Total', ascending=False)\n",
        "forwards = forwards.sort_values(by='5GW Total', ascending=False)\n",
        "defenders = defenders.sort_values(by='5GW Total', ascending=False)\n",
        "\n",
        "# Create a list of colors for each chart\n",
        "colors = ['blue', 'green', 'red']\n",
        "\n",
        "# Plotting the horizontal bar charts with different colors\n",
        "plt.figure(figsize=(10, 6))\n",
        "\n",
        "# Midfielders chart\n",
        "plt.barh(midfielders['name'][:10], midfielders['5GW Total'][:10], color=colors[0])\n",
        "plt.title('Top 10 Midfielders by 5GW Total')\n",
        "plt.xlabel('5GW Total')\n",
        "plt.gca().invert_yaxis()  # Invert y-axis to have higher values at the top\n",
        "\n",
        "# Forwards chart\n",
        "plt.figure(figsize=(10, 6))\n",
        "plt.barh(forwards['name'][:10], forwards['5GW Total'][:10], color=colors[1])\n",
        "plt.title('Top 10 Forwards by 5GW Total')\n",
        "plt.xlabel('5GW Total')\n",
        "plt.gca().invert_yaxis()  # Invert y-axis to have higher values at the top\n",
        "\n",
        "# Defenders chart\n",
        "plt.figure(figsize=(10, 6))\n",
        "plt.barh(defenders['name'][:10], defenders['5GW Total'][:10], color=colors[2])\n",
        "plt.title('Top 10 Defenders by 5GW Total')\n",
        "plt.xlabel('5GW Total')\n",
        "plt.gca().invert_yaxis()  # Invert y-axis to have higher values at the top\n",
        "\n",
        "plt.tight_layout()\n",
        "plt.show()\n"
      ],
      "metadata": {
        "id": "VSYcUse-SrV-",
        "outputId": "cd23b863-ae17-4cf7-f185-31fe4f8b4531",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        }
      },
      "execution_count": 70,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1000x600 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1000x600 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1000x600 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import pandas as pd\n",
        "import seaborn as sns\n",
        "import matplotlib.pyplot as plt\n",
        "\n",
        "# Assuming you have already loaded the DataFrame named 'gwadjustments26'\n",
        "\n",
        "# Set the index column\n",
        "gw17adjustments.set_index('team', inplace=True)\n",
        "\n",
        "# Create a color map\n",
        "cmap = sns.diverging_palette(240, 10, as_cmap=True)\n",
        "\n",
        "# Plot the heatmap\n",
        "plt.figure(figsize=(8, 6))\n",
        "sns.heatmap(gw17adjustments, annot=True, cmap=cmap, center=0)\n",
        "plt.title('Color-Coded Table of GW Adjustments')\n",
        "plt.show()\n"
      ],
      "metadata": {
        "id": "X2DQdb15YZfr",
        "outputId": "aa2622fe-e983-46a9-d4f9-c9506d835dd8",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 245
        }
      },
      "execution_count": 71,
      "outputs": [
        {
          "output_type": "error",
          "ename": "NameError",
          "evalue": "name 'gw17adjustments' is not defined",
          "traceback": [
            "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
            "\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)",
            "\u001b[0;32m<ipython-input-71-59a431ede14a>\u001b[0m in \u001b[0;36m<cell line: 8>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      6\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      7\u001b[0m \u001b[0;31m# Set the index column\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 8\u001b[0;31m \u001b[0mgw17adjustments\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mset_index\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m'team'\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0minplace\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mTrue\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      9\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     10\u001b[0m \u001b[0;31m# Create a color map\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;31mNameError\u001b[0m: name 'gw17adjustments' is not defined"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "plt.figure(figsize=(10, 6))\n",
        "\n",
        "scores_columns = ['gw17adjustment', 'gw18adjustment', 'gw19adjustment', 'gw20adjustment', 'gw21adjustment']\n",
        "\n",
        "bottom = [0] * len(gwadjustments17)\n",
        "\n",
        "for score_col in scores_columns:\n",
        "    plt.bar(gwadjustments26.index, gwadjustments26[score_col], bottom=bottom, label=score_col)\n",
        "    bottom += gwadjustments26[score_col]\n",
        "\n",
        "plt.xlabel('Teams')\n",
        "plt.ylabel('Score Adjustments')\n",
        "plt.title('Stacked GW Adjustments for Different Teams')\n",
        "plt.xticks(rotation=45)\n",
        "plt.legend()\n",
        "plt.tight_layout()\n",
        "\n",
        "plt.show()\n"
      ],
      "metadata": {
        "id": "z7T7SgQSYyL8"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "plt.figure(figsize=(10, 6))\n",
        "\n",
        "# Calculate the total score adjustments for each team\n",
        "gwadjustments26['Total'] = gwadjustments26.sum(axis=1)\n",
        "\n",
        "# Sort the DataFrame by the 'Total' column in descending order\n",
        "gwadjustments26 = gwadjustments26.sort_values(by='Total', ascending=False)\n",
        "\n",
        "# Get the scores columns\n",
        "scores_columns = ['gw2adjustment', 'gw3adjustment', 'gw4adjustment', 'gw5adjustment', 'gw6adjustment']\n",
        "\n",
        "bottom = [0] * len(gwadjustments26)\n",
        "\n",
        "for score_col in scores_columns:\n",
        "    plt.bar(gwadjustments26.index, gwadjustments26[score_col], bottom=bottom, label=score_col)\n",
        "    bottom += gwadjustments26[score_col]\n",
        "\n",
        "plt.xlabel('Teams')\n",
        "plt.ylabel('Score Adjustments')\n",
        "plt.title('Stacked GW Adjustments for Different Teams')\n",
        "plt.xticks(rotation=45)\n",
        "plt.legend()\n",
        "plt.tight_layout()\n",
        "\n",
        "plt.show()\n"
      ],
      "metadata": {
        "id": "XxE_pa9xZB8N",
        "outputId": "f1838069-c760-45e6-d48f-586ddeaa819f",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 262
        }
      },
      "execution_count": 72,
      "outputs": [
        {
          "output_type": "error",
          "ename": "NameError",
          "evalue": "name 'gwadjustments26' is not defined",
          "traceback": [
            "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
            "\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)",
            "\u001b[0;32m<ipython-input-72-af3019cce511>\u001b[0m in \u001b[0;36m<cell line: 4>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      2\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      3\u001b[0m \u001b[0;31m# Calculate the total score adjustments for each team\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 4\u001b[0;31m \u001b[0mgwadjustments26\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'Total'\u001b[0m\u001b[0;34m]\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mgwadjustments26\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0msum\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0maxis\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;36m1\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      5\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      6\u001b[0m \u001b[0;31m# Sort the DataFrame by the 'Total' column in descending order\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;31mNameError\u001b[0m: name 'gwadjustments26' is not defined"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1000x600 with 0 Axes>"
            ]
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import pandas as pd\n",
        "import seaborn as sns\n",
        "import matplotlib.pyplot as plt\n",
        "\n",
        "# Assuming you have already loaded the DataFrame named 'gwadjustments26'\n",
        "\n",
        "# Set the index column\n",
        "gwadjustments26.set_index('team', inplace=True)\n",
        "\n",
        "# Create a custom color map\n",
        "cmap = sns.diverging_palette(240, 10, n=21, as_cmap=True)\n",
        "colors = ['red', 'orange', 'green']\n",
        "\n",
        "# Define color thresholds\n",
        "color_thresholds = [0.9, 1.1, 2.0]\n",
        "\n",
        "# Normalize values for coloring\n",
        "normalized_values = (gwadjustments26 - 0.9) / (2.0 - 0.9)\n",
        "\n",
        "# Apply color map and thresholds\n",
        "colored_values = pd.cut(normalized_values, bins=color_thresholds, labels=colors)\n",
        "\n",
        "# Plot the heatmap with customized color coding\n",
        "plt.figure(figsize=(8, 6))\n",
        "sns.heatmap(normalized_values, annot=True, cmap=cmap, center=1, cbar=False, fmt=\".2f\", linewidths=0.5, linecolor='white')\n",
        "plt.title('Custom Color-Coded Table of GW Adjustments')\n",
        "plt.xticks(rotation=45)\n",
        "plt.show()\n"
      ],
      "metadata": {
        "id": "_YnxO1yMZekH",
        "outputId": "3c48fe84-4e57-4bb9-97bb-cd9e6cff6c31",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 245
        }
      },
      "execution_count": 73,
      "outputs": [
        {
          "output_type": "error",
          "ename": "NameError",
          "evalue": "name 'gwadjustments26' is not defined",
          "traceback": [
            "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
            "\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)",
            "\u001b[0;32m<ipython-input-73-6a2b296170b4>\u001b[0m in \u001b[0;36m<cell line: 8>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      6\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      7\u001b[0m \u001b[0;31m# Set the index column\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 8\u001b[0;31m \u001b[0mgwadjustments26\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mset_index\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m'team'\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0minplace\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mTrue\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      9\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     10\u001b[0m \u001b[0;31m# Create a custom color map\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;31mNameError\u001b[0m: name 'gwadjustments26' is not defined"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "plt.figure(figsize=(10, 8))\n",
        "\n",
        "# Calculate the total score adjustments for each team\n",
        "gwadjustments26['Total'] = gwadjustments26.sum(axis=1)\n",
        "\n",
        "# Sort the DataFrame by the 'Total' column in descending order\n",
        "gwadjustments26 = gwadjustments26.sort_values(by='Total', ascending=False)\n",
        "\n",
        "# Get the scores columns\n",
        "scores_columns = ['gw2adjustment', 'gw3adjustment', 'gw4adjustment', 'gw5adjustment', 'gw6adjustment']\n",
        "\n",
        "# Define color thresholds and corresponding colors\n",
        "color_thresholds = [0.9, 1.1, 2.0]\n",
        "colors = ['red', 'orange', 'green']\n",
        "\n",
        "bottom = [0] * len(gwadjustments26)\n",
        "\n",
        "for score_col in scores_columns:\n",
        "    adjusted_values = gwadjustments26[score_col]\n",
        "\n",
        "    # Create a color list based on thresholds\n",
        "    colors_for_col = [colors[-1] if val is None else\n",
        "                      colors[0] if val < color_thresholds[0] else\n",
        "                      colors[1] if val <= color_thresholds[1] else\n",
        "                      colors[2]\n",
        "                      for val in adjusted_values]\n",
        "\n",
        "    for i, (val, color) in enumerate(zip(adjusted_values, colors_for_col)):\n",
        "        plt.barh(gwadjustments26.index[i], val, color=color, edgecolor='white')\n",
        "\n",
        "    bottom += adjusted_values\n",
        "\n",
        "plt.xlabel('Score Adjustments')\n",
        "plt.ylabel('Teams')\n",
        "plt.title('Horizontally Stacked GW Adjustments for Different Teams')\n",
        "plt.legend(labels=scores_columns)\n",
        "plt.gca().invert_yaxis()  # Invert y-axis to have higher values at the top\n",
        "plt.tight_layout()\n",
        "\n",
        "plt.show()\n"
      ],
      "metadata": {
        "id": "5agSlfUragM2",
        "outputId": "8f507672-347f-4bf7-b8eb-bf5b90d8ace8",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 262
        }
      },
      "execution_count": 74,
      "outputs": [
        {
          "output_type": "error",
          "ename": "NameError",
          "evalue": "name 'gwadjustments26' is not defined",
          "traceback": [
            "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
            "\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)",
            "\u001b[0;32m<ipython-input-74-2d5ab370e1c4>\u001b[0m in \u001b[0;36m<cell line: 4>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      2\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      3\u001b[0m \u001b[0;31m# Calculate the total score adjustments for each team\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 4\u001b[0;31m \u001b[0mgwadjustments26\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'Total'\u001b[0m\u001b[0;34m]\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mgwadjustments26\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0msum\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0maxis\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;36m1\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      5\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      6\u001b[0m \u001b[0;31m# Sort the DataFrame by the 'Total' column in descending order\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;31mNameError\u001b[0m: name 'gwadjustments26' is not defined"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1000x800 with 0 Axes>"
            ]
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import requests\n",
        "import pandas as pd\n",
        "from urllib.request import urlopen\n",
        "from json import loads\n",
        "from csv import writer\n",
        "\n",
        "def team_converter(team_id):\n",
        "    '''Converts a team's ID to their actual name'''\n",
        "    team_map = {\n",
        "        1: \"Arsenal\",\n",
        "        2: \"Aston Villa\",\n",
        "        3: \"Bournemouth\",\n",
        "        4: \"Brentford\",\n",
        "        5: \"Brighton\",\n",
        "        6: \"Burnley\",\n",
        "        7: \"Chelsea\",\n",
        "        8: \"Crystal Palace\",\n",
        "        9: \"Everton\",\n",
        "        10: \"Fulham\",\n",
        "        11: \"Liverpool\",\n",
        "        12: \"Luton Town\",\n",
        "        13: \"Manchester City\",\n",
        "        14: \"Manchester United\",\n",
        "        15: \"Newcastle United\",\n",
        "        16: \"Nottingham Forest\",\n",
        "        17: \"Sheffield United\",\n",
        "        18: \"Tottenham\",\n",
        "        19: \"West Ham\",\n",
        "        20: \"Wolverhampton Wanderers\",\n",
        "        None: None\n",
        "    }\n",
        "    return team_map.get(team_id, None)  # Use get to handle missing team IDs\n",
        "\n",
        "def position_converter(position):\n",
        "    '''Converts a player's element_type to their actual position'''\n",
        "    position_map = {\n",
        "        1: \"Goalkeeper\",\n",
        "        2: \"Defender\",\n",
        "        3: \"Midfielder\",\n",
        "        4: \"Forward\"\n",
        "    }\n",
        "    return position_map.get(position, None)  # Use get to handle missing positions\n",
        "\n",
        "def main():\n",
        "    team_entry_id = 6388102\n",
        "    url = f'https://fantasy.premierleague.com/api/entry/{team_entry_id}/transfers'\n",
        "\n",
        "    try:\n",
        "        response = requests.get(url)\n",
        "        response.raise_for_status()  # Check for any HTTP errors\n",
        "\n",
        "        transfers_data = response.json()\n",
        "\n",
        "        # Get player names from the provided API\n",
        "        player_ids_in = [transfer['element_in'] for transfer in transfers_data]\n",
        "        player_ids_out = [transfer.get('element_out', None) for transfer in transfers_data]\n",
        "\n",
        "        all_data = loads(urlopen(\"https://fantasy.premierleague.com/api/bootstrap-static/\").read())\n",
        "        players = all_data[\"elements\"]\n",
        "\n",
        "        # Build a dictionary of player names for players transferred in\n",
        "        player_names_in = {}\n",
        "        for player in players:\n",
        "            if player['id'] in player_ids_in:\n",
        "                player_names_in[player['id']] = f\"{player['first_name']} {player['second_name']}\"\n",
        "\n",
        "        # Build a dictionary of player names for players transferred out\n",
        "        player_names_out = {}\n",
        "        for player in players:\n",
        "            if player['id'] in player_ids_out:\n",
        "                player_names_out[player['id']] = f\"{player['first_name']} {player['second_name']}\"\n",
        "\n",
        "        # Replace player IDs with names and add additional data\n",
        "        transfer_data_with_info = []\n",
        "        for transfer in transfers_data:\n",
        "            player_in_name = player_names_in.get(transfer['element_in'], 'Unknown Player')\n",
        "            player_out_name = player_names_out.get(transfer['element_out'], 'Unknown Player') if transfer['element_out'] is not None else 'N/A'\n",
        "            transfer_info = {\n",
        "                'week': transfer['event'],\n",
        "                'player_in': player_in_name,\n",
        "                'player_out': player_out_name,\n",
        "                'cost_in': transfer['element_in_cost'] / 10,  # Convert to actual cost\n",
        "                'cost_out': transfer.get('element_out_cost', 0) / 10  # Convert to actual cost\n",
        "            }\n",
        "            transfer_data_with_info.append(transfer_info)\n",
        "\n",
        "        # Create a DataFrame\n",
        "        df = pd.DataFrame(transfer_data_with_info)\n",
        "\n",
        "        print(\"Transfers made by team entry\", team_entry_id)\n",
        "        print(df)\n",
        "\n",
        "    except requests.exceptions.HTTPError as errh:\n",
        "        print(\"HTTP Error:\", errh)\n",
        "    except requests.exceptions.ConnectionError as errc:\n",
        "        print(\"Error connecting:\", errc)\n",
        "    except requests.exceptions.Timeout as errt:\n",
        "        print(\"Timeout error:\", errt)\n",
        "    except requests.exceptions.RequestException as err:\n",
        "        print(\"An error occurred:\", err)\n",
        "\n",
        "if __name__ == \"__main__\":\n",
        "    main()\n"
      ],
      "metadata": {
        "id": "syMCbGo_mDoe",
        "outputId": "1064bd76-6aab-4964-8a90-c620e06614e0",
        "colab": {
          "base_uri": "https://localhost:8080/"
        }
      },
      "execution_count": 75,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Transfers made by team entry 6388102\n",
            "    week                           player_in  \\\n",
            "0     20                          Phil Foden   \n",
            "1     19                 Oleksandr Zinchenko   \n",
            "2     18                       Son Heung-min   \n",
            "3     17                     Dominic Solanke   \n",
            "4     17                      Julián Álvarez   \n",
            "5     16                         Cole Palmer   \n",
            "6     15               Konstantinos Tsimikas   \n",
            "7     14  Bernardo Veiga de Carvalho e Silva   \n",
            "8     13                  Morgan Gibbs-White   \n",
            "9     13                        Eberechi Eze   \n",
            "10    12        Gabriel dos Santos Magalhães   \n",
            "11    10                         Bukayo Saka   \n",
            "12    10                  Dominik Szoboszlai   \n",
            "13     8                       Ollie Watkins   \n",
            "14     8                        Divin Mubama   \n",
            "15     8                         Jordan Ayew   \n",
            "16     8                  Morgan Gibbs-White   \n",
            "17     8                       Mohamed Salah   \n",
            "18     8                       Son Heung-min   \n",
            "19     8                            Dan Burn   \n",
            "20     8                          Pau Torres   \n",
            "21     8                          Matty Cash   \n",
            "22     8                    Timothy Castagne   \n",
            "23     8                         Pedro Porro   \n",
            "24     8                     Alphonse Areola   \n",
            "25     7                      Carlton Morris   \n",
            "26     6                        Eberechi Eze   \n",
            "27     5                      Julián Álvarez   \n",
            "28     5                         Kyle Walker   \n",
            "29     3                       Ethan Pinnock   \n",
            "30     3                        Ben Chilwell   \n",
            "\n",
            "                            player_out  cost_in  cost_out  \n",
            "0                   Morgan Gibbs-White      7.7       5.7  \n",
            "1                Konstantinos Tsimikas      5.2       4.8  \n",
            "2   Bernardo Veiga de Carvalho e Silva      9.8       6.4  \n",
            "3                         Divin Mubama      6.7       4.3  \n",
            "4                       Erling Haaland      6.9      14.0  \n",
            "5                         Bryan Mbeumo      5.4       6.7  \n",
            "6                           Matty Cash      4.8       4.9  \n",
            "7                         Eberechi Eze      6.4       6.1  \n",
            "8                   Dominik Szoboszlai      5.7       7.0  \n",
            "9                          Jordan Ayew      6.2       5.4  \n",
            "10                            Dan Burn      4.8       4.6  \n",
            "11                       Son Heung-min      8.6       9.4  \n",
            "12                  Morgan Gibbs-White      7.0       5.8  \n",
            "13                      Julián Álvarez      8.1       6.8  \n",
            "14                      Carlton Morris      4.3       5.6  \n",
            "15                     Marcus Rashford      5.5       8.8  \n",
            "16              Bruno Borges Fernandes      5.8       8.4  \n",
            "17                        Eberechi Eze     12.6       6.2  \n",
            "18                         Bukayo Saka      9.4       8.5  \n",
            "19                         Sven Botman      4.6       4.6  \n",
            "20                         Kyle Walker      4.5       5.2  \n",
            "21                        Ben Chilwell      5.0       5.5  \n",
            "22                    Pervis Estupiñán      4.5       5.1  \n",
            "23                       Ethan Pinnock      5.1       4.5  \n",
            "24                       Sam Johnstone      4.2       4.5  \n",
            "25                       William Osula      5.6       4.4  \n",
            "26            Gabriel Martinelli Silva      6.3       7.9  \n",
            "27                       Ollie Watkins      6.7       8.0  \n",
            "28                      George Baldock      5.2       4.0  \n",
            "29        Gabriel dos Santos Magalhães      4.5       4.9  \n",
            "30                         John Stones      5.7       5.3  \n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import requests\n",
        "import pandas as pd\n",
        "from urllib.request import urlopen\n",
        "from json import loads\n",
        "from csv import writer\n",
        "\n",
        "def team_converter(team_id):\n",
        "    '''Converts a team's ID to their actual name'''\n",
        "    team_map = {\n",
        "        1: \"Arsenal\",\n",
        "        2: \"Aston Villa\",\n",
        "        3: \"Bournemouth\",\n",
        "        4: \"Brentford\",\n",
        "        5: \"Brighton\",\n",
        "        6: \"Burnley\",\n",
        "        7: \"Chelsea\",\n",
        "        8: \"Crystal Palace\",\n",
        "        9: \"Everton\",\n",
        "        10: \"Fulham\",\n",
        "        11: \"Liverpool\",\n",
        "        12: \"Luton Town\",\n",
        "        13: \"Manchester City\",\n",
        "        14: \"Manchester United\",\n",
        "        15: \"Newcastle United\",\n",
        "        16: \"Nottingham Forest\",\n",
        "        17: \"Sheffield United\",\n",
        "        18: \"Tottenham\",\n",
        "        19: \"West Ham\",\n",
        "        20: \"Wolverhampton Wanderers\",\n",
        "        None: None\n",
        "    }\n",
        "    return team_map.get(team_id, None)  # Use get to handle missing team IDs\n",
        "\n",
        "def position_converter(position):\n",
        "    '''Converts a player's element_type to their actual position'''\n",
        "    position_map = {\n",
        "        1: \"Goalkeeper\",\n",
        "        2: \"Defender\",\n",
        "        3: \"Midfielder\",\n",
        "        4: \"Forward\"\n",
        "    }\n",
        "    return position_map.get(position, None)  # Use get to handle missing positions\n",
        "\n",
        "def main():\n",
        "    team_entry_id = 275269\n",
        "    url = f'https://fantasy.premierleague.com/api/entry/{team_entry_id}/transfers'\n",
        "\n",
        "    try:\n",
        "        response = requests.get(url)\n",
        "        response.raise_for_status()  # Check for any HTTP errors\n",
        "\n",
        "        transfers_data = response.json()\n",
        "\n",
        "        # Get player names from the provided API\n",
        "        player_ids_in = [transfer['element_in'] for transfer in transfers_data]\n",
        "        player_ids_out = [transfer.get('element_out', None) for transfer in transfers_data]\n",
        "\n",
        "        all_data = loads(urlopen(\"https://fantasy.premierleague.com/api/bootstrap-static/\").read())\n",
        "        players = all_data[\"elements\"]\n",
        "\n",
        "        # Build a dictionary of player names for players transferred in\n",
        "        player_names_in = {}\n",
        "        for player in players:\n",
        "            if player['id'] in player_ids_in:\n",
        "                player_names_in[player['id']] = f\"{player['first_name']} {player['second_name']}\"\n",
        "\n",
        "        # Build a dictionary of player names for players transferred out\n",
        "        player_names_out = {}\n",
        "        for player in players:\n",
        "            if player['id'] in player_ids_out:\n",
        "                player_names_out[player['id']] = f\"{player['first_name']} {player['second_name']}\"\n",
        "\n",
        "        # Replace player IDs with names and add additional data\n",
        "        transfer_data_with_info = []\n",
        "        for transfer in transfers_data:\n",
        "            player_in_name = player_names_in.get(transfer['element_in'], 'Unknown Player')\n",
        "            player_out_name = player_names_out.get(transfer['element_out'], 'Unknown Player') if transfer['element_out'] is not None else 'N/A'\n",
        "            transfer_info = {\n",
        "                'week': transfer['event'],\n",
        "                'player_in': player_in_name,\n",
        "                'player_out': player_out_name,\n",
        "                'cost_in': transfer['element_in_cost'] / 10,  # Convert to actual cost\n",
        "                'cost_out': transfer.get('element_out_cost', 0) / 10  # Convert to actual cost\n",
        "            }\n",
        "            transfer_data_with_info.append(transfer_info)\n",
        "\n",
        "        # Create a DataFrame\n",
        "        df = pd.DataFrame(transfer_data_with_info)\n",
        "\n",
        "        print(\"Transfers made by team entry\", team_entry_id)\n",
        "        print(df)\n",
        "\n",
        "    except requests.exceptions.HTTPError as errh:\n",
        "        print(\"HTTP Error:\", errh)\n",
        "    except requests.exceptions.ConnectionError as errc:\n",
        "        print(\"Error connecting:\", errc)\n",
        "    except requests.exceptions.Timeout as errt:\n",
        "        print(\"Timeout error:\", errt)\n",
        "    except requests.exceptions.RequestException as err:\n",
        "        print(\"An error occurred:\", err)\n",
        "\n",
        "if __name__ == \"__main__\":\n",
        "    main()\n"
      ],
      "metadata": {
        "id": "NxkG0V2Eq5BY",
        "outputId": "4b4dab60-94a0-4ebe-f3ce-e4aeb7a4f918",
        "colab": {
          "base_uri": "https://localhost:8080/"
        }
      },
      "execution_count": 76,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Transfers made by team entry 275269\n",
            "    week                     player_in                    player_out  cost_in  \\\n",
            "0     20        Richarlison de Andrade                 Son Heung-min      6.8   \n",
            "1     19                   Kyle Walker         Konstantinos Tsimikas      5.3   \n",
            "2     18               Martin Dubravka               Alphonse Areola      4.2   \n",
            "3     17               Dominic Solanke                Cameron Archer      6.6   \n",
            "4     16                   Cole Palmer                  Bryan Mbeumo      5.3   \n",
            "5     15     Ederson Santana de Moraes         Alisson Ramses Becker      5.5   \n",
            "6     14  Gabriel dos Santos Magalhães                      Dan Burn      4.9   \n",
            "7     12                  Eberechi Eze                James Maddison      6.1   \n",
            "8     11                Julián Álvarez               Dominic Solanke      7.2   \n",
            "9     11         Konstantinos Tsimikas                    Matty Cash      4.6   \n",
            "10    10                   Bukayo Saka        Bruno Borges Fernandes      8.6   \n",
            "11     8               Dominic Solanke                Carlton Morris      6.4   \n",
            "12     8        Bruno Borges Fernandes                  Jarrod Bowen      8.4   \n",
            "13     8           Oleksandr Zinchenko              Pervis Estupiñán      4.9   \n",
            "14     8         Alisson Ramses Becker               Thomas Kaminski      5.5   \n",
            "15     8                   Pedro Porro                 Alfie Doughty      5.0   \n",
            "16     8                James Maddison        Bruno Borges Fernandes      7.9   \n",
            "17     8                 Ollie Watkins                Erling Haaland      7.9   \n",
            "18     8                  Jarrod Bowen               Marcus Rashford      7.2   \n",
            "19     8                 Mohamed Salah                   Bukayo Saka     12.5   \n",
            "20     8               Kieran Trippier         Rúben Gato Alves Dias      6.7   \n",
            "21     8                      Dan Burn                    Rico Henry      4.5   \n",
            "22     8                    Matty Cash  Gabriel dos Santos Magalhães      4.8   \n",
            "23     8               Alphonse Areola               Jordan Pickford      4.2   \n",
            "24     7                 Alfie Doughty                  Ben Chilwell      4.4   \n",
            "25     7               Thomas Kaminski                   Matt Turner      4.5   \n",
            "26     5                Carlton Morris               Nicolas Jackson      5.5   \n",
            "27     5                 Son Heung-min        Richarlison de Andrade      9.1   \n",
            "28     3         Rúben Gato Alves Dias                     Luke Shaw      5.5   \n",
            "29     2                  Ben Chilwell                   Reece James      5.6   \n",
            "\n",
            "    cost_out  \n",
            "0        9.5  \n",
            "1        4.7  \n",
            "2        4.2  \n",
            "3        4.5  \n",
            "4        6.8  \n",
            "5        5.5  \n",
            "6        4.5  \n",
            "7        8.0  \n",
            "8        6.4  \n",
            "9        5.0  \n",
            "10       8.3  \n",
            "11       5.5  \n",
            "12       7.2  \n",
            "13       5.1  \n",
            "14       4.5  \n",
            "15       4.4  \n",
            "16       8.4  \n",
            "17      14.0  \n",
            "18       8.9  \n",
            "19       8.6  \n",
            "20       5.5  \n",
            "21       4.5  \n",
            "22       4.7  \n",
            "23       4.4  \n",
            "24       5.6  \n",
            "25       4.0  \n",
            "26       7.1  \n",
            "27       6.8  \n",
            "28       5.5  \n",
            "29       5.5  \n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import pandas as pd\n",
        "\n",
        "fbref = pd.read_html('https://fbref.com/en/comps/9/Premier-League-Stats')\n",
        "epltable = fbref[0]\n",
        "epltablexGxGc = epltable.drop(columns=[\n",
        " 'Last 5',\n",
        " 'Attendance',\n",
        " 'Top Team Scorer',\n",
        " 'Goalkeeper',\n",
        " 'Notes'])\n",
        "\n",
        "epltablexGxGc = epltablexGxGc.replace('Newcastle Utd', 'Newcastle United')\n",
        "epltablexGxGc = epltablexGxGc.replace('Wolves','Wolverhampton Wanderers')\n",
        "epltablexGxGc = epltablexGxGc.replace('Leeds United','Leeds')\n",
        "epltablexGxGc = epltablexGxGc.replace('Leicester City','Leicester')\n",
        "epltablexGxGc = epltablexGxGc.replace('Manchester Utd','Manchester United')\n",
        "\n",
        "epltablexGxGc['Squad'] = epltablexGxGc['Squad'].str.replace(r\"[\\\"\\',]\", '')\n",
        "epltablexGxGc = epltablexGxGc.replace('Nottham Forest','Nottingham Forest')\n",
        "\n",
        "epltablexGxGc['xCSP'] = (4 - (epltablexGxGc.xGA * 4/23))\n",
        "epltablexGxGc.rename(columns={'Squad': 'Team'}, inplace=True)\n",
        "\n",
        "# Creating the new dataframe \"XGD current season\"\n",
        "xgd_current_season = epltablexGxGc[['Team', 'xGD']]\n",
        "\n",
        "# Displaying the new dataframe\n",
        "xgd_current_season"
      ],
      "metadata": {
        "id": "Wnf4ZUUeY4O6",
        "outputId": "81be303d-8ef4-458b-c8f3-b6269c11c892",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 746
        }
      },
      "execution_count": 77,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "<ipython-input-77-4cad6975eacd>:18: FutureWarning:\n",
            "\n",
            "The default value of regex will change from True to False in a future version.\n",
            "\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                       Team   xGD\n",
              "0                 Liverpool  21.5\n",
              "1               Aston Villa  10.3\n",
              "2           Manchester City  18.9\n",
              "3                   Arsenal  20.0\n",
              "4                 Tottenham   0.4\n",
              "5                  West Ham  -7.5\n",
              "6                  Brighton   5.4\n",
              "7         Manchester United  -3.4\n",
              "8          Newcastle United   5.7\n",
              "9                   Chelsea  10.6\n",
              "10  Wolverhampton Wanderers  -6.5\n",
              "11              Bournemouth  -4.3\n",
              "12                   Fulham  -9.9\n",
              "13           Crystal Palace  -4.0\n",
              "14        Nottingham Forest  -7.0\n",
              "15                Brentford   7.3\n",
              "16                  Everton   2.4\n",
              "17               Luton Town -19.3\n",
              "18                  Burnley -17.0\n",
              "19            Sheffield Utd -23.7"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-d5c24937-3d6c-45c4-9ec0-73ec4294655a\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Team</th>\n",
              "      <th>xGD</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>Liverpool</td>\n",
              "      <td>21.5</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>10.3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>Manchester City</td>\n",
              "      <td>18.9</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>Arsenal</td>\n",
              "      <td>20.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>Tottenham</td>\n",
              "      <td>0.4</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>West Ham</td>\n",
              "      <td>-7.5</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>Brighton</td>\n",
              "      <td>5.4</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>Manchester United</td>\n",
              "      <td>-3.4</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>Newcastle United</td>\n",
              "      <td>5.7</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>Chelsea</td>\n",
              "      <td>10.6</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10</th>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>-6.5</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>11</th>\n",
              "      <td>Bournemouth</td>\n",
              "      <td>-4.3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>12</th>\n",
              "      <td>Fulham</td>\n",
              "      <td>-9.9</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>13</th>\n",
              "      <td>Crystal Palace</td>\n",
              "      <td>-4.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>14</th>\n",
              "      <td>Nottingham Forest</td>\n",
              "      <td>-7.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>15</th>\n",
              "      <td>Brentford</td>\n",
              "      <td>7.3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>16</th>\n",
              "      <td>Everton</td>\n",
              "      <td>2.4</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>17</th>\n",
              "      <td>Luton Town</td>\n",
              "      <td>-19.3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>18</th>\n",
              "      <td>Burnley</td>\n",
              "      <td>-17.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>19</th>\n",
              "      <td>Sheffield Utd</td>\n",
              "      <td>-23.7</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-d5c24937-3d6c-45c4-9ec0-73ec4294655a')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-d5c24937-3d6c-45c4-9ec0-73ec4294655a button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-d5c24937-3d6c-45c4-9ec0-73ec4294655a');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-117d182f-cd39-457d-b5c0-9c6a49be4fe5\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-117d182f-cd39-457d-b5c0-9c6a49be4fe5')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-117d182f-cd39-457d-b5c0-9c6a49be4fe5 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 77
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import pandas as pd\n",
        "\n",
        "# Fetching data for XGD current season\n",
        "fbref_current_season = pd.read_html('https://fbref.com/en/comps/9/Premier-League-Stats')\n",
        "epltable_current_season = fbref_current_season[0]\n",
        "epltablexGxGc_current_season = epltable_current_season.drop(columns=[\n",
        " 'Last 5',\n",
        " 'Attendance',\n",
        " 'Top Team Scorer',\n",
        " 'Goalkeeper',\n",
        " 'Notes'])\n",
        "\n",
        "epltablexGxGc_current_season = epltablexGxGc_current_season.replace('Newcastle Utd', 'Newcastle United')\n",
        "epltablexGxGc_current_season = epltablexGxGc_current_season.replace('Wolves','Wolverhampton Wanderers')\n",
        "epltablexGxGc_current_season = epltablexGxGc_current_season.replace('Leeds United','Leeds')\n",
        "epltablexGxGc_current_season = epltablexGxGc_current_season.replace('Leicester City','Leicester')\n",
        "epltablexGxGc_current_season = epltablexGxGc_current_season.replace('Manchester Utd','Manchester United')\n",
        "\n",
        "epltablexGxGc_current_season['Squad'] = epltablexGxGc_current_season['Squad'].str.replace(r\"[\\\"\\',]\", '')\n",
        "epltablexGxGc_current_season = epltablexGxGc_current_season.replace('Nottham Forest','Nottingham Forest')\n",
        "\n",
        "epltablexGxGc_current_season.rename(columns={'Squad': 'Team'}, inplace=True)\n",
        "\n",
        "# Creating the XGD current season dataframe\n",
        "xgd_current_season = epltablexGxGc_current_season[['Team', 'xGD/90']]\n",
        "\n",
        "# Fetching data for XGD Last season\n",
        "fbref_last_season = pd.read_html('https://fbref.com/en/comps/9/2022-2023/2022-2023-Premier-League-Stats')\n",
        "epltable_last_season = fbref_last_season[0]\n",
        "epltablexGxGc_last_season = epltable_last_season.drop(columns=[\n",
        " 'Attendance',\n",
        " 'Top Team Scorer',\n",
        " 'Goalkeeper',\n",
        " 'Notes'])\n",
        "\n",
        "epltablexGxGc_last_season = epltablexGxGc_last_season.replace('Newcastle Utd', 'Newcastle United')\n",
        "epltablexGxGc_last_season = epltablexGxGc_last_season.replace('Wolves','Wolverhampton Wanderers')\n",
        "epltablexGxGc_last_season = epltablexGxGc_last_season.replace('Leeds United','Leeds')\n",
        "epltablexGxGc_last_season = epltablexGxGc_last_season.replace('Leicester City','Leicester')\n",
        "epltablexGxGc_last_season = epltablexGxGc_last_season.replace('Manchester Utd','Manchester United')\n",
        "\n",
        "epltablexGxGc_last_season['Squad'] = epltablexGxGc_last_season['Squad'].str.replace(r\"[\\\"\\',]\", '')\n",
        "epltablexGxGc_last_season = epltablexGxGc_last_season.replace('Nottham Forest','Nottingham Forest')\n",
        "\n",
        "epltablexGxGc_last_season.rename(columns={'Squad': 'Team'}, inplace=True)\n",
        "\n",
        "# Creating the XGD Last season dataframe\n",
        "xgd_last_season = epltablexGxGc_last_season[['Team', 'xGD/90']]\n",
        "\n",
        "# Merging the two dataframes\n",
        "merged_df = pd.merge(xgd_current_season, xgd_last_season, on='Team', suffixes=('_current', '_last'), how='outer')\n",
        "merged_df.fillna(0, inplace=True)\n",
        "\n",
        "# Displaying the merged dataframe\n",
        "merged_df_filtered = merged_df.copy()\n",
        "\n",
        "# Drop rows containing \"Leicester\", \"Leeds\", and \"Southampton\" from the filtered DataFrame\n",
        "merged_df_filtered = merged_df_filtered[~merged_df_filtered['Team'].isin(['Leicester', 'Leeds', 'Southampton'])]\n",
        "merged_df_filtered"
      ],
      "metadata": {
        "id": "vR0LGQqMZuC0",
        "outputId": "b443a6e3-1b6d-4c2c-8dcf-50775e2384c7",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 815
        }
      },
      "execution_count": 78,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "<ipython-input-78-e4d7973268db>:19: FutureWarning:\n",
            "\n",
            "The default value of regex will change from True to False in a future version.\n",
            "\n",
            "<ipython-input-78-e4d7973268db>:42: FutureWarning:\n",
            "\n",
            "The default value of regex will change from True to False in a future version.\n",
            "\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                       Team  xGD/90_current  xGD/90_last\n",
              "0                 Liverpool            1.08         0.57\n",
              "1               Aston Villa            0.52        -0.06\n",
              "2           Manchester City            1.00         1.22\n",
              "3                   Arsenal            1.00         0.79\n",
              "4                 Tottenham            0.02         0.20\n",
              "5                  West Ham           -0.38        -0.10\n",
              "6                  Brighton            0.27         0.61\n",
              "7         Manchester United           -0.17         0.45\n",
              "8          Newcastle United            0.29         0.85\n",
              "9                   Chelsea            0.53        -0.08\n",
              "10  Wolverhampton Wanderers           -0.32        -0.61\n",
              "11              Bournemouth           -0.23        -0.67\n",
              "12                   Fulham           -0.50        -0.46\n",
              "13           Crystal Palace           -0.20        -0.23\n",
              "14        Nottingham Forest           -0.35        -0.66\n",
              "15                Brentford            0.39         0.18\n",
              "16                  Everton            0.12        -0.54\n",
              "17               Luton Town           -1.02         0.00\n",
              "18                  Burnley           -0.85         0.00\n",
              "19            Sheffield Utd           -1.18         0.00"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-39e84cea-e54e-48bf-a04a-e77d74bc4be3\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Team</th>\n",
              "      <th>xGD/90_current</th>\n",
              "      <th>xGD/90_last</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>Liverpool</td>\n",
              "      <td>1.08</td>\n",
              "      <td>0.57</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>0.52</td>\n",
              "      <td>-0.06</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>Manchester City</td>\n",
              "      <td>1.00</td>\n",
              "      <td>1.22</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>Arsenal</td>\n",
              "      <td>1.00</td>\n",
              "      <td>0.79</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>Tottenham</td>\n",
              "      <td>0.02</td>\n",
              "      <td>0.20</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>West Ham</td>\n",
              "      <td>-0.38</td>\n",
              "      <td>-0.10</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>Brighton</td>\n",
              "      <td>0.27</td>\n",
              "      <td>0.61</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>Manchester United</td>\n",
              "      <td>-0.17</td>\n",
              "      <td>0.45</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>Newcastle United</td>\n",
              "      <td>0.29</td>\n",
              "      <td>0.85</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>Chelsea</td>\n",
              "      <td>0.53</td>\n",
              "      <td>-0.08</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10</th>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>-0.32</td>\n",
              "      <td>-0.61</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>11</th>\n",
              "      <td>Bournemouth</td>\n",
              "      <td>-0.23</td>\n",
              "      <td>-0.67</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>12</th>\n",
              "      <td>Fulham</td>\n",
              "      <td>-0.50</td>\n",
              "      <td>-0.46</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>13</th>\n",
              "      <td>Crystal Palace</td>\n",
              "      <td>-0.20</td>\n",
              "      <td>-0.23</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>14</th>\n",
              "      <td>Nottingham Forest</td>\n",
              "      <td>-0.35</td>\n",
              "      <td>-0.66</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>15</th>\n",
              "      <td>Brentford</td>\n",
              "      <td>0.39</td>\n",
              "      <td>0.18</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>16</th>\n",
              "      <td>Everton</td>\n",
              "      <td>0.12</td>\n",
              "      <td>-0.54</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>17</th>\n",
              "      <td>Luton Town</td>\n",
              "      <td>-1.02</td>\n",
              "      <td>0.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>18</th>\n",
              "      <td>Burnley</td>\n",
              "      <td>-0.85</td>\n",
              "      <td>0.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>19</th>\n",
              "      <td>Sheffield Utd</td>\n",
              "      <td>-1.18</td>\n",
              "      <td>0.00</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-39e84cea-e54e-48bf-a04a-e77d74bc4be3')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-39e84cea-e54e-48bf-a04a-e77d74bc4be3 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-39e84cea-e54e-48bf-a04a-e77d74bc4be3');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-de50979e-b461-4635-b717-d58d1ac9c4b2\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-de50979e-b461-4635-b717-d58d1ac9c4b2')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-de50979e-b461-4635-b717-d58d1ac9c4b2 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 78
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import matplotlib.pyplot as plt\n",
        "\n",
        "# Create the YoY difference column\n",
        "merged_df_filtered['YoY difference'] = merged_df_filtered['xGD/90_current'] - merged_df_filtered['xGD/90_last']\n",
        "\n",
        "# Sort the DataFrame by YoY difference in descending order\n",
        "merged_df_filtered_sorted = merged_df_filtered.sort_values('YoY difference', ascending=False)\n",
        "\n",
        "# Generate the horizontal bar chart\n",
        "plt.figure(figsize=(10, 6))\n",
        "plt.barh(merged_df_filtered_sorted['Team'], merged_df_filtered_sorted['YoY difference'])\n",
        "plt.xlabel('YoY difference')\n",
        "plt.ylabel('Team')\n",
        "plt.title('YoY Difference in xGD/90')\n",
        "plt.show()"
      ],
      "metadata": {
        "id": "xeGOFjAIe3e7",
        "outputId": "4fa72c77-ab38-422f-c003-53d678056021",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 573
        }
      },
      "execution_count": 79,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1000x600 with 1 Axes>"
            ],
            "image/png": "iVBORw0KGgoAAAANSUhEUgAABCAAAAIsCAYAAAAj/tgkAAAAOXRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjcuMSwgaHR0cHM6Ly9tYXRwbG90bGliLm9yZy/bCgiHAAAACXBIWXMAAA9hAAAPYQGoP6dpAADft0lEQVR4nOzdeXyMV///8VcmCyGLINbUzihCIiISiaD20pbbVkptVVWlCKV22ptaW0Et1dKi1E0VvW9UWtpq6YKqahVdNGqrJILINjO/P/wy304TSyLJFfF+Ph4ezLnOda7PfDImmU/OOZeTzWazISIiIiIiIiKSh0xGByAiIiIiIiIihZ8KECIiIiIiIiKS51SAEBEREREREZE8pwKEiIiIiIiIiOQ5FSBEREREREREJM+pACEiIiIiIiIieU4FCBERERERERHJcypAiIiIiIiIiEieUwFCRERERERERPKcChAiIiIiNxEbG4vZbGbz5s0O7Z9++imPPvoo/v7+mM1mEhMTAdiyZQvt2rWjbt26NGrUyIiQC4xx48bRsmVLo8MQEZECxMXoAERERKTwGzRoEN999x3/+9//KF26tMOxK1eu0L59e8qXL8+GDRswmbL+/UhujGE2m+3/dnZ2xsPDAz8/Pxo2bEjPnj2pUaPGbZ9LfHw8zz//PDVr1mTy5Mm4ubnh7u7OqVOnGD9+PBEREQwePJiiRYvedizJO3/88QdvvfUW+/bt49y5cwBUrFiRkJAQevToQe3ate19o6OjWbRokf1x0aJF8fHxoXbt2rRu3ZpOnTrh5uaW5XWOHz/OI488wsaNG6lfvz7Xrl3j1VdfZefOncTFxfHAAw/Qp08fevXqlencxMRE5syZw0cffURycjL+/v6MGzeOunXr5nI2REQKBiebzWYzOggREREp3P744w86derEQw89xLx58xyOTZs2jffee49NmzY5fCjMizHMZjNNmzbl0UcfxWazcfXqVX766Sd27NjB9evXiYqKon///vb+NpuN1NRUXFxccHZ2Bm7Mfnjqqad46623CAsLs/d99913mTp1Krt27aJy5crZyk9hlJaWhs1mu+kH97z0ySefMHLkSJydnenUqRO1a9fGZDLxyy+/sGvXLv78809iYmKoWLEi8H8FiKlTp1KsWDFSU1M5f/48n3/+OYcOHcJsNrNs2TLKly+f6VrLly9n1apV7Nu3D6vVSu/evTl69Ci9e/emcuXKfP7558TExDBy5EiGDBliP89qtdKrVy+OHz/OwIED8fHxYd26dZw9e5bNmzdTpUqV/EqXiEj+sYmIiIjkg+XLl9tq1apl++yzz+xt3333na127dq22bNn58sYtWrVsk2bNi1Te1xcnK1Hjx62WrVq2fbs2XPLMd5//31brVq1bEeOHHFoj46OttWqVct26dKlO3oud+LatWu5Ntb94vfff7cFBATY2rdvbzt//nym42lpabbVq1fb/vzzT3vbwoULb/q1++CDD2y1a9e2devWLcvr9erVy/bCCy/YbDab7b///a+tVq1ato0bNzr0ee6552z+/v62v/76y9724Ycf2mrVqmX73//+Z2+7dOmSrVGjRrZRo0Zl70mLiNwjtAeEiIiI5Iv+/ftjNpuZNm0aKSkpWCwWpk6dSoUKFRg2bBhffvklvXr1IiAggEaNGvHMM89w6tSpbI2RUz4+PsyfPx8XFxdef/11e/s/94Do06cPL7zwAgBdu3bFbDbb9zqIjo4GIDQ0FLPZbH8MsHfvXvtzCwwMZPDgwZw4ccIhhnHjxhEYGMjp06d56qmnCAwMJCoqCrjx2/JVq1bx8MMP4+/vT1hYGJMnT+by5csOY7Rs2ZKnn36ab775hq5du+Lv789DDz3Eli1bMj3nxMRE/v3vf9OyZUvq1atHs2bNGDt2LHFxcfY+qampLFy4kNatW1OvXj0iIyOZPXs2qampt83pP/eAyMjlypUr2bBhA61ataJevXr861//4siRI7ccy2az0adPH5o0acKlS5cc4uvUqROtWrUiKSkJgDfeeIOkpCRmzpxJmTJlMo3l4uJC3759s5zNkJVHHnmEbt268d1337Fv3z6HY4mJiRw6dIjIyEgAvv32WwAefvhhh34dOnQgJSWFmJgYe9vOnTspXbo0bdq0sbeVLFmS9u3bExMTc0c5FhG516gAISIiIvnCxcWFGTNmEBsby5IlS1izZg0//PADU6dO5dChQwwaNIhLly4xbNgw+vXrx6FDh3j88ceJjY29ozHc3d3vKr4KFSoQHBzMd999x9WrV7PsM2TIEHr06AHA8OHDmT17Nj169ODFF1+kdevWAEydOpXZs2fbH2/ZsoWnn36aYsWKERUVxdChQzl58iS9evVyeG4A6enpDBw4kFKl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rl07/vrrL3bt2uXQd8eOHbRo0SLL/SFERO51mgEhIiIihhs7dixPPfUUPXr0oGvXriQnJ7NmzRo8PT0ZNmxYrl7rt99+44MPPsBms3Ht2jV++uknduzYQVJSEuPGjaNZs2a5di0PDw+mTp3K2LFj6dKlCx06dKBkyZL8+eef7N27l4YNGzJ58uRbjtG4cWN69OjBsmXL+PHHH2natCmurq789ttv7NixgwkTJtCuXbtsxTVw4EB27tzJiBEj+Ne//kXdunW5fPkyH3/8MdOmTaN27do8+uij/O9//2PKlCkcOHCAhg0bYrFY+OWXX9ixYwdvvPGGw11A8tqmTZvYs2cPs2bNsi//mDhxImPGjGHdunX07t0buLHMYe7cuYwePZp27drRqVMnateujc1mIzY2lu3bt2MymbJcQrJz506KFStGWloa58+f5/PPP+fgwYPUrl2b1157zd5v7969FClShJCQkExjPPHEEwQEBFC5cmUuXrzIe++9R1JSEkuXLnWY6dC2bVsCAgIYP348J0+exMfHh3fffReLxcJzzz2X2+kTESkQVIAQERERw4WFhfHGG2+wcOFCFi5ciIuLC8HBwYwZM8a+jCG37Nu3j3379mEymfDw8MDPz4/HHnuMHj16ZFrPnxs6depEmTJlWL58OStXriQ1NZWyZcvSqFEjunTpckdjTJ8+nXr16rF+/XoWLFiAs7MzFStW5JFHHsnRrTCLFy/O2rVriY6O5qOPPuL999+nVKlShIaGUrZsWQBMJhOLFy9m1apVfPDBB3z00Ue4u7vj5+dHnz598nWJwLlz55g5cyYtWrSgc+fO9vZHHnmEXbt2MXfuXJo1a2Z/rbRq1Ypt27bx5ptvsm/fPjZt2oSTkxMVKlQgMjKSxx9/PMvbrE6dOhW4sQGkj48PDz74IP/+97/p1KmTw4yEvXv3EhISkuWSmLp167Jjxw7Onz+Ph4cHYWFhPP/885lex87OzixfvpzZs2fzzjvvkJKSgr+/PzNnzqRatWq5kTYRkQLHyZbdeWgiIiIiIvep9PR0QkJCGDVqlH3WhYiI3BntASEiIiIicocuX75Mv379aN26tdGhiIjcczQDQkRERERERETynGZAiIiIiIiIiEieUwFCRERERERERPKcChAiIiIiIiIikudUgBARERERERGRPKcChIiIiIiIiIjkORej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IiIiBY0KEIVcixYtSE1NZd++fQCcPHmS48eP06FDh0x9L1y4QNWqVZkyZQrLly+ne/fuLF68mCVLlmTq++qrr2IymXj11Vfp2bMnb775Jhs3brQf/+233+jRowe///47EyZM4PXXX6dLly78+eefDuOsXbuW3377jVmzZvHss8+ybds2h+tdvnyZXr168dNPPzFp0iSio6Nxd3fnySef5NKlSwCcPn2aESNGULNmTRYtWsSCBQto3749ly/fWI+6aNEifH19adu2LRs2bGDDhg00b94cgLfeeouJEycSHh7O0qVLeeqpp3j77bez/MA/evRomjRpwtKlS3n00UezzPdXX30FQERExE2/JlmpW7cukydPBmDmzJn2OF1dXencuTNbtmxxKAQlJCQQExOjAoSIiIiIiNwztASjkHN3d6dly5Z8+OGHNG/enO3btxMYGMgDDzyQqW9oaCihoaEA2Gw2goKCSE5OZs2aNQwbNsyhb/369Zk4cSIATZs25cCBA+zcuZPHH38cuPHbfVdXV9599108PDwACAsLy3RNX19f5s2bB9xYonDs2DF27txJVFQUAKtXryYxMZGNGzdSqlQpe5xt27Zl5cqVjB07lmPHjpGWlsakSZPs1/p7AaBOnTq4ublRunRpAgIC7O1Xr15l4cKFDBo0iFGjRtmfi6urK7NmzWLgwIH4+PjY+/fs2ZPBgwffMt/nz58Hbsx0yA4PDw9q1KgBQM2aNfH397cf69atG2+88QafffaZfc+Ibdu2YTKZspzJkh0uLlnXIDNuqaZbqxlD+TeW8m8s5d842c29vkZ5w2Ryuun3Z8k7eu8xlvJvnPzOuQoQ94GOHTsyevRokpOT+e9//0ufPn2y7JeSksKyZcvYtm0bZ8+edVi2ce3aNYoXL25/HB4e7nBu9erV2b9/v/3x/v37adu2rb0gcDP/LEpUr16dDz/80P543759hISE4O3tbV/iYTKZCA4O5vvvvwdu3E3D2dmZqKgounfvTnBwMJ6enre8LsChQ4dISkqiXbt2DstHwsLCSE5O5sSJEzRu3NjenjFrIr9VrlyZxo0bs2nTJnsBYvPmzXeU31sxmZzw8Sl+yz5eXu45Hl/unvJvLOXfWMq/cZR7Y3l4ZL3HlOQPvf6NpfwXfipA3AfCw8NxdXXltddeIzY2lvbt22fZb86cOWzcuJFnn32WevXq4enpSUxMDK+//jopKSkOBYh/fsB3dXUlNTXV/jghIYEyZcrcNjYvL69bjhMfH8/hw4epW7dupnMrVaoEQNWqVVm6dCnLli1j2LBhmEwmwsPDmTx58i1nIsTHxwPQuXPnLI+fPXvW4XHp0qVv+3wy9n04e/YslStXvm3/O9W9e3fGjRtHXFwcFy5c4NixY4wbN+6uxrRabSQmJmV5zNnZhJeXO4mJ17FYrFn2kbyj/BtL+TeW8m+c7OY+o7/krqtXk0lLs9y+o+QqvfcYS/k3Tn6/l6sAcR9wdXWlTZs2rFq1itDQ0Jt+kN6xYwc9evRwWGaQsZFjdpUoUYILFy7k6Ny/8/b2JiIighEjRmQ65ubmZv93s2bNaNasGVevXuXTTz9l5syZjB8/ntWrV99ybLixR0RWd6Pw8/PLdrwZMyY+//zzXC1AtGnThhkzZrB161ZiY2OpVKmSw+yMnEpPv/UbvMVivW0fyTvKv7GUf2Mp/8ZR7o1ltdqUfwPp9W8s5b/wUwHiPtGtWzcuXbpE9+7db9onJSUFV1dX+2OLxeKwHCI7QkND7Xs53M0ygbCwMLZu3Ur16tUpVqzYbft7eHjQoUMHjhw54nDHDVdXV1JSUhz6BgYG4u7uzrlz52jdunWOY/y7Ro0aUb9+fZYuXUrr1q0zzQI5e/YsiYmJ9jth/F1G7v8ZJ9wotjz66KNs3LiRv/76i379+uHk5JQrMYuIiIiIiOQHFSDuE/Xr18/ybhZ/FxYWxsaNG6lRowY+Pj6sW7fOYTlEdgwbNow9e/bQq1cvBg0ahK+vL6dOneL69es89dRTdzxOv3792LZtG0888QR9+/alQoUKxMXF8d1331G2bFn69evH+vXrOXz4MBEREfj6+hIbG8vWrVtp2rSpfZxq1aqxf/9+9u3bh5eXF35+fvj4+DB8+HDmzJnDuXPnaNy4Mc7Ozvzxxx/ExMTY77iRXXPnzqVPnz7861//on///tStW5fU1FS+/vpr1q5dyyuvvJJlAaJKlSo4OzuzadMmXFxccHZ2dtiMsnv37qxevRpnZ2e6dOmS7bhERERERESMpAKE2E2aNIkpU6YwY8YM3N3d6dy5M61bt7bf7SI7qlSpwvr165k3bx7Tpk3DYrFQpUqV295F4p98fHzYsGEDr776KnPnziUhIYFSpUrRoEED+6wFs9nMJ598wsyZM0lISMDX15eHH37YYdnGqFGjmDp1Ks899xzXrl1j5syZdOnShQEDBlC2bFneeust1qxZg4uLC5UqVaJ58+YOs0Gyo3Llyrz//vusWLGCd999l7Nnz+Lm5kadOnV48cUXadGiRZbnlSxZksmTJ/PGG2+wdetW0tPTOX78uP14jRo1qFKlCpUqVbLvNSEiIiIiInKvcLLZbDajgxCR2zt9+jRt2rThtddeo23btnc9nsViJS7uWpbHXFxM+PgUJz7+mtbhGUD5N5bybyzl3zjZzX1G/+fn7+HUmcv5EGHhVr2iN6+Oak5i4nVSUtJvf4LkKr33GEv5N05G7vPtevl2JRHJkfj4eH799VcWL15MhQoVeOihh4wOSUREREREJNtUgBAp4D755BNefPFFKleuzJw5c3Bx0X9bEREpOPzKet6+k9yW8igi9wN9khEp4Lp06aJNJ0VEpMCxWm1YLFaiegcZHUqhYbXasFq1OlpECi8VIEREREQk26xWGwkJSZhMui10bnB2NuHl5Y62ZxORwkwFCBERERHJEf3GXkREskMFCBERERHJdyaTk2ZP/I2zs8noEERE8pwKECIiIiKSr0wmJ0qUKKYP3f9gtdpwclJRRkQKLxUgRERERCRfmUxOODubmLv2W2LPXzE6nALBr6wnUb2DNCtERAo1FSBERERExBCx569w6sxlo8MQEZF8onlvYjiz2XzbP5s3b77lGAcOHGDp0qV33J6bNm/ejNlsJi4uLk+vIyIiIiIici/TDAgx3IYNGxwe9+jRgz59+tCxY0d7W6VKlW45xldffcWbb77JkCFD7qhdRERERERE8pcKEGK4gICATG3ly5fPsl1ERERERETuTVqCIQWe1WplyZIltGzZknr16tGuXTvWr19vPx4dHc2iRYtISkqyL9no06fPTdsznDp1imeeeYagoCACAgIYPHgwp0+fdri22WxmxYoVREdHExYWRkhICOPHjycpKSlTnOfOnWPQoEEEBATQpk0btmzZ4nB8z5499O/fn9DQUBo2bEi3bt349NNPHfpkLOf4/vvvGTBgAA0aNKBt27Z88cUXWK1WFixYQFhYGGFhYcybNw+r1ZoLGRYREREREcl7mgEhBd7s2bN5++23eeaZZwgMDGTPnj1MmTKF9PR0nnjiCbp168a5c+fYvn07q1evBsDDwwMP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eecdpk2blifBSv7q378/Fy9eZOnSpVkev9M7nTz00EN4eXkxevRoLl++TJcuXbLs5+rqSuPGjRk8eDBXr161fyh3dXV1mDEAkJqaitVqdfhAfvXqVT7++OM7iim7UlJSHK5lsVj48MMPb3lOcnIygMN5Bw8e5MyZMw79QkND2blzJ1evXs1ynIy9JxISEvD398/052ZLN0RERERERAqSHO0BkaFRo0Y0atQot2KRAiYyMpJBgwYRHR3NyZMnefjhh/Hx8SE2NpZNmzZx5coVIiMjbzuOq6srjz32GCtXriQ8PJzy5cvbj/3000+88sordOjQgQceeICrV6+ybNkyKlasSKVKlQCoXr06mzZtYvv27VSuXBkfHx/8/Pzw9/dnxYoVlCxZEhcXF5YvX46HhwdxcXG5nouwsDA2btxIjRo18PHxYd26daSmpt7ynICAAIoVK8a0adMYPHgw58+fJzo6mrJlyzr0GzZsGHv27KFXr14MGjQIX19fTp06xfXr13nqqaeoWrUqvXv3ZuzYsQwcOJAGDRqQlpbGb7/9xoEDB1iyZEmuP18REREREZHclq0CRHY2JJTCYcyYMQQGBrJ27VpefPFFrl+/TpkyZQgPD2fgwIF3PE7r1q1ZuXIl//rXvxzafX19KV26NMuWLeP8+fN4enrSqFEj5syZY79rRteuXTly5AgzZswgISGBzp07M2vWLObNm8fkyZMZN24cJUqUoE+fPiQlJfHmm2/mag4AJk2axJQpU5gxYwbu7u507tyZ1q1bM3HixJueU7p0aV577TVmz57N0KFDqVKlCtOmTeONN95w6FelShXWr1/PvHnzmDZtGhaLhSpVqjgs95g4cSJVq1Zlw4YNLF68mOLFi1O1alXatWuX689VREREREQkLzjZ/r624hZq166drQKEk5MTx44dy3FgUri89tprrFu3js8++ww3NzejwxFurLGLi7uW5TEXFxM+PsWJj7+mdXgGUP6NpfwbS/k3jnJvrCJFXPDycuf5+Xs4debybftXr+jNq6Oa6+uVS/T6N5byb5yM3Ofb9bLTOSwsjCpVquRRKFIY/fLLL/z666+sWbOGXr16qfggIiIicgt+ZT1ztZ+ISEGSrQLEY489RqdOnfIqFimEpkyZwuHDh4mIiODpp582OhwRERGRAslqtWG12ojqHXTH51gsVqzWO5rMLCJSINzVJpQit/POO+8YHYKIiIhIgWez2TCZnEhMvI7FcmdT0DOKFiIi9woVIERERERECgiLxao18CJSaJmMDkBERERERERECr87ngHx008/5WUcIiIiIiL3PWdn/X4wp7QkRaTg0xIMERERERGDOTk5YbXa8PJyNzqUe5bFYiUhIUlFCJECTAUIERERERGDmUxOmExOzF37LbHnrxgdzj3Hr6wnUb2DMJmcVIAQKcBUgJD7yiOPPMLx48dZu3YtjRo1MjqcHNm8eTPjx4/nyy+/pGTJkkaHIyIiIrko9vwVTp25bHQYIiJ5QovM5L5x4sQJjh8/DsC2bdsMjkZEREREROT+ogKE3De2bduGyWQiJCSEHTt2kJaWdsv+ycnJ+RSZiIiIiIhI4acChNwXbDYb27dvp0mTJvTv35+EhAQ+++wz+/EDBw5gNpvZs2cPw4cPp2HDhowYMQKAmJgYunTpQmBgII0aNaJLly7s3bvXYfzNmzfTqVMn/P39iYiIYMGCBVgsFofjZrOZY8eOMWjQIAICAmjTpg1btmxxGGfPnj3079+f0NBQGjZsSLdu3fj000/zLjEiIiIiIiL5RAUIuS8cPHiQM2fO0LFjR8LDwylRogTbt2/P1G/SpEk88MADLF68mAEDBnD69GlGjBhBzZo1WbRoEQsWLKB9+/Zcvvx/azPfeustJk6cSHh4OEuXLuWpp57i7bffZsGCBZnGj4qKIjw8nMWLF/Pggw8ybtw4Tp06ZT8eGxtLixYtmD17NtHR0TRs2JDBgwdz4MCBvEmMiIiIiIhIPtEmlHJf2L59O0WKFKFNmza4urrStm1btm7dyrVr1yhevLi9X8uWLRkzZoz9ccZSjUmTJuHh4QFARESE/fjVq1dZuHAhgwYNYtSoUQA0bdoUV1dXZs2axcCBA/Hx8bH37927N7179wYgMDCQvXv3snPnToYOHQrAE088Ye9rtVoJCQnh5MmTvPfee4SEhOR6Xlxcsq5BZtyDXPciN4bybyzl31jKv3GUe2OZTE5Gh1Ao5PT1q9e/sZR/4+R3zlWAkEIvPT2dHTt2EBkZiaenJwCdOnViw4YNfPTRRzz22GP2vs2bN3c412w24+zsTFRUFN27dyc4ONg+BsChQ4dISkqiXbt2pKen29vDwsJITk7mxIkTNG7c2N4eHh5u/3exYsWoUKEC586ds7edO3eOBQsW8MUXX3Dx4kVsthu3kapbt26u5OLvTCYnfHyK37KP7kVuLOXfWMq/sZR/4yj3ci+729evXv/GUv4LPxUgpNDbt28fcXFxtGjRgsTERABq1aqFr68v27dvdyhAlCpVyuHcqlWrsnTpUpYtW8awYcMwmUyEh4czefJkKlSoQHx8PACdO3fO8tpnz551ePz34gWAq6srqampwI0ZD8888wxXrlxh+PDhVK5cGXd3dxYuXJhpnNxgtdpITEzK8pizswkvL3cSE69jsVhz/dpya8q/sZR/Yyn/xlHujeXq6oyHR1Gjw7jn5fT1q9e/sZR/42TkPr+oACGFXsYtN8ePH8/48eMdjsXHx3Pp0iX7YyenzNMfmzVrRrNmzbh69SqffvopM2fOZPz48axevRpvb28AFi1aRLly5TKd6+fnd8dx/v777xw7dozFixfTqlUre3te3o0jPf3Wb/AWi/W2fSTvKP/GUv6NpfwbR7k3hqae5467ff3q9W8s5b/wUwFCCrXr168TExNDq1at6Nu3r8Oxv/76i1GjRvHf//6XWrVq3XYsDw8POnTowJEjR+wbWAYGBuLu7s65c+do3br1XcWakpIC3JgVkeHMmTMcOnSIKlWq3NXYIiIiIiIiRlMBQgq1mJgYkpKS6NOnT5abOL7xxhts377dvoHkP61fv57Dhw8TERGBr68vsbGxbN26laZNmwLg5eXF8OHDmTNnDufOnaNx48Y4Ozvzxx9/EBMTQ3R0NO7udzalqVq1apQrV4558+ZhtVpJSkpi4cKFlClTJucJEBERERERKSBUgJBCbfv27VSoUOGmd5B47LHH+Pe//83p06ezPG42m/nkk0+YOXMmCQkJ+Pr68vDDDzNixAh7nwEDBlC2bFneeust1qxZg4uLC5UqVaJ58+YOsxlux83NjejoaKZPn86IESMoX748zzzzDPv37+fo0aPZe+IiIiIiIiIFjJMtY5t9EbmvWCxW4uKuZXnMxcWEj09x4uOvaR2eAZR/Yyn/xlL+jaPcG6tIERe8vNx5fv4eTp25bHQ495zqFb15dVTzHL9+9fo3lvJvnIzc5xftdiMiIiIiIiIieU5LMERERERECgi/sp637ySZKG8i9wYVIEREREREDGa12rBabUT1DjI6lHuWxWLFatXqcpGCTAUIERERERGD2Ww2TCYnEhOvY7FoDXxOZBRxRKTgUgFCRERERKSAsFis2oRPRAotFSBERERERAoIZ2ftEZ9TmgEhUvCpACEiIiIiYjAnJyesVhteXu5Gh3LPslisJCQkqQghUoCpACEiIiIiYjCTyQmTyYm5a78l9vwVo8O55/iV9SSqdxAmk5MKECIFmAoQcs+Ijo5m0aJF9sdubm74+fnRpUsXBg4ciMmUf1MWo6Ojadq0KQ0bNnRoT0hIYMKECXz11VckJiayePFiWrVqlevXf/nll4mJieHjjz/O9bFFRETEOLHnr3DqzGWjwxARyRMqQMg9pWjRoqxevRqA5ORkDhw4wLx587DZbAwePDjf4li0aBHFihXLVIB46623OHDgAK+88gqlSpWiatWq+RaTiIiIiIhIQaYChNxTTCYTAQEB9sdNmjTh559/ZteuXTctQCQnJ1O0aNF8ie/XX3/FbDbz0EMP3fVY+Rm3iIiIiIhIXtM2u3LPK168OOnp6QDExsZiNpvZvHkzEydOJCQkhG7dugGQmprK/PnzadGiBfXq1aN9+/Zs27bNYaxx48bRsWNHDhw4wGOPPUZAQABdu3bl6NGj9j5msxmA2bNnYzabMZvNHDhwALPZzM6dO/nmm2/s7Rl27drFo48+ir+/P+Hh4cycOZOUlBT78Yzz9+zZw/Dhw2nYsCEjRowA4Pz58wwZMoQGDRoQERHBihUr8iaRIiIiIiIieUgzIOSek1FsyFiCsWvXLp5++mmHPvPnzycyMpJ58+Zhtd64l/aIESM4ePAgzz77LNWrV2fv3r2MGTMGLy8vIiMj7edevHiRl156icGDB+Pp6cm8efMYNmwYH330Ea6urmzYsIEePXrQp08fOnbsCECNGjXYsGEDc+fO5dq1a0yZMsU+XkxMDMOHD+fhhx9m9OjR/PLLLyxYsICzZ8+ycOFCh7gnTZrEI488wuLFi+17WgwdOpTz588zdepUPD09WbFiBWfPnsXFRf99RURERETk3qFPMHJPSUpKom7dug5tHTp0yLT8onbt2rz88sv2x/v37+fjjz9m5cqVhIeHA9C0aVMuXrxIdHS0QwHi8uXLrFmzhpo1awLg7u5O3759+e6772jUqJF9CUj58uUdloMEBATg5eWFk5OTQ/uiRYsICAhg3rx5ADRr1gx3d3cmT57M8ePHHWZKtGzZkjFjxtgff/rppxw9epRVq1YRGhoKQEhICJGRkZQoUSKb2cvMxSXrSVAZ9yDXvciNofwbS/k3lvJvHOXeWCaTk9EhFAo5ff3q9W8s5d84+Z1zFSDknlK0aFHWrFkD3FhS8cMPP7Bw4UImTpzIzJkz7f2aN2/ucN6+ffsoUaIETZo0sc+gAAgLC2Pq1KlYLBacnZ0BKFOmjL34ADdmN8CNpRDZde3aNX788UdeeOEFh/YOHTowefJkvv32W4cCxD/jPnLkCJ6envbiA4CnpydhYWEcO3Ys2/H8ncnkhI9P8Vv20b3IjaX8G0v5N5bybxzlXu5ld/v61evfWMp/4acChNxTTCYT/v7+9sdBQUFYLBZmzZpF//79KVasGAClSpVyOC8+Pp6EhIRMsycyXLx4kXLlygHg5eXlcMzV1ZX/1959R0Vx/W0Af3ZhQRQWQQWxRUFZg4IUEUUUxCgq9tfee++iwV6iUbGLXTHWGJLYwRqixphIEsESYyyoiWCXsijSdvf9w8P83LD0MgjP5xxP3DvtzsMwkS/3zgDQemZDbiUmJkKj0WTqj4mJCQwMDJCQoP2arf+u9+LFC5ibm2fa73/Xyw+1WgOlMknnMj09KeRyIyiV76BSqQt8LMob5i8u5i8u5i8eZi8umUwPxsZ8+HRB5ff65fUvLuYvnozsiwsLEPTRs7a2BgDcv38fDg4OAACJRHsYo6mpKczNzbF9+3ad+9D1Q35hMDExgUQiQWxsrFZ7YmIiUlNTYWpqqtX+335bWFhk2hYAXr9+XSj9S0/P/gavUqlzXIeKDvMXF/MXF/MXD7MXB4eeF46CXr+8/sXF/Es/3unoo3fv3j0AgJmZWZbruLu7IzY2FjKZDPb29pn+GBgY5OmYMpksVyMiKlSogE8//RSnT5/Waj916hSA9yM4smNvb4/ExET8+uuvQltiYiJ++eWXPPWXiIiIiIhIbBwBQR8VtVqNa9euAQDS0tJw69YtbNmyBXXr1kXjxo2zfE5D8+bN0apVK4wYMQIjRoyAQqHAu3fvcP/+ffzzzz9aD6zMDWtra4SFhaFx48YwMjJCnTp1YGxsrHPdCRMmYPz48fDz80Pnzp3x8OFDrF27Fj4+PlrPf9ClZcuWaNCgAWbMmAE/Pz+YmJhg+/btWR6LiIiIiIiopGIBgj4qycnJ6N27NwBAX18fVatWRefOnTFhwgThWQ1Z2bBhA7Zv346DBw8iJiYGJiYmqFevHrp3757nfsyfPx9ffvklRo4cieTkZOzduxdubm46123dujXWr1+PTZs2Ydy4cahYsSJ69eqF6dOn53gciUSCzZs3Y8GCBZg/fz7kcjkGDhyIV69eISwsLM/9JiIiIiIiEotEo9FoxO4EERU/lUqN2Ni3Opfp60thZlYBcXFvOQ9PBMxfXMxfXMxfPMxeXIaG+pDLjTBlzQVExSTkvAFpsaluinXTvPJ9/fL6FxfzF09G9sWFz4AgIiIiIiIioiLHKRhERERERCVEDUsTsbvwUWJuRB8HFiCIiIiIiESmVmugVmvg1z/7N2RR1lQqNdRqzi4nKslYgCAiIiIiEplGo4FUKoFS+Q4qFefA50dGEYeISi4WIIiIiIiISgiVSs2H8BFRqcUCBBERERFRCaGnx2fEiyEj9/zmz9EXRLnDAgQRERERkcgkEgnUag3kciOxu1Km5Td/lUqN+PgkFiGIcsACBBERERGRyKRSCaRSCVYduIro54lid4fyoIalCfz6u0AqlbAAQZQDFiCIiIiIiEqI6OeJiIpJELsbRERFosRMMvv++++hUCjw6NEjrfZ9+/ZBoVBgw4YNWu3x8fGoX78+duzYketjKBQKBAUFFUZ3cyU6OhoKhQKnT58utmMWRHh4OLZu3VqsxyyOr3tBNG7cGIGBgcVyLCIiIiIiotKsxBQgnJ2dAQCRkZFa7RERETAyMsrUHhkZCY1GAxcXviu5sPz222/Ytm1bsR6TX3ciIiIiIqKyocQUIKytrWFubo6IiAit9oiICHTr1g3Xrl2DSqXSajc0NETDhg2Lu6u5kpycLHYXPgql7euelYJcDyqVCmlpaYXYGyIiIiIiouJXYgoQwPvfhn/4g+iTJ0/w7NkzDBo0CKmpqbhz546wLCIiAg0bNoSBgQEA4M6dOxg+fDgcHR3h4uKCSZMm4cmTJ1keKzAwEE2aNMn0g93du3ehUChw6dIloe3ChQvo2bMnHBwc0LRpUyxYsABJSUnC8vDwcCgUCly4cAGTJk2Cs7MzJk+eLCxPSUnB4sWL4erqCg8PD6xYsQLp6enC8qioKEydOhWenp5o1KgROnTogF27dkGt/t87oDOmcxw9ehTz589H48aN0axZM3z11VcAgNDQUPj4+MDZ2RkTJkyAUqnM1L+LFy9iwoQJcHR0hIeHh9Z0i8DAQGzcuBFJSUlQKBRQKBQYOHCgsPz3339Hnz594ODgADc3N8yaNQvx8fGZ+nfs2LFsz1WX/H7d85Jbbvr1ww8/oF27drC3t0ePHj1w48YNnf0tyPWgVCqxcOFCeHh4oGHDhujevTt+/vlnrf0PHDgQo0ePxpEjR+Dj4wN7e3v8/fffUCqVmDt3Llq0aAF7e3t4enpi6tSp2WZLRERERERUUpSoh1A6OzsjLCwMCQkJMDU1RUREBKysrFCnTh0oFApERETAzs4OaWlpuHnzJgYPHgwAePr0KQYMGICaNWti5cqVSElJwdq1azFgwAAcP34cxsbGmY7l6+uLjRs34ueff0arVq2E9tDQUFSqVAnu7u4AgNOnT2Pq1Kno3r07Jk6ciJcvX2L16tVQKpVYu3at1j7nzZuHzp07Y9OmTZBK/1fbWbduHVq3bo1169YhMjISgYGBqFWrFvr27QsAePHiBerUqYNOnTqhQoUKuH37NgIDA5GUlIQJEyZoHWPdunVo27Yt1q9fjx9++AHLly9HbGwsfvvtN8yYMQNv3rzBkiVLsHLlSnzxxReZ+ufr64vAwED88ssvWLt2LUxNTdG3b1/07NkTz549Q0hICPbs2QMAQm5//vknhg4dCjc3N6xfvx6vXr3C6tWrcf/+fXzzzTfQ09PL9bkW5tc9r7ll16/bt29j0qRJaNmyJWbNmoXo6GhMmTIFqampWvspyPWQmpqKoUOH4vXr15gyZQosLS1x/PhxjB49GocPH4ZCoRC2/fPPPxETE4PJkydDLpfDysoKy5Ytw6VLlzB9+nRUr14dL1++xE8//ZRlrrmhr6+7BlnQd2FTwTB/cTF/cTF/8TB7cUmlErG7QAXE75384/1HPMWdeYkqQLi4uECj0eDatWvw9PREZGQknJycALz/ITUyMhIDBgzAX3/9hZSUFOE5ALt370Z6ejp27dqFihUrAgA+/fRT+Pr64siRI1q/yc9gbW0NOzs7hISEZCpAtGvXDnp6etBoNAgICECHDh2wdOlSYZ0qVapg1KhRGDduHOrVqye0e3t7Y8aMGcLn6OhoAICDgwPmzp0LAGjevDnCw8Nx5swZ4YffZs2aoVmzZgAgPN8gOTkZ+/fvz/SDtKOjI2bPng0AaNq0Kc6ePYv9+/fjxx9/hJmZGYD3o0G+//77TAWIpk2b4vPPPwcAtGjRAq9fv8aWLVvQu3dvVK1aFVWrVoVUKoWjo6PWdlu3bkWVKlWwdetWyGQyAICVlRWGDx+OixcvwtvbW1g3p3PVJb9f97zkllO/tm/fDisrK2zatEkoqBgaGmLOnDnCPgp6PRw6dAh///03jh07hrp16wpfh3/++QebN2/G+vXrhXUTEhLw/fffw8rKSmi7efMmOnbsiG7dugltvr6+WeaaE6lUAjOzCtmuw3eRi4v5i4v5i4v5i4fZE+UPv3cKjhmWfiWqANGgQQOUK1cOERER8PT0FJ4DALz/wXv16tUA3g/Dl0gkwg+pf/zxB9zc3ITiAwDY2Nigfv36uHr1qs4CBPD+h7dNmzYhOTkZ5cqVw40bN/D48WPhh7qHDx8iJiYGs2fP1hqu36RJE0ilUvz5559aP3B6eXnpPI6Hh4fWZxsbG1y5ckX4nJKSgm3btuHEiRN4+vSp1rSQt2/fokKF//2Q2Lx5c+Hvenp6qFmzJiQSiVB8AIDatWtDqVRm2rZNmzZa/fDx8cGxY8fw7NkzVKtWTWffgff5duzYUSg+ZJyTXC7H1atXtQoQOZ2rLvn9uuclt5z6df36dXh7e2uN5mjXrp1WAaKg18Ply5dha2uL2rVra23v7u6O48ePa61ra2urVXwAADs7Oxw5cgRVqlRBixYtYGtrqyvOXFOrNVAqk3Qu09OTQi43glL5DiqVWuc6VHSYv7iYv7iYv3iYvbhkMj0YG5cTuxtUAPzeyT/ef8STkX1xKVEFCJlMBnt7e0RERODt27e4c+eO8MOmk5OT8GyAiIgI1K1bF6ampgDez6v/9NNPM+2vUqVKSEjI+j3Kvr6+WLVqFX788Ud06NABISEhqF69uvBmhri4OADA+PHjdW7/9OnTTMfTxcTEJNN5fji0f+XKlfjuu+8wfvx4NGzYECYmJggLC8OWLVuQkpKi9YO0rn2VL18+UxuATNuam5trrVe5cmUAwMuXL7MtQCiVSp3npivfnM5Vl/x+3Qua24f9evnyZaZzNDY2hqGhofC5oNdDXFwc/vrrLzRo0CDTth8WPoD/fW0+NG/ePJiamuKrr75CQEAArKysMGrUKPTr109nf3IjPT37G7xKpc5xHSo6zF9czF9czF88zF4cHHr+8eP3TsExw9KvRBUggPfD8ffs2YOrV6/CwMBAKCxUr14dVapUQUREBCIjI7V+625qaorXr19n2tfr169Ru3btLI9lZWUFZ2dnnDx5Eu3atcOpU6fQpUsXSCTv5+BljKiYP38+HBwcMm1vYWGh9Tlju7w6ffo0evfujVGjRgltFy9ezNe+shMbG6v1+dWrVwDeTyHITnb5ZhQDCio/X/fCzK1KlSqZzvHNmzdISUkRPhf0ejA1NYVCodCavpEVXdeSiYkJ5syZgzlz5uDOnTvYu3cvFi1aBFtbWzRu3DjHfRIREREREYmpxJVanZ2d8e7dOxw4cAD29vbQ19fXWnbs2DG8fPlSGKUAvP/h9cqVK1q/jX/w4AHu3LkjPC8gK76+vrh48SLOnz+PFy9eoGPHjsIya2trVK1aFY8fP4a9vX2mP5aWloVyzikpKVrTG1QqFUJDQwtl3x86d+6c1uczZ87AwsICVatWBZD1aAUXFxeEhYVpTRu4fPkylEpljvnmVn6+7oWZm4ODA86fP6/1ys/Tp09rrVPQ68Hd3R2PHz+GhYWFzu3zQqFQYNasWQDev0WFiIiIiIiopCtxIyCcnJwglUpx8eJFrd9sA++fBxAQEAAAWj/4DhkyBIcPH8awYcMwduxYpKSkYN26dbCystJ6YJ8u7du3x5dffomFCxeibt26qF+/vrBMIpHA398ffn5+SEpKgpeXF4yMjPDkyRNcvHgRU6dORZ06dQp8zu7u7vjuu+9Qt25dmJmZ4euvv85x2kJ+XLlyBStWrEDz5s1x+fJlHDt2DPPnzxfe2GFjY4P09HTs2bMHTk5OMDY2hrW1NcaMGYM+ffpg9OjRGDhwoPAWDAcHB3h6ehZK3/LzdS/M3EaNGoUePXpg/Pjx6Nu3L6KjoxEUFKQ1BaOg10PXrl3xzTffYNCgQRg2bBhq166NxMRE/PXXX0hLS8P06dOz7WOfPn3Qpk0b1KtXD3p6ejh69ChkMhlHPxARERER0UehxBUg5HI56tati7t37wrPAcjg5OQEjUYDCwsL1KxZU2i3srLCvn37EBAQAD8/P0ilUjRv3hz+/v46X8H5IXNzczRt2hQ///yzzjc1tG/fHnK5HFu3bsWJEycAvJ8W0KJFC53z9PNj3rx5WLBgAb744gsYGRmhW7duaNOmjfDWhsKyePFiBAcH4+DBg6hQoQImT56M/v37C8tbtWqFfv36Yfv27Xj9+jVcXV2xb98+NGzYELt27cKaNWswceJElC9fHt7e3vj8888zPbsgv/LzdS/M3Ozs7LB+/XqsWrUKEyZMQL169bB27VoMHz5ca72CXA8GBgbYu3cvAgMDsXXrVrx8+RIVK1aEnZ1drp7j4OzsjKNHjyI6OhpSqRS2trbYunUrbGxs8ny+RERERERExU2i0Wg0YneCilZ4eDgGDRqE77//Ps9D/an0UqnUiI19q3OZvr4UZmYVEBf3lg8CEgHzFxfzFxfzFw+zF5ehoT7kciNMWXMBUTFZP0SdSh6b6qZYN82L3zsFwPuPeDKyL7bjFduRiIiIiIgoWzUsTXJeiUoUfs2Ico8FCCIiIiIikanVGqjVGvj1L5wHfFPxUqnUUKs5sJwoJyxAlAFubm64c+eO2N0gIiIioixoNBpIpRIole+gUnEIenHT05NCLjfKd/4ZBSQiyh4LEEREREREJYRKpeYceBExf6KixQIEEREREVEJoacnFbsLZVJG7kWVP0dIEL3HAgQRERERkcgkEgnUag3kciOxu1KmFVX+KpUa8fFJLEJQmccCBBERERGRyKRSCaRSCVYduIro54lid4cKUQ1LE/j1d4FUKmEBgso8FiCIiIiIiEqI6OeJiIpJELsbRERFgpPMSqDAwEAoFAr0798/07KlS5fC29s7z/vcvXs3Ll68mOt2b29vLF68OM/HyY3w8HAoFArcvHmzSPZfEIcPH4ZCocj0x8nJSeyuCW7fvo3AwEC8e/dO7K4QERERERHlGkdAlGB//PEHwsPD4ebmVuB97d27F15eXvD09MxV+8aNGyGXywt83I/Vzp07YWJiInyWSktOre727dvYuHEj+vfvDyMjzhMlIiIiIqKPAwsQJVT58uVRt25dbN68uVAKEHllZ2dX7McsSRo0aABzc/NC219qair09fVLVCGDiIiIiIioOPGnoRJs3LhxuHLlCiIiIrJdLyYmBpMmTYKLiwscHR0xfPhw3LlzR1ju7e2NmJgYHDhwQJhScPjw4SzbM7b5cAqGv78/OnbsiPDwcHTt2hWOjo7o0aMH/vzzT62+JCYmws/PD05OTmjWrBnWrFmDXbt2QaFQZOq3UqnE9OnT4eTkhFatWmHHjh1ayyMjIzFmzBh4eHjA0dERXbp0wdGjR7XWyZjOcenSJUyePBlOTk7w8vLCiRMnAPxvhEeTJk0wZ84cpKam5hx8DnLKG/hffjt27ECrVq3g4OCA+Ph4AO+neXTq1An29vZo0aIF1q5dC5VKpZXL3Llz0aJFC9jb28PT0xNTp04Vtp01axYAoFmzZlAoFPmakkNERERERFTcOAKiBGvVqhXs7OywadMmBAUF6VznzZs3GDhwIKRSKRYtWgRDQ0Ns2bIFAwYMwPHjx2FlZYWNGzdi1KhRcHZ2xrBhwwAAtWrVQv369XW2Z+Xly5dYsmQJRo0aBRMTE6xevRoTJkzAuXPnIJPJAACzZs3ClStXMGPGDFSvXh3ffvstbt26pXN/CxYsQJcuXbBp0yb88MMPWLVqFRQKBVq2bAkAePLkCZydndG3b18YGBggIiICc+fOhUajQbdu3bT2tXDhQnTr1g29evXCt99+i5kzZ+Lvv//GvXv3sGjRIjx+/BjLly9HzZo1MWbMmByzV6vVSE9PFz7r6elBIpHkKu8MZ8+exSeffII5c+ZAKpWifPny+Oqrr7By5UoMHjwY/v7+iIqKEgoQfn5+AIBly5bh0qVLmD59OqpXr46XL1/ip59+AgB4eXlh7Nix2LJlizBNxMDAIMfzISIiIiIiEhsLECXc2LFjMXHiRNy4cQMODg6Zlh8+fBhPnjxBaGgobGxsAACurq5o1aoV9uzZA39/f9jZ2cHAwACVK1eGo6OjsK25ubnO9qwkJCRg//79qFevHgDAyMgIgwYNwvXr19G4cWPcv38f586dw4oVK9C1a1cAQIsWLdC+fXud+2vbti0mTpwI4P1v8y9cuIAzZ84IBQhfX19hXY1GA1dXVzx//hzBwcGZChDt2rXDhAkTAAAODg44d+4cQkNDtYojv/32G06fPp2rAkTz5s21Pk+ePBnjxo3LVd4Z0tLSsGPHDpQvXx7A+2LRhg0bMGLECEybNk04jkwmw/LlyzF8+HCYmZnh5s2b6Nixo9Y5ZmRhbm4uFIkKY5qIvr7uQVB6elKt/1LxYv7iYv7iYv7iYfbikkolYneBihi/t7LG+494ijtzFiBKuDZt2sDW1habNm3Ctm3bMi3/448/UK9ePeGHYQCoWLEi3N3dcfXq1ULti4WFhVB8AIC6desCAJ4/fw4AwlstWrduLawjlUrRqlUrfPXVV5n25+HhIfxdIpHAxsYGz549E9oSEhIQGBiIsLAwPH/+XJimULFixUz7+rBgYGJiAnNzczRu3FgoPgBA7dq1ER4enqtz3b17N4yNjYXPlpaWAPKWt5ubm1B8AN5PKUlKSkK7du20Rle4u7sjOTkZ9+7dQ5MmTWBnZ4cjR46gSpUqaNGiBWxtbXPV57ySSiUwM6uQ7TpyOR9yKSbmLy7mLy7mLx5mT1Q0+L2VM2ZU+rEAUcJJJBKMGTMG06ZN0zmVQalUonLlypnaK1WqhHv37hVqX/77VoyMH+5TUlIAvJ+iIZPJtN4eASDL39L/dz2ZTIbExEThs7+/PyIjIzF+/HjUrVsXxsbGOHjwIE6dOpXjvgwMDHT2N7fPgFAoFDr7nZe8K1WqpPU5Li4OADKN3sjw9OlTAMC8efNgamqKr776CgEBAbCyssKoUaPQr1+/XPU9t9RqDZTKJJ3L9PSkkMuNoFS+g0qlLtTjUs6Yv7iYv7iYv3iYvbhkMj0YG5cTuxtUhPi9lTXef8STkX1xYQHiI9C+fXsEBgZi8+bNqFatmtYyU1NTPHz4MNM2r1+/hqmpaXF1EQBQpUoVpKWlITExUasgEBsbm+d9paSk4MKFC/D398fAgQOF9q+//rpQ+ppfeclbItEeSpmxfOPGjahatWqmfdSoUQPA+2LKnDlzMGfOHNy5cwd79+7FokWLYGtri8aNGxfWqQAA0tOzv8GrVOoc16Giw/zFxfzFxfzFw+zFwaHnpR+/t3LGjEo/3uk+AlKpFGPGjEFYWFimty24uLjg7t27ePDggdCWkJCAX375BS4uLkKbTCYTRip8KKv2/GjYsCEAICwsTGhTq9U4f/58nveVmpoKtVqtNYXizZs3+PHHHwve0QLIbd66ODk5wcjICM+ePYO9vX2mP2ZmZpm2USgUwlsvoqKiAPxv5ElhvNGDiIiIiIiouHAExEeiU6dO2LRpE8LDw1G9enWhvXv37ti9ezdGjx6NKVOmCG9l0NfXx+DBg4X1rK2tceXKFVy+fBlyuRw1atSAmZlZlu35Ua9ePbRp0wZLlizBu3fvUK1aNXz77bdITk7ONBogJyYmJrC3t8eOHTtgbm4OfX19bN++HcbGxvkaUVFYcpu3LnK5HJMmTcLKlSvx7NkzNGnSBHp6enj8+DHCwsIQGBgIIyMj9OnTB23atEG9evWgp6eHo0ePQiaTCaMfMp4/ceDAAXz22WcoV66cztecEhERERERlSQcAfGR0NPTw6hRozK1GxsbY9++fahfvz7mzZsHPz8/mJqaYv/+/VqvhJw2bRqqVq2KiRMnokePHsKohKza8+vLL7+El5cXAgICMHPmTNSsWRPdunXL9IyG3Fi9ejVq1aoFf39/LFmyBD4+PsLbNcSS27yzMmzYMCxbtgzh4eGYNGkSJk+ejG+//Rb29vbCyAZnZ2ccPXoUkydPxqRJkxAdHY2tW7cKhQc7OztMnDgRx48fR58+fTB27NgiPWciIiIiIqLCINFoNBqxO0GlW//+/SGVSrFv3z6xu0IfUKnUiI19q3OZvr4UZmYVEBf3lvPwRMD8xcX8xcX8xcPsxWVoqA+53AhT1lxAVEyC2N2hQmRT3RTrpnnxeysbvP+IJyP7YjtesR2JyoQzZ87g6dOnsLW1xbt37xASEoI//vgDmzZtErtrRERERCVeDcu8jxqlko1fU6L/YQGCClX58uVx7NgxPHr0CGlpabC2tsbKlSvx2Wefid01IiIiohJLrdZArdbAr3/2D7Wmj5NKpYZazYHnRCxAUKFq0aIFWrRoIXY3iIiIiD4qGo0GUqkESuU7qFQcgl7c9PSkkMuNiiz/jAITUVnHAgQRERERUQmhUqk5B15EzJ+oaLEAQURERERUQujp8SV1YsjInflnjyM5qKBYgCAiIiIiEplEIoFarYFcbiR2V8o05p89lUqN+PgkFiEo31iAICIiIiISmVQqgVQqwaoDVxH9PFHs7hBlUsPSBH79XSCVSliAoHxjAYKIiIiIqISIfp6IqJgEsbtBRFQkOMmJci0wMBAKhUL4Y29vj/bt22PHjh1Qq/mwnoIKDAxEREREpnaFQoGgoCARekRERERERFR4OAKC8qRcuXLYs2cPACA5ORnh4eFYvXo1NBoNRo0aJXLvPm4bN25E+fLl4ezsLHZXiIiIiIiICh0LEJQnUqkUjo6OwuemTZvi7t27OHv2bLEUIJKTk1GuXLkiPw4REREREREVLk7BoAKrUKEC0tPThc/x8fGYNWsW3Nzc4ODggD59+uD333/X2sbb2xuLFy/Wavvhhx+gUCgQHR0NAIiOjoZCocDhw4cxd+5cuLm5oWfPngDeT0vYsWMHAgMD4e7uDjc3N8yaNQtJSUla+3z27Bn8/PyEvvTv3x9//vmnzr7s3r0bnp6ecHJygr+/P1JTU3H79m306dMHjo6O6NGjB+7cuaO1bUpKCpYtWwYPDw/Y29ujS5cuOHfunNY6AwcOxOjRo7Xabt++DYVCgfDwcOF8ACAgIECY4pKxDADUanWO50pERERERFSScQQE5VlGsSFjCsbZs2eFH7BVKhVGjhyJx48fw8/PD5UrV8a+ffswdOhQfPPNN2jYsGGej7dmzRp4enpi9erVWs+aOHDgAFxcXLB8+XI8evQIAQEBqFSpEvz8/AAACQkJ6NevH8qXL4958+bBxMQE+/btw+DBg3H27FlUqlRJ2FdYWBjq1auHxYsX4/Hjx1i+fDlkMhmuXbuGIUOGoHLlyli1ahUmT56MkydPQip9X7vz8/PDpUuXMGXKFFhbW+PYsWOYOHEiNm3ahNatW+f6HIODg9G7d28MHDgQHTt2BADUrVs31+dKRERERERU0rEAQXmSlJSEBg0aaLV16NBBmH5x4cIF3LhxAzt37kSLFi0AAB4eHmjbti22bduGwMDAPB+zfv36WLp0aab2KlWqYPXq1QCAli1b4q+//sKZM2eEH8r37NkDpVKJ7777Tig2NGvWDD4+PggKCsLMmTO19rd582YYGBgAAH777Td8++232LFjB1q2bAng/SiEMWPG4O7du6hfvz7+/vtvnD17FosWLUKfPn2EfsTExOS5AJExrcXKykpriktuzzW/9PV1D4LS05Nq/ZeKF/MXF/MXF/MXD7MXl1QqEbsLRLlSFPcI3n/EU9yZswBBeVKuXDns378fAJCamopbt25hw4YNmDt3LpYtW4Y//vgDxsbGQvEBAGQyGdq0aYOQkJB8HdPLy0tnu7u7u9ZnGxsbhIaGCp8vX74MNzc3mJqaCqM2pFIpXF1dcfPmTa1tXV1dheIDANSuXRtSqRRNmzbVagOAp0+fon79+rh69SoAoF27dlr7at++PZYtW4akpCSUL18+byebhZzONT+kUgnMzCpku45cblSgY1DBMH9xMX9xMX/xMHsiyk5R3iN4/yn9WICgPJFKpbC3txc+u7i4QKVSYfny5Rg6dCiUSqXW1IYMlStXRkJC/t5prWt/ACCXy7U+y2QypKamCp/j4uJw7dq1TCM2AKBWrVo57qtcuXJaRQmZTAbg/XMfgPdTPGQyGSpWrKi1beXKlaHRaJCYmFhoBYiczjU/1GoNlErdz5HQ05NCLjeCUvkOKhVfsVrcmL+4mL+4mL94mL24ZDI9GBvzQdtU8hXFPYL3H/FkZF9cWICgArO2tgYA3L9/H6ampnj9+nWmdV69egVTU1Phs4GBAdLS0rTWyapAIZHkb0iiqakpWrRogcmTJ2da9mFhIb9MTU2RlpaGhIQErXN79eoVJBIJTExMhGPl9lyLW3p69jd4lUqd4zpUdJi/uJi/uJi/eJi9ODj0nD4WRXmP4P2n9OOdjgrs3r17AAAzMzO4uLjgzZs3+Pnnn4Xl6enp+OGHH+Di4iK0Va1aFVFRUVr7uXz5cqH2y93dHVFRUbCxsYG9vb3Wn4y3ThRExvmcPn1aq/306dOws7MTRj9UrVoVDx8+hEajEdbRda4ymUwYXUFERERERFTacAQE5Ylarca1a9cAAGlpabh16xa2bNmCunXronHjxpBKpXBwcMCMGTMwffp04S0YL168wIYNG4T9+Pj4YOHChdi4cSOcnJxw8eJFYb+FZciQIThx4gQGDBiAQYMGoVq1aoiNjcX169dhaWmJIUOGFGj/9evXR9u2bbF8+XIkJyejTp06OH78OCIjI7F582ZhPR8fH3z//ff44osv8NlnnyEiIgJnzpzJtD9ra2uEhYWhcePGMDIyQp06dWBsbFygPhIREREREZUULEBQniQnJ6N3794AAH19fVStWhWdO3fGhAkThGckbN++HQEBAVi5cqXw1oxdu3ZpvYKzZ8+e+Pfff3Hw4EHs3r0bHTp0wLRp0zB9+vRC66uZmRmCg4Oxbt06rFq1CvHx8ahUqRIaNWqENm3aFMoxVq5ciTVr1mDHjh2Ij4+HtbU1NmzYAG9vb2Gdli1bYsaMGdi/fz+OHDmCli1bYtGiRZkKIPPnz8eXX36JkSNHIjk5GXv37oWbm1uh9JOIiIiIiEhsEs2H48KJqMxQqdSIjX2rc5m+vhRmZhUQF/eW8/BEwPzFxfzFxfzFw+zFZWioD7ncCFPWXEBUTMl4VhTRh2yqm2LdNK8iuUfw/iOejOyL7XjFdiQiIiIiIspWDUsTsbtApBOvTSoMLEAQEREREYlMrdZArdbAr79LzisTiUSlUkOt5gB6yj8WIIiIiIiIRKbRaCCVSqBUvoNKxSHoxU1PTwq53Ij55yCjUEaUXyxAEBERERGVECqVmnPgRcT8iYqWVOwOEBEREREREVHpxxEQREREREQlhJ4efz8ohozcmb84/ps/p3qUXixAEBERERGJTCKRQK3WQC43ErsrZRrzF1dG/iqVGvHxSSxClEIsQBARERERiUwqlUAqlWDVgauIfp4odneIRFPD0gR+/V0glUpYgCiFWICgj05gYCB27dqFyMjITMuio6PRunVrrF+/Hu3atROhd8UjuwyIiIjo4xX9PBFRMQlid4OIqEiwAEGlioWFBYKDg1G7dm2xu0JEREREREQfYAGCShUDAwM4OjoW2/GSk5NRrly5YjseERERERHRx4qPeaVSJTo6GgqFAqdPnwYA+Pv7o2PHjpnWO3/+PBQKBR48eCC0HT58GJ06dYK9vT1atGiBtWvXQqVSaS1XKBSIjIzE0KFD4ejoiICAAACAQqHA9u3bERAQgKZNm8LJyQn+/v548+aN1nFjYmIwadIkuLi4wNHREcOHD8edO3e01lGr1di8eTO8vb3RsGFDtGvXDt98802hZURERERERCQGjoCgUs3X1xdHjhzB3bt3YWtrK7SHhISgQYMGsLa2BgB89dVXWLlyJQYPHgx/f39ERUUJBQg/Pz+tfU6fPh29e/fG6NGjYWT0vycl79u3Dw0aNMCKFSsQHR2NVatWISUlBWvXrgUAvHnzBgMHDoRUKsWiRYtgaGiILVu2YMCAATh+/DisrKwAAAEBAdi7dy/Gjh0LJycnXLhwAQsWLEB6ejoGDBhQ1JEREREREREVCRYgqFRr1qwZzM3NERoaKhQg3r17hx9//BETJkwA8L4wsGHDBowYMQLTpk0DADRv3hwymQzLly/H8OHDYWZmJuyzT58+GDVqVKZjGRgYYNOmTdDT0wMAGBoaYu7cuZgwYQJsbGxw+PBhPHnyBKGhobCxsQEAuLq6olWrVtizZw/8/f0RGxuL/fv3Y/jw4Zg4cSIAwMPDA3Fxcdi0aRP69u0r7L8w6OvrHgTFd2GLi/mLi/mLi/mLh9mLSyqViN0FohKF96LiUdw5swBBpZq+vj7atWuHkydPYurUqQDeT7949+4dfH19AQCRkZFISkpCu3btkJ6eLmzr7u6O5ORk3Lt3D02aNBHavby8dB6rVatWWsWBdu3aYc6cObh58yZsbGzwxx9/oF69ekLxAQAqVqwId3d3XL16FQBw48YNpKWlZXqDR/v27RESEoJHjx5pbV8QUqkEZmYVsl2H78IWF/MXF/MXF/MXD7MnopKA96LSiQUIKvV8fX3x9ddf48aNG3BwcEBoaCgaN26MqlWrAgDi4uIAAN26ddO5/dOnT7U+V65cWed6lSpV0vpsbGwMQ0NDvHjxAgCgVCp1blupUiXcu3cPAJCQkKDzGBmf4+PjszzPvFKrNVAqk3Qu09OTQi43glL5DiqVutCOSbnD/MXF/MXF/MXD7MUlk+nB2JgPtibKwHtR8ci49xcXFiCo1HNxcYGVlRVCQ0NRp04d/PTTT5g9e7aw3NTUFACwceNGoSjxoRo1auTqOK9fv9b6/ObNG6SkpMDCwkI4zsOHD3Vul9GHihUrCm2WlpbCOq9evdJaXljS07O/qatU6hzXoaLD/MXF/MXF/MXD7MXB4eZE2ngvKp14p6NSTyKRoEOHDjh16hTOnDkDtVoNHx8fYbmTkxOMjIzw7Nkz2NvbZ/rz4fMfsnP+/Hmtt2acPn0aEokE9vb2AN4XQu7evav15o2EhAT88ssvcHFxAQDY29tDJpMJb/HIcOrUKVSqVAm1a9fObwxERERERESi4ggI+iipVKpMP6QDmadBZOjYsSOCgoKwfv16NG/eHObm5sIyuVyOSZMmYeXKlXj27BmaNGkCPT09PH78GGFhYQgMDNR620VWUlNTMX78ePTt21d4C4aPj4/wzIbu3btj9+7dGD16NKZMmSK8BUNfXx+DBw8GAJibm2PAgAEICgqCgYEBHB0dcfHiRYSEhGDevHmF+gBKIiIiIiKi4sQCBH2UUlJSMHny5EztutoAwM7ODnXq1MHDhw8zvVYTAIYNGwZLS0t89dVX2L9/P/T19VGrVi14eXlBJpPlqk8DBw5EbGwsZs6cidTUVLRp0wbz588XlhsbG2Pfvn1Yvnw55s2bB7VaDWdnZ+zfv194BScAzJw5EyYmJvj++++xdetWVK9eHYsWLUKfPn1y1Q8iIiIiIqKSSKLRaDRid4LoY6dQKDBz5kwMHz5c7K7kmkqlRmzsW53L9PWlMDOrgLi4t5x7JwLmLy7mLy7mLx5mLy5DQ33I5UaYsuYComISxO4OkWhsqpti3TQv3ouKSca9v7jwGRBEREREREREVOQ4BYOIiIiIqISoYWkidheIRMXvgdKNBQiiQnDnzh2xu0BEREQfMbVaA7VaA7/+LmJ3hUh0KpUaajWfFFAasQBBRERERCQyjUYDqVQCpfIdVCrOey9uenpSyOVGzF8k/80/oyBHpQ8LEEREREREJYRKpeaD90TE/MXF/Es/FiCIiIiIiEoIPT0+I14MGbkzf3GImT9HWxQvFiCIiIiIiEQmkUigVmsglxuJ3ZUyjfmLS4z8VSo14uOTWIQoJixAEBERERGJTCqVQCqVYNWBq4h+nih2d4jKhBqWJvDr7wKpVMICRDFhAYJKnM6dO+POnTs4cOAAGjdunKdto6OjceTIEfTq1QuWlpZF1ENtu3btQkBAAM6fPw8rK6tMy+/cuYPOnTtj6dKlkEqlmDVrFn799VeYm5sjOjoarVu3xvr169GuXTsAgLe3N7y8vDB//vxi6T8RERGVHNHPExEVkyB2N4iIigQnOVGJcu/ePeGVlidOnMjz9jExMdi4cSNevHhR2F3Lkq+vLyQSCUJDQ3UuDw0NhYGBAXx8fODl5YXg4GDI5fJi6x8REREREVFJwAIElSgnTpyAVCqFm5sbTp8+jbS0NLG7lCNLS0u4uroiJCRE5/LQ0FB4eXnBxMQE5ubmcHR0hL4+Bx8REREREVHZwgIElRgajQYhISFo2rQphg4divj4eFy6dElrnbS0NKxYsQJeXl5o2LAhPDw8MGbMGCQmJiI8PByDBg0CAPTo0QMKhQIKhULYNiYmBpMmTYKLiwscHR0xfPhwYbRFBm9vbyxevBgHDhxAq1at4OLignHjxiE2Njbbvnfq1Am3b99GVFSUVntkZCSio6PRqVMnAMDhw4ehUChy3N9/9zFmzBh4eHjA0dERXbp0wdGjR3O9PRERERERUUnAAgSVGBEREYiJiUHHjh3h4eGBihUrZhpVsG3bNnzzzTcYOXIkdu3ahXnz5sHCwgKpqalo0KCB8NyEZcuWITg4GMHBwQCAN2/eYODAgfjrr7+waNEirFy5EnFxcRgwYACePn2qdYwff/wRP/74I+bPn485c+bg999/xxdffJFt3318fCCTyTL1NyQkBCYmJvDy8sp3Lk+ePIGzszOWLl2KLVu2oG3btpg7dy6OHDmS730SEREREREVN44DpxIjJCQEhoaGaNu2LWQyGXx8fHD8+HG8ffsWFSpUAADcvHkTHh4e6N+/v7Cdj4+P8Pe6desCAOrVqwd7e3uh/fDhw3jy5AlCQ0NhY2MDAHB1dUWrVq2wZ88e+Pv7C+tqNBps2bIFBgYGAN6PnNi2bRvUajWkUt01O7lcDk9PT4SGhmLy5MkAAJVKhdOnT6Nt27bCvvLD19dXq2+urq54/vw5goOD0a1bt3zvFwD09XWfD9+FLS7mLy7mLy7mLx5mLy6pVCJ2F4jKrLJ83yvuc2cBgkqE9PR0nD59Gp6enjAxMQHwflpDcHAwzp07h65duwIA7OzsEBQUhMDAQHh6eqJhw4ZZFgU+9Mcff6BevXpC8QEAKlasCHd3d1y9elVrXVdXV62CgY2NDdLS0vD69WtUqVIly2N07NgRU6ZMwc2bN2Fvb48rV67g1atXwvSL/EpISEBgYCDCwsLw/PlzqFQqof8FIZVKYGZWIdt1+C5scTF/cTF/cTF/8TB7IipreN8rPixAUIlw+fJlxMbGolWrVlAqlQAAW1tbVKlSBSEhIUIBYuzYsZBKpThy5Ag2btwIc3Nz9O/fH+PHj4dEkvVvDpRKJSpXrpypvVKlSrh3755W23/fUJFRjEhJScn2HLy9vVGhQgWEhITA3t4eISEhsLCwgJubW47nnx1/f39ERkZi/PjxqFu3LoyNjXHw4EGcOnWqQPtVqzVQKpN0LtPTk0IuN4JS+Q4qlbpAx6G8Y/7iYv7iYv7iYfbiksn0YGxcTuxuEJVJZfm+l3HvLy4sQFCJkPHKzVmzZmHWrFlay+Li4vD69WtUqlQJBgYGmDhxIiZOnIh//vkHhw4dQmBgIGrUqCEUKXQxNTXFw4cPM7W/fv0apqamhXIOGdNHTp48ialTp+LcuXPo0aNHrkZoZCUlJQUXLlyAv78/Bg4cKLR//fXXhdFlpKdnf6NVqdQ5rkNFh/mLi/mLi/mLh9mLoywPAScSG+97xYd3OhLdu3fvEBYWhs8++wx79+7V+rNmzRqkp6fj5MmTmbb75JNPMG3aNFSsWBEPHjwAAMhkMgCZRyu4uLjg7t27wnrA+6kNv/zyC1xcXArtXDp27IgXL15g5cqVSExMLPD0i9TUVKjVauG8gPcP1Pzxxx8L2lUiIiIiIqJixREQJLqwsDAkJSVh4MCBOqcr7Ny5EyEhIRg4cCDGjRuHBg0awM7ODkZGRjh//jwSEhLQtGlTAEDt2rWhp6eHQ4cOQV9fH3p6erC3t0f37t2xe/dujB49GlOmTIGhoSG2bNkCfX19DB48uNDOpVmzZqhcuTIOHDgAa2trNGjQoED7MzExgb29PXbs2AFzc3Po6+tj+/btMDY2ztOrPImIiIiIiMTGERAkupCQEFSrVi3LZyV07doV165dw7///gtnZ2f8+OOPmDFjBsaOHYvff/8dq1atgru7OwDA3Nwc8+fPx++//47+/fujR48eAABjY2Ps27cP9evXx7x58+Dn5wdTU1Ps378fVlZWhXYuenp6aN++PTQaDTp27Fgo+1y9ejVq1aoFf39/LFmyBD4+PtlONyEiIiIiIiqJJBqNRiN2J4io+KlUasTGvtW5TF9fCjOzCoiLe8v5cCJg/uJi/uJi/uJh9uIyNNSHXG6EKWsuIComQezuEJUJNtVNsW6aV5m+72Xc+4sLR0AQERERERERUZHjMyCIiIiIiEqIGpYmYneBqMzg91vxYwGCiIiIiEhkarUGarUGfv0L7+1cRJQzlUoNtZpPJSguLEAQEREREYlMo9FAKpVAqXwHlapszkUXk56eFHK5EfMXiZj5ZxT/qHiwAEFEREREVEKoVOoy+zC8koD5i4v5l34sQBARERERlRB6enxGvBgycmf+4viY8ueIiYJhAYKIiIiISGQSiQRqtQZyuZHYXSnTmL+4Pob8VSo14uOTWITIJxYgiIiIiIhEJpVKIJVKsOrAVUQ/TxS7O0SkQw1LE/j1d4FUKmEBIp9YgCAiIiIiKiGinyciKiZB7G4QERWJkj/JhqiAwsLCMGzYMDRp0gQNGzaEt7c35s+fj4cPHwIAFAoFgoKCCuVY3t7eWLx4caHsi4iIiIiIqDRhAYJKtVWrVmHcuHEwNjbGF198ga+++grjx4/H/fv3MXXqVLG7R0REREREVGZwCgaVWhcvXsSOHTswbtw4TJ48WWh3dXXF//3f/+H8+fMi9o6IiIiIiKhs4QgIKrV27dqFypUrY9y4cTqXt2rVSvi7Wq1GYGAg3N3d4ebmhlmzZiEpKUlr/WfPnsHPzw9ubm5wcHBA//798eeff2bbh3v37mHkyJFwc3NDo0aN4OPjgx07dmitExkZiUGDBsHR0REuLi6YPn06Xr9+rbXOqlWr0KlTJzg5OaFFixaYNm0aXrx4kZc4iIiIiIiIRMUREFQqpaenIyIiAm3btoVMJstx/QMHDsDFxQXLly/Ho0ePEBAQgEqVKsHPzw8AkJCQgH79+qF8+fKYN28eTExMsG/fPgwePBhnz55FpUqVdO53zJgxqFy5MpYuXQpjY2P8+++/ePbsmbA8MjISAwcOhKenJ9auXYt3795h3bp1GDduHIKDg4X1Xr9+jdGjR8PCwgKxsbH46quvMHDgQISGhkJfn9/GRERERERU8vEnFyqV4uPjkZqaimrVquVq/SpVqmD16tUAgJYtW+Kvv/7CmTNnhALEnj17oFQq8d133wnFhmbNmsHHxwdBQUGYOXNmpn3GxsYiOjoac+bMgbe3NwCgadOmWuusXr0aDRs2xMaNGyGRSAAAtra26NixIy5evAhPT08AwLJly4RtVCoVnJyc0LJlS1y5cgUeHh55iUaLvr7uQVB6elKt/1LxYv7iYv7iYv7iYfbikkolYneBiHKpNN0ni/tcWICgUi3jh/qcuLu7a322sbFBaGio8Pny5ctwc3ODqakp0tPTAQBSqRSurq64efOmzn2amZmhevXqWLNmDRISEtCsWTNUrVpVWP7u3TtERERg5syZUKlUQnvt2rVhZWWFmzdvCgWIixcvYsuWLbh37x7evHkjrPvo0aN8FyCkUgnMzCpku45cbpSvfVPhYP7iYv7iYv7iYfZERNnjfTL/WICgUqlixYowNDTEkydPcrW+XC7X+iyTyZCamip8jouLw7Vr19CgQYNM29aqVUvnPiUSCYKCgrB27VosXrwYSUlJaNCgAWbNmgVXV1colUqoVCosW7ZMa4RDhqdPnwIAbty4gXHjxqF169YYOXIkKlWqBIlEgl69eiElJSVX56eLWq2BUpmkc5menhRyuRGUyndQqdT5PgblD/MXF/MXF/MXD7MXl0ymB2PjcmJ3g4hyoTTdJzPu/cWFBQgqlfT19eHs7IwrV64gPT29wM9JMDU1RYsWLbTeppHBwMAgy+3q1KmDDRs2IC0tDZGRkVizZg3GjBmDn376CSYmJpBIJBg9ejQ+++yzTNuamZkBAH744QcYGxtj3bp1kErfD5GKiYkp0PlkSE/P/sapUqlzXIeKDvMXF/MXF/MXD7MXR2ka0k1U2vE+mX8sQFCpNXToUIwaNQpbt27FhAkTMi3/8BkLOXF3d8fx48dhY2OD8uXL57kvMpkMTZo0wahRozB27Fi8ePECderUgaOjIx48eAB7e/sst01OToZMJtOaTnLixIk894GIiIiIiEhMLEBQqeXp6YkRI0YgMDAQ9+/fh6+vL8zMzBAdHY1Dhw4hMTEx1wWIIUOG4MSJExgwYAAGDRqEatWqITY2FtevX4elpSWGDBmSaZu///4bK1asQIcOHVCzZk28efMG27ZtQ/Xq1YVpGzNnzsTgwYMxZcoU+Pr6Qi6X49mzZ/jll1/QvXt3uLm5oXnz5tizZw+++OILtGnTBpGRkTh27FhhRkVERERERFTkWICgUm3GjBlwcnLCgQMHMHv2bLx79w4WFhbw8PDA8OHDc70fMzMzBAcHY926dVi1ahXi4+NRqVIlNGrUCG3atNG5TZUqVVC5cmVs27YNz58/h4mJCRo3boyVK1dCT08PAODs7Iyvv/4agYGBmDVrFtLS0lC1alU0bdoUn3zyCYD3hRQ/Pz/s378fhw8fhrOzM7Zt2wYfH5+CB0RERERERFRMJBqNRiN2J4io+KlUasTGvtW5TF9fCjOzCoiLe8v5bSJg/uJi/uJi/uJh9uIyNNSHXG6EKWsuIComQezuEJEONtVNsW6aV6m6T2bc+4vteMV2JCIiIiIiylYNSxOxu0BEWeD3Z8GxAEFEREREJDK1WgO1WgO//i5id4WIsqFSqaFWcxJBfrEAQUREREQkMo1GA6lUAqXyHVSq0jG0+2OipyeFXG7E/EXyMeWfUSyk/GEBgoiIiIiohFCp1KVmbvnHiPmLi/mXfixAEBERERGVEHp6UrG7UCZl5M78xVFW8y+LoylYgCAiIiIiEplEIoFarYFcbiR2V8o05i+uspa/SqVGfHxSmSpCsABBRERERCQyqVQCqVSCVQeuIvp5otjdIaIiVsPSBH79XSCVSliAICIiIiKi4hf9PBFRMQlid4OIqEiUrUk2VOYEBgZCoVDo/LN9+/Zi6YNSqURgYCDu379fLMcjIiIiIiIqiTgCgkq9cuXKYc+ePZnaraysiuX4SqUSGzduRL169VC3bt1iOSYREREREVFJwwIElXpSqRSOjo6iHDs5OVmU4xIREREREZU0nIJBZdrAgQMxevToTO379++Hg4MDEhPfPwRKo9EgKCgIPj4+aNiwIVq3bo3du3drbRMYGAgnJyfcuHEDvXv3hr29PQ4cOIDWrVsDACZPnixM/4iOjgYAxMfHY9asWXBzc4ODgwP69OmD33//XWcfT58+DR8fHzg5OWHQoEH4999/iyARIiIiIiKiosEREFQmpKenZ2rT19eHr68vlixZgvj4eFSsWFFYFhISAk9PT5iYmAAAli5diu+++w5jxoxBo0aNEBERgVWrVsHQ0BB9+/YVtktLS8P06dMxZMgQTJ06FRUrVsTGjRsxYcIETJs2DW5ubgAACwsLqFQqjBw5Eo8fP4afnx8qV66Mffv2YejQofjmm2/QsGFDYb+3b99GbGws/Pz8oFKpsHz5csyYMQPBwcFFlBgREREREVHhYgGCSr2kpCQ0aNAgU/uBAwfg4+ODJUuW4OzZs+jVqxcAICYmBteuXcO6desAAP/++y/279+PRYsWoXfv3gAAd3d3JCcnY9OmTejduzek0veDidLS0jB16lR06NBBOI6xsTEA4JNPPtGaChIWFoYbN25g586daNGiBQDAw8MDbdu2xbZt2xAYGCism5iYiKNHj8Lc3Fw4p1mzZuHZs2eoWrVqvrPR19c9CEpPT6r1XypezF9czF9czF88zF5cUqlE7C4QkQjEvucW9/FZgKBSr1y5cti/f3+mdmtra1SoUAHu7u4IDQ0VChAnT55E+fLl0apVKwDAL7/8AgBo27at1kgKd3d37NixA0+fPkX16tWFdk9Pz1z1648//oCxsbFQfAAAmUyGNm3aICQkRGvd+vXrC8UHAMLDLAtSgJBKJTAzq5DtOnK5Ub72TYWD+YuL+YuL+YuH2RMRFZ+yds9lAYJKPalUCnt7+yyX+/r6wt/fHy9fvkSVKlUQGhqKNm3awNDQEAAQFxcHjUaDpk2b6tz+wwKEkZERKlTI/of6DEqlEpUqVcrUXrlyZSQkaL//Wy6Xa32WyWQAgJSUlFwdSxe1WgOlMknnMj09KeRyIyiV76BSqfN9DMof5i8u5i8u5i8eZi8umUwPxsblxO4GERUzse+5Gff+4sICBJV5rVu3hoGBAU6dOgUPDw/cvn0b06ZNE5abmppCIpHg66+/Fn7w/1CdOnWEv0skuR8+aWpqitevX2dqf/XqFUxNTfN4FvmTnp79zU6lUue4DhUd5i8u5i8u5i8eZi8OsYdhE5E4yto9lwUIKvOMjY3h5eWF0NBQJCQkwNzcHO7u7sLyZs2aAXj/xgpvb+887z+r0QouLi4ICgrCzz//DA8PDwDvH5b5ww8/wMXFJb+nQ0REREREVCKxAEGlnlqtxrVr1zK1V6pUCTVr1gQAdOzYERMmTEBMTAzatWsHff3/fWvUqVMH/fv3x8yZMzF8+HA0atQIaWlpePToEcLDw7F58+Zsj1+lShXI5XKEhoaiRo0aMDAwgEKhgJeXFxwcHDBjxgxMnz5deAvGixcvsGHDhkLNgIiIiIiISGwsQFCpl5ycLLy94kM9evTA0qVLAUB45ebLly/h6+ubad25c+eiTp06CA4OxqZNm1ChQgXUqVMH7dq1y/H4UqkUy5Ytw5o1azBkyBCkpqYiLCwMNWrUwPbt2xEQEICVK1cKb+vYtWuX1is4iYiIiIiISgOJRqPRiN0JIip+KpUasbFvdS7T15fCzKwC4uLelqk5aSUF8xcX8xcX8xcPsxeXoaE+5HIjTFlzAVExCTlvQEQfNZvqplg3zUv0e27Gvb/YjldsRyIiIiIiomzVsDQRuwtEVAzK6vc6CxBERERERCJTqzVQqzXw688HUROVFSqVGmp12ZqQwAIEEREREZHINBoNpFIJlMp3UKk4Baa46elJIZcbMX+RlNX8MwqPZQkLEEREREREJYRKpeYzOETE/MXF/Es/qdgdICIiIiIiIqLSjwUIIiIiIiIiIipyLEAQERERERERUZFjAYKIiIiIiIiIihwLEERERERERERU5FiAICIiIiIiIqIixwIEERERERERERU5FiCIiIiIiIiIqMixAEFERERERERERY4FCCIiIiIiIiIqcixAEBEREREREVGRYwGCiIiIiIiIiIocCxBEREREREREVORYgCAiIiIiIiKiIscCBBEREREREREVORYgiIiIiIiIiKjIsQBBREREREREREVOotFoNGJ3goiKn0ajgVqd9be/np4UKpW6GHtEH2L+4mL+4mL+4mH24mL+4mL+4mL+4tHTK75xCSxAEBEREREREVGR4xQMIiIiIiIiIipyLEAQERERERERUZFjAYKIiIiIiIiIihwLEERERERERERU5FiAICIiIiIiIqIixwIEERERERERERU5FiCIiIiIiIiIqMixAEFERERERERERY4FCCIiIiIiIiIqcixAEBEREREREVGRYwGCiIiIiIiIiIocCxBEREREREREVORYgCAiIiIiIiKiIscCBFEZdPnyZUyfPh2fffYZFAoFFi9enKvtbty4gVmzZqFNmzZo1KgR2rZti9WrVyMpKUlrvcDAQCgUikx/Dh48WBSn89HJb/4AkJiYiNmzZ6NJkyZwcnLCpEmT8OLFi0zrRUREoHfv3nBwcECrVq2wfft2aDSawjyNj9aPP/6Izp07w97eHj4+Pjh06FCO22R1TSsUCsyfPz/H9Xjt/09+8o+OjtaZa69evTKty2s/e/nJn/f+vImKisLQoUPh6OiI5s2bIyAgAKmpqTlup9FosH37dnh5ecHBwQG9e/fGtWvXMq33/PlzTJw4EU5OTmjSpAnmzJmDN2/eFMGZfJzyk/+LFy8QEBCALl26wMnJCS1btsT06dMRExOjtV54eLjOa3zq1KlFeUoflfxe/97e3jqzTUlJ0VqP13/W8pN9Vte0QqFAu3btclwvP9e+fp63IKKP3qVLl/D333/D1dUVCQkJud7u1KlT+OeffzBixAjUrl0b9+/fx4YNG3D9+nXs3btXa91y5cphz549Wm01a9YslP5/7PKbPwBMmTIF9+/fx8KFC2FoaIh169Zh5MiROHToEPT139/S//nnHwwfPhzNmzfHlClTcOfOHaxatQp6enoYPnx4UZzSR+OPP/7AhAkT0KNHD8yePRtXrlzBnDlzUKFCBa3/0f5Xz5490aJFC62233//HatWrULLli212nntZy2/+WeYNm0a3NzchM8VKlTQWs5rP3v5zZ/3/txLSEjA4MGDUbt2bQQGBuL58+dYvnw5kpOTtYqVuuzYsQMbNmyAn58fFAoFDhw4gGHDhuHYsWNChmlpaRgxYgQAYPXq1UhOTsaKFSswffp0bNu2rcjPr6TLb/63bt3CuXPn8H//939o1KgR4uLisGXLFvTs2RMhISEwNzfXWn/ZsmWwtrYWPpuZmRXZOX1MCnL9A4CPjw+GDRum1WZgYCD8ndd/1vKbfYMGDRAcHKzV9ubNG4wcOTLTv2+AQrr2NURU5qhUKuHvrVq10ixatChX271+/TpT2/HjxzW2traamzdvCm0bNmzQODo6FryjpVR+84+IiNDY2tpqLl26JLRFRUVpFAqFJjQ0VGibN2+eplWrVpqUlBShbfXq1ZrGjRtrtZVFw4YN0/Tu3Vurbdq0aZr27dvneV+ff/65xtXVVStTXvvZy2/+jx8/1tja2mpOnTqV7Xq89rOX3/x578+9rVu3ahwdHTVxcXFC2zfffKP59NNPNc+ePctyu+TkZI2zs7Nm9erVQltKSoqmVatWmgULFghtJ06c0CgUCk1UVJTQdunSJY2tra3m+vXrhXouH6P85p+QkKBJS0vTanv69KlGoVBogoKChLYrV65obG1tNTdu3Cj0vpcG+c1fo8ndv4d4/WetINn/16FDhzJlWpjXPqdgEJVBUmn+vvX/+xsAALCzswMAndMASLf85v/TTz9BLpejefPmQpu1tTU+/fRT/PTTT1rrtW7dWuu3Bh06dIBSqURkZGT+O/6RS01NRXh4eKbf9Hbo0AFRUVGIjo7O9b5SUlJw7tw5+Pj4aOVMWSvM/LPCaz9rBcmf9/7c++mnn9CsWTNUrFhRaGvfvj3UajUuX76c5XYRERF48+YN2rdvL7QZGBigTZs2me7vCoVC6zeQzZs3R8WKFXHx4sXCPZmPUH7zl8vlwijCDFWrVoW5uTmv8TzIb/552T+vf90KM/uQkBDUrl0bDg4OhdzL91iAIKICuXr1KgBo/c8AAJKTk9G0aVPY2dmhQ4cO+Pbbb8XoXqny4MED1KlTBxKJRKvd2toaDx48AAAkJSXh6dOnmb4e1tbWkEgkwnpl0b///ou0tLRM2djY2ABAnrI5f/483rx5g44dO2Zaxmtft8LIf+HChfj000/RrFkzzJ07F/Hx8cIyXvvZK8zrH+C9PysPHjzIlIlcLkeVKlWyzThjma6vz5MnT5CcnJzl/iUSCerUqVPmr3Eg//nr8vDhQ7x+/Vr4HvnQqFGj8Omnn6Jly5ZYsWKF8PUp6wqa/4kTJ9CwYUM4OTlh5MiRuHPnTo775/X/XmFd+69evcKVK1d0/vsGKJxrn8+AIKJ8i42NRWBgIFq3bo3atWsL7bVq1YKfnx/s7OyQkpKCEydOYN68eUhMTOQ87AJQKpUwMTHJ1G5qaoo///wTwPuHVALv/6fzIQMDAxgZGeX5mROlSca5/zebjM95ySYkJASWlpZwdXXVaue1n7WC5G9gYIC+ffvCw8MDcrkc169fx9atW/Hnn3/iu+++g0wm47Wfg8K8/nnvz5pSqcyUMfD+Pp1dxkqlEgYGBjA0NNRql8vl0Gg0SEhIQLly5bL9/0BZv8aB/Of/XxqNBkuWLIGFhQV8fX2FdhMTE4wYMQKurq4wNDTElStXsGvXLjx48KDMP4MAKFj+3t7ecHBwQLVq1fD48WNs3boV/fr1w9GjR4VnoPD6z1phXfsnT56ESqXKVIAozGufBQiiUiAxMTFXQwRr1qxZaMPF09LSMG3aNADvfyv5oS5dumh99vLyQlpaGrZs2YJBgwZBJpMVSh9KCjHyp/fykn1hUSqVuHjxIgYMGJBpOg2vfd0Kmr+FhYXWfaZJkyaoV68eRo8ejXPnzqFDhw4F2v/HSozrn/d+KgsCAwNx5coV7Ny5E+XLlxfa7ezshOlHANCsWTNYWFhg8eLFuHHjRpENWS8L5s6dK/y9cePGaN68Odq3b4+goKBM9xoqOidOnECDBg1Qp04drfbCvPZZgCAqBU6fPq11487KyZMndQ4lzCuNRoPZs2fjxo0b+Prrr2FhYZHjNu3bt8eZM2fw77//FkofSpLiyl8ul+PZs2eZ2hMSEmBqagoAwm8GMn4bnCE1NRXv3r0T1ist8pJ9xrn/NxulUgkAuc7mzJkzSE1NRadOnXK1Pq/9ws0/g6enJ8qXL49bt26hQ4cOZe7aB4o/f977cyaXyzNlDGjfp7PaLjU1FSkpKVqjIJRKJSQSibCtXC7X+crBhIQEWFlZFcIZfNzym/+Hvv32W2zatAlLly5Fs2bNcly/ffv2WLx4Mf78888yX4AojPwzWFhYwMXFBbdu3dLaP69/3Qoj+3///Vd47XJu5PfaZwGCqBTo2bMnevbsWWzHW7FiBU6dOoUdO3agfv36xXbckqq48re2tsavv/4KjUaj9RyIhw8fwtbWFgBQvnx5WFlZZZrv9/DhQ2g0mkzzAz92eck+NTUVMpkMDx480HqlZlZzr7MSEhICa2trrd8ElFVi5J+VsnbtA8WfP+/9OfvwmTwZEhMT8fLly2wzzlj28OFDrWwfPHiAatWqoVy5csJ6d+/e1dpWo9Hg4cOHWg8oLqvym3+Gc+fOYeHChZg0aRJ69OhRVN0stQqaf272z+tft8LI/sSJE5BKpUU+qpAPoSSiPNm+fTt2796N5cuX5+o3AxlOnjwJuVyOWrVqFWHvSreWLVsiISEBv/76q9D28OFD/PXXX1rvam7ZsiXCwsKQlpYmtGXk7+TkVKx9LkkMDAzg5uaGM2fOaLVnjEypUaNGjvt48eIFfvvttywfzqQLr/33CiP/D50/fx5JSUmwt7cX2njtZ62g+fPenzstW7bEL7/8IowsAd6PVJFKpdn+gOTs7AxjY2OcOnVKaEtLS8PZs2cz3d///vtvPHr0SGj79ddfER8fD09Pz8I9mY9QfvMHgPDwcEybNg09e/bE+PHjc33M0NBQANC6F5VVBcn/v54/f46rV69musfz+tetMLIPDQ1FkyZNcjW6LWN9IO/XPkdAEJVBMTExuHnzJgDg3bt3+Pfff3H69GkA0HpFm52dHbp27Yovv/wSwPvK6OrVq9G5c2fUqFED165dE9atVauW8Kq27t27o2vXrrC2tkZycjJOnDiBs2fPYvbs2ZwDjPzn7+TkBA8PD8yePRuff/45DA0NsXbtWigUCrRt21bYbvjw4Thx4gSmT5+Ovn374u7duwgKCsLUqVPL/DMoxo4di0GDBmHhwoVo3749wsPDERISgrVr12qt99/sM5w8eRJqtTrL6Re89rOX3/yXL18OiUQCR0dHyOVy3LhxA9u2bUPDhg3x2WefCdvx2s9efvPnvT/3+vTpg3379mH8+PEYPXo0nj9/joCAAPTp0weWlpbCeoMHD8aTJ09w7tw5AIChoSFGjx6NwMBAmJubw9bWFgcPHkR8fLzWAzx9fHywbds2TJw4EdOmTcO7d+8QEBAALy+vMj/8H8h//lFRURg/fjxq166NLl26aF3j5ubmQgHNz88Pn3zyCezs7IQH8e3evRufffYZCxDIf/4hISE4f/48PD09YWFhgcePH2P79u3Q09PD0KFDhe14/Wctv9ln+OuvvxAVFaWV94cK89pnAYKoDAoPD9ea33Xp0iVcunQJALReeaRSqaBWq4XPGe8RPn78OI4fP661z2XLlqF79+4A3v+DdPfu3Xj16hUkEglsbW2xcuVKdO7cucjO6WOS3/wBYN26dVi2bBnmz5+P9PR0eHh4YO7cuVrvL//kk08QFBSE5cuXY9SoUTA3N8ekSZMwbNiwIj6zkq9x48YIDAzEunXr8P3336NatWpYsmQJ2rdvr7WeruyB9z+IOTg4ZPnbXF772ctv/jY2Njh48CC+/fZbJCcnw9LSEj169MCkSZN47edBfvPnvT/3TE1NsWfPHnzxxRcYP348KlSogB49emDq1Kla66nVaqhUKq22kSNHQqPRYNeuXYiNjcWnn36KoKAgrYeIymQy7Ny5E0uWLMG0adOgr6+PNm3aYPbs2cVyfiVdfvO/fv06EhMTkZiYiL59+2qt261bNyxfvhwAUK9ePZw4cQK7du1CWloaqlevjjFjxmDUqFFFf3IfgfzmX6NGDbx48QJffvklEhMTYWJigqZNm2LSpEm8/nOpIPce4P2/bwwMDODj46Nz/4V57Us0Go0mz1sREREREREREeUBnwFBREREREREREWOBQgiIiIiIiIiKnIsQBARERERERFRkWMB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Uxw9elSYLgC8/0H58uXL8PT0LJTjtGzZEunp6Th48KDQplKpsH///kLZ/4fat2+P58+f49tvv820LDk5GUlJSdlur6enBx8fH5w5cwZ3797NtPy/0y9yo0GDBqhRowb27t2rlTPwv1ESlSpVQpMmTRAcHIwXL14UynGJiKhocAQEERERUT7MnDkTI0eORO/evdGjRw/hNZwmJiaYMGFCoRzD29sbzs7OWL16NWJiYlC3bl2cPXsWiYmJhbL/D3Xp0gWnTp3CggULEB4eDmdnZ6hUKjx48ACnT5/Gzp07YW9vn+0+pk+fjvDwcPTq1Qs9e/ZE3bp1kZCQgFu3buHXX3/Fb7/9lqc+SaVSLFy4EGPHjkXXrl3RvXt3VKlSBQ8ePMD9+/cRFBQEAFiwYAH69euHTp06oVevXqhZsyZevXqFa9eu4dmzZzh+/Hi+cyEiosLDAgQRERFRPri7u2Pnzp3YsGEDNmzYAH19fbi6umLGjBnCtICCkkql2LJlC7788kscP34cEokE3t7e8Pf3R9euXQvlGB8ea9OmTdi9ezeOHTuGc+fOwcjICDVq1MDAgQNz9eDLypUr47vvvsOmTZtw7tw5HDx4EBUrVkTdunXh5+eXr361aNECe/bswaZNm7Br1y5oNBrUrFkTvXr1EtapW7cuDh06hI0bN+LIkSOIj4+Hubk57OzsMH78+Hwdl4iICp9Ek5en/BARERERERER5QOfAUFERERERERERY4FCCIiIiIiIiIqcixAEBEREREREVGRYwGCiIiIiIiIiIocCxBEREREREREVORYgCAiIiIiIiKiIscCBBEREREREREVORYgiIiIiIiIiKjIsQBBREREREREREWOBQgiIiIiIiIiKnIsQBARERERERFRkWMBgoiIiIiIiIiKHAsQRERERERERFTk/h+elOGbj6HtYAAAAABJRU5ErkJggg==\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import matplotlib.pyplot as plt\n",
        "\n",
        "# Create the Derived team strength column\n",
        "merged_df_filtered['Derived team strength'] = (2/3) * merged_df_filtered['xGD/90_current'] + (1/3) * merged_df_filtered['xGD/90_last']\n",
        "\n",
        "# Sort the DataFrame by Derived team strength in descending order\n",
        "merged_df_filtered_sorted = merged_df_filtered.sort_values('Derived team strength', ascending=False)\n",
        "\n",
        "# Generate the horizontal bar chart\n",
        "plt.figure(figsize=(10, 6))\n",
        "plt.barh(merged_df_filtered_sorted['Team'], merged_df_filtered_sorted['Derived team strength'])\n",
        "plt.xlabel('Derived team strength')\n",
        "plt.ylabel('Team')\n",
        "plt.title('Derived Team Strength')\n",
        "plt.show()"
      ],
      "metadata": {
        "id": "QJhYVlGNf0MB",
        "outputId": "a6f8ea40-0de3-4659-c3b2-ecfd0ebdc4a2",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 573
        }
      },
      "execution_count": 80,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1000x600 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "homesawayspi"
      ],
      "metadata": {
        "id": "MzKOf0lIgqmG",
        "outputId": "841dc1c1-82c2-4f57-a6ae-2068bd5a5335",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 424
        }
      },
      "execution_count": 81,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "     event            team_h                   team_a          kickoff_time  \\\n",
              "0      NaN       Bournemouth               Luton Town                   NaN   \n",
              "1      NaN   Manchester City                Brentford                   NaN   \n",
              "2      1.0           Burnley          Manchester City  2023-08-11T19:00:00Z   \n",
              "3      1.0           Arsenal        Nottingham Forest  2023-08-12T12:00:00Z   \n",
              "4      1.0       Bournemouth                 West Ham  2023-08-12T14:00:00Z   \n",
              "..     ...               ...                      ...                   ...   \n",
              "375   38.0    Crystal Palace              Aston Villa  2024-05-19T15:00:00Z   \n",
              "376   38.0         Liverpool  Wolverhampton Wanderers  2024-05-19T15:00:00Z   \n",
              "377   38.0        Luton Town                   Fulham  2024-05-19T15:00:00Z   \n",
              "378   38.0   Manchester City                 West Ham  2024-05-19T15:00:00Z   \n",
              "379   38.0  Sheffield United                Tottenham  2024-05-19T15:00:00Z   \n",
              "\n",
              "     Home SPI  Away SPI Event  \n",
              "0       59.58     55.48   nan  \n",
              "1       92.00     77.14   nan  \n",
              "2       62.94     92.00   1.0  \n",
              "3       83.92     56.13   1.0  \n",
              "4       59.58     71.12   1.0  \n",
              "..        ...       ...   ...  \n",
              "375     73.46     79.30  38.0  \n",
              "376     83.93     59.06  38.0  \n",
              "377     55.48     68.22  38.0  \n",
              "378     92.00     71.12  38.0  \n",
              "379     56.57     72.14  38.0  \n",
              "\n",
              "[380 rows x 7 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-39c37c6f-0b8d-4a82-91ec-327acfc879d2\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>event</th>\n",
              "      <th>team_h</th>\n",
              "      <th>team_a</th>\n",
              "      <th>kickoff_time</th>\n",
              "      <th>Home SPI</th>\n",
              "      <th>Away SPI</th>\n",
              "      <th>Event</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>NaN</td>\n",
              "      <td>Bournemouth</td>\n",
              "      <td>Luton Town</td>\n",
              "      <td>NaN</td>\n",
              "      <td>59.58</td>\n",
              "      <td>55.48</td>\n",
              "      <td>nan</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>NaN</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>Brentford</td>\n",
              "      <td>NaN</td>\n",
              "      <td>92.00</td>\n",
              "      <td>77.14</td>\n",
              "      <td>nan</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>1.0</td>\n",
              "      <td>Burnley</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>2023-08-11T19:00:00Z</td>\n",
              "      <td>62.94</td>\n",
              "      <td>92.00</td>\n",
              "      <td>1.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>1.0</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>Nottingham Forest</td>\n",
              "      <td>2023-08-12T12:00:00Z</td>\n",
              "      <td>83.92</td>\n",
              "      <td>56.13</td>\n",
              "      <td>1.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>1.0</td>\n",
              "      <td>Bournemouth</td>\n",
              "      <td>West Ham</td>\n",
              "      <td>2023-08-12T14:00:00Z</td>\n",
              "      <td>59.58</td>\n",
              "      <td>71.12</td>\n",
              "      <td>1.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>375</th>\n",
              "      <td>38.0</td>\n",
              "      <td>Crystal Palace</td>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>2024-05-19T15:00:00Z</td>\n",
              "      <td>73.46</td>\n",
              "      <td>79.30</td>\n",
              "      <td>38.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>376</th>\n",
              "      <td>38.0</td>\n",
              "      <td>Liverpool</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>2024-05-19T15:00:00Z</td>\n",
              "      <td>83.93</td>\n",
              "      <td>59.06</td>\n",
              "      <td>38.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>377</th>\n",
              "      <td>38.0</td>\n",
              "      <td>Luton Town</td>\n",
              "      <td>Fulham</td>\n",
              "      <td>2024-05-19T15:00:00Z</td>\n",
              "      <td>55.48</td>\n",
              "      <td>68.22</td>\n",
              "      <td>38.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>378</th>\n",
              "      <td>38.0</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>West Ham</td>\n",
              "      <td>2024-05-19T15:00:00Z</td>\n",
              "      <td>92.00</td>\n",
              "      <td>71.12</td>\n",
              "      <td>38.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>379</th>\n",
              "      <td>38.0</td>\n",
              "      <td>Sheffield United</td>\n",
              "      <td>Tottenham</td>\n",
              "      <td>2024-05-19T15:00:00Z</td>\n",
              "      <td>56.57</td>\n",
              "      <td>72.14</td>\n",
              "      <td>38.0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>380 rows × 7 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-39c37c6f-0b8d-4a82-91ec-327acfc879d2')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-39c37c6f-0b8d-4a82-91ec-327acfc879d2 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-39c37c6f-0b8d-4a82-91ec-327acfc879d2');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-193d51a5-ad35-4d6b-a23a-55c92eccb46d\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-193d51a5-ad35-4d6b-a23a-55c92eccb46d')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-193d51a5-ad35-4d6b-a23a-55c92eccb46d button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 81
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "merged_df_filtered"
      ],
      "metadata": {
        "id": "hD36RY8Fg_p1",
        "outputId": "7ffd4306-5fda-487e-a344-e760b9d526dc",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 677
        }
      },
      "execution_count": 82,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                       Team  xGD/90_current  xGD/90_last  YoY difference  \\\n",
              "0                 Liverpool            1.08         0.57            0.51   \n",
              "1               Aston Villa            0.52        -0.06            0.58   \n",
              "2           Manchester City            1.00         1.22           -0.22   \n",
              "3                   Arsenal            1.00         0.79            0.21   \n",
              "4                 Tottenham            0.02         0.20           -0.18   \n",
              "5                  West Ham           -0.38        -0.10           -0.28   \n",
              "6                  Brighton            0.27         0.61           -0.34   \n",
              "7         Manchester United           -0.17         0.45           -0.62   \n",
              "8          Newcastle United            0.29         0.85           -0.56   \n",
              "9                   Chelsea            0.53        -0.08            0.61   \n",
              "10  Wolverhampton Wanderers           -0.32        -0.61            0.29   \n",
              "11              Bournemouth           -0.23        -0.67            0.44   \n",
              "12                   Fulham           -0.50        -0.46           -0.04   \n",
              "13           Crystal Palace           -0.20        -0.23            0.03   \n",
              "14        Nottingham Forest           -0.35        -0.66            0.31   \n",
              "15                Brentford            0.39         0.18            0.21   \n",
              "16                  Everton            0.12        -0.54            0.66   \n",
              "17               Luton Town           -1.02         0.00           -1.02   \n",
              "18                  Burnley           -0.85         0.00           -0.85   \n",
              "19            Sheffield Utd           -1.18         0.00           -1.18   \n",
              "\n",
              "    Derived team strength  \n",
              "0                0.910000  \n",
              "1                0.326667  \n",
              "2                1.073333  \n",
              "3                0.930000  \n",
              "4                0.080000  \n",
              "5               -0.286667  \n",
              "6                0.383333  \n",
              "7                0.036667  \n",
              "8                0.476667  \n",
              "9                0.326667  \n",
              "10              -0.416667  \n",
              "11              -0.376667  \n",
              "12              -0.486667  \n",
              "13              -0.210000  \n",
              "14              -0.453333  \n",
              "15               0.320000  \n",
              "16              -0.100000  \n",
              "17              -0.680000  \n",
              "18              -0.566667  \n",
              "19              -0.786667  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-eb6d02f1-8e13-49f4-a4bb-0c7a33d2c4fc\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Team</th>\n",
              "      <th>xGD/90_current</th>\n",
              "      <th>xGD/90_last</th>\n",
              "      <th>YoY difference</th>\n",
              "      <th>Derived team strength</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>Liverpool</td>\n",
              "      <td>1.08</td>\n",
              "      <td>0.57</td>\n",
              "      <td>0.51</td>\n",
              "      <td>0.910000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>0.52</td>\n",
              "      <td>-0.06</td>\n",
              "      <td>0.58</td>\n",
              "      <td>0.326667</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>Manchester City</td>\n",
              "      <td>1.00</td>\n",
              "      <td>1.22</td>\n",
              "      <td>-0.22</td>\n",
              "      <td>1.073333</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>Arsenal</td>\n",
              "      <td>1.00</td>\n",
              "      <td>0.79</td>\n",
              "      <td>0.21</td>\n",
              "      <td>0.930000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>Tottenham</td>\n",
              "      <td>0.02</td>\n",
              "      <td>0.20</td>\n",
              "      <td>-0.18</td>\n",
              "      <td>0.080000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>West Ham</td>\n",
              "      <td>-0.38</td>\n",
              "      <td>-0.10</td>\n",
              "      <td>-0.28</td>\n",
              "      <td>-0.286667</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>Brighton</td>\n",
              "      <td>0.27</td>\n",
              "      <td>0.61</td>\n",
              "      <td>-0.34</td>\n",
              "      <td>0.383333</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>Manchester United</td>\n",
              "      <td>-0.17</td>\n",
              "      <td>0.45</td>\n",
              "      <td>-0.62</td>\n",
              "      <td>0.036667</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>Newcastle United</td>\n",
              "      <td>0.29</td>\n",
              "      <td>0.85</td>\n",
              "      <td>-0.56</td>\n",
              "      <td>0.476667</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>Chelsea</td>\n",
              "      <td>0.53</td>\n",
              "      <td>-0.08</td>\n",
              "      <td>0.61</td>\n",
              "      <td>0.326667</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10</th>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>-0.32</td>\n",
              "      <td>-0.61</td>\n",
              "      <td>0.29</td>\n",
              "      <td>-0.416667</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>11</th>\n",
              "      <td>Bournemouth</td>\n",
              "      <td>-0.23</td>\n",
              "      <td>-0.67</td>\n",
              "      <td>0.44</td>\n",
              "      <td>-0.376667</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>12</th>\n",
              "      <td>Fulham</td>\n",
              "      <td>-0.50</td>\n",
              "      <td>-0.46</td>\n",
              "      <td>-0.04</td>\n",
              "      <td>-0.486667</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>13</th>\n",
              "      <td>Crystal Palace</td>\n",
              "      <td>-0.20</td>\n",
              "      <td>-0.23</td>\n",
              "      <td>0.03</td>\n",
              "      <td>-0.210000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>14</th>\n",
              "      <td>Nottingham Forest</td>\n",
              "      <td>-0.35</td>\n",
              "      <td>-0.66</td>\n",
              "      <td>0.31</td>\n",
              "      <td>-0.453333</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>15</th>\n",
              "      <td>Brentford</td>\n",
              "      <td>0.39</td>\n",
              "      <td>0.18</td>\n",
              "      <td>0.21</td>\n",
              "      <td>0.320000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>16</th>\n",
              "      <td>Everton</td>\n",
              "      <td>0.12</td>\n",
              "      <td>-0.54</td>\n",
              "      <td>0.66</td>\n",
              "      <td>-0.100000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>17</th>\n",
              "      <td>Luton Town</td>\n",
              "      <td>-1.02</td>\n",
              "      <td>0.00</td>\n",
              "      <td>-1.02</td>\n",
              "      <td>-0.680000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>18</th>\n",
              "      <td>Burnley</td>\n",
              "      <td>-0.85</td>\n",
              "      <td>0.00</td>\n",
              "      <td>-0.85</td>\n",
              "      <td>-0.566667</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>19</th>\n",
              "      <td>Sheffield Utd</td>\n",
              "      <td>-1.18</td>\n",
              "      <td>0.00</td>\n",
              "      <td>-1.18</td>\n",
              "      <td>-0.786667</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-eb6d02f1-8e13-49f4-a4bb-0c7a33d2c4fc')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-eb6d02f1-8e13-49f4-a4bb-0c7a33d2c4fc button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-eb6d02f1-8e13-49f4-a4bb-0c7a33d2c4fc');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-03364067-5420-44f2-b167-bb35ac22c4cc\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-03364067-5420-44f2-b167-bb35ac22c4cc')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-03364067-5420-44f2-b167-bb35ac22c4cc button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 82
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#!/usr/bin/env python3\n",
        "# -*- coding: utf-8 -*-\n",
        "\"\"\"\n",
        "Created on Mar 1 17:50:36 2020\n",
        "@author: doug hagey\n",
        "\"\"\"\n",
        "\n",
        "import pandas as pd\n",
        "import requests\n",
        "\n",
        "def scrape_understat(payload):\n",
        "    #Build request using url, headers (mimicking what Firefox does normally)\n",
        "    #Works best with verify=True as you won't get the ssl errors. Payload is\n",
        "    #taylored for each request\n",
        "    url = 'https://understat.com/main/getPlayersStats/'\n",
        "    headers = {'content-type':'application/json; charset=utf-8',\n",
        "    'Host': 'understat.com',\n",
        "    'User-Agent': 'Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:73.0) Gecko/20100101 Firefox/73.0',\n",
        "    'Accept': 'application/json, text/javascript, */*; q=0.01',\n",
        "    'Accept-Encoding': 'gzip, deflate, br',\n",
        "    'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8',\n",
        "    'X-Requested-With': 'XMLHttpRequest',\n",
        "    'Content-Length': '310',\n",
        "    'Origin': 'https: // understat.com',\n",
        "    'Connection': 'keep - alive',\n",
        "    'Referer': 'https: // understat.com / league / EPL'\n",
        "    }\n",
        "    response = requests.post(url, data=payload, headers = headers, verify=True)\n",
        "    response_json = response.json()\n",
        "    inner_wrapper = response_json['response']\n",
        "    json_player_data = inner_wrapper['players']\n",
        "    return json_player_data\n",
        "\n",
        "def clean_df(player_df, weeks):\n",
        "    # Get rid of the columns that we don't care about\n",
        "    player_df.drop(['yellow_cards','red_cards', 'xGChain','xGBuildup','games','time'], axis=1, inplace=True)\n",
        "    player_df  = player_df.rename(columns={'goals':'goals_'+weeks,'xG':'xG_'+weeks,'assists':'assists_'+weeks, 'xA':'xA_'+weeks, 'shots':'shots_'+weeks, 'key_passes':\n",
        "        'key_passes_'+weeks,'npg':'npg_'+weeks,'npxG':'npxG_'+weeks})\n",
        "    return(player_df)\n",
        "\n",
        "#Creprint('Getting data for last 5 matches')\n",
        "json_player_data = scrape_understat({'league':'EPL', 'season':'2023', 'n_last_matches': '5'})\n",
        "five_game_table = pd.DataFrame(json_player_data)\n",
        "five_game_df = clean_df(five_game_table,'5wks')\n",
        "\n",
        "\n",
        "print('Getting data for the whole season')\n",
        "json_player_data = scrape_understat({'league':'EPL', 'season':'2023'})\n",
        "season_table = pd.DataFrame(json_player_data)\n",
        "season_df = clean_df(season_table, 'season')\n",
        "\n",
        "print('Getting data for last 5 matches')\n",
        "json_player_data = scrape_understat({'league':'EPL', 'season':'2023', 'n_last_matches': '5'})\n",
        "five_game_table = pd.DataFrame(json_player_data)\n",
        "five_game_df = clean_df(five_game_table,'5wks')\n",
        "\n",
        "print('Getting data for the whole season')\n",
        "json_player_data = scrape_understat({'league':'EPL', 'season':'2023'})\n",
        "season_table = pd.DataFrame(json_player_data)\n",
        "season_df = clean_df(season_table, 'season')\n",
        "\n",
        "print('Getting data for last 5 matches')\n",
        "json_player_data = scrape_understat({'league':'EPL', 'season':'2023', 'n_last_matches': '5'})\n",
        "five_game_table = pd.DataFrame(json_player_data)\n",
        "five_game_df = clean_df(five_game_table,'5wks')\n",
        "\n",
        "print('Merging Tables')\n",
        "EPL_player_df = pd.merge(five_game_df, season_df, on=['id','player_name'])\n",
        "EPL_player_df = pd.merge(EPL_player_df, five_game_df, on=['id','player_name'])\n",
        "\n",
        "\n",
        "print('Writing CSV File')\n",
        "EPL_player_df.to_csv('Understat_EPL_Player_Data_Combined 2021.csv', encoding='utf-8', index=False)\n",
        "\n",
        "\n",
        "# Assuming you have a DataFrame named EPL_player_df\n",
        "\n",
        "# Extract relevant columns\n",
        "selected_columns = ['player_name', 'xG_5wks_x', 'xA_5wks_x']\n",
        "subset_df = EPL_player_df[selected_columns]\n",
        "\n",
        "# Rename columns\n",
        "subset_df.rename(columns={'xG_5wks_x': 'xG 5 Weeks', 'xA_5wks_x': 'xA 5 Weeks'}, inplace=True)\n",
        "\n",
        "# Round the numbers to 2 decimal places\n",
        "subset_df = subset_df.round(2)\n",
        "\n",
        "# Sort by xG 5 Weeks in descending order\n",
        "top_10_xG = subset_df.sort_values(by='xG 5 Weeks', ascending=False).head(10)\n",
        "\n",
        "# Sort by xA 5 Weeks in descending order\n",
        "top_10_xA = subset_df.sort_values(by='xA 5 Weeks', ascending=False).head(10)\n",
        "\n",
        "# Display the top 10 for xG 5 Weeks\n",
        "print(\"Top 10 for xG 5 Weeks:\")\n",
        "print(top_10_xG)\n",
        "\n",
        "# Display the top 10 for xA 5 Weeks\n",
        "print(\"\\nTop 10 for xA 5 Weeks:\")\n",
        "print(top_10_xA)\n",
        "\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "HKnT6kU1xmGd",
        "outputId": "191ee8b3-3479-4015-9196-b62417943cb1"
      },
      "execution_count": 83,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Getting data for the whole season\n",
            "Getting data for last 5 matches\n",
            "Getting data for the whole season\n",
            "Getting data for last 5 matches\n",
            "Merging Tables\n",
            "Writing CSV File\n",
            "Top 10 for xG 5 Weeks:\n",
            "         player_name          xG 5 Weeks           xA 5 Weeks\n",
            "10    Erling Haaland   5.628955155611038   0.6545235216617584\n",
            "0    Dominic Solanke  3.6563022434711456  0.04021937772631645\n",
            "2      Mohamed Salah   3.444396495819092    2.419852130115032\n",
            "1        Richarlison  3.4436055570840836  0.20917709916830063\n",
            "32    Julián Álvarez  3.0787308365106583   0.8427629545331001\n",
            "21    Alexander Isak  2.7471946477890015   0.3510333485901356\n",
            "79       Bukayo Saka  2.7204608991742134   1.3625340163707733\n",
            "11    Elijah Adebayo   2.677248604595661    0.299941748380661\n",
            "113     Darwin Núñez  2.6202255971729755   1.1735363900661469\n",
            "26        João Pedro  2.5451406501233578   0.9773469269275665\n",
            "\n",
            "Top 10 for xA 5 Weeks:\n",
            "                player_name           xG 5 Weeks          xA 5 Weeks\n",
            "62               Phil Foden   0.8677060510963202  2.4539883472025394\n",
            "2             Mohamed Salah    3.444396495819092   2.419852130115032\n",
            "7             Son Heung-Min    2.182553678750992   2.419531710445881\n",
            "101          Anthony Elanga    1.208448614925146  2.4004449918866158\n",
            "274           Dwight McNeil  0.30351437628269196  2.3370407298207283\n",
            "205  Trent Alexander-Arnold    1.211579617112875  2.1664616223424673\n",
            "133             Pascal Groß   1.4863200187683105  2.1563414186239243\n",
            "70         Dejan Kulusevski    0.657961443066597  2.1486878525465727\n",
            "421        Marcus Tavernier   0.5488669387996197  2.1257147742435336\n",
            "333          Anthony Gordon   1.2337484583258629   2.050276130437851\n"
          ]
        }
      ]
    }
  ]
}