{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "authorship_tag": "ABX9TyNyLIFPVALGmjmThVaxJtWl",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/huricane85/FPL-API-Fixture-modeler/blob/main/FPL_Model_v1.2%20API%20data%2021.12.2023%20Team%20Str\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 1,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "b6S0KMo-gSGQ",
        "outputId": "54996f78-e030-47bf-be96-579e043748be"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Cloning into 'UnderstatScraper'...\n",
            "remote: Enumerating objects: 34, done.\u001b[K\n",
            "remote: Counting objects: 100% (34/34), done.\u001b[K\n",
            "remote: Compressing objects: 100% (31/31), done.\u001b[K\n",
            "remote: Total 34 (delta 11), reused 25 (delta 2), pack-reused 0\u001b[K\n",
            "Receiving objects: 100% (34/34), 268.30 KiB | 438.00 KiB/s, done.\n",
            "Resolving deltas: 100% (11/11), done.\n"
          ]
        }
      ],
      "source": [
        "!git clone https://github.com/doughagey/UnderstatScraper"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#!/usr/bin/env python3\n",
        "# -*- coding: utf-8 -*-\n",
        "\"\"\"\n",
        "Created on Mar 1 17:50:36 2020\n",
        "@author: doug hagey\n",
        "\"\"\"\n",
        "\n",
        "import pandas as pd\n",
        "import requests\n",
        "\n",
        "def scrape_understat(payload):\n",
        "    #Build request using url, headers (mimicking what Firefox does normally)\n",
        "    #Works best with verify=True as you won't get the ssl errors. Payload is\n",
        "    #taylored for each request\n",
        "    url = 'https://understat.com/main/getPlayersStats/'\n",
        "    headers = {'content-type':'application/json; charset=utf-8',\n",
        "    'Host': 'understat.com',\n",
        "    'User-Agent': 'Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:73.0) Gecko/20100101 Firefox/73.0',\n",
        "    'Accept': 'application/json, text/javascript, */*; q=0.01',\n",
        "    'Accept-Encoding': 'gzip, deflate, br',\n",
        "    'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8',\n",
        "    'X-Requested-With': 'XMLHttpRequest',\n",
        "    'Content-Length': '310',\n",
        "    'Origin': 'https: // understat.com',\n",
        "    'Connection': 'keep - alive',\n",
        "    'Referer': 'https: // understat.com / league / EPL'\n",
        "    }\n",
        "    response = requests.post(url, data=payload, headers = headers, verify=True)\n",
        "    response_json = response.json()\n",
        "    inner_wrapper = response_json['response']\n",
        "    json_player_data = inner_wrapper['players']\n",
        "    return json_player_data\n",
        "\n",
        "def clean_df(player_df, weeks):\n",
        "    # Get rid of the columns that we don't care about\n",
        "    #player_df.drop(['yellow_cards','red_cards', 'xGChain','xGBuildup','games','time'], axis=1, inplace=True)\n",
        "    player_df  = player_df.rename(columns={'goals':'goals_'+weeks,'xG':'xG_'+weeks,'assists':'assists_'+weeks, 'xA':'xA_'+weeks, 'shots':'shots_'+weeks, 'key_passes':\n",
        "        'key_passes_'+weeks,'npg':'npg_'+weeks,'npxG':'npxG_'+weeks})\n",
        "    if weeks != '1wks':\n",
        "        player_df.drop(['position','team_title'], axis=1, inplace=True)\n",
        "    return(player_df)\n",
        "\n",
        "#Creprint('Getting data for last 1 matches')\n",
        "json_player_data = scrape_understat({'league':'EPL', 'season':'2023', 'n_last_matches': '17'})\n",
        "one_game_table = pd.DataFrame(json_player_data)\n",
        "one_game_df = clean_df(one_game_table,'6wks')\n",
        "\n",
        "\n",
        "print('Getting data for the whole season')\n",
        "json_player_data = scrape_understat({'league':'EPL', 'season':'2023'})\n",
        "season_table = pd.DataFrame(json_player_data)\n",
        "season_df = clean_df(season_table, 'season')\n",
        "\n",
        "print('Getting data for last 1 matches')\n",
        "json_player_data = scrape_understat({'league':'EPL', 'season':'2023', 'n_last_matches': '17'})\n",
        "one_game_table = pd.DataFrame(json_player_data)\n",
        "one_game_df = clean_df(one_game_table, '1wks')\n",
        "\n",
        "print('Merging Tables')\n",
        "EPL_player_df = pd.merge(one_game_df, season_df, on=['id','player_name'])\n",
        "EPL_player_df = pd.merge(EPL_player_df, one_game_df, on=['id','player_name'])\n",
        "\n",
        "\n",
        "print('Writing CSV File')\n",
        "EPL_player_df.to_csv('Understat_EPL_Player_Data_Combined 2021.csv', encoding='utf-8', index=False)\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "D7aK55NHgZOt",
        "outputId": "84cfb598-5b9e-43df-dfbf-e581c99e073e"
      },
      "execution_count": 2,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Getting data for the whole season\n",
            "Getting data for last 1 matches\n",
            "Merging Tables\n",
            "Writing CSV File\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "EPL_player_df = EPL_player_df.round(2)\n",
        "EPL_player_df"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 617
        },
        "id": "n__CYp9pmkGz",
        "outputId": "0c61dc11-364a-43ca-e8dc-3e42f29f3fb2"
      },
      "execution_count": 3,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "        id            player_name games_x time_x goals_1wks_x  \\\n",
              "0     8260         Erling Haaland      15   1305           14   \n",
              "1     1250          Mohamed Salah      17   1498           11   \n",
              "2      453          Son Heung-Min      17   1469           10   \n",
              "3     1776           Jarrod Bowen      16   1440           10   \n",
              "4     8865          Ollie Watkins      17   1509            9   \n",
              "..     ...                    ...     ...    ...          ...   \n",
              "489  12199            Alex Murphy       1      1            0   \n",
              "490  12200          Amadou Diallo       1      1            0   \n",
              "491  12204  Benicio Baker-Boaitey       2      2            0   \n",
              "492  12215        Michael Ndiweni       1      1            0   \n",
              "493  12251             Sydie Peck       1      6            0   \n",
              "\n",
              "              xG_1wks_x assists_1wks_x           xA_1wks_x shots_1wks_x  \\\n",
              "0    16.727499932050705              4  3.2472310978919268           58   \n",
              "1     10.77229580283165              7   7.441837605088949           53   \n",
              "2     6.780154183506966              4   5.971939321607351           43   \n",
              "3     7.218599982559681              1  2.2795576956123114           43   \n",
              "4    10.049726076424122              6  3.5883569810539484           50   \n",
              "..                  ...            ...                 ...          ...   \n",
              "489                   0              0                   0            0   \n",
              "490                   0              0                   0            0   \n",
              "491                   0              0                   0            0   \n",
              "492                   0              0                   0            0   \n",
              "493                   0              0                   0            0   \n",
              "\n",
              "    key_passes_1wks_x  ... shots_1wks_y key_passes_1wks_y yellow_cards  \\\n",
              "0                  16  ...           58                16            1   \n",
              "1                  41  ...           53                41            1   \n",
              "2                  32  ...           43                32            1   \n",
              "3                  11  ...           43                11            1   \n",
              "4                  26  ...           50                26            3   \n",
              "..                ...  ...          ...               ...          ...   \n",
              "489                 0  ...            0                 0            0   \n",
              "490                 0  ...            0                 0            0   \n",
              "491                 0  ...            0                 0            0   \n",
              "492                 0  ...            0                 0            0   \n",
              "493                 0  ...            0                 0            0   \n",
              "\n",
              "    red_cards position_y      team_title_y npg_1wks_y         npxG_1wks_y  \\\n",
              "0           0          F   Manchester City         11   13.68282476067543   \n",
              "1           0          F         Liverpool          8    7.72769470512867   \n",
              "2           0        F M         Tottenham          9   6.018985345959663   \n",
              "3           0        F M          West Ham         10   7.218599982559681   \n",
              "4           0          F       Aston Villa          9  10.049726076424122   \n",
              "..        ...        ...               ...        ...                 ...   \n",
              "489         0          S  Newcastle United          0                   0   \n",
              "490         0          S  Newcastle United          0                   0   \n",
              "491         0          S          Brighton          0                   0   \n",
              "492         0          S  Newcastle United          0                   0   \n",
              "493         0          S  Sheffield United          0                   0   \n",
              "\n",
              "                xGChain           xGBuildup  \n",
              "0    16.214465029537678  1.3705047406256199  \n",
              "1    14.869610473513603   3.948832482099533  \n",
              "2    14.396287873387337   4.522126642987132  \n",
              "3     8.182679865509272  1.4770999029278755  \n",
              "4    14.428645104169846   2.091627176851034  \n",
              "..                  ...                 ...  \n",
              "489                   0                   0  \n",
              "490                   0                   0  \n",
              "491  0.1531512588262558  0.1531512588262558  \n",
              "492                   0                   0  \n",
              "493                   0                   0  \n",
              "\n",
              "[494 rows x 48 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-b6aae458-7e00-439a-9a0f-b04b1e3934bc\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>player_name</th>\n",
              "      <th>games_x</th>\n",
              "      <th>time_x</th>\n",
              "      <th>goals_1wks_x</th>\n",
              "      <th>xG_1wks_x</th>\n",
              "      <th>assists_1wks_x</th>\n",
              "      <th>xA_1wks_x</th>\n",
              "      <th>shots_1wks_x</th>\n",
              "      <th>key_passes_1wks_x</th>\n",
              "      <th>...</th>\n",
              "      <th>shots_1wks_y</th>\n",
              "      <th>key_passes_1wks_y</th>\n",
              "      <th>yellow_cards</th>\n",
              "      <th>red_cards</th>\n",
              "      <th>position_y</th>\n",
              "      <th>team_title_y</th>\n",
              "      <th>npg_1wks_y</th>\n",
              "      <th>npxG_1wks_y</th>\n",
              "      <th>xGChain</th>\n",
              "      <th>xGBuildup</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>8260</td>\n",
              "      <td>Erling Haaland</td>\n",
              "      <td>15</td>\n",
              "      <td>1305</td>\n",
              "      <td>14</td>\n",
              "      <td>16.727499932050705</td>\n",
              "      <td>4</td>\n",
              "      <td>3.2472310978919268</td>\n",
              "      <td>58</td>\n",
              "      <td>16</td>\n",
              "      <td>...</td>\n",
              "      <td>58</td>\n",
              "      <td>16</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>F</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>11</td>\n",
              "      <td>13.68282476067543</td>\n",
              "      <td>16.214465029537678</td>\n",
              "      <td>1.3705047406256199</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>1250</td>\n",
              "      <td>Mohamed Salah</td>\n",
              "      <td>17</td>\n",
              "      <td>1498</td>\n",
              "      <td>11</td>\n",
              "      <td>10.77229580283165</td>\n",
              "      <td>7</td>\n",
              "      <td>7.441837605088949</td>\n",
              "      <td>53</td>\n",
              "      <td>41</td>\n",
              "      <td>...</td>\n",
              "      <td>53</td>\n",
              "      <td>41</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>F</td>\n",
              "      <td>Liverpool</td>\n",
              "      <td>8</td>\n",
              "      <td>7.72769470512867</td>\n",
              "      <td>14.869610473513603</td>\n",
              "      <td>3.948832482099533</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>453</td>\n",
              "      <td>Son Heung-Min</td>\n",
              "      <td>17</td>\n",
              "      <td>1469</td>\n",
              "      <td>10</td>\n",
              "      <td>6.780154183506966</td>\n",
              "      <td>4</td>\n",
              "      <td>5.971939321607351</td>\n",
              "      <td>43</td>\n",
              "      <td>32</td>\n",
              "      <td>...</td>\n",
              "      <td>43</td>\n",
              "      <td>32</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>F M</td>\n",
              "      <td>Tottenham</td>\n",
              "      <td>9</td>\n",
              "      <td>6.018985345959663</td>\n",
              "      <td>14.396287873387337</td>\n",
              "      <td>4.522126642987132</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>1776</td>\n",
              "      <td>Jarrod Bowen</td>\n",
              "      <td>16</td>\n",
              "      <td>1440</td>\n",
              "      <td>10</td>\n",
              "      <td>7.218599982559681</td>\n",
              "      <td>1</td>\n",
              "      <td>2.2795576956123114</td>\n",
              "      <td>43</td>\n",
              "      <td>11</td>\n",
              "      <td>...</td>\n",
              "      <td>43</td>\n",
              "      <td>11</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>F M</td>\n",
              "      <td>West Ham</td>\n",
              "      <td>10</td>\n",
              "      <td>7.218599982559681</td>\n",
              "      <td>8.182679865509272</td>\n",
              "      <td>1.4770999029278755</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>8865</td>\n",
              "      <td>Ollie Watkins</td>\n",
              "      <td>17</td>\n",
              "      <td>1509</td>\n",
              "      <td>9</td>\n",
              "      <td>10.049726076424122</td>\n",
              "      <td>6</td>\n",
              "      <td>3.5883569810539484</td>\n",
              "      <td>50</td>\n",
              "      <td>26</td>\n",
              "      <td>...</td>\n",
              "      <td>50</td>\n",
              "      <td>26</td>\n",
              "      <td>3</td>\n",
              "      <td>0</td>\n",
              "      <td>F</td>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>9</td>\n",
              "      <td>10.049726076424122</td>\n",
              "      <td>14.428645104169846</td>\n",
              "      <td>2.091627176851034</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>489</th>\n",
              "      <td>12199</td>\n",
              "      <td>Alex Murphy</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>S</td>\n",
              "      <td>Newcastle United</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>490</th>\n",
              "      <td>12200</td>\n",
              "      <td>Amadou Diallo</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>S</td>\n",
              "      <td>Newcastle United</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>491</th>\n",
              "      <td>12204</td>\n",
              "      <td>Benicio Baker-Boaitey</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>S</td>\n",
              "      <td>Brighton</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.1531512588262558</td>\n",
              "      <td>0.1531512588262558</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>492</th>\n",
              "      <td>12215</td>\n",
              "      <td>Michael Ndiweni</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>S</td>\n",
              "      <td>Newcastle United</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>493</th>\n",
              "      <td>12251</td>\n",
              "      <td>Sydie Peck</td>\n",
              "      <td>1</td>\n",
              "      <td>6</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>S</td>\n",
              "      <td>Sheffield United</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>494 rows × 48 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-b6aae458-7e00-439a-9a0f-b04b1e3934bc')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-b6aae458-7e00-439a-9a0f-b04b1e3934bc button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-b6aae458-7e00-439a-9a0f-b04b1e3934bc');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-ed8f5bc7-7267-4925-84e8-2fd84fcb18be\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-ed8f5bc7-7267-4925-84e8-2fd84fcb18be')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-ed8f5bc7-7267-4925-84e8-2fd84fcb18be button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 3
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "one_game_df.to_csv('one_game_df.csv', encoding='utf-8', index=False)\n",
        "one_game_df['time'] = one_game_df['time'].astype(int)\n",
        "one_game_df = one_game_df[one_game_df['time'] > 40]\n",
        "one_game_df['goals_1wks'] = one_game_df['goals_1wks'].astype(int)\n",
        "one_game_df['xG_1wks'] = one_game_df['xG_1wks'].astype(float)\n",
        "one_game_df['xgdifference'] = one_game_df.goals_1wks - one_game_df.xG_1wks\n",
        "one_game_df['assists_1wks'] = one_game_df['assists_1wks'].astype(int)\n",
        "one_game_df['xA_1wks'] = one_game_df['xA_1wks'].astype(float)\n",
        "one_game_df['xAdifference'] = one_game_df.assists_1wks - one_game_df.xA_1wks\n",
        "seasonedit = one_game_df.drop(columns=[ 'yellow_cards','red_cards','time'])\n",
        "sortXgDifference = seasonedit.sort_values('xgdifference')\n",
        "sortXgDifference.head(10)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "id": "IrXPzyJNg3ui",
        "outputId": "553cdf04-0893-4a5c-ce49-66389947434c"
      },
      "execution_count": 4,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "<ipython-input-4-30b8c2331977>:4: SettingWithCopyWarning: \n",
            "A value is trying to be set on a copy of a slice from a DataFrame.\n",
            "Try using .loc[row_indexer,col_indexer] = value instead\n",
            "\n",
            "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
            "  one_game_df['goals_1wks'] = one_game_df['goals_1wks'].astype(int)\n",
            "<ipython-input-4-30b8c2331977>:5: SettingWithCopyWarning: \n",
            "A value is trying to be set on a copy of a slice from a DataFrame.\n",
            "Try using .loc[row_indexer,col_indexer] = value instead\n",
            "\n",
            "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
            "  one_game_df['xG_1wks'] = one_game_df['xG_1wks'].astype(float)\n",
            "<ipython-input-4-30b8c2331977>:6: SettingWithCopyWarning: \n",
            "A value is trying to be set on a copy of a slice from a DataFrame.\n",
            "Try using .loc[row_indexer,col_indexer] = value instead\n",
            "\n",
            "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
            "  one_game_df['xgdifference'] = one_game_df.goals_1wks - one_game_df.xG_1wks\n",
            "<ipython-input-4-30b8c2331977>:7: SettingWithCopyWarning: \n",
            "A value is trying to be set on a copy of a slice from a DataFrame.\n",
            "Try using .loc[row_indexer,col_indexer] = value instead\n",
            "\n",
            "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
            "  one_game_df['assists_1wks'] = one_game_df['assists_1wks'].astype(int)\n",
            "<ipython-input-4-30b8c2331977>:8: SettingWithCopyWarning: \n",
            "A value is trying to be set on a copy of a slice from a DataFrame.\n",
            "Try using .loc[row_indexer,col_indexer] = value instead\n",
            "\n",
            "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
            "  one_game_df['xA_1wks'] = one_game_df['xA_1wks'].astype(float)\n",
            "<ipython-input-4-30b8c2331977>:9: SettingWithCopyWarning: \n",
            "A value is trying to be set on a copy of a slice from a DataFrame.\n",
            "Try using .loc[row_indexer,col_indexer] = value instead\n",
            "\n",
            "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
            "  one_game_df['xAdifference'] = one_game_df.assists_1wks - one_game_df.xA_1wks\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "        id            player_name games  goals_1wks    xG_1wks  assists_1wks  \\\n",
              "37   10720           Darwin Núñez    16           4   9.099289             5   \n",
              "10   10048        Nicolas Jackson    16           7  10.598645             1   \n",
              "435  11055         Rasmus Højlund    13           0   3.589427             0   \n",
              "69     556        Marcus Rashford    16           2   5.070473             1   \n",
              "75    3621            Neal Maupay    14           2   4.963909             2   \n",
              "50    5555  Dominic Calvert-Lewin    13           3   5.842522             0   \n",
              "105  11356         Enzo Fernández    16           2   4.734172             0   \n",
              "0     8260         Erling Haaland    15          14  16.727500             4   \n",
              "51    5786            Yoane Wissa    17           3   5.665014             1   \n",
              "192  10760        Brennan Johnson    14           1   2.963982             2   \n",
              "\n",
              "      xA_1wks shots_1wks key_passes_1wks position  \\\n",
              "37   3.012009         47              14      F S   \n",
              "10   1.340127         41              11      F S   \n",
              "435  0.764321         18              11      F S   \n",
              "69   1.562463         37              14    F M S   \n",
              "75   1.141363         26               9      F S   \n",
              "50   0.551739         28               5      F S   \n",
              "105  1.619420         30              14      M S   \n",
              "0    3.247231         58              16        F   \n",
              "51   1.535933         40              13      F S   \n",
              "192  1.589753         21              12    F M S   \n",
              "\n",
              "                      team_title npg_1wks           npxG_1wks  \\\n",
              "37                     Liverpool        4   9.099289217032492   \n",
              "10                       Chelsea        7  10.598645154386759   \n",
              "435            Manchester United        0  3.5894269682466984   \n",
              "69             Manchester United        1    4.30930445343256   \n",
              "75             Brentford,Everton        2   4.963908527046442   \n",
              "50                       Everton        3    5.84252218529582   \n",
              "105                      Chelsea        1   3.211833940818906   \n",
              "0                Manchester City       11   13.68282476067543   \n",
              "51                     Brentford        3   5.665013533085585   \n",
              "192  Nottingham Forest,Tottenham        1   2.963981583714485   \n",
              "\n",
              "                xGChain           xGBuildup  xgdifference  xAdifference  \n",
              "37   12.052340842783451  1.8790182247757912     -5.099289      1.987991  \n",
              "10   11.679743517190218  1.9156055115163326     -3.598645     -0.340127  \n",
              "435   4.181118633598089  0.9043765999376774     -3.589427     -0.764321  \n",
              "69    7.992390006780624  2.7305994369089603     -3.070473     -0.562463  \n",
              "75    6.983009595423937  1.4420195445418358     -2.963909      0.858637  \n",
              "50     4.74762174859643  0.3567850310355425     -2.842522     -0.551739  \n",
              "105     8.2339046895504   5.353159258142114     -2.734172     -1.619420  \n",
              "0    16.214465029537678  1.3705047406256199     -2.727500      0.752769  \n",
              "51    7.758880220353603  2.2648330330848694     -2.665014     -0.535933  \n",
              "192   5.829761207103729  1.5604553297162056     -1.963982      0.410247  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-fefd2e4d-3835-4e6a-9ddc-aced6707bbd3\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>player_name</th>\n",
              "      <th>games</th>\n",
              "      <th>goals_1wks</th>\n",
              "      <th>xG_1wks</th>\n",
              "      <th>assists_1wks</th>\n",
              "      <th>xA_1wks</th>\n",
              "      <th>shots_1wks</th>\n",
              "      <th>key_passes_1wks</th>\n",
              "      <th>position</th>\n",
              "      <th>team_title</th>\n",
              "      <th>npg_1wks</th>\n",
              "      <th>npxG_1wks</th>\n",
              "      <th>xGChain</th>\n",
              "      <th>xGBuildup</th>\n",
              "      <th>xgdifference</th>\n",
              "      <th>xAdifference</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>37</th>\n",
              "      <td>10720</td>\n",
              "      <td>Darwin Núñez</td>\n",
              "      <td>16</td>\n",
              "      <td>4</td>\n",
              "      <td>9.099289</td>\n",
              "      <td>5</td>\n",
              "      <td>3.012009</td>\n",
              "      <td>47</td>\n",
              "      <td>14</td>\n",
              "      <td>F S</td>\n",
              "      <td>Liverpool</td>\n",
              "      <td>4</td>\n",
              "      <td>9.099289217032492</td>\n",
              "      <td>12.052340842783451</td>\n",
              "      <td>1.8790182247757912</td>\n",
              "      <td>-5.099289</td>\n",
              "      <td>1.987991</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10</th>\n",
              "      <td>10048</td>\n",
              "      <td>Nicolas Jackson</td>\n",
              "      <td>16</td>\n",
              "      <td>7</td>\n",
              "      <td>10.598645</td>\n",
              "      <td>1</td>\n",
              "      <td>1.340127</td>\n",
              "      <td>41</td>\n",
              "      <td>11</td>\n",
              "      <td>F S</td>\n",
              "      <td>Chelsea</td>\n",
              "      <td>7</td>\n",
              "      <td>10.598645154386759</td>\n",
              "      <td>11.679743517190218</td>\n",
              "      <td>1.9156055115163326</td>\n",
              "      <td>-3.598645</td>\n",
              "      <td>-0.340127</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>435</th>\n",
              "      <td>11055</td>\n",
              "      <td>Rasmus Højlund</td>\n",
              "      <td>13</td>\n",
              "      <td>0</td>\n",
              "      <td>3.589427</td>\n",
              "      <td>0</td>\n",
              "      <td>0.764321</td>\n",
              "      <td>18</td>\n",
              "      <td>11</td>\n",
              "      <td>F S</td>\n",
              "      <td>Manchester United</td>\n",
              "      <td>0</td>\n",
              "      <td>3.5894269682466984</td>\n",
              "      <td>4.181118633598089</td>\n",
              "      <td>0.9043765999376774</td>\n",
              "      <td>-3.589427</td>\n",
              "      <td>-0.764321</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>69</th>\n",
              "      <td>556</td>\n",
              "      <td>Marcus Rashford</td>\n",
              "      <td>16</td>\n",
              "      <td>2</td>\n",
              "      <td>5.070473</td>\n",
              "      <td>1</td>\n",
              "      <td>1.562463</td>\n",
              "      <td>37</td>\n",
              "      <td>14</td>\n",
              "      <td>F M S</td>\n",
              "      <td>Manchester United</td>\n",
              "      <td>1</td>\n",
              "      <td>4.30930445343256</td>\n",
              "      <td>7.992390006780624</td>\n",
              "      <td>2.7305994369089603</td>\n",
              "      <td>-3.070473</td>\n",
              "      <td>-0.562463</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>75</th>\n",
              "      <td>3621</td>\n",
              "      <td>Neal Maupay</td>\n",
              "      <td>14</td>\n",
              "      <td>2</td>\n",
              "      <td>4.963909</td>\n",
              "      <td>2</td>\n",
              "      <td>1.141363</td>\n",
              "      <td>26</td>\n",
              "      <td>9</td>\n",
              "      <td>F S</td>\n",
              "      <td>Brentford,Everton</td>\n",
              "      <td>2</td>\n",
              "      <td>4.963908527046442</td>\n",
              "      <td>6.983009595423937</td>\n",
              "      <td>1.4420195445418358</td>\n",
              "      <td>-2.963909</td>\n",
              "      <td>0.858637</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>50</th>\n",
              "      <td>5555</td>\n",
              "      <td>Dominic Calvert-Lewin</td>\n",
              "      <td>13</td>\n",
              "      <td>3</td>\n",
              "      <td>5.842522</td>\n",
              "      <td>0</td>\n",
              "      <td>0.551739</td>\n",
              "      <td>28</td>\n",
              "      <td>5</td>\n",
              "      <td>F S</td>\n",
              "      <td>Everton</td>\n",
              "      <td>3</td>\n",
              "      <td>5.84252218529582</td>\n",
              "      <td>4.74762174859643</td>\n",
              "      <td>0.3567850310355425</td>\n",
              "      <td>-2.842522</td>\n",
              "      <td>-0.551739</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>105</th>\n",
              "      <td>11356</td>\n",
              "      <td>Enzo Fernández</td>\n",
              "      <td>16</td>\n",
              "      <td>2</td>\n",
              "      <td>4.734172</td>\n",
              "      <td>0</td>\n",
              "      <td>1.619420</td>\n",
              "      <td>30</td>\n",
              "      <td>14</td>\n",
              "      <td>M S</td>\n",
              "      <td>Chelsea</td>\n",
              "      <td>1</td>\n",
              "      <td>3.211833940818906</td>\n",
              "      <td>8.2339046895504</td>\n",
              "      <td>5.353159258142114</td>\n",
              "      <td>-2.734172</td>\n",
              "      <td>-1.619420</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>8260</td>\n",
              "      <td>Erling Haaland</td>\n",
              "      <td>15</td>\n",
              "      <td>14</td>\n",
              "      <td>16.727500</td>\n",
              "      <td>4</td>\n",
              "      <td>3.247231</td>\n",
              "      <td>58</td>\n",
              "      <td>16</td>\n",
              "      <td>F</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>11</td>\n",
              "      <td>13.68282476067543</td>\n",
              "      <td>16.214465029537678</td>\n",
              "      <td>1.3705047406256199</td>\n",
              "      <td>-2.727500</td>\n",
              "      <td>0.752769</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>51</th>\n",
              "      <td>5786</td>\n",
              "      <td>Yoane Wissa</td>\n",
              "      <td>17</td>\n",
              "      <td>3</td>\n",
              "      <td>5.665014</td>\n",
              "      <td>1</td>\n",
              "      <td>1.535933</td>\n",
              "      <td>40</td>\n",
              "      <td>13</td>\n",
              "      <td>F S</td>\n",
              "      <td>Brentford</td>\n",
              "      <td>3</td>\n",
              "      <td>5.665013533085585</td>\n",
              "      <td>7.758880220353603</td>\n",
              "      <td>2.2648330330848694</td>\n",
              "      <td>-2.665014</td>\n",
              "      <td>-0.535933</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>192</th>\n",
              "      <td>10760</td>\n",
              "      <td>Brennan Johnson</td>\n",
              "      <td>14</td>\n",
              "      <td>1</td>\n",
              "      <td>2.963982</td>\n",
              "      <td>2</td>\n",
              "      <td>1.589753</td>\n",
              "      <td>21</td>\n",
              "      <td>12</td>\n",
              "      <td>F M S</td>\n",
              "      <td>Nottingham Forest,Tottenham</td>\n",
              "      <td>1</td>\n",
              "      <td>2.963981583714485</td>\n",
              "      <td>5.829761207103729</td>\n",
              "      <td>1.5604553297162056</td>\n",
              "      <td>-1.963982</td>\n",
              "      <td>0.410247</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-fefd2e4d-3835-4e6a-9ddc-aced6707bbd3')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-fefd2e4d-3835-4e6a-9ddc-aced6707bbd3 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-fefd2e4d-3835-4e6a-9ddc-aced6707bbd3');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-7dc0a0e5-e208-4d4b-87c5-833e964ced01\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-7dc0a0e5-e208-4d4b-87c5-833e964ced01')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-7dc0a0e5-e208-4d4b-87c5-833e964ced01 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 4
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "sortXgDifference.tail(10)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 502
        },
        "id": "UxuLfRINhwx7",
        "outputId": "b2085a35-4016-446d-8d07-7171404eb539"
      },
      "execution_count": 5,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "       id       player_name games  goals_1wks   xG_1wks  assists_1wks  \\\n",
              "21   6691  Dejan Kulusevski    17           5  2.797915             2   \n",
              "61   8323    Josh Brownhill    16           3  0.683799             0   \n",
              "40  11718    Elijah Adebayo    16           4  1.595056             0   \n",
              "56   7166    Mathias Jensen    12           3  0.475169             2   \n",
              "28   3635    Bernardo Silva    14           4  1.425086             3   \n",
              "6    8845    Hee-Chan Hwang    17           8  5.323231             2   \n",
              "3    1776      Jarrod Bowen    16          10  7.218600             1   \n",
              "15  10177     Evan Ferguson    16           6  2.804309             0   \n",
              "2     453     Son Heung-Min    17          10  6.780154             4   \n",
              "25  12027    Mohammed Kudus    14           5  1.649271             1   \n",
              "\n",
              "     xA_1wks shots_1wks key_passes_1wks position               team_title  \\\n",
              "21  4.809931         32              38      F M                Tottenham   \n",
              "61  0.688414         15              15      M S                  Burnley   \n",
              "40  0.377410         11               7      F S                    Luton   \n",
              "56  2.500248          7              20        M                Brentford   \n",
              "28  4.691830         13              28      M S          Manchester City   \n",
              "6   2.097343         29              12    F M S  Wolverhampton Wanderers   \n",
              "3   2.279558         43              11      F M                 West Ham   \n",
              "15  0.606391         23               5      F S                 Brighton   \n",
              "2   5.971939         43              32      F M                Tottenham   \n",
              "25  1.332198         18              11    F M S                 West Ham   \n",
              "\n",
              "   npg_1wks            npxG_1wks             xGChain           xGBuildup  \\\n",
              "21        5   2.7979148626327515  12.010644599795341   6.310585133731365   \n",
              "61        3   0.6837993059307337  2.5725933611392975  1.9543663058429956   \n",
              "40        4   1.5950560960918665  2.3124877009540796  0.5994829423725605   \n",
              "56        3  0.47516870498657227  5.3663221672177315    4.68579095415771   \n",
              "28        4   1.4250855967402458  11.060811733826995   6.967919548973441   \n",
              "6         7     4.56206258572638   7.166812987066805  2.0526657747104764   \n",
              "3        10    7.218599982559681   8.182679865509272  1.4770999029278755   \n",
              "15        6   2.8043092247098684   5.259531259536743  1.9688059650361538   \n",
              "2         9    6.018985345959663  14.396287873387337   4.522126642987132   \n",
              "25        5    1.649270860478282    4.18217708542943   2.018879044800997   \n",
              "\n",
              "    xgdifference  xAdifference  \n",
              "21      2.202085     -2.809931  \n",
              "61      2.316201     -0.688414  \n",
              "40      2.404944     -0.377410  \n",
              "56      2.524831     -0.500248  \n",
              "28      2.574914     -1.691830  \n",
              "6       2.676769     -0.097343  \n",
              "3       2.781400     -1.279558  \n",
              "15      3.195691     -0.606391  \n",
              "2       3.219846     -1.971939  \n",
              "25      3.350729     -0.332198  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-7a4778e2-8da7-49bd-87df-1616411f635e\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>player_name</th>\n",
              "      <th>games</th>\n",
              "      <th>goals_1wks</th>\n",
              "      <th>xG_1wks</th>\n",
              "      <th>assists_1wks</th>\n",
              "      <th>xA_1wks</th>\n",
              "      <th>shots_1wks</th>\n",
              "      <th>key_passes_1wks</th>\n",
              "      <th>position</th>\n",
              "      <th>team_title</th>\n",
              "      <th>npg_1wks</th>\n",
              "      <th>npxG_1wks</th>\n",
              "      <th>xGChain</th>\n",
              "      <th>xGBuildup</th>\n",
              "      <th>xgdifference</th>\n",
              "      <th>xAdifference</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>21</th>\n",
              "      <td>6691</td>\n",
              "      <td>Dejan Kulusevski</td>\n",
              "      <td>17</td>\n",
              "      <td>5</td>\n",
              "      <td>2.797915</td>\n",
              "      <td>2</td>\n",
              "      <td>4.809931</td>\n",
              "      <td>32</td>\n",
              "      <td>38</td>\n",
              "      <td>F M</td>\n",
              "      <td>Tottenham</td>\n",
              "      <td>5</td>\n",
              "      <td>2.7979148626327515</td>\n",
              "      <td>12.010644599795341</td>\n",
              "      <td>6.310585133731365</td>\n",
              "      <td>2.202085</td>\n",
              "      <td>-2.809931</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>61</th>\n",
              "      <td>8323</td>\n",
              "      <td>Josh Brownhill</td>\n",
              "      <td>16</td>\n",
              "      <td>3</td>\n",
              "      <td>0.683799</td>\n",
              "      <td>0</td>\n",
              "      <td>0.688414</td>\n",
              "      <td>15</td>\n",
              "      <td>15</td>\n",
              "      <td>M S</td>\n",
              "      <td>Burnley</td>\n",
              "      <td>3</td>\n",
              "      <td>0.6837993059307337</td>\n",
              "      <td>2.5725933611392975</td>\n",
              "      <td>1.9543663058429956</td>\n",
              "      <td>2.316201</td>\n",
              "      <td>-0.688414</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>40</th>\n",
              "      <td>11718</td>\n",
              "      <td>Elijah Adebayo</td>\n",
              "      <td>16</td>\n",
              "      <td>4</td>\n",
              "      <td>1.595056</td>\n",
              "      <td>0</td>\n",
              "      <td>0.377410</td>\n",
              "      <td>11</td>\n",
              "      <td>7</td>\n",
              "      <td>F S</td>\n",
              "      <td>Luton</td>\n",
              "      <td>4</td>\n",
              "      <td>1.5950560960918665</td>\n",
              "      <td>2.3124877009540796</td>\n",
              "      <td>0.5994829423725605</td>\n",
              "      <td>2.404944</td>\n",
              "      <td>-0.377410</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>56</th>\n",
              "      <td>7166</td>\n",
              "      <td>Mathias Jensen</td>\n",
              "      <td>12</td>\n",
              "      <td>3</td>\n",
              "      <td>0.475169</td>\n",
              "      <td>2</td>\n",
              "      <td>2.500248</td>\n",
              "      <td>7</td>\n",
              "      <td>20</td>\n",
              "      <td>M</td>\n",
              "      <td>Brentford</td>\n",
              "      <td>3</td>\n",
              "      <td>0.47516870498657227</td>\n",
              "      <td>5.3663221672177315</td>\n",
              "      <td>4.68579095415771</td>\n",
              "      <td>2.524831</td>\n",
              "      <td>-0.500248</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>28</th>\n",
              "      <td>3635</td>\n",
              "      <td>Bernardo Silva</td>\n",
              "      <td>14</td>\n",
              "      <td>4</td>\n",
              "      <td>1.425086</td>\n",
              "      <td>3</td>\n",
              "      <td>4.691830</td>\n",
              "      <td>13</td>\n",
              "      <td>28</td>\n",
              "      <td>M S</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>4</td>\n",
              "      <td>1.4250855967402458</td>\n",
              "      <td>11.060811733826995</td>\n",
              "      <td>6.967919548973441</td>\n",
              "      <td>2.574914</td>\n",
              "      <td>-1.691830</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>8845</td>\n",
              "      <td>Hee-Chan Hwang</td>\n",
              "      <td>17</td>\n",
              "      <td>8</td>\n",
              "      <td>5.323231</td>\n",
              "      <td>2</td>\n",
              "      <td>2.097343</td>\n",
              "      <td>29</td>\n",
              "      <td>12</td>\n",
              "      <td>F M S</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>7</td>\n",
              "      <td>4.56206258572638</td>\n",
              "      <td>7.166812987066805</td>\n",
              "      <td>2.0526657747104764</td>\n",
              "      <td>2.676769</td>\n",
              "      <td>-0.097343</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>1776</td>\n",
              "      <td>Jarrod Bowen</td>\n",
              "      <td>16</td>\n",
              "      <td>10</td>\n",
              "      <td>7.218600</td>\n",
              "      <td>1</td>\n",
              "      <td>2.279558</td>\n",
              "      <td>43</td>\n",
              "      <td>11</td>\n",
              "      <td>F M</td>\n",
              "      <td>West Ham</td>\n",
              "      <td>10</td>\n",
              "      <td>7.218599982559681</td>\n",
              "      <td>8.182679865509272</td>\n",
              "      <td>1.4770999029278755</td>\n",
              "      <td>2.781400</td>\n",
              "      <td>-1.279558</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>15</th>\n",
              "      <td>10177</td>\n",
              "      <td>Evan Ferguson</td>\n",
              "      <td>16</td>\n",
              "      <td>6</td>\n",
              "      <td>2.804309</td>\n",
              "      <td>0</td>\n",
              "      <td>0.606391</td>\n",
              "      <td>23</td>\n",
              "      <td>5</td>\n",
              "      <td>F S</td>\n",
              "      <td>Brighton</td>\n",
              "      <td>6</td>\n",
              "      <td>2.8043092247098684</td>\n",
              "      <td>5.259531259536743</td>\n",
              "      <td>1.9688059650361538</td>\n",
              "      <td>3.195691</td>\n",
              "      <td>-0.606391</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>453</td>\n",
              "      <td>Son Heung-Min</td>\n",
              "      <td>17</td>\n",
              "      <td>10</td>\n",
              "      <td>6.780154</td>\n",
              "      <td>4</td>\n",
              "      <td>5.971939</td>\n",
              "      <td>43</td>\n",
              "      <td>32</td>\n",
              "      <td>F M</td>\n",
              "      <td>Tottenham</td>\n",
              "      <td>9</td>\n",
              "      <td>6.018985345959663</td>\n",
              "      <td>14.396287873387337</td>\n",
              "      <td>4.522126642987132</td>\n",
              "      <td>3.219846</td>\n",
              "      <td>-1.971939</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>25</th>\n",
              "      <td>12027</td>\n",
              "      <td>Mohammed Kudus</td>\n",
              "      <td>14</td>\n",
              "      <td>5</td>\n",
              "      <td>1.649271</td>\n",
              "      <td>1</td>\n",
              "      <td>1.332198</td>\n",
              "      <td>18</td>\n",
              "      <td>11</td>\n",
              "      <td>F M S</td>\n",
              "      <td>West Ham</td>\n",
              "      <td>5</td>\n",
              "      <td>1.649270860478282</td>\n",
              "      <td>4.18217708542943</td>\n",
              "      <td>2.018879044800997</td>\n",
              "      <td>3.350729</td>\n",
              "      <td>-0.332198</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-7a4778e2-8da7-49bd-87df-1616411f635e')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-7a4778e2-8da7-49bd-87df-1616411f635e button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-7a4778e2-8da7-49bd-87df-1616411f635e');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-1e882d7f-3245-4a80-8442-5af5bb9e595b\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-1e882d7f-3245-4a80-8442-5af5bb9e595b')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-1e882d7f-3245-4a80-8442-5af5bb9e595b button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 5
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "one_game_df"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 548
        },
        "id": "NDPdgpJUVBBZ",
        "outputId": "c7f403ba-a9a1-4f30-afb1-eb0c6de46a44"
      },
      "execution_count": 6,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "        id       player_name games  time  goals_1wks    xG_1wks  assists_1wks  \\\n",
              "0     8260    Erling Haaland    15  1305          14  16.727500             4   \n",
              "1     1250     Mohamed Salah    17  1498          11  10.772296             7   \n",
              "2      453     Son Heung-Min    17  1469          10   6.780154             4   \n",
              "3     1776      Jarrod Bowen    16  1440          10   7.218600             1   \n",
              "4     8865     Ollie Watkins    17  1509           9  10.049726             6   \n",
              "..     ...               ...   ...   ...         ...        ...           ...   \n",
              "477  12032  Djordje Petrovic     2    92           0   0.000000             0   \n",
              "480  12094       Mike Trésor    10   260           0   0.661599             0   \n",
              "483  12123           Murillo    11   973           0   0.695825             0   \n",
              "484  12149        Alex Scott     3   194           0   0.082303             0   \n",
              "487  12187      Jordan Clark     5    72           0   0.000000             0   \n",
              "\n",
              "      xA_1wks shots_1wks key_passes_1wks yellow_cards red_cards position  \\\n",
              "0    3.247231         58              16            1         0        F   \n",
              "1    7.441838         53              41            1         0        F   \n",
              "2    5.971939         43              32            1         0      F M   \n",
              "3    2.279558         43              11            1         0      F M   \n",
              "4    3.588357         50              26            3         0        F   \n",
              "..        ...        ...             ...          ...       ...      ...   \n",
              "477  0.000000          0               0            0         0     GK S   \n",
              "480  0.480966          5               4            0         0    F M S   \n",
              "483  0.493345          7               4            2         0        D   \n",
              "484  0.089547          2               1            1         0        M   \n",
              "487  0.028226          0               1            1         0        S   \n",
              "\n",
              "            team_title npg_1wks            npxG_1wks               xGChain  \\\n",
              "0      Manchester City       11    13.68282476067543    16.214465029537678   \n",
              "1            Liverpool        8     7.72769470512867    14.869610473513603   \n",
              "2            Tottenham        9    6.018985345959663    14.396287873387337   \n",
              "3             West Ham       10    7.218599982559681     8.182679865509272   \n",
              "4          Aston Villa        9   10.049726076424122    14.428645104169846   \n",
              "..                 ...      ...                  ...                   ...   \n",
              "477            Chelsea        0                    0                     0   \n",
              "480            Burnley        0   0.6615988579578698     0.890179191250354   \n",
              "483  Nottingham Forest        0   0.6958251241594553     2.977968465536833   \n",
              "484        Bournemouth        0  0.08230337873101234    0.9122739285230637   \n",
              "487              Luton        0                    0  0.028225945308804512   \n",
              "\n",
              "              xGBuildup  xgdifference  xAdifference  \n",
              "0    1.3705047406256199     -2.727500      0.752769  \n",
              "1     3.948832482099533      0.227704     -0.441838  \n",
              "2     4.522126642987132      3.219846     -1.971939  \n",
              "3    1.4770999029278755      2.781400     -1.279558  \n",
              "4     2.091627176851034     -1.049726      2.411643  \n",
              "..                  ...           ...           ...  \n",
              "477                   0      0.000000      0.000000  \n",
              "480  0.2473519933409989     -0.661599     -0.480966  \n",
              "483   2.559963984414935     -0.695825     -0.493345  \n",
              "484  0.8663346916437149     -0.082303     -0.089547  \n",
              "487                   0      0.000000     -0.028226  \n",
              "\n",
              "[446 rows x 20 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-f87acc9f-d1ae-425e-b58f-a699e28e92cd\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>player_name</th>\n",
              "      <th>games</th>\n",
              "      <th>time</th>\n",
              "      <th>goals_1wks</th>\n",
              "      <th>xG_1wks</th>\n",
              "      <th>assists_1wks</th>\n",
              "      <th>xA_1wks</th>\n",
              "      <th>shots_1wks</th>\n",
              "      <th>key_passes_1wks</th>\n",
              "      <th>yellow_cards</th>\n",
              "      <th>red_cards</th>\n",
              "      <th>position</th>\n",
              "      <th>team_title</th>\n",
              "      <th>npg_1wks</th>\n",
              "      <th>npxG_1wks</th>\n",
              "      <th>xGChain</th>\n",
              "      <th>xGBuildup</th>\n",
              "      <th>xgdifference</th>\n",
              "      <th>xAdifference</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>8260</td>\n",
              "      <td>Erling Haaland</td>\n",
              "      <td>15</td>\n",
              "      <td>1305</td>\n",
              "      <td>14</td>\n",
              "      <td>16.727500</td>\n",
              "      <td>4</td>\n",
              "      <td>3.247231</td>\n",
              "      <td>58</td>\n",
              "      <td>16</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>F</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>11</td>\n",
              "      <td>13.68282476067543</td>\n",
              "      <td>16.214465029537678</td>\n",
              "      <td>1.3705047406256199</td>\n",
              "      <td>-2.727500</td>\n",
              "      <td>0.752769</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>1250</td>\n",
              "      <td>Mohamed Salah</td>\n",
              "      <td>17</td>\n",
              "      <td>1498</td>\n",
              "      <td>11</td>\n",
              "      <td>10.772296</td>\n",
              "      <td>7</td>\n",
              "      <td>7.441838</td>\n",
              "      <td>53</td>\n",
              "      <td>41</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>F</td>\n",
              "      <td>Liverpool</td>\n",
              "      <td>8</td>\n",
              "      <td>7.72769470512867</td>\n",
              "      <td>14.869610473513603</td>\n",
              "      <td>3.948832482099533</td>\n",
              "      <td>0.227704</td>\n",
              "      <td>-0.441838</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>453</td>\n",
              "      <td>Son Heung-Min</td>\n",
              "      <td>17</td>\n",
              "      <td>1469</td>\n",
              "      <td>10</td>\n",
              "      <td>6.780154</td>\n",
              "      <td>4</td>\n",
              "      <td>5.971939</td>\n",
              "      <td>43</td>\n",
              "      <td>32</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>F M</td>\n",
              "      <td>Tottenham</td>\n",
              "      <td>9</td>\n",
              "      <td>6.018985345959663</td>\n",
              "      <td>14.396287873387337</td>\n",
              "      <td>4.522126642987132</td>\n",
              "      <td>3.219846</td>\n",
              "      <td>-1.971939</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>1776</td>\n",
              "      <td>Jarrod Bowen</td>\n",
              "      <td>16</td>\n",
              "      <td>1440</td>\n",
              "      <td>10</td>\n",
              "      <td>7.218600</td>\n",
              "      <td>1</td>\n",
              "      <td>2.279558</td>\n",
              "      <td>43</td>\n",
              "      <td>11</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>F M</td>\n",
              "      <td>West Ham</td>\n",
              "      <td>10</td>\n",
              "      <td>7.218599982559681</td>\n",
              "      <td>8.182679865509272</td>\n",
              "      <td>1.4770999029278755</td>\n",
              "      <td>2.781400</td>\n",
              "      <td>-1.279558</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>8865</td>\n",
              "      <td>Ollie Watkins</td>\n",
              "      <td>17</td>\n",
              "      <td>1509</td>\n",
              "      <td>9</td>\n",
              "      <td>10.049726</td>\n",
              "      <td>6</td>\n",
              "      <td>3.588357</td>\n",
              "      <td>50</td>\n",
              "      <td>26</td>\n",
              "      <td>3</td>\n",
              "      <td>0</td>\n",
              "      <td>F</td>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>9</td>\n",
              "      <td>10.049726076424122</td>\n",
              "      <td>14.428645104169846</td>\n",
              "      <td>2.091627176851034</td>\n",
              "      <td>-1.049726</td>\n",
              "      <td>2.411643</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>477</th>\n",
              "      <td>12032</td>\n",
              "      <td>Djordje Petrovic</td>\n",
              "      <td>2</td>\n",
              "      <td>92</td>\n",
              "      <td>0</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>GK S</td>\n",
              "      <td>Chelsea</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>480</th>\n",
              "      <td>12094</td>\n",
              "      <td>Mike Trésor</td>\n",
              "      <td>10</td>\n",
              "      <td>260</td>\n",
              "      <td>0</td>\n",
              "      <td>0.661599</td>\n",
              "      <td>0</td>\n",
              "      <td>0.480966</td>\n",
              "      <td>5</td>\n",
              "      <td>4</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>F M S</td>\n",
              "      <td>Burnley</td>\n",
              "      <td>0</td>\n",
              "      <td>0.6615988579578698</td>\n",
              "      <td>0.890179191250354</td>\n",
              "      <td>0.2473519933409989</td>\n",
              "      <td>-0.661599</td>\n",
              "      <td>-0.480966</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>483</th>\n",
              "      <td>12123</td>\n",
              "      <td>Murillo</td>\n",
              "      <td>11</td>\n",
              "      <td>973</td>\n",
              "      <td>0</td>\n",
              "      <td>0.695825</td>\n",
              "      <td>0</td>\n",
              "      <td>0.493345</td>\n",
              "      <td>7</td>\n",
              "      <td>4</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>D</td>\n",
              "      <td>Nottingham Forest</td>\n",
              "      <td>0</td>\n",
              "      <td>0.6958251241594553</td>\n",
              "      <td>2.977968465536833</td>\n",
              "      <td>2.559963984414935</td>\n",
              "      <td>-0.695825</td>\n",
              "      <td>-0.493345</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>484</th>\n",
              "      <td>12149</td>\n",
              "      <td>Alex Scott</td>\n",
              "      <td>3</td>\n",
              "      <td>194</td>\n",
              "      <td>0</td>\n",
              "      <td>0.082303</td>\n",
              "      <td>0</td>\n",
              "      <td>0.089547</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>M</td>\n",
              "      <td>Bournemouth</td>\n",
              "      <td>0</td>\n",
              "      <td>0.08230337873101234</td>\n",
              "      <td>0.9122739285230637</td>\n",
              "      <td>0.8663346916437149</td>\n",
              "      <td>-0.082303</td>\n",
              "      <td>-0.089547</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>487</th>\n",
              "      <td>12187</td>\n",
              "      <td>Jordan Clark</td>\n",
              "      <td>5</td>\n",
              "      <td>72</td>\n",
              "      <td>0</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0</td>\n",
              "      <td>0.028226</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>S</td>\n",
              "      <td>Luton</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.028225945308804512</td>\n",
              "      <td>0</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>-0.028226</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>446 rows × 20 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-f87acc9f-d1ae-425e-b58f-a699e28e92cd')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-f87acc9f-d1ae-425e-b58f-a699e28e92cd button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-f87acc9f-d1ae-425e-b58f-a699e28e92cd');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-062600b1-7e15-438a-aa13-d2e65fc4e471\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-062600b1-7e15-438a-aa13-d2e65fc4e471')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-062600b1-7e15-438a-aa13-d2e65fc4e471 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 6
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "onegamedftidy = one_game_df.drop(columns=[\n",
        " 'time',\n",
        " 'goals_1wks',\n",
        " 'assists_1wks',\n",
        " 'shots_1wks',\n",
        " 'key_passes_1wks',\n",
        " 'yellow_cards',\n",
        " 'red_cards',\n",
        " 'npg_1wks',\n",
        " 'npxG_1wks',\n",
        " 'xGChain',\n",
        " 'xGBuildup',\n",
        " 'xgdifference',\n",
        " 'xAdifference'])\n",
        "onegamedftidy"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 424
        },
        "id": "RKf0tUGEh8FV",
        "outputId": "b76d0c35-265d-42b3-dfc6-7d6f33162151"
      },
      "execution_count": 7,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "        id       player_name games    xG_1wks   xA_1wks position  \\\n",
              "0     8260    Erling Haaland    15  16.727500  3.247231        F   \n",
              "1     1250     Mohamed Salah    17  10.772296  7.441838        F   \n",
              "2      453     Son Heung-Min    17   6.780154  5.971939      F M   \n",
              "3     1776      Jarrod Bowen    16   7.218600  2.279558      F M   \n",
              "4     8865     Ollie Watkins    17  10.049726  3.588357        F   \n",
              "..     ...               ...   ...        ...       ...      ...   \n",
              "477  12032  Djordje Petrovic     2   0.000000  0.000000     GK S   \n",
              "480  12094       Mike Trésor    10   0.661599  0.480966    F M S   \n",
              "483  12123           Murillo    11   0.695825  0.493345        D   \n",
              "484  12149        Alex Scott     3   0.082303  0.089547        M   \n",
              "487  12187      Jordan Clark     5   0.000000  0.028226        S   \n",
              "\n",
              "            team_title  \n",
              "0      Manchester City  \n",
              "1            Liverpool  \n",
              "2            Tottenham  \n",
              "3             West Ham  \n",
              "4          Aston Villa  \n",
              "..                 ...  \n",
              "477            Chelsea  \n",
              "480            Burnley  \n",
              "483  Nottingham Forest  \n",
              "484        Bournemouth  \n",
              "487              Luton  \n",
              "\n",
              "[446 rows x 7 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-ccc70c55-f66c-4604-a33e-d0e39cac5ba6\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>player_name</th>\n",
              "      <th>games</th>\n",
              "      <th>xG_1wks</th>\n",
              "      <th>xA_1wks</th>\n",
              "      <th>position</th>\n",
              "      <th>team_title</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>8260</td>\n",
              "      <td>Erling Haaland</td>\n",
              "      <td>15</td>\n",
              "      <td>16.727500</td>\n",
              "      <td>3.247231</td>\n",
              "      <td>F</td>\n",
              "      <td>Manchester City</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>1250</td>\n",
              "      <td>Mohamed Salah</td>\n",
              "      <td>17</td>\n",
              "      <td>10.772296</td>\n",
              "      <td>7.441838</td>\n",
              "      <td>F</td>\n",
              "      <td>Liverpool</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>453</td>\n",
              "      <td>Son Heung-Min</td>\n",
              "      <td>17</td>\n",
              "      <td>6.780154</td>\n",
              "      <td>5.971939</td>\n",
              "      <td>F M</td>\n",
              "      <td>Tottenham</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>1776</td>\n",
              "      <td>Jarrod Bowen</td>\n",
              "      <td>16</td>\n",
              "      <td>7.218600</td>\n",
              "      <td>2.279558</td>\n",
              "      <td>F M</td>\n",
              "      <td>West Ham</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>8865</td>\n",
              "      <td>Ollie Watkins</td>\n",
              "      <td>17</td>\n",
              "      <td>10.049726</td>\n",
              "      <td>3.588357</td>\n",
              "      <td>F</td>\n",
              "      <td>Aston Villa</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>477</th>\n",
              "      <td>12032</td>\n",
              "      <td>Djordje Petrovic</td>\n",
              "      <td>2</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>GK S</td>\n",
              "      <td>Chelsea</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>480</th>\n",
              "      <td>12094</td>\n",
              "      <td>Mike Trésor</td>\n",
              "      <td>10</td>\n",
              "      <td>0.661599</td>\n",
              "      <td>0.480966</td>\n",
              "      <td>F M S</td>\n",
              "      <td>Burnley</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>483</th>\n",
              "      <td>12123</td>\n",
              "      <td>Murillo</td>\n",
              "      <td>11</td>\n",
              "      <td>0.695825</td>\n",
              "      <td>0.493345</td>\n",
              "      <td>D</td>\n",
              "      <td>Nottingham Forest</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>484</th>\n",
              "      <td>12149</td>\n",
              "      <td>Alex Scott</td>\n",
              "      <td>3</td>\n",
              "      <td>0.082303</td>\n",
              "      <td>0.089547</td>\n",
              "      <td>M</td>\n",
              "      <td>Bournemouth</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>487</th>\n",
              "      <td>12187</td>\n",
              "      <td>Jordan Clark</td>\n",
              "      <td>5</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.028226</td>\n",
              "      <td>S</td>\n",
              "      <td>Luton</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>446 rows × 7 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-ccc70c55-f66c-4604-a33e-d0e39cac5ba6')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-ccc70c55-f66c-4604-a33e-d0e39cac5ba6 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-ccc70c55-f66c-4604-a33e-d0e39cac5ba6');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-32123a3b-5eac-46a1-ac2c-4ee7808a41a4\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-32123a3b-5eac-46a1-ac2c-4ee7808a41a4')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-32123a3b-5eac-46a1-ac2c-4ee7808a41a4 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 7
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "!git clone https://github.com/pratos/fpl-mappers\n",
        "!git clone https://github.com/ChrisMusson/FPL-ID-Map\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "B9kCj8OeiKGn",
        "outputId": "9cff4997-4e71-4b95-9c1d-3370b388e849"
      },
      "execution_count": 8,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Cloning into 'fpl-mappers'...\n",
            "remote: Enumerating objects: 94, done.\u001b[K\n",
            "remote: Counting objects: 100% (94/94), done.\u001b[K\n",
            "remote: Compressing objects: 100% (56/56), done.\u001b[K\n",
            "remote: Total 94 (delta 32), reused 89 (delta 30), pack-reused 0\u001b[K\n",
            "Receiving objects: 100% (94/94), 217.69 KiB | 1.42 MiB/s, done.\n",
            "Resolving deltas: 100% (32/32), done.\n",
            "Cloning into 'FPL-ID-Map'...\n",
            "remote: Enumerating objects: 242, done.\u001b[K\n",
            "remote: Counting objects: 100% (242/242), done.\u001b[K\n",
            "remote: Compressing objects: 100% (120/120), done.\u001b[K\n",
            "remote: Total 242 (delta 176), reused 188 (delta 122), pack-reused 0\u001b[K\n",
            "Receiving objects: 100% (242/242), 273.05 KiB | 1.27 MiB/s, done.\n",
            "Resolving deltas: 100% (176/176), done.\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "data1 = pd.read_csv('/content/FPL-ID-Map/Understat.csv', on_bad_lines='skip')\n",
        "data2 = pd.read_csv('/content/FPL-ID-Map/FPL/22-23.csv', on_bad_lines='skip')\n",
        "understatwithfplid1 = pd.merge(data2,\n",
        "                     data1,\n",
        "                     on ='code',\n",
        "                     how ='left')\n",
        "understatid = understatwithfplid1.drop(columns=[\n",
        "'code',\n",
        " 'first_name_x',\n",
        " 'second_name_x',\n",
        " 'web_name_x',\n",
        " 'first_name_y',\n",
        " 'second_name_y',\n",
        " 'web_name_y',])\n",
        "one_game_df.rename(columns={'id': 'understat'}, inplace=True)\n",
        "one_game_df"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 548
        },
        "id": "SaX7692EiQA7",
        "outputId": "8da3d597-f0a9-401f-b10a-8116a16dc46e"
      },
      "execution_count": 9,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "    understat       player_name games  time  goals_1wks    xG_1wks  \\\n",
              "0        8260    Erling Haaland    15  1305          14  16.727500   \n",
              "1        1250     Mohamed Salah    17  1498          11  10.772296   \n",
              "2         453     Son Heung-Min    17  1469          10   6.780154   \n",
              "3        1776      Jarrod Bowen    16  1440          10   7.218600   \n",
              "4        8865     Ollie Watkins    17  1509           9  10.049726   \n",
              "..        ...               ...   ...   ...         ...        ...   \n",
              "477     12032  Djordje Petrovic     2    92           0   0.000000   \n",
              "480     12094       Mike Trésor    10   260           0   0.661599   \n",
              "483     12123           Murillo    11   973           0   0.695825   \n",
              "484     12149        Alex Scott     3   194           0   0.082303   \n",
              "487     12187      Jordan Clark     5    72           0   0.000000   \n",
              "\n",
              "     assists_1wks   xA_1wks shots_1wks key_passes_1wks yellow_cards red_cards  \\\n",
              "0               4  3.247231         58              16            1         0   \n",
              "1               7  7.441838         53              41            1         0   \n",
              "2               4  5.971939         43              32            1         0   \n",
              "3               1  2.279558         43              11            1         0   \n",
              "4               6  3.588357         50              26            3         0   \n",
              "..            ...       ...        ...             ...          ...       ...   \n",
              "477             0  0.000000          0               0            0         0   \n",
              "480             0  0.480966          5               4            0         0   \n",
              "483             0  0.493345          7               4            2         0   \n",
              "484             0  0.089547          2               1            1         0   \n",
              "487             0  0.028226          0               1            1         0   \n",
              "\n",
              "    position         team_title npg_1wks            npxG_1wks  \\\n",
              "0          F    Manchester City       11    13.68282476067543   \n",
              "1          F          Liverpool        8     7.72769470512867   \n",
              "2        F M          Tottenham        9    6.018985345959663   \n",
              "3        F M           West Ham       10    7.218599982559681   \n",
              "4          F        Aston Villa        9   10.049726076424122   \n",
              "..       ...                ...      ...                  ...   \n",
              "477     GK S            Chelsea        0                    0   \n",
              "480    F M S            Burnley        0   0.6615988579578698   \n",
              "483        D  Nottingham Forest        0   0.6958251241594553   \n",
              "484        M        Bournemouth        0  0.08230337873101234   \n",
              "487        S              Luton        0                    0   \n",
              "\n",
              "                  xGChain           xGBuildup  xgdifference  xAdifference  \n",
              "0      16.214465029537678  1.3705047406256199     -2.727500      0.752769  \n",
              "1      14.869610473513603   3.948832482099533      0.227704     -0.441838  \n",
              "2      14.396287873387337   4.522126642987132      3.219846     -1.971939  \n",
              "3       8.182679865509272  1.4770999029278755      2.781400     -1.279558  \n",
              "4      14.428645104169846   2.091627176851034     -1.049726      2.411643  \n",
              "..                    ...                 ...           ...           ...  \n",
              "477                     0                   0      0.000000      0.000000  \n",
              "480     0.890179191250354  0.2473519933409989     -0.661599     -0.480966  \n",
              "483     2.977968465536833   2.559963984414935     -0.695825     -0.493345  \n",
              "484    0.9122739285230637  0.8663346916437149     -0.082303     -0.089547  \n",
              "487  0.028225945308804512                   0      0.000000     -0.028226  \n",
              "\n",
              "[446 rows x 20 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-5c6bc9ad-1785-457e-9309-f10024cece59\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>understat</th>\n",
              "      <th>player_name</th>\n",
              "      <th>games</th>\n",
              "      <th>time</th>\n",
              "      <th>goals_1wks</th>\n",
              "      <th>xG_1wks</th>\n",
              "      <th>assists_1wks</th>\n",
              "      <th>xA_1wks</th>\n",
              "      <th>shots_1wks</th>\n",
              "      <th>key_passes_1wks</th>\n",
              "      <th>yellow_cards</th>\n",
              "      <th>red_cards</th>\n",
              "      <th>position</th>\n",
              "      <th>team_title</th>\n",
              "      <th>npg_1wks</th>\n",
              "      <th>npxG_1wks</th>\n",
              "      <th>xGChain</th>\n",
              "      <th>xGBuildup</th>\n",
              "      <th>xgdifference</th>\n",
              "      <th>xAdifference</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>8260</td>\n",
              "      <td>Erling Haaland</td>\n",
              "      <td>15</td>\n",
              "      <td>1305</td>\n",
              "      <td>14</td>\n",
              "      <td>16.727500</td>\n",
              "      <td>4</td>\n",
              "      <td>3.247231</td>\n",
              "      <td>58</td>\n",
              "      <td>16</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>F</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>11</td>\n",
              "      <td>13.68282476067543</td>\n",
              "      <td>16.214465029537678</td>\n",
              "      <td>1.3705047406256199</td>\n",
              "      <td>-2.727500</td>\n",
              "      <td>0.752769</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>1250</td>\n",
              "      <td>Mohamed Salah</td>\n",
              "      <td>17</td>\n",
              "      <td>1498</td>\n",
              "      <td>11</td>\n",
              "      <td>10.772296</td>\n",
              "      <td>7</td>\n",
              "      <td>7.441838</td>\n",
              "      <td>53</td>\n",
              "      <td>41</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>F</td>\n",
              "      <td>Liverpool</td>\n",
              "      <td>8</td>\n",
              "      <td>7.72769470512867</td>\n",
              "      <td>14.869610473513603</td>\n",
              "      <td>3.948832482099533</td>\n",
              "      <td>0.227704</td>\n",
              "      <td>-0.441838</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>453</td>\n",
              "      <td>Son Heung-Min</td>\n",
              "      <td>17</td>\n",
              "      <td>1469</td>\n",
              "      <td>10</td>\n",
              "      <td>6.780154</td>\n",
              "      <td>4</td>\n",
              "      <td>5.971939</td>\n",
              "      <td>43</td>\n",
              "      <td>32</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>F M</td>\n",
              "      <td>Tottenham</td>\n",
              "      <td>9</td>\n",
              "      <td>6.018985345959663</td>\n",
              "      <td>14.396287873387337</td>\n",
              "      <td>4.522126642987132</td>\n",
              "      <td>3.219846</td>\n",
              "      <td>-1.971939</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>1776</td>\n",
              "      <td>Jarrod Bowen</td>\n",
              "      <td>16</td>\n",
              "      <td>1440</td>\n",
              "      <td>10</td>\n",
              "      <td>7.218600</td>\n",
              "      <td>1</td>\n",
              "      <td>2.279558</td>\n",
              "      <td>43</td>\n",
              "      <td>11</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>F M</td>\n",
              "      <td>West Ham</td>\n",
              "      <td>10</td>\n",
              "      <td>7.218599982559681</td>\n",
              "      <td>8.182679865509272</td>\n",
              "      <td>1.4770999029278755</td>\n",
              "      <td>2.781400</td>\n",
              "      <td>-1.279558</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>8865</td>\n",
              "      <td>Ollie Watkins</td>\n",
              "      <td>17</td>\n",
              "      <td>1509</td>\n",
              "      <td>9</td>\n",
              "      <td>10.049726</td>\n",
              "      <td>6</td>\n",
              "      <td>3.588357</td>\n",
              "      <td>50</td>\n",
              "      <td>26</td>\n",
              "      <td>3</td>\n",
              "      <td>0</td>\n",
              "      <td>F</td>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>9</td>\n",
              "      <td>10.049726076424122</td>\n",
              "      <td>14.428645104169846</td>\n",
              "      <td>2.091627176851034</td>\n",
              "      <td>-1.049726</td>\n",
              "      <td>2.411643</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>477</th>\n",
              "      <td>12032</td>\n",
              "      <td>Djordje Petrovic</td>\n",
              "      <td>2</td>\n",
              "      <td>92</td>\n",
              "      <td>0</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>GK S</td>\n",
              "      <td>Chelsea</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>480</th>\n",
              "      <td>12094</td>\n",
              "      <td>Mike Trésor</td>\n",
              "      <td>10</td>\n",
              "      <td>260</td>\n",
              "      <td>0</td>\n",
              "      <td>0.661599</td>\n",
              "      <td>0</td>\n",
              "      <td>0.480966</td>\n",
              "      <td>5</td>\n",
              "      <td>4</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>F M S</td>\n",
              "      <td>Burnley</td>\n",
              "      <td>0</td>\n",
              "      <td>0.6615988579578698</td>\n",
              "      <td>0.890179191250354</td>\n",
              "      <td>0.2473519933409989</td>\n",
              "      <td>-0.661599</td>\n",
              "      <td>-0.480966</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>483</th>\n",
              "      <td>12123</td>\n",
              "      <td>Murillo</td>\n",
              "      <td>11</td>\n",
              "      <td>973</td>\n",
              "      <td>0</td>\n",
              "      <td>0.695825</td>\n",
              "      <td>0</td>\n",
              "      <td>0.493345</td>\n",
              "      <td>7</td>\n",
              "      <td>4</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>D</td>\n",
              "      <td>Nottingham Forest</td>\n",
              "      <td>0</td>\n",
              "      <td>0.6958251241594553</td>\n",
              "      <td>2.977968465536833</td>\n",
              "      <td>2.559963984414935</td>\n",
              "      <td>-0.695825</td>\n",
              "      <td>-0.493345</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>484</th>\n",
              "      <td>12149</td>\n",
              "      <td>Alex Scott</td>\n",
              "      <td>3</td>\n",
              "      <td>194</td>\n",
              "      <td>0</td>\n",
              "      <td>0.082303</td>\n",
              "      <td>0</td>\n",
              "      <td>0.089547</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>M</td>\n",
              "      <td>Bournemouth</td>\n",
              "      <td>0</td>\n",
              "      <td>0.08230337873101234</td>\n",
              "      <td>0.9122739285230637</td>\n",
              "      <td>0.8663346916437149</td>\n",
              "      <td>-0.082303</td>\n",
              "      <td>-0.089547</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>487</th>\n",
              "      <td>12187</td>\n",
              "      <td>Jordan Clark</td>\n",
              "      <td>5</td>\n",
              "      <td>72</td>\n",
              "      <td>0</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0</td>\n",
              "      <td>0.028226</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>S</td>\n",
              "      <td>Luton</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.028225945308804512</td>\n",
              "      <td>0</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>-0.028226</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>446 rows × 20 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-5c6bc9ad-1785-457e-9309-f10024cece59')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-5c6bc9ad-1785-457e-9309-f10024cece59 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-5c6bc9ad-1785-457e-9309-f10024cece59');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-8a7bf35c-97c8-4216-aac5-4cccabe5870b\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-8a7bf35c-97c8-4216-aac5-4cccabe5870b')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-8a7bf35c-97c8-4216-aac5-4cccabe5870b button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 9
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "!git clone https://github.com/huricane85/FPL-API-Fixture-modeler"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "dU1giLdZir3J",
        "outputId": "21f8d909-6418-47de-bbbe-68225cf6c40f"
      },
      "execution_count": 10,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Cloning into 'FPL-API-Fixture-modeler'...\n",
            "remote: Enumerating objects: 105, done.\u001b[K\n",
            "remote: Counting objects: 100% (105/105), done.\u001b[K\n",
            "remote: Compressing objects: 100% (105/105), done.\u001b[K\n",
            "remote: Total 105 (delta 58), reused 0 (delta 0), pack-reused 0\u001b[K\n",
            "Receiving objects: 100% (105/105), 6.65 MiB | 6.06 MiB/s, done.\n",
            "Resolving deltas: 100% (58/58), done.\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import pandas as pd\n",
        "\n",
        "# read the CSV file from GitHub into a DataFrame\n",
        "url = \"https://raw.githubusercontent.com/ChrisMusson/FPL-ID-Map/main/Master.csv\"\n",
        "df = pd.read_csv(url)\n",
        "\n",
        "# rename the \"22-23\" column to \"id\"\n",
        "df.rename(columns={'22-23': 'id'}, inplace=True)\n",
        "\n",
        "# convert \"id\" and \"understat\" columns to int64 and float64 respectively\n",
        "df['id'] = pd.to_numeric(df['id'], errors='coerce', downcast='integer').astype('Int64')\n",
        "df['understat'] = pd.to_numeric(df['understat'], errors='coerce', downcast='integer').astype('Int64')\n",
        "\n",
        "# filter out rows where \"understat\" is null\n",
        "df = df.dropna(subset=['understat'])\n",
        "\n",
        "# change data type of \"id\" column to float64\n",
        "df['id'] = df['id'].astype('float64')\n",
        "\n",
        "# create a new DataFrame with only the \"understat\" and \"id\" columns\n",
        "new_df = df[['understat', 'id']].dropna(subset=['id']).copy()\n",
        "\n",
        "# display the new DataFrame\n",
        "\n",
        "new_df\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 528
        },
        "id": "WRijWphEVPuN",
        "outputId": "3f8a1b77-ec5c-453c-a031-13da93d0304d"
      },
      "execution_count": 11,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "<ipython-input-11-7e87e97d63f0>:18: SettingWithCopyWarning: \n",
            "A value is trying to be set on a copy of a slice from a DataFrame.\n",
            "Try using .loc[row_indexer,col_indexer] = value instead\n",
            "\n",
            "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
            "  df['id'] = df['id'].astype('float64')\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "      understat     id\n",
              "37         7821  760.0\n",
              "38         1697  627.0\n",
              "55         2371  326.0\n",
              "62          489  274.0\n",
              "77         8158  502.0\n",
              "...         ...    ...\n",
              "1933      11301  695.0\n",
              "1934      11146  632.0\n",
              "1935      11189  646.0\n",
              "1936      11302  696.0\n",
              "1937      11195  650.0\n",
              "\n",
              "[763 rows x 2 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-9d71d62c-ddfa-4e3c-bff7-1e9f3c81febe\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>understat</th>\n",
              "      <th>id</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>37</th>\n",
              "      <td>7821</td>\n",
              "      <td>760.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>38</th>\n",
              "      <td>1697</td>\n",
              "      <td>627.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>55</th>\n",
              "      <td>2371</td>\n",
              "      <td>326.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>62</th>\n",
              "      <td>489</td>\n",
              "      <td>274.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>77</th>\n",
              "      <td>8158</td>\n",
              "      <td>502.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1933</th>\n",
              "      <td>11301</td>\n",
              "      <td>695.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1934</th>\n",
              "      <td>11146</td>\n",
              "      <td>632.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1935</th>\n",
              "      <td>11189</td>\n",
              "      <td>646.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1936</th>\n",
              "      <td>11302</td>\n",
              "      <td>696.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1937</th>\n",
              "      <td>11195</td>\n",
              "      <td>650.0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>763 rows × 2 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-9d71d62c-ddfa-4e3c-bff7-1e9f3c81febe')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-9d71d62c-ddfa-4e3c-bff7-1e9f3c81febe button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-9d71d62c-ddfa-4e3c-bff7-1e9f3c81febe');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-f2d8b6d9-0f10-438c-9271-4769839ae0f6\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-f2d8b6d9-0f10-438c-9271-4769839ae0f6')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-f2d8b6d9-0f10-438c-9271-4769839ae0f6 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 11
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "new_df"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 424
        },
        "id": "NhQ4dZKdUv36",
        "outputId": "33d86ab1-6955-4b71-8dcf-74ecf17e4ff5"
      },
      "execution_count": 12,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "      understat     id\n",
              "37         7821  760.0\n",
              "38         1697  627.0\n",
              "55         2371  326.0\n",
              "62          489  274.0\n",
              "77         8158  502.0\n",
              "...         ...    ...\n",
              "1933      11301  695.0\n",
              "1934      11146  632.0\n",
              "1935      11189  646.0\n",
              "1936      11302  696.0\n",
              "1937      11195  650.0\n",
              "\n",
              "[763 rows x 2 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-40848cab-b479-4ff1-96e1-4ea159a8f61c\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>understat</th>\n",
              "      <th>id</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>37</th>\n",
              "      <td>7821</td>\n",
              "      <td>760.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>38</th>\n",
              "      <td>1697</td>\n",
              "      <td>627.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>55</th>\n",
              "      <td>2371</td>\n",
              "      <td>326.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>62</th>\n",
              "      <td>489</td>\n",
              "      <td>274.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>77</th>\n",
              "      <td>8158</td>\n",
              "      <td>502.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1933</th>\n",
              "      <td>11301</td>\n",
              "      <td>695.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1934</th>\n",
              "      <td>11146</td>\n",
              "      <td>632.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1935</th>\n",
              "      <td>11189</td>\n",
              "      <td>646.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1936</th>\n",
              "      <td>11302</td>\n",
              "      <td>696.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1937</th>\n",
              "      <td>11195</td>\n",
              "      <td>650.0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>763 rows × 2 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-40848cab-b479-4ff1-96e1-4ea159a8f61c')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-40848cab-b479-4ff1-96e1-4ea159a8f61c button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-40848cab-b479-4ff1-96e1-4ea159a8f61c');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-b9170dfd-bfbf-4ddf-97ad-6229c941673f\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-b9170dfd-bfbf-4ddf-97ad-6229c941673f')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-b9170dfd-bfbf-4ddf-97ad-6229c941673f button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 12
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "one_game_df[\"understat\"] = one_game_df[\"understat\"].astype(str).astype(int)\n",
        "understatid2 = new_df\n",
        "understatwithfplid = pd.merge(one_game_df,\n",
        "                     understatid2,\n",
        "                     on ='understat',\n",
        "                     how ='left')\n",
        "understatwithfplid"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 548
        },
        "id": "KmDbXEnfi2v1",
        "outputId": "df596325-d723-4858-d04a-95bb56a0ef43"
      },
      "execution_count": 13,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "     understat       player_name games  time  goals_1wks    xG_1wks  \\\n",
              "0         8260    Erling Haaland    15  1305          14  16.727500   \n",
              "1         1250     Mohamed Salah    17  1498          11  10.772296   \n",
              "2          453     Son Heung-Min    17  1469          10   6.780154   \n",
              "3         1776      Jarrod Bowen    16  1440          10   7.218600   \n",
              "4         8865     Ollie Watkins    17  1509           9  10.049726   \n",
              "..         ...               ...   ...   ...         ...        ...   \n",
              "441      12032  Djordje Petrovic     2    92           0   0.000000   \n",
              "442      12094       Mike Trésor    10   260           0   0.661599   \n",
              "443      12123           Murillo    11   973           0   0.695825   \n",
              "444      12149        Alex Scott     3   194           0   0.082303   \n",
              "445      12187      Jordan Clark     5    72           0   0.000000   \n",
              "\n",
              "     assists_1wks   xA_1wks shots_1wks key_passes_1wks  ... red_cards  \\\n",
              "0               4  3.247231         58              16  ...         0   \n",
              "1               7  7.441838         53              41  ...         0   \n",
              "2               4  5.971939         43              32  ...         0   \n",
              "3               1  2.279558         43              11  ...         0   \n",
              "4               6  3.588357         50              26  ...         0   \n",
              "..            ...       ...        ...             ...  ...       ...   \n",
              "441             0  0.000000          0               0  ...         0   \n",
              "442             0  0.480966          5               4  ...         0   \n",
              "443             0  0.493345          7               4  ...         0   \n",
              "444             0  0.089547          2               1  ...         0   \n",
              "445             0  0.028226          0               1  ...         0   \n",
              "\n",
              "    position         team_title npg_1wks            npxG_1wks  \\\n",
              "0          F    Manchester City       11    13.68282476067543   \n",
              "1          F          Liverpool        8     7.72769470512867   \n",
              "2        F M          Tottenham        9    6.018985345959663   \n",
              "3        F M           West Ham       10    7.218599982559681   \n",
              "4          F        Aston Villa        9   10.049726076424122   \n",
              "..       ...                ...      ...                  ...   \n",
              "441     GK S            Chelsea        0                    0   \n",
              "442    F M S            Burnley        0   0.6615988579578698   \n",
              "443        D  Nottingham Forest        0   0.6958251241594553   \n",
              "444        M        Bournemouth        0  0.08230337873101234   \n",
              "445        S              Luton        0                    0   \n",
              "\n",
              "                  xGChain           xGBuildup xgdifference  xAdifference  \\\n",
              "0      16.214465029537678  1.3705047406256199    -2.727500      0.752769   \n",
              "1      14.869610473513603   3.948832482099533     0.227704     -0.441838   \n",
              "2      14.396287873387337   4.522126642987132     3.219846     -1.971939   \n",
              "3       8.182679865509272  1.4770999029278755     2.781400     -1.279558   \n",
              "4      14.428645104169846   2.091627176851034    -1.049726      2.411643   \n",
              "..                    ...                 ...          ...           ...   \n",
              "441                     0                   0     0.000000      0.000000   \n",
              "442     0.890179191250354  0.2473519933409989    -0.661599     -0.480966   \n",
              "443     2.977968465536833   2.559963984414935    -0.695825     -0.493345   \n",
              "444    0.9122739285230637  0.8663346916437149    -0.082303     -0.089547   \n",
              "445  0.028225945308804512                   0     0.000000     -0.028226   \n",
              "\n",
              "        id  \n",
              "0    318.0  \n",
              "1    283.0  \n",
              "2    428.0  \n",
              "3    465.0  \n",
              "4     40.0  \n",
              "..     ...  \n",
              "441    NaN  \n",
              "442    NaN  \n",
              "443    NaN  \n",
              "444    NaN  \n",
              "445    NaN  \n",
              "\n",
              "[446 rows x 21 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-3562373d-5990-4058-9dc5-d4d6ef31d415\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>understat</th>\n",
              "      <th>player_name</th>\n",
              "      <th>games</th>\n",
              "      <th>time</th>\n",
              "      <th>goals_1wks</th>\n",
              "      <th>xG_1wks</th>\n",
              "      <th>assists_1wks</th>\n",
              "      <th>xA_1wks</th>\n",
              "      <th>shots_1wks</th>\n",
              "      <th>key_passes_1wks</th>\n",
              "      <th>...</th>\n",
              "      <th>red_cards</th>\n",
              "      <th>position</th>\n",
              "      <th>team_title</th>\n",
              "      <th>npg_1wks</th>\n",
              "      <th>npxG_1wks</th>\n",
              "      <th>xGChain</th>\n",
              "      <th>xGBuildup</th>\n",
              "      <th>xgdifference</th>\n",
              "      <th>xAdifference</th>\n",
              "      <th>id</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>8260</td>\n",
              "      <td>Erling Haaland</td>\n",
              "      <td>15</td>\n",
              "      <td>1305</td>\n",
              "      <td>14</td>\n",
              "      <td>16.727500</td>\n",
              "      <td>4</td>\n",
              "      <td>3.247231</td>\n",
              "      <td>58</td>\n",
              "      <td>16</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>F</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>11</td>\n",
              "      <td>13.68282476067543</td>\n",
              "      <td>16.214465029537678</td>\n",
              "      <td>1.3705047406256199</td>\n",
              "      <td>-2.727500</td>\n",
              "      <td>0.752769</td>\n",
              "      <td>318.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>1250</td>\n",
              "      <td>Mohamed Salah</td>\n",
              "      <td>17</td>\n",
              "      <td>1498</td>\n",
              "      <td>11</td>\n",
              "      <td>10.772296</td>\n",
              "      <td>7</td>\n",
              "      <td>7.441838</td>\n",
              "      <td>53</td>\n",
              "      <td>41</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>F</td>\n",
              "      <td>Liverpool</td>\n",
              "      <td>8</td>\n",
              "      <td>7.72769470512867</td>\n",
              "      <td>14.869610473513603</td>\n",
              "      <td>3.948832482099533</td>\n",
              "      <td>0.227704</td>\n",
              "      <td>-0.441838</td>\n",
              "      <td>283.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>453</td>\n",
              "      <td>Son Heung-Min</td>\n",
              "      <td>17</td>\n",
              "      <td>1469</td>\n",
              "      <td>10</td>\n",
              "      <td>6.780154</td>\n",
              "      <td>4</td>\n",
              "      <td>5.971939</td>\n",
              "      <td>43</td>\n",
              "      <td>32</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>F M</td>\n",
              "      <td>Tottenham</td>\n",
              "      <td>9</td>\n",
              "      <td>6.018985345959663</td>\n",
              "      <td>14.396287873387337</td>\n",
              "      <td>4.522126642987132</td>\n",
              "      <td>3.219846</td>\n",
              "      <td>-1.971939</td>\n",
              "      <td>428.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>1776</td>\n",
              "      <td>Jarrod Bowen</td>\n",
              "      <td>16</td>\n",
              "      <td>1440</td>\n",
              "      <td>10</td>\n",
              "      <td>7.218600</td>\n",
              "      <td>1</td>\n",
              "      <td>2.279558</td>\n",
              "      <td>43</td>\n",
              "      <td>11</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>F M</td>\n",
              "      <td>West Ham</td>\n",
              "      <td>10</td>\n",
              "      <td>7.218599982559681</td>\n",
              "      <td>8.182679865509272</td>\n",
              "      <td>1.4770999029278755</td>\n",
              "      <td>2.781400</td>\n",
              "      <td>-1.279558</td>\n",
              "      <td>465.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>8865</td>\n",
              "      <td>Ollie Watkins</td>\n",
              "      <td>17</td>\n",
              "      <td>1509</td>\n",
              "      <td>9</td>\n",
              "      <td>10.049726</td>\n",
              "      <td>6</td>\n",
              "      <td>3.588357</td>\n",
              "      <td>50</td>\n",
              "      <td>26</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>F</td>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>9</td>\n",
              "      <td>10.049726076424122</td>\n",
              "      <td>14.428645104169846</td>\n",
              "      <td>2.091627176851034</td>\n",
              "      <td>-1.049726</td>\n",
              "      <td>2.411643</td>\n",
              "      <td>40.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>441</th>\n",
              "      <td>12032</td>\n",
              "      <td>Djordje Petrovic</td>\n",
              "      <td>2</td>\n",
              "      <td>92</td>\n",
              "      <td>0</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>GK S</td>\n",
              "      <td>Chelsea</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>442</th>\n",
              "      <td>12094</td>\n",
              "      <td>Mike Trésor</td>\n",
              "      <td>10</td>\n",
              "      <td>260</td>\n",
              "      <td>0</td>\n",
              "      <td>0.661599</td>\n",
              "      <td>0</td>\n",
              "      <td>0.480966</td>\n",
              "      <td>5</td>\n",
              "      <td>4</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>F M S</td>\n",
              "      <td>Burnley</td>\n",
              "      <td>0</td>\n",
              "      <td>0.6615988579578698</td>\n",
              "      <td>0.890179191250354</td>\n",
              "      <td>0.2473519933409989</td>\n",
              "      <td>-0.661599</td>\n",
              "      <td>-0.480966</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>443</th>\n",
              "      <td>12123</td>\n",
              "      <td>Murillo</td>\n",
              "      <td>11</td>\n",
              "      <td>973</td>\n",
              "      <td>0</td>\n",
              "      <td>0.695825</td>\n",
              "      <td>0</td>\n",
              "      <td>0.493345</td>\n",
              "      <td>7</td>\n",
              "      <td>4</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>D</td>\n",
              "      <td>Nottingham Forest</td>\n",
              "      <td>0</td>\n",
              "      <td>0.6958251241594553</td>\n",
              "      <td>2.977968465536833</td>\n",
              "      <td>2.559963984414935</td>\n",
              "      <td>-0.695825</td>\n",
              "      <td>-0.493345</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>444</th>\n",
              "      <td>12149</td>\n",
              "      <td>Alex Scott</td>\n",
              "      <td>3</td>\n",
              "      <td>194</td>\n",
              "      <td>0</td>\n",
              "      <td>0.082303</td>\n",
              "      <td>0</td>\n",
              "      <td>0.089547</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>M</td>\n",
              "      <td>Bournemouth</td>\n",
              "      <td>0</td>\n",
              "      <td>0.08230337873101234</td>\n",
              "      <td>0.9122739285230637</td>\n",
              "      <td>0.8663346916437149</td>\n",
              "      <td>-0.082303</td>\n",
              "      <td>-0.089547</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>445</th>\n",
              "      <td>12187</td>\n",
              "      <td>Jordan Clark</td>\n",
              "      <td>5</td>\n",
              "      <td>72</td>\n",
              "      <td>0</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0</td>\n",
              "      <td>0.028226</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>S</td>\n",
              "      <td>Luton</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.028225945308804512</td>\n",
              "      <td>0</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>-0.028226</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>446 rows × 21 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-3562373d-5990-4058-9dc5-d4d6ef31d415')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-3562373d-5990-4058-9dc5-d4d6ef31d415 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-3562373d-5990-4058-9dc5-d4d6ef31d415');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-41503f54-72cc-4cfd-b127-b423f84408ee\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-41503f54-72cc-4cfd-b127-b423f84408ee')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-41503f54-72cc-4cfd-b127-b423f84408ee button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 13
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "from urllib.request import urlopen\n",
        "from json import loads\n",
        "from csv import writer\n",
        "\n",
        "\n",
        "def team_converter(team_id):\n",
        "    '''Converts a team's ID to their actual name'''\n",
        "    team_map = {\n",
        "        1: \"Arsenal\",\n",
        "        2: \"Aston Villa\",\n",
        "        3: \"Bournemouth\",\n",
        "        4: \"Brentford\",\n",
        "        5: \"Brighton\",\n",
        "        6: \"Burnley\",\n",
        "        7: \"Chelsea\",\n",
        "        8: \"Crystal Palace\",\n",
        "        9: \"Everton\",\n",
        "        10: \"Fulham\",\n",
        "        11: \"Liverpool\",\n",
        "        12: \"Luton Town\",\n",
        "        13: \"Manchester City\",\n",
        "        14: \"Manchester United\",\n",
        "        15: \"Newcastle United\",\n",
        "        16: \"Nottingham Forest\",\n",
        "        17: \"Sheffield United\",\n",
        "        18: \"Tottenham\",\n",
        "        19: \"West Ham\",\n",
        "        20: \"Wolverhampton Wanderers\",\n",
        "        None: None\n",
        "    }\n",
        "    return team_map[team_id]\n",
        "\n",
        "\n",
        "def position_converter(position):\n",
        "    '''Converts a player's element_type to their actual position'''\n",
        "    position_map = {\n",
        "        1: \"Goalkeeper\",\n",
        "        2: \"Defender\",\n",
        "        3: \"Midfielder\",\n",
        "        4: \"Forward\"\n",
        "    }\n",
        "    return position_map[position]\n",
        "\n",
        "\n",
        "def main():\n",
        "    all_data = loads(urlopen(\"https://fantasy.premierleague.com/api/fixtures/\").read())\n",
        "    fixtures = all_data\n",
        "\n",
        "    important_data = [\n",
        "        [\n",
        "            x[\"event\"],\n",
        "            team_converter(x[\"team_h\"]),\n",
        "            team_converter(x[\"team_a\"]),\n",
        "            x[\"kickoff_time\"],\n",
        "\n",
        "        ]\n",
        "        for x in fixtures\n",
        "    ]\n",
        "\n",
        "    with open(\"/fixtures_data.csv\", \"w\", encoding=\"utf-8\", newline=\"\") as out:\n",
        "        headers = [\"event\",\"team_h\",\"team_a\",\"kickoff_time\"]\n",
        "        w = writer(out)\n",
        "        w.writerow(headers)\n",
        "        w.writerows(important_data)\n",
        "\n",
        "if __name__ == \"__main__\":\n",
        "    main()"
      ],
      "metadata": {
        "id": "Y_cV1kyak7XX"
      },
      "execution_count": 14,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "import pandas as pd\n",
        "import scipy\n",
        "import numpy as np\n",
        "from numpy import random\n",
        "import matplotlib.pyplot as plt\n",
        "import seaborn as sns\n",
        "import matplotlib"
      ],
      "metadata": {
        "id": "DXejj-4jjUI-"
      },
      "execution_count": 15,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "from urllib.request import urlopen\n",
        "from json import loads\n",
        "from csv import writer\n",
        "\n",
        "\n",
        "def team_converter(team_id):\n",
        "    '''Converts a team's ID to their actual name'''\n",
        "    team_map = {\n",
        "        1: \"Arsenal\",\n",
        "        2: \"Aston Villa\",\n",
        "        3: \"Bournemouth\",\n",
        "        4: \"Brentford\",\n",
        "        5: \"Brighton\",\n",
        "        6: \"Burnley\",\n",
        "        7: \"Chelsea\",\n",
        "        8: \"Crystal Palace\",\n",
        "        9: \"Everton\",\n",
        "        10: \"Fulham\",\n",
        "        11: \"Liverpool\",\n",
        "        12: \"Luton Town\",\n",
        "        13: \"Manchester City\",\n",
        "        14: \"Manchester United\",\n",
        "        15: \"Newcastle United\",\n",
        "        16: \"Nottingham Forest\",\n",
        "        17: \"Sheffield United\",\n",
        "        18: \"Tottenham\",\n",
        "        19: \"West Ham\",\n",
        "        20: \"Wolverhampton Wanderers\",\n",
        "        None: None\n",
        "    }\n",
        "    return team_map[team_id]\n",
        "\n",
        "\n",
        "def position_converter(position):\n",
        "    '''Converts a player's element_type to their actual position'''\n",
        "    position_map = {\n",
        "        1: \"Goalkeeper\",\n",
        "        2: \"Defender\",\n",
        "        3: \"Midfielder\",\n",
        "        4: \"Forward\"\n",
        "    }\n",
        "    return position_map[position]\n",
        "\n",
        "\n",
        "def main():\n",
        "    all_data = loads(urlopen(\"https://fantasy.premierleague.com/api/bootstrap-static/\").read())\n",
        "    players = all_data[\"elements\"]\n",
        "\n",
        "    important_data = [\n",
        "        [\n",
        "            x[\"id\"],\n",
        "            team_converter(x[\"team\"]),\n",
        "            position_converter(x[\"element_type\"])[0],\n",
        "            x[\"web_name\"],\n",
        "            x[\"now_cost\"] / 10,\n",
        "            x[\"selected_by_percent\"],\n",
        "            float(x[\"expected_goals\"]),  # Convert to float\n",
        "            float(x[\"expected_assists\"]),  # Convert to float\n",
        "            x[\"goals_scored\"],\n",
        "            x[\"assists\"],\n",
        "            x[\"bps\"],\n",
        "            x[\"ict_index\"],\n",
        "            x[\"total_points\"],\n",
        "            x[\"points_per_game\"],\n",
        "            x[\"minutes\"]\n",
        "        ]\n",
        "        for x in players\n",
        "    ]\n",
        "\n",
        "    with open(\"players_data.csv\", \"w\", encoding=\"utf-8\", newline=\"\") as out:\n",
        "        headers = [\"id\",\"team\", \"pos\", \"name\", \"cost\", \"selected_by_percent\", \"expected_goals\", \"expected_assists\", \"goals_scored\", \"assists\", \"bps\", \"ict_index\",\"points\", \"points_per_game\", \"minutes\"]\n",
        "        w = writer(out)\n",
        "        w.writerow(headers)\n",
        "        w.writerows(important_data)\n",
        "\n",
        "if __name__ == \"__main__\":\n",
        "    main()"
      ],
      "metadata": {
        "id": "CKZZPD0xQGLu"
      },
      "execution_count": 16,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "import pandas as pd\n",
        "playerdata = pd.read_csv(\"/content/players_data.csv\")\n",
        "master = playerdata\n",
        "#master = master.dropna()\n",
        "master['apppoint'] = 2\n",
        "master['assistvalue'] = 3\n",
        "#master['BPS90'] = master.bps/(master.minutes/90)\n",
        "master"
      ],
      "metadata": {
        "id": "VOx8tP0bjttO",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 424
        },
        "outputId": "22ba7f70-a7ab-47ce-e4e4-d7dfeaff35d0"
      },
      "execution_count": 17,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "      id                     team pos          name  cost  \\\n",
              "0      1                  Arsenal   F       Balogun   4.4   \n",
              "1      2                  Arsenal   D        Cédric   3.9   \n",
              "2      3                  Arsenal   M      M.Elneny   4.4   \n",
              "3      4                  Arsenal   M  Fábio Vieira   5.4   \n",
              "4      5                  Arsenal   D       Gabriel   4.9   \n",
              "..   ...                      ...  ..           ...   ...   \n",
              "760  704  Wolverhampton Wanderers   F        Fraser   4.5   \n",
              "761  715  Wolverhampton Wanderers   M    Bellegarde   4.9   \n",
              "762  749  Wolverhampton Wanderers   M   Whittingham   4.5   \n",
              "763  750  Wolverhampton Wanderers   M       Chirewa   4.5   \n",
              "764  751  Wolverhampton Wanderers   D        Hubner   4.0   \n",
              "\n",
              "     selected_by_percent  expected_goals  expected_assists  goals_scored  \\\n",
              "0                    0.2            0.00              0.00             0   \n",
              "1                    0.4            0.00              0.00             0   \n",
              "2                    0.1            0.00              0.00             0   \n",
              "3                    0.1            1.20              0.35             1   \n",
              "4                   15.1            0.81              0.22             0   \n",
              "..                   ...             ...               ...           ...   \n",
              "760                  0.1            0.00              0.00             0   \n",
              "761                  0.0            0.32              0.36             1   \n",
              "762                  0.0            0.00              0.00             0   \n",
              "763                  0.0            0.00              0.00             0   \n",
              "764                  0.0            0.00              0.00             0   \n",
              "\n",
              "     assists  bps  ict_index  points  points_per_game  minutes  apppoint  \\\n",
              "0          0    0        0.0       0              0.0        0         2   \n",
              "1          0    0        0.0       0              0.0        0         2   \n",
              "2          1   12        0.4       4              4.0        1         2   \n",
              "3          3   62       21.9      21              2.6      236         2   \n",
              "4          0  234       36.0      46              3.1     1194         2   \n",
              "..       ...  ...        ...     ...              ...      ...       ...   \n",
              "760        0    0        0.0       0              0.0        0         2   \n",
              "761        1   76       24.9      20              2.2      460         2   \n",
              "762        0    0        0.0       0              0.0        0         2   \n",
              "763        0    0        0.0       0              0.0        0         2   \n",
              "764        0    0        0.0       0              0.0        0         2   \n",
              "\n",
              "     assistvalue  \n",
              "0              3  \n",
              "1              3  \n",
              "2              3  \n",
              "3              3  \n",
              "4              3  \n",
              "..           ...  \n",
              "760            3  \n",
              "761            3  \n",
              "762            3  \n",
              "763            3  \n",
              "764            3  \n",
              "\n",
              "[765 rows x 17 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-6cf4b94c-7afd-418b-82d5-57432b79168b\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>team</th>\n",
              "      <th>pos</th>\n",
              "      <th>name</th>\n",
              "      <th>cost</th>\n",
              "      <th>selected_by_percent</th>\n",
              "      <th>expected_goals</th>\n",
              "      <th>expected_assists</th>\n",
              "      <th>goals_scored</th>\n",
              "      <th>assists</th>\n",
              "      <th>bps</th>\n",
              "      <th>ict_index</th>\n",
              "      <th>points</th>\n",
              "      <th>points_per_game</th>\n",
              "      <th>minutes</th>\n",
              "      <th>apppoint</th>\n",
              "      <th>assistvalue</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>1</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>F</td>\n",
              "      <td>Balogun</td>\n",
              "      <td>4.4</td>\n",
              "      <td>0.2</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>2</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>D</td>\n",
              "      <td>Cédric</td>\n",
              "      <td>3.9</td>\n",
              "      <td>0.4</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>3</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>M</td>\n",
              "      <td>M.Elneny</td>\n",
              "      <td>4.4</td>\n",
              "      <td>0.1</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>12</td>\n",
              "      <td>0.4</td>\n",
              "      <td>4</td>\n",
              "      <td>4.0</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>4</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>M</td>\n",
              "      <td>Fábio Vieira</td>\n",
              "      <td>5.4</td>\n",
              "      <td>0.1</td>\n",
              "      <td>1.20</td>\n",
              "      <td>0.35</td>\n",
              "      <td>1</td>\n",
              "      <td>3</td>\n",
              "      <td>62</td>\n",
              "      <td>21.9</td>\n",
              "      <td>21</td>\n",
              "      <td>2.6</td>\n",
              "      <td>236</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>5</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>D</td>\n",
              "      <td>Gabriel</td>\n",
              "      <td>4.9</td>\n",
              "      <td>15.1</td>\n",
              "      <td>0.81</td>\n",
              "      <td>0.22</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>234</td>\n",
              "      <td>36.0</td>\n",
              "      <td>46</td>\n",
              "      <td>3.1</td>\n",
              "      <td>1194</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>760</th>\n",
              "      <td>704</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>F</td>\n",
              "      <td>Fraser</td>\n",
              "      <td>4.5</td>\n",
              "      <td>0.1</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>761</th>\n",
              "      <td>715</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>M</td>\n",
              "      <td>Bellegarde</td>\n",
              "      <td>4.9</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.32</td>\n",
              "      <td>0.36</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>76</td>\n",
              "      <td>24.9</td>\n",
              "      <td>20</td>\n",
              "      <td>2.2</td>\n",
              "      <td>460</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>762</th>\n",
              "      <td>749</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>M</td>\n",
              "      <td>Whittingham</td>\n",
              "      <td>4.5</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>763</th>\n",
              "      <td>750</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>M</td>\n",
              "      <td>Chirewa</td>\n",
              "      <td>4.5</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>764</th>\n",
              "      <td>751</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>D</td>\n",
              "      <td>Hubner</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>765 rows × 17 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-6cf4b94c-7afd-418b-82d5-57432b79168b')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-6cf4b94c-7afd-418b-82d5-57432b79168b button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-6cf4b94c-7afd-418b-82d5-57432b79168b');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-7f5048e5-a6f8-4ac0-9319-85ccbe93f34b\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-7f5048e5-a6f8-4ac0-9319-85ccbe93f34b')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-7f5048e5-a6f8-4ac0-9319-85ccbe93f34b button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 17
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import pandas as pd\n",
        "gwfixtures = pd.read_csv(\"/fixtures_data.csv\")\n",
        "import requests\n",
        "import pandas as pd\n",
        "url = 'https://projects.fivethirtyeight.com/soccer-api/club/spi_global_rankings.csv'\n",
        "r = requests.get(url)\n",
        "open('temp.csv', 'wb').write(r.content)\n",
        "spi = pd.read_csv('temp.csv')\n",
        "spi['team_h'] = spi['name']\n",
        "spi['team_a'] = spi['name']\n",
        "spi= spi.replace('Newcastle', 'Newcastle United')\n",
        "spi= spi.replace('Wolverhampton','Wolverhampton Wanderers')\n",
        "spi= spi.replace('Tottenham Hotspur','Tottenham')\n",
        "spi= spi.replace('Leeds United','Leeds')\n",
        "spi= spi.replace('Leicester City','Leicester')\n",
        "spi= spi.replace('West Ham United','West Ham')\n",
        "spi= spi.replace('Brighton and Hove Albion','Brighton')\n",
        "spi= spi.replace('Norwich City','Norwich')\n",
        "spi= spi.replace('AFC Bournemouth','Bournemouth')\n",
        "Left_join = pd.merge(gwfixtures,\n",
        "                     spi,\n",
        "                     on ='team_h',\n",
        "                     how ='left')\n",
        "homespi = Left_join.drop(columns=[\n",
        " 'rank',\n",
        " 'prev_rank',\n",
        " 'league',\n",
        "  'off',\n",
        " 'def',\n",
        " 'name',\n",
        " 'team_a_y',])\n",
        "homespi.rename(columns = {'team_a_x':'team_a', 'spi':'Home SPI'}, inplace = True)\n",
        "away_join = pd.merge(homespi,\n",
        "                     spi,\n",
        "                     on ='team_a',\n",
        "                     how ='left')\n",
        "homesawayspi = away_join.drop(columns=[\n",
        " 'rank',\n",
        " 'prev_rank',\n",
        " 'name',\n",
        " 'league',\n",
        " 'off',\n",
        " 'def',\n",
        " 'team_h_y'])\n",
        "homesawayspi.rename(columns = {'team_h_x':'team_h', 'spi':'Away SPI'}, inplace = True)\n",
        "homesawayspi['Event'] = homesawayspi['event'].astype(str)\n",
        "gw18 = homesawayspi.query('Event==\"18.0\"')\n",
        "PLSPI = spi.query('league==\"Barclays Premier League\"')\n",
        "PLSPI['League Average']  = PLSPI[\"spi\"].mean()\n",
        "laverage = PLSPI[\"spi\"].mean()\n",
        "PLSPI['League Average'].astype(int)\n",
        "gw18['League_Average']  = laverage\n",
        "gw18.rename(columns = {'Home SPI':'HomeSPI', 'Away SPI':'AwaySPI'}, inplace = True)\n",
        "gw18['home_difference'] = gw18.HomeSPI - gw18.League_Average\n",
        "gw18['away_difference'] = gw18.AwaySPI - gw18.League_Average\n",
        "gw18['home_adjustment'] = (gw18.home_difference + gw18.League_Average)/gw18.League_Average\n",
        "gw18['away_adjustment'] = (gw18.away_difference + gw18.League_Average)/gw18.League_Average\n",
        "gw18adjustments = gw18[['team_h', 'home_adjustment']].append(gw18[['team_a','away_adjustment']].set_axis(['team_h', 'home_adjustment'], axis=1)).reset_index(drop=True)\n",
        "gw18adjustments.rename(columns = {'team_h':'team'}, inplace = True)\n",
        "gw18adjustments\n"
      ],
      "metadata": {
        "id": "0oqPsFQJjyR0",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "outputId": "708c4eb5-480c-4041-e29e-fdab16092338"
      },
      "execution_count": 18,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "<ipython-input-18-2067c9dfa01b>:49: SettingWithCopyWarning: \n",
            "A value is trying to be set on a copy of a slice from a DataFrame.\n",
            "Try using .loc[row_indexer,col_indexer] = value instead\n",
            "\n",
            "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
            "  PLSPI['League Average']  = PLSPI[\"spi\"].mean()\n",
            "<ipython-input-18-2067c9dfa01b>:52: SettingWithCopyWarning: \n",
            "A value is trying to be set on a copy of a slice from a DataFrame.\n",
            "Try using .loc[row_indexer,col_indexer] = value instead\n",
            "\n",
            "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
            "  gw18['League_Average']  = laverage\n",
            "<ipython-input-18-2067c9dfa01b>:53: SettingWithCopyWarning: \n",
            "A value is trying to be set on a copy of a slice from a DataFrame\n",
            "\n",
            "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
            "  gw18.rename(columns = {'Home SPI':'HomeSPI', 'Away SPI':'AwaySPI'}, inplace = True)\n",
            "<ipython-input-18-2067c9dfa01b>:54: SettingWithCopyWarning: \n",
            "A value is trying to be set on a copy of a slice from a DataFrame.\n",
            "Try using .loc[row_indexer,col_indexer] = value instead\n",
            "\n",
            "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
            "  gw18['home_difference'] = gw18.HomeSPI - gw18.League_Average\n",
            "<ipython-input-18-2067c9dfa01b>:55: SettingWithCopyWarning: \n",
            "A value is trying to be set on a copy of a slice from a DataFrame.\n",
            "Try using .loc[row_indexer,col_indexer] = value instead\n",
            "\n",
            "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
            "  gw18['away_difference'] = gw18.AwaySPI - gw18.League_Average\n",
            "<ipython-input-18-2067c9dfa01b>:56: SettingWithCopyWarning: \n",
            "A value is trying to be set on a copy of a slice from a DataFrame.\n",
            "Try using .loc[row_indexer,col_indexer] = value instead\n",
            "\n",
            "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
            "  gw18['home_adjustment'] = (gw18.home_difference + gw18.League_Average)/gw18.League_Average\n",
            "<ipython-input-18-2067c9dfa01b>:57: SettingWithCopyWarning: \n",
            "A value is trying to be set on a copy of a slice from a DataFrame.\n",
            "Try using .loc[row_indexer,col_indexer] = value instead\n",
            "\n",
            "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
            "  gw18['away_adjustment'] = (gw18.away_difference + gw18.League_Average)/gw18.League_Average\n",
            "<ipython-input-18-2067c9dfa01b>:58: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  gw18adjustments = gw18[['team_h', 'home_adjustment']].append(gw18[['team_a','away_adjustment']].set_axis(['team_h', 'home_adjustment'], axis=1)).reset_index(drop=True)\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                       team  home_adjustment\n",
              "0            Crystal Palace         1.020824\n",
              "1               Aston Villa         1.101978\n",
              "2                  West Ham         0.988306\n",
              "3                    Fulham         0.948007\n",
              "4                Luton Town         0.770968\n",
              "5         Nottingham Forest         0.780000\n",
              "6                 Tottenham         1.002480\n",
              "7                 Liverpool         1.166318\n",
              "8   Wolverhampton Wanderers         0.820717\n",
              "9                  Brighton         1.123934\n",
              "10         Sheffield United         0.786115\n",
              "11        Manchester United         1.098921\n",
              "12                  Burnley         0.874634\n",
              "13         Newcastle United         1.163122\n",
              "14              Bournemouth         0.827943\n",
              "15                  Everton         0.884223\n",
              "16                  Arsenal         1.166179\n",
              "17                  Chelsea         1.053063"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-53860199-dcd3-421a-9ba9-c8848ed56d8e\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>team</th>\n",
              "      <th>home_adjustment</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>Crystal Palace</td>\n",
              "      <td>1.020824</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>1.101978</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>West Ham</td>\n",
              "      <td>0.988306</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>Fulham</td>\n",
              "      <td>0.948007</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>Luton Town</td>\n",
              "      <td>0.770968</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>Nottingham Forest</td>\n",
              "      <td>0.780000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>Tottenham</td>\n",
              "      <td>1.002480</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>Liverpool</td>\n",
              "      <td>1.166318</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>0.820717</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>Brighton</td>\n",
              "      <td>1.123934</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10</th>\n",
              "      <td>Sheffield United</td>\n",
              "      <td>0.786115</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>11</th>\n",
              "      <td>Manchester United</td>\n",
              "      <td>1.098921</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>12</th>\n",
              "      <td>Burnley</td>\n",
              "      <td>0.874634</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>13</th>\n",
              "      <td>Newcastle United</td>\n",
              "      <td>1.163122</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>14</th>\n",
              "      <td>Bournemouth</td>\n",
              "      <td>0.827943</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>15</th>\n",
              "      <td>Everton</td>\n",
              "      <td>0.884223</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>16</th>\n",
              "      <td>Arsenal</td>\n",
              "      <td>1.166179</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>17</th>\n",
              "      <td>Chelsea</td>\n",
              "      <td>1.053063</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-53860199-dcd3-421a-9ba9-c8848ed56d8e')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-53860199-dcd3-421a-9ba9-c8848ed56d8e button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-53860199-dcd3-421a-9ba9-c8848ed56d8e');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-490a32d5-99c5-4444-9f92-1a8b13d738c2\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-490a32d5-99c5-4444-9f92-1a8b13d738c2')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-490a32d5-99c5-4444-9f92-1a8b13d738c2 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 18
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "rawdf = pd.merge(master,\n",
        "                     gw18adjustments,\n",
        "                     on ='team',\n",
        "                     how ='left')\n",
        "rawfwd = rawdf.query('pos==\"F\"')\n",
        "rawfwd['xP'] = ((rawfwd.expected_goals * 4/17)+(rawfwd.expected_assists * 3/17) + (rawfwd.apppoint)) * rawfwd.home_adjustment\n",
        "rawfwd = rawfwd.drop(columns=[\n",
        " 'expected_goals',\n",
        " 'team',\n",
        " 'expected_assists',\n",
        " 'apppoint',\n",
        " 'assistvalue',\n",
        "'home_adjustment'])\n",
        "rawmd = rawdf.query('pos==\"M\"')\n",
        "rawmd['xP'] = ((rawmd.expected_goals * 5/17)+(rawmd.expected_assists * 3/17) + (rawmd.apppoint)) * rawmd.home_adjustment\n",
        "rawmd = rawmd.drop(columns=[\n",
        " 'expected_goals',\n",
        " 'team',\n",
        " 'expected_assists',\n",
        " 'apppoint',\n",
        " 'assistvalue',\n",
        "'home_adjustment'])\n",
        "fbref = pd.read_html('https://fbref.com/en/comps/9/Premier-League-Stats')\n",
        "epltable = fbref[0]\n",
        "epltabledef = epltable.drop(columns=[ 'Rk',\n",
        " 'MP',\n",
        " 'W',\n",
        " 'D',\n",
        " 'L',\n",
        " 'GF',\n",
        " 'GA',\n",
        " 'GD',\n",
        " 'xG',\n",
        " 'xGD',\n",
        " 'xGD/90',\n",
        " 'Pts',\n",
        " 'Pts/MP',\n",
        " 'Last 5',\n",
        " 'Attendance',\n",
        " 'Top Team Scorer',\n",
        " 'Goalkeeper',\n",
        " 'Notes'])\n",
        "epltabledef= epltabledef.replace('Newcastle Utd', 'Newcastle United')\n",
        "epltabledef= epltabledef.replace('Wolves','Wolverhampton Wanderers')\n",
        "epltabledef= epltabledef.replace('Leeds United','Leeds')\n",
        "epltabledef= epltabledef.replace('Leicester City','Leicester')\n",
        "epltabledef= epltabledef.replace('Manchester Utd','Manchester United')\n",
        "epltabledef['Squad'] = epltabledef['Squad'].str.replace(r\"[\\\"\\',]\", '')\n",
        "epltabledef= epltabledef.replace('Nottham Forest','Nottingham Forest')\n",
        "epltabledef['xCSP'] = (4 - (epltabledef.xGA * 4/17))/4\n",
        "epltabledef.rename(columns={'Squad': 'team'}, inplace=True)\n",
        "rawdfcs = pd.merge(rawdf,\n",
        "                     epltabledef,\n",
        "                     on ='team',\n",
        "                     how ='left')\n",
        "rawgk= rawdfcs.query('pos==\"G\"')\n",
        "rawgk['xP'] = ((rawgk.xCSP)+ (rawgk.apppoint)) * rawgk.home_adjustment\n",
        "#rawgk['xP'] = rawgk.apppoint * rawgk.home_adjustment\n",
        "rawgk = rawgk.drop(columns=[\n",
        " 'expected_goals',\n",
        " 'team',\n",
        " 'expected_assists',\n",
        " 'apppoint',\n",
        " 'assistvalue',\n",
        "  'xGA',\n",
        "'home_adjustment'])\n",
        "rawdef= rawdfcs.query('pos==\"D\"')\n",
        "rawdef['xP'] = ((rawdef.expected_goals * 6/17)+(rawdef.expected_assists * 3/17) +(rawdef.xCSP)+ (rawdef.apppoint) * rawdef.home_adjustment)\n",
        "#rawdef['xP'] = ((rawdef.expected_goals * 6/3)+(rawdef.expected_assists * 3/3) + (rawdef.apppoint) * rawdef.home_adjustment)\n",
        "rawdef = rawdef.drop(columns=[\n",
        " 'expected_goals',\n",
        " 'team',\n",
        " 'expected_assists',\n",
        " 'apppoint',\n",
        " 'assistvalue',\n",
        "  'xGA',\n",
        " 'home_adjustment'])\n",
        "rawallplayers = pd.concat([rawfwd, rawmd, rawdef, rawgk], ignore_index=True)\n",
        "rawallplayers\n",
        "\n",
        "\n",
        "\n"
      ],
      "metadata": {
        "id": "AWnYpVh5kDzO",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 875
        },
        "outputId": "bb88b7f2-e8d8-4a5c-867f-b9fc044a693d"
      },
      "execution_count": 19,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "<ipython-input-19-26f17eee60f7>:6: SettingWithCopyWarning: \n",
            "A value is trying to be set on a copy of a slice from a DataFrame.\n",
            "Try using .loc[row_indexer,col_indexer] = value instead\n",
            "\n",
            "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
            "  rawfwd['xP'] = ((rawfwd.expected_goals * 4/17)+(rawfwd.expected_assists * 3/17) + (rawfwd.apppoint)) * rawfwd.home_adjustment\n",
            "<ipython-input-19-26f17eee60f7>:15: SettingWithCopyWarning: \n",
            "A value is trying to be set on a copy of a slice from a DataFrame.\n",
            "Try using .loc[row_indexer,col_indexer] = value instead\n",
            "\n",
            "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
            "  rawmd['xP'] = ((rawmd.expected_goals * 5/17)+(rawmd.expected_assists * 3/17) + (rawmd.apppoint)) * rawmd.home_adjustment\n",
            "<ipython-input-19-26f17eee60f7>:48: FutureWarning: The default value of regex will change from True to False in a future version.\n",
            "  epltabledef['Squad'] = epltabledef['Squad'].str.replace(r\"[\\\"\\',]\", '')\n",
            "<ipython-input-19-26f17eee60f7>:57: SettingWithCopyWarning: \n",
            "A value is trying to be set on a copy of a slice from a DataFrame.\n",
            "Try using .loc[row_indexer,col_indexer] = value instead\n",
            "\n",
            "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
            "  rawgk['xP'] = ((rawgk.xCSP)+ (rawgk.apppoint)) * rawgk.home_adjustment\n",
            "<ipython-input-19-26f17eee60f7>:68: SettingWithCopyWarning: \n",
            "A value is trying to be set on a copy of a slice from a DataFrame.\n",
            "Try using .loc[row_indexer,col_indexer] = value instead\n",
            "\n",
            "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
            "  rawdef['xP'] = ((rawdef.expected_goals * 6/17)+(rawdef.expected_assists * 3/17) +(rawdef.xCSP)+ (rawdef.apppoint) * rawdef.home_adjustment)\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "      id pos     name  cost  selected_by_percent  goals_scored  assists  bps  \\\n",
              "0      1   F  Balogun   4.4                  0.2             0        0    0   \n",
              "1      8   F  G.Jesus   8.0                  4.9             3        2  143   \n",
              "2     13   F  Nketiah   5.4                  5.5             5        3  177   \n",
              "3     39   F    Davis   4.9                  0.1             0        0    0   \n",
              "4     44   F    Duran   5.0                  0.2             2        0   61   \n",
              "..   ...  ..      ...   ...                  ...           ...      ...  ...   \n",
              "760  647   G    Anang   4.0                  0.1             0        0    0   \n",
              "761  546   G  Bentley   3.9                  1.3             0        0   60   \n",
              "762  564   G     King   3.9                  0.7             0        0    0   \n",
              "763  569   G  José Sá   5.0                  1.3             0        0  236   \n",
              "764  571   G   Šarkić   4.0                  0.3             0        0    0   \n",
              "\n",
              "     ict_index  points  points_per_game  minutes        xP      xCSP  \n",
              "0          0.0       0              0.0        0  2.332358       NaN  \n",
              "1         77.5      44              3.7      744  3.615841       NaN  \n",
              "2         59.1      57              3.6      830  3.425137       NaN  \n",
              "3          0.0       0              0.0        0  2.203956       NaN  \n",
              "4         15.3      17              1.7      120  2.415925       NaN  \n",
              "..         ...     ...              ...      ...       ...       ...  \n",
              "760        0.0       0              0.0        0  1.273171 -0.711765  \n",
              "761        5.7      16              5.3      247  1.091070 -0.670588  \n",
              "762        0.0       0              0.0        0  1.091070 -0.670588  \n",
              "763       35.1      40              2.7     1282  1.091070 -0.670588  \n",
              "764        0.0       0              0.0        0  1.091070 -0.670588  \n",
              "\n",
              "[765 rows x 14 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-0b78d3df-4512-42a4-a4c7-5d788182898e\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>pos</th>\n",
              "      <th>name</th>\n",
              "      <th>cost</th>\n",
              "      <th>selected_by_percent</th>\n",
              "      <th>goals_scored</th>\n",
              "      <th>assists</th>\n",
              "      <th>bps</th>\n",
              "      <th>ict_index</th>\n",
              "      <th>points</th>\n",
              "      <th>points_per_game</th>\n",
              "      <th>minutes</th>\n",
              "      <th>xP</th>\n",
              "      <th>xCSP</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>1</td>\n",
              "      <td>F</td>\n",
              "      <td>Balogun</td>\n",
              "      <td>4.4</td>\n",
              "      <td>0.2</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>2.332358</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>8</td>\n",
              "      <td>F</td>\n",
              "      <td>G.Jesus</td>\n",
              "      <td>8.0</td>\n",
              "      <td>4.9</td>\n",
              "      <td>3</td>\n",
              "      <td>2</td>\n",
              "      <td>143</td>\n",
              "      <td>77.5</td>\n",
              "      <td>44</td>\n",
              "      <td>3.7</td>\n",
              "      <td>744</td>\n",
              "      <td>3.615841</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>13</td>\n",
              "      <td>F</td>\n",
              "      <td>Nketiah</td>\n",
              "      <td>5.4</td>\n",
              "      <td>5.5</td>\n",
              "      <td>5</td>\n",
              "      <td>3</td>\n",
              "      <td>177</td>\n",
              "      <td>59.1</td>\n",
              "      <td>57</td>\n",
              "      <td>3.6</td>\n",
              "      <td>830</td>\n",
              "      <td>3.425137</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>39</td>\n",
              "      <td>F</td>\n",
              "      <td>Davis</td>\n",
              "      <td>4.9</td>\n",
              "      <td>0.1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>2.203956</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>44</td>\n",
              "      <td>F</td>\n",
              "      <td>Duran</td>\n",
              "      <td>5.0</td>\n",
              "      <td>0.2</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>61</td>\n",
              "      <td>15.3</td>\n",
              "      <td>17</td>\n",
              "      <td>1.7</td>\n",
              "      <td>120</td>\n",
              "      <td>2.415925</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>760</th>\n",
              "      <td>647</td>\n",
              "      <td>G</td>\n",
              "      <td>Anang</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>1.273171</td>\n",
              "      <td>-0.711765</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>761</th>\n",
              "      <td>546</td>\n",
              "      <td>G</td>\n",
              "      <td>Bentley</td>\n",
              "      <td>3.9</td>\n",
              "      <td>1.3</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>60</td>\n",
              "      <td>5.7</td>\n",
              "      <td>16</td>\n",
              "      <td>5.3</td>\n",
              "      <td>247</td>\n",
              "      <td>1.091070</td>\n",
              "      <td>-0.670588</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>762</th>\n",
              "      <td>564</td>\n",
              "      <td>G</td>\n",
              "      <td>King</td>\n",
              "      <td>3.9</td>\n",
              "      <td>0.7</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>1.091070</td>\n",
              "      <td>-0.670588</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>763</th>\n",
              "      <td>569</td>\n",
              "      <td>G</td>\n",
              "      <td>José Sá</td>\n",
              "      <td>5.0</td>\n",
              "      <td>1.3</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>236</td>\n",
              "      <td>35.1</td>\n",
              "      <td>40</td>\n",
              "      <td>2.7</td>\n",
              "      <td>1282</td>\n",
              "      <td>1.091070</td>\n",
              "      <td>-0.670588</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>764</th>\n",
              "      <td>571</td>\n",
              "      <td>G</td>\n",
              "      <td>Šarkić</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.3</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>1.091070</td>\n",
              "      <td>-0.670588</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>765 rows × 14 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-0b78d3df-4512-42a4-a4c7-5d788182898e')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-0b78d3df-4512-42a4-a4c7-5d788182898e button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-0b78d3df-4512-42a4-a4c7-5d788182898e');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-32bbacef-226c-4ddb-bdb6-7e2f07b487ba\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-32bbacef-226c-4ddb-bdb6-7e2f07b487ba')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-32bbacef-226c-4ddb-bdb6-7e2f07b487ba button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 19
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "rawgk1= rawdfcs.query('pos==\"G\"')\n",
        "rawgk1"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 493
        },
        "id": "z3FgmhoCb3GG",
        "outputId": "eace1129-679b-434d-b054-45f6e86564f2"
      },
      "execution_count": 20,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "      id                     team pos       name  cost  selected_by_percent  \\\n",
              "15    17                  Arsenal   G   Ramsdale   4.6                  6.5   \n",
              "16    18                  Arsenal   G  Rúnarsson   4.0                  0.1   \n",
              "26   113                  Arsenal   G       Raya   4.9                  5.4   \n",
              "30   646                  Arsenal   G       Hein   4.0                  0.1   \n",
              "51    49              Aston Villa   G   Martinez   5.1                 11.4   \n",
              "..   ...                      ...  ..        ...   ...                  ...   \n",
              "724  647                 West Ham   G      Anang   4.0                  0.1   \n",
              "730  546  Wolverhampton Wanderers   G    Bentley   3.9                  1.3   \n",
              "746  564  Wolverhampton Wanderers   G       King   3.9                  0.7   \n",
              "750  569  Wolverhampton Wanderers   G    José Sá   5.0                  1.3   \n",
              "752  571  Wolverhampton Wanderers   G     Šarkić   4.0                  0.3   \n",
              "\n",
              "     expected_goals  expected_assists  goals_scored  assists  bps  ict_index  \\\n",
              "15              0.0              0.01             0        0   77        5.6   \n",
              "16              0.0              0.00             0        0    0        0.0   \n",
              "26              0.0              0.02             0        0  203       16.2   \n",
              "30              0.0              0.00             0        0    0        0.0   \n",
              "51              0.0              0.00             0        0  299       41.2   \n",
              "..              ...               ...           ...      ...  ...        ...   \n",
              "724             0.0              0.00             0        0    0        0.0   \n",
              "730             0.0              0.00             0        0   60        5.7   \n",
              "746             0.0              0.00             0        0    0        0.0   \n",
              "750             0.0              0.00             0        0  236       35.1   \n",
              "752             0.0              0.00             0        0    0        0.0   \n",
              "\n",
              "     points  points_per_game  minutes  apppoint  assistvalue  home_adjustment  \\\n",
              "15       17              3.4      450         2            3         1.166179   \n",
              "16        0              0.0        0         2            3         1.166179   \n",
              "26       46              3.8     1080         2            3         1.166179   \n",
              "30        0              0.0        0         2            3         1.166179   \n",
              "51       56              3.5     1440         2            3         1.101978   \n",
              "..      ...              ...      ...       ...          ...              ...   \n",
              "724       0              0.0        0         2            3         0.988306   \n",
              "730      16              5.3      247         2            3         0.820717   \n",
              "746       0              0.0        0         2            3         0.820717   \n",
              "750      40              2.7     1282         2            3         0.820717   \n",
              "752       0              0.0        0         2            3         0.820717   \n",
              "\n",
              "      xGA      xCSP  \n",
              "15   12.7  0.252941  \n",
              "16   12.7  0.252941  \n",
              "26   12.7  0.252941  \n",
              "30   12.7  0.252941  \n",
              "51   22.7 -0.335294  \n",
              "..    ...       ...  \n",
              "724  29.1 -0.711765  \n",
              "730  28.4 -0.670588  \n",
              "746  28.4 -0.670588  \n",
              "750  28.4 -0.670588  \n",
              "752  28.4 -0.670588  \n",
              "\n",
              "[88 rows x 20 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-4d3aaede-7464-4864-9e31-89b801203d4b\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>team</th>\n",
              "      <th>pos</th>\n",
              "      <th>name</th>\n",
              "      <th>cost</th>\n",
              "      <th>selected_by_percent</th>\n",
              "      <th>expected_goals</th>\n",
              "      <th>expected_assists</th>\n",
              "      <th>goals_scored</th>\n",
              "      <th>assists</th>\n",
              "      <th>bps</th>\n",
              "      <th>ict_index</th>\n",
              "      <th>points</th>\n",
              "      <th>points_per_game</th>\n",
              "      <th>minutes</th>\n",
              "      <th>apppoint</th>\n",
              "      <th>assistvalue</th>\n",
              "      <th>home_adjustment</th>\n",
              "      <th>xGA</th>\n",
              "      <th>xCSP</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>15</th>\n",
              "      <td>17</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>G</td>\n",
              "      <td>Ramsdale</td>\n",
              "      <td>4.6</td>\n",
              "      <td>6.5</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.01</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>77</td>\n",
              "      <td>5.6</td>\n",
              "      <td>17</td>\n",
              "      <td>3.4</td>\n",
              "      <td>450</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "      <td>1.166179</td>\n",
              "      <td>12.7</td>\n",
              "      <td>0.252941</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>16</th>\n",
              "      <td>18</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>G</td>\n",
              "      <td>Rúnarsson</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.1</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "      <td>1.166179</td>\n",
              "      <td>12.7</td>\n",
              "      <td>0.252941</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>26</th>\n",
              "      <td>113</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>G</td>\n",
              "      <td>Raya</td>\n",
              "      <td>4.9</td>\n",
              "      <td>5.4</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.02</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>203</td>\n",
              "      <td>16.2</td>\n",
              "      <td>46</td>\n",
              "      <td>3.8</td>\n",
              "      <td>1080</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "      <td>1.166179</td>\n",
              "      <td>12.7</td>\n",
              "      <td>0.252941</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>30</th>\n",
              "      <td>646</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>G</td>\n",
              "      <td>Hein</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.1</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "      <td>1.166179</td>\n",
              "      <td>12.7</td>\n",
              "      <td>0.252941</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>51</th>\n",
              "      <td>49</td>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>G</td>\n",
              "      <td>Martinez</td>\n",
              "      <td>5.1</td>\n",
              "      <td>11.4</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>299</td>\n",
              "      <td>41.2</td>\n",
              "      <td>56</td>\n",
              "      <td>3.5</td>\n",
              "      <td>1440</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "      <td>1.101978</td>\n",
              "      <td>22.7</td>\n",
              "      <td>-0.335294</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>724</th>\n",
              "      <td>647</td>\n",
              "      <td>West Ham</td>\n",
              "      <td>G</td>\n",
              "      <td>Anang</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.1</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "      <td>0.988306</td>\n",
              "      <td>29.1</td>\n",
              "      <td>-0.711765</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>730</th>\n",
              "      <td>546</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>G</td>\n",
              "      <td>Bentley</td>\n",
              "      <td>3.9</td>\n",
              "      <td>1.3</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>60</td>\n",
              "      <td>5.7</td>\n",
              "      <td>16</td>\n",
              "      <td>5.3</td>\n",
              "      <td>247</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "      <td>0.820717</td>\n",
              "      <td>28.4</td>\n",
              "      <td>-0.670588</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>746</th>\n",
              "      <td>564</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>G</td>\n",
              "      <td>King</td>\n",
              "      <td>3.9</td>\n",
              "      <td>0.7</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "      <td>0.820717</td>\n",
              "      <td>28.4</td>\n",
              "      <td>-0.670588</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>750</th>\n",
              "      <td>569</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>G</td>\n",
              "      <td>José Sá</td>\n",
              "      <td>5.0</td>\n",
              "      <td>1.3</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>236</td>\n",
              "      <td>35.1</td>\n",
              "      <td>40</td>\n",
              "      <td>2.7</td>\n",
              "      <td>1282</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "      <td>0.820717</td>\n",
              "      <td>28.4</td>\n",
              "      <td>-0.670588</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>752</th>\n",
              "      <td>571</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>G</td>\n",
              "      <td>Šarkić</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.3</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "      <td>0.820717</td>\n",
              "      <td>28.4</td>\n",
              "      <td>-0.670588</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>88 rows × 20 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-4d3aaede-7464-4864-9e31-89b801203d4b')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-4d3aaede-7464-4864-9e31-89b801203d4b button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-4d3aaede-7464-4864-9e31-89b801203d4b');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-f05cdf39-4a3e-4756-b42a-896fed418b77\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-f05cdf39-4a3e-4756-b42a-896fed418b77')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-f05cdf39-4a3e-4756-b42a-896fed418b77 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 20
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "from pandas import ExcelWriter"
      ],
      "metadata": {
        "id": "ONZy1SvCDu6y"
      },
      "execution_count": 21,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "writer = ExcelWriter('notes.xlsx')"
      ],
      "metadata": {
        "id": "iubZBRlVEhiz"
      },
      "execution_count": 22,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "rawallplayers.to_excel(writer, sheet_name='Sheet1')\n",
        "gw18adjustments.to_excel(writer, sheet_name='Sheet2')\n",
        "#fplwithunderstat.to_excel(writer, sheet_name='Sheet3')\n",
        "\n",
        "# Close the Pandas Excel writer and output the Excel file.\n",
        "writer.save()"
      ],
      "metadata": {
        "id": "slYEIma_E0uP",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "6f569634-825c-4e55-d209-0590da2463e6"
      },
      "execution_count": 23,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "<ipython-input-23-4c0aa43058f2>:6: FutureWarning: save is not part of the public API, usage can give unexpected results and will be removed in a future version\n",
            "  writer.save()\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "gwfixtures"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 424
        },
        "id": "3udskoGrT73A",
        "outputId": "36eb2875-21d8-4446-a3d8-d2b43814a554"
      },
      "execution_count": 24,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "     event            team_h                   team_a          kickoff_time\n",
              "0      NaN       Bournemouth               Luton Town                   NaN\n",
              "1      NaN   Manchester City                Brentford                   NaN\n",
              "2      1.0           Burnley          Manchester City  2023-08-11T19:00:00Z\n",
              "3      1.0           Arsenal        Nottingham Forest  2023-08-12T12:00:00Z\n",
              "4      1.0       Bournemouth                 West Ham  2023-08-12T14:00:00Z\n",
              "..     ...               ...                      ...                   ...\n",
              "375   38.0    Crystal Palace              Aston Villa  2024-05-19T15:00:00Z\n",
              "376   38.0         Liverpool  Wolverhampton Wanderers  2024-05-19T15:00:00Z\n",
              "377   38.0        Luton Town                   Fulham  2024-05-19T15:00:00Z\n",
              "378   38.0   Manchester City                 West Ham  2024-05-19T15:00:00Z\n",
              "379   38.0  Sheffield United                Tottenham  2024-05-19T15:00:00Z\n",
              "\n",
              "[380 rows x 4 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-d5d41fa5-5a46-4bd8-b232-0c1fb0cd3924\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>event</th>\n",
              "      <th>team_h</th>\n",
              "      <th>team_a</th>\n",
              "      <th>kickoff_time</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>NaN</td>\n",
              "      <td>Bournemouth</td>\n",
              "      <td>Luton Town</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>NaN</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>Brentford</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>1.0</td>\n",
              "      <td>Burnley</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>2023-08-11T19:00:00Z</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>1.0</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>Nottingham Forest</td>\n",
              "      <td>2023-08-12T12:00:00Z</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>1.0</td>\n",
              "      <td>Bournemouth</td>\n",
              "      <td>West Ham</td>\n",
              "      <td>2023-08-12T14:00:00Z</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>375</th>\n",
              "      <td>38.0</td>\n",
              "      <td>Crystal Palace</td>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>2024-05-19T15:00:00Z</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>376</th>\n",
              "      <td>38.0</td>\n",
              "      <td>Liverpool</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>2024-05-19T15:00:00Z</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>377</th>\n",
              "      <td>38.0</td>\n",
              "      <td>Luton Town</td>\n",
              "      <td>Fulham</td>\n",
              "      <td>2024-05-19T15:00:00Z</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>378</th>\n",
              "      <td>38.0</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>West Ham</td>\n",
              "      <td>2024-05-19T15:00:00Z</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>379</th>\n",
              "      <td>38.0</td>\n",
              "      <td>Sheffield United</td>\n",
              "      <td>Tottenham</td>\n",
              "      <td>2024-05-19T15:00:00Z</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>380 rows × 4 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-d5d41fa5-5a46-4bd8-b232-0c1fb0cd3924')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-d5d41fa5-5a46-4bd8-b232-0c1fb0cd3924 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-d5d41fa5-5a46-4bd8-b232-0c1fb0cd3924');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-83560b6f-2bb3-43ac-a519-92855c121b05\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-83560b6f-2bb3-43ac-a519-92855c121b05')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-83560b6f-2bb3-43ac-a519-92855c121b05 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 24
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "rawdfallgw = pd.merge(master,\n",
        "                     gw18adjustments,\n",
        "                     on ='team',\n",
        "                     how ='left')\n",
        "rawfwdallgw = rawdfallgw.query('pos==\"F\"')\n",
        "rawfwdallgw['xPallgw'] = ((rawfwdallgw.expected_goals * 4/17)+(rawfwdallgw.expected_assists * 3/17) + (rawfwdallgw.apppoint))\n",
        "rawfwdallgw = rawfwdallgw.drop(columns=[\n",
        " 'expected_goals',\n",
        " 'expected_assists',\n",
        " 'apppoint',\n",
        " 'assistvalue',\n",
        "])\n",
        "rawmdallgw = rawdfallgw.query('pos==\"M\"')\n",
        "rawmdallgw['xPallgw'] = ((rawmdallgw.expected_goals * 5/17)+(rawmdallgw.expected_assists * 3/17) + (rawmdallgw.apppoint))\n",
        "rawmdallgw = rawmdallgw.drop(columns=[\n",
        " 'expected_goals',\n",
        " 'expected_assists',\n",
        " 'apppoint',\n",
        " 'assistvalue',\n",
        "])\n",
        "fbref = pd.read_html('https://fbref.com/en/comps/9/Premier-League-Stats')\n",
        "epltable = fbref[0]\n",
        "epltabledef = epltable.drop(columns=[ 'Rk',\n",
        " 'MP',\n",
        " 'W',\n",
        " 'D',\n",
        " 'L',\n",
        " 'GF',\n",
        " 'GA',\n",
        " 'GD',\n",
        " 'xG',\n",
        " 'xGD',\n",
        " 'xGD/90',\n",
        " 'Pts',\n",
        " 'Pts/MP',\n",
        " 'Last 5',\n",
        " 'Attendance',\n",
        " 'Top Team Scorer',\n",
        " 'Goalkeeper',\n",
        " 'Notes'])\n",
        "epltabledef= epltabledef.replace('Newcastle Utd', 'Newcastle United')\n",
        "epltabledef= epltabledef.replace('Wolves','Wolverhampton Wanderers')\n",
        "epltabledef= epltabledef.replace('Leeds United','Leeds')\n",
        "epltabledef= epltabledef.replace('Leicester City','Leicester')\n",
        "epltabledef= epltabledef.replace('Manchester Utd','Manchester United')\n",
        "epltabledef['Squad'] = epltabledef['Squad'].str.replace(r\"[\\\"\\',]\", '')\n",
        "epltabledef= epltabledef.replace('Nottham Forest','Nottingham Forest')\n",
        "epltabledef['xCSP'] = ((4 - (epltabledef.xGA * 4/17))/4) + 0.75\n",
        "epltabledef.rename(columns={'Squad': 'team'}, inplace=True)\n",
        "rawdfcs = pd.merge(rawdf,\n",
        "                     epltabledef,\n",
        "                     on ='team',\n",
        "                     how ='left')\n",
        "rawgkallgw= rawdfcs.query('pos==\"G\"')\n",
        "#rawgkallgw['xPallgw'] = (rawgkallgw.apppoint)\n",
        "rawgkallgw['xPallgw'] = ((rawgkallgw.xCSP)+ (rawgkallgw.apppoint))\n",
        "rawgkallgw = rawgkallgw.drop(columns=[\n",
        " 'expected_goals',\n",
        "  'expected_assists',\n",
        " 'apppoint',\n",
        " 'assistvalue',\n",
        "  'xGA',\n",
        "])\n",
        "rawdefallgw= rawdfcs.query('pos==\"D\"')\n",
        "rawdefallgw['xPallgw'] = (rawdefallgw.expected_goals * 6/17)+(rawdefallgw.expected_assists * 3/17) +(rawdefallgw.xCSP)+ (rawdefallgw.apppoint)\n",
        "#rawdefallgw['xPallgw'] = (rawdefallgw.expected_goals * 6/3)+(rawdefallgw.expected_assists * 3/3) + (rawdefallgw.apppoint)\n",
        "rawdefallgw = rawdefallgw.drop(columns=[\n",
        " 'expected_goals',\n",
        " 'expected_assists',\n",
        " 'apppoint',\n",
        " 'assistvalue',\n",
        "  'xGA',])\n",
        "rawallplayersallgw = pd.concat([rawfwdallgw, rawmdallgw, rawdefallgw, rawgkallgw], ignore_index=True)\n",
        "rawallplayersallgw\n",
        "\n",
        "\n",
        "\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 875
        },
        "id": "xxPTwE3TZZC0",
        "outputId": "3aa1002e-f29c-48f3-bdd0-37396c97381e"
      },
      "execution_count": 25,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "<ipython-input-25-8d9b960bfb3c>:6: SettingWithCopyWarning: \n",
            "A value is trying to be set on a copy of a slice from a DataFrame.\n",
            "Try using .loc[row_indexer,col_indexer] = value instead\n",
            "\n",
            "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
            "  rawfwdallgw['xPallgw'] = ((rawfwdallgw.expected_goals * 4/17)+(rawfwdallgw.expected_assists * 3/17) + (rawfwdallgw.apppoint))\n",
            "<ipython-input-25-8d9b960bfb3c>:14: SettingWithCopyWarning: \n",
            "A value is trying to be set on a copy of a slice from a DataFrame.\n",
            "Try using .loc[row_indexer,col_indexer] = value instead\n",
            "\n",
            "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
            "  rawmdallgw['xPallgw'] = ((rawmdallgw.expected_goals * 5/17)+(rawmdallgw.expected_assists * 3/17) + (rawmdallgw.apppoint))\n",
            "<ipython-input-25-8d9b960bfb3c>:46: FutureWarning: The default value of regex will change from True to False in a future version.\n",
            "  epltabledef['Squad'] = epltabledef['Squad'].str.replace(r\"[\\\"\\',]\", '')\n",
            "<ipython-input-25-8d9b960bfb3c>:56: SettingWithCopyWarning: \n",
            "A value is trying to be set on a copy of a slice from a DataFrame.\n",
            "Try using .loc[row_indexer,col_indexer] = value instead\n",
            "\n",
            "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
            "  rawgkallgw['xPallgw'] = ((rawgkallgw.xCSP)+ (rawgkallgw.apppoint))\n",
            "<ipython-input-25-8d9b960bfb3c>:65: SettingWithCopyWarning: \n",
            "A value is trying to be set on a copy of a slice from a DataFrame.\n",
            "Try using .loc[row_indexer,col_indexer] = value instead\n",
            "\n",
            "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
            "  rawdefallgw['xPallgw'] = (rawdefallgw.expected_goals * 6/17)+(rawdefallgw.expected_assists * 3/17) +(rawdefallgw.xCSP)+ (rawdefallgw.apppoint)\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "      id                     team pos     name  cost  selected_by_percent  \\\n",
              "0      1                  Arsenal   F  Balogun   4.4                  0.2   \n",
              "1      8                  Arsenal   F  G.Jesus   8.0                  4.9   \n",
              "2     13                  Arsenal   F  Nketiah   5.4                  5.5   \n",
              "3     39              Aston Villa   F    Davis   4.9                  0.1   \n",
              "4     44              Aston Villa   F    Duran   5.0                  0.2   \n",
              "..   ...                      ...  ..      ...   ...                  ...   \n",
              "760  647                 West Ham   G    Anang   4.0                  0.1   \n",
              "761  546  Wolverhampton Wanderers   G  Bentley   3.9                  1.3   \n",
              "762  564  Wolverhampton Wanderers   G     King   3.9                  0.7   \n",
              "763  569  Wolverhampton Wanderers   G  José Sá   5.0                  1.3   \n",
              "764  571  Wolverhampton Wanderers   G   Šarkić   4.0                  0.3   \n",
              "\n",
              "     goals_scored  assists  bps  ict_index  points  points_per_game  minutes  \\\n",
              "0               0        0    0        0.0       0              0.0        0   \n",
              "1               3        2  143       77.5      44              3.7      744   \n",
              "2               5        3  177       59.1      57              3.6      830   \n",
              "3               0        0    0        0.0       0              0.0        0   \n",
              "4               2        0   61       15.3      17              1.7      120   \n",
              "..            ...      ...  ...        ...     ...              ...      ...   \n",
              "760             0        0    0        0.0       0              0.0        0   \n",
              "761             0        0   60        5.7      16              5.3      247   \n",
              "762             0        0    0        0.0       0              0.0        0   \n",
              "763             0        0  236       35.1      40              2.7     1282   \n",
              "764             0        0    0        0.0       0              0.0        0   \n",
              "\n",
              "     home_adjustment   xPallgw      xCSP  \n",
              "0           1.166179  2.000000       NaN  \n",
              "1           1.166179  3.100588       NaN  \n",
              "2           1.166179  2.937059       NaN  \n",
              "3           1.101978  2.000000       NaN  \n",
              "4           1.101978  2.192353       NaN  \n",
              "..               ...       ...       ...  \n",
              "760         0.988306  2.038235  0.038235  \n",
              "761         0.820717  2.079412  0.079412  \n",
              "762         0.820717  2.079412  0.079412  \n",
              "763         0.820717  2.079412  0.079412  \n",
              "764         0.820717  2.079412  0.079412  \n",
              "\n",
              "[765 rows x 16 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-0b70e444-c8ff-49ce-8e79-293f7f007fcb\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>team</th>\n",
              "      <th>pos</th>\n",
              "      <th>name</th>\n",
              "      <th>cost</th>\n",
              "      <th>selected_by_percent</th>\n",
              "      <th>goals_scored</th>\n",
              "      <th>assists</th>\n",
              "      <th>bps</th>\n",
              "      <th>ict_index</th>\n",
              "      <th>points</th>\n",
              "      <th>points_per_game</th>\n",
              "      <th>minutes</th>\n",
              "      <th>home_adjustment</th>\n",
              "      <th>xPallgw</th>\n",
              "      <th>xCSP</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>1</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>F</td>\n",
              "      <td>Balogun</td>\n",
              "      <td>4.4</td>\n",
              "      <td>0.2</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>1.166179</td>\n",
              "      <td>2.000000</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>8</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>F</td>\n",
              "      <td>G.Jesus</td>\n",
              "      <td>8.0</td>\n",
              "      <td>4.9</td>\n",
              "      <td>3</td>\n",
              "      <td>2</td>\n",
              "      <td>143</td>\n",
              "      <td>77.5</td>\n",
              "      <td>44</td>\n",
              "      <td>3.7</td>\n",
              "      <td>744</td>\n",
              "      <td>1.166179</td>\n",
              "      <td>3.100588</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>13</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>F</td>\n",
              "      <td>Nketiah</td>\n",
              "      <td>5.4</td>\n",
              "      <td>5.5</td>\n",
              "      <td>5</td>\n",
              "      <td>3</td>\n",
              "      <td>177</td>\n",
              "      <td>59.1</td>\n",
              "      <td>57</td>\n",
              "      <td>3.6</td>\n",
              "      <td>830</td>\n",
              "      <td>1.166179</td>\n",
              "      <td>2.937059</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>39</td>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>F</td>\n",
              "      <td>Davis</td>\n",
              "      <td>4.9</td>\n",
              "      <td>0.1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>1.101978</td>\n",
              "      <td>2.000000</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>44</td>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>F</td>\n",
              "      <td>Duran</td>\n",
              "      <td>5.0</td>\n",
              "      <td>0.2</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>61</td>\n",
              "      <td>15.3</td>\n",
              "      <td>17</td>\n",
              "      <td>1.7</td>\n",
              "      <td>120</td>\n",
              "      <td>1.101978</td>\n",
              "      <td>2.192353</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>760</th>\n",
              "      <td>647</td>\n",
              "      <td>West Ham</td>\n",
              "      <td>G</td>\n",
              "      <td>Anang</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.988306</td>\n",
              "      <td>2.038235</td>\n",
              "      <td>0.038235</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>761</th>\n",
              "      <td>546</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>G</td>\n",
              "      <td>Bentley</td>\n",
              "      <td>3.9</td>\n",
              "      <td>1.3</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>60</td>\n",
              "      <td>5.7</td>\n",
              "      <td>16</td>\n",
              "      <td>5.3</td>\n",
              "      <td>247</td>\n",
              "      <td>0.820717</td>\n",
              "      <td>2.079412</td>\n",
              "      <td>0.079412</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>762</th>\n",
              "      <td>564</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>G</td>\n",
              "      <td>King</td>\n",
              "      <td>3.9</td>\n",
              "      <td>0.7</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.820717</td>\n",
              "      <td>2.079412</td>\n",
              "      <td>0.079412</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>763</th>\n",
              "      <td>569</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>G</td>\n",
              "      <td>José Sá</td>\n",
              "      <td>5.0</td>\n",
              "      <td>1.3</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>236</td>\n",
              "      <td>35.1</td>\n",
              "      <td>40</td>\n",
              "      <td>2.7</td>\n",
              "      <td>1282</td>\n",
              "      <td>0.820717</td>\n",
              "      <td>2.079412</td>\n",
              "      <td>0.079412</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>764</th>\n",
              "      <td>571</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>G</td>\n",
              "      <td>Šarkić</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.3</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.820717</td>\n",
              "      <td>2.079412</td>\n",
              "      <td>0.079412</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>765 rows × 16 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-0b70e444-c8ff-49ce-8e79-293f7f007fcb')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-0b70e444-c8ff-49ce-8e79-293f7f007fcb button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-0b70e444-c8ff-49ce-8e79-293f7f007fcb');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-f2021ef4-4be4-4f76-a8c0-f08a12371be9\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-f2021ef4-4be4-4f76-a8c0-f08a12371be9')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-f2021ef4-4be4-4f76-a8c0-f08a12371be9 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 25
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "rawmdallgw"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 424
        },
        "id": "ZtNrmQMhefCc",
        "outputId": "afab6d5b-c400-436e-f1fa-3d62593341e7"
      },
      "execution_count": 26,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "      id                     team pos             name  cost  \\\n",
              "2      3                  Arsenal   M         M.Elneny   4.4   \n",
              "3      4                  Arsenal   M     Fábio Vieira   5.4   \n",
              "5      6                  Arsenal   M          Havertz   7.1   \n",
              "7      9                  Arsenal   M         Jorginho   5.3   \n",
              "9     11                  Arsenal   M       Marquinhos   4.5   \n",
              "..   ...                      ...  ..              ...   ...   \n",
              "755  574  Wolverhampton Wanderers   M  Boubacar Traore   4.3   \n",
              "759  698  Wolverhampton Wanderers   M         González   5.0   \n",
              "761  715  Wolverhampton Wanderers   M       Bellegarde   4.9   \n",
              "762  749  Wolverhampton Wanderers   M      Whittingham   4.5   \n",
              "763  750  Wolverhampton Wanderers   M          Chirewa   4.5   \n",
              "\n",
              "     selected_by_percent  goals_scored  assists  bps  ict_index  points  \\\n",
              "2                    0.1             0        1   12        0.4       4   \n",
              "3                    0.1             1        3   62       21.9      21   \n",
              "5                    1.7             4        1  144       68.7      49   \n",
              "7                    0.2             0        0   66       12.4      15   \n",
              "9                    0.0             0        0    0        0.0       0   \n",
              "..                   ...           ...      ...  ...        ...     ...   \n",
              "755                  0.4             0        0   57       10.2      12   \n",
              "759                  0.0             0        0    0        0.0       0   \n",
              "761                  0.0             1        1   76       24.9      20   \n",
              "762                  0.0             0        0    0        0.0       0   \n",
              "763                  0.0             0        0    0        0.0       0   \n",
              "\n",
              "     points_per_game  minutes  home_adjustment   xPallgw  \n",
              "2                4.0        1         1.166179  2.000000  \n",
              "3                2.6      236         1.166179  2.414706  \n",
              "5                2.9     1002         1.166179  3.421176  \n",
              "7                1.4      383         1.166179  2.079412  \n",
              "9                0.0        0         1.166179  2.000000  \n",
              "..               ...      ...              ...       ...  \n",
              "755              1.1      376         0.820717  2.061176  \n",
              "759              0.0        0         0.820717  2.000000  \n",
              "761              2.2      460         0.820717  2.157647  \n",
              "762              0.0        0         0.820717  2.000000  \n",
              "763              0.0        0         0.820717  2.000000  \n",
              "\n",
              "[331 rows x 15 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-37f189b3-4e9b-42a7-a4b2-1b003e9fbedc\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>team</th>\n",
              "      <th>pos</th>\n",
              "      <th>name</th>\n",
              "      <th>cost</th>\n",
              "      <th>selected_by_percent</th>\n",
              "      <th>goals_scored</th>\n",
              "      <th>assists</th>\n",
              "      <th>bps</th>\n",
              "      <th>ict_index</th>\n",
              "      <th>points</th>\n",
              "      <th>points_per_game</th>\n",
              "      <th>minutes</th>\n",
              "      <th>home_adjustment</th>\n",
              "      <th>xPallgw</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>3</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>M</td>\n",
              "      <td>M.Elneny</td>\n",
              "      <td>4.4</td>\n",
              "      <td>0.1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>12</td>\n",
              "      <td>0.4</td>\n",
              "      <td>4</td>\n",
              "      <td>4.0</td>\n",
              "      <td>1</td>\n",
              "      <td>1.166179</td>\n",
              "      <td>2.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>4</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>M</td>\n",
              "      <td>Fábio Vieira</td>\n",
              "      <td>5.4</td>\n",
              "      <td>0.1</td>\n",
              "      <td>1</td>\n",
              "      <td>3</td>\n",
              "      <td>62</td>\n",
              "      <td>21.9</td>\n",
              "      <td>21</td>\n",
              "      <td>2.6</td>\n",
              "      <td>236</td>\n",
              "      <td>1.166179</td>\n",
              "      <td>2.414706</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>6</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>M</td>\n",
              "      <td>Havertz</td>\n",
              "      <td>7.1</td>\n",
              "      <td>1.7</td>\n",
              "      <td>4</td>\n",
              "      <td>1</td>\n",
              "      <td>144</td>\n",
              "      <td>68.7</td>\n",
              "      <td>49</td>\n",
              "      <td>2.9</td>\n",
              "      <td>1002</td>\n",
              "      <td>1.166179</td>\n",
              "      <td>3.421176</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>9</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>M</td>\n",
              "      <td>Jorginho</td>\n",
              "      <td>5.3</td>\n",
              "      <td>0.2</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>66</td>\n",
              "      <td>12.4</td>\n",
              "      <td>15</td>\n",
              "      <td>1.4</td>\n",
              "      <td>383</td>\n",
              "      <td>1.166179</td>\n",
              "      <td>2.079412</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>11</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>M</td>\n",
              "      <td>Marquinhos</td>\n",
              "      <td>4.5</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>1.166179</td>\n",
              "      <td>2.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>755</th>\n",
              "      <td>574</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>M</td>\n",
              "      <td>Boubacar Traore</td>\n",
              "      <td>4.3</td>\n",
              "      <td>0.4</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>57</td>\n",
              "      <td>10.2</td>\n",
              "      <td>12</td>\n",
              "      <td>1.1</td>\n",
              "      <td>376</td>\n",
              "      <td>0.820717</td>\n",
              "      <td>2.061176</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>759</th>\n",
              "      <td>698</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>M</td>\n",
              "      <td>González</td>\n",
              "      <td>5.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.820717</td>\n",
              "      <td>2.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>761</th>\n",
              "      <td>715</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>M</td>\n",
              "      <td>Bellegarde</td>\n",
              "      <td>4.9</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>76</td>\n",
              "      <td>24.9</td>\n",
              "      <td>20</td>\n",
              "      <td>2.2</td>\n",
              "      <td>460</td>\n",
              "      <td>0.820717</td>\n",
              "      <td>2.157647</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>762</th>\n",
              "      <td>749</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>M</td>\n",
              "      <td>Whittingham</td>\n",
              "      <td>4.5</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.820717</td>\n",
              "      <td>2.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>763</th>\n",
              "      <td>750</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>M</td>\n",
              "      <td>Chirewa</td>\n",
              "      <td>4.5</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.820717</td>\n",
              "      <td>2.000000</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>331 rows × 15 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-37f189b3-4e9b-42a7-a4b2-1b003e9fbedc')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-37f189b3-4e9b-42a7-a4b2-1b003e9fbedc button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-37f189b3-4e9b-42a7-a4b2-1b003e9fbedc');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-db365575-41f4-4063-b702-0600a6235299\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-db365575-41f4-4063-b702-0600a6235299')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-db365575-41f4-4063-b702-0600a6235299 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 26
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "gw2blanks = [['Burnley', 0], ['Luton Town', 0]]\n",
        "\n",
        "# Create the pandas DataFrame\n",
        "blanks2 = pd.DataFrame(gw2blanks, columns=['team', 'gw2adjustment'])\n",
        "blanks2"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 112
        },
        "id": "xkGffHD0iXWI",
        "outputId": "1acfaf2a-8afa-4766-a7df-6407e1d36d5d"
      },
      "execution_count": 27,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "         team  gw2adjustment\n",
              "0     Burnley              0\n",
              "1  Luton Town              0"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-d75954c0-fa0a-4d1c-a80f-277994aa8c4b\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>team</th>\n",
              "      <th>gw2adjustment</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>Burnley</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Luton Town</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-d75954c0-fa0a-4d1c-a80f-277994aa8c4b')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-d75954c0-fa0a-4d1c-a80f-277994aa8c4b button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-d75954c0-fa0a-4d1c-a80f-277994aa8c4b');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-96aa4aa8-5950-4abe-a0da-921b209e1fbf\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-96aa4aa8-5950-4abe-a0da-921b209e1fbf')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-96aa4aa8-5950-4abe-a0da-921b209e1fbf button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 27
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#gw2adjustments = pd.concat([gw2adjustments, blanks2])\n",
        "#gw2adjustments = gw2adjustments.reset_index(drop=True)\n",
        "#gw2adjustments"
      ],
      "metadata": {
        "id": "JNr3eV5Rir58"
      },
      "execution_count": 28,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "##gw3blanks = [['Newcastle United', 0], ['Manchester United', 0], ['Brentford', 0], ['Brighton', 0]]\n",
        "\n",
        "# Create the pandas DataFrame\n",
        "##blanks = pd.DataFrame(gw3blanks, columns=['team', 'gw3adjustment'])\n",
        "##blanks"
      ],
      "metadata": {
        "id": "iCizQgwMD84B"
      },
      "execution_count": 29,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "gw19 = homesawayspi.query('Event==\"19.0\"')\n",
        "pd.options.mode.chained_assignment = None  # default='warn'\n",
        "PLSPI = spi.query('league==\"Barclays Premier League\"')\n",
        "PLSPI['League Average']  = PLSPI[\"spi\"].mean()\n",
        "laverage = PLSPI[\"spi\"].mean()\n",
        "PLSPI['League Average'].astype(int)\n",
        "gw19['League_Average']  = laverage\n",
        "gw19.rename(columns = {'Home SPI':'HomeSPI', 'Away SPI':'AwaySPI'}, inplace = True)\n",
        "gw19['home_difference'] = gw19.HomeSPI - gw19.League_Average\n",
        "gw19['away_difference'] = gw19.AwaySPI - gw19.League_Average\n",
        "gw19['home_adjustment'] = (gw19.home_difference - gw19.away_difference + gw19.League_Average)/gw19.League_Average\n",
        "gw19['away_adjustment'] = (gw19.away_difference - gw19.home_difference+ gw19.League_Average)/gw19.League_Average\n",
        "gw19adjustments = gw19[['team_h', 'home_adjustment']].append(gw19[['team_a','away_adjustment']].set_axis(['team_h', 'home_adjustment'], axis=1)).reset_index(drop=True)\n",
        "gw19adjustments.rename(columns = {'team_h':'team'}, inplace = True)\n",
        "gw19adjustments.rename(columns = {'home_adjustment':'gw19adjustment'}, inplace = True)\n",
        "gw19adjustments"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 711
        },
        "id": "pzyah3Z-kgct",
        "outputId": "157d753f-9e23-4487-d33e-c252b010d592"
      },
      "execution_count": 30,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "<ipython-input-30-8b6609baa88b>:13: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  gw19adjustments = gw19[['team_h', 'home_adjustment']].append(gw19[['team_a','away_adjustment']].set_axis(['team_h', 'home_adjustment'], axis=1)).reset_index(drop=True)\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                       team  gw19adjustment\n",
              "0          Newcastle United        1.383122\n",
              "1               Bournemouth        0.879936\n",
              "2          Sheffield United        1.015147\n",
              "3                   Burnley        0.708316\n",
              "4         Manchester United        0.996943\n",
              "5                 Brentford        1.251245\n",
              "6                   Chelsea        1.032239\n",
              "7                   Everton        0.605761\n",
              "8                  Brighton        1.121454\n",
              "9                   Arsenal        1.177873\n",
              "10        Nottingham Forest        0.616878\n",
              "11                   Fulham        1.120064\n",
              "12               Luton Town        0.984853\n",
              "13                Liverpool        1.291684\n",
              "14              Aston Villa        1.003057\n",
              "15  Wolverhampton Wanderers        0.748755\n",
              "16           Crystal Palace        0.967761\n",
              "17          Manchester City        1.394239\n",
              "18                Tottenham        0.878546\n",
              "19                 West Ham        0.822127"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-bc2decd7-70d7-4d72-9dcf-fc6462cea175\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>team</th>\n",
              "      <th>gw19adjustment</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>Newcastle United</td>\n",
              "      <td>1.383122</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Bournemouth</td>\n",
              "      <td>0.879936</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>Sheffield United</td>\n",
              "      <td>1.015147</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>Burnley</td>\n",
              "      <td>0.708316</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>Manchester United</td>\n",
              "      <td>0.996943</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>Brentford</td>\n",
              "      <td>1.251245</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>Chelsea</td>\n",
              "      <td>1.032239</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>Everton</td>\n",
              "      <td>0.605761</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>Brighton</td>\n",
              "      <td>1.121454</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>Arsenal</td>\n",
              "      <td>1.177873</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10</th>\n",
              "      <td>Nottingham Forest</td>\n",
              "      <td>0.616878</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>11</th>\n",
              "      <td>Fulham</td>\n",
              "      <td>1.120064</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>12</th>\n",
              "      <td>Luton Town</td>\n",
              "      <td>0.984853</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>13</th>\n",
              "      <td>Liverpool</td>\n",
              "      <td>1.291684</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>14</th>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>1.003057</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>15</th>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>0.748755</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>16</th>\n",
              "      <td>Crystal Palace</td>\n",
              "      <td>0.967761</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>17</th>\n",
              "      <td>Manchester City</td>\n",
              "      <td>1.394239</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>18</th>\n",
              "      <td>Tottenham</td>\n",
              "      <td>0.878546</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>19</th>\n",
              "      <td>West Ham</td>\n",
              "      <td>0.822127</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-bc2decd7-70d7-4d72-9dcf-fc6462cea175')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-bc2decd7-70d7-4d72-9dcf-fc6462cea175 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-bc2decd7-70d7-4d72-9dcf-fc6462cea175');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-1dbb9f20-6d78-4bc3-8b3a-8cf02781d209\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-1dbb9f20-6d78-4bc3-8b3a-8cf02781d209')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-1dbb9f20-6d78-4bc3-8b3a-8cf02781d209 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 30
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "gw20 = homesawayspi.query('Event==\"20.0\"')\n",
        "pd.options.mode.chained_assignment = None  # default='warn'\n",
        "PLSPI = spi.query('league==\"Barclays Premier League\"')\n",
        "PLSPI['League Average']  = PLSPI[\"spi\"].mean()\n",
        "laverage = PLSPI[\"spi\"].mean()\n",
        "PLSPI['League Average'].astype(int)\n",
        "gw20['League_Average']  = laverage\n",
        "gw20.rename(columns = {'Home SPI':'HomeSPI', 'Away SPI':'AwaySPI'}, inplace = True)\n",
        "gw20['home_difference'] = gw20.HomeSPI - gw20.League_Average\n",
        "gw20['away_difference'] = gw20.AwaySPI - gw20.League_Average\n",
        "gw20['home_adjustment'] = (gw20.home_difference - gw20.away_difference + gw20.League_Average)/gw20.League_Average\n",
        "gw20['away_adjustment'] = (gw20.away_difference - gw20.home_difference+ gw20.League_Average)/gw20.League_Average\n",
        "gw20adjustments = gw20[['team_h', 'home_adjustment']].append(gw20[['team_a','away_adjustment']].set_axis(['team_h', 'home_adjustment'], axis=1)).reset_index(drop=True)\n",
        "gw20adjustments.rename(columns = {'team_h':'team'}, inplace = True)\n",
        "gw20adjustments.rename(columns = {'home_adjustment':'gw20adjustment'}, inplace = True)\n",
        "gw20adjustments"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 711
        },
        "id": "7uE1H7R4Gems",
        "outputId": "e1594cbb-22c7-4df6-a4ae-294a607ff3db"
      },
      "execution_count": 31,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "<ipython-input-31-e9b6b4f13a81>:13: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  gw20adjustments = gw20[['team_h', 'home_adjustment']].append(gw20[['team_a','away_adjustment']].set_axis(['team_h', 'home_adjustment'], axis=1)).reset_index(drop=True)\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                       team  gw20adjustment\n",
              "0                Luton Town        0.717905\n",
              "1               Aston Villa        1.227344\n",
              "2            Crystal Palace        0.948862\n",
              "3           Manchester City        1.492347\n",
              "4   Wolverhampton Wanderers        0.936494\n",
              "5         Nottingham Forest        0.681079\n",
              "6                    Fulham        0.781828\n",
              "7                 Tottenham        1.174538\n",
              "8                 Liverpool        1.003196\n",
              "9                  West Ham        0.864372\n",
              "10                  Chelsea        1.282095\n",
              "11                  Burnley        0.772656\n",
              "12                Brentford        1.051138\n",
              "13         Sheffield United        0.507653\n",
              "14                  Everton        1.063506\n",
              "15        Manchester United        1.318921\n",
              "16                  Arsenal        1.218172\n",
              "17              Bournemouth        0.825462\n",
              "18         Newcastle United        0.996804\n",
              "19                 Brighton        1.135628"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-aa7a67bb-2c09-49bc-8396-16f1761790e0\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>team</th>\n",
              "      <th>gw20adjustment</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>Luton Town</td>\n",
              "      <td>0.717905</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>1.227344</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>Crystal Palace</td>\n",
              "      <td>0.948862</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>Manchester City</td>\n",
              "      <td>1.492347</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>0.936494</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>Nottingham Forest</td>\n",
              "      <td>0.681079</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>Fulham</td>\n",
              "      <td>0.781828</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>Tottenham</td>\n",
              "      <td>1.174538</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>Liverpool</td>\n",
              "      <td>1.003196</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>West Ham</td>\n",
              "      <td>0.864372</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10</th>\n",
              "      <td>Chelsea</td>\n",
              "      <td>1.282095</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>11</th>\n",
              "      <td>Burnley</td>\n",
              "      <td>0.772656</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>12</th>\n",
              "      <td>Brentford</td>\n",
              "      <td>1.051138</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>13</th>\n",
              "      <td>Sheffield United</td>\n",
              "      <td>0.507653</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>14</th>\n",
              "      <td>Everton</td>\n",
              "      <td>1.063506</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>15</th>\n",
              "      <td>Manchester United</td>\n",
              "      <td>1.318921</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>16</th>\n",
              "      <td>Arsenal</td>\n",
              "      <td>1.218172</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>17</th>\n",
              "      <td>Bournemouth</td>\n",
              "      <td>0.825462</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>18</th>\n",
              "      <td>Newcastle United</td>\n",
              "      <td>0.996804</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>19</th>\n",
              "      <td>Brighton</td>\n",
              "      <td>1.135628</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-aa7a67bb-2c09-49bc-8396-16f1761790e0')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-aa7a67bb-2c09-49bc-8396-16f1761790e0 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-aa7a67bb-2c09-49bc-8396-16f1761790e0');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-49de5b69-2b5c-4c07-b880-c3fc096bd4b9\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-49de5b69-2b5c-4c07-b880-c3fc096bd4b9')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-49de5b69-2b5c-4c07-b880-c3fc096bd4b9 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 31
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#gw5blanks = [['Chelsea', 0], ['Manchester United', 0], ['Manchester City', 0], ['Brighton', 0]]\n",
        "\n",
        "# Create the pandas DataFrame\n",
        "#blanks32 = pd.DataFrame(gw5blanks, columns=['team', 'gw5adjustment'])\n",
        "#blanks32"
      ],
      "metadata": {
        "id": "p00QYlZ7UbAu"
      },
      "execution_count": 32,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "#gw5adjustments = pd.concat([gw5adjustments, blanks32])\n",
        "#gw5adjustments = gw5adjustments.reset_index(drop=True)\n",
        "#gw5adjustments"
      ],
      "metadata": {
        "id": "xh_AhxKJU0VW"
      },
      "execution_count": 33,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "gw21= homesawayspi.query('Event==\"21.0\"')\n",
        "pd.options.mode.chained_assignment = None  # default='warn'\n",
        "PLSPI = spi.query('league==\"Barclays Premier League\"')\n",
        "PLSPI['League Average']  = PLSPI[\"spi\"].mean()\n",
        "laverage = PLSPI[\"spi\"].mean()\n",
        "PLSPI['League Average'].astype(int)\n",
        "gw21['League_Average']  = laverage\n",
        "gw21.rename(columns = {'Home SPI':'HomeSPI', 'Away SPI':'AwaySPI'}, inplace = True)\n",
        "gw21['home_difference'] = gw21.HomeSPI - gw21.League_Average\n",
        "gw21['away_difference'] = gw21.AwaySPI - gw21.League_Average\n",
        "gw21['home_adjustment'] = (gw21.home_difference - gw21.away_difference + gw21.League_Average)/gw21.League_Average\n",
        "gw21['away_adjustment'] = (gw21.away_difference - gw21.home_difference+ gw21.League_Average)/gw21.League_Average\n",
        "gw21adjustments = gw21[['team_h', 'home_adjustment']].append(gw21[['team_a','away_adjustment']].set_axis(['team_h', 'home_adjustment'], axis=1)).reset_index(drop=True)\n",
        "gw21adjustments.rename(columns = {'team_h':'team'}, inplace = True)\n",
        "gw21adjustments.rename(columns = {'home_adjustment':'gw21adjustment'}, inplace = True)\n",
        "gw21adjustments"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 711
        },
        "id": "OPB6Pz8sGZNe",
        "outputId": "5743ede1-92f0-4b71-ea19-79dbe855d526"
      },
      "execution_count": 34,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "<ipython-input-34-2ad4e0fa35aa>:13: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  gw21adjustments = gw21[['team_h', 'home_adjustment']].append(gw21[['team_a','away_adjustment']].set_axis(['team_h', 'home_adjustment'], axis=1)).reset_index(drop=True)\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                       team  gw21adjustment\n",
              "0                   Chelsea        1.105056\n",
              "1          Newcastle United        0.884661\n",
              "2                   Everton        0.782245\n",
              "3         Manchester United        1.096440\n",
              "4                   Burnley        1.103667\n",
              "5                   Arsenal        1.145356\n",
              "6                 Brentford        1.291962\n",
              "7          Sheffield United        0.797809\n",
              "8               Bournemouth        0.661625\n",
              "9                  Brighton        1.303218\n",
              "10                   Fulham        0.894944\n",
              "11          Manchester City        1.115339\n",
              "12              Aston Villa        1.217755\n",
              "13                Tottenham        0.903560\n",
              "14               Luton Town        0.896333\n",
              "15           Crystal Palace        0.854644\n",
              "16        Nottingham Forest        0.708038\n",
              "17                 West Ham        1.202191\n",
              "18                Liverpool        1.338375\n",
              "19  Wolverhampton Wanderers        0.696782"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-a92252dd-0ab2-4596-8caa-445f6af8e658\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>team</th>\n",
              "      <th>gw21adjustment</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>Chelsea</td>\n",
              "      <td>1.105056</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Newcastle United</td>\n",
              "      <td>0.884661</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>Everton</td>\n",
              "      <td>0.782245</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>Manchester United</td>\n",
              "      <td>1.096440</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>Burnley</td>\n",
              "      <td>1.103667</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>Arsenal</td>\n",
              "      <td>1.145356</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>Brentford</td>\n",
              "      <td>1.291962</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>Sheffield United</td>\n",
              "      <td>0.797809</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>Bournemouth</td>\n",
              "      <td>0.661625</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>Brighton</td>\n",
              "      <td>1.303218</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10</th>\n",
              "      <td>Fulham</td>\n",
              "      <td>0.894944</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>11</th>\n",
              "      <td>Manchester City</td>\n",
              "      <td>1.115339</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>12</th>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>1.217755</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>13</th>\n",
              "      <td>Tottenham</td>\n",
              "      <td>0.903560</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>14</th>\n",
              "      <td>Luton Town</td>\n",
              "      <td>0.896333</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>15</th>\n",
              "      <td>Crystal Palace</td>\n",
              "      <td>0.854644</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>16</th>\n",
              "      <td>Nottingham Forest</td>\n",
              "      <td>0.708038</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>17</th>\n",
              "      <td>West Ham</td>\n",
              "      <td>1.202191</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>18</th>\n",
              "      <td>Liverpool</td>\n",
              "      <td>1.338375</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>19</th>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>0.696782</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-a92252dd-0ab2-4596-8caa-445f6af8e658')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-a92252dd-0ab2-4596-8caa-445f6af8e658 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-a92252dd-0ab2-4596-8caa-445f6af8e658');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-585de928-af98-4466-af98-af6f0e6ac4ea\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-585de928-af98-4466-af98-af6f0e6ac4ea')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-585de928-af98-4466-af98-af6f0e6ac4ea button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 34
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "gw22= homesawayspi.query('Event==\"22.0\"')\n",
        "pd.options.mode.chained_assignment = None  # default='warn'\n",
        "PLSPI = spi.query('league==\"Barclays Premier League\"')\n",
        "PLSPI['League Average']  = PLSPI[\"spi\"].mean()\n",
        "laverage = PLSPI[\"spi\"].mean()\n",
        "PLSPI['League Average'].astype(int)\n",
        "gw22['League_Average']  = laverage\n",
        "gw22.rename(columns = {'Home SPI':'HomeSPI', 'Away SPI':'AwaySPI'}, inplace = True)\n",
        "gw22['home_difference'] = gw22.HomeSPI - gw22.League_Average\n",
        "gw22['away_difference'] = gw22.AwaySPI - gw22.League_Average\n",
        "gw22['home_adjustment'] = (gw22.home_difference - gw22.away_difference + gw22.League_Average)/gw22.League_Average\n",
        "gw22['away_adjustment'] = (gw22.away_difference - gw22.home_difference+ gw22.League_Average)/gw22.League_Average\n",
        "gw22adjustments = gw22[['team_h', 'home_adjustment']].append(gw22[['team_a','away_adjustment']].set_axis(['team_h', 'home_adjustment'], axis=1)).reset_index(drop=True)\n",
        "gw22adjustments.rename(columns = {'team_h':'team'}, inplace = True)\n",
        "gw22adjustments.rename(columns = {'home_adjustment':'gw22adjustment'}, inplace = True)\n",
        "gw22adjustments = gw22adjustments.groupby('team', as_index=False)['gw22adjustment'].aggregate('sum')\n",
        "gw22adjustments"
      ],
      "metadata": {
        "id": "Ns7V93Gobs3z",
        "outputId": "5399a3c6-6bc9-4f9d-ebe4-128ce8493f99",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 711
        }
      },
      "execution_count": 35,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "<ipython-input-35-82067015817a>:13: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  gw22adjustments = gw22[['team_h', 'home_adjustment']].append(gw22[['team_a','away_adjustment']].set_axis(['team_h', 'home_adjustment'], axis=1)).reset_index(drop=True)\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                       team  gw22adjustment\n",
              "0                   Arsenal        1.386179\n",
              "1               Aston Villa        0.938856\n",
              "2               Bournemouth        0.839636\n",
              "3                 Brentford        1.069482\n",
              "4                  Brighton        1.352967\n",
              "5                   Burnley        0.596173\n",
              "6                   Chelsea        0.886745\n",
              "7            Crystal Palace        1.234709\n",
              "8                   Everton        0.936216\n",
              "9                    Fulham        1.063784\n",
              "10                Liverpool        1.113255\n",
              "11               Luton Town        0.647033\n",
              "12          Manchester City        1.403827\n",
              "13        Manchester United        1.278204\n",
              "14         Newcastle United        1.061144\n",
              "15        Nottingham Forest        0.613821\n",
              "16         Sheffield United        0.765291\n",
              "17                Tottenham        0.930518\n",
              "18                 West Ham        1.160364\n",
              "19  Wolverhampton Wanderers        0.721796"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-697ecca1-55ac-4b5f-85af-63ef78d1563e\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>team</th>\n",
              "      <th>gw22adjustment</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>Arsenal</td>\n",
              "      <td>1.386179</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>0.938856</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>Bournemouth</td>\n",
              "      <td>0.839636</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>Brentford</td>\n",
              "      <td>1.069482</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>Brighton</td>\n",
              "      <td>1.352967</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>Burnley</td>\n",
              "      <td>0.596173</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>Chelsea</td>\n",
              "      <td>0.886745</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>Crystal Palace</td>\n",
              "      <td>1.234709</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>Everton</td>\n",
              "      <td>0.936216</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>Fulham</td>\n",
              "      <td>1.063784</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10</th>\n",
              "      <td>Liverpool</td>\n",
              "      <td>1.113255</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>11</th>\n",
              "      <td>Luton Town</td>\n",
              "      <td>0.647033</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>12</th>\n",
              "      <td>Manchester City</td>\n",
              "      <td>1.403827</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>13</th>\n",
              "      <td>Manchester United</td>\n",
              "      <td>1.278204</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>14</th>\n",
              "      <td>Newcastle United</td>\n",
              "      <td>1.061144</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>15</th>\n",
              "      <td>Nottingham Forest</td>\n",
              "      <td>0.613821</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>16</th>\n",
              "      <td>Sheffield United</td>\n",
              "      <td>0.765291</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>17</th>\n",
              "      <td>Tottenham</td>\n",
              "      <td>0.930518</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>18</th>\n",
              "      <td>West Ham</td>\n",
              "      <td>1.160364</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>19</th>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>0.721796</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-697ecca1-55ac-4b5f-85af-63ef78d1563e')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-697ecca1-55ac-4b5f-85af-63ef78d1563e button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-697ecca1-55ac-4b5f-85af-63ef78d1563e');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-e274bc02-5dbc-4320-b288-3eb557906bf7\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-e274bc02-5dbc-4320-b288-3eb557906bf7')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-e274bc02-5dbc-4320-b288-3eb557906bf7 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 35
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "gw18= homesawayspi.query('Event==\"18.0\"')\n",
        "pd.options.mode.chained_assignment = None  # default='warn'\n",
        "PLSPI = spi.query('league==\"Barclays Premier League\"')\n",
        "PLSPI['League Average']  = PLSPI[\"spi\"].mean()\n",
        "laverage = PLSPI[\"spi\"].mean()\n",
        "PLSPI['League Average'].astype(int)\n",
        "gw18['League_Average']  = laverage\n",
        "gw18.rename(columns = {'Home SPI':'HomeSPI', 'Away SPI':'AwaySPI'}, inplace = True)\n",
        "gw18['home_difference'] = gw18.HomeSPI - gw18.League_Average\n",
        "gw18['away_difference'] = gw18.AwaySPI - gw18.League_Average\n",
        "gw18['home_adjustment'] = (gw18.home_difference - gw18.away_difference + gw18.League_Average)/gw18.League_Average\n",
        "gw18['away_adjustment'] = (gw18.away_difference - gw18.home_difference+ gw18.League_Average)/gw18.League_Average\n",
        "gw18adjustments = gw18[['team_h', 'home_adjustment']].append(gw18[['team_a','away_adjustment']].set_axis(['team_h', 'home_adjustment'], axis=1)).reset_index(drop=True)\n",
        "gw18adjustments.rename(columns = {'team_h':'team'}, inplace = True)\n",
        "gw18adjustments.rename(columns = {'home_adjustment':'gw18adjustment'}, inplace = True)\n",
        "gw18adjustments"
      ],
      "metadata": {
        "id": "wlvV4OeQb34Z",
        "outputId": "fba0a469-bc3c-41cc-d1e7-9b8b58110b04",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 649
        }
      },
      "execution_count": 36,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "<ipython-input-36-d2e28518c3dd>:13: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  gw18adjustments = gw18[['team_h', 'home_adjustment']].append(gw18[['team_a','away_adjustment']].set_axis(['team_h', 'home_adjustment'], axis=1)).reset_index(drop=True)\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                       team  gw18adjustment\n",
              "0            Crystal Palace        0.896889\n",
              "1               Aston Villa        1.315863\n",
              "2                  West Ham        0.889385\n",
              "3                    Fulham        1.073373\n",
              "4                Luton Town        0.607846\n",
              "5         Nottingham Forest        0.952058\n",
              "6                 Tottenham        1.118258\n",
              "7                 Liverpool        1.000139\n",
              "8   Wolverhampton Wanderers        0.767654\n",
              "9                  Brighton        1.103111\n",
              "10         Sheffield United        0.684137\n",
              "11        Manchester United        1.110615\n",
              "12                  Burnley        0.926627\n",
              "13         Newcastle United        1.392154\n",
              "14              Bournemouth        1.047942\n",
              "15                  Everton        0.881742\n",
              "16                  Arsenal        0.999861\n",
              "17                  Chelsea        1.232346"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-e17486a0-0aa6-41e2-aef9-9667b416ce5a\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>team</th>\n",
              "      <th>gw18adjustment</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>Crystal Palace</td>\n",
              "      <td>0.896889</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>1.315863</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>West Ham</td>\n",
              "      <td>0.889385</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>Fulham</td>\n",
              "      <td>1.073373</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>Luton Town</td>\n",
              "      <td>0.607846</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>Nottingham Forest</td>\n",
              "      <td>0.952058</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>Tottenham</td>\n",
              "      <td>1.118258</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>Liverpool</td>\n",
              "      <td>1.000139</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>0.767654</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>Brighton</td>\n",
              "      <td>1.103111</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10</th>\n",
              "      <td>Sheffield United</td>\n",
              "      <td>0.684137</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>11</th>\n",
              "      <td>Manchester United</td>\n",
              "      <td>1.110615</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>12</th>\n",
              "      <td>Burnley</td>\n",
              "      <td>0.926627</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>13</th>\n",
              "      <td>Newcastle United</td>\n",
              "      <td>1.392154</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>14</th>\n",
              "      <td>Bournemouth</td>\n",
              "      <td>1.047942</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>15</th>\n",
              "      <td>Everton</td>\n",
              "      <td>0.881742</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>16</th>\n",
              "      <td>Arsenal</td>\n",
              "      <td>0.999861</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>17</th>\n",
              "      <td>Chelsea</td>\n",
              "      <td>1.232346</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-e17486a0-0aa6-41e2-aef9-9667b416ce5a')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-e17486a0-0aa6-41e2-aef9-9667b416ce5a button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-e17486a0-0aa6-41e2-aef9-9667b416ce5a');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-71f6358a-7508-4a17-a155-96b906c79b80\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-71f6358a-7508-4a17-a155-96b906c79b80')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-71f6358a-7508-4a17-a155-96b906c79b80 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 36
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "gw18blanks = [['Brentford', 0], ['Manchester City', 0]]\n",
        "\n",
        "# Create the pandas DataFrame\n",
        "blanks18 = pd.DataFrame(gw18blanks, columns=['team', 'gw18adjustment'])\n",
        "blanks18"
      ],
      "metadata": {
        "id": "1jYqDQfTYSo9",
        "outputId": "eeb9119a-c8ac-40ba-82c4-552b775c131e",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 112
        }
      },
      "execution_count": 37,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "              team  gw18adjustment\n",
              "0        Brentford               0\n",
              "1  Manchester City               0"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-13ba9d69-c07b-4227-b713-4a3de4827e5b\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>team</th>\n",
              "      <th>gw18adjustment</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>Brentford</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Manchester City</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-13ba9d69-c07b-4227-b713-4a3de4827e5b')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-13ba9d69-c07b-4227-b713-4a3de4827e5b button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-13ba9d69-c07b-4227-b713-4a3de4827e5b');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-34e0b4b3-0ffc-45ee-a6a8-9e71af33fbf7\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-34e0b4b3-0ffc-45ee-a6a8-9e71af33fbf7')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-34e0b4b3-0ffc-45ee-a6a8-9e71af33fbf7 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 37
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "gw18adjustments = pd.concat([gw18adjustments, blanks18])\n",
        "gw18adjustments = gw18adjustments.reset_index(drop=True)\n",
        "gw18adjustments"
      ],
      "metadata": {
        "id": "6Bcop9gVZCW7",
        "outputId": "d115cb30-78e2-4f14-a9f4-76585bdef2e2",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 677
        }
      },
      "execution_count": 38,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                       team  gw18adjustment\n",
              "0            Crystal Palace        0.896889\n",
              "1               Aston Villa        1.315863\n",
              "2                  West Ham        0.889385\n",
              "3                    Fulham        1.073373\n",
              "4                Luton Town        0.607846\n",
              "5         Nottingham Forest        0.952058\n",
              "6                 Tottenham        1.118258\n",
              "7                 Liverpool        1.000139\n",
              "8   Wolverhampton Wanderers        0.767654\n",
              "9                  Brighton        1.103111\n",
              "10         Sheffield United        0.684137\n",
              "11        Manchester United        1.110615\n",
              "12                  Burnley        0.926627\n",
              "13         Newcastle United        1.392154\n",
              "14              Bournemouth        1.047942\n",
              "15                  Everton        0.881742\n",
              "16                  Arsenal        0.999861\n",
              "17                  Chelsea        1.232346\n",
              "18                Brentford        0.000000\n",
              "19          Manchester City        0.000000"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-72d04a87-1768-4784-b676-b85d2036a2f8\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>team</th>\n",
              "      <th>gw18adjustment</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>Crystal Palace</td>\n",
              "      <td>0.896889</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>1.315863</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>West Ham</td>\n",
              "      <td>0.889385</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>Fulham</td>\n",
              "      <td>1.073373</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>Luton Town</td>\n",
              "      <td>0.607846</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>Nottingham Forest</td>\n",
              "      <td>0.952058</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>Tottenham</td>\n",
              "      <td>1.118258</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>Liverpool</td>\n",
              "      <td>1.000139</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>0.767654</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>Brighton</td>\n",
              "      <td>1.103111</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10</th>\n",
              "      <td>Sheffield United</td>\n",
              "      <td>0.684137</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>11</th>\n",
              "      <td>Manchester United</td>\n",
              "      <td>1.110615</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>12</th>\n",
              "      <td>Burnley</td>\n",
              "      <td>0.926627</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>13</th>\n",
              "      <td>Newcastle United</td>\n",
              "      <td>1.392154</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>14</th>\n",
              "      <td>Bournemouth</td>\n",
              "      <td>1.047942</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>15</th>\n",
              "      <td>Everton</td>\n",
              "      <td>0.881742</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>16</th>\n",
              "      <td>Arsenal</td>\n",
              "      <td>0.999861</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>17</th>\n",
              "      <td>Chelsea</td>\n",
              "      <td>1.232346</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>18</th>\n",
              "      <td>Brentford</td>\n",
              "      <td>0.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>19</th>\n",
              "      <td>Manchester City</td>\n",
              "      <td>0.000000</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-72d04a87-1768-4784-b676-b85d2036a2f8')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-72d04a87-1768-4784-b676-b85d2036a2f8 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-72d04a87-1768-4784-b676-b85d2036a2f8');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-c02d3737-7499-4f4e-85ef-6df03ff77b3a\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-c02d3737-7499-4f4e-85ef-6df03ff77b3a')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-c02d3737-7499-4f4e-85ef-6df03ff77b3a button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 38
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "gwadjustments1822 = pd.merge(gw18adjustments,gw19adjustments, on ='team')\n",
        "gwadjustments1822 = pd.merge(gwadjustments1822,gw20adjustments, on ='team')\n",
        "gwadjustments1822 = pd.merge(gwadjustments1822,gw21adjustments, on ='team')\n",
        "gwadjustments1822 = pd.merge(gwadjustments1822,gw22adjustments, on ='team')\n",
        "gwadjustments1822"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 677
        },
        "id": "P6_WVsnNkztJ",
        "outputId": "e0115d06-a248-412c-db32-fa11d5a86810"
      },
      "execution_count": 39,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                       team  gw18adjustment  gw19adjustment  gw20adjustment  \\\n",
              "0            Crystal Palace        0.896889        0.967761        0.948862   \n",
              "1               Aston Villa        1.315863        1.003057        1.227344   \n",
              "2                  West Ham        0.889385        0.822127        0.864372   \n",
              "3                    Fulham        1.073373        1.120064        0.781828   \n",
              "4                Luton Town        0.607846        0.984853        0.717905   \n",
              "5         Nottingham Forest        0.952058        0.616878        0.681079   \n",
              "6                 Tottenham        1.118258        0.878546        1.174538   \n",
              "7                 Liverpool        1.000139        1.291684        1.003196   \n",
              "8   Wolverhampton Wanderers        0.767654        0.748755        0.936494   \n",
              "9                  Brighton        1.103111        1.121454        1.135628   \n",
              "10         Sheffield United        0.684137        1.015147        0.507653   \n",
              "11        Manchester United        1.110615        0.996943        1.318921   \n",
              "12                  Burnley        0.926627        0.708316        0.772656   \n",
              "13         Newcastle United        1.392154        1.383122        0.996804   \n",
              "14              Bournemouth        1.047942        0.879936        0.825462   \n",
              "15                  Everton        0.881742        0.605761        1.063506   \n",
              "16                  Arsenal        0.999861        1.177873        1.218172   \n",
              "17                  Chelsea        1.232346        1.032239        1.282095   \n",
              "18                Brentford        0.000000        1.251245        1.051138   \n",
              "19          Manchester City        0.000000        1.394239        1.492347   \n",
              "\n",
              "    gw21adjustment  gw22adjustment  \n",
              "0         0.854644        1.234709  \n",
              "1         1.217755        0.938856  \n",
              "2         1.202191        1.160364  \n",
              "3         0.894944        1.063784  \n",
              "4         0.896333        0.647033  \n",
              "5         0.708038        0.613821  \n",
              "6         0.903560        0.930518  \n",
              "7         1.338375        1.113255  \n",
              "8         0.696782        0.721796  \n",
              "9         1.303218        1.352967  \n",
              "10        0.797809        0.765291  \n",
              "11        1.096440        1.278204  \n",
              "12        1.103667        0.596173  \n",
              "13        0.884661        1.061144  \n",
              "14        0.661625        0.839636  \n",
              "15        0.782245        0.936216  \n",
              "16        1.145356        1.386179  \n",
              "17        1.105056        0.886745  \n",
              "18        1.291962        1.069482  \n",
              "19        1.115339        1.403827  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-1b0037fc-6db1-410d-b328-a8aeb601d289\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>team</th>\n",
              "      <th>gw18adjustment</th>\n",
              "      <th>gw19adjustment</th>\n",
              "      <th>gw20adjustment</th>\n",
              "      <th>gw21adjustment</th>\n",
              "      <th>gw22adjustment</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>Crystal Palace</td>\n",
              "      <td>0.896889</td>\n",
              "      <td>0.967761</td>\n",
              "      <td>0.948862</td>\n",
              "      <td>0.854644</td>\n",
              "      <td>1.234709</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>1.315863</td>\n",
              "      <td>1.003057</td>\n",
              "      <td>1.227344</td>\n",
              "      <td>1.217755</td>\n",
              "      <td>0.938856</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>West Ham</td>\n",
              "      <td>0.889385</td>\n",
              "      <td>0.822127</td>\n",
              "      <td>0.864372</td>\n",
              "      <td>1.202191</td>\n",
              "      <td>1.160364</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>Fulham</td>\n",
              "      <td>1.073373</td>\n",
              "      <td>1.120064</td>\n",
              "      <td>0.781828</td>\n",
              "      <td>0.894944</td>\n",
              "      <td>1.063784</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>Luton Town</td>\n",
              "      <td>0.607846</td>\n",
              "      <td>0.984853</td>\n",
              "      <td>0.717905</td>\n",
              "      <td>0.896333</td>\n",
              "      <td>0.647033</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>Nottingham Forest</td>\n",
              "      <td>0.952058</td>\n",
              "      <td>0.616878</td>\n",
              "      <td>0.681079</td>\n",
              "      <td>0.708038</td>\n",
              "      <td>0.613821</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>Tottenham</td>\n",
              "      <td>1.118258</td>\n",
              "      <td>0.878546</td>\n",
              "      <td>1.174538</td>\n",
              "      <td>0.903560</td>\n",
              "      <td>0.930518</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>Liverpool</td>\n",
              "      <td>1.000139</td>\n",
              "      <td>1.291684</td>\n",
              "      <td>1.003196</td>\n",
              "      <td>1.338375</td>\n",
              "      <td>1.113255</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>0.767654</td>\n",
              "      <td>0.748755</td>\n",
              "      <td>0.936494</td>\n",
              "      <td>0.696782</td>\n",
              "      <td>0.721796</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>Brighton</td>\n",
              "      <td>1.103111</td>\n",
              "      <td>1.121454</td>\n",
              "      <td>1.135628</td>\n",
              "      <td>1.303218</td>\n",
              "      <td>1.352967</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10</th>\n",
              "      <td>Sheffield United</td>\n",
              "      <td>0.684137</td>\n",
              "      <td>1.015147</td>\n",
              "      <td>0.507653</td>\n",
              "      <td>0.797809</td>\n",
              "      <td>0.765291</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>11</th>\n",
              "      <td>Manchester United</td>\n",
              "      <td>1.110615</td>\n",
              "      <td>0.996943</td>\n",
              "      <td>1.318921</td>\n",
              "      <td>1.096440</td>\n",
              "      <td>1.278204</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>12</th>\n",
              "      <td>Burnley</td>\n",
              "      <td>0.926627</td>\n",
              "      <td>0.708316</td>\n",
              "      <td>0.772656</td>\n",
              "      <td>1.103667</td>\n",
              "      <td>0.596173</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>13</th>\n",
              "      <td>Newcastle United</td>\n",
              "      <td>1.392154</td>\n",
              "      <td>1.383122</td>\n",
              "      <td>0.996804</td>\n",
              "      <td>0.884661</td>\n",
              "      <td>1.061144</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>14</th>\n",
              "      <td>Bournemouth</td>\n",
              "      <td>1.047942</td>\n",
              "      <td>0.879936</td>\n",
              "      <td>0.825462</td>\n",
              "      <td>0.661625</td>\n",
              "      <td>0.839636</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>15</th>\n",
              "      <td>Everton</td>\n",
              "      <td>0.881742</td>\n",
              "      <td>0.605761</td>\n",
              "      <td>1.063506</td>\n",
              "      <td>0.782245</td>\n",
              "      <td>0.936216</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>16</th>\n",
              "      <td>Arsenal</td>\n",
              "      <td>0.999861</td>\n",
              "      <td>1.177873</td>\n",
              "      <td>1.218172</td>\n",
              "      <td>1.145356</td>\n",
              "      <td>1.386179</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>17</th>\n",
              "      <td>Chelsea</td>\n",
              "      <td>1.232346</td>\n",
              "      <td>1.032239</td>\n",
              "      <td>1.282095</td>\n",
              "      <td>1.105056</td>\n",
              "      <td>0.886745</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>18</th>\n",
              "      <td>Brentford</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>1.251245</td>\n",
              "      <td>1.051138</td>\n",
              "      <td>1.291962</td>\n",
              "      <td>1.069482</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>19</th>\n",
              "      <td>Manchester City</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>1.394239</td>\n",
              "      <td>1.492347</td>\n",
              "      <td>1.115339</td>\n",
              "      <td>1.403827</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-1b0037fc-6db1-410d-b328-a8aeb601d289')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-1b0037fc-6db1-410d-b328-a8aeb601d289 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-1b0037fc-6db1-410d-b328-a8aeb601d289');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-3e9aecd3-5dad-478c-b8a3-a39ace99fc75\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-3e9aecd3-5dad-478c-b8a3-a39ace99fc75')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-3e9aecd3-5dad-478c-b8a3-a39ace99fc75 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 39
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "rawdfgw228x = pd.merge(rawallplayersallgw,\n",
        "                     gwadjustments1822,\n",
        "                     on ='team',\n",
        "                     how ='left')\n",
        "rawdfgw228x.rename(columns = {'gw14adjustment_y':'gw14adjustment'}, inplace = True)\n",
        "rawdfgw228x = rawdfgw228x.round(1)\n",
        "rawdfgw228x"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 513
        },
        "id": "-b-0jux2PKIX",
        "outputId": "dd927782-7e40-4a68-9795-0b717a06795b"
      },
      "execution_count": 40,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "      id                     team pos     name  cost  selected_by_percent  \\\n",
              "0      1                  Arsenal   F  Balogun   4.4                  0.2   \n",
              "1      8                  Arsenal   F  G.Jesus   8.0                  4.9   \n",
              "2     13                  Arsenal   F  Nketiah   5.4                  5.5   \n",
              "3     39              Aston Villa   F    Davis   4.9                  0.1   \n",
              "4     44              Aston Villa   F    Duran   5.0                  0.2   \n",
              "..   ...                      ...  ..      ...   ...                  ...   \n",
              "760  647                 West Ham   G    Anang   4.0                  0.1   \n",
              "761  546  Wolverhampton Wanderers   G  Bentley   3.9                  1.3   \n",
              "762  564  Wolverhampton Wanderers   G     King   3.9                  0.7   \n",
              "763  569  Wolverhampton Wanderers   G  José Sá   5.0                  1.3   \n",
              "764  571  Wolverhampton Wanderers   G   Šarkić   4.0                  0.3   \n",
              "\n",
              "     goals_scored  assists  bps  ict_index  ...  points_per_game  minutes  \\\n",
              "0               0        0    0        0.0  ...              0.0        0   \n",
              "1               3        2  143       77.5  ...              3.7      744   \n",
              "2               5        3  177       59.1  ...              3.6      830   \n",
              "3               0        0    0        0.0  ...              0.0        0   \n",
              "4               2        0   61       15.3  ...              1.7      120   \n",
              "..            ...      ...  ...        ...  ...              ...      ...   \n",
              "760             0        0    0        0.0  ...              0.0        0   \n",
              "761             0        0   60        5.7  ...              5.3      247   \n",
              "762             0        0    0        0.0  ...              0.0        0   \n",
              "763             0        0  236       35.1  ...              2.7     1282   \n",
              "764             0        0    0        0.0  ...              0.0        0   \n",
              "\n",
              "     home_adjustment  xPallgw  xCSP  gw18adjustment  gw19adjustment  \\\n",
              "0                1.2      2.0   NaN             1.0             1.2   \n",
              "1                1.2      3.1   NaN             1.0             1.2   \n",
              "2                1.2      2.9   NaN             1.0             1.2   \n",
              "3                1.1      2.0   NaN             1.3             1.0   \n",
              "4                1.1      2.2   NaN             1.3             1.0   \n",
              "..               ...      ...   ...             ...             ...   \n",
              "760              1.0      2.0   0.0             0.9             0.8   \n",
              "761              0.8      2.1   0.1             0.8             0.7   \n",
              "762              0.8      2.1   0.1             0.8             0.7   \n",
              "763              0.8      2.1   0.1             0.8             0.7   \n",
              "764              0.8      2.1   0.1             0.8             0.7   \n",
              "\n",
              "     gw20adjustment  gw21adjustment  gw22adjustment  \n",
              "0               1.2             1.1             1.4  \n",
              "1               1.2             1.1             1.4  \n",
              "2               1.2             1.1             1.4  \n",
              "3               1.2             1.2             0.9  \n",
              "4               1.2             1.2             0.9  \n",
              "..              ...             ...             ...  \n",
              "760             0.9             1.2             1.2  \n",
              "761             0.9             0.7             0.7  \n",
              "762             0.9             0.7             0.7  \n",
              "763             0.9             0.7             0.7  \n",
              "764             0.9             0.7             0.7  \n",
              "\n",
              "[765 rows x 21 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-2b945619-e73f-4db5-911f-05a125b11f2c\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>team</th>\n",
              "      <th>pos</th>\n",
              "      <th>name</th>\n",
              "      <th>cost</th>\n",
              "      <th>selected_by_percent</th>\n",
              "      <th>goals_scored</th>\n",
              "      <th>assists</th>\n",
              "      <th>bps</th>\n",
              "      <th>ict_index</th>\n",
              "      <th>...</th>\n",
              "      <th>points_per_game</th>\n",
              "      <th>minutes</th>\n",
              "      <th>home_adjustment</th>\n",
              "      <th>xPallgw</th>\n",
              "      <th>xCSP</th>\n",
              "      <th>gw18adjustment</th>\n",
              "      <th>gw19adjustment</th>\n",
              "      <th>gw20adjustment</th>\n",
              "      <th>gw21adjustment</th>\n",
              "      <th>gw22adjustment</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>1</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>F</td>\n",
              "      <td>Balogun</td>\n",
              "      <td>4.4</td>\n",
              "      <td>0.2</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>1.2</td>\n",
              "      <td>2.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1.0</td>\n",
              "      <td>1.2</td>\n",
              "      <td>1.2</td>\n",
              "      <td>1.1</td>\n",
              "      <td>1.4</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>8</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>F</td>\n",
              "      <td>G.Jesus</td>\n",
              "      <td>8.0</td>\n",
              "      <td>4.9</td>\n",
              "      <td>3</td>\n",
              "      <td>2</td>\n",
              "      <td>143</td>\n",
              "      <td>77.5</td>\n",
              "      <td>...</td>\n",
              "      <td>3.7</td>\n",
              "      <td>744</td>\n",
              "      <td>1.2</td>\n",
              "      <td>3.1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1.0</td>\n",
              "      <td>1.2</td>\n",
              "      <td>1.2</td>\n",
              "      <td>1.1</td>\n",
              "      <td>1.4</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>13</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>F</td>\n",
              "      <td>Nketiah</td>\n",
              "      <td>5.4</td>\n",
              "      <td>5.5</td>\n",
              "      <td>5</td>\n",
              "      <td>3</td>\n",
              "      <td>177</td>\n",
              "      <td>59.1</td>\n",
              "      <td>...</td>\n",
              "      <td>3.6</td>\n",
              "      <td>830</td>\n",
              "      <td>1.2</td>\n",
              "      <td>2.9</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1.0</td>\n",
              "      <td>1.2</td>\n",
              "      <td>1.2</td>\n",
              "      <td>1.1</td>\n",
              "      <td>1.4</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>39</td>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>F</td>\n",
              "      <td>Davis</td>\n",
              "      <td>4.9</td>\n",
              "      <td>0.1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>1.1</td>\n",
              "      <td>2.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1.3</td>\n",
              "      <td>1.0</td>\n",
              "      <td>1.2</td>\n",
              "      <td>1.2</td>\n",
              "      <td>0.9</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>44</td>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>F</td>\n",
              "      <td>Duran</td>\n",
              "      <td>5.0</td>\n",
              "      <td>0.2</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>61</td>\n",
              "      <td>15.3</td>\n",
              "      <td>...</td>\n",
              "      <td>1.7</td>\n",
              "      <td>120</td>\n",
              "      <td>1.1</td>\n",
              "      <td>2.2</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1.3</td>\n",
              "      <td>1.0</td>\n",
              "      <td>1.2</td>\n",
              "      <td>1.2</td>\n",
              "      <td>0.9</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>760</th>\n",
              "      <td>647</td>\n",
              "      <td>West Ham</td>\n",
              "      <td>G</td>\n",
              "      <td>Anang</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>2.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.9</td>\n",
              "      <td>0.8</td>\n",
              "      <td>0.9</td>\n",
              "      <td>1.2</td>\n",
              "      <td>1.2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>761</th>\n",
              "      <td>546</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>G</td>\n",
              "      <td>Bentley</td>\n",
              "      <td>3.9</td>\n",
              "      <td>1.3</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>60</td>\n",
              "      <td>5.7</td>\n",
              "      <td>...</td>\n",
              "      <td>5.3</td>\n",
              "      <td>247</td>\n",
              "      <td>0.8</td>\n",
              "      <td>2.1</td>\n",
              "      <td>0.1</td>\n",
              "      <td>0.8</td>\n",
              "      <td>0.7</td>\n",
              "      <td>0.9</td>\n",
              "      <td>0.7</td>\n",
              "      <td>0.7</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>762</th>\n",
              "      <td>564</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>G</td>\n",
              "      <td>King</td>\n",
              "      <td>3.9</td>\n",
              "      <td>0.7</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.8</td>\n",
              "      <td>2.1</td>\n",
              "      <td>0.1</td>\n",
              "      <td>0.8</td>\n",
              "      <td>0.7</td>\n",
              "      <td>0.9</td>\n",
              "      <td>0.7</td>\n",
              "      <td>0.7</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>763</th>\n",
              "      <td>569</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>G</td>\n",
              "      <td>José Sá</td>\n",
              "      <td>5.0</td>\n",
              "      <td>1.3</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>236</td>\n",
              "      <td>35.1</td>\n",
              "      <td>...</td>\n",
              "      <td>2.7</td>\n",
              "      <td>1282</td>\n",
              "      <td>0.8</td>\n",
              "      <td>2.1</td>\n",
              "      <td>0.1</td>\n",
              "      <td>0.8</td>\n",
              "      <td>0.7</td>\n",
              "      <td>0.9</td>\n",
              "      <td>0.7</td>\n",
              "      <td>0.7</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>764</th>\n",
              "      <td>571</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>G</td>\n",
              "      <td>Šarkić</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.3</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.8</td>\n",
              "      <td>2.1</td>\n",
              "      <td>0.1</td>\n",
              "      <td>0.8</td>\n",
              "      <td>0.7</td>\n",
              "      <td>0.9</td>\n",
              "      <td>0.7</td>\n",
              "      <td>0.7</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>765 rows × 21 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-2b945619-e73f-4db5-911f-05a125b11f2c')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-2b945619-e73f-4db5-911f-05a125b11f2c button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-2b945619-e73f-4db5-911f-05a125b11f2c');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-65bc7850-11a9-4ae0-a1eb-0a48291dd221\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-65bc7850-11a9-4ae0-a1eb-0a48291dd221')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-65bc7850-11a9-4ae0-a1eb-0a48291dd221 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 40
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#gw3adjustments = gw3adjustments.groupby('team', as_index=False)['gw3adjustment'].aggregate('sum')\n",
        "#gw3adjustments"
      ],
      "metadata": {
        "id": "6x3Lj7jPTCVC"
      },
      "execution_count": 41,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "rawdfgw228x['gw18'] = (((rawdfgw228x.xPallgw - 2)*rawdfgw228x.gw18adjustment)+2)\n",
        "rawdfgw228x['gw19'] = (((rawdfgw228x.xPallgw - 2)*rawdfgw228x.gw19adjustment)+2)\n",
        "rawdfgw228x['gw20'] = (((rawdfgw228x.xPallgw - 2)*rawdfgw228x.gw20adjustment)+2)\n",
        "rawdfgw228x['gw21'] = (((rawdfgw228x.xPallgw - 2)*rawdfgw228x.gw21adjustment)+2)\n",
        "rawdfgw228x['gw22'] = (((rawdfgw228x.xPallgw - 2)*rawdfgw228x.gw22adjustment)+2)\n",
        "\n",
        "rawdfgw228x['5GW Total'] = rawdfgw228x.gw22 + rawdfgw228x.gw18 + rawdfgw228x.gw19 + rawdfgw228x.gw20 + rawdfgw228x.gw21\n",
        "rawdfgw228x['3GW Total'] = rawdfgw228x.gw20 + rawdfgw228x.gw18 + rawdfgw228x.gw19\n",
        "rawdfgw228x = rawdfgw228x.drop(columns=[\n",
        "  'gw22adjustment',\n",
        "  'gw18adjustment',\n",
        "  'gw19adjustment',\n",
        "  'gw20adjustment',\n",
        "  'gw21adjustment'\n",
        "  ])\n",
        "rawdfgw228x"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 424
        },
        "id": "Dgw1xB0YUN9D",
        "outputId": "004d40cf-a795-40f4-f644-d97041023a9d"
      },
      "execution_count": 42,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "      id                     team pos     name  cost  selected_by_percent  \\\n",
              "0      1                  Arsenal   F  Balogun   4.4                  0.2   \n",
              "1      8                  Arsenal   F  G.Jesus   8.0                  4.9   \n",
              "2     13                  Arsenal   F  Nketiah   5.4                  5.5   \n",
              "3     39              Aston Villa   F    Davis   4.9                  0.1   \n",
              "4     44              Aston Villa   F    Duran   5.0                  0.2   \n",
              "..   ...                      ...  ..      ...   ...                  ...   \n",
              "760  647                 West Ham   G    Anang   4.0                  0.1   \n",
              "761  546  Wolverhampton Wanderers   G  Bentley   3.9                  1.3   \n",
              "762  564  Wolverhampton Wanderers   G     King   3.9                  0.7   \n",
              "763  569  Wolverhampton Wanderers   G  José Sá   5.0                  1.3   \n",
              "764  571  Wolverhampton Wanderers   G   Šarkić   4.0                  0.3   \n",
              "\n",
              "     goals_scored  assists  bps  ict_index  ...  home_adjustment  xPallgw  \\\n",
              "0               0        0    0        0.0  ...              1.2      2.0   \n",
              "1               3        2  143       77.5  ...              1.2      3.1   \n",
              "2               5        3  177       59.1  ...              1.2      2.9   \n",
              "3               0        0    0        0.0  ...              1.1      2.0   \n",
              "4               2        0   61       15.3  ...              1.1      2.2   \n",
              "..            ...      ...  ...        ...  ...              ...      ...   \n",
              "760             0        0    0        0.0  ...              1.0      2.0   \n",
              "761             0        0   60        5.7  ...              0.8      2.1   \n",
              "762             0        0    0        0.0  ...              0.8      2.1   \n",
              "763             0        0  236       35.1  ...              0.8      2.1   \n",
              "764             0        0    0        0.0  ...              0.8      2.1   \n",
              "\n",
              "     xCSP  gw18  gw19  gw20  gw21  gw22  5GW Total  3GW Total  \n",
              "0     NaN  2.00  2.00  2.00  2.00  2.00      10.00       6.00  \n",
              "1     NaN  3.10  3.32  3.32  3.21  3.54      16.49       9.74  \n",
              "2     NaN  2.90  3.08  3.08  2.99  3.26      15.31       9.06  \n",
              "3     NaN  2.00  2.00  2.00  2.00  2.00      10.00       6.00  \n",
              "4     NaN  2.26  2.20  2.24  2.24  2.18      11.12       6.70  \n",
              "..    ...   ...   ...   ...   ...   ...        ...        ...  \n",
              "760   0.0  2.00  2.00  2.00  2.00  2.00      10.00       6.00  \n",
              "761   0.1  2.08  2.07  2.09  2.07  2.07      10.38       6.24  \n",
              "762   0.1  2.08  2.07  2.09  2.07  2.07      10.38       6.24  \n",
              "763   0.1  2.08  2.07  2.09  2.07  2.07      10.38       6.24  \n",
              "764   0.1  2.08  2.07  2.09  2.07  2.07      10.38       6.24  \n",
              "\n",
              "[765 rows x 23 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-f8f3d09c-2764-427a-b62f-7980bc01ab7a\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>team</th>\n",
              "      <th>pos</th>\n",
              "      <th>name</th>\n",
              "      <th>cost</th>\n",
              "      <th>selected_by_percent</th>\n",
              "      <th>goals_scored</th>\n",
              "      <th>assists</th>\n",
              "      <th>bps</th>\n",
              "      <th>ict_index</th>\n",
              "      <th>...</th>\n",
              "      <th>home_adjustment</th>\n",
              "      <th>xPallgw</th>\n",
              "      <th>xCSP</th>\n",
              "      <th>gw18</th>\n",
              "      <th>gw19</th>\n",
              "      <th>gw20</th>\n",
              "      <th>gw21</th>\n",
              "      <th>gw22</th>\n",
              "      <th>5GW Total</th>\n",
              "      <th>3GW Total</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>1</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>F</td>\n",
              "      <td>Balogun</td>\n",
              "      <td>4.4</td>\n",
              "      <td>0.2</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>1.2</td>\n",
              "      <td>2.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>10.00</td>\n",
              "      <td>6.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>8</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>F</td>\n",
              "      <td>G.Jesus</td>\n",
              "      <td>8.0</td>\n",
              "      <td>4.9</td>\n",
              "      <td>3</td>\n",
              "      <td>2</td>\n",
              "      <td>143</td>\n",
              "      <td>77.5</td>\n",
              "      <td>...</td>\n",
              "      <td>1.2</td>\n",
              "      <td>3.1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.10</td>\n",
              "      <td>3.32</td>\n",
              "      <td>3.32</td>\n",
              "      <td>3.21</td>\n",
              "      <td>3.54</td>\n",
              "      <td>16.49</td>\n",
              "      <td>9.74</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>13</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>F</td>\n",
              "      <td>Nketiah</td>\n",
              "      <td>5.4</td>\n",
              "      <td>5.5</td>\n",
              "      <td>5</td>\n",
              "      <td>3</td>\n",
              "      <td>177</td>\n",
              "      <td>59.1</td>\n",
              "      <td>...</td>\n",
              "      <td>1.2</td>\n",
              "      <td>2.9</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2.90</td>\n",
              "      <td>3.08</td>\n",
              "      <td>3.08</td>\n",
              "      <td>2.99</td>\n",
              "      <td>3.26</td>\n",
              "      <td>15.31</td>\n",
              "      <td>9.06</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>39</td>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>F</td>\n",
              "      <td>Davis</td>\n",
              "      <td>4.9</td>\n",
              "      <td>0.1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>1.1</td>\n",
              "      <td>2.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>10.00</td>\n",
              "      <td>6.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>44</td>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>F</td>\n",
              "      <td>Duran</td>\n",
              "      <td>5.0</td>\n",
              "      <td>0.2</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>61</td>\n",
              "      <td>15.3</td>\n",
              "      <td>...</td>\n",
              "      <td>1.1</td>\n",
              "      <td>2.2</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2.26</td>\n",
              "      <td>2.20</td>\n",
              "      <td>2.24</td>\n",
              "      <td>2.24</td>\n",
              "      <td>2.18</td>\n",
              "      <td>11.12</td>\n",
              "      <td>6.70</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>760</th>\n",
              "      <td>647</td>\n",
              "      <td>West Ham</td>\n",
              "      <td>G</td>\n",
              "      <td>Anang</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>1.0</td>\n",
              "      <td>2.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>10.00</td>\n",
              "      <td>6.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>761</th>\n",
              "      <td>546</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>G</td>\n",
              "      <td>Bentley</td>\n",
              "      <td>3.9</td>\n",
              "      <td>1.3</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>60</td>\n",
              "      <td>5.7</td>\n",
              "      <td>...</td>\n",
              "      <td>0.8</td>\n",
              "      <td>2.1</td>\n",
              "      <td>0.1</td>\n",
              "      <td>2.08</td>\n",
              "      <td>2.07</td>\n",
              "      <td>2.09</td>\n",
              "      <td>2.07</td>\n",
              "      <td>2.07</td>\n",
              "      <td>10.38</td>\n",
              "      <td>6.24</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>762</th>\n",
              "      <td>564</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>G</td>\n",
              "      <td>King</td>\n",
              "      <td>3.9</td>\n",
              "      <td>0.7</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0.8</td>\n",
              "      <td>2.1</td>\n",
              "      <td>0.1</td>\n",
              "      <td>2.08</td>\n",
              "      <td>2.07</td>\n",
              "      <td>2.09</td>\n",
              "      <td>2.07</td>\n",
              "      <td>2.07</td>\n",
              "      <td>10.38</td>\n",
              "      <td>6.24</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>763</th>\n",
              "      <td>569</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>G</td>\n",
              "      <td>José Sá</td>\n",
              "      <td>5.0</td>\n",
              "      <td>1.3</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>236</td>\n",
              "      <td>35.1</td>\n",
              "      <td>...</td>\n",
              "      <td>0.8</td>\n",
              "      <td>2.1</td>\n",
              "      <td>0.1</td>\n",
              "      <td>2.08</td>\n",
              "      <td>2.07</td>\n",
              "      <td>2.09</td>\n",
              "      <td>2.07</td>\n",
              "      <td>2.07</td>\n",
              "      <td>10.38</td>\n",
              "      <td>6.24</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>764</th>\n",
              "      <td>571</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>G</td>\n",
              "      <td>Šarkić</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.3</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0.8</td>\n",
              "      <td>2.1</td>\n",
              "      <td>0.1</td>\n",
              "      <td>2.08</td>\n",
              "      <td>2.07</td>\n",
              "      <td>2.09</td>\n",
              "      <td>2.07</td>\n",
              "      <td>2.07</td>\n",
              "      <td>10.38</td>\n",
              "      <td>6.24</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>765 rows × 23 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-f8f3d09c-2764-427a-b62f-7980bc01ab7a')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-f8f3d09c-2764-427a-b62f-7980bc01ab7a button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-f8f3d09c-2764-427a-b62f-7980bc01ab7a');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-8fe0297f-1893-4ff9-9b68-d8dfc9827380\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-8fe0297f-1893-4ff9-9b68-d8dfc9827380')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-8fe0297f-1893-4ff9-9b68-d8dfc9827380 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 42
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "rawdfgw228x.drop_duplicates(subset='name', keep='last', inplace=True)\n",
        "rawdfgw228x"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 424
        },
        "id": "Jud88GRHgLWf",
        "outputId": "2d2041d1-61fb-4163-acf8-ac6913d6c4af"
      },
      "execution_count": 43,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "      id                     team pos     name  cost  selected_by_percent  \\\n",
              "0      1                  Arsenal   F  Balogun   4.4                  0.2   \n",
              "1      8                  Arsenal   F  G.Jesus   8.0                  4.9   \n",
              "2     13                  Arsenal   F  Nketiah   5.4                  5.5   \n",
              "3     39              Aston Villa   F    Davis   4.9                  0.1   \n",
              "4     44              Aston Villa   F    Duran   5.0                  0.2   \n",
              "..   ...                      ...  ..      ...   ...                  ...   \n",
              "760  647                 West Ham   G    Anang   4.0                  0.1   \n",
              "761  546  Wolverhampton Wanderers   G  Bentley   3.9                  1.3   \n",
              "762  564  Wolverhampton Wanderers   G     King   3.9                  0.7   \n",
              "763  569  Wolverhampton Wanderers   G  José Sá   5.0                  1.3   \n",
              "764  571  Wolverhampton Wanderers   G   Šarkić   4.0                  0.3   \n",
              "\n",
              "     goals_scored  assists  bps  ict_index  ...  home_adjustment  xPallgw  \\\n",
              "0               0        0    0        0.0  ...              1.2      2.0   \n",
              "1               3        2  143       77.5  ...              1.2      3.1   \n",
              "2               5        3  177       59.1  ...              1.2      2.9   \n",
              "3               0        0    0        0.0  ...              1.1      2.0   \n",
              "4               2        0   61       15.3  ...              1.1      2.2   \n",
              "..            ...      ...  ...        ...  ...              ...      ...   \n",
              "760             0        0    0        0.0  ...              1.0      2.0   \n",
              "761             0        0   60        5.7  ...              0.8      2.1   \n",
              "762             0        0    0        0.0  ...              0.8      2.1   \n",
              "763             0        0  236       35.1  ...              0.8      2.1   \n",
              "764             0        0    0        0.0  ...              0.8      2.1   \n",
              "\n",
              "     xCSP  gw18  gw19  gw20  gw21  gw22  5GW Total  3GW Total  \n",
              "0     NaN  2.00  2.00  2.00  2.00  2.00      10.00       6.00  \n",
              "1     NaN  3.10  3.32  3.32  3.21  3.54      16.49       9.74  \n",
              "2     NaN  2.90  3.08  3.08  2.99  3.26      15.31       9.06  \n",
              "3     NaN  2.00  2.00  2.00  2.00  2.00      10.00       6.00  \n",
              "4     NaN  2.26  2.20  2.24  2.24  2.18      11.12       6.70  \n",
              "..    ...   ...   ...   ...   ...   ...        ...        ...  \n",
              "760   0.0  2.00  2.00  2.00  2.00  2.00      10.00       6.00  \n",
              "761   0.1  2.08  2.07  2.09  2.07  2.07      10.38       6.24  \n",
              "762   0.1  2.08  2.07  2.09  2.07  2.07      10.38       6.24  \n",
              "763   0.1  2.08  2.07  2.09  2.07  2.07      10.38       6.24  \n",
              "764   0.1  2.08  2.07  2.09  2.07  2.07      10.38       6.24  \n",
              "\n",
              "[741 rows x 23 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-ba7cadce-8fba-4fcb-a820-a9a064c1f829\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>team</th>\n",
              "      <th>pos</th>\n",
              "      <th>name</th>\n",
              "      <th>cost</th>\n",
              "      <th>selected_by_percent</th>\n",
              "      <th>goals_scored</th>\n",
              "      <th>assists</th>\n",
              "      <th>bps</th>\n",
              "      <th>ict_index</th>\n",
              "      <th>...</th>\n",
              "      <th>home_adjustment</th>\n",
              "      <th>xPallgw</th>\n",
              "      <th>xCSP</th>\n",
              "      <th>gw18</th>\n",
              "      <th>gw19</th>\n",
              "      <th>gw20</th>\n",
              "      <th>gw21</th>\n",
              "      <th>gw22</th>\n",
              "      <th>5GW Total</th>\n",
              "      <th>3GW Total</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>1</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>F</td>\n",
              "      <td>Balogun</td>\n",
              "      <td>4.4</td>\n",
              "      <td>0.2</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>1.2</td>\n",
              "      <td>2.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>10.00</td>\n",
              "      <td>6.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>8</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>F</td>\n",
              "      <td>G.Jesus</td>\n",
              "      <td>8.0</td>\n",
              "      <td>4.9</td>\n",
              "      <td>3</td>\n",
              "      <td>2</td>\n",
              "      <td>143</td>\n",
              "      <td>77.5</td>\n",
              "      <td>...</td>\n",
              "      <td>1.2</td>\n",
              "      <td>3.1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.10</td>\n",
              "      <td>3.32</td>\n",
              "      <td>3.32</td>\n",
              "      <td>3.21</td>\n",
              "      <td>3.54</td>\n",
              "      <td>16.49</td>\n",
              "      <td>9.74</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>13</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>F</td>\n",
              "      <td>Nketiah</td>\n",
              "      <td>5.4</td>\n",
              "      <td>5.5</td>\n",
              "      <td>5</td>\n",
              "      <td>3</td>\n",
              "      <td>177</td>\n",
              "      <td>59.1</td>\n",
              "      <td>...</td>\n",
              "      <td>1.2</td>\n",
              "      <td>2.9</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2.90</td>\n",
              "      <td>3.08</td>\n",
              "      <td>3.08</td>\n",
              "      <td>2.99</td>\n",
              "      <td>3.26</td>\n",
              "      <td>15.31</td>\n",
              "      <td>9.06</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>39</td>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>F</td>\n",
              "      <td>Davis</td>\n",
              "      <td>4.9</td>\n",
              "      <td>0.1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>1.1</td>\n",
              "      <td>2.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>10.00</td>\n",
              "      <td>6.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>44</td>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>F</td>\n",
              "      <td>Duran</td>\n",
              "      <td>5.0</td>\n",
              "      <td>0.2</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>61</td>\n",
              "      <td>15.3</td>\n",
              "      <td>...</td>\n",
              "      <td>1.1</td>\n",
              "      <td>2.2</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2.26</td>\n",
              "      <td>2.20</td>\n",
              "      <td>2.24</td>\n",
              "      <td>2.24</td>\n",
              "      <td>2.18</td>\n",
              "      <td>11.12</td>\n",
              "      <td>6.70</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>760</th>\n",
              "      <td>647</td>\n",
              "      <td>West Ham</td>\n",
              "      <td>G</td>\n",
              "      <td>Anang</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>1.0</td>\n",
              "      <td>2.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>10.00</td>\n",
              "      <td>6.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>761</th>\n",
              "      <td>546</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>G</td>\n",
              "      <td>Bentley</td>\n",
              "      <td>3.9</td>\n",
              "      <td>1.3</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>60</td>\n",
              "      <td>5.7</td>\n",
              "      <td>...</td>\n",
              "      <td>0.8</td>\n",
              "      <td>2.1</td>\n",
              "      <td>0.1</td>\n",
              "      <td>2.08</td>\n",
              "      <td>2.07</td>\n",
              "      <td>2.09</td>\n",
              "      <td>2.07</td>\n",
              "      <td>2.07</td>\n",
              "      <td>10.38</td>\n",
              "      <td>6.24</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>762</th>\n",
              "      <td>564</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>G</td>\n",
              "      <td>King</td>\n",
              "      <td>3.9</td>\n",
              "      <td>0.7</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0.8</td>\n",
              "      <td>2.1</td>\n",
              "      <td>0.1</td>\n",
              "      <td>2.08</td>\n",
              "      <td>2.07</td>\n",
              "      <td>2.09</td>\n",
              "      <td>2.07</td>\n",
              "      <td>2.07</td>\n",
              "      <td>10.38</td>\n",
              "      <td>6.24</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>763</th>\n",
              "      <td>569</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>G</td>\n",
              "      <td>José Sá</td>\n",
              "      <td>5.0</td>\n",
              "      <td>1.3</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>236</td>\n",
              "      <td>35.1</td>\n",
              "      <td>...</td>\n",
              "      <td>0.8</td>\n",
              "      <td>2.1</td>\n",
              "      <td>0.1</td>\n",
              "      <td>2.08</td>\n",
              "      <td>2.07</td>\n",
              "      <td>2.09</td>\n",
              "      <td>2.07</td>\n",
              "      <td>2.07</td>\n",
              "      <td>10.38</td>\n",
              "      <td>6.24</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>764</th>\n",
              "      <td>571</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>G</td>\n",
              "      <td>Šarkić</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.3</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0.8</td>\n",
              "      <td>2.1</td>\n",
              "      <td>0.1</td>\n",
              "      <td>2.08</td>\n",
              "      <td>2.07</td>\n",
              "      <td>2.09</td>\n",
              "      <td>2.07</td>\n",
              "      <td>2.07</td>\n",
              "      <td>10.38</td>\n",
              "      <td>6.24</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>741 rows × 23 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-ba7cadce-8fba-4fcb-a820-a9a064c1f829')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-ba7cadce-8fba-4fcb-a820-a9a064c1f829 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-ba7cadce-8fba-4fcb-a820-a9a064c1f829');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-446a4a08-058a-4b6b-9c0b-e1916ac1ebf0\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-446a4a08-058a-4b6b-9c0b-e1916ac1ebf0')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-446a4a08-058a-4b6b-9c0b-e1916ac1ebf0 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 43
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "from pandas import ExcelWriter\n",
        "writer = ExcelWriter('API model.xlsx')\n",
        "rawdfgw228x.to_excel(writer, sheet_name='Sheet1')\n",
        "gwadjustments1822.to_excel(writer, sheet_name='Sheet2')\n",
        "#fplwithunderstat.to_excel(writer, sheet_name='Sheet3')\n",
        "\n",
        "# Close the Pandas Excel writer and output the Excel file.\n",
        "writer.save()"
      ],
      "metadata": {
        "id": "tdXsMsuwaWa4",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "cc0d9f41-8258-4541-e94b-3485bc37a376"
      },
      "execution_count": 44,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "<ipython-input-44-de68bd988d7f>:8: FutureWarning: save is not part of the public API, usage can give unexpected results and will be removed in a future version\n",
            "  writer.save()\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#from google.colab import drive\n",
        "#drive.mount('/content/drive')"
      ],
      "metadata": {
        "id": "GzSzE5_Ckuq3"
      },
      "execution_count": 45,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "import shutil"
      ],
      "metadata": {
        "id": "xSIwXnyAk2op"
      },
      "execution_count": 46,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "#shutil.copy(\"/content/API model.xlsx\",\"/content/drive/MyDrive/FPL\")"
      ],
      "metadata": {
        "id": "O724A90vk3b4"
      },
      "execution_count": 47,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "rawdfgw228x.nlargest(50, '5GW Total')"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "id": "4ULMO_eqJXIT",
        "outputId": "7ea63e00-d380-40ad-809b-0b67916ce4f9"
      },
      "execution_count": 48,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "      id               team pos              name  cost  selected_by_percent  \\\n",
              "277  308          Liverpool   M             Salah  13.2                 54.0   \n",
              "62   355    Manchester City   F           Haaland  13.9                 63.6   \n",
              "158  108          Brentford   M            Mbeumo   6.9                  9.3   \n",
              "107   19            Arsenal   M              Saka   9.0                 58.4   \n",
              "30   211            Chelsea   F         N.Jackson   6.9                  7.0   \n",
              "5     60        Aston Villa   F           Watkins   8.7                 49.7   \n",
              "321  373  Manchester United   M       B.Fernandes   8.2                 10.2   \n",
              "397  516          Tottenham   M               Son   9.8                 42.9   \n",
              "67   415   Newcastle United   F              Isak   7.6                 16.4   \n",
              "217  362            Chelsea   M            Palmer   5.6                 22.9   \n",
              "401  526           West Ham   M             Bowen   7.8                 22.0   \n",
              "440   36        Aston Villa   D              Cash   4.7                 21.9   \n",
              "50   293          Liverpool   F            Darwin   7.5                 15.4   \n",
              "340  412   Newcastle United   M            Gordon   6.2                 24.1   \n",
              "330  396  Manchester United   M          Rashford   8.5                 10.7   \n",
              "104   14            Arsenal   M          Ødegaard   8.4                 14.6   \n",
              "61   343    Manchester City   F         J.Alvarez   6.9                 27.8   \n",
              "16   135           Brighton   F        João Pedro   5.4                 10.4   \n",
              "180  143           Brighton   M            Mitoma   6.5                 21.4   \n",
              "432   20            Arsenal   D            Saliba   5.5                 35.4   \n",
              "435   29            Arsenal   D             White   5.6                 11.1   \n",
              "436   31            Arsenal   D         Zinchenko   5.2                 12.9   \n",
              "9     85        Bournemouth   F           Solanke   6.8                 19.7   \n",
              "210  199            Chelsea   M              Enzo   4.8                  2.8   \n",
              "602  430   Newcastle United   D          Trippier   6.9                 43.3   \n",
              "542  290          Liverpool   D  Alexander-Arnold   8.2                 17.5   \n",
              "120   43        Aston Villa   M      Douglas Luiz   5.5                  6.8   \n",
              "100    6            Arsenal   M           Havertz   7.1                  1.7   \n",
              "308  353    Manchester City   M             Foden   7.6                 10.6   \n",
              "410  664           West Ham   M       Ward-Prowse   6.1                  9.0   \n",
              "175  134           Brighton   M             Gross   6.4                  3.2   \n",
              "241  249            Everton   M        A.Doucoure   5.6                  1.9   \n",
              "215  216            Chelsea   M          Sterling   7.1                 12.0   \n",
              "430    5            Arsenal   D           Gabriel   4.9                 15.1   \n",
              "595  407   Newcastle United   D              Burn   4.4                  3.8   \n",
              "275  303          Liverpool   M         Luis Díaz   7.4                  6.5   \n",
              "116   34        Aston Villa   M            Bailey   5.6                  2.8   \n",
              "129  599        Aston Villa   M             Diaby   6.7                 10.2   \n",
              "434   25            Arsenal   D          Tomiyasu   4.5                  0.4   \n",
              "568  342    Manchester City   D               Aké   5.0                  5.1   \n",
              "390  501          Tottenham   M        Kulusevski   7.2                  4.6   \n",
              "392  504          Tottenham   M          Maddison   7.8                  8.3   \n",
              "336  402   Newcastle United   M           Almirón   6.2                  4.6   \n",
              "550  313          Liverpool   D            Virgil   6.2                 10.1   \n",
              "12   119          Brentford   F             Wissa   5.8                  6.9   \n",
              "471  129           Brighton   D              Dunk   5.0                  3.0   \n",
              "265  591             Fulham   M           Willian   5.3                  1.2   \n",
              "394  509          Tottenham   M       Richarlison   6.7                  2.8   \n",
              "644  506          Tottenham   D       Pedro Porro   5.5                 22.8   \n",
              "1      8            Arsenal   F           G.Jesus   8.0                  4.9   \n",
              "\n",
              "     goals_scored  assists  bps  ict_index  ...  home_adjustment  xPallgw  \\\n",
              "277            11        7  387      188.3  ...              1.2      5.9   \n",
              "62             14        5  417      159.8  ...              NaN      5.7   \n",
              "158             7        4  250      122.1  ...              NaN      5.2   \n",
              "107             5        8  361      164.2  ...              1.2      4.5   \n",
              "30              7        1  198      107.6  ...              1.1      4.5   \n",
              "5               9        9  370      149.7  ...              1.1      4.3   \n",
              "321             3        3  279      141.7  ...              1.1      4.2   \n",
              "397            10        4  368      150.0  ...              1.0      4.5   \n",
              "67              7        0  213       68.3  ...              1.2      4.0   \n",
              "217             6        4  258      101.8  ...              1.1      4.1   \n",
              "401            10        1  266      126.5  ...              1.0      4.3   \n",
              "440             2        1  216       63.4  ...              1.1      4.0   \n",
              "50              4        7  171       96.5  ...              1.2      3.9   \n",
              "340             6        6  281      110.6  ...              1.2      3.8   \n",
              "330             2        2  132       75.2  ...              1.1      3.7   \n",
              "104             4        3  263      114.2  ...              1.2      3.6   \n",
              "61              4        8  333      128.0  ...              NaN      3.7   \n",
              "16              5        1  184       92.6  ...              1.1      3.5   \n",
              "180             3        5  200      113.7  ...              1.1      3.5   \n",
              "432             1        1  334       43.8  ...              1.2      3.5   \n",
              "435             1        2  302       62.1  ...              1.2      3.5   \n",
              "436             1        1  295       61.9  ...              1.2      3.5   \n",
              "9               8        1  216      114.7  ...              0.8      4.1   \n",
              "210             2        1  197       78.5  ...              1.1      3.6   \n",
              "602             0        7  403      117.9  ...              1.2      3.5   \n",
              "542             2        3  373      108.9  ...              1.2      3.5   \n",
              "120             5        2  338       97.5  ...              1.1      3.5   \n",
              "100             4        1  144       68.7  ...              1.2      3.4   \n",
              "308             4        4  304      122.7  ...              NaN      3.5   \n",
              "410             3        5  348      109.3  ...              1.0      3.6   \n",
              "175             3        5  297      132.0  ...              1.1      3.3   \n",
              "241             6        2  244      108.3  ...              0.9      3.8   \n",
              "215             5        5  215      113.0  ...              1.1      3.4   \n",
              "430             0        0  234       36.0  ...              1.2      3.3   \n",
              "595             2        0  208       48.3  ...              1.2      3.3   \n",
              "275             3        1  126       75.4  ...              1.2      3.3   \n",
              "116             5        5  193       72.5  ...              1.1      3.3   \n",
              "129             3        7  227       94.8  ...              1.1      3.3   \n",
              "434             1        1  134       23.3  ...              1.2      3.2   \n",
              "568             2        1  205       46.5  ...              NaN      3.3   \n",
              "390             5        2  270      148.1  ...              1.0      3.4   \n",
              "392             3        6  230      109.6  ...              1.0      3.4   \n",
              "336             3        1  189       69.5  ...              1.2      3.2   \n",
              "550             1        2  305       73.9  ...              1.2      3.2   \n",
              "12              3        2  169       79.3  ...              NaN      3.4   \n",
              "471             1        0  200       56.7  ...              1.1      3.1   \n",
              "265             4        2  214       79.1  ...              0.9      3.3   \n",
              "394             4        3  125       70.0  ...              1.0      3.3   \n",
              "644             0        6  374      102.3  ...              1.0      3.3   \n",
              "1               3        2  143       77.5  ...              1.2      3.1   \n",
              "\n",
              "     xCSP  gw18  gw19  gw20  gw21  gw22  5GW Total  3GW Total  \n",
              "277   NaN  5.90  7.07  5.90  7.07  6.29      32.23      18.87  \n",
              "62    NaN  2.00  7.18  7.55  6.07  7.18      29.98      16.73  \n",
              "158   NaN  2.00  6.16  5.52  6.16  5.52      25.36      13.68  \n",
              "107   NaN  4.50  5.00  5.00  4.75  5.50      24.75      14.50  \n",
              "30    NaN  5.00  4.50  5.25  4.75  4.25      23.75      14.75  \n",
              "5     NaN  4.99  4.30  4.76  4.76  4.07      22.88      14.05  \n",
              "321   NaN  4.42  4.20  4.86  4.42  4.86      22.76      13.48  \n",
              "397   NaN  4.75  4.25  5.00  4.25  4.25      22.50      14.00  \n",
              "67    NaN  4.80  4.80  4.00  3.80  4.20      21.60      13.60  \n",
              "217   NaN  4.52  4.10  4.73  4.31  3.89      21.55      13.35  \n",
              "401   NaN  4.07  3.84  4.07  4.76  4.76      21.50      11.98  \n",
              "440   0.4  4.60  4.00  4.40  4.40  3.80      21.20      13.00  \n",
              "50    NaN  3.90  4.47  3.90  4.47  4.09      20.83      12.27  \n",
              "340   NaN  4.52  4.52  3.80  3.62  3.98      20.44      12.84  \n",
              "330   NaN  3.87  3.70  4.21  3.87  4.21      19.86      11.78  \n",
              "104   NaN  3.60  3.92  3.92  3.76  4.24      19.44      11.44  \n",
              "61    NaN  2.00  4.38  4.55  3.87  4.38      19.18      10.93  \n",
              "16    NaN  3.65  3.65  3.65  3.95  4.10      19.00      10.95  \n",
              "180   NaN  3.65  3.65  3.65  3.95  4.10      19.00      10.95  \n",
              "432   1.0  3.50  3.80  3.80  3.65  4.10      18.85      11.10  \n",
              "435   1.0  3.50  3.80  3.80  3.65  4.10      18.85      11.10  \n",
              "436   1.0  3.50  3.80  3.80  3.65  4.10      18.85      11.10  \n",
              "9     NaN  4.10  3.89  3.68  3.47  3.68      18.82      11.67  \n",
              "210   NaN  3.92  3.60  4.08  3.76  3.44      18.80      11.60  \n",
              "602   0.5  4.10  4.10  3.50  3.35  3.65      18.70      11.70  \n",
              "542   0.5  3.50  3.95  3.50  3.95  3.65      18.55      10.95  \n",
              "120   NaN  3.95  3.50  3.80  3.80  3.35      18.40      11.25  \n",
              "100   NaN  3.40  3.68  3.68  3.54  3.96      18.26      10.76  \n",
              "308   NaN  2.00  4.10  4.25  3.65  4.10      18.10      10.35  \n",
              "410   NaN  3.44  3.28  3.44  3.92  3.92      18.00      10.16  \n",
              "175   NaN  3.43  3.43  3.43  3.69  3.82      17.80      10.29  \n",
              "241   NaN  3.62  3.08  3.98  3.44  3.62      17.74      10.68  \n",
              "215   NaN  3.68  3.40  3.82  3.54  3.26      17.70      10.90  \n",
              "430   1.0  3.30  3.56  3.56  3.43  3.82      17.67      10.42  \n",
              "595   0.5  3.82  3.82  3.30  3.17  3.43      17.54      10.94  \n",
              "275   NaN  3.30  3.69  3.30  3.69  3.43      17.41      10.29  \n",
              "116   NaN  3.69  3.30  3.56  3.56  3.17      17.28      10.55  \n",
              "129   NaN  3.69  3.30  3.56  3.56  3.17      17.28      10.55  \n",
              "434   1.0  3.20  3.44  3.44  3.32  3.68      17.08      10.08  \n",
              "568   0.8  2.00  3.82  3.95  3.43  3.82      17.02       9.77  \n",
              "390   NaN  3.54  3.26  3.68  3.26  3.26      17.00      10.48  \n",
              "392   NaN  3.54  3.26  3.68  3.26  3.26      17.00      10.48  \n",
              "336   NaN  3.68  3.68  3.20  3.08  3.32      16.96      10.56  \n",
              "550   0.5  3.20  3.56  3.20  3.56  3.32      16.84       9.96  \n",
              "12    NaN  2.00  3.82  3.54  3.82  3.54      16.72       9.36  \n",
              "471   0.3  3.21  3.21  3.21  3.43  3.54      16.60       9.63  \n",
              "265   NaN  3.43  3.43  3.04  3.17  3.43      16.50       9.90  \n",
              "394   NaN  3.43  3.17  3.56  3.17  3.17      16.50      10.16  \n",
              "644   0.1  3.43  3.17  3.56  3.17  3.17      16.50      10.16  \n",
              "1     NaN  3.10  3.32  3.32  3.21  3.54      16.49       9.74  \n",
              "\n",
              "[50 rows x 23 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-19d14f40-f721-4f46-a87b-5b5a76487850\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>team</th>\n",
              "      <th>pos</th>\n",
              "      <th>name</th>\n",
              "      <th>cost</th>\n",
              "      <th>selected_by_percent</th>\n",
              "      <th>goals_scored</th>\n",
              "      <th>assists</th>\n",
              "      <th>bps</th>\n",
              "      <th>ict_index</th>\n",
              "      <th>...</th>\n",
              "      <th>home_adjustment</th>\n",
              "      <th>xPallgw</th>\n",
              "      <th>xCSP</th>\n",
              "      <th>gw18</th>\n",
              "      <th>gw19</th>\n",
              "      <th>gw20</th>\n",
              "      <th>gw21</th>\n",
              "      <th>gw22</th>\n",
              "      <th>5GW Total</th>\n",
              "      <th>3GW Total</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>277</th>\n",
              "      <td>308</td>\n",
              "      <td>Liverpool</td>\n",
              "      <td>M</td>\n",
              "      <td>Salah</td>\n",
              "      <td>13.2</td>\n",
              "      <td>54.0</td>\n",
              "      <td>11</td>\n",
              "      <td>7</td>\n",
              "      <td>387</td>\n",
              "      <td>188.3</td>\n",
              "      <td>...</td>\n",
              "      <td>1.2</td>\n",
              "      <td>5.9</td>\n",
              "      <td>NaN</td>\n",
              "      <td>5.90</td>\n",
              "      <td>7.07</td>\n",
              "      <td>5.90</td>\n",
              "      <td>7.07</td>\n",
              "      <td>6.29</td>\n",
              "      <td>32.23</td>\n",
              "      <td>18.87</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>62</th>\n",
              "      <td>355</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>F</td>\n",
              "      <td>Haaland</td>\n",
              "      <td>13.9</td>\n",
              "      <td>63.6</td>\n",
              "      <td>14</td>\n",
              "      <td>5</td>\n",
              "      <td>417</td>\n",
              "      <td>159.8</td>\n",
              "      <td>...</td>\n",
              "      <td>NaN</td>\n",
              "      <td>5.7</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2.00</td>\n",
              "      <td>7.18</td>\n",
              "      <td>7.55</td>\n",
              "      <td>6.07</td>\n",
              "      <td>7.18</td>\n",
              "      <td>29.98</td>\n",
              "      <td>16.73</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>158</th>\n",
              "      <td>108</td>\n",
              "      <td>Brentford</td>\n",
              "      <td>M</td>\n",
              "      <td>Mbeumo</td>\n",
              "      <td>6.9</td>\n",
              "      <td>9.3</td>\n",
              "      <td>7</td>\n",
              "      <td>4</td>\n",
              "      <td>250</td>\n",
              "      <td>122.1</td>\n",
              "      <td>...</td>\n",
              "      <td>NaN</td>\n",
              "      <td>5.2</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2.00</td>\n",
              "      <td>6.16</td>\n",
              "      <td>5.52</td>\n",
              "      <td>6.16</td>\n",
              "      <td>5.52</td>\n",
              "      <td>25.36</td>\n",
              "      <td>13.68</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>107</th>\n",
              "      <td>19</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>M</td>\n",
              "      <td>Saka</td>\n",
              "      <td>9.0</td>\n",
              "      <td>58.4</td>\n",
              "      <td>5</td>\n",
              "      <td>8</td>\n",
              "      <td>361</td>\n",
              "      <td>164.2</td>\n",
              "      <td>...</td>\n",
              "      <td>1.2</td>\n",
              "      <td>4.5</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4.50</td>\n",
              "      <td>5.00</td>\n",
              "      <td>5.00</td>\n",
              "      <td>4.75</td>\n",
              "      <td>5.50</td>\n",
              "      <td>24.75</td>\n",
              "      <td>14.50</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>30</th>\n",
              "      <td>211</td>\n",
              "      <td>Chelsea</td>\n",
              "      <td>F</td>\n",
              "      <td>N.Jackson</td>\n",
              "      <td>6.9</td>\n",
              "      <td>7.0</td>\n",
              "      <td>7</td>\n",
              "      <td>1</td>\n",
              "      <td>198</td>\n",
              "      <td>107.6</td>\n",
              "      <td>...</td>\n",
              "      <td>1.1</td>\n",
              "      <td>4.5</td>\n",
              "      <td>NaN</td>\n",
              "      <td>5.00</td>\n",
              "      <td>4.50</td>\n",
              "      <td>5.25</td>\n",
              "      <td>4.75</td>\n",
              "      <td>4.25</td>\n",
              "      <td>23.75</td>\n",
              "      <td>14.75</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>60</td>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>F</td>\n",
              "      <td>Watkins</td>\n",
              "      <td>8.7</td>\n",
              "      <td>49.7</td>\n",
              "      <td>9</td>\n",
              "      <td>9</td>\n",
              "      <td>370</td>\n",
              "      <td>149.7</td>\n",
              "      <td>...</td>\n",
              "      <td>1.1</td>\n",
              "      <td>4.3</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4.99</td>\n",
              "      <td>4.30</td>\n",
              "      <td>4.76</td>\n",
              "      <td>4.76</td>\n",
              "      <td>4.07</td>\n",
              "      <td>22.88</td>\n",
              "      <td>14.05</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>321</th>\n",
              "      <td>373</td>\n",
              "      <td>Manchester United</td>\n",
              "      <td>M</td>\n",
              "      <td>B.Fernandes</td>\n",
              "      <td>8.2</td>\n",
              "      <td>10.2</td>\n",
              "      <td>3</td>\n",
              "      <td>3</td>\n",
              "      <td>279</td>\n",
              "      <td>141.7</td>\n",
              "      <td>...</td>\n",
              "      <td>1.1</td>\n",
              "      <td>4.2</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4.42</td>\n",
              "      <td>4.20</td>\n",
              "      <td>4.86</td>\n",
              "      <td>4.42</td>\n",
              "      <td>4.86</td>\n",
              "      <td>22.76</td>\n",
              "      <td>13.48</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>397</th>\n",
              "      <td>516</td>\n",
              "      <td>Tottenham</td>\n",
              "      <td>M</td>\n",
              "      <td>Son</td>\n",
              "      <td>9.8</td>\n",
              "      <td>42.9</td>\n",
              "      <td>10</td>\n",
              "      <td>4</td>\n",
              "      <td>368</td>\n",
              "      <td>150.0</td>\n",
              "      <td>...</td>\n",
              "      <td>1.0</td>\n",
              "      <td>4.5</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4.75</td>\n",
              "      <td>4.25</td>\n",
              "      <td>5.00</td>\n",
              "      <td>4.25</td>\n",
              "      <td>4.25</td>\n",
              "      <td>22.50</td>\n",
              "      <td>14.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>67</th>\n",
              "      <td>415</td>\n",
              "      <td>Newcastle United</td>\n",
              "      <td>F</td>\n",
              "      <td>Isak</td>\n",
              "      <td>7.6</td>\n",
              "      <td>16.4</td>\n",
              "      <td>7</td>\n",
              "      <td>0</td>\n",
              "      <td>213</td>\n",
              "      <td>68.3</td>\n",
              "      <td>...</td>\n",
              "      <td>1.2</td>\n",
              "      <td>4.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4.80</td>\n",
              "      <td>4.80</td>\n",
              "      <td>4.00</td>\n",
              "      <td>3.80</td>\n",
              "      <td>4.20</td>\n",
              "      <td>21.60</td>\n",
              "      <td>13.60</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>217</th>\n",
              "      <td>362</td>\n",
              "      <td>Chelsea</td>\n",
              "      <td>M</td>\n",
              "      <td>Palmer</td>\n",
              "      <td>5.6</td>\n",
              "      <td>22.9</td>\n",
              "      <td>6</td>\n",
              "      <td>4</td>\n",
              "      <td>258</td>\n",
              "      <td>101.8</td>\n",
              "      <td>...</td>\n",
              "      <td>1.1</td>\n",
              "      <td>4.1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4.52</td>\n",
              "      <td>4.10</td>\n",
              "      <td>4.73</td>\n",
              "      <td>4.31</td>\n",
              "      <td>3.89</td>\n",
              "      <td>21.55</td>\n",
              "      <td>13.35</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>401</th>\n",
              "      <td>526</td>\n",
              "      <td>West Ham</td>\n",
              "      <td>M</td>\n",
              "      <td>Bowen</td>\n",
              "      <td>7.8</td>\n",
              "      <td>22.0</td>\n",
              "      <td>10</td>\n",
              "      <td>1</td>\n",
              "      <td>266</td>\n",
              "      <td>126.5</td>\n",
              "      <td>...</td>\n",
              "      <td>1.0</td>\n",
              "      <td>4.3</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4.07</td>\n",
              "      <td>3.84</td>\n",
              "      <td>4.07</td>\n",
              "      <td>4.76</td>\n",
              "      <td>4.76</td>\n",
              "      <td>21.50</td>\n",
              "      <td>11.98</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>440</th>\n",
              "      <td>36</td>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>D</td>\n",
              "      <td>Cash</td>\n",
              "      <td>4.7</td>\n",
              "      <td>21.9</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>216</td>\n",
              "      <td>63.4</td>\n",
              "      <td>...</td>\n",
              "      <td>1.1</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.4</td>\n",
              "      <td>4.60</td>\n",
              "      <td>4.00</td>\n",
              "      <td>4.40</td>\n",
              "      <td>4.40</td>\n",
              "      <td>3.80</td>\n",
              "      <td>21.20</td>\n",
              "      <td>13.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>50</th>\n",
              "      <td>293</td>\n",
              "      <td>Liverpool</td>\n",
              "      <td>F</td>\n",
              "      <td>Darwin</td>\n",
              "      <td>7.5</td>\n",
              "      <td>15.4</td>\n",
              "      <td>4</td>\n",
              "      <td>7</td>\n",
              "      <td>171</td>\n",
              "      <td>96.5</td>\n",
              "      <td>...</td>\n",
              "      <td>1.2</td>\n",
              "      <td>3.9</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.90</td>\n",
              "      <td>4.47</td>\n",
              "      <td>3.90</td>\n",
              "      <td>4.47</td>\n",
              "      <td>4.09</td>\n",
              "      <td>20.83</td>\n",
              "      <td>12.27</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>340</th>\n",
              "      <td>412</td>\n",
              "      <td>Newcastle United</td>\n",
              "      <td>M</td>\n",
              "      <td>Gordon</td>\n",
              "      <td>6.2</td>\n",
              "      <td>24.1</td>\n",
              "      <td>6</td>\n",
              "      <td>6</td>\n",
              "      <td>281</td>\n",
              "      <td>110.6</td>\n",
              "      <td>...</td>\n",
              "      <td>1.2</td>\n",
              "      <td>3.8</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4.52</td>\n",
              "      <td>4.52</td>\n",
              "      <td>3.80</td>\n",
              "      <td>3.62</td>\n",
              "      <td>3.98</td>\n",
              "      <td>20.44</td>\n",
              "      <td>12.84</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>330</th>\n",
              "      <td>396</td>\n",
              "      <td>Manchester United</td>\n",
              "      <td>M</td>\n",
              "      <td>Rashford</td>\n",
              "      <td>8.5</td>\n",
              "      <td>10.7</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>132</td>\n",
              "      <td>75.2</td>\n",
              "      <td>...</td>\n",
              "      <td>1.1</td>\n",
              "      <td>3.7</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.87</td>\n",
              "      <td>3.70</td>\n",
              "      <td>4.21</td>\n",
              "      <td>3.87</td>\n",
              "      <td>4.21</td>\n",
              "      <td>19.86</td>\n",
              "      <td>11.78</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>104</th>\n",
              "      <td>14</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>M</td>\n",
              "      <td>Ødegaard</td>\n",
              "      <td>8.4</td>\n",
              "      <td>14.6</td>\n",
              "      <td>4</td>\n",
              "      <td>3</td>\n",
              "      <td>263</td>\n",
              "      <td>114.2</td>\n",
              "      <td>...</td>\n",
              "      <td>1.2</td>\n",
              "      <td>3.6</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.60</td>\n",
              "      <td>3.92</td>\n",
              "      <td>3.92</td>\n",
              "      <td>3.76</td>\n",
              "      <td>4.24</td>\n",
              "      <td>19.44</td>\n",
              "      <td>11.44</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>61</th>\n",
              "      <td>343</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>F</td>\n",
              "      <td>J.Alvarez</td>\n",
              "      <td>6.9</td>\n",
              "      <td>27.8</td>\n",
              "      <td>4</td>\n",
              "      <td>8</td>\n",
              "      <td>333</td>\n",
              "      <td>128.0</td>\n",
              "      <td>...</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.7</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2.00</td>\n",
              "      <td>4.38</td>\n",
              "      <td>4.55</td>\n",
              "      <td>3.87</td>\n",
              "      <td>4.38</td>\n",
              "      <td>19.18</td>\n",
              "      <td>10.93</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>16</th>\n",
              "      <td>135</td>\n",
              "      <td>Brighton</td>\n",
              "      <td>F</td>\n",
              "      <td>João Pedro</td>\n",
              "      <td>5.4</td>\n",
              "      <td>10.4</td>\n",
              "      <td>5</td>\n",
              "      <td>1</td>\n",
              "      <td>184</td>\n",
              "      <td>92.6</td>\n",
              "      <td>...</td>\n",
              "      <td>1.1</td>\n",
              "      <td>3.5</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.65</td>\n",
              "      <td>3.65</td>\n",
              "      <td>3.65</td>\n",
              "      <td>3.95</td>\n",
              "      <td>4.10</td>\n",
              "      <td>19.00</td>\n",
              "      <td>10.95</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>180</th>\n",
              "      <td>143</td>\n",
              "      <td>Brighton</td>\n",
              "      <td>M</td>\n",
              "      <td>Mitoma</td>\n",
              "      <td>6.5</td>\n",
              "      <td>21.4</td>\n",
              "      <td>3</td>\n",
              "      <td>5</td>\n",
              "      <td>200</td>\n",
              "      <td>113.7</td>\n",
              "      <td>...</td>\n",
              "      <td>1.1</td>\n",
              "      <td>3.5</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.65</td>\n",
              "      <td>3.65</td>\n",
              "      <td>3.65</td>\n",
              "      <td>3.95</td>\n",
              "      <td>4.10</td>\n",
              "      <td>19.00</td>\n",
              "      <td>10.95</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>432</th>\n",
              "      <td>20</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>D</td>\n",
              "      <td>Saliba</td>\n",
              "      <td>5.5</td>\n",
              "      <td>35.4</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>334</td>\n",
              "      <td>43.8</td>\n",
              "      <td>...</td>\n",
              "      <td>1.2</td>\n",
              "      <td>3.5</td>\n",
              "      <td>1.0</td>\n",
              "      <td>3.50</td>\n",
              "      <td>3.80</td>\n",
              "      <td>3.80</td>\n",
              "      <td>3.65</td>\n",
              "      <td>4.10</td>\n",
              "      <td>18.85</td>\n",
              "      <td>11.10</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>435</th>\n",
              "      <td>29</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>D</td>\n",
              "      <td>White</td>\n",
              "      <td>5.6</td>\n",
              "      <td>11.1</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>302</td>\n",
              "      <td>62.1</td>\n",
              "      <td>...</td>\n",
              "      <td>1.2</td>\n",
              "      <td>3.5</td>\n",
              "      <td>1.0</td>\n",
              "      <td>3.50</td>\n",
              "      <td>3.80</td>\n",
              "      <td>3.80</td>\n",
              "      <td>3.65</td>\n",
              "      <td>4.10</td>\n",
              "      <td>18.85</td>\n",
              "      <td>11.10</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>436</th>\n",
              "      <td>31</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>D</td>\n",
              "      <td>Zinchenko</td>\n",
              "      <td>5.2</td>\n",
              "      <td>12.9</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>295</td>\n",
              "      <td>61.9</td>\n",
              "      <td>...</td>\n",
              "      <td>1.2</td>\n",
              "      <td>3.5</td>\n",
              "      <td>1.0</td>\n",
              "      <td>3.50</td>\n",
              "      <td>3.80</td>\n",
              "      <td>3.80</td>\n",
              "      <td>3.65</td>\n",
              "      <td>4.10</td>\n",
              "      <td>18.85</td>\n",
              "      <td>11.10</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>85</td>\n",
              "      <td>Bournemouth</td>\n",
              "      <td>F</td>\n",
              "      <td>Solanke</td>\n",
              "      <td>6.8</td>\n",
              "      <td>19.7</td>\n",
              "      <td>8</td>\n",
              "      <td>1</td>\n",
              "      <td>216</td>\n",
              "      <td>114.7</td>\n",
              "      <td>...</td>\n",
              "      <td>0.8</td>\n",
              "      <td>4.1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4.10</td>\n",
              "      <td>3.89</td>\n",
              "      <td>3.68</td>\n",
              "      <td>3.47</td>\n",
              "      <td>3.68</td>\n",
              "      <td>18.82</td>\n",
              "      <td>11.67</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>210</th>\n",
              "      <td>199</td>\n",
              "      <td>Chelsea</td>\n",
              "      <td>M</td>\n",
              "      <td>Enzo</td>\n",
              "      <td>4.8</td>\n",
              "      <td>2.8</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>197</td>\n",
              "      <td>78.5</td>\n",
              "      <td>...</td>\n",
              "      <td>1.1</td>\n",
              "      <td>3.6</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.92</td>\n",
              "      <td>3.60</td>\n",
              "      <td>4.08</td>\n",
              "      <td>3.76</td>\n",
              "      <td>3.44</td>\n",
              "      <td>18.80</td>\n",
              "      <td>11.60</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>602</th>\n",
              "      <td>430</td>\n",
              "      <td>Newcastle United</td>\n",
              "      <td>D</td>\n",
              "      <td>Trippier</td>\n",
              "      <td>6.9</td>\n",
              "      <td>43.3</td>\n",
              "      <td>0</td>\n",
              "      <td>7</td>\n",
              "      <td>403</td>\n",
              "      <td>117.9</td>\n",
              "      <td>...</td>\n",
              "      <td>1.2</td>\n",
              "      <td>3.5</td>\n",
              "      <td>0.5</td>\n",
              "      <td>4.10</td>\n",
              "      <td>4.10</td>\n",
              "      <td>3.50</td>\n",
              "      <td>3.35</td>\n",
              "      <td>3.65</td>\n",
              "      <td>18.70</td>\n",
              "      <td>11.70</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>542</th>\n",
              "      <td>290</td>\n",
              "      <td>Liverpool</td>\n",
              "      <td>D</td>\n",
              "      <td>Alexander-Arnold</td>\n",
              "      <td>8.2</td>\n",
              "      <td>17.5</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "      <td>373</td>\n",
              "      <td>108.9</td>\n",
              "      <td>...</td>\n",
              "      <td>1.2</td>\n",
              "      <td>3.5</td>\n",
              "      <td>0.5</td>\n",
              "      <td>3.50</td>\n",
              "      <td>3.95</td>\n",
              "      <td>3.50</td>\n",
              "      <td>3.95</td>\n",
              "      <td>3.65</td>\n",
              "      <td>18.55</td>\n",
              "      <td>10.95</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>120</th>\n",
              "      <td>43</td>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>M</td>\n",
              "      <td>Douglas Luiz</td>\n",
              "      <td>5.5</td>\n",
              "      <td>6.8</td>\n",
              "      <td>5</td>\n",
              "      <td>2</td>\n",
              "      <td>338</td>\n",
              "      <td>97.5</td>\n",
              "      <td>...</td>\n",
              "      <td>1.1</td>\n",
              "      <td>3.5</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.95</td>\n",
              "      <td>3.50</td>\n",
              "      <td>3.80</td>\n",
              "      <td>3.80</td>\n",
              "      <td>3.35</td>\n",
              "      <td>18.40</td>\n",
              "      <td>11.25</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>100</th>\n",
              "      <td>6</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>M</td>\n",
              "      <td>Havertz</td>\n",
              "      <td>7.1</td>\n",
              "      <td>1.7</td>\n",
              "      <td>4</td>\n",
              "      <td>1</td>\n",
              "      <td>144</td>\n",
              "      <td>68.7</td>\n",
              "      <td>...</td>\n",
              "      <td>1.2</td>\n",
              "      <td>3.4</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.40</td>\n",
              "      <td>3.68</td>\n",
              "      <td>3.68</td>\n",
              "      <td>3.54</td>\n",
              "      <td>3.96</td>\n",
              "      <td>18.26</td>\n",
              "      <td>10.76</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>308</th>\n",
              "      <td>353</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>M</td>\n",
              "      <td>Foden</td>\n",
              "      <td>7.6</td>\n",
              "      <td>10.6</td>\n",
              "      <td>4</td>\n",
              "      <td>4</td>\n",
              "      <td>304</td>\n",
              "      <td>122.7</td>\n",
              "      <td>...</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.5</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2.00</td>\n",
              "      <td>4.10</td>\n",
              "      <td>4.25</td>\n",
              "      <td>3.65</td>\n",
              "      <td>4.10</td>\n",
              "      <td>18.10</td>\n",
              "      <td>10.35</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>410</th>\n",
              "      <td>664</td>\n",
              "      <td>West Ham</td>\n",
              "      <td>M</td>\n",
              "      <td>Ward-Prowse</td>\n",
              "      <td>6.1</td>\n",
              "      <td>9.0</td>\n",
              "      <td>3</td>\n",
              "      <td>5</td>\n",
              "      <td>348</td>\n",
              "      <td>109.3</td>\n",
              "      <td>...</td>\n",
              "      <td>1.0</td>\n",
              "      <td>3.6</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.44</td>\n",
              "      <td>3.28</td>\n",
              "      <td>3.44</td>\n",
              "      <td>3.92</td>\n",
              "      <td>3.92</td>\n",
              "      <td>18.00</td>\n",
              "      <td>10.16</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>175</th>\n",
              "      <td>134</td>\n",
              "      <td>Brighton</td>\n",
              "      <td>M</td>\n",
              "      <td>Gross</td>\n",
              "      <td>6.4</td>\n",
              "      <td>3.2</td>\n",
              "      <td>3</td>\n",
              "      <td>5</td>\n",
              "      <td>297</td>\n",
              "      <td>132.0</td>\n",
              "      <td>...</td>\n",
              "      <td>1.1</td>\n",
              "      <td>3.3</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.43</td>\n",
              "      <td>3.43</td>\n",
              "      <td>3.43</td>\n",
              "      <td>3.69</td>\n",
              "      <td>3.82</td>\n",
              "      <td>17.80</td>\n",
              "      <td>10.29</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>241</th>\n",
              "      <td>249</td>\n",
              "      <td>Everton</td>\n",
              "      <td>M</td>\n",
              "      <td>A.Doucoure</td>\n",
              "      <td>5.6</td>\n",
              "      <td>1.9</td>\n",
              "      <td>6</td>\n",
              "      <td>2</td>\n",
              "      <td>244</td>\n",
              "      <td>108.3</td>\n",
              "      <td>...</td>\n",
              "      <td>0.9</td>\n",
              "      <td>3.8</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.62</td>\n",
              "      <td>3.08</td>\n",
              "      <td>3.98</td>\n",
              "      <td>3.44</td>\n",
              "      <td>3.62</td>\n",
              "      <td>17.74</td>\n",
              "      <td>10.68</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>215</th>\n",
              "      <td>216</td>\n",
              "      <td>Chelsea</td>\n",
              "      <td>M</td>\n",
              "      <td>Sterling</td>\n",
              "      <td>7.1</td>\n",
              "      <td>12.0</td>\n",
              "      <td>5</td>\n",
              "      <td>5</td>\n",
              "      <td>215</td>\n",
              "      <td>113.0</td>\n",
              "      <td>...</td>\n",
              "      <td>1.1</td>\n",
              "      <td>3.4</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.68</td>\n",
              "      <td>3.40</td>\n",
              "      <td>3.82</td>\n",
              "      <td>3.54</td>\n",
              "      <td>3.26</td>\n",
              "      <td>17.70</td>\n",
              "      <td>10.90</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>430</th>\n",
              "      <td>5</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>D</td>\n",
              "      <td>Gabriel</td>\n",
              "      <td>4.9</td>\n",
              "      <td>15.1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>234</td>\n",
              "      <td>36.0</td>\n",
              "      <td>...</td>\n",
              "      <td>1.2</td>\n",
              "      <td>3.3</td>\n",
              "      <td>1.0</td>\n",
              "      <td>3.30</td>\n",
              "      <td>3.56</td>\n",
              "      <td>3.56</td>\n",
              "      <td>3.43</td>\n",
              "      <td>3.82</td>\n",
              "      <td>17.67</td>\n",
              "      <td>10.42</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>595</th>\n",
              "      <td>407</td>\n",
              "      <td>Newcastle United</td>\n",
              "      <td>D</td>\n",
              "      <td>Burn</td>\n",
              "      <td>4.4</td>\n",
              "      <td>3.8</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>208</td>\n",
              "      <td>48.3</td>\n",
              "      <td>...</td>\n",
              "      <td>1.2</td>\n",
              "      <td>3.3</td>\n",
              "      <td>0.5</td>\n",
              "      <td>3.82</td>\n",
              "      <td>3.82</td>\n",
              "      <td>3.30</td>\n",
              "      <td>3.17</td>\n",
              "      <td>3.43</td>\n",
              "      <td>17.54</td>\n",
              "      <td>10.94</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>275</th>\n",
              "      <td>303</td>\n",
              "      <td>Liverpool</td>\n",
              "      <td>M</td>\n",
              "      <td>Luis Díaz</td>\n",
              "      <td>7.4</td>\n",
              "      <td>6.5</td>\n",
              "      <td>3</td>\n",
              "      <td>1</td>\n",
              "      <td>126</td>\n",
              "      <td>75.4</td>\n",
              "      <td>...</td>\n",
              "      <td>1.2</td>\n",
              "      <td>3.3</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.30</td>\n",
              "      <td>3.69</td>\n",
              "      <td>3.30</td>\n",
              "      <td>3.69</td>\n",
              "      <td>3.43</td>\n",
              "      <td>17.41</td>\n",
              "      <td>10.29</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>116</th>\n",
              "      <td>34</td>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>M</td>\n",
              "      <td>Bailey</td>\n",
              "      <td>5.6</td>\n",
              "      <td>2.8</td>\n",
              "      <td>5</td>\n",
              "      <td>5</td>\n",
              "      <td>193</td>\n",
              "      <td>72.5</td>\n",
              "      <td>...</td>\n",
              "      <td>1.1</td>\n",
              "      <td>3.3</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.69</td>\n",
              "      <td>3.30</td>\n",
              "      <td>3.56</td>\n",
              "      <td>3.56</td>\n",
              "      <td>3.17</td>\n",
              "      <td>17.28</td>\n",
              "      <td>10.55</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>129</th>\n",
              "      <td>599</td>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>M</td>\n",
              "      <td>Diaby</td>\n",
              "      <td>6.7</td>\n",
              "      <td>10.2</td>\n",
              "      <td>3</td>\n",
              "      <td>7</td>\n",
              "      <td>227</td>\n",
              "      <td>94.8</td>\n",
              "      <td>...</td>\n",
              "      <td>1.1</td>\n",
              "      <td>3.3</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.69</td>\n",
              "      <td>3.30</td>\n",
              "      <td>3.56</td>\n",
              "      <td>3.56</td>\n",
              "      <td>3.17</td>\n",
              "      <td>17.28</td>\n",
              "      <td>10.55</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>434</th>\n",
              "      <td>25</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>D</td>\n",
              "      <td>Tomiyasu</td>\n",
              "      <td>4.5</td>\n",
              "      <td>0.4</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>134</td>\n",
              "      <td>23.3</td>\n",
              "      <td>...</td>\n",
              "      <td>1.2</td>\n",
              "      <td>3.2</td>\n",
              "      <td>1.0</td>\n",
              "      <td>3.20</td>\n",
              "      <td>3.44</td>\n",
              "      <td>3.44</td>\n",
              "      <td>3.32</td>\n",
              "      <td>3.68</td>\n",
              "      <td>17.08</td>\n",
              "      <td>10.08</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>568</th>\n",
              "      <td>342</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>D</td>\n",
              "      <td>Aké</td>\n",
              "      <td>5.0</td>\n",
              "      <td>5.1</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>205</td>\n",
              "      <td>46.5</td>\n",
              "      <td>...</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.3</td>\n",
              "      <td>0.8</td>\n",
              "      <td>2.00</td>\n",
              "      <td>3.82</td>\n",
              "      <td>3.95</td>\n",
              "      <td>3.43</td>\n",
              "      <td>3.82</td>\n",
              "      <td>17.02</td>\n",
              "      <td>9.77</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>390</th>\n",
              "      <td>501</td>\n",
              "      <td>Tottenham</td>\n",
              "      <td>M</td>\n",
              "      <td>Kulusevski</td>\n",
              "      <td>7.2</td>\n",
              "      <td>4.6</td>\n",
              "      <td>5</td>\n",
              "      <td>2</td>\n",
              "      <td>270</td>\n",
              "      <td>148.1</td>\n",
              "      <td>...</td>\n",
              "      <td>1.0</td>\n",
              "      <td>3.4</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.54</td>\n",
              "      <td>3.26</td>\n",
              "      <td>3.68</td>\n",
              "      <td>3.26</td>\n",
              "      <td>3.26</td>\n",
              "      <td>17.00</td>\n",
              "      <td>10.48</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>392</th>\n",
              "      <td>504</td>\n",
              "      <td>Tottenham</td>\n",
              "      <td>M</td>\n",
              "      <td>Maddison</td>\n",
              "      <td>7.8</td>\n",
              "      <td>8.3</td>\n",
              "      <td>3</td>\n",
              "      <td>6</td>\n",
              "      <td>230</td>\n",
              "      <td>109.6</td>\n",
              "      <td>...</td>\n",
              "      <td>1.0</td>\n",
              "      <td>3.4</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.54</td>\n",
              "      <td>3.26</td>\n",
              "      <td>3.68</td>\n",
              "      <td>3.26</td>\n",
              "      <td>3.26</td>\n",
              "      <td>17.00</td>\n",
              "      <td>10.48</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>336</th>\n",
              "      <td>402</td>\n",
              "      <td>Newcastle United</td>\n",
              "      <td>M</td>\n",
              "      <td>Almirón</td>\n",
              "      <td>6.2</td>\n",
              "      <td>4.6</td>\n",
              "      <td>3</td>\n",
              "      <td>1</td>\n",
              "      <td>189</td>\n",
              "      <td>69.5</td>\n",
              "      <td>...</td>\n",
              "      <td>1.2</td>\n",
              "      <td>3.2</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.68</td>\n",
              "      <td>3.68</td>\n",
              "      <td>3.20</td>\n",
              "      <td>3.08</td>\n",
              "      <td>3.32</td>\n",
              "      <td>16.96</td>\n",
              "      <td>10.56</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>550</th>\n",
              "      <td>313</td>\n",
              "      <td>Liverpool</td>\n",
              "      <td>D</td>\n",
              "      <td>Virgil</td>\n",
              "      <td>6.2</td>\n",
              "      <td>10.1</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>305</td>\n",
              "      <td>73.9</td>\n",
              "      <td>...</td>\n",
              "      <td>1.2</td>\n",
              "      <td>3.2</td>\n",
              "      <td>0.5</td>\n",
              "      <td>3.20</td>\n",
              "      <td>3.56</td>\n",
              "      <td>3.20</td>\n",
              "      <td>3.56</td>\n",
              "      <td>3.32</td>\n",
              "      <td>16.84</td>\n",
              "      <td>9.96</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>12</th>\n",
              "      <td>119</td>\n",
              "      <td>Brentford</td>\n",
              "      <td>F</td>\n",
              "      <td>Wissa</td>\n",
              "      <td>5.8</td>\n",
              "      <td>6.9</td>\n",
              "      <td>3</td>\n",
              "      <td>2</td>\n",
              "      <td>169</td>\n",
              "      <td>79.3</td>\n",
              "      <td>...</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.4</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2.00</td>\n",
              "      <td>3.82</td>\n",
              "      <td>3.54</td>\n",
              "      <td>3.82</td>\n",
              "      <td>3.54</td>\n",
              "      <td>16.72</td>\n",
              "      <td>9.36</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>471</th>\n",
              "      <td>129</td>\n",
              "      <td>Brighton</td>\n",
              "      <td>D</td>\n",
              "      <td>Dunk</td>\n",
              "      <td>5.0</td>\n",
              "      <td>3.0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>200</td>\n",
              "      <td>56.7</td>\n",
              "      <td>...</td>\n",
              "      <td>1.1</td>\n",
              "      <td>3.1</td>\n",
              "      <td>0.3</td>\n",
              "      <td>3.21</td>\n",
              "      <td>3.21</td>\n",
              "      <td>3.21</td>\n",
              "      <td>3.43</td>\n",
              "      <td>3.54</td>\n",
              "      <td>16.60</td>\n",
              "      <td>9.63</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>265</th>\n",
              "      <td>591</td>\n",
              "      <td>Fulham</td>\n",
              "      <td>M</td>\n",
              "      <td>Willian</td>\n",
              "      <td>5.3</td>\n",
              "      <td>1.2</td>\n",
              "      <td>4</td>\n",
              "      <td>2</td>\n",
              "      <td>214</td>\n",
              "      <td>79.1</td>\n",
              "      <td>...</td>\n",
              "      <td>0.9</td>\n",
              "      <td>3.3</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.43</td>\n",
              "      <td>3.43</td>\n",
              "      <td>3.04</td>\n",
              "      <td>3.17</td>\n",
              "      <td>3.43</td>\n",
              "      <td>16.50</td>\n",
              "      <td>9.90</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>394</th>\n",
              "      <td>509</td>\n",
              "      <td>Tottenham</td>\n",
              "      <td>M</td>\n",
              "      <td>Richarlison</td>\n",
              "      <td>6.7</td>\n",
              "      <td>2.8</td>\n",
              "      <td>4</td>\n",
              "      <td>3</td>\n",
              "      <td>125</td>\n",
              "      <td>70.0</td>\n",
              "      <td>...</td>\n",
              "      <td>1.0</td>\n",
              "      <td>3.3</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.43</td>\n",
              "      <td>3.17</td>\n",
              "      <td>3.56</td>\n",
              "      <td>3.17</td>\n",
              "      <td>3.17</td>\n",
              "      <td>16.50</td>\n",
              "      <td>10.16</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>644</th>\n",
              "      <td>506</td>\n",
              "      <td>Tottenham</td>\n",
              "      <td>D</td>\n",
              "      <td>Pedro Porro</td>\n",
              "      <td>5.5</td>\n",
              "      <td>22.8</td>\n",
              "      <td>0</td>\n",
              "      <td>6</td>\n",
              "      <td>374</td>\n",
              "      <td>102.3</td>\n",
              "      <td>...</td>\n",
              "      <td>1.0</td>\n",
              "      <td>3.3</td>\n",
              "      <td>0.1</td>\n",
              "      <td>3.43</td>\n",
              "      <td>3.17</td>\n",
              "      <td>3.56</td>\n",
              "      <td>3.17</td>\n",
              "      <td>3.17</td>\n",
              "      <td>16.50</td>\n",
              "      <td>10.16</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>8</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>F</td>\n",
              "      <td>G.Jesus</td>\n",
              "      <td>8.0</td>\n",
              "      <td>4.9</td>\n",
              "      <td>3</td>\n",
              "      <td>2</td>\n",
              "      <td>143</td>\n",
              "      <td>77.5</td>\n",
              "      <td>...</td>\n",
              "      <td>1.2</td>\n",
              "      <td>3.1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.10</td>\n",
              "      <td>3.32</td>\n",
              "      <td>3.32</td>\n",
              "      <td>3.21</td>\n",
              "      <td>3.54</td>\n",
              "      <td>16.49</td>\n",
              "      <td>9.74</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>50 rows × 23 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-19d14f40-f721-4f46-a87b-5b5a76487850')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-19d14f40-f721-4f46-a87b-5b5a76487850 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-19d14f40-f721-4f46-a87b-5b5a76487850');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-7f267dfc-a455-451f-b842-9cbe5409cf1a\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-7f267dfc-a455-451f-b842-9cbe5409cf1a')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-7f267dfc-a455-451f-b842-9cbe5409cf1a button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 48
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "rawdfgw228x.nlargest(50, '3GW Total')"
      ],
      "metadata": {
        "id": "6NQhOGTZgSrO",
        "outputId": "edc7777e-5212-440d-a8b0-6c0dd5d22999",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        }
      },
      "execution_count": 49,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "      id                     team pos              name  cost  \\\n",
              "277  308                Liverpool   M             Salah  13.2   \n",
              "62   355          Manchester City   F           Haaland  13.9   \n",
              "30   211                  Chelsea   F         N.Jackson   6.9   \n",
              "107   19                  Arsenal   M              Saka   9.0   \n",
              "5     60              Aston Villa   F           Watkins   8.7   \n",
              "397  516                Tottenham   M               Son   9.8   \n",
              "158  108                Brentford   M            Mbeumo   6.9   \n",
              "67   415         Newcastle United   F              Isak   7.6   \n",
              "321  373        Manchester United   M       B.Fernandes   8.2   \n",
              "217  362                  Chelsea   M            Palmer   5.6   \n",
              "440   36              Aston Villa   D              Cash   4.7   \n",
              "340  412         Newcastle United   M            Gordon   6.2   \n",
              "50   293                Liverpool   F            Darwin   7.5   \n",
              "401  526                 West Ham   M             Bowen   7.8   \n",
              "330  396        Manchester United   M          Rashford   8.5   \n",
              "602  430         Newcastle United   D          Trippier   6.9   \n",
              "9     85              Bournemouth   F           Solanke   6.8   \n",
              "210  199                  Chelsea   M              Enzo   4.8   \n",
              "104   14                  Arsenal   M          Ødegaard   8.4   \n",
              "120   43              Aston Villa   M      Douglas Luiz   5.5   \n",
              "432   20                  Arsenal   D            Saliba   5.5   \n",
              "435   29                  Arsenal   D             White   5.6   \n",
              "436   31                  Arsenal   D         Zinchenko   5.2   \n",
              "16   135                 Brighton   F        João Pedro   5.4   \n",
              "180  143                 Brighton   M            Mitoma   6.5   \n",
              "542  290                Liverpool   D  Alexander-Arnold   8.2   \n",
              "595  407         Newcastle United   D              Burn   4.4   \n",
              "61   343          Manchester City   F         J.Alvarez   6.9   \n",
              "215  216                  Chelsea   M          Sterling   7.1   \n",
              "100    6                  Arsenal   M           Havertz   7.1   \n",
              "241  249                  Everton   M        A.Doucoure   5.6   \n",
              "336  402         Newcastle United   M           Almirón   6.2   \n",
              "116   34              Aston Villa   M            Bailey   5.6   \n",
              "129  599              Aston Villa   M             Diaby   6.7   \n",
              "390  501                Tottenham   M        Kulusevski   7.2   \n",
              "392  504                Tottenham   M          Maddison   7.8   \n",
              "430    5                  Arsenal   D           Gabriel   4.9   \n",
              "308  353          Manchester City   M             Foden   7.6   \n",
              "175  134                 Brighton   M             Gross   6.4   \n",
              "275  303                Liverpool   M         Luis Díaz   7.4   \n",
              "394  509                Tottenham   M       Richarlison   6.7   \n",
              "410  664                 West Ham   M       Ward-Prowse   6.1   \n",
              "644  506                Tottenham   D       Pedro Porro   5.5   \n",
              "434   25                  Arsenal   D          Tomiyasu   4.5   \n",
              "550  313                Liverpool   D            Virgil   6.2   \n",
              "40   246                  Everton   F     Calvert-Lewin   5.8   \n",
              "265  591                   Fulham   M           Willian   5.3   \n",
              "123   50              Aston Villa   M            McGinn   5.5   \n",
              "417  557  Wolverhampton Wanderers   M          Hee Chan   5.8   \n",
              "568  342          Manchester City   D               Aké   5.0   \n",
              "\n",
              "     selected_by_percent  goals_scored  assists  bps  ict_index  ...  \\\n",
              "277                 54.0            11        7  387      188.3  ...   \n",
              "62                  63.6            14        5  417      159.8  ...   \n",
              "30                   7.0             7        1  198      107.6  ...   \n",
              "107                 58.4             5        8  361      164.2  ...   \n",
              "5                   49.7             9        9  370      149.7  ...   \n",
              "397                 42.9            10        4  368      150.0  ...   \n",
              "158                  9.3             7        4  250      122.1  ...   \n",
              "67                  16.4             7        0  213       68.3  ...   \n",
              "321                 10.2             3        3  279      141.7  ...   \n",
              "217                 22.9             6        4  258      101.8  ...   \n",
              "440                 21.9             2        1  216       63.4  ...   \n",
              "340                 24.1             6        6  281      110.6  ...   \n",
              "50                  15.4             4        7  171       96.5  ...   \n",
              "401                 22.0            10        1  266      126.5  ...   \n",
              "330                 10.7             2        2  132       75.2  ...   \n",
              "602                 43.3             0        7  403      117.9  ...   \n",
              "9                   19.7             8        1  216      114.7  ...   \n",
              "210                  2.8             2        1  197       78.5  ...   \n",
              "104                 14.6             4        3  263      114.2  ...   \n",
              "120                  6.8             5        2  338       97.5  ...   \n",
              "432                 35.4             1        1  334       43.8  ...   \n",
              "435                 11.1             1        2  302       62.1  ...   \n",
              "436                 12.9             1        1  295       61.9  ...   \n",
              "16                  10.4             5        1  184       92.6  ...   \n",
              "180                 21.4             3        5  200      113.7  ...   \n",
              "542                 17.5             2        3  373      108.9  ...   \n",
              "595                  3.8             2        0  208       48.3  ...   \n",
              "61                  27.8             4        8  333      128.0  ...   \n",
              "215                 12.0             5        5  215      113.0  ...   \n",
              "100                  1.7             4        1  144       68.7  ...   \n",
              "241                  1.9             6        2  244      108.3  ...   \n",
              "336                  4.6             3        1  189       69.5  ...   \n",
              "116                  2.8             5        5  193       72.5  ...   \n",
              "129                 10.2             3        7  227       94.8  ...   \n",
              "390                  4.6             5        2  270      148.1  ...   \n",
              "392                  8.3             3        6  230      109.6  ...   \n",
              "430                 15.1             0        0  234       36.0  ...   \n",
              "308                 10.6             4        4  304      122.7  ...   \n",
              "175                  3.2             3        5  297      132.0  ...   \n",
              "275                  6.5             3        1  126       75.4  ...   \n",
              "394                  2.8             4        3  125       70.0  ...   \n",
              "410                  9.0             3        5  348      109.3  ...   \n",
              "644                 22.8             0        6  374      102.3  ...   \n",
              "434                  0.4             1        1  134       23.3  ...   \n",
              "550                 10.1             1        2  305       73.9  ...   \n",
              "40                   1.2             3        1  101       60.7  ...   \n",
              "265                  1.2             4        2  214       79.1  ...   \n",
              "123                  1.7             4        2  267       91.9  ...   \n",
              "417                 11.2             8        2  232       86.0  ...   \n",
              "568                  5.1             2        1  205       46.5  ...   \n",
              "\n",
              "     home_adjustment  xPallgw  xCSP  gw18  gw19  gw20  gw21  gw22  5GW Total  \\\n",
              "277              1.2      5.9   NaN  5.90  7.07  5.90  7.07  6.29      32.23   \n",
              "62               NaN      5.7   NaN  2.00  7.18  7.55  6.07  7.18      29.98   \n",
              "30               1.1      4.5   NaN  5.00  4.50  5.25  4.75  4.25      23.75   \n",
              "107              1.2      4.5   NaN  4.50  5.00  5.00  4.75  5.50      24.75   \n",
              "5                1.1      4.3   NaN  4.99  4.30  4.76  4.76  4.07      22.88   \n",
              "397              1.0      4.5   NaN  4.75  4.25  5.00  4.25  4.25      22.50   \n",
              "158              NaN      5.2   NaN  2.00  6.16  5.52  6.16  5.52      25.36   \n",
              "67               1.2      4.0   NaN  4.80  4.80  4.00  3.80  4.20      21.60   \n",
              "321              1.1      4.2   NaN  4.42  4.20  4.86  4.42  4.86      22.76   \n",
              "217              1.1      4.1   NaN  4.52  4.10  4.73  4.31  3.89      21.55   \n",
              "440              1.1      4.0   0.4  4.60  4.00  4.40  4.40  3.80      21.20   \n",
              "340              1.2      3.8   NaN  4.52  4.52  3.80  3.62  3.98      20.44   \n",
              "50               1.2      3.9   NaN  3.90  4.47  3.90  4.47  4.09      20.83   \n",
              "401              1.0      4.3   NaN  4.07  3.84  4.07  4.76  4.76      21.50   \n",
              "330              1.1      3.7   NaN  3.87  3.70  4.21  3.87  4.21      19.86   \n",
              "602              1.2      3.5   0.5  4.10  4.10  3.50  3.35  3.65      18.70   \n",
              "9                0.8      4.1   NaN  4.10  3.89  3.68  3.47  3.68      18.82   \n",
              "210              1.1      3.6   NaN  3.92  3.60  4.08  3.76  3.44      18.80   \n",
              "104              1.2      3.6   NaN  3.60  3.92  3.92  3.76  4.24      19.44   \n",
              "120              1.1      3.5   NaN  3.95  3.50  3.80  3.80  3.35      18.40   \n",
              "432              1.2      3.5   1.0  3.50  3.80  3.80  3.65  4.10      18.85   \n",
              "435              1.2      3.5   1.0  3.50  3.80  3.80  3.65  4.10      18.85   \n",
              "436              1.2      3.5   1.0  3.50  3.80  3.80  3.65  4.10      18.85   \n",
              "16               1.1      3.5   NaN  3.65  3.65  3.65  3.95  4.10      19.00   \n",
              "180              1.1      3.5   NaN  3.65  3.65  3.65  3.95  4.10      19.00   \n",
              "542              1.2      3.5   0.5  3.50  3.95  3.50  3.95  3.65      18.55   \n",
              "595              1.2      3.3   0.5  3.82  3.82  3.30  3.17  3.43      17.54   \n",
              "61               NaN      3.7   NaN  2.00  4.38  4.55  3.87  4.38      19.18   \n",
              "215              1.1      3.4   NaN  3.68  3.40  3.82  3.54  3.26      17.70   \n",
              "100              1.2      3.4   NaN  3.40  3.68  3.68  3.54  3.96      18.26   \n",
              "241              0.9      3.8   NaN  3.62  3.08  3.98  3.44  3.62      17.74   \n",
              "336              1.2      3.2   NaN  3.68  3.68  3.20  3.08  3.32      16.96   \n",
              "116              1.1      3.3   NaN  3.69  3.30  3.56  3.56  3.17      17.28   \n",
              "129              1.1      3.3   NaN  3.69  3.30  3.56  3.56  3.17      17.28   \n",
              "390              1.0      3.4   NaN  3.54  3.26  3.68  3.26  3.26      17.00   \n",
              "392              1.0      3.4   NaN  3.54  3.26  3.68  3.26  3.26      17.00   \n",
              "430              1.2      3.3   1.0  3.30  3.56  3.56  3.43  3.82      17.67   \n",
              "308              NaN      3.5   NaN  2.00  4.10  4.25  3.65  4.10      18.10   \n",
              "175              1.1      3.3   NaN  3.43  3.43  3.43  3.69  3.82      17.80   \n",
              "275              1.2      3.3   NaN  3.30  3.69  3.30  3.69  3.43      17.41   \n",
              "394              1.0      3.3   NaN  3.43  3.17  3.56  3.17  3.17      16.50   \n",
              "410              1.0      3.6   NaN  3.44  3.28  3.44  3.92  3.92      18.00   \n",
              "644              1.0      3.3   0.1  3.43  3.17  3.56  3.17  3.17      16.50   \n",
              "434              1.2      3.2   1.0  3.20  3.44  3.44  3.32  3.68      17.08   \n",
              "550              1.2      3.2   0.5  3.20  3.56  3.20  3.56  3.32      16.84   \n",
              "40               0.9      3.5   NaN  3.35  2.90  3.65  3.20  3.35      16.45   \n",
              "265              0.9      3.3   NaN  3.43  3.43  3.04  3.17  3.43      16.50   \n",
              "123              1.1      3.1   NaN  3.43  3.10  3.32  3.32  2.99      16.16   \n",
              "417              0.8      3.6   NaN  3.28  3.12  3.44  3.12  3.12      16.08   \n",
              "568              NaN      3.3   0.8  2.00  3.82  3.95  3.43  3.82      17.02   \n",
              "\n",
              "     3GW Total  \n",
              "277      18.87  \n",
              "62       16.73  \n",
              "30       14.75  \n",
              "107      14.50  \n",
              "5        14.05  \n",
              "397      14.00  \n",
              "158      13.68  \n",
              "67       13.60  \n",
              "321      13.48  \n",
              "217      13.35  \n",
              "440      13.00  \n",
              "340      12.84  \n",
              "50       12.27  \n",
              "401      11.98  \n",
              "330      11.78  \n",
              "602      11.70  \n",
              "9        11.67  \n",
              "210      11.60  \n",
              "104      11.44  \n",
              "120      11.25  \n",
              "432      11.10  \n",
              "435      11.10  \n",
              "436      11.10  \n",
              "16       10.95  \n",
              "180      10.95  \n",
              "542      10.95  \n",
              "595      10.94  \n",
              "61       10.93  \n",
              "215      10.90  \n",
              "100      10.76  \n",
              "241      10.68  \n",
              "336      10.56  \n",
              "116      10.55  \n",
              "129      10.55  \n",
              "390      10.48  \n",
              "392      10.48  \n",
              "430      10.42  \n",
              "308      10.35  \n",
              "175      10.29  \n",
              "275      10.29  \n",
              "394      10.16  \n",
              "410      10.16  \n",
              "644      10.16  \n",
              "434      10.08  \n",
              "550       9.96  \n",
              "40        9.90  \n",
              "265       9.90  \n",
              "123       9.85  \n",
              "417       9.84  \n",
              "568       9.77  \n",
              "\n",
              "[50 rows x 23 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-b5c0769f-ed33-41dc-89cf-64883a4be1ff\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>team</th>\n",
              "      <th>pos</th>\n",
              "      <th>name</th>\n",
              "      <th>cost</th>\n",
              "      <th>selected_by_percent</th>\n",
              "      <th>goals_scored</th>\n",
              "      <th>assists</th>\n",
              "      <th>bps</th>\n",
              "      <th>ict_index</th>\n",
              "      <th>...</th>\n",
              "      <th>home_adjustment</th>\n",
              "      <th>xPallgw</th>\n",
              "      <th>xCSP</th>\n",
              "      <th>gw18</th>\n",
              "      <th>gw19</th>\n",
              "      <th>gw20</th>\n",
              "      <th>gw21</th>\n",
              "      <th>gw22</th>\n",
              "      <th>5GW Total</th>\n",
              "      <th>3GW Total</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>277</th>\n",
              "      <td>308</td>\n",
              "      <td>Liverpool</td>\n",
              "      <td>M</td>\n",
              "      <td>Salah</td>\n",
              "      <td>13.2</td>\n",
              "      <td>54.0</td>\n",
              "      <td>11</td>\n",
              "      <td>7</td>\n",
              "      <td>387</td>\n",
              "      <td>188.3</td>\n",
              "      <td>...</td>\n",
              "      <td>1.2</td>\n",
              "      <td>5.9</td>\n",
              "      <td>NaN</td>\n",
              "      <td>5.90</td>\n",
              "      <td>7.07</td>\n",
              "      <td>5.90</td>\n",
              "      <td>7.07</td>\n",
              "      <td>6.29</td>\n",
              "      <td>32.23</td>\n",
              "      <td>18.87</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>62</th>\n",
              "      <td>355</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>F</td>\n",
              "      <td>Haaland</td>\n",
              "      <td>13.9</td>\n",
              "      <td>63.6</td>\n",
              "      <td>14</td>\n",
              "      <td>5</td>\n",
              "      <td>417</td>\n",
              "      <td>159.8</td>\n",
              "      <td>...</td>\n",
              "      <td>NaN</td>\n",
              "      <td>5.7</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2.00</td>\n",
              "      <td>7.18</td>\n",
              "      <td>7.55</td>\n",
              "      <td>6.07</td>\n",
              "      <td>7.18</td>\n",
              "      <td>29.98</td>\n",
              "      <td>16.73</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>30</th>\n",
              "      <td>211</td>\n",
              "      <td>Chelsea</td>\n",
              "      <td>F</td>\n",
              "      <td>N.Jackson</td>\n",
              "      <td>6.9</td>\n",
              "      <td>7.0</td>\n",
              "      <td>7</td>\n",
              "      <td>1</td>\n",
              "      <td>198</td>\n",
              "      <td>107.6</td>\n",
              "      <td>...</td>\n",
              "      <td>1.1</td>\n",
              "      <td>4.5</td>\n",
              "      <td>NaN</td>\n",
              "      <td>5.00</td>\n",
              "      <td>4.50</td>\n",
              "      <td>5.25</td>\n",
              "      <td>4.75</td>\n",
              "      <td>4.25</td>\n",
              "      <td>23.75</td>\n",
              "      <td>14.75</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>107</th>\n",
              "      <td>19</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>M</td>\n",
              "      <td>Saka</td>\n",
              "      <td>9.0</td>\n",
              "      <td>58.4</td>\n",
              "      <td>5</td>\n",
              "      <td>8</td>\n",
              "      <td>361</td>\n",
              "      <td>164.2</td>\n",
              "      <td>...</td>\n",
              "      <td>1.2</td>\n",
              "      <td>4.5</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4.50</td>\n",
              "      <td>5.00</td>\n",
              "      <td>5.00</td>\n",
              "      <td>4.75</td>\n",
              "      <td>5.50</td>\n",
              "      <td>24.75</td>\n",
              "      <td>14.50</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>60</td>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>F</td>\n",
              "      <td>Watkins</td>\n",
              "      <td>8.7</td>\n",
              "      <td>49.7</td>\n",
              "      <td>9</td>\n",
              "      <td>9</td>\n",
              "      <td>370</td>\n",
              "      <td>149.7</td>\n",
              "      <td>...</td>\n",
              "      <td>1.1</td>\n",
              "      <td>4.3</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4.99</td>\n",
              "      <td>4.30</td>\n",
              "      <td>4.76</td>\n",
              "      <td>4.76</td>\n",
              "      <td>4.07</td>\n",
              "      <td>22.88</td>\n",
              "      <td>14.05</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>397</th>\n",
              "      <td>516</td>\n",
              "      <td>Tottenham</td>\n",
              "      <td>M</td>\n",
              "      <td>Son</td>\n",
              "      <td>9.8</td>\n",
              "      <td>42.9</td>\n",
              "      <td>10</td>\n",
              "      <td>4</td>\n",
              "      <td>368</td>\n",
              "      <td>150.0</td>\n",
              "      <td>...</td>\n",
              "      <td>1.0</td>\n",
              "      <td>4.5</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4.75</td>\n",
              "      <td>4.25</td>\n",
              "      <td>5.00</td>\n",
              "      <td>4.25</td>\n",
              "      <td>4.25</td>\n",
              "      <td>22.50</td>\n",
              "      <td>14.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>158</th>\n",
              "      <td>108</td>\n",
              "      <td>Brentford</td>\n",
              "      <td>M</td>\n",
              "      <td>Mbeumo</td>\n",
              "      <td>6.9</td>\n",
              "      <td>9.3</td>\n",
              "      <td>7</td>\n",
              "      <td>4</td>\n",
              "      <td>250</td>\n",
              "      <td>122.1</td>\n",
              "      <td>...</td>\n",
              "      <td>NaN</td>\n",
              "      <td>5.2</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2.00</td>\n",
              "      <td>6.16</td>\n",
              "      <td>5.52</td>\n",
              "      <td>6.16</td>\n",
              "      <td>5.52</td>\n",
              "      <td>25.36</td>\n",
              "      <td>13.68</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>67</th>\n",
              "      <td>415</td>\n",
              "      <td>Newcastle United</td>\n",
              "      <td>F</td>\n",
              "      <td>Isak</td>\n",
              "      <td>7.6</td>\n",
              "      <td>16.4</td>\n",
              "      <td>7</td>\n",
              "      <td>0</td>\n",
              "      <td>213</td>\n",
              "      <td>68.3</td>\n",
              "      <td>...</td>\n",
              "      <td>1.2</td>\n",
              "      <td>4.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4.80</td>\n",
              "      <td>4.80</td>\n",
              "      <td>4.00</td>\n",
              "      <td>3.80</td>\n",
              "      <td>4.20</td>\n",
              "      <td>21.60</td>\n",
              "      <td>13.60</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>321</th>\n",
              "      <td>373</td>\n",
              "      <td>Manchester United</td>\n",
              "      <td>M</td>\n",
              "      <td>B.Fernandes</td>\n",
              "      <td>8.2</td>\n",
              "      <td>10.2</td>\n",
              "      <td>3</td>\n",
              "      <td>3</td>\n",
              "      <td>279</td>\n",
              "      <td>141.7</td>\n",
              "      <td>...</td>\n",
              "      <td>1.1</td>\n",
              "      <td>4.2</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4.42</td>\n",
              "      <td>4.20</td>\n",
              "      <td>4.86</td>\n",
              "      <td>4.42</td>\n",
              "      <td>4.86</td>\n",
              "      <td>22.76</td>\n",
              "      <td>13.48</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>217</th>\n",
              "      <td>362</td>\n",
              "      <td>Chelsea</td>\n",
              "      <td>M</td>\n",
              "      <td>Palmer</td>\n",
              "      <td>5.6</td>\n",
              "      <td>22.9</td>\n",
              "      <td>6</td>\n",
              "      <td>4</td>\n",
              "      <td>258</td>\n",
              "      <td>101.8</td>\n",
              "      <td>...</td>\n",
              "      <td>1.1</td>\n",
              "      <td>4.1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4.52</td>\n",
              "      <td>4.10</td>\n",
              "      <td>4.73</td>\n",
              "      <td>4.31</td>\n",
              "      <td>3.89</td>\n",
              "      <td>21.55</td>\n",
              "      <td>13.35</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>440</th>\n",
              "      <td>36</td>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>D</td>\n",
              "      <td>Cash</td>\n",
              "      <td>4.7</td>\n",
              "      <td>21.9</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>216</td>\n",
              "      <td>63.4</td>\n",
              "      <td>...</td>\n",
              "      <td>1.1</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.4</td>\n",
              "      <td>4.60</td>\n",
              "      <td>4.00</td>\n",
              "      <td>4.40</td>\n",
              "      <td>4.40</td>\n",
              "      <td>3.80</td>\n",
              "      <td>21.20</td>\n",
              "      <td>13.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>340</th>\n",
              "      <td>412</td>\n",
              "      <td>Newcastle United</td>\n",
              "      <td>M</td>\n",
              "      <td>Gordon</td>\n",
              "      <td>6.2</td>\n",
              "      <td>24.1</td>\n",
              "      <td>6</td>\n",
              "      <td>6</td>\n",
              "      <td>281</td>\n",
              "      <td>110.6</td>\n",
              "      <td>...</td>\n",
              "      <td>1.2</td>\n",
              "      <td>3.8</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4.52</td>\n",
              "      <td>4.52</td>\n",
              "      <td>3.80</td>\n",
              "      <td>3.62</td>\n",
              "      <td>3.98</td>\n",
              "      <td>20.44</td>\n",
              "      <td>12.84</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>50</th>\n",
              "      <td>293</td>\n",
              "      <td>Liverpool</td>\n",
              "      <td>F</td>\n",
              "      <td>Darwin</td>\n",
              "      <td>7.5</td>\n",
              "      <td>15.4</td>\n",
              "      <td>4</td>\n",
              "      <td>7</td>\n",
              "      <td>171</td>\n",
              "      <td>96.5</td>\n",
              "      <td>...</td>\n",
              "      <td>1.2</td>\n",
              "      <td>3.9</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.90</td>\n",
              "      <td>4.47</td>\n",
              "      <td>3.90</td>\n",
              "      <td>4.47</td>\n",
              "      <td>4.09</td>\n",
              "      <td>20.83</td>\n",
              "      <td>12.27</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>401</th>\n",
              "      <td>526</td>\n",
              "      <td>West Ham</td>\n",
              "      <td>M</td>\n",
              "      <td>Bowen</td>\n",
              "      <td>7.8</td>\n",
              "      <td>22.0</td>\n",
              "      <td>10</td>\n",
              "      <td>1</td>\n",
              "      <td>266</td>\n",
              "      <td>126.5</td>\n",
              "      <td>...</td>\n",
              "      <td>1.0</td>\n",
              "      <td>4.3</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4.07</td>\n",
              "      <td>3.84</td>\n",
              "      <td>4.07</td>\n",
              "      <td>4.76</td>\n",
              "      <td>4.76</td>\n",
              "      <td>21.50</td>\n",
              "      <td>11.98</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>330</th>\n",
              "      <td>396</td>\n",
              "      <td>Manchester United</td>\n",
              "      <td>M</td>\n",
              "      <td>Rashford</td>\n",
              "      <td>8.5</td>\n",
              "      <td>10.7</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>132</td>\n",
              "      <td>75.2</td>\n",
              "      <td>...</td>\n",
              "      <td>1.1</td>\n",
              "      <td>3.7</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.87</td>\n",
              "      <td>3.70</td>\n",
              "      <td>4.21</td>\n",
              "      <td>3.87</td>\n",
              "      <td>4.21</td>\n",
              "      <td>19.86</td>\n",
              "      <td>11.78</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>602</th>\n",
              "      <td>430</td>\n",
              "      <td>Newcastle United</td>\n",
              "      <td>D</td>\n",
              "      <td>Trippier</td>\n",
              "      <td>6.9</td>\n",
              "      <td>43.3</td>\n",
              "      <td>0</td>\n",
              "      <td>7</td>\n",
              "      <td>403</td>\n",
              "      <td>117.9</td>\n",
              "      <td>...</td>\n",
              "      <td>1.2</td>\n",
              "      <td>3.5</td>\n",
              "      <td>0.5</td>\n",
              "      <td>4.10</td>\n",
              "      <td>4.10</td>\n",
              "      <td>3.50</td>\n",
              "      <td>3.35</td>\n",
              "      <td>3.65</td>\n",
              "      <td>18.70</td>\n",
              "      <td>11.70</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>85</td>\n",
              "      <td>Bournemouth</td>\n",
              "      <td>F</td>\n",
              "      <td>Solanke</td>\n",
              "      <td>6.8</td>\n",
              "      <td>19.7</td>\n",
              "      <td>8</td>\n",
              "      <td>1</td>\n",
              "      <td>216</td>\n",
              "      <td>114.7</td>\n",
              "      <td>...</td>\n",
              "      <td>0.8</td>\n",
              "      <td>4.1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4.10</td>\n",
              "      <td>3.89</td>\n",
              "      <td>3.68</td>\n",
              "      <td>3.47</td>\n",
              "      <td>3.68</td>\n",
              "      <td>18.82</td>\n",
              "      <td>11.67</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>210</th>\n",
              "      <td>199</td>\n",
              "      <td>Chelsea</td>\n",
              "      <td>M</td>\n",
              "      <td>Enzo</td>\n",
              "      <td>4.8</td>\n",
              "      <td>2.8</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>197</td>\n",
              "      <td>78.5</td>\n",
              "      <td>...</td>\n",
              "      <td>1.1</td>\n",
              "      <td>3.6</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.92</td>\n",
              "      <td>3.60</td>\n",
              "      <td>4.08</td>\n",
              "      <td>3.76</td>\n",
              "      <td>3.44</td>\n",
              "      <td>18.80</td>\n",
              "      <td>11.60</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>104</th>\n",
              "      <td>14</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>M</td>\n",
              "      <td>Ødegaard</td>\n",
              "      <td>8.4</td>\n",
              "      <td>14.6</td>\n",
              "      <td>4</td>\n",
              "      <td>3</td>\n",
              "      <td>263</td>\n",
              "      <td>114.2</td>\n",
              "      <td>...</td>\n",
              "      <td>1.2</td>\n",
              "      <td>3.6</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.60</td>\n",
              "      <td>3.92</td>\n",
              "      <td>3.92</td>\n",
              "      <td>3.76</td>\n",
              "      <td>4.24</td>\n",
              "      <td>19.44</td>\n",
              "      <td>11.44</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>120</th>\n",
              "      <td>43</td>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>M</td>\n",
              "      <td>Douglas Luiz</td>\n",
              "      <td>5.5</td>\n",
              "      <td>6.8</td>\n",
              "      <td>5</td>\n",
              "      <td>2</td>\n",
              "      <td>338</td>\n",
              "      <td>97.5</td>\n",
              "      <td>...</td>\n",
              "      <td>1.1</td>\n",
              "      <td>3.5</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.95</td>\n",
              "      <td>3.50</td>\n",
              "      <td>3.80</td>\n",
              "      <td>3.80</td>\n",
              "      <td>3.35</td>\n",
              "      <td>18.40</td>\n",
              "      <td>11.25</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>432</th>\n",
              "      <td>20</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>D</td>\n",
              "      <td>Saliba</td>\n",
              "      <td>5.5</td>\n",
              "      <td>35.4</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>334</td>\n",
              "      <td>43.8</td>\n",
              "      <td>...</td>\n",
              "      <td>1.2</td>\n",
              "      <td>3.5</td>\n",
              "      <td>1.0</td>\n",
              "      <td>3.50</td>\n",
              "      <td>3.80</td>\n",
              "      <td>3.80</td>\n",
              "      <td>3.65</td>\n",
              "      <td>4.10</td>\n",
              "      <td>18.85</td>\n",
              "      <td>11.10</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>435</th>\n",
              "      <td>29</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>D</td>\n",
              "      <td>White</td>\n",
              "      <td>5.6</td>\n",
              "      <td>11.1</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>302</td>\n",
              "      <td>62.1</td>\n",
              "      <td>...</td>\n",
              "      <td>1.2</td>\n",
              "      <td>3.5</td>\n",
              "      <td>1.0</td>\n",
              "      <td>3.50</td>\n",
              "      <td>3.80</td>\n",
              "      <td>3.80</td>\n",
              "      <td>3.65</td>\n",
              "      <td>4.10</td>\n",
              "      <td>18.85</td>\n",
              "      <td>11.10</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>436</th>\n",
              "      <td>31</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>D</td>\n",
              "      <td>Zinchenko</td>\n",
              "      <td>5.2</td>\n",
              "      <td>12.9</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>295</td>\n",
              "      <td>61.9</td>\n",
              "      <td>...</td>\n",
              "      <td>1.2</td>\n",
              "      <td>3.5</td>\n",
              "      <td>1.0</td>\n",
              "      <td>3.50</td>\n",
              "      <td>3.80</td>\n",
              "      <td>3.80</td>\n",
              "      <td>3.65</td>\n",
              "      <td>4.10</td>\n",
              "      <td>18.85</td>\n",
              "      <td>11.10</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>16</th>\n",
              "      <td>135</td>\n",
              "      <td>Brighton</td>\n",
              "      <td>F</td>\n",
              "      <td>João Pedro</td>\n",
              "      <td>5.4</td>\n",
              "      <td>10.4</td>\n",
              "      <td>5</td>\n",
              "      <td>1</td>\n",
              "      <td>184</td>\n",
              "      <td>92.6</td>\n",
              "      <td>...</td>\n",
              "      <td>1.1</td>\n",
              "      <td>3.5</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.65</td>\n",
              "      <td>3.65</td>\n",
              "      <td>3.65</td>\n",
              "      <td>3.95</td>\n",
              "      <td>4.10</td>\n",
              "      <td>19.00</td>\n",
              "      <td>10.95</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>180</th>\n",
              "      <td>143</td>\n",
              "      <td>Brighton</td>\n",
              "      <td>M</td>\n",
              "      <td>Mitoma</td>\n",
              "      <td>6.5</td>\n",
              "      <td>21.4</td>\n",
              "      <td>3</td>\n",
              "      <td>5</td>\n",
              "      <td>200</td>\n",
              "      <td>113.7</td>\n",
              "      <td>...</td>\n",
              "      <td>1.1</td>\n",
              "      <td>3.5</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.65</td>\n",
              "      <td>3.65</td>\n",
              "      <td>3.65</td>\n",
              "      <td>3.95</td>\n",
              "      <td>4.10</td>\n",
              "      <td>19.00</td>\n",
              "      <td>10.95</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>542</th>\n",
              "      <td>290</td>\n",
              "      <td>Liverpool</td>\n",
              "      <td>D</td>\n",
              "      <td>Alexander-Arnold</td>\n",
              "      <td>8.2</td>\n",
              "      <td>17.5</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "      <td>373</td>\n",
              "      <td>108.9</td>\n",
              "      <td>...</td>\n",
              "      <td>1.2</td>\n",
              "      <td>3.5</td>\n",
              "      <td>0.5</td>\n",
              "      <td>3.50</td>\n",
              "      <td>3.95</td>\n",
              "      <td>3.50</td>\n",
              "      <td>3.95</td>\n",
              "      <td>3.65</td>\n",
              "      <td>18.55</td>\n",
              "      <td>10.95</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>595</th>\n",
              "      <td>407</td>\n",
              "      <td>Newcastle United</td>\n",
              "      <td>D</td>\n",
              "      <td>Burn</td>\n",
              "      <td>4.4</td>\n",
              "      <td>3.8</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>208</td>\n",
              "      <td>48.3</td>\n",
              "      <td>...</td>\n",
              "      <td>1.2</td>\n",
              "      <td>3.3</td>\n",
              "      <td>0.5</td>\n",
              "      <td>3.82</td>\n",
              "      <td>3.82</td>\n",
              "      <td>3.30</td>\n",
              "      <td>3.17</td>\n",
              "      <td>3.43</td>\n",
              "      <td>17.54</td>\n",
              "      <td>10.94</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>61</th>\n",
              "      <td>343</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>F</td>\n",
              "      <td>J.Alvarez</td>\n",
              "      <td>6.9</td>\n",
              "      <td>27.8</td>\n",
              "      <td>4</td>\n",
              "      <td>8</td>\n",
              "      <td>333</td>\n",
              "      <td>128.0</td>\n",
              "      <td>...</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.7</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2.00</td>\n",
              "      <td>4.38</td>\n",
              "      <td>4.55</td>\n",
              "      <td>3.87</td>\n",
              "      <td>4.38</td>\n",
              "      <td>19.18</td>\n",
              "      <td>10.93</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>215</th>\n",
              "      <td>216</td>\n",
              "      <td>Chelsea</td>\n",
              "      <td>M</td>\n",
              "      <td>Sterling</td>\n",
              "      <td>7.1</td>\n",
              "      <td>12.0</td>\n",
              "      <td>5</td>\n",
              "      <td>5</td>\n",
              "      <td>215</td>\n",
              "      <td>113.0</td>\n",
              "      <td>...</td>\n",
              "      <td>1.1</td>\n",
              "      <td>3.4</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.68</td>\n",
              "      <td>3.40</td>\n",
              "      <td>3.82</td>\n",
              "      <td>3.54</td>\n",
              "      <td>3.26</td>\n",
              "      <td>17.70</td>\n",
              "      <td>10.90</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>100</th>\n",
              "      <td>6</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>M</td>\n",
              "      <td>Havertz</td>\n",
              "      <td>7.1</td>\n",
              "      <td>1.7</td>\n",
              "      <td>4</td>\n",
              "      <td>1</td>\n",
              "      <td>144</td>\n",
              "      <td>68.7</td>\n",
              "      <td>...</td>\n",
              "      <td>1.2</td>\n",
              "      <td>3.4</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.40</td>\n",
              "      <td>3.68</td>\n",
              "      <td>3.68</td>\n",
              "      <td>3.54</td>\n",
              "      <td>3.96</td>\n",
              "      <td>18.26</td>\n",
              "      <td>10.76</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>241</th>\n",
              "      <td>249</td>\n",
              "      <td>Everton</td>\n",
              "      <td>M</td>\n",
              "      <td>A.Doucoure</td>\n",
              "      <td>5.6</td>\n",
              "      <td>1.9</td>\n",
              "      <td>6</td>\n",
              "      <td>2</td>\n",
              "      <td>244</td>\n",
              "      <td>108.3</td>\n",
              "      <td>...</td>\n",
              "      <td>0.9</td>\n",
              "      <td>3.8</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.62</td>\n",
              "      <td>3.08</td>\n",
              "      <td>3.98</td>\n",
              "      <td>3.44</td>\n",
              "      <td>3.62</td>\n",
              "      <td>17.74</td>\n",
              "      <td>10.68</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>336</th>\n",
              "      <td>402</td>\n",
              "      <td>Newcastle United</td>\n",
              "      <td>M</td>\n",
              "      <td>Almirón</td>\n",
              "      <td>6.2</td>\n",
              "      <td>4.6</td>\n",
              "      <td>3</td>\n",
              "      <td>1</td>\n",
              "      <td>189</td>\n",
              "      <td>69.5</td>\n",
              "      <td>...</td>\n",
              "      <td>1.2</td>\n",
              "      <td>3.2</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.68</td>\n",
              "      <td>3.68</td>\n",
              "      <td>3.20</td>\n",
              "      <td>3.08</td>\n",
              "      <td>3.32</td>\n",
              "      <td>16.96</td>\n",
              "      <td>10.56</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>116</th>\n",
              "      <td>34</td>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>M</td>\n",
              "      <td>Bailey</td>\n",
              "      <td>5.6</td>\n",
              "      <td>2.8</td>\n",
              "      <td>5</td>\n",
              "      <td>5</td>\n",
              "      <td>193</td>\n",
              "      <td>72.5</td>\n",
              "      <td>...</td>\n",
              "      <td>1.1</td>\n",
              "      <td>3.3</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.69</td>\n",
              "      <td>3.30</td>\n",
              "      <td>3.56</td>\n",
              "      <td>3.56</td>\n",
              "      <td>3.17</td>\n",
              "      <td>17.28</td>\n",
              "      <td>10.55</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>129</th>\n",
              "      <td>599</td>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>M</td>\n",
              "      <td>Diaby</td>\n",
              "      <td>6.7</td>\n",
              "      <td>10.2</td>\n",
              "      <td>3</td>\n",
              "      <td>7</td>\n",
              "      <td>227</td>\n",
              "      <td>94.8</td>\n",
              "      <td>...</td>\n",
              "      <td>1.1</td>\n",
              "      <td>3.3</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.69</td>\n",
              "      <td>3.30</td>\n",
              "      <td>3.56</td>\n",
              "      <td>3.56</td>\n",
              "      <td>3.17</td>\n",
              "      <td>17.28</td>\n",
              "      <td>10.55</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>390</th>\n",
              "      <td>501</td>\n",
              "      <td>Tottenham</td>\n",
              "      <td>M</td>\n",
              "      <td>Kulusevski</td>\n",
              "      <td>7.2</td>\n",
              "      <td>4.6</td>\n",
              "      <td>5</td>\n",
              "      <td>2</td>\n",
              "      <td>270</td>\n",
              "      <td>148.1</td>\n",
              "      <td>...</td>\n",
              "      <td>1.0</td>\n",
              "      <td>3.4</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.54</td>\n",
              "      <td>3.26</td>\n",
              "      <td>3.68</td>\n",
              "      <td>3.26</td>\n",
              "      <td>3.26</td>\n",
              "      <td>17.00</td>\n",
              "      <td>10.48</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>392</th>\n",
              "      <td>504</td>\n",
              "      <td>Tottenham</td>\n",
              "      <td>M</td>\n",
              "      <td>Maddison</td>\n",
              "      <td>7.8</td>\n",
              "      <td>8.3</td>\n",
              "      <td>3</td>\n",
              "      <td>6</td>\n",
              "      <td>230</td>\n",
              "      <td>109.6</td>\n",
              "      <td>...</td>\n",
              "      <td>1.0</td>\n",
              "      <td>3.4</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.54</td>\n",
              "      <td>3.26</td>\n",
              "      <td>3.68</td>\n",
              "      <td>3.26</td>\n",
              "      <td>3.26</td>\n",
              "      <td>17.00</td>\n",
              "      <td>10.48</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>430</th>\n",
              "      <td>5</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>D</td>\n",
              "      <td>Gabriel</td>\n",
              "      <td>4.9</td>\n",
              "      <td>15.1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>234</td>\n",
              "      <td>36.0</td>\n",
              "      <td>...</td>\n",
              "      <td>1.2</td>\n",
              "      <td>3.3</td>\n",
              "      <td>1.0</td>\n",
              "      <td>3.30</td>\n",
              "      <td>3.56</td>\n",
              "      <td>3.56</td>\n",
              "      <td>3.43</td>\n",
              "      <td>3.82</td>\n",
              "      <td>17.67</td>\n",
              "      <td>10.42</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>308</th>\n",
              "      <td>353</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>M</td>\n",
              "      <td>Foden</td>\n",
              "      <td>7.6</td>\n",
              "      <td>10.6</td>\n",
              "      <td>4</td>\n",
              "      <td>4</td>\n",
              "      <td>304</td>\n",
              "      <td>122.7</td>\n",
              "      <td>...</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.5</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2.00</td>\n",
              "      <td>4.10</td>\n",
              "      <td>4.25</td>\n",
              "      <td>3.65</td>\n",
              "      <td>4.10</td>\n",
              "      <td>18.10</td>\n",
              "      <td>10.35</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>175</th>\n",
              "      <td>134</td>\n",
              "      <td>Brighton</td>\n",
              "      <td>M</td>\n",
              "      <td>Gross</td>\n",
              "      <td>6.4</td>\n",
              "      <td>3.2</td>\n",
              "      <td>3</td>\n",
              "      <td>5</td>\n",
              "      <td>297</td>\n",
              "      <td>132.0</td>\n",
              "      <td>...</td>\n",
              "      <td>1.1</td>\n",
              "      <td>3.3</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.43</td>\n",
              "      <td>3.43</td>\n",
              "      <td>3.43</td>\n",
              "      <td>3.69</td>\n",
              "      <td>3.82</td>\n",
              "      <td>17.80</td>\n",
              "      <td>10.29</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>275</th>\n",
              "      <td>303</td>\n",
              "      <td>Liverpool</td>\n",
              "      <td>M</td>\n",
              "      <td>Luis Díaz</td>\n",
              "      <td>7.4</td>\n",
              "      <td>6.5</td>\n",
              "      <td>3</td>\n",
              "      <td>1</td>\n",
              "      <td>126</td>\n",
              "      <td>75.4</td>\n",
              "      <td>...</td>\n",
              "      <td>1.2</td>\n",
              "      <td>3.3</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.30</td>\n",
              "      <td>3.69</td>\n",
              "      <td>3.30</td>\n",
              "      <td>3.69</td>\n",
              "      <td>3.43</td>\n",
              "      <td>17.41</td>\n",
              "      <td>10.29</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>394</th>\n",
              "      <td>509</td>\n",
              "      <td>Tottenham</td>\n",
              "      <td>M</td>\n",
              "      <td>Richarlison</td>\n",
              "      <td>6.7</td>\n",
              "      <td>2.8</td>\n",
              "      <td>4</td>\n",
              "      <td>3</td>\n",
              "      <td>125</td>\n",
              "      <td>70.0</td>\n",
              "      <td>...</td>\n",
              "      <td>1.0</td>\n",
              "      <td>3.3</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.43</td>\n",
              "      <td>3.17</td>\n",
              "      <td>3.56</td>\n",
              "      <td>3.17</td>\n",
              "      <td>3.17</td>\n",
              "      <td>16.50</td>\n",
              "      <td>10.16</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>410</th>\n",
              "      <td>664</td>\n",
              "      <td>West Ham</td>\n",
              "      <td>M</td>\n",
              "      <td>Ward-Prowse</td>\n",
              "      <td>6.1</td>\n",
              "      <td>9.0</td>\n",
              "      <td>3</td>\n",
              "      <td>5</td>\n",
              "      <td>348</td>\n",
              "      <td>109.3</td>\n",
              "      <td>...</td>\n",
              "      <td>1.0</td>\n",
              "      <td>3.6</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.44</td>\n",
              "      <td>3.28</td>\n",
              "      <td>3.44</td>\n",
              "      <td>3.92</td>\n",
              "      <td>3.92</td>\n",
              "      <td>18.00</td>\n",
              "      <td>10.16</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>644</th>\n",
              "      <td>506</td>\n",
              "      <td>Tottenham</td>\n",
              "      <td>D</td>\n",
              "      <td>Pedro Porro</td>\n",
              "      <td>5.5</td>\n",
              "      <td>22.8</td>\n",
              "      <td>0</td>\n",
              "      <td>6</td>\n",
              "      <td>374</td>\n",
              "      <td>102.3</td>\n",
              "      <td>...</td>\n",
              "      <td>1.0</td>\n",
              "      <td>3.3</td>\n",
              "      <td>0.1</td>\n",
              "      <td>3.43</td>\n",
              "      <td>3.17</td>\n",
              "      <td>3.56</td>\n",
              "      <td>3.17</td>\n",
              "      <td>3.17</td>\n",
              "      <td>16.50</td>\n",
              "      <td>10.16</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>434</th>\n",
              "      <td>25</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>D</td>\n",
              "      <td>Tomiyasu</td>\n",
              "      <td>4.5</td>\n",
              "      <td>0.4</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>134</td>\n",
              "      <td>23.3</td>\n",
              "      <td>...</td>\n",
              "      <td>1.2</td>\n",
              "      <td>3.2</td>\n",
              "      <td>1.0</td>\n",
              "      <td>3.20</td>\n",
              "      <td>3.44</td>\n",
              "      <td>3.44</td>\n",
              "      <td>3.32</td>\n",
              "      <td>3.68</td>\n",
              "      <td>17.08</td>\n",
              "      <td>10.08</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>550</th>\n",
              "      <td>313</td>\n",
              "      <td>Liverpool</td>\n",
              "      <td>D</td>\n",
              "      <td>Virgil</td>\n",
              "      <td>6.2</td>\n",
              "      <td>10.1</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>305</td>\n",
              "      <td>73.9</td>\n",
              "      <td>...</td>\n",
              "      <td>1.2</td>\n",
              "      <td>3.2</td>\n",
              "      <td>0.5</td>\n",
              "      <td>3.20</td>\n",
              "      <td>3.56</td>\n",
              "      <td>3.20</td>\n",
              "      <td>3.56</td>\n",
              "      <td>3.32</td>\n",
              "      <td>16.84</td>\n",
              "      <td>9.96</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>40</th>\n",
              "      <td>246</td>\n",
              "      <td>Everton</td>\n",
              "      <td>F</td>\n",
              "      <td>Calvert-Lewin</td>\n",
              "      <td>5.8</td>\n",
              "      <td>1.2</td>\n",
              "      <td>3</td>\n",
              "      <td>1</td>\n",
              "      <td>101</td>\n",
              "      <td>60.7</td>\n",
              "      <td>...</td>\n",
              "      <td>0.9</td>\n",
              "      <td>3.5</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.35</td>\n",
              "      <td>2.90</td>\n",
              "      <td>3.65</td>\n",
              "      <td>3.20</td>\n",
              "      <td>3.35</td>\n",
              "      <td>16.45</td>\n",
              "      <td>9.90</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>265</th>\n",
              "      <td>591</td>\n",
              "      <td>Fulham</td>\n",
              "      <td>M</td>\n",
              "      <td>Willian</td>\n",
              "      <td>5.3</td>\n",
              "      <td>1.2</td>\n",
              "      <td>4</td>\n",
              "      <td>2</td>\n",
              "      <td>214</td>\n",
              "      <td>79.1</td>\n",
              "      <td>...</td>\n",
              "      <td>0.9</td>\n",
              "      <td>3.3</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.43</td>\n",
              "      <td>3.43</td>\n",
              "      <td>3.04</td>\n",
              "      <td>3.17</td>\n",
              "      <td>3.43</td>\n",
              "      <td>16.50</td>\n",
              "      <td>9.90</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>123</th>\n",
              "      <td>50</td>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>M</td>\n",
              "      <td>McGinn</td>\n",
              "      <td>5.5</td>\n",
              "      <td>1.7</td>\n",
              "      <td>4</td>\n",
              "      <td>2</td>\n",
              "      <td>267</td>\n",
              "      <td>91.9</td>\n",
              "      <td>...</td>\n",
              "      <td>1.1</td>\n",
              "      <td>3.1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.43</td>\n",
              "      <td>3.10</td>\n",
              "      <td>3.32</td>\n",
              "      <td>3.32</td>\n",
              "      <td>2.99</td>\n",
              "      <td>16.16</td>\n",
              "      <td>9.85</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>417</th>\n",
              "      <td>557</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>M</td>\n",
              "      <td>Hee Chan</td>\n",
              "      <td>5.8</td>\n",
              "      <td>11.2</td>\n",
              "      <td>8</td>\n",
              "      <td>2</td>\n",
              "      <td>232</td>\n",
              "      <td>86.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0.8</td>\n",
              "      <td>3.6</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.28</td>\n",
              "      <td>3.12</td>\n",
              "      <td>3.44</td>\n",
              "      <td>3.12</td>\n",
              "      <td>3.12</td>\n",
              "      <td>16.08</td>\n",
              "      <td>9.84</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>568</th>\n",
              "      <td>342</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>D</td>\n",
              "      <td>Aké</td>\n",
              "      <td>5.0</td>\n",
              "      <td>5.1</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>205</td>\n",
              "      <td>46.5</td>\n",
              "      <td>...</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.3</td>\n",
              "      <td>0.8</td>\n",
              "      <td>2.00</td>\n",
              "      <td>3.82</td>\n",
              "      <td>3.95</td>\n",
              "      <td>3.43</td>\n",
              "      <td>3.82</td>\n",
              "      <td>17.02</td>\n",
              "      <td>9.77</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>50 rows × 23 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-b5c0769f-ed33-41dc-89cf-64883a4be1ff')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-b5c0769f-ed33-41dc-89cf-64883a4be1ff button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-b5c0769f-ed33-41dc-89cf-64883a4be1ff');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-0f0e0065-e204-445c-b2c3-179e45b5cb45\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-0f0e0065-e204-445c-b2c3-179e45b5cb45')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-0f0e0065-e204-445c-b2c3-179e45b5cb45 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 49
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "Top50 = rawdfgw228x.nlargest(50, '5GW Total')\n",
        "Top50"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "id": "Vuuihhw-Jx7s",
        "outputId": "3f35e519-6175-42a0-ddbe-29202c9d092a"
      },
      "execution_count": 50,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "      id               team pos              name  cost  selected_by_percent  \\\n",
              "277  308          Liverpool   M             Salah  13.2                 54.0   \n",
              "62   355    Manchester City   F           Haaland  13.9                 63.6   \n",
              "158  108          Brentford   M            Mbeumo   6.9                  9.3   \n",
              "107   19            Arsenal   M              Saka   9.0                 58.4   \n",
              "30   211            Chelsea   F         N.Jackson   6.9                  7.0   \n",
              "5     60        Aston Villa   F           Watkins   8.7                 49.7   \n",
              "321  373  Manchester United   M       B.Fernandes   8.2                 10.2   \n",
              "397  516          Tottenham   M               Son   9.8                 42.9   \n",
              "67   415   Newcastle United   F              Isak   7.6                 16.4   \n",
              "217  362            Chelsea   M            Palmer   5.6                 22.9   \n",
              "401  526           West Ham   M             Bowen   7.8                 22.0   \n",
              "440   36        Aston Villa   D              Cash   4.7                 21.9   \n",
              "50   293          Liverpool   F            Darwin   7.5                 15.4   \n",
              "340  412   Newcastle United   M            Gordon   6.2                 24.1   \n",
              "330  396  Manchester United   M          Rashford   8.5                 10.7   \n",
              "104   14            Arsenal   M          Ødegaard   8.4                 14.6   \n",
              "61   343    Manchester City   F         J.Alvarez   6.9                 27.8   \n",
              "16   135           Brighton   F        João Pedro   5.4                 10.4   \n",
              "180  143           Brighton   M            Mitoma   6.5                 21.4   \n",
              "432   20            Arsenal   D            Saliba   5.5                 35.4   \n",
              "435   29            Arsenal   D             White   5.6                 11.1   \n",
              "436   31            Arsenal   D         Zinchenko   5.2                 12.9   \n",
              "9     85        Bournemouth   F           Solanke   6.8                 19.7   \n",
              "210  199            Chelsea   M              Enzo   4.8                  2.8   \n",
              "602  430   Newcastle United   D          Trippier   6.9                 43.3   \n",
              "542  290          Liverpool   D  Alexander-Arnold   8.2                 17.5   \n",
              "120   43        Aston Villa   M      Douglas Luiz   5.5                  6.8   \n",
              "100    6            Arsenal   M           Havertz   7.1                  1.7   \n",
              "308  353    Manchester City   M             Foden   7.6                 10.6   \n",
              "410  664           West Ham   M       Ward-Prowse   6.1                  9.0   \n",
              "175  134           Brighton   M             Gross   6.4                  3.2   \n",
              "241  249            Everton   M        A.Doucoure   5.6                  1.9   \n",
              "215  216            Chelsea   M          Sterling   7.1                 12.0   \n",
              "430    5            Arsenal   D           Gabriel   4.9                 15.1   \n",
              "595  407   Newcastle United   D              Burn   4.4                  3.8   \n",
              "275  303          Liverpool   M         Luis Díaz   7.4                  6.5   \n",
              "116   34        Aston Villa   M            Bailey   5.6                  2.8   \n",
              "129  599        Aston Villa   M             Diaby   6.7                 10.2   \n",
              "434   25            Arsenal   D          Tomiyasu   4.5                  0.4   \n",
              "568  342    Manchester City   D               Aké   5.0                  5.1   \n",
              "390  501          Tottenham   M        Kulusevski   7.2                  4.6   \n",
              "392  504          Tottenham   M          Maddison   7.8                  8.3   \n",
              "336  402   Newcastle United   M           Almirón   6.2                  4.6   \n",
              "550  313          Liverpool   D            Virgil   6.2                 10.1   \n",
              "12   119          Brentford   F             Wissa   5.8                  6.9   \n",
              "471  129           Brighton   D              Dunk   5.0                  3.0   \n",
              "265  591             Fulham   M           Willian   5.3                  1.2   \n",
              "394  509          Tottenham   M       Richarlison   6.7                  2.8   \n",
              "644  506          Tottenham   D       Pedro Porro   5.5                 22.8   \n",
              "1      8            Arsenal   F           G.Jesus   8.0                  4.9   \n",
              "\n",
              "     goals_scored  assists  bps  ict_index  ...  home_adjustment  xPallgw  \\\n",
              "277            11        7  387      188.3  ...              1.2      5.9   \n",
              "62             14        5  417      159.8  ...              NaN      5.7   \n",
              "158             7        4  250      122.1  ...              NaN      5.2   \n",
              "107             5        8  361      164.2  ...              1.2      4.5   \n",
              "30              7        1  198      107.6  ...              1.1      4.5   \n",
              "5               9        9  370      149.7  ...              1.1      4.3   \n",
              "321             3        3  279      141.7  ...              1.1      4.2   \n",
              "397            10        4  368      150.0  ...              1.0      4.5   \n",
              "67              7        0  213       68.3  ...              1.2      4.0   \n",
              "217             6        4  258      101.8  ...              1.1      4.1   \n",
              "401            10        1  266      126.5  ...              1.0      4.3   \n",
              "440             2        1  216       63.4  ...              1.1      4.0   \n",
              "50              4        7  171       96.5  ...              1.2      3.9   \n",
              "340             6        6  281      110.6  ...              1.2      3.8   \n",
              "330             2        2  132       75.2  ...              1.1      3.7   \n",
              "104             4        3  263      114.2  ...              1.2      3.6   \n",
              "61              4        8  333      128.0  ...              NaN      3.7   \n",
              "16              5        1  184       92.6  ...              1.1      3.5   \n",
              "180             3        5  200      113.7  ...              1.1      3.5   \n",
              "432             1        1  334       43.8  ...              1.2      3.5   \n",
              "435             1        2  302       62.1  ...              1.2      3.5   \n",
              "436             1        1  295       61.9  ...              1.2      3.5   \n",
              "9               8        1  216      114.7  ...              0.8      4.1   \n",
              "210             2        1  197       78.5  ...              1.1      3.6   \n",
              "602             0        7  403      117.9  ...              1.2      3.5   \n",
              "542             2        3  373      108.9  ...              1.2      3.5   \n",
              "120             5        2  338       97.5  ...              1.1      3.5   \n",
              "100             4        1  144       68.7  ...              1.2      3.4   \n",
              "308             4        4  304      122.7  ...              NaN      3.5   \n",
              "410             3        5  348      109.3  ...              1.0      3.6   \n",
              "175             3        5  297      132.0  ...              1.1      3.3   \n",
              "241             6        2  244      108.3  ...              0.9      3.8   \n",
              "215             5        5  215      113.0  ...              1.1      3.4   \n",
              "430             0        0  234       36.0  ...              1.2      3.3   \n",
              "595             2        0  208       48.3  ...              1.2      3.3   \n",
              "275             3        1  126       75.4  ...              1.2      3.3   \n",
              "116             5        5  193       72.5  ...              1.1      3.3   \n",
              "129             3        7  227       94.8  ...              1.1      3.3   \n",
              "434             1        1  134       23.3  ...              1.2      3.2   \n",
              "568             2        1  205       46.5  ...              NaN      3.3   \n",
              "390             5        2  270      148.1  ...              1.0      3.4   \n",
              "392             3        6  230      109.6  ...              1.0      3.4   \n",
              "336             3        1  189       69.5  ...              1.2      3.2   \n",
              "550             1        2  305       73.9  ...              1.2      3.2   \n",
              "12              3        2  169       79.3  ...              NaN      3.4   \n",
              "471             1        0  200       56.7  ...              1.1      3.1   \n",
              "265             4        2  214       79.1  ...              0.9      3.3   \n",
              "394             4        3  125       70.0  ...              1.0      3.3   \n",
              "644             0        6  374      102.3  ...              1.0      3.3   \n",
              "1               3        2  143       77.5  ...              1.2      3.1   \n",
              "\n",
              "     xCSP  gw18  gw19  gw20  gw21  gw22  5GW Total  3GW Total  \n",
              "277   NaN  5.90  7.07  5.90  7.07  6.29      32.23      18.87  \n",
              "62    NaN  2.00  7.18  7.55  6.07  7.18      29.98      16.73  \n",
              "158   NaN  2.00  6.16  5.52  6.16  5.52      25.36      13.68  \n",
              "107   NaN  4.50  5.00  5.00  4.75  5.50      24.75      14.50  \n",
              "30    NaN  5.00  4.50  5.25  4.75  4.25      23.75      14.75  \n",
              "5     NaN  4.99  4.30  4.76  4.76  4.07      22.88      14.05  \n",
              "321   NaN  4.42  4.20  4.86  4.42  4.86      22.76      13.48  \n",
              "397   NaN  4.75  4.25  5.00  4.25  4.25      22.50      14.00  \n",
              "67    NaN  4.80  4.80  4.00  3.80  4.20      21.60      13.60  \n",
              "217   NaN  4.52  4.10  4.73  4.31  3.89      21.55      13.35  \n",
              "401   NaN  4.07  3.84  4.07  4.76  4.76      21.50      11.98  \n",
              "440   0.4  4.60  4.00  4.40  4.40  3.80      21.20      13.00  \n",
              "50    NaN  3.90  4.47  3.90  4.47  4.09      20.83      12.27  \n",
              "340   NaN  4.52  4.52  3.80  3.62  3.98      20.44      12.84  \n",
              "330   NaN  3.87  3.70  4.21  3.87  4.21      19.86      11.78  \n",
              "104   NaN  3.60  3.92  3.92  3.76  4.24      19.44      11.44  \n",
              "61    NaN  2.00  4.38  4.55  3.87  4.38      19.18      10.93  \n",
              "16    NaN  3.65  3.65  3.65  3.95  4.10      19.00      10.95  \n",
              "180   NaN  3.65  3.65  3.65  3.95  4.10      19.00      10.95  \n",
              "432   1.0  3.50  3.80  3.80  3.65  4.10      18.85      11.10  \n",
              "435   1.0  3.50  3.80  3.80  3.65  4.10      18.85      11.10  \n",
              "436   1.0  3.50  3.80  3.80  3.65  4.10      18.85      11.10  \n",
              "9     NaN  4.10  3.89  3.68  3.47  3.68      18.82      11.67  \n",
              "210   NaN  3.92  3.60  4.08  3.76  3.44      18.80      11.60  \n",
              "602   0.5  4.10  4.10  3.50  3.35  3.65      18.70      11.70  \n",
              "542   0.5  3.50  3.95  3.50  3.95  3.65      18.55      10.95  \n",
              "120   NaN  3.95  3.50  3.80  3.80  3.35      18.40      11.25  \n",
              "100   NaN  3.40  3.68  3.68  3.54  3.96      18.26      10.76  \n",
              "308   NaN  2.00  4.10  4.25  3.65  4.10      18.10      10.35  \n",
              "410   NaN  3.44  3.28  3.44  3.92  3.92      18.00      10.16  \n",
              "175   NaN  3.43  3.43  3.43  3.69  3.82      17.80      10.29  \n",
              "241   NaN  3.62  3.08  3.98  3.44  3.62      17.74      10.68  \n",
              "215   NaN  3.68  3.40  3.82  3.54  3.26      17.70      10.90  \n",
              "430   1.0  3.30  3.56  3.56  3.43  3.82      17.67      10.42  \n",
              "595   0.5  3.82  3.82  3.30  3.17  3.43      17.54      10.94  \n",
              "275   NaN  3.30  3.69  3.30  3.69  3.43      17.41      10.29  \n",
              "116   NaN  3.69  3.30  3.56  3.56  3.17      17.28      10.55  \n",
              "129   NaN  3.69  3.30  3.56  3.56  3.17      17.28      10.55  \n",
              "434   1.0  3.20  3.44  3.44  3.32  3.68      17.08      10.08  \n",
              "568   0.8  2.00  3.82  3.95  3.43  3.82      17.02       9.77  \n",
              "390   NaN  3.54  3.26  3.68  3.26  3.26      17.00      10.48  \n",
              "392   NaN  3.54  3.26  3.68  3.26  3.26      17.00      10.48  \n",
              "336   NaN  3.68  3.68  3.20  3.08  3.32      16.96      10.56  \n",
              "550   0.5  3.20  3.56  3.20  3.56  3.32      16.84       9.96  \n",
              "12    NaN  2.00  3.82  3.54  3.82  3.54      16.72       9.36  \n",
              "471   0.3  3.21  3.21  3.21  3.43  3.54      16.60       9.63  \n",
              "265   NaN  3.43  3.43  3.04  3.17  3.43      16.50       9.90  \n",
              "394   NaN  3.43  3.17  3.56  3.17  3.17      16.50      10.16  \n",
              "644   0.1  3.43  3.17  3.56  3.17  3.17      16.50      10.16  \n",
              "1     NaN  3.10  3.32  3.32  3.21  3.54      16.49       9.74  \n",
              "\n",
              "[50 rows x 23 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-6e0726eb-f30f-41a8-9c26-fdc682c79cf6\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>team</th>\n",
              "      <th>pos</th>\n",
              "      <th>name</th>\n",
              "      <th>cost</th>\n",
              "      <th>selected_by_percent</th>\n",
              "      <th>goals_scored</th>\n",
              "      <th>assists</th>\n",
              "      <th>bps</th>\n",
              "      <th>ict_index</th>\n",
              "      <th>...</th>\n",
              "      <th>home_adjustment</th>\n",
              "      <th>xPallgw</th>\n",
              "      <th>xCSP</th>\n",
              "      <th>gw18</th>\n",
              "      <th>gw19</th>\n",
              "      <th>gw20</th>\n",
              "      <th>gw21</th>\n",
              "      <th>gw22</th>\n",
              "      <th>5GW Total</th>\n",
              "      <th>3GW Total</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>277</th>\n",
              "      <td>308</td>\n",
              "      <td>Liverpool</td>\n",
              "      <td>M</td>\n",
              "      <td>Salah</td>\n",
              "      <td>13.2</td>\n",
              "      <td>54.0</td>\n",
              "      <td>11</td>\n",
              "      <td>7</td>\n",
              "      <td>387</td>\n",
              "      <td>188.3</td>\n",
              "      <td>...</td>\n",
              "      <td>1.2</td>\n",
              "      <td>5.9</td>\n",
              "      <td>NaN</td>\n",
              "      <td>5.90</td>\n",
              "      <td>7.07</td>\n",
              "      <td>5.90</td>\n",
              "      <td>7.07</td>\n",
              "      <td>6.29</td>\n",
              "      <td>32.23</td>\n",
              "      <td>18.87</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>62</th>\n",
              "      <td>355</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>F</td>\n",
              "      <td>Haaland</td>\n",
              "      <td>13.9</td>\n",
              "      <td>63.6</td>\n",
              "      <td>14</td>\n",
              "      <td>5</td>\n",
              "      <td>417</td>\n",
              "      <td>159.8</td>\n",
              "      <td>...</td>\n",
              "      <td>NaN</td>\n",
              "      <td>5.7</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2.00</td>\n",
              "      <td>7.18</td>\n",
              "      <td>7.55</td>\n",
              "      <td>6.07</td>\n",
              "      <td>7.18</td>\n",
              "      <td>29.98</td>\n",
              "      <td>16.73</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>158</th>\n",
              "      <td>108</td>\n",
              "      <td>Brentford</td>\n",
              "      <td>M</td>\n",
              "      <td>Mbeumo</td>\n",
              "      <td>6.9</td>\n",
              "      <td>9.3</td>\n",
              "      <td>7</td>\n",
              "      <td>4</td>\n",
              "      <td>250</td>\n",
              "      <td>122.1</td>\n",
              "      <td>...</td>\n",
              "      <td>NaN</td>\n",
              "      <td>5.2</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2.00</td>\n",
              "      <td>6.16</td>\n",
              "      <td>5.52</td>\n",
              "      <td>6.16</td>\n",
              "      <td>5.52</td>\n",
              "      <td>25.36</td>\n",
              "      <td>13.68</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>107</th>\n",
              "      <td>19</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>M</td>\n",
              "      <td>Saka</td>\n",
              "      <td>9.0</td>\n",
              "      <td>58.4</td>\n",
              "      <td>5</td>\n",
              "      <td>8</td>\n",
              "      <td>361</td>\n",
              "      <td>164.2</td>\n",
              "      <td>...</td>\n",
              "      <td>1.2</td>\n",
              "      <td>4.5</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4.50</td>\n",
              "      <td>5.00</td>\n",
              "      <td>5.00</td>\n",
              "      <td>4.75</td>\n",
              "      <td>5.50</td>\n",
              "      <td>24.75</td>\n",
              "      <td>14.50</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>30</th>\n",
              "      <td>211</td>\n",
              "      <td>Chelsea</td>\n",
              "      <td>F</td>\n",
              "      <td>N.Jackson</td>\n",
              "      <td>6.9</td>\n",
              "      <td>7.0</td>\n",
              "      <td>7</td>\n",
              "      <td>1</td>\n",
              "      <td>198</td>\n",
              "      <td>107.6</td>\n",
              "      <td>...</td>\n",
              "      <td>1.1</td>\n",
              "      <td>4.5</td>\n",
              "      <td>NaN</td>\n",
              "      <td>5.00</td>\n",
              "      <td>4.50</td>\n",
              "      <td>5.25</td>\n",
              "      <td>4.75</td>\n",
              "      <td>4.25</td>\n",
              "      <td>23.75</td>\n",
              "      <td>14.75</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>60</td>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>F</td>\n",
              "      <td>Watkins</td>\n",
              "      <td>8.7</td>\n",
              "      <td>49.7</td>\n",
              "      <td>9</td>\n",
              "      <td>9</td>\n",
              "      <td>370</td>\n",
              "      <td>149.7</td>\n",
              "      <td>...</td>\n",
              "      <td>1.1</td>\n",
              "      <td>4.3</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4.99</td>\n",
              "      <td>4.30</td>\n",
              "      <td>4.76</td>\n",
              "      <td>4.76</td>\n",
              "      <td>4.07</td>\n",
              "      <td>22.88</td>\n",
              "      <td>14.05</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>321</th>\n",
              "      <td>373</td>\n",
              "      <td>Manchester United</td>\n",
              "      <td>M</td>\n",
              "      <td>B.Fernandes</td>\n",
              "      <td>8.2</td>\n",
              "      <td>10.2</td>\n",
              "      <td>3</td>\n",
              "      <td>3</td>\n",
              "      <td>279</td>\n",
              "      <td>141.7</td>\n",
              "      <td>...</td>\n",
              "      <td>1.1</td>\n",
              "      <td>4.2</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4.42</td>\n",
              "      <td>4.20</td>\n",
              "      <td>4.86</td>\n",
              "      <td>4.42</td>\n",
              "      <td>4.86</td>\n",
              "      <td>22.76</td>\n",
              "      <td>13.48</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>397</th>\n",
              "      <td>516</td>\n",
              "      <td>Tottenham</td>\n",
              "      <td>M</td>\n",
              "      <td>Son</td>\n",
              "      <td>9.8</td>\n",
              "      <td>42.9</td>\n",
              "      <td>10</td>\n",
              "      <td>4</td>\n",
              "      <td>368</td>\n",
              "      <td>150.0</td>\n",
              "      <td>...</td>\n",
              "      <td>1.0</td>\n",
              "      <td>4.5</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4.75</td>\n",
              "      <td>4.25</td>\n",
              "      <td>5.00</td>\n",
              "      <td>4.25</td>\n",
              "      <td>4.25</td>\n",
              "      <td>22.50</td>\n",
              "      <td>14.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>67</th>\n",
              "      <td>415</td>\n",
              "      <td>Newcastle United</td>\n",
              "      <td>F</td>\n",
              "      <td>Isak</td>\n",
              "      <td>7.6</td>\n",
              "      <td>16.4</td>\n",
              "      <td>7</td>\n",
              "      <td>0</td>\n",
              "      <td>213</td>\n",
              "      <td>68.3</td>\n",
              "      <td>...</td>\n",
              "      <td>1.2</td>\n",
              "      <td>4.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4.80</td>\n",
              "      <td>4.80</td>\n",
              "      <td>4.00</td>\n",
              "      <td>3.80</td>\n",
              "      <td>4.20</td>\n",
              "      <td>21.60</td>\n",
              "      <td>13.60</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>217</th>\n",
              "      <td>362</td>\n",
              "      <td>Chelsea</td>\n",
              "      <td>M</td>\n",
              "      <td>Palmer</td>\n",
              "      <td>5.6</td>\n",
              "      <td>22.9</td>\n",
              "      <td>6</td>\n",
              "      <td>4</td>\n",
              "      <td>258</td>\n",
              "      <td>101.8</td>\n",
              "      <td>...</td>\n",
              "      <td>1.1</td>\n",
              "      <td>4.1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4.52</td>\n",
              "      <td>4.10</td>\n",
              "      <td>4.73</td>\n",
              "      <td>4.31</td>\n",
              "      <td>3.89</td>\n",
              "      <td>21.55</td>\n",
              "      <td>13.35</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>401</th>\n",
              "      <td>526</td>\n",
              "      <td>West Ham</td>\n",
              "      <td>M</td>\n",
              "      <td>Bowen</td>\n",
              "      <td>7.8</td>\n",
              "      <td>22.0</td>\n",
              "      <td>10</td>\n",
              "      <td>1</td>\n",
              "      <td>266</td>\n",
              "      <td>126.5</td>\n",
              "      <td>...</td>\n",
              "      <td>1.0</td>\n",
              "      <td>4.3</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4.07</td>\n",
              "      <td>3.84</td>\n",
              "      <td>4.07</td>\n",
              "      <td>4.76</td>\n",
              "      <td>4.76</td>\n",
              "      <td>21.50</td>\n",
              "      <td>11.98</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>440</th>\n",
              "      <td>36</td>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>D</td>\n",
              "      <td>Cash</td>\n",
              "      <td>4.7</td>\n",
              "      <td>21.9</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>216</td>\n",
              "      <td>63.4</td>\n",
              "      <td>...</td>\n",
              "      <td>1.1</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.4</td>\n",
              "      <td>4.60</td>\n",
              "      <td>4.00</td>\n",
              "      <td>4.40</td>\n",
              "      <td>4.40</td>\n",
              "      <td>3.80</td>\n",
              "      <td>21.20</td>\n",
              "      <td>13.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>50</th>\n",
              "      <td>293</td>\n",
              "      <td>Liverpool</td>\n",
              "      <td>F</td>\n",
              "      <td>Darwin</td>\n",
              "      <td>7.5</td>\n",
              "      <td>15.4</td>\n",
              "      <td>4</td>\n",
              "      <td>7</td>\n",
              "      <td>171</td>\n",
              "      <td>96.5</td>\n",
              "      <td>...</td>\n",
              "      <td>1.2</td>\n",
              "      <td>3.9</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.90</td>\n",
              "      <td>4.47</td>\n",
              "      <td>3.90</td>\n",
              "      <td>4.47</td>\n",
              "      <td>4.09</td>\n",
              "      <td>20.83</td>\n",
              "      <td>12.27</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>340</th>\n",
              "      <td>412</td>\n",
              "      <td>Newcastle United</td>\n",
              "      <td>M</td>\n",
              "      <td>Gordon</td>\n",
              "      <td>6.2</td>\n",
              "      <td>24.1</td>\n",
              "      <td>6</td>\n",
              "      <td>6</td>\n",
              "      <td>281</td>\n",
              "      <td>110.6</td>\n",
              "      <td>...</td>\n",
              "      <td>1.2</td>\n",
              "      <td>3.8</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4.52</td>\n",
              "      <td>4.52</td>\n",
              "      <td>3.80</td>\n",
              "      <td>3.62</td>\n",
              "      <td>3.98</td>\n",
              "      <td>20.44</td>\n",
              "      <td>12.84</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>330</th>\n",
              "      <td>396</td>\n",
              "      <td>Manchester United</td>\n",
              "      <td>M</td>\n",
              "      <td>Rashford</td>\n",
              "      <td>8.5</td>\n",
              "      <td>10.7</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>132</td>\n",
              "      <td>75.2</td>\n",
              "      <td>...</td>\n",
              "      <td>1.1</td>\n",
              "      <td>3.7</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.87</td>\n",
              "      <td>3.70</td>\n",
              "      <td>4.21</td>\n",
              "      <td>3.87</td>\n",
              "      <td>4.21</td>\n",
              "      <td>19.86</td>\n",
              "      <td>11.78</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>104</th>\n",
              "      <td>14</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>M</td>\n",
              "      <td>Ødegaard</td>\n",
              "      <td>8.4</td>\n",
              "      <td>14.6</td>\n",
              "      <td>4</td>\n",
              "      <td>3</td>\n",
              "      <td>263</td>\n",
              "      <td>114.2</td>\n",
              "      <td>...</td>\n",
              "      <td>1.2</td>\n",
              "      <td>3.6</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.60</td>\n",
              "      <td>3.92</td>\n",
              "      <td>3.92</td>\n",
              "      <td>3.76</td>\n",
              "      <td>4.24</td>\n",
              "      <td>19.44</td>\n",
              "      <td>11.44</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>61</th>\n",
              "      <td>343</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>F</td>\n",
              "      <td>J.Alvarez</td>\n",
              "      <td>6.9</td>\n",
              "      <td>27.8</td>\n",
              "      <td>4</td>\n",
              "      <td>8</td>\n",
              "      <td>333</td>\n",
              "      <td>128.0</td>\n",
              "      <td>...</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.7</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2.00</td>\n",
              "      <td>4.38</td>\n",
              "      <td>4.55</td>\n",
              "      <td>3.87</td>\n",
              "      <td>4.38</td>\n",
              "      <td>19.18</td>\n",
              "      <td>10.93</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>16</th>\n",
              "      <td>135</td>\n",
              "      <td>Brighton</td>\n",
              "      <td>F</td>\n",
              "      <td>João Pedro</td>\n",
              "      <td>5.4</td>\n",
              "      <td>10.4</td>\n",
              "      <td>5</td>\n",
              "      <td>1</td>\n",
              "      <td>184</td>\n",
              "      <td>92.6</td>\n",
              "      <td>...</td>\n",
              "      <td>1.1</td>\n",
              "      <td>3.5</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.65</td>\n",
              "      <td>3.65</td>\n",
              "      <td>3.65</td>\n",
              "      <td>3.95</td>\n",
              "      <td>4.10</td>\n",
              "      <td>19.00</td>\n",
              "      <td>10.95</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>180</th>\n",
              "      <td>143</td>\n",
              "      <td>Brighton</td>\n",
              "      <td>M</td>\n",
              "      <td>Mitoma</td>\n",
              "      <td>6.5</td>\n",
              "      <td>21.4</td>\n",
              "      <td>3</td>\n",
              "      <td>5</td>\n",
              "      <td>200</td>\n",
              "      <td>113.7</td>\n",
              "      <td>...</td>\n",
              "      <td>1.1</td>\n",
              "      <td>3.5</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.65</td>\n",
              "      <td>3.65</td>\n",
              "      <td>3.65</td>\n",
              "      <td>3.95</td>\n",
              "      <td>4.10</td>\n",
              "      <td>19.00</td>\n",
              "      <td>10.95</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>432</th>\n",
              "      <td>20</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>D</td>\n",
              "      <td>Saliba</td>\n",
              "      <td>5.5</td>\n",
              "      <td>35.4</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>334</td>\n",
              "      <td>43.8</td>\n",
              "      <td>...</td>\n",
              "      <td>1.2</td>\n",
              "      <td>3.5</td>\n",
              "      <td>1.0</td>\n",
              "      <td>3.50</td>\n",
              "      <td>3.80</td>\n",
              "      <td>3.80</td>\n",
              "      <td>3.65</td>\n",
              "      <td>4.10</td>\n",
              "      <td>18.85</td>\n",
              "      <td>11.10</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>435</th>\n",
              "      <td>29</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>D</td>\n",
              "      <td>White</td>\n",
              "      <td>5.6</td>\n",
              "      <td>11.1</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>302</td>\n",
              "      <td>62.1</td>\n",
              "      <td>...</td>\n",
              "      <td>1.2</td>\n",
              "      <td>3.5</td>\n",
              "      <td>1.0</td>\n",
              "      <td>3.50</td>\n",
              "      <td>3.80</td>\n",
              "      <td>3.80</td>\n",
              "      <td>3.65</td>\n",
              "      <td>4.10</td>\n",
              "      <td>18.85</td>\n",
              "      <td>11.10</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>436</th>\n",
              "      <td>31</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>D</td>\n",
              "      <td>Zinchenko</td>\n",
              "      <td>5.2</td>\n",
              "      <td>12.9</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>295</td>\n",
              "      <td>61.9</td>\n",
              "      <td>...</td>\n",
              "      <td>1.2</td>\n",
              "      <td>3.5</td>\n",
              "      <td>1.0</td>\n",
              "      <td>3.50</td>\n",
              "      <td>3.80</td>\n",
              "      <td>3.80</td>\n",
              "      <td>3.65</td>\n",
              "      <td>4.10</td>\n",
              "      <td>18.85</td>\n",
              "      <td>11.10</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>85</td>\n",
              "      <td>Bournemouth</td>\n",
              "      <td>F</td>\n",
              "      <td>Solanke</td>\n",
              "      <td>6.8</td>\n",
              "      <td>19.7</td>\n",
              "      <td>8</td>\n",
              "      <td>1</td>\n",
              "      <td>216</td>\n",
              "      <td>114.7</td>\n",
              "      <td>...</td>\n",
              "      <td>0.8</td>\n",
              "      <td>4.1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4.10</td>\n",
              "      <td>3.89</td>\n",
              "      <td>3.68</td>\n",
              "      <td>3.47</td>\n",
              "      <td>3.68</td>\n",
              "      <td>18.82</td>\n",
              "      <td>11.67</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>210</th>\n",
              "      <td>199</td>\n",
              "      <td>Chelsea</td>\n",
              "      <td>M</td>\n",
              "      <td>Enzo</td>\n",
              "      <td>4.8</td>\n",
              "      <td>2.8</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>197</td>\n",
              "      <td>78.5</td>\n",
              "      <td>...</td>\n",
              "      <td>1.1</td>\n",
              "      <td>3.6</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.92</td>\n",
              "      <td>3.60</td>\n",
              "      <td>4.08</td>\n",
              "      <td>3.76</td>\n",
              "      <td>3.44</td>\n",
              "      <td>18.80</td>\n",
              "      <td>11.60</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>602</th>\n",
              "      <td>430</td>\n",
              "      <td>Newcastle United</td>\n",
              "      <td>D</td>\n",
              "      <td>Trippier</td>\n",
              "      <td>6.9</td>\n",
              "      <td>43.3</td>\n",
              "      <td>0</td>\n",
              "      <td>7</td>\n",
              "      <td>403</td>\n",
              "      <td>117.9</td>\n",
              "      <td>...</td>\n",
              "      <td>1.2</td>\n",
              "      <td>3.5</td>\n",
              "      <td>0.5</td>\n",
              "      <td>4.10</td>\n",
              "      <td>4.10</td>\n",
              "      <td>3.50</td>\n",
              "      <td>3.35</td>\n",
              "      <td>3.65</td>\n",
              "      <td>18.70</td>\n",
              "      <td>11.70</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>542</th>\n",
              "      <td>290</td>\n",
              "      <td>Liverpool</td>\n",
              "      <td>D</td>\n",
              "      <td>Alexander-Arnold</td>\n",
              "      <td>8.2</td>\n",
              "      <td>17.5</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "      <td>373</td>\n",
              "      <td>108.9</td>\n",
              "      <td>...</td>\n",
              "      <td>1.2</td>\n",
              "      <td>3.5</td>\n",
              "      <td>0.5</td>\n",
              "      <td>3.50</td>\n",
              "      <td>3.95</td>\n",
              "      <td>3.50</td>\n",
              "      <td>3.95</td>\n",
              "      <td>3.65</td>\n",
              "      <td>18.55</td>\n",
              "      <td>10.95</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>120</th>\n",
              "      <td>43</td>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>M</td>\n",
              "      <td>Douglas Luiz</td>\n",
              "      <td>5.5</td>\n",
              "      <td>6.8</td>\n",
              "      <td>5</td>\n",
              "      <td>2</td>\n",
              "      <td>338</td>\n",
              "      <td>97.5</td>\n",
              "      <td>...</td>\n",
              "      <td>1.1</td>\n",
              "      <td>3.5</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.95</td>\n",
              "      <td>3.50</td>\n",
              "      <td>3.80</td>\n",
              "      <td>3.80</td>\n",
              "      <td>3.35</td>\n",
              "      <td>18.40</td>\n",
              "      <td>11.25</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>100</th>\n",
              "      <td>6</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>M</td>\n",
              "      <td>Havertz</td>\n",
              "      <td>7.1</td>\n",
              "      <td>1.7</td>\n",
              "      <td>4</td>\n",
              "      <td>1</td>\n",
              "      <td>144</td>\n",
              "      <td>68.7</td>\n",
              "      <td>...</td>\n",
              "      <td>1.2</td>\n",
              "      <td>3.4</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.40</td>\n",
              "      <td>3.68</td>\n",
              "      <td>3.68</td>\n",
              "      <td>3.54</td>\n",
              "      <td>3.96</td>\n",
              "      <td>18.26</td>\n",
              "      <td>10.76</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>308</th>\n",
              "      <td>353</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>M</td>\n",
              "      <td>Foden</td>\n",
              "      <td>7.6</td>\n",
              "      <td>10.6</td>\n",
              "      <td>4</td>\n",
              "      <td>4</td>\n",
              "      <td>304</td>\n",
              "      <td>122.7</td>\n",
              "      <td>...</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.5</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2.00</td>\n",
              "      <td>4.10</td>\n",
              "      <td>4.25</td>\n",
              "      <td>3.65</td>\n",
              "      <td>4.10</td>\n",
              "      <td>18.10</td>\n",
              "      <td>10.35</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>410</th>\n",
              "      <td>664</td>\n",
              "      <td>West Ham</td>\n",
              "      <td>M</td>\n",
              "      <td>Ward-Prowse</td>\n",
              "      <td>6.1</td>\n",
              "      <td>9.0</td>\n",
              "      <td>3</td>\n",
              "      <td>5</td>\n",
              "      <td>348</td>\n",
              "      <td>109.3</td>\n",
              "      <td>...</td>\n",
              "      <td>1.0</td>\n",
              "      <td>3.6</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.44</td>\n",
              "      <td>3.28</td>\n",
              "      <td>3.44</td>\n",
              "      <td>3.92</td>\n",
              "      <td>3.92</td>\n",
              "      <td>18.00</td>\n",
              "      <td>10.16</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>175</th>\n",
              "      <td>134</td>\n",
              "      <td>Brighton</td>\n",
              "      <td>M</td>\n",
              "      <td>Gross</td>\n",
              "      <td>6.4</td>\n",
              "      <td>3.2</td>\n",
              "      <td>3</td>\n",
              "      <td>5</td>\n",
              "      <td>297</td>\n",
              "      <td>132.0</td>\n",
              "      <td>...</td>\n",
              "      <td>1.1</td>\n",
              "      <td>3.3</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.43</td>\n",
              "      <td>3.43</td>\n",
              "      <td>3.43</td>\n",
              "      <td>3.69</td>\n",
              "      <td>3.82</td>\n",
              "      <td>17.80</td>\n",
              "      <td>10.29</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>241</th>\n",
              "      <td>249</td>\n",
              "      <td>Everton</td>\n",
              "      <td>M</td>\n",
              "      <td>A.Doucoure</td>\n",
              "      <td>5.6</td>\n",
              "      <td>1.9</td>\n",
              "      <td>6</td>\n",
              "      <td>2</td>\n",
              "      <td>244</td>\n",
              "      <td>108.3</td>\n",
              "      <td>...</td>\n",
              "      <td>0.9</td>\n",
              "      <td>3.8</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.62</td>\n",
              "      <td>3.08</td>\n",
              "      <td>3.98</td>\n",
              "      <td>3.44</td>\n",
              "      <td>3.62</td>\n",
              "      <td>17.74</td>\n",
              "      <td>10.68</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>215</th>\n",
              "      <td>216</td>\n",
              "      <td>Chelsea</td>\n",
              "      <td>M</td>\n",
              "      <td>Sterling</td>\n",
              "      <td>7.1</td>\n",
              "      <td>12.0</td>\n",
              "      <td>5</td>\n",
              "      <td>5</td>\n",
              "      <td>215</td>\n",
              "      <td>113.0</td>\n",
              "      <td>...</td>\n",
              "      <td>1.1</td>\n",
              "      <td>3.4</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.68</td>\n",
              "      <td>3.40</td>\n",
              "      <td>3.82</td>\n",
              "      <td>3.54</td>\n",
              "      <td>3.26</td>\n",
              "      <td>17.70</td>\n",
              "      <td>10.90</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>430</th>\n",
              "      <td>5</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>D</td>\n",
              "      <td>Gabriel</td>\n",
              "      <td>4.9</td>\n",
              "      <td>15.1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>234</td>\n",
              "      <td>36.0</td>\n",
              "      <td>...</td>\n",
              "      <td>1.2</td>\n",
              "      <td>3.3</td>\n",
              "      <td>1.0</td>\n",
              "      <td>3.30</td>\n",
              "      <td>3.56</td>\n",
              "      <td>3.56</td>\n",
              "      <td>3.43</td>\n",
              "      <td>3.82</td>\n",
              "      <td>17.67</td>\n",
              "      <td>10.42</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>595</th>\n",
              "      <td>407</td>\n",
              "      <td>Newcastle United</td>\n",
              "      <td>D</td>\n",
              "      <td>Burn</td>\n",
              "      <td>4.4</td>\n",
              "      <td>3.8</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>208</td>\n",
              "      <td>48.3</td>\n",
              "      <td>...</td>\n",
              "      <td>1.2</td>\n",
              "      <td>3.3</td>\n",
              "      <td>0.5</td>\n",
              "      <td>3.82</td>\n",
              "      <td>3.82</td>\n",
              "      <td>3.30</td>\n",
              "      <td>3.17</td>\n",
              "      <td>3.43</td>\n",
              "      <td>17.54</td>\n",
              "      <td>10.94</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>275</th>\n",
              "      <td>303</td>\n",
              "      <td>Liverpool</td>\n",
              "      <td>M</td>\n",
              "      <td>Luis Díaz</td>\n",
              "      <td>7.4</td>\n",
              "      <td>6.5</td>\n",
              "      <td>3</td>\n",
              "      <td>1</td>\n",
              "      <td>126</td>\n",
              "      <td>75.4</td>\n",
              "      <td>...</td>\n",
              "      <td>1.2</td>\n",
              "      <td>3.3</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.30</td>\n",
              "      <td>3.69</td>\n",
              "      <td>3.30</td>\n",
              "      <td>3.69</td>\n",
              "      <td>3.43</td>\n",
              "      <td>17.41</td>\n",
              "      <td>10.29</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>116</th>\n",
              "      <td>34</td>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>M</td>\n",
              "      <td>Bailey</td>\n",
              "      <td>5.6</td>\n",
              "      <td>2.8</td>\n",
              "      <td>5</td>\n",
              "      <td>5</td>\n",
              "      <td>193</td>\n",
              "      <td>72.5</td>\n",
              "      <td>...</td>\n",
              "      <td>1.1</td>\n",
              "      <td>3.3</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.69</td>\n",
              "      <td>3.30</td>\n",
              "      <td>3.56</td>\n",
              "      <td>3.56</td>\n",
              "      <td>3.17</td>\n",
              "      <td>17.28</td>\n",
              "      <td>10.55</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>129</th>\n",
              "      <td>599</td>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>M</td>\n",
              "      <td>Diaby</td>\n",
              "      <td>6.7</td>\n",
              "      <td>10.2</td>\n",
              "      <td>3</td>\n",
              "      <td>7</td>\n",
              "      <td>227</td>\n",
              "      <td>94.8</td>\n",
              "      <td>...</td>\n",
              "      <td>1.1</td>\n",
              "      <td>3.3</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.69</td>\n",
              "      <td>3.30</td>\n",
              "      <td>3.56</td>\n",
              "      <td>3.56</td>\n",
              "      <td>3.17</td>\n",
              "      <td>17.28</td>\n",
              "      <td>10.55</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>434</th>\n",
              "      <td>25</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>D</td>\n",
              "      <td>Tomiyasu</td>\n",
              "      <td>4.5</td>\n",
              "      <td>0.4</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>134</td>\n",
              "      <td>23.3</td>\n",
              "      <td>...</td>\n",
              "      <td>1.2</td>\n",
              "      <td>3.2</td>\n",
              "      <td>1.0</td>\n",
              "      <td>3.20</td>\n",
              "      <td>3.44</td>\n",
              "      <td>3.44</td>\n",
              "      <td>3.32</td>\n",
              "      <td>3.68</td>\n",
              "      <td>17.08</td>\n",
              "      <td>10.08</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>568</th>\n",
              "      <td>342</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>D</td>\n",
              "      <td>Aké</td>\n",
              "      <td>5.0</td>\n",
              "      <td>5.1</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>205</td>\n",
              "      <td>46.5</td>\n",
              "      <td>...</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.3</td>\n",
              "      <td>0.8</td>\n",
              "      <td>2.00</td>\n",
              "      <td>3.82</td>\n",
              "      <td>3.95</td>\n",
              "      <td>3.43</td>\n",
              "      <td>3.82</td>\n",
              "      <td>17.02</td>\n",
              "      <td>9.77</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>390</th>\n",
              "      <td>501</td>\n",
              "      <td>Tottenham</td>\n",
              "      <td>M</td>\n",
              "      <td>Kulusevski</td>\n",
              "      <td>7.2</td>\n",
              "      <td>4.6</td>\n",
              "      <td>5</td>\n",
              "      <td>2</td>\n",
              "      <td>270</td>\n",
              "      <td>148.1</td>\n",
              "      <td>...</td>\n",
              "      <td>1.0</td>\n",
              "      <td>3.4</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.54</td>\n",
              "      <td>3.26</td>\n",
              "      <td>3.68</td>\n",
              "      <td>3.26</td>\n",
              "      <td>3.26</td>\n",
              "      <td>17.00</td>\n",
              "      <td>10.48</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>392</th>\n",
              "      <td>504</td>\n",
              "      <td>Tottenham</td>\n",
              "      <td>M</td>\n",
              "      <td>Maddison</td>\n",
              "      <td>7.8</td>\n",
              "      <td>8.3</td>\n",
              "      <td>3</td>\n",
              "      <td>6</td>\n",
              "      <td>230</td>\n",
              "      <td>109.6</td>\n",
              "      <td>...</td>\n",
              "      <td>1.0</td>\n",
              "      <td>3.4</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.54</td>\n",
              "      <td>3.26</td>\n",
              "      <td>3.68</td>\n",
              "      <td>3.26</td>\n",
              "      <td>3.26</td>\n",
              "      <td>17.00</td>\n",
              "      <td>10.48</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>336</th>\n",
              "      <td>402</td>\n",
              "      <td>Newcastle United</td>\n",
              "      <td>M</td>\n",
              "      <td>Almirón</td>\n",
              "      <td>6.2</td>\n",
              "      <td>4.6</td>\n",
              "      <td>3</td>\n",
              "      <td>1</td>\n",
              "      <td>189</td>\n",
              "      <td>69.5</td>\n",
              "      <td>...</td>\n",
              "      <td>1.2</td>\n",
              "      <td>3.2</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.68</td>\n",
              "      <td>3.68</td>\n",
              "      <td>3.20</td>\n",
              "      <td>3.08</td>\n",
              "      <td>3.32</td>\n",
              "      <td>16.96</td>\n",
              "      <td>10.56</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>550</th>\n",
              "      <td>313</td>\n",
              "      <td>Liverpool</td>\n",
              "      <td>D</td>\n",
              "      <td>Virgil</td>\n",
              "      <td>6.2</td>\n",
              "      <td>10.1</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>305</td>\n",
              "      <td>73.9</td>\n",
              "      <td>...</td>\n",
              "      <td>1.2</td>\n",
              "      <td>3.2</td>\n",
              "      <td>0.5</td>\n",
              "      <td>3.20</td>\n",
              "      <td>3.56</td>\n",
              "      <td>3.20</td>\n",
              "      <td>3.56</td>\n",
              "      <td>3.32</td>\n",
              "      <td>16.84</td>\n",
              "      <td>9.96</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>12</th>\n",
              "      <td>119</td>\n",
              "      <td>Brentford</td>\n",
              "      <td>F</td>\n",
              "      <td>Wissa</td>\n",
              "      <td>5.8</td>\n",
              "      <td>6.9</td>\n",
              "      <td>3</td>\n",
              "      <td>2</td>\n",
              "      <td>169</td>\n",
              "      <td>79.3</td>\n",
              "      <td>...</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.4</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2.00</td>\n",
              "      <td>3.82</td>\n",
              "      <td>3.54</td>\n",
              "      <td>3.82</td>\n",
              "      <td>3.54</td>\n",
              "      <td>16.72</td>\n",
              "      <td>9.36</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>471</th>\n",
              "      <td>129</td>\n",
              "      <td>Brighton</td>\n",
              "      <td>D</td>\n",
              "      <td>Dunk</td>\n",
              "      <td>5.0</td>\n",
              "      <td>3.0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>200</td>\n",
              "      <td>56.7</td>\n",
              "      <td>...</td>\n",
              "      <td>1.1</td>\n",
              "      <td>3.1</td>\n",
              "      <td>0.3</td>\n",
              "      <td>3.21</td>\n",
              "      <td>3.21</td>\n",
              "      <td>3.21</td>\n",
              "      <td>3.43</td>\n",
              "      <td>3.54</td>\n",
              "      <td>16.60</td>\n",
              "      <td>9.63</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>265</th>\n",
              "      <td>591</td>\n",
              "      <td>Fulham</td>\n",
              "      <td>M</td>\n",
              "      <td>Willian</td>\n",
              "      <td>5.3</td>\n",
              "      <td>1.2</td>\n",
              "      <td>4</td>\n",
              "      <td>2</td>\n",
              "      <td>214</td>\n",
              "      <td>79.1</td>\n",
              "      <td>...</td>\n",
              "      <td>0.9</td>\n",
              "      <td>3.3</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.43</td>\n",
              "      <td>3.43</td>\n",
              "      <td>3.04</td>\n",
              "      <td>3.17</td>\n",
              "      <td>3.43</td>\n",
              "      <td>16.50</td>\n",
              "      <td>9.90</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>394</th>\n",
              "      <td>509</td>\n",
              "      <td>Tottenham</td>\n",
              "      <td>M</td>\n",
              "      <td>Richarlison</td>\n",
              "      <td>6.7</td>\n",
              "      <td>2.8</td>\n",
              "      <td>4</td>\n",
              "      <td>3</td>\n",
              "      <td>125</td>\n",
              "      <td>70.0</td>\n",
              "      <td>...</td>\n",
              "      <td>1.0</td>\n",
              "      <td>3.3</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.43</td>\n",
              "      <td>3.17</td>\n",
              "      <td>3.56</td>\n",
              "      <td>3.17</td>\n",
              "      <td>3.17</td>\n",
              "      <td>16.50</td>\n",
              "      <td>10.16</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>644</th>\n",
              "      <td>506</td>\n",
              "      <td>Tottenham</td>\n",
              "      <td>D</td>\n",
              "      <td>Pedro Porro</td>\n",
              "      <td>5.5</td>\n",
              "      <td>22.8</td>\n",
              "      <td>0</td>\n",
              "      <td>6</td>\n",
              "      <td>374</td>\n",
              "      <td>102.3</td>\n",
              "      <td>...</td>\n",
              "      <td>1.0</td>\n",
              "      <td>3.3</td>\n",
              "      <td>0.1</td>\n",
              "      <td>3.43</td>\n",
              "      <td>3.17</td>\n",
              "      <td>3.56</td>\n",
              "      <td>3.17</td>\n",
              "      <td>3.17</td>\n",
              "      <td>16.50</td>\n",
              "      <td>10.16</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>8</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>F</td>\n",
              "      <td>G.Jesus</td>\n",
              "      <td>8.0</td>\n",
              "      <td>4.9</td>\n",
              "      <td>3</td>\n",
              "      <td>2</td>\n",
              "      <td>143</td>\n",
              "      <td>77.5</td>\n",
              "      <td>...</td>\n",
              "      <td>1.2</td>\n",
              "      <td>3.1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.10</td>\n",
              "      <td>3.32</td>\n",
              "      <td>3.32</td>\n",
              "      <td>3.21</td>\n",
              "      <td>3.54</td>\n",
              "      <td>16.49</td>\n",
              "      <td>9.74</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>50 rows × 23 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-6e0726eb-f30f-41a8-9c26-fdc682c79cf6')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-6e0726eb-f30f-41a8-9c26-fdc682c79cf6 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-6e0726eb-f30f-41a8-9c26-fdc682c79cf6');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-267ec00a-99be-4c4b-91e3-ec87d3d4f599\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-267ec00a-99be-4c4b-91e3-ec87d3d4f599')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-267ec00a-99be-4c4b-91e3-ec87d3d4f599 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 50
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import matplotlib.pyplot as plt\n",
        "import pandas as pd\n",
        "import numpy as np\n",
        "import string"
      ],
      "metadata": {
        "id": "JSw3vk9PJvps"
      },
      "execution_count": 51,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "fig, ax = plt.subplots(1, figsize=(10,8))\n",
        "ax.scatter(x=Top50['cost'],y=Top50['5GW Total'],c='DarkBlue')\n",
        "# set labels\n",
        "ax.set_xlabel('cost')\n",
        "ax.set_ylabel('5GW Total')\n",
        "\n",
        "# annotate points in axis\n",
        "for idx, row in Top50.iterrows():\n",
        "    ax.annotate(row['name'], (row['cost'], row['5GW Total']) )\n",
        "# force matplotlib to draw the graph\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 696
        },
        "id": "435FV-_ocWOi",
        "outputId": "b54aea7d-7cf4-4cbe-a94b-945b5e09cf1b"
      },
      "execution_count": 52,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1000x800 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "rawdfgw228x"
      ],
      "metadata": {
        "id": "mQ58vdHpUd8O",
        "outputId": "1ea1cb34-5c7a-47c0-f41c-2406c066f0e6",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 424
        }
      },
      "execution_count": 53,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "      id                     team pos     name  cost  selected_by_percent  \\\n",
              "0      1                  Arsenal   F  Balogun   4.4                  0.2   \n",
              "1      8                  Arsenal   F  G.Jesus   8.0                  4.9   \n",
              "2     13                  Arsenal   F  Nketiah   5.4                  5.5   \n",
              "3     39              Aston Villa   F    Davis   4.9                  0.1   \n",
              "4     44              Aston Villa   F    Duran   5.0                  0.2   \n",
              "..   ...                      ...  ..      ...   ...                  ...   \n",
              "760  647                 West Ham   G    Anang   4.0                  0.1   \n",
              "761  546  Wolverhampton Wanderers   G  Bentley   3.9                  1.3   \n",
              "762  564  Wolverhampton Wanderers   G     King   3.9                  0.7   \n",
              "763  569  Wolverhampton Wanderers   G  José Sá   5.0                  1.3   \n",
              "764  571  Wolverhampton Wanderers   G   Šarkić   4.0                  0.3   \n",
              "\n",
              "     goals_scored  assists  bps  ict_index  ...  home_adjustment  xPallgw  \\\n",
              "0               0        0    0        0.0  ...              1.2      2.0   \n",
              "1               3        2  143       77.5  ...              1.2      3.1   \n",
              "2               5        3  177       59.1  ...              1.2      2.9   \n",
              "3               0        0    0        0.0  ...              1.1      2.0   \n",
              "4               2        0   61       15.3  ...              1.1      2.2   \n",
              "..            ...      ...  ...        ...  ...              ...      ...   \n",
              "760             0        0    0        0.0  ...              1.0      2.0   \n",
              "761             0        0   60        5.7  ...              0.8      2.1   \n",
              "762             0        0    0        0.0  ...              0.8      2.1   \n",
              "763             0        0  236       35.1  ...              0.8      2.1   \n",
              "764             0        0    0        0.0  ...              0.8      2.1   \n",
              "\n",
              "     xCSP  gw18  gw19  gw20  gw21  gw22  5GW Total  3GW Total  \n",
              "0     NaN  2.00  2.00  2.00  2.00  2.00      10.00       6.00  \n",
              "1     NaN  3.10  3.32  3.32  3.21  3.54      16.49       9.74  \n",
              "2     NaN  2.90  3.08  3.08  2.99  3.26      15.31       9.06  \n",
              "3     NaN  2.00  2.00  2.00  2.00  2.00      10.00       6.00  \n",
              "4     NaN  2.26  2.20  2.24  2.24  2.18      11.12       6.70  \n",
              "..    ...   ...   ...   ...   ...   ...        ...        ...  \n",
              "760   0.0  2.00  2.00  2.00  2.00  2.00      10.00       6.00  \n",
              "761   0.1  2.08  2.07  2.09  2.07  2.07      10.38       6.24  \n",
              "762   0.1  2.08  2.07  2.09  2.07  2.07      10.38       6.24  \n",
              "763   0.1  2.08  2.07  2.09  2.07  2.07      10.38       6.24  \n",
              "764   0.1  2.08  2.07  2.09  2.07  2.07      10.38       6.24  \n",
              "\n",
              "[741 rows x 23 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-7b380b47-b023-40b9-aa79-56cf77e10cc9\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>team</th>\n",
              "      <th>pos</th>\n",
              "      <th>name</th>\n",
              "      <th>cost</th>\n",
              "      <th>selected_by_percent</th>\n",
              "      <th>goals_scored</th>\n",
              "      <th>assists</th>\n",
              "      <th>bps</th>\n",
              "      <th>ict_index</th>\n",
              "      <th>...</th>\n",
              "      <th>home_adjustment</th>\n",
              "      <th>xPallgw</th>\n",
              "      <th>xCSP</th>\n",
              "      <th>gw18</th>\n",
              "      <th>gw19</th>\n",
              "      <th>gw20</th>\n",
              "      <th>gw21</th>\n",
              "      <th>gw22</th>\n",
              "      <th>5GW Total</th>\n",
              "      <th>3GW Total</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>1</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>F</td>\n",
              "      <td>Balogun</td>\n",
              "      <td>4.4</td>\n",
              "      <td>0.2</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>1.2</td>\n",
              "      <td>2.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>10.00</td>\n",
              "      <td>6.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>8</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>F</td>\n",
              "      <td>G.Jesus</td>\n",
              "      <td>8.0</td>\n",
              "      <td>4.9</td>\n",
              "      <td>3</td>\n",
              "      <td>2</td>\n",
              "      <td>143</td>\n",
              "      <td>77.5</td>\n",
              "      <td>...</td>\n",
              "      <td>1.2</td>\n",
              "      <td>3.1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.10</td>\n",
              "      <td>3.32</td>\n",
              "      <td>3.32</td>\n",
              "      <td>3.21</td>\n",
              "      <td>3.54</td>\n",
              "      <td>16.49</td>\n",
              "      <td>9.74</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>13</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>F</td>\n",
              "      <td>Nketiah</td>\n",
              "      <td>5.4</td>\n",
              "      <td>5.5</td>\n",
              "      <td>5</td>\n",
              "      <td>3</td>\n",
              "      <td>177</td>\n",
              "      <td>59.1</td>\n",
              "      <td>...</td>\n",
              "      <td>1.2</td>\n",
              "      <td>2.9</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2.90</td>\n",
              "      <td>3.08</td>\n",
              "      <td>3.08</td>\n",
              "      <td>2.99</td>\n",
              "      <td>3.26</td>\n",
              "      <td>15.31</td>\n",
              "      <td>9.06</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>39</td>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>F</td>\n",
              "      <td>Davis</td>\n",
              "      <td>4.9</td>\n",
              "      <td>0.1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>1.1</td>\n",
              "      <td>2.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>10.00</td>\n",
              "      <td>6.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>44</td>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>F</td>\n",
              "      <td>Duran</td>\n",
              "      <td>5.0</td>\n",
              "      <td>0.2</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>61</td>\n",
              "      <td>15.3</td>\n",
              "      <td>...</td>\n",
              "      <td>1.1</td>\n",
              "      <td>2.2</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2.26</td>\n",
              "      <td>2.20</td>\n",
              "      <td>2.24</td>\n",
              "      <td>2.24</td>\n",
              "      <td>2.18</td>\n",
              "      <td>11.12</td>\n",
              "      <td>6.70</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>760</th>\n",
              "      <td>647</td>\n",
              "      <td>West Ham</td>\n",
              "      <td>G</td>\n",
              "      <td>Anang</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>1.0</td>\n",
              "      <td>2.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>10.00</td>\n",
              "      <td>6.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>761</th>\n",
              "      <td>546</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>G</td>\n",
              "      <td>Bentley</td>\n",
              "      <td>3.9</td>\n",
              "      <td>1.3</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>60</td>\n",
              "      <td>5.7</td>\n",
              "      <td>...</td>\n",
              "      <td>0.8</td>\n",
              "      <td>2.1</td>\n",
              "      <td>0.1</td>\n",
              "      <td>2.08</td>\n",
              "      <td>2.07</td>\n",
              "      <td>2.09</td>\n",
              "      <td>2.07</td>\n",
              "      <td>2.07</td>\n",
              "      <td>10.38</td>\n",
              "      <td>6.24</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>762</th>\n",
              "      <td>564</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>G</td>\n",
              "      <td>King</td>\n",
              "      <td>3.9</td>\n",
              "      <td>0.7</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0.8</td>\n",
              "      <td>2.1</td>\n",
              "      <td>0.1</td>\n",
              "      <td>2.08</td>\n",
              "      <td>2.07</td>\n",
              "      <td>2.09</td>\n",
              "      <td>2.07</td>\n",
              "      <td>2.07</td>\n",
              "      <td>10.38</td>\n",
              "      <td>6.24</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>763</th>\n",
              "      <td>569</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>G</td>\n",
              "      <td>José Sá</td>\n",
              "      <td>5.0</td>\n",
              "      <td>1.3</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>236</td>\n",
              "      <td>35.1</td>\n",
              "      <td>...</td>\n",
              "      <td>0.8</td>\n",
              "      <td>2.1</td>\n",
              "      <td>0.1</td>\n",
              "      <td>2.08</td>\n",
              "      <td>2.07</td>\n",
              "      <td>2.09</td>\n",
              "      <td>2.07</td>\n",
              "      <td>2.07</td>\n",
              "      <td>10.38</td>\n",
              "      <td>6.24</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>764</th>\n",
              "      <td>571</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>G</td>\n",
              "      <td>Šarkić</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.3</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0.8</td>\n",
              "      <td>2.1</td>\n",
              "      <td>0.1</td>\n",
              "      <td>2.08</td>\n",
              "      <td>2.07</td>\n",
              "      <td>2.09</td>\n",
              "      <td>2.07</td>\n",
              "      <td>2.07</td>\n",
              "      <td>10.38</td>\n",
              "      <td>6.24</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>741 rows × 23 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-7b380b47-b023-40b9-aa79-56cf77e10cc9')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-7b380b47-b023-40b9-aa79-56cf77e10cc9 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-7b380b47-b023-40b9-aa79-56cf77e10cc9');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-b681a3b4-e8a1-497d-b537-5666f2aaf16a\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-b681a3b4-e8a1-497d-b537-5666f2aaf16a')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-b681a3b4-e8a1-497d-b537-5666f2aaf16a button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 53
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "apiplayers = master"
      ],
      "metadata": {
        "id": "3bvpGcxtVMyS"
      },
      "execution_count": 54,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "Mostselected = apiplayers.nlargest(20, 'selected_by_percent')\n",
        "Mostselected"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 677
        },
        "id": "O-wNiNtosYZU",
        "outputId": "854e00ed-e2d9-4b82-a3f1-b84d0dc89c3f"
      },
      "execution_count": 55,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "      id              team pos              name  cost  selected_by_percent  \\\n",
              "473  355   Manchester City   F           Haaland  13.9                 63.6   \n",
              "17    19           Arsenal   M              Saka   9.0                 58.4   \n",
              "399  308         Liverpool   M             Salah  13.2                 54.0   \n",
              "61    60       Aston Villa   F           Watkins   8.7                 49.7   \n",
              "560  430  Newcastle United   D          Trippier   6.9                 43.3   \n",
              "686  516         Tottenham   M               Son   9.8                 42.9   \n",
              "18    20           Arsenal   D            Saliba   5.5                 35.4   \n",
              "702  524          West Ham   G            Areola   4.2                 32.9   \n",
              "462  343   Manchester City   F         J.Alvarez   6.9                 27.8   \n",
              "542  412  Newcastle United   M            Gordon   6.2                 24.1   \n",
              "260  362           Chelsea   M            Palmer   5.6                 22.9   \n",
              "677  506         Tottenham   D       Pedro Porro   5.5                 22.8   \n",
              "704  526          West Ham   M             Bowen   7.8                 22.0   \n",
              "38    36       Aston Villa   D              Cash   4.7                 21.9   \n",
              "165  143          Brighton   M            Mitoma   6.5                 21.4   \n",
              "94    85       Bournemouth   F           Solanke   6.8                 19.7   \n",
              "280  220    Crystal Palace   D          Andersen   5.0                 19.1   \n",
              "381  290         Liverpool   D  Alexander-Arnold   8.2                 17.5   \n",
              "354  275            Fulham   G              Leno   4.8                 17.2   \n",
              "545  415  Newcastle United   F              Isak   7.6                 16.4   \n",
              "\n",
              "     expected_goals  expected_assists  goals_scored  assists  bps  ict_index  \\\n",
              "473           14.95              1.17            14        5  417      159.8   \n",
              "17             5.19              5.67             5        8  361      164.2   \n",
              "399           10.62              4.35            11        7  387      188.3   \n",
              "61             8.40              1.89             9        9  370      149.7   \n",
              "560            0.25              5.32             0        7  403      117.9   \n",
              "686            6.26              3.65            10        4  368      150.0   \n",
              "18             1.07              0.53             1        1  334       43.8   \n",
              "702            0.00              0.00             0        0  243       37.8   \n",
              "462            4.29              4.10             4        8  333      128.0   \n",
              "542            4.88              2.15             6        6  281      110.6   \n",
              "260            5.42              3.08             6        4  258      101.8   \n",
              "677            1.82              3.43             0        6  374      102.3   \n",
              "704            6.82              1.67            10        1  266      126.5   \n",
              "38             3.71              1.34             2        1  216       63.4   \n",
              "165            3.11              3.21             3        5  200      113.7   \n",
              "94             8.20              0.87             8        1  216      114.7   \n",
              "280            1.14              0.82             2        1  323       80.7   \n",
              "381            1.00              3.36             2        3  373      108.9   \n",
              "354            0.00              0.00             0        0  391       57.9   \n",
              "545            7.64              0.87             7        0  213       68.3   \n",
              "\n",
              "     points  points_per_game  minutes  apppoint  assistvalue  \n",
              "473     112              7.5     1294         2            3  \n",
              "17       97              6.1     1393         2            3  \n",
              "399     130              7.6     1470         2            3  \n",
              "61      108              6.4     1489         2            3  \n",
              "560      82              5.1     1392         2            3  \n",
              "686     115              6.8     1420         2            3  \n",
              "18       72              4.2     1530         2            3  \n",
              "702      45              3.2     1260         2            3  \n",
              "462      82              4.8     1409         2            3  \n",
              "542      89              5.6     1306         2            3  \n",
              "260      73              4.9      970         2            3  \n",
              "677      68              4.2     1437         2            3  \n",
              "704      94              5.9     1440         2            3  \n",
              "38       49              3.1     1172         2            3  \n",
              "165      61              3.8     1238         2            3  \n",
              "94       73              4.6     1425         2            3  \n",
              "280      64              3.8     1530         2            3  \n",
              "381      84              5.6     1228         2            3  \n",
              "354      69              4.1     1530         2            3  \n",
              "545      58              4.8      814         2            3  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-47394b42-70c5-4900-bf4e-89bd6a4023fb\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>team</th>\n",
              "      <th>pos</th>\n",
              "      <th>name</th>\n",
              "      <th>cost</th>\n",
              "      <th>selected_by_percent</th>\n",
              "      <th>expected_goals</th>\n",
              "      <th>expected_assists</th>\n",
              "      <th>goals_scored</th>\n",
              "      <th>assists</th>\n",
              "      <th>bps</th>\n",
              "      <th>ict_index</th>\n",
              "      <th>points</th>\n",
              "      <th>points_per_game</th>\n",
              "      <th>minutes</th>\n",
              "      <th>apppoint</th>\n",
              "      <th>assistvalue</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>473</th>\n",
              "      <td>355</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>F</td>\n",
              "      <td>Haaland</td>\n",
              "      <td>13.9</td>\n",
              "      <td>63.6</td>\n",
              "      <td>14.95</td>\n",
              "      <td>1.17</td>\n",
              "      <td>14</td>\n",
              "      <td>5</td>\n",
              "      <td>417</td>\n",
              "      <td>159.8</td>\n",
              "      <td>112</td>\n",
              "      <td>7.5</td>\n",
              "      <td>1294</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>17</th>\n",
              "      <td>19</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>M</td>\n",
              "      <td>Saka</td>\n",
              "      <td>9.0</td>\n",
              "      <td>58.4</td>\n",
              "      <td>5.19</td>\n",
              "      <td>5.67</td>\n",
              "      <td>5</td>\n",
              "      <td>8</td>\n",
              "      <td>361</td>\n",
              "      <td>164.2</td>\n",
              "      <td>97</td>\n",
              "      <td>6.1</td>\n",
              "      <td>1393</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>399</th>\n",
              "      <td>308</td>\n",
              "      <td>Liverpool</td>\n",
              "      <td>M</td>\n",
              "      <td>Salah</td>\n",
              "      <td>13.2</td>\n",
              "      <td>54.0</td>\n",
              "      <td>10.62</td>\n",
              "      <td>4.35</td>\n",
              "      <td>11</td>\n",
              "      <td>7</td>\n",
              "      <td>387</td>\n",
              "      <td>188.3</td>\n",
              "      <td>130</td>\n",
              "      <td>7.6</td>\n",
              "      <td>1470</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>61</th>\n",
              "      <td>60</td>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>F</td>\n",
              "      <td>Watkins</td>\n",
              "      <td>8.7</td>\n",
              "      <td>49.7</td>\n",
              "      <td>8.40</td>\n",
              "      <td>1.89</td>\n",
              "      <td>9</td>\n",
              "      <td>9</td>\n",
              "      <td>370</td>\n",
              "      <td>149.7</td>\n",
              "      <td>108</td>\n",
              "      <td>6.4</td>\n",
              "      <td>1489</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>560</th>\n",
              "      <td>430</td>\n",
              "      <td>Newcastle United</td>\n",
              "      <td>D</td>\n",
              "      <td>Trippier</td>\n",
              "      <td>6.9</td>\n",
              "      <td>43.3</td>\n",
              "      <td>0.25</td>\n",
              "      <td>5.32</td>\n",
              "      <td>0</td>\n",
              "      <td>7</td>\n",
              "      <td>403</td>\n",
              "      <td>117.9</td>\n",
              "      <td>82</td>\n",
              "      <td>5.1</td>\n",
              "      <td>1392</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>686</th>\n",
              "      <td>516</td>\n",
              "      <td>Tottenham</td>\n",
              "      <td>M</td>\n",
              "      <td>Son</td>\n",
              "      <td>9.8</td>\n",
              "      <td>42.9</td>\n",
              "      <td>6.26</td>\n",
              "      <td>3.65</td>\n",
              "      <td>10</td>\n",
              "      <td>4</td>\n",
              "      <td>368</td>\n",
              "      <td>150.0</td>\n",
              "      <td>115</td>\n",
              "      <td>6.8</td>\n",
              "      <td>1420</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>18</th>\n",
              "      <td>20</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>D</td>\n",
              "      <td>Saliba</td>\n",
              "      <td>5.5</td>\n",
              "      <td>35.4</td>\n",
              "      <td>1.07</td>\n",
              "      <td>0.53</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>334</td>\n",
              "      <td>43.8</td>\n",
              "      <td>72</td>\n",
              "      <td>4.2</td>\n",
              "      <td>1530</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>702</th>\n",
              "      <td>524</td>\n",
              "      <td>West Ham</td>\n",
              "      <td>G</td>\n",
              "      <td>Areola</td>\n",
              "      <td>4.2</td>\n",
              "      <td>32.9</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>243</td>\n",
              "      <td>37.8</td>\n",
              "      <td>45</td>\n",
              "      <td>3.2</td>\n",
              "      <td>1260</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>462</th>\n",
              "      <td>343</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>F</td>\n",
              "      <td>J.Alvarez</td>\n",
              "      <td>6.9</td>\n",
              "      <td>27.8</td>\n",
              "      <td>4.29</td>\n",
              "      <td>4.10</td>\n",
              "      <td>4</td>\n",
              "      <td>8</td>\n",
              "      <td>333</td>\n",
              "      <td>128.0</td>\n",
              "      <td>82</td>\n",
              "      <td>4.8</td>\n",
              "      <td>1409</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>542</th>\n",
              "      <td>412</td>\n",
              "      <td>Newcastle United</td>\n",
              "      <td>M</td>\n",
              "      <td>Gordon</td>\n",
              "      <td>6.2</td>\n",
              "      <td>24.1</td>\n",
              "      <td>4.88</td>\n",
              "      <td>2.15</td>\n",
              "      <td>6</td>\n",
              "      <td>6</td>\n",
              "      <td>281</td>\n",
              "      <td>110.6</td>\n",
              "      <td>89</td>\n",
              "      <td>5.6</td>\n",
              "      <td>1306</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>260</th>\n",
              "      <td>362</td>\n",
              "      <td>Chelsea</td>\n",
              "      <td>M</td>\n",
              "      <td>Palmer</td>\n",
              "      <td>5.6</td>\n",
              "      <td>22.9</td>\n",
              "      <td>5.42</td>\n",
              "      <td>3.08</td>\n",
              "      <td>6</td>\n",
              "      <td>4</td>\n",
              "      <td>258</td>\n",
              "      <td>101.8</td>\n",
              "      <td>73</td>\n",
              "      <td>4.9</td>\n",
              "      <td>970</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>677</th>\n",
              "      <td>506</td>\n",
              "      <td>Tottenham</td>\n",
              "      <td>D</td>\n",
              "      <td>Pedro Porro</td>\n",
              "      <td>5.5</td>\n",
              "      <td>22.8</td>\n",
              "      <td>1.82</td>\n",
              "      <td>3.43</td>\n",
              "      <td>0</td>\n",
              "      <td>6</td>\n",
              "      <td>374</td>\n",
              "      <td>102.3</td>\n",
              "      <td>68</td>\n",
              "      <td>4.2</td>\n",
              "      <td>1437</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>704</th>\n",
              "      <td>526</td>\n",
              "      <td>West Ham</td>\n",
              "      <td>M</td>\n",
              "      <td>Bowen</td>\n",
              "      <td>7.8</td>\n",
              "      <td>22.0</td>\n",
              "      <td>6.82</td>\n",
              "      <td>1.67</td>\n",
              "      <td>10</td>\n",
              "      <td>1</td>\n",
              "      <td>266</td>\n",
              "      <td>126.5</td>\n",
              "      <td>94</td>\n",
              "      <td>5.9</td>\n",
              "      <td>1440</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>38</th>\n",
              "      <td>36</td>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>D</td>\n",
              "      <td>Cash</td>\n",
              "      <td>4.7</td>\n",
              "      <td>21.9</td>\n",
              "      <td>3.71</td>\n",
              "      <td>1.34</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>216</td>\n",
              "      <td>63.4</td>\n",
              "      <td>49</td>\n",
              "      <td>3.1</td>\n",
              "      <td>1172</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>165</th>\n",
              "      <td>143</td>\n",
              "      <td>Brighton</td>\n",
              "      <td>M</td>\n",
              "      <td>Mitoma</td>\n",
              "      <td>6.5</td>\n",
              "      <td>21.4</td>\n",
              "      <td>3.11</td>\n",
              "      <td>3.21</td>\n",
              "      <td>3</td>\n",
              "      <td>5</td>\n",
              "      <td>200</td>\n",
              "      <td>113.7</td>\n",
              "      <td>61</td>\n",
              "      <td>3.8</td>\n",
              "      <td>1238</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>94</th>\n",
              "      <td>85</td>\n",
              "      <td>Bournemouth</td>\n",
              "      <td>F</td>\n",
              "      <td>Solanke</td>\n",
              "      <td>6.8</td>\n",
              "      <td>19.7</td>\n",
              "      <td>8.20</td>\n",
              "      <td>0.87</td>\n",
              "      <td>8</td>\n",
              "      <td>1</td>\n",
              "      <td>216</td>\n",
              "      <td>114.7</td>\n",
              "      <td>73</td>\n",
              "      <td>4.6</td>\n",
              "      <td>1425</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>280</th>\n",
              "      <td>220</td>\n",
              "      <td>Crystal Palace</td>\n",
              "      <td>D</td>\n",
              "      <td>Andersen</td>\n",
              "      <td>5.0</td>\n",
              "      <td>19.1</td>\n",
              "      <td>1.14</td>\n",
              "      <td>0.82</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>323</td>\n",
              "      <td>80.7</td>\n",
              "      <td>64</td>\n",
              "      <td>3.8</td>\n",
              "      <td>1530</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>381</th>\n",
              "      <td>290</td>\n",
              "      <td>Liverpool</td>\n",
              "      <td>D</td>\n",
              "      <td>Alexander-Arnold</td>\n",
              "      <td>8.2</td>\n",
              "      <td>17.5</td>\n",
              "      <td>1.00</td>\n",
              "      <td>3.36</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "      <td>373</td>\n",
              "      <td>108.9</td>\n",
              "      <td>84</td>\n",
              "      <td>5.6</td>\n",
              "      <td>1228</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>354</th>\n",
              "      <td>275</td>\n",
              "      <td>Fulham</td>\n",
              "      <td>G</td>\n",
              "      <td>Leno</td>\n",
              "      <td>4.8</td>\n",
              "      <td>17.2</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>391</td>\n",
              "      <td>57.9</td>\n",
              "      <td>69</td>\n",
              "      <td>4.1</td>\n",
              "      <td>1530</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>545</th>\n",
              "      <td>415</td>\n",
              "      <td>Newcastle United</td>\n",
              "      <td>F</td>\n",
              "      <td>Isak</td>\n",
              "      <td>7.6</td>\n",
              "      <td>16.4</td>\n",
              "      <td>7.64</td>\n",
              "      <td>0.87</td>\n",
              "      <td>7</td>\n",
              "      <td>0</td>\n",
              "      <td>213</td>\n",
              "      <td>68.3</td>\n",
              "      <td>58</td>\n",
              "      <td>4.8</td>\n",
              "      <td>814</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-47394b42-70c5-4900-bf4e-89bd6a4023fb')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-47394b42-70c5-4900-bf4e-89bd6a4023fb button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-47394b42-70c5-4900-bf4e-89bd6a4023fb');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-1cc96920-ecbb-4144-ae7e-d52efb0cfe7f\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-1cc96920-ecbb-4144-ae7e-d52efb0cfe7f')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-1cc96920-ecbb-4144-ae7e-d52efb0cfe7f button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 55
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "ax = sns.barplot(x='selected_by_percent', y='name', data=Mostselected, hue='pos', dodge=False)\n",
        "sns.set(rc={'figure.figsize':(11.7,8.27)})\n",
        "plt.title(\"Most Selected\")\n",
        "plt.xticks(rotation=90)\n",
        "plt.ylabel(\"selected_by_percent\")\n",
        "plt.legend(bbox_to_anchor=(1.05, 1), loc='upper left', borderaxespad=0)\n",
        "plt.gcf().set_size_inches(30,10)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 593
        },
        "id": "8PBz92opthgG",
        "outputId": "03b14e66-8b1c-4f8f-c1d1-5438cf1136d3"
      },
      "execution_count": 56,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 3000x1000 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "fbref = pd.read_html('https://fbref.com/en/comps/9/Premier-League-Stats')\n",
        "epltable = fbref[0]\n",
        "epltablexGxGc = epltable.drop(columns=[\n",
        " 'Last 5',\n",
        " 'Attendance',\n",
        " 'Top Team Scorer',\n",
        " 'Goalkeeper',\n",
        " 'Notes'])\n",
        "epltablexGxGc= epltablexGxGc.replace('Newcastle Utd', 'Newcastle United')\n",
        "epltablexGxGc= epltablexGxGc.replace('Wolves','Wolverhampton Wanderers')\n",
        "epltablexGxGc= epltablexGxGc.replace('Leeds United','Leeds')\n",
        "epltablexGxGc= epltablexGxGc.replace('Leicester City','Leicester')\n",
        "epltablexGxGc= epltablexGxGc.replace('Manchester Utd','Manchester United')\n",
        "epltablexGxGc['Squad'] = epltablexGxGc['Squad'].str.replace(r\"[\\\"\\',]\", '')\n",
        "epltablexGxGc= epltablexGxGc.replace('Nottham Forest','Nottingham Forest')\n",
        "epltablexGxGc['xCSP'] = (4 - (epltablexGxGc.xGA * 4/23))\n",
        "epltablexGxGc.rename(columns={'Squad': 'team'}, inplace=True)\n",
        "epltablexGxGc['xG/90'] = (epltablexGxGc.xG / epltablexGxGc.MP)\n",
        "epltablexGxGc['xGA/90'] = (epltablexGxGc.xGA / epltablexGxGc.MP)\n",
        "epltablexGxGc"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 711
        },
        "id": "D8nuKObbLt5s",
        "outputId": "8c0f9eb5-ba73-4355-a08d-17cbbb228561"
      },
      "execution_count": 57,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "<ipython-input-57-f34def3770e4>:14: FutureWarning: The default value of regex will change from True to False in a future version.\n",
            "  epltablexGxGc['Squad'] = epltablexGxGc['Squad'].str.replace(r\"[\\\"\\',]\", '')\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "    Rk                     team  MP   W  D   L  GF  GA  GD  Pts  Pts/MP    xG  \\\n",
              "0    1                  Arsenal  17  12  3   2  35  15  20   39    2.29  31.3   \n",
              "1    2                Liverpool  17  11  5   1  36  15  21   38    2.24  34.4   \n",
              "2    3              Aston Villa  17  12  2   3  37  21  16   38    2.24  30.2   \n",
              "3    4          Manchester City  17  10  4   3  40  20  20   34    2.00  32.2   \n",
              "4    5                Tottenham  17  10  3   4  35  23  12   33    1.94  29.1   \n",
              "5    6         Newcastle United  17   9  2   6  36  21  15   29    1.71  34.8   \n",
              "6    7        Manchester United  17   9  1   7  18  21  -3   28    1.65  26.2   \n",
              "7    8                 West Ham  17   8  3   6  29  30  -1   27    1.59  24.3   \n",
              "8    9                 Brighton  17   7  5   5  33  30   3   26    1.53  28.2   \n",
              "9   10                  Chelsea  17   6  4   7  28  26   2   22    1.29  33.3   \n",
              "10  11                   Fulham  17   6  3   8  26  29  -3   21    1.24  21.6   \n",
              "11  12                Brentford  17   5  4   8  24  24   0   19    1.12  29.0   \n",
              "12  13  Wolverhampton Wanderers  17   5  4   8  21  29  -8   19    1.12  21.0   \n",
              "13  14              Bournemouth  16   5  4   7  21  30  -9   19    1.19  22.0   \n",
              "14  15           Crystal Palace  17   4  5   8  17  25  -8   17    1.00  21.2   \n",
              "15  16                  Everton  17   8  2   7  22  20   2   16    0.94  26.9   \n",
              "16  17        Nottingham Forest  17   3  5   9  17  30 -13   14    0.82  18.6   \n",
              "17  18               Luton Town  16   2  3  11  17  32 -15    9    0.56  14.9   \n",
              "18  19                  Burnley  17   2  2  13  16  36 -20    8    0.47  15.1   \n",
              "19  20            Sheffield Utd  17   2  2  13  12  43 -31    8    0.47  12.9   \n",
              "\n",
              "     xGA   xGD  xGD/90      xCSP     xG/90    xGA/90  \n",
              "0   12.7  18.5    1.09  1.791304  1.841176  0.747059  \n",
              "1   20.5  13.9    0.82  0.434783  2.023529  1.205882  \n",
              "2   22.7   7.5    0.44  0.052174  1.776471  1.335294  \n",
              "3   16.5  15.6    0.92  1.130435  1.894118  0.970588  \n",
              "4   28.1   1.0    0.06 -0.886957  1.711765  1.652941  \n",
              "5   21.6  13.2    0.77  0.243478  2.047059  1.270588  \n",
              "6   28.9  -2.7   -0.16 -1.026087  1.541176  1.700000  \n",
              "7   29.1  -4.8   -0.28 -1.060870  1.429412  1.711765  \n",
              "8   25.2   3.0    0.17 -0.382609  1.658824  1.482353  \n",
              "9   24.2   9.1    0.54 -0.208696  1.958824  1.423529  \n",
              "10  30.5  -8.9   -0.53 -1.304348  1.270588  1.794118  \n",
              "11  21.9   7.1    0.42  0.191304  1.705882  1.288235  \n",
              "12  28.4  -7.4   -0.44 -0.939130  1.235294  1.670588  \n",
              "13  27.8  -5.8   -0.36 -0.834783  1.375000  1.737500  \n",
              "14  23.4  -2.2   -0.13 -0.069565  1.247059  1.376471  \n",
              "15  21.9   5.0    0.29  0.191304  1.582353  1.288235  \n",
              "16  26.1  -7.4   -0.44 -0.539130  1.094118  1.535294  \n",
              "17  33.2 -18.3   -1.15 -1.773913  0.931250  2.075000  \n",
              "18  28.1 -13.0   -0.77 -0.886957  0.888235  1.652941  \n",
              "19  36.2 -23.3   -1.37 -2.295652  0.758824  2.129412  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-33ed1c7d-a6e9-49b6-9889-637f1b2cf7ef\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Rk</th>\n",
              "      <th>team</th>\n",
              "      <th>MP</th>\n",
              "      <th>W</th>\n",
              "      <th>D</th>\n",
              "      <th>L</th>\n",
              "      <th>GF</th>\n",
              "      <th>GA</th>\n",
              "      <th>GD</th>\n",
              "      <th>Pts</th>\n",
              "      <th>Pts/MP</th>\n",
              "      <th>xG</th>\n",
              "      <th>xGA</th>\n",
              "      <th>xGD</th>\n",
              "      <th>xGD/90</th>\n",
              "      <th>xCSP</th>\n",
              "      <th>xG/90</th>\n",
              "      <th>xGA/90</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>1</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>17</td>\n",
              "      <td>12</td>\n",
              "      <td>3</td>\n",
              "      <td>2</td>\n",
              "      <td>35</td>\n",
              "      <td>15</td>\n",
              "      <td>20</td>\n",
              "      <td>39</td>\n",
              "      <td>2.29</td>\n",
              "      <td>31.3</td>\n",
              "      <td>12.7</td>\n",
              "      <td>18.5</td>\n",
              "      <td>1.09</td>\n",
              "      <td>1.791304</td>\n",
              "      <td>1.841176</td>\n",
              "      <td>0.747059</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>2</td>\n",
              "      <td>Liverpool</td>\n",
              "      <td>17</td>\n",
              "      <td>11</td>\n",
              "      <td>5</td>\n",
              "      <td>1</td>\n",
              "      <td>36</td>\n",
              "      <td>15</td>\n",
              "      <td>21</td>\n",
              "      <td>38</td>\n",
              "      <td>2.24</td>\n",
              "      <td>34.4</td>\n",
              "      <td>20.5</td>\n",
              "      <td>13.9</td>\n",
              "      <td>0.82</td>\n",
              "      <td>0.434783</td>\n",
              "      <td>2.023529</td>\n",
              "      <td>1.205882</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>3</td>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>17</td>\n",
              "      <td>12</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "      <td>37</td>\n",
              "      <td>21</td>\n",
              "      <td>16</td>\n",
              "      <td>38</td>\n",
              "      <td>2.24</td>\n",
              "      <td>30.2</td>\n",
              "      <td>22.7</td>\n",
              "      <td>7.5</td>\n",
              "      <td>0.44</td>\n",
              "      <td>0.052174</td>\n",
              "      <td>1.776471</td>\n",
              "      <td>1.335294</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>4</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>17</td>\n",
              "      <td>10</td>\n",
              "      <td>4</td>\n",
              "      <td>3</td>\n",
              "      <td>40</td>\n",
              "      <td>20</td>\n",
              "      <td>20</td>\n",
              "      <td>34</td>\n",
              "      <td>2.00</td>\n",
              "      <td>32.2</td>\n",
              "      <td>16.5</td>\n",
              "      <td>15.6</td>\n",
              "      <td>0.92</td>\n",
              "      <td>1.130435</td>\n",
              "      <td>1.894118</td>\n",
              "      <td>0.970588</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>5</td>\n",
              "      <td>Tottenham</td>\n",
              "      <td>17</td>\n",
              "      <td>10</td>\n",
              "      <td>3</td>\n",
              "      <td>4</td>\n",
              "      <td>35</td>\n",
              "      <td>23</td>\n",
              "      <td>12</td>\n",
              "      <td>33</td>\n",
              "      <td>1.94</td>\n",
              "      <td>29.1</td>\n",
              "      <td>28.1</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.06</td>\n",
              "      <td>-0.886957</td>\n",
              "      <td>1.711765</td>\n",
              "      <td>1.652941</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>6</td>\n",
              "      <td>Newcastle United</td>\n",
              "      <td>17</td>\n",
              "      <td>9</td>\n",
              "      <td>2</td>\n",
              "      <td>6</td>\n",
              "      <td>36</td>\n",
              "      <td>21</td>\n",
              "      <td>15</td>\n",
              "      <td>29</td>\n",
              "      <td>1.71</td>\n",
              "      <td>34.8</td>\n",
              "      <td>21.6</td>\n",
              "      <td>13.2</td>\n",
              "      <td>0.77</td>\n",
              "      <td>0.243478</td>\n",
              "      <td>2.047059</td>\n",
              "      <td>1.270588</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>7</td>\n",
              "      <td>Manchester United</td>\n",
              "      <td>17</td>\n",
              "      <td>9</td>\n",
              "      <td>1</td>\n",
              "      <td>7</td>\n",
              "      <td>18</td>\n",
              "      <td>21</td>\n",
              "      <td>-3</td>\n",
              "      <td>28</td>\n",
              "      <td>1.65</td>\n",
              "      <td>26.2</td>\n",
              "      <td>28.9</td>\n",
              "      <td>-2.7</td>\n",
              "      <td>-0.16</td>\n",
              "      <td>-1.026087</td>\n",
              "      <td>1.541176</td>\n",
              "      <td>1.700000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>8</td>\n",
              "      <td>West Ham</td>\n",
              "      <td>17</td>\n",
              "      <td>8</td>\n",
              "      <td>3</td>\n",
              "      <td>6</td>\n",
              "      <td>29</td>\n",
              "      <td>30</td>\n",
              "      <td>-1</td>\n",
              "      <td>27</td>\n",
              "      <td>1.59</td>\n",
              "      <td>24.3</td>\n",
              "      <td>29.1</td>\n",
              "      <td>-4.8</td>\n",
              "      <td>-0.28</td>\n",
              "      <td>-1.060870</td>\n",
              "      <td>1.429412</td>\n",
              "      <td>1.711765</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>9</td>\n",
              "      <td>Brighton</td>\n",
              "      <td>17</td>\n",
              "      <td>7</td>\n",
              "      <td>5</td>\n",
              "      <td>5</td>\n",
              "      <td>33</td>\n",
              "      <td>30</td>\n",
              "      <td>3</td>\n",
              "      <td>26</td>\n",
              "      <td>1.53</td>\n",
              "      <td>28.2</td>\n",
              "      <td>25.2</td>\n",
              "      <td>3.0</td>\n",
              "      <td>0.17</td>\n",
              "      <td>-0.382609</td>\n",
              "      <td>1.658824</td>\n",
              "      <td>1.482353</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>10</td>\n",
              "      <td>Chelsea</td>\n",
              "      <td>17</td>\n",
              "      <td>6</td>\n",
              "      <td>4</td>\n",
              "      <td>7</td>\n",
              "      <td>28</td>\n",
              "      <td>26</td>\n",
              "      <td>2</td>\n",
              "      <td>22</td>\n",
              "      <td>1.29</td>\n",
              "      <td>33.3</td>\n",
              "      <td>24.2</td>\n",
              "      <td>9.1</td>\n",
              "      <td>0.54</td>\n",
              "      <td>-0.208696</td>\n",
              "      <td>1.958824</td>\n",
              "      <td>1.423529</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10</th>\n",
              "      <td>11</td>\n",
              "      <td>Fulham</td>\n",
              "      <td>17</td>\n",
              "      <td>6</td>\n",
              "      <td>3</td>\n",
              "      <td>8</td>\n",
              "      <td>26</td>\n",
              "      <td>29</td>\n",
              "      <td>-3</td>\n",
              "      <td>21</td>\n",
              "      <td>1.24</td>\n",
              "      <td>21.6</td>\n",
              "      <td>30.5</td>\n",
              "      <td>-8.9</td>\n",
              "      <td>-0.53</td>\n",
              "      <td>-1.304348</td>\n",
              "      <td>1.270588</td>\n",
              "      <td>1.794118</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>11</th>\n",
              "      <td>12</td>\n",
              "      <td>Brentford</td>\n",
              "      <td>17</td>\n",
              "      <td>5</td>\n",
              "      <td>4</td>\n",
              "      <td>8</td>\n",
              "      <td>24</td>\n",
              "      <td>24</td>\n",
              "      <td>0</td>\n",
              "      <td>19</td>\n",
              "      <td>1.12</td>\n",
              "      <td>29.0</td>\n",
              "      <td>21.9</td>\n",
              "      <td>7.1</td>\n",
              "      <td>0.42</td>\n",
              "      <td>0.191304</td>\n",
              "      <td>1.705882</td>\n",
              "      <td>1.288235</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>12</th>\n",
              "      <td>13</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>17</td>\n",
              "      <td>5</td>\n",
              "      <td>4</td>\n",
              "      <td>8</td>\n",
              "      <td>21</td>\n",
              "      <td>29</td>\n",
              "      <td>-8</td>\n",
              "      <td>19</td>\n",
              "      <td>1.12</td>\n",
              "      <td>21.0</td>\n",
              "      <td>28.4</td>\n",
              "      <td>-7.4</td>\n",
              "      <td>-0.44</td>\n",
              "      <td>-0.939130</td>\n",
              "      <td>1.235294</td>\n",
              "      <td>1.670588</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>13</th>\n",
              "      <td>14</td>\n",
              "      <td>Bournemouth</td>\n",
              "      <td>16</td>\n",
              "      <td>5</td>\n",
              "      <td>4</td>\n",
              "      <td>7</td>\n",
              "      <td>21</td>\n",
              "      <td>30</td>\n",
              "      <td>-9</td>\n",
              "      <td>19</td>\n",
              "      <td>1.19</td>\n",
              "      <td>22.0</td>\n",
              "      <td>27.8</td>\n",
              "      <td>-5.8</td>\n",
              "      <td>-0.36</td>\n",
              "      <td>-0.834783</td>\n",
              "      <td>1.375000</td>\n",
              "      <td>1.737500</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>14</th>\n",
              "      <td>15</td>\n",
              "      <td>Crystal Palace</td>\n",
              "      <td>17</td>\n",
              "      <td>4</td>\n",
              "      <td>5</td>\n",
              "      <td>8</td>\n",
              "      <td>17</td>\n",
              "      <td>25</td>\n",
              "      <td>-8</td>\n",
              "      <td>17</td>\n",
              "      <td>1.00</td>\n",
              "      <td>21.2</td>\n",
              "      <td>23.4</td>\n",
              "      <td>-2.2</td>\n",
              "      <td>-0.13</td>\n",
              "      <td>-0.069565</td>\n",
              "      <td>1.247059</td>\n",
              "      <td>1.376471</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>15</th>\n",
              "      <td>16</td>\n",
              "      <td>Everton</td>\n",
              "      <td>17</td>\n",
              "      <td>8</td>\n",
              "      <td>2</td>\n",
              "      <td>7</td>\n",
              "      <td>22</td>\n",
              "      <td>20</td>\n",
              "      <td>2</td>\n",
              "      <td>16</td>\n",
              "      <td>0.94</td>\n",
              "      <td>26.9</td>\n",
              "      <td>21.9</td>\n",
              "      <td>5.0</td>\n",
              "      <td>0.29</td>\n",
              "      <td>0.191304</td>\n",
              "      <td>1.582353</td>\n",
              "      <td>1.288235</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>16</th>\n",
              "      <td>17</td>\n",
              "      <td>Nottingham Forest</td>\n",
              "      <td>17</td>\n",
              "      <td>3</td>\n",
              "      <td>5</td>\n",
              "      <td>9</td>\n",
              "      <td>17</td>\n",
              "      <td>30</td>\n",
              "      <td>-13</td>\n",
              "      <td>14</td>\n",
              "      <td>0.82</td>\n",
              "      <td>18.6</td>\n",
              "      <td>26.1</td>\n",
              "      <td>-7.4</td>\n",
              "      <td>-0.44</td>\n",
              "      <td>-0.539130</td>\n",
              "      <td>1.094118</td>\n",
              "      <td>1.535294</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>17</th>\n",
              "      <td>18</td>\n",
              "      <td>Luton Town</td>\n",
              "      <td>16</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "      <td>11</td>\n",
              "      <td>17</td>\n",
              "      <td>32</td>\n",
              "      <td>-15</td>\n",
              "      <td>9</td>\n",
              "      <td>0.56</td>\n",
              "      <td>14.9</td>\n",
              "      <td>33.2</td>\n",
              "      <td>-18.3</td>\n",
              "      <td>-1.15</td>\n",
              "      <td>-1.773913</td>\n",
              "      <td>0.931250</td>\n",
              "      <td>2.075000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>18</th>\n",
              "      <td>19</td>\n",
              "      <td>Burnley</td>\n",
              "      <td>17</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>13</td>\n",
              "      <td>16</td>\n",
              "      <td>36</td>\n",
              "      <td>-20</td>\n",
              "      <td>8</td>\n",
              "      <td>0.47</td>\n",
              "      <td>15.1</td>\n",
              "      <td>28.1</td>\n",
              "      <td>-13.0</td>\n",
              "      <td>-0.77</td>\n",
              "      <td>-0.886957</td>\n",
              "      <td>0.888235</td>\n",
              "      <td>1.652941</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>19</th>\n",
              "      <td>20</td>\n",
              "      <td>Sheffield Utd</td>\n",
              "      <td>17</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>13</td>\n",
              "      <td>12</td>\n",
              "      <td>43</td>\n",
              "      <td>-31</td>\n",
              "      <td>8</td>\n",
              "      <td>0.47</td>\n",
              "      <td>12.9</td>\n",
              "      <td>36.2</td>\n",
              "      <td>-23.3</td>\n",
              "      <td>-1.37</td>\n",
              "      <td>-2.295652</td>\n",
              "      <td>0.758824</td>\n",
              "      <td>2.129412</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-33ed1c7d-a6e9-49b6-9889-637f1b2cf7ef')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-33ed1c7d-a6e9-49b6-9889-637f1b2cf7ef button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-33ed1c7d-a6e9-49b6-9889-637f1b2cf7ef');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-e3525083-dc41-4f7c-bd53-4e48be27bb27\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-e3525083-dc41-4f7c-bd53-4e48be27bb27')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-e3525083-dc41-4f7c-bd53-4e48be27bb27 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 57
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "fig, ax = plt.subplots(1, figsize=(10,8))\n",
        "ax.scatter(x=epltablexGxGc['xG/90'],y=epltablexGxGc['xGA/90'],c='DarkBlue')\n",
        "# set labels\n",
        "ax.set_xlabel('xG/90')\n",
        "ax.set_ylabel('xGA/90')\n",
        "\n",
        "# annotate points in axis\n",
        "for idx, row in epltablexGxGc.iterrows():\n",
        "    ax.annotate(row['team'], (row['xG/90'], row['xGA/90']) )\n",
        "# force matplotlib to draw the graph\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 704
        },
        "id": "TYn5yVsCNlLv",
        "outputId": "2dc50ad7-aac9-49aa-ce21-8a4b006915c4"
      },
      "execution_count": 58,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1000x800 with 1 Axes>"
            ],
            "image/png": "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/vvvHszNzXHy5HHcvn0LI0eOg66uSJbXyqoSypcvj2fPnsLPr7ss3c7OHsuWLf7/vxXXFxMRERERlSYMjIneExub9tHrhob/AgCOHLkml96hgxcqVjTF7Nm/Y/HiBVi2bBHMzS3w3XfD8fz5M4XAeMSIMfjtt9lYtWoZMjMz4eHhibp168HWtiqWLFmF5cuXYOPGdZBKJahTpx6mTJmBunXrFe3D5kNLSxuLF6/AsmWLcehQMFJTU2FtXRk//fQLOnTwUsjfoEEjnDx5DPXrN5Sl1apVG9ra2hCLxahT5+u0m4iIiIjoc6lJudNNvsRiCeLj8x89LAvU1QUwMhIhISEV2dnFt0mUsjh/Pgo+Pgc+mW/PHi84OVl8hRYpYp8pJ/ab8mGfKR/2mXJivykfVewzY2NRvpueUtnA3iV6j6OjGSwsRMhng2moqQEWFiI4OprlnYGIiIiIiJQOA2Oi9wiFAsyc2RwAFILj3NczZzbnJ4ZERERERGUIf7sn+oCnpy2CgtrC3Fwkl25uLkJQUFt4etqWUMuIiIiIiKg4cPMtojx4etrCw8MGYWExiI1Ng6mpLhwdzThSTERERERUBjEwJsqHUCgosQ22iIiIiIjo6+HwFxEREREREak0BsZERERERESk0hgYExERERERkUpjYExEREREREQqjYExERERERERqTQGxkRERERERKTSGBgTERERERGRSmNgTERERERERCqNgTERERERERGpNAbGREREREREpNIYGBMREREREZFKY2BMREREREREKo2BMREREREREak0BsZERERERESk0hgYExERERERkUpjYExEREREREQqjYExERERERERqTQGxkRERERERKTSSlVgHBoaCn9/f7Rs2RINGzZEp06dsHPnTkil0o/eJ5VKsXLlSrRq1QoNGjRA9+7dcfPmza/TaCIiIiIiIlJqpSowXrduHXR0dDBx4kQsW7YMLVu2xOTJk7FkyZKP3rdq1SosWrQI/fv3x4oVK1ChQgUMHDgQz58//0otJyIiIiIiImWlXtINeN+yZctgbGwse92sWTMkJiZi7dq1CAgIgECgGMdnZmZixYoVGDhwIPr37w8A+Oabb9C+fXsEBQVh6tSpX6n1REREREREpIxK1Yjx+0Fxrtq1ayMlJQVpaWl53nP9+nWkpKTAw8NDlqapqYm2bdvizJkzxdZWIiIiIiIiKhtKVWCcl2vXrsHU1BR6enp5Xo+IiAAA2NrayqVXrVoVUVFRyMjIKPY2EhERERERkfIqVVOpP3T16lWEhIRgwoQJ+eZJSkqCpqYmtLS05NINDAwglUrx5s0baGtrf3Yb1NVL/WcHX0QoFMj9TaUf+0w5sd+UD/tM+bDPlBP7Tfmwz6gsKrWBcUxMDMaMGYOmTZuiX79+JdIGgUANRkaiEqn7azMw0CnpJlAhsc+UE/tN+bDPlA/7TDmx35QP+4zKklIZGCclJWHIkCEwNDTE4sWL89x0K5eBgQHevn2LzMxMuVHjpKQkqKmpoVy5cp/dDolEiqSkvNc2lxVCoQAGBjpISkqHWCwp6eZQAbDPlBP7Tfmwz5QP+0w5sd+Ujyr2mYGBDkfIy7hSFxhnZGRg2LBhSE5Oxvbt26Gvr//R/Llrix8/foxatWrJ0iMiImBhYfFF06gBIDtbNf6zi8USlXnWsoJ9ppzYb8qHfaZ82GfKif2mfNhnVJaUqo89srOzMXr0aERERGD16tUwNTX95D329vbQ09NDaGioLC0rKwtHjhxBy5Yti7O5REREREREVAaUqhHjadOm4eTJk5g4cSJSUlJw8+ZN2bU6depAU1MT3377LaKionD06FEAgJaWFoYNG4bFixfD2NgYNWrUwNatW5GYmIhBgwaV0JMQERERERGRsihVgfH58+cBAHPmzFG4dvz4cVhZWUEikUAsFstdGzJkCKRSKdasWYP4+HjUrl0bQUFBqFSp0ldpNxERERERESkvNalUKi3pRpRWYrEE8fGpJd2MYqWuLoCRkQgJCalcI6Ik2GfKif2mfNhnyod9ppzYb8pHFfvM2FjEzbfKOPYuERERERERqTQGxkRERERERKTSGBgTERERERGRSmNgTERERERERCqNgTERERERERGpNAbGREREREREpNIYGBMREREREZFKY2BMREREREREKo2BMREREREREak0BsZERERERESk0hgYExERERERkUpjYExEREREREQqjYExERERERERqTQGxkRERERERKTSGBgTERERERGRSmNgTERERERERCqNgTERERERERGpNAbGREREREREpNIYGBMREREREZFKY2BMREREREREKo2BMREREREREak0BsZERERERESk0hgYExERERERkUpjYExEREREREQqjYExERERERERqTQGxkRERERERKTSGBgTERERERGRSmNgTERERERERCqNgTERERERERGpNAbGREREREREpNIYGBMREREREZFKY2BMREREREREKo2BMREREREREak0BsZERERERESk0hgYExERERERkUpjYExEREREREQqjYExERERERERqTQGxkRERERERKTSGBgTERERERGRSmNgTERERERERCqNgTERERERERGpNAbGREREREREpNIYGBMREREREZFKY2BMREREREREKo2BMREREREREak0BsZERERERESk0hgYExERERERkUpjYExEREREREQqjYExERERERERqTQGxkRERERERKTSGBgTERERERGRSmNgTERERERERCqNgTERERERERGpNAbGREREREREpNIYGBMREREREZFKY2BMREREREREKo2BMREREREREak0BsZERERERESk0hgYExERERERkUpjYExEREREREQqjYExERERERERqTQGxkRERERERKTSGBgTERERERGRSmNgTERERer69atwdnbA9etXZWnDhw9F377dSrBVRERERPlTL+kGEBFR6RAScgCzZ0/L81rv3t/C33/EV24RERER0dfBwJiIiOQMHvwdzM0t5NJsbauWUGuIiIiIih8DYyIikuPo2By1atUp6WYQERERfTVcY0xERAXi7OyAoKAVCul+fl6YNWtqgcp4/DgCI0YMQ5s2Tujc2QObN6+Xu56VlYXVq5dj4MA+cHd3gZubMwICBsutVwaA6OgoODs7YMuWjdi162907doJbdo4YcyY7xEbGwOpVIp161bDx6cDXF2dMHHiWCQlvfnsZyciIqKyrVSNGD99+hRBQUG4desWHjx4AFtbWwQHB3/yvoSEBCxYsABnzpxBYmIirKys0Lt3b/Ts2fMrtJqIqGxJSUlBYmKiXJqhoeEXl5ucnIxx40bAxcUVrq5tcerUcSxbthi2ttXQrJkTACA1NRUHDuyFm5s7vL07Iy0tDcHB+zB27HCsWrUe1avXlCvz6NFQZGVlw8+vG5KSkrBlywZMmTIJ9vYOuHnzGnr37ofIyEjs2rUdf/21ED/99MsXPwcRERGVPaUqMH7w4AFOnz4NOzs7SCQSSKXSAt03atQoREREYOzYsTA3N8eZM2cwdepUCIVCdOvGXVCJiApj9OgAhbRz567mkbNwXr2KQ2DgNLRv3xEA4OnZCX5+njh4cJ8sMNbX18fOnQegoaEhu8/Lywe9e/th587tmDRpilyZcXFx2LZtD/T09AAAEokEGzeuRWZmJlav3gB19Zwfc4mJCTh69BDGj58ETU3NL34WIiIiKltKVWDs6uoKNzc3AMDEiRNx586dT94TFxeHS5cu4ddff0WXLl0AAM2aNcPt27dx8OBBBsZERIU0duwEVKpkXeTl6ujowt29g+y1hoYGateui6ioF7I0oVAIoVAIICfITUlJhkQiRa1atXH//j2FMlu3dpMFxQBQp05dAEC7dh6yoDgnvR6OHTuMuLiXsLS0KvJnIyIiIuVWqgJjgaDwS56zs7MB5IwyvE9PTw9paWlF0i4iorJILJYgLCwGsbFpMDXVhUSSM0unTp26xbL5VsWKFaGmpiaXpq9vgEePHsqlhYYGY9u2TXj69InsezwAmJtbKpRpamoq91ok0sszPTd4Tk5O/vwHICIiojKrVAXGn8Pc3BzOzs5Yvnw5qlSpAjMzM5w5cwbnz5/HvHnzSrp5RESlUnBwBAIDLyAqKlWWZm39BNrahS9LIpEUKF9+H36+v2zm8OEQzJo1FS1atELPnn1hZGQMgUCATZvW4cWLyDzKFBaqLqBgS3SIiIhItSh9YAwAixcvxpgxY9CxY866NaFQiMDAQLi7u39x2erqZXvjbqFQIPc3lX7sM+VUmvrtwIEIDBp0FB9u45CY+BZmZsD581GoV6+ewn0GBgZIS0uR+76YlZWF169fQU1NTZb+/rPmpqmpqcnlyZU7gpybfvr0CVhaWuG33/6QG11es2alXL53dciXmVfdACAQqOWZ/jGlqc+oYNhnyon9pnzYZ1QWKX1gLJVKMWnSJDx58gR//PEHKlSogAsXLmD27NkoV66cLFj+HAKBGoyMREXY2tLLwECnpJtAhcQ+U04l3W9isQQ//3xeISh+37Jl4fjhh04Kv/BYW1vj9u1bct8XN23aBLFYDC0tdVm6vr627O/cNA0NIYRCgcL3VC0tdbl0bW1NCARqMDTUlY363rp1C3fuhMPCwkKWLzU1533U0dGUKzO3bpFISy5dJNJSaFNBlXSfUeGxz5QT+035sM+oLFH6wPjUqVM4dOgQ9u/fj5o1c47xaNq0KV6/fo05c+Z8UWAskUiRlFS21ykLhQIYGOggKSkdYnHBpkNSyWKfKafS0m/nzr1AZGTKR/PExqYhJOQhnJ3l1/R27OiNuXNnY9gwfzRp4ogHD+7j0qWLMDQ0RGZmNhIScqZlJydnyP7OTcvKEkMslshe58rMzJZLb9KkGY4cOYKhQ7+Dk5MzoqKisGfPTlSpYou0tDRZvjdv0gEA6elv5crMrTs1NVMuPTU1U6FNn1Ja+owKjn2mnNhvykcV+8zAQIcj5GWc0gfGDx8+hFAoRI0aNeTSa9eujR07diA9PR06Op//aVZ2tmr8ZxeLJSrzrGUF+0w5lXS/vb+m+FP5Pmxnx46dERn5AgcP7kNY2AU0aNAICxYswahR/pBKpbL8ub8kvf+sUqlULk+u3PXFuenu7p6Ii3uFfft249Kli7CxqYLJk2fg5MljuHHjWh51yJeZV90AZBuLfc77X9J9RoXHPlNO7Dflwz6jskRNWtDDgr+y3OOagoODP5ovJCQEY8aMwb59+1CrVi1Z+k8//YRTp07hwoULn90GsViC+PiC/RKprNTVc6YwJiQo/hJMpRP7TDmVln47fz4KPj4HPplvzx4vODlZfIUWlV6lpc+o4Nhnyon9pnxUsc+MjUUcMS7jStWIcXp6Ok6fPg0AePHiBVJSUnDo0CEAQJMmTWBsbIxvv/0WUVFROHr0KACgZcuWsLCwwMiRI/H999+jYsWKOHfuHPbs2YMRI0aU2LMQEZVGjo5msLAQITo6Nc91xmpqgLm5CI6OZl+/cUREREQlpFQFxq9fv8aoUaPk0nJfb9iwAU2bNoVEIoFYLJZd19PTw7p167BgwQLMmzcPycnJsLKywsSJE9GnT5+v2n4iotJOKBRg5szmGDToKNTUIBcc524CPXNmc34qTkRERCql1E6lLg04lZpKI/aZcipt/ZbXOcYWFiLMnNkcnp62Jdiy0qO09Rl9GvtMObHflI8q9hmnUpd9pWrEmIiIvg5PT1t4eNggLCwGsbFpMDXVhaOjGX/oExERkUpiYExEpKKEQoHKb7BFREREBAAcGiAiIiIiIiKVxsCYiIiIiIiIVBoDYyIiIiIiIlJpDIyJiIioRA0fPhR9+3Yr6WYQEZEK4+ZbRESkMkJCDmD27GlyaYaGRqhSxRa9evVDs2ZOJdSysu/Vqzjs27cbLVu2QvXqNUu6OURERHIYGBMRkcoZPPg7mJtbQCqVIj4+HqGhB/DDD6Mwd+4CODm1KOnmlUmvXsVh7dpVMDe3YGBMRESlDgNjIiJSOY6OzVGrVh3Za0/PTvD2bodjxw5/1cA4PT0dOjo6X60+IiIiyhvXGBMRkcrT19eHlpYWhEKhLC09PR1z5syBt7cHWrduhp49u2DLlo2QSqWyPNHRUXB2dkBIyAGFMp2dHRAUtEL2OihoBZydHfD4cQSmTv0Z7du3RkDAIACAn58XfvxxNG7duokhQ/rB1bU5unbthNDQYIVyk5OT8eeff6BLl45o3boZunfvjE2b1kEikSi0a8uWjdi162907doJbdo4YcyY7xEbGwOpVIp161bDx6cDXF2dMHHiWCQlvVGoa/fuHejTpxtat26GTp3a448/5iI5OVkuj5+fF2bNmqpw7/DhQzF8+FAAwPXrVzF4cD8AwOzZ0+Ds7JDn+/b4cQRGjBiGNm2c0LmzBzZvXq9QLhERUXHgiDEREamclJQUJCYmQiqVIiEhHrt2bUd6ejrc3T0AAFKpFD/8MBrXrl2Fl1dnVK1aHZcvX8TSpX/i1auXGDly3GfXPXnyRFSqVAnDhn0vF2RHRj7H5MkT0LGjN9q398TBg/sxe/Y01KxZG7a2VQEAGRkZGD58KF69eglv7y4wNTXDnTvhWLFiCV6/fo1Ro+TbdfRoKLKysuHn1w1JSUnYsmUDpkyZBHt7B9y8eQ29e/dDZGQkdu3ajr/+WoiffvpFdm9Q0AqsXbsKDg5N4OPji2fPnmLv3l24d+8fLFu2BurqBf8VwsamCgYP/g6rVy+Ht7cP7OwaAQDq1Wsgy5OcnIxx40bAxcUVrq5tcerUcSxbthi2ttW49puIiIodA2MiIlI5o0cHyL3W1NTEpElT0LixIwDg3LnTuHr1CkaPHo0ePfohO1sCX99uCAycgB07tsHXtzssLa0+q+5q1apj6tRZCunPnj3FkiWrZEGjq2tb+Pp2REjIAQwfPhoAsG3bJkRFRWLNms2oVMkaANC5sy9MTCpg69aN6NGjN0xNzWRlxsXFYdu2PdDT0wMASCQSbNy4FpmZmVi9eoMsuE1MTMDRo4cwfvwkaGpqIiEhAZs2rUOTJo6YN28RBIKcCWbW1jZYsOA3HD4cgo4dvQv8zMbG5eHo2ByrVy9HvXoN4O7eQSHPq1dxCAychvbtOwLImd7u5+eJgwf3MTAmIqJix6nURESkcsaOnYAFC5ZgwYIlmDJlBho1csCcOTNw+vQJAMDFi+chFArRt29fuft69OgDqVSKsLDzn113586+eabb2NjKgmIAMDIyQqVKlREV9UKWdvLkcTRo0Aj6+gZITEyU/XFwaAKxWIxbt27Ildm6tZssKAaAOnXqAgDatfOQG/GtU6cesrKyEBf3EgBw9eolZGVloWvXnrKgGAC8vX0gEolw8eK5z37+/Ojo6MoFzBoaGqhdu67c8xMRERUXjhgTEVGZJRZLEBYWg9jYNJia6kIiyZm6XKdOXbnNt9zc3DFgQG/Mn/8bmjdvgZiYGJiYVICenh4SElJl+WxsqgAAYmJiPrtN5uYWeaa/P9KbS19fH8nJSbLXkZHP8OjRA3h6uuVZRkJC/Adlmsq9Fon08kzPDZ5z1w/nPp+1dWW5fBoaGrCwsPyi589PxYoVoaamJpemr2+AR48eFnldREREH2JgTEREZVJwcAQCAy8gKupdYGtt/QTa2op5BQIB7O0dsGPHVjx//qzAdXwYyOUSi8X53qOllUcDAAiFeU/ien8dslQqRePGTdGrV78881aqJB/ICgTCPPO9Pwr8QW35pOcvv/dAIpF8pJ6Ct+n95yciIiouDIyJiKjMCQ6OwKBBR/FhTJWY+BZmZsDZsy/kRowBQCzOBpCzG7WZmRmuXbuMlJQUAO8Cv6dPnwAAzMxyRnf19fUBACkp8js1x8REF+HTvGNhYYX09HQ0bty0WMrPlft8z549lVtLnZWVhejoKDg4NJGl6evrKzw/kPMeWFhYvpeSdwBNRERUGnCNMRERlSlisQSBgRcUguL3LVsWDrH43fFG2dnZuHz5EjQ0NGBjY4NmzZwgFouxefNmufv+/nsz1NTU4OiYsxmUSKQHQ0ND3Lwpv7Z3z56dAHKOH3J2dsDp0ycV2vDttz3h7OyA69evKlzr0qUjvvtuoEK6q6sb7twJx6VLFxWuJScnIzs7O/+HBnDkSOhHr+dycGgKdXV1/PDDKGzevEGWHhy8DykpKWjWzFl2/FSFCqb45587yMrKkuU7f/4sXr6MlSsz97zmvIJoIiKiksYRYyIiKlPCwmLkpk/nJS3tPpYu3YoaNYyQkBCPo0cPIzLyGfr06Q+RSA9OTi3xzTcOWLBgASIinsDWtjquXAnD2bOn0a1bT7lRVE/PnHOE58yZgVq1auPmzRuy6di564bDw29CV1dXdk9qagoeP34EoVCI8PCbcm2LjY3By5excHNrh7t3/5G71qtXP5w7dwY//jgaHTp4oWbNWkhPz0BExEOcOnUcO3YcgKGhYb7PXdDA2MjICD4+ftixYxuCg/dCW1sbz58/xZ49O1G7dh24u3fA+vVBAHI28jp//gzGjRsBV1c3vHjxAkeOhCjs2m1paQU9PX3s3bsLurq60NbWQZ069T4YVSYiIioZDIyJiKhMiY1N+2QeE5Nr2L79GgBAU1MLlStXxvjxE9GpU86O0QKBAL//vhAbNqzGwYMHERy8H2ZmFggIGIWePfvIlTVgwGAkJibg1KnjOHHiGBwdm2PevEXw8moLXV1dmJtbIjz8Jhwdm8vuuXPnNqRSKVxd2yI8/JZcebmBcoMGDRUCY21tbfz110ps3LgWJ08ew6FDByESiVCpkjUGDhwmtwP1l+rWrRd27NiG5ORkLF48HwYG5eDl5YNhw76X29H6m28aY/jw0di+fQsWLZqPmjVrY+7chfjrrwVy5amrqyMwcCqWL1+C33//FWKxGD/99AsDYyIiKhXUpNzVIl9isQTx8R8fdVB26uoCGBmJkJCQiuxsyadvoBLHPlNO7Lev5/z5KPj4HPhkvj17vODklPcO0UDR9dmMGVNw/PgRHD58Srbx1urVy3HmzEn06tUPCxf+jpCQE7LNp+bPn4s9e3YiOPgoypUzBAAcPhyC7du34MmTx9DS0kKTJk0REDBKbifr58+fYfnyxbh9OxwpKckoV84QDRrY4Ycffoaenh6cnR0U2ubh4Ymff56aZ7ujo6PQtas3AgJGoVevvgrXg4JWYO3aVQgOPiYbpb516wZ27NiGu3fvICEhHkZGxmjVyhXDhn0vt+nYrFlTcerUcWzcuAPz58/BjRvXIBLpoW/fAfD17YZHjx7izz/n4e7dOyhXzhDDhg1Hu3btP/le8/+ZcmK/KR9V7DNjY1G+myRS2cDeJSKiMsXR0QwWFiLks1ky1NQACwsRHB0Vj0cqDg0aNER2djb++eeOLO327VuoV68B6te3Q0pKCiIiHsldq1zZRhYUr18fhJkzf0GlSpUwYsQYdOvWE9euXcHw4UNlxytlZWVh7NgR+OefO/D17YaxY3+Et7cPoqJeyNb0Tp48HZqamrCza4TJk6dj8uTp6NSpyyfbn5mZIXdmcu6fzMwMhbwnTx5DZmYGfHz8MHr0D2jSxBG7dv2NGTN+UcgrFkswfvxIVKxoCn//kTA3N8eCBb8hJOQAxo0bgVq1asPffwR0dXUxa9YvxXqecUjIATg7O+DevbvFVkdZFx0dBWdnB4SEfPpDqaLg5+eFWbOmfpW6iEg1cCo1ERGVKUKhADNnNsegQUehpga5Tbhyg+WZM5t/tU/+GzRoCCBnirS9vQOys7Nx9+4dtG/fEZaWVjA2Lo/w8JuoVq060tJSERHxCB06eAPI2dl5zZqVGDLEH/36vduMy8WlNQYM6I09e3agX7+BePIkAtHRLzBjxhy0bv3ujOMBA4bI/u3u3gHz5v0KCwtLuLt3KHD7g4JWIChoRYHy+vuPgJaWNkJCDmD27GkAgE6dumD//j2IiYmR7XYtlUrx9m0mnjyJgIWFBcaPn4S2bdujc+f2+PXX6Zg6dRbatGkHAP8/nsoPoaHBGDRoWIHbrQx2794BbW1tdOjg9dXqdHZ2QJcuXTF27ASFaydPHsPkyROxaNFy2NsrzjAorIsXz+Hu3X/KXL8RUdnEwJiIiMocT09bBAW1VTjH2NxchJkzm8PT0/artcXGpgrKlSsnW0v88OEDpKeno359OwBAvXoNcPv2LXTp0hV37tyGWCxGgwY5106fPgGJRAJX17ZITEyUlWlsbIJKlaxx/fpV9Os3ECJRztriy5fD0KyZM7TzOqz5M3l7+8gF27kOHTqIw4dD5NI+PKNZQ0MTr1+/hlQqxYMH92SBcXz86/9f15Dl1dfXh7V1ZURGRsLVta0s3draBnp6+sU6YlxS9uzZgXLlDL9qYFxczMzMcfz4ebn15xcvnsfu3TsYGBORUmBgTEREZZKnpy08PGwQFhaD2Ng0mJrqwtHR7KuMFIvFErl669ZtgPDwG5BIJLh9+xaMjIxhZVUJQE5gvHv33wByplED70aZnz9/DqlUih49fPKsRyjM+TFuYWGJ7t17Y/v2zThyJBR2do3g5NQS7u4dvnhDLisr6zzPTf5wN20AiImJQVDQcpw8eQwAkJX1FufOnQaA/58JnSMqKgpqamooX95E7n6RSA8VK1aE2gfz4PX09GTTxunjsrOzIZVK5T50+BrU1NSgpaX1VeskIipKDIyJiKjMEgoFH91gqzgEB0cojFRXriyFllYKHj16KFtfnKt+/QZYuvRPxMW9RHj4TZiYVJAddSSVSqCmpoZ58xbJNud6n47OuyOgRowYgw4dvHD27ClcuXIJf/45D5s2rcOKFWtRsaJpsT1vLrFYjDFjApCcnIRmzZxw8uRx9O8/COvWBf3/WXLmtGdlZSEmJlpuZPF9ycnJ+O67gXj27CkyMjJgY1MFGRnpAOT3Cs2dEuzg0BSrVi1FZORzWFlVwk8/TUL9+t/I5Y2Le4nVq5cjLOwCkpLewMSkApo2bYZRo8bLBZBv377F4sXzcfhwCDIyMtC4sSN+/PFnGBkZyZV38eJ5bNy4Fvfv34OamgANGzaCv/9I2NpWleV5/foVVqxYgitXLiExMQEGBgaoXbsuRo0aD3NzC/j5eSEmJlr2LADQsKE9/vprpex9WLNmJU6fPoGEhHhUrGgKL6/O6NWrn+xr4f0N0tTVhdi5cztiYqIRFLQR1avXLFT/5Wf48KF48yYR06fPwfz5c3H37h3o6xuga9ce6N37W1m+3Lb89NMv6NAhZ/1vaGiw3PMBwLlzOed2SyQS7Ny5Dfv370VUVCT09fXRooULhg4dDgMDA1l+qVSK9euDsG/fbiQlvUGdOvUwZsyPRfJsRETvY2BMRERURIKDIzBo0FF8eN7Dy5fGqFQJ2LLlGG7fvoWuXXvKrtWsWRuampq4ceMa7t69A0dHJ9k1S0srSKVSmJtbwNq68ifrr1q1GqpWrYb+/Qfj9u1b8PcfhL17d2Ho0ID/58hnR7IiEBHxEM+fP8PPP0+FVCrFyZPH4ezsglOnTuDJk8eyfGFh55GdnZXvdO83bxLh4uKKtm3bIzs7C8eOHUFiYiLi4+MV8oaH38Lp0yfh4+MHXV0Rdu3ajpEjR2Lv3oMQiXKCq1ev4jBkyLdISUmGt7cPrK1t8OpVHE6dOo6MjAy5wHjhwt+hr2+AAQOGIDo6Gjt2bMWCBb9h+vRfZXkOHTqIWbOmokmTZvD3H4GMjAzs3bsLAQGDsXbtZpib53wQExj4Ix4/joCvb3eYm5sjISEBV65cQmxsDMzNLTBy5DgsXPg7dHR0ZOvHjY2NAQAZGRkYPnwoXr16CW/vLjA1NcOdO+FYsWIJXr9+jVGjxsm9DyEhB/D2bSa8vX2gqakJff1yn9OF+UpOTsa4cSPg4uIKV9e2OHXqOJYtWwxb22po1swpz3s6deqCV6/icOXKJUyePF3h+u+/z0ZIyAF06OCN7t17ID4+Dps2bcJ//93DsmVrZB+crF69HOvXB6FZMyc4Ojrh/v17GDt2OLKzs4r0GYmIGBgTEREVAbFYgsDACwpBMQCkp5tAIhHi0KFQCIUvUb/+uxFjTU1N1KhRC7t370B6erpsGjUAuLi4YsWKJVi7dhWmTJkhN8VYKpUiKekNypUzRGpqCrS0tOVGYatWrQaBQICsrHcBhI6OjmyX6qImEAgV0qRSqazNue04cuQQjI3LIz097/OmK1Wyxrhx7zaG8vXtDjc3Z0RHK64xfvr0MTZt2iEbYW/cuDH69u2BI0cOwcenGwBg+fK/EB//GitXrkOtWnVk9w4e/B0+PLHSwKAcFixYImuzVCrBzp3bkZKSAj09PaSlpWHhwnnw9OyMCRN+lt3n4eGJXr18sWHDWkyY8DOSk5Nx+3a4wlFXffsOkP27ZctWWLVqKcqVM1TYDG3btk2IiorEmjWbUamSNQCgc2dfmJhUwNatG9GjR2+5o7ri4mKxbdtehZHtovLqVRwCA6ehffuOAABPz07w8/PEwYP78g2M69VrgEqVrHHlyiWF57t16yYOHNiLKVNmol279rKjf+rWtcPo0cNx4sQxtGvXHgkJCdiyZQOaN3fG3LkLZP2yYsUSbNy4tlielYhUF49rIiIiKgJhYTFy06flCZGRUQFCYTTU1TVQs2Ztuav16jXAnTvhACAXGFtaWmHwYH8cPXoIAQGDsGXLBuzduxNLly5Cz56+OHgw52ica9euomtXbyxa9Af27NmJnTu3YdQofwgEAri4uMrKq1mzFq5evYxt2zbh2LHDckdIfanKlW1gaWmFJUsW4vz5swCAefPmyK4/fHgfaWmpuHDhLCwsLPMt5/3gPykpCSkpKdDQ0JRbo5zLwaGJLCgGgOrVa0BPTw8vXuQE0RKJBGfPnoKTUwu5oDivugDA27uLXFqDBo0gFotlU56vXLmElJRktG3rLnd0lUAgRJ069XDjRs40YS0tLWhoaODmzWtISkrK91nzc/LkcTRo0Aj6+gZy9Tg4NIFYLMatWzfk8ru4uBZbUAzkTNl/P7jV0NBA7dp1P3tDtJMnj0FPTw+NGzf9/7MlID4+HrVq1YaOjq7sfbx69RKysrLg69tdrl+6dev1ZQ9ERJQHjhgTEREVgdjYvEdAc6Wnm0FXNwYVK1aBpqam3LX69e2wbdsm6OqKUK1adblrffv2h7W1NbZv34K1a1cBACpWNEWTJk3h7NwSAFCtWnU0aeKI8+fPIi5uN7S1tVGtWnXMm7cI9erVl5U1YsQY/PbbbKxatQyZmZnw8PBE3br1iuLxoaYmQPfuk7Bz53JZYGxqaoqBA4ehf/+e+Oef2zh9+iQkEgnMzMzx6NGDPMtJS0vD0KH98fDhfbx9+/ajdb4/apqrXLlySE7OCUYTExOQmpqKKlWqKuQrSHn6+voAICsvMvIZAGDkyO/yvF8kEgHImQXg7z8Cf/21EN7e7VC3bn00b+6M9u07Kmw4lpfIyGd49OgBPD0VdwMHgIQE+WnlH/ug4XN8+IFBXhui6esb4NGjh59VfmTkM6SkpMDLq22e13OfLyYmBgBkG9XlMjIygr6+gcJ9RERfgoExERFRETA11f3o9devG+P168aYO1fxaB4Xl9ayTYny4uLiKjfy+yELC0tMmjTlk220traRbe70KebmFh9t06BBw2TH8MhvOOYIAwNjmJmdRpUq7qhWrToCA6fht99mYe/eXXB0bI6pU2cBAPz85N+LIUP8MXz4UJibW2Ds2AkoX94E6urqCAk5gKNHDym0Ia8NyQDkOZ29IPLbsTx3yrVEkvP35MnTYWxcPo/7300n79atF5ycWuLMmVO4fPkiVq9ejo0b12HRomWoUaPWR9shlUr/f35zvzyvV6okv95cU7Pgu0FramoiMzMzz2sZGRl5lpf/+/x5b7REIoWRkTGmTJkBIOd919fXRnJyBsRiCQwNi2/0m4goPwyMiYiIioCjoxksLESIjk7NMzBTU8s5R9nRUXGUU5nlt+EYAMyYcQnm5lXh6toav/8+G//8cxvTpv2qmPH/Tp06AU1NTcyf/5fcqHpIyIHPapuhoRFEIhEeP370Wfd/KHfatpGRcZ5HWOWVv2fPPujZsw+eP3+GAQN6Ydu2zbKA8MNR2FwWFlZIT08vUB2FZWpqhmfPnuZ5LTc997zpL5Xf81laWuHatcto0MDu/2vjc9YYJySkIjtbIsuX247IyOdyU+YTEhJko/hEREWFa4yJiIiKgFAowMyZzQHkBMHvy309c2bzr3KO8tfysQ3HcgUGXoCWljbGj5+EgQOHwtm5Rb55BQIB1NTUIJG8C46io6Nw9uypz2qfQCBAixatcP78Wdy7d1fhemFHPJs2dYRIJMKGDWuQnZ2tcD0hIQFAzsjrh6OylpZW0NUVyU0P19bWyXPttKurG+7cCcelSxcVriUnJ+dZd0E1a+aEu3fv4N69fxXKPXr0EKpXr1Gg6d4Foa2tIyv7fa6ubhCLxbKjvN6XnZ0ty+/g0BTq6urYtWu7XF/9/feWImkfEdH7OGJMREQfNXz4UAAo8BTcohQUtAJr165CcPAxGBoafvX6C8vT0xZBQW0VzjE2Nxdh5szm8PS0LcHWFb2PbziWM6U5KioVYWEx8PDwzDffrFlTcePGNUyaNAXbt2/GuHEj0LatOxISErB79w5YWlbKd03ypwwb9j2uXAnD8OFD4e3tg8qVq+D161c4efIYli4Nkq0jLgiRSA/jxk3CzJlTMHBgb7Rp0w6GhkaIjY3BxYvnUL++HcaOnYDnz59i1KgAuLq6wcamCoRCdZw5cxLx8a/h5tZOVl7NmrWxd+9OrFu3GlZWlWBkZIxvvmmMXr364dy5M/jxx9Ho0MELNWvWQnp6BiIiHuLUqePYsePAZ/9/6NOnP06ePI7hw4egU6cusuOrQkOD8fr1K/z00y+fVW5ecjeZW7jwdzRt2gwCgQBubu5o1OgbdOrUBRs3rsWDB//B0bEZDAxE+O+/Bzh+/BhGjRqH1q3dYGRkhJ49+2LjxrX48cfRcHR0woMH/yEs7IJSfD8gIuXCwJiISAkdP34Uv/wyCbNm/Q4Xl9Zy1779ticePXqARYuWw97eQe5aly4dUbGiKZYvX/M1m6tSPD1t4eFhgzNnnuLgwW1o0MAevXu3/eojxfPmzcG+fbtw8OAxGBi8O9c2KekNOnZ0g7q6Og4dOgUtrXfrSV+8iET37p3Rt+8ADBv2/Sfr+NSGY4XN9803jTFx4mRs2rQeixbNh7m5Bfz9RyA6OuqzA+MKFSpixYr1WL16GY4cOYS0tFSYmFSAo2PzfM9S/ph27drDxMQEmzatx9atG/H2bRYqVKgAO7tG6NDBG0DO5mhubu1w7doVHD4cAqFQCGtrG0yfPgetWrWRlTVgwGDExkZjy5aNSEtLRcOG9vjmm8bQ1tbGX3+txMaNa3Hy5DEcOnQQIpEIlSpZY+DAYdDT0/us9wIAjI3LY+XKdVizZiVOnDiG+PjXEIn0UK9eA0yb9muRbcYG5Kyd9/PrjmPHjuDIkVBIpVK4ubkDAH744SfUrFkb+/btxrJlS6CuLoSZmTnatfNA/foNZWUMGeIPTU1N7N27C9evX0WdOvUwf/5f+PHH0UXWTiIiAFCTfu7OCSpALJYgPj7/T8LLgvzW9VDpxT5TTkXdb69exaFzZw90794bI0aMkaWnpqbAw8MVampqGDBgCPr3Hyy7FhsbA19fT/Tq1RcBAaMKXJeqjhh/aZ8lJibC09MNAwYMkW1S9TUdOXII06cHYs6c+bLdqwHg/Pmz+Omn8ZBIJPjrr1Wws2sou3bo0EHMnPkLfv99IZo1c/5kHefPR8HH59Prf/fs8YKTk0W+13NHjHfu/Ly1xLn4/VE5sd+Ujyr2mbGxqEwthSFF7F0iIiVkYlIB5uaWCA+/KZd+585tSKVStG7thvDwW3LXcvO+f05uaZWdnY2srKySboZSy+3nD79Gbt++hapVq8HaurLCtfDwmxAIBKhXz65AdeRuOJbPHktQUwMsLL7uhmNSqVS2u/Ln4tcfEZHq4VRqIiIl1aCBHY4fP4LMzAxoaeVMCb19+xaqVLGFo2NzLFz4OyQSieyoldu3b0FNTQ316+cEPdnZ2di0aR1CQg4gLu4lypc3Qdu27TFgwBCFc3Zzxce/ho9PB3z77SAMHDhU7tqzZ0/Qq5cfxoz5Ab6+3QHkbLqzZs1KnD59AgkJ8ahY0RReXp3Rq1c/Wbuio6PQtas3AgJGQV1diJ07tyMmJhpBQRtlZaekJGPJkoU4e/YUpFIpXFxcMXbsBLmpsAcP7sfhwyGIiHiE1NQUWFpawde3O3x8/OTa6efnBVvbqujRow+WLPkTjx9HwMrKCqNH/wB7ewecPn0CQUErEBn5HNWrV8ePP/6MqlVryO6fNWsqTp06jnXrtuKPP+YgPPwmRCI9dO7si/79B0NNTU32TACwdu0q2fnD748eX7t2BUFBK3D//j2oq6ujYUN7fPfdCNjYVJHVlTtivm3bHqxfH/TR5/+QmZkZKlY0xe3b8h+Q3L59C/Xr2yEjIyPPa1Wq2EJfXx9ZWVlYvz4IFy6cw4sXzyEWi1GjRi0MHvydbIq+UCjA+PHVsHz5cMTFNYVEogEjo1tQV0/F27fGePnSGTNnyk8jP3PmFFatWooXLyJhaWmFwYP982y/RCLBzp3bsH//XkRFRUIk0kOLFi747rsRMDB4d4Ztbn/6+nbHqlVLERHxCAEBI+Dn1/OLv/6qV6+JnTu3Ye/e3YiOfgENDU1YWlqhe/feaNeufb7vPRERKR8GxkRESqpBg4Y4fDgE//xzRxao3L59C/XqNUD9+nZISUlBRMQjVKtWXXatcmUblCtnCACYO3cmQkOD0apVG/To0Qd3797Bxo1r8eTJY/z667w86zQ2Lo+GDe1x4sQxhcD4+PGjEAqFaN3aDUDOzrzDhw/Fq1cv4e3dBaamZrhzJxwrVizB69evMWrUOLn7Q0IO4O3bTHh7+0BTUxP6+u/WxU6ZMhHm5hYYNmw47t+/hwMH9sLQ0AgBASNlefbu3YkqVarC2bklhEIhzp8/iz/+mAOJRAJf325ydUVGPse0aYHo1KkL3N09sHXrJkyYMBY//DAJK1YsgY+PHwQCATZuXIuff56ALVt2yZ3lKhZLMG7cSNStWw/+/iNx6dJFBAWtgFgsxuDB38HQ0Ajjx0/EvHlz0LJla9k68KpVc/riypVLGD9+JCwsLDFw4FBkZmZi167t8PcfhDVrNsHcXH7acUGePy8NGjTEmTMn8fbtW2hqaiIrKwv//nsXnTv7IjMzA0uXLoZUKoWamhqSkpLw5MljdOrkCwBITU3FgQN74ebmDm/vzkhLS0Nw8D6MHTscq1atR/XqNQEAbdpYY/lywNg4AmJxJt68ydlwycTkNurWPYv27SfK2nP5chgCA3+EjU0VDBv2Pd68eYNff52GChUqKrT9999nIyTkADp08IafX3dER0dh9+6/8eDBf1i2bA3U1d/9CvPs2VNMnfozfHx80bNnD5iYmBfJ19/+/XuwcOE8tGrVBl279sDbt2/x6NED3L17h4ExEVEZw8CYiEhJvT9V1t7eAdnZ2bh79w7at+8IS0srGBuXR3j4TVSrVh1paamIiHgk2xzowYP7CA0NhpdXZ0yYEAgA6NKlK4yMjLF160Zcv35VYeOuXK6ubfH777MREfEQtrbVZOnHjx9Fw4b2MDYuDwDYtm0ToqIisWbNZlSqZA0A6NzZFyYmFbB160b06NEbpqbvptjGxcVi27a9MDIyUqizevWamDRpiuz1mzdvcPDgPrnA8K+/VspGzgHA17c7xo4dge3bNysExs+ePcXy5WtQr14DAICNjS3Gjh2OuXNnYvPmXTAzM4O6ugBmZiaYMmUKbt68Lvd+vH2bCUfHZhg9+gfZezdhwhhs3rwefn49YGhoiFat3DBv3hxUrVoN7u4d5OpfuvRPGBiUw4oVa2UbY7Vo0QoDB/ZGUNAKBAZOK/Tz56VBg4Y4duww/v33LuzsGuK//+7h7dtM1K/fEBkZ6UhKeoMnTx6jShVb3LkTDqlUKvu60tfXx86dB6ChoSErz8vLB717+2Hnzu1y7QEAY+O3GD16OZKTBTA11YVYfB8//TQely5dhJNTzhFNy5YtgpGRMZYuDZJtINWokT3GjBkOMzNzWVm3bt3EgQN7MWXKTLkA1N7eAePGjcCJE8fk0iMjn+OPPxbDyclJtu5x9eqVX/z1d/HiOVSpYouZM+d+9H0mIiLlxzXGRMUsJOQAnJ0dEB0dVdJNoTLGxqYKypUrJ1tL/PDhA6Snp8umSter10A2VfbOndsQi8Vo0CDnWljYeQBA9+695crs0SPn9YUL5/Kt18XFFUKhEMePH5WlRUQ8xJMnEXB1bStLO3nyOBo0aAR9fQMkJibK/jg4NIFYLMatWzcUys0rKAZyApr32dk1xJs3b5Ca+u4M2PeD4pSUFCQmJqJRI3tERb1QOCvWxsZWFhQDQJ06OTvxfvNNY5iZvQuW7Oxy3q+oqBcKberS5V2wraamhi5duiErKwtXr17K8xlyvXr1Cg8e3IeHh6fcbtHVqlWHg0NTWd8U9vnz8uE649u3b6FChYowMzND5co2MDAoJ/sayf079x6hUCgLiiUSCZKS3kAsFqNWrdq4f/+eQl2uru3Qtm0NdOlSDU5OFmjY0B7Au/fu/ed+f1flxo0dYWMjf4zVyZPHoKenh8aNm8p97dSsWRs6Orq4ceOqXH5zc0s0bdrsgzK+/OtPT08fcXEv8e+//+T/JlORu379KpydHXDy5LGSbgoRqRCOGFOZERJyALNny4+yGBoaoUoVW/Tq1Q/NmjmVUMuIio5YLEFYWAxiY9NgaqqLunUbIDz8BiQSCW7fvgUjI2NYWVUCkBMY7979NwDFoCcmJhoCgUCWN1f58ibQ09NHTEx0vm0wNDTEN980wYkTRzFkSM760Nxp1C4urrJ8kZHP8OjRA3h6uuVZTkJCvNxrCwvLfOt8f2QPAPT1c9aYJicnQyTKCbLCw28iKGgl/vknXGHzpZSUFLlg7MPycq9VrGiaZ3pycrJcukAgUGhv7qhkdHT+7x0A2XtrbV1Z4ZqNjQ0uX76I9PR06Ojo5NvevJ4/L7a2VaGnpy8X/OZ+cKKmpoZ69erj9u1b8Pb2we3bt1CxoqncBwOhocHYtm0Tnj59guzsbFm6ubliX5mayr93ueuAk5OT5J77w685IOe9eD/Yjox8hpSUFHh5tVXIC+T1taO443VRfP317v0trl69jCFDvoWVVSU0buyItm3dS90Gds7Oec/u+FBeR7h9aMOGNbCxsUXLlq3k0m/fvoXLl8PQrVuvQp39TESkLBgYU5kzePB3MDe3gFQqRXx8PEJDD+CHH0Zh7twFsul8RMooODgCgYEXEBX17hi5ypWl0NJKwaNHD2Xri3PVr98AS5f+ibi4lwgPvwkTkwqwtLQqkra4ubXD7NnT8ODBf6hevSZOnDiKb75pInekklQqRePGTdGrV788y6hUST4w1NTUyjMfAAgEwjzTc08cfPEiEqNHB8Da2gbDh4+Bqakp1NU1EBZ2Htu3b4FUKn+cSH5Hbry/jjivekrKp54///sEqFevvmya9O3bt9C37wDZ9Xr1GuDgwf3/X3v8D1q0aCW7dvhwCGbNmooWLVqhZ8++MDIyhkAgwKZN6/DiRWSRtTEvEokURkbGmDJlRp7XDQ3lR3bfP4v5/Xq/9OvPxqYKtmzZhQsXzuLSpYs4ffoE9uzZUWJHcOVn8uTpcq8PHTqIK1cuKaS/v7FbfjZuXItWrdrkERiHY+3aVejQwYuBMRGVSQyMqcxxdGyOWrXqyF57enaCt3c7HDt2uEgC4w9Hcoi+huDgCAwadBQfxhgvXxqjUiVgy5ZjuH37Frp27Sm7VrNmbWhqauLGjWu4e/cOHB3fzZowMzOHRCJBZORzuV+W4+NfIyUlWW69Z15atGgFDY3ZsunUz58/kwu4AMDCwgrp6elo3Ljp5z52gZ0/fwZv377FnDnz5UY8r1+/+pG7Pp9EIkFU1Au5Ud/nz58BAMzNc967/I4wyn1vnz17qnDt6dOnMDQ0LNLvMQ0aNERY2AWcO3caCQnxsun0QE5gvHLlUly8eB6ZmZlyI6GnTh2HhYUlZs/+HWrvPcyaNSs+qx25zx0Z+Vzh2ofvhaWlFa5du4wGDezkpsgXRlF9/eno6KBNm3Zo06YdsrKy8PPPP2DDhjXo06d/ngF5SfhwDfs//9zGlSuXFNKJiCh/XGNMZZ6+vj60tLQgFOaMZuSuXfrwF+bo6Cg4OzsgJOSALG3WrKlo27YFXryIxPjxI9G2bUtMn56zUZGzswPmz5+LM2dOoW/fbmjduhn69OmGsLALBWrXxYvnERAwGG5uzmjbtiV++GEUIiIeya4fPLgfzs4Oea7lW758OZo3d0Bc3MtCvx+kfMRiCQIDLygExQCQnm4CiUSIQ4dCERf3EvXrvxsx1tTURI0atbB79w6kp6fLBT25QfLff2+RK2/bts0AgObNnT/aJn19fTRp4ogTJ47i2LEj0NDQkBttBABXVzfcuROOS5cuKtyfnJwsNzX3S70b6X33JqWkpMj9fy5qudPUgZzRyd27/4a6ujq++aYJAMiOUvpwfbOJiQmqV6+BQ4cOyk3Rjoh4iCtXwuQ+wCgKuf2+efMGaGtro1q1d0dP1alTD0KhEFu2bJDLC7x7T98f8f3nnzu4c+f2Z7Uj97lDQ4Pl3pMrV8Lw5EmEXF5XVzeIxWKsWxekUE52drbC1Pa8FMXX35s3iXKvNTQ0YGNTBVKpFGJx0X39fg3p6elYvHgBunTpiNatm6Fnzy7YsmWjXP86OzsgPT0doaHBcHZ2gLOzA2bNmoqgoBVYuvRPAEDXrt6ya+/vnXH4cAgGDuwDV1cneHi44pdfJiE2NkauDcOHD0Xfvt3w+HEERowYhjZtnNC5swc2blyXZ5slEinWrw+Cj08HuLo2x6hR/gofrNy6dQOBgRNkz9WlS0csWvQHMjPll1Pk/jyPiYnBjz+ORtu2LdC5swd27cr5f/zo0UOMHPkd3Nyc4evriSNHDn32e01EyokjxlTm5G66I5VKkZAQj127tiM9PR3u7h6fVZ5YLMbYscPRoEFDfP/9KLlzQ8PDb+H06ZPw8fGDrq4IO3duQ2Dgj9i1K1h2JE5eDh06iFmzpqJJk2bw9x+BjIwM7N27CwEBg7F27WaYm1ugdes2mD9/Lo4cOYQaNWrJ3X/gwAHY23+T5xEnVPaEhcXITZ+WJ0RGRgXo6kZDXV0DNWvWlrtar14DbNu2CYB80FO9eg14eHhi//49SElJQcOG9vj3338QGhqMFi1afXIdIgC0adMO06dPxp49O9GkiaPC9Mpevfrh3Lkz+PHH0ejQwQs1a9ZCenoGIiIe4tSp49ix44Dc1Osv0aSJIzQ0NDBhwhh4e3dBenoaDhzYCyMjY7x+/apI6nifpqYWwsIuYubMX1CnTj2EhV3AhQvn0LfvANkGTlpa2rCxscWJE0dQqZI1DAwMYGtbFba21RAQMArjx4/Ed98NQMeOnfD2bSZ27twOkUhP4RisL1W7dl1oaGjgzp1wNGr0jdwxR7mB8p074dDT04etbVXZtebNW+D06ZP46afxaNbMGdHRUdi7dxdsbKogPT39s9oybNhw/PjjaAQEDELHjt5ISkrCrl3bUaWKrVyZjRp9g06dumDjxrV48OA/NGniCKFQHZGRz3Hy5DGMGjVOdixYfori62/MmOEoX7486te3g7GxMZ48eYLdu/9Gs2ZO0NUVfdZ7UBKkUikmThyL69evwtOzE6pVq4HLly9i6dI/8erVS4wcmXN01eTJ0zF37kzUrl0X3t4+AHJG77W1dfD8+TMcO3YYI0eOlf18y53Svn59EFavXg5XVzd4eXVGYmICdu3ajuHDh2LNms1y3xuSk5MxbtwIuLi4wtW1LU6dOo4lSxbBzq4eGjSQ/76zefM6qKkJ0LNnH6SkpGDLlg2YNi0Qq1atl+U5efIYMjMz4OPjBwODcvj333+wa9ffePnypcJu4mKxBOPHj0TDho3g7z8SR4+GYsGC36Cjo4OVK5eiXbv2cHFpjb17d2HWrF9Qr179j+59QERlCwNjKnNGjw6Qe62pqYlJk6agcWPHzyrv7du3aN3aDd99N1zh2tOnj7Fp0w7Zuk17ewf0798Tx44dhq9v9zzLS0tLw8KF8+Dp2RkTJvwsS/fw8ESvXr7YsGEtJkz4Gbq6IrRo0QrHjh1GQMBI2ejNf//dw8OHDxEYOPWznoeUT2xs2kevp6ebQVc3BhUrVoGmpqbctfr17bBt2ybo6opk5xnnmjAhEBYWlggJCcaZMydhbFweffsOwIABQwrULmfnltDS0kJaWiratGmncF1bWxt//bUSGzeuxcmTx3Do0EGIRCJUqmSNgQOHyW2G9aWsrW0wY8ZcrFq1DEuW/Iny5cujc2dfGBoa4ddfp3+6gEISCgX4449F+OOPOVi69E/o6oowYMAQhfdu4sRALFjwOxYvno+srCwMGDAEtrbV0LhxU/zxx2IEBa1AUNByqKuro2FDe/j7jyzyX8S1tLRQs2Zt3LkTLrcGPVf9+nb4779/Ua9efbk11h06eCE+/jX27duNy5fDYGNTBVOmzMDJk8dw48a1z2qLo2NzzJgxB6tWLcOKFUtgYWGFSZN+wblzpxXK/OGHn1CzZm3s27cbK1YsgVCoDnNzc7Rr54H69Rt+sq6i+Prr1KkLjh49hO3bNyM9PR0VKlSEn193fPvtoM96/pJy7txpXLt2BUOG+Mva7uvbDYGBE7Bjxzb4+naHpaUV3N07YN68X2FhYakwDbtGjVo4duwwWrRoJXfOdkxMNNasWYkhQ/zRr99AWbqLS2sMGNAbe/bskEt/9SoOgYHT0L59RwA5y538/Lywa9cuhcD47du3WLt2i2x3dH19A/z55zy5o+L8/UfITbfv1KkLLC0rYeXKJYiJiZFbWvH2bSbc3T1kyz7atm2Pzp3b49dfp2Pq1Fmy72M5a9P9EBoaXKrWkhNR8WJgTGXO2LETZLvDJiTE4/DhUMyZMwO6urpyO+YWRufOfnmmOzg0kdvMqFq16hCJRHke7ZLrypVLSElJRtu27khMTJSlCwRC1KlTT+4YkvbtO+LYscO4fv0qHBxypmcePhwKbW1ttG7d5rOehZSPqanuR6+/ft0Yr183xty5XgrXXFxa49y5vNfZqqur5xnMfeivv1bmma6rK8Lx44pHC8nn0cWwYd9j2LDv881jbm6RbxsHDRqW5y+mHTp4oUMH+ed1dm4JZ+eWCnk7dvSWe71zZ97Tq/Nqg5WVFcLCriM7W6JwzdLSCvPn/5VnWbnq1WuAoKCNeV5zcGgi+3+dn8I8/8csX74m32ujR4/H6NHjFdLV1NTQt+8AhbXjH06z/1j/5ZXu4uKq8L3YxaV1nvd7e/vIRi7zk19/Al/+9depUxd06tTlo/Urg4sXz0MoFKJr1x5y6T169MGpU8cRFnY+3w9zP+X06ROQSCRwdW0r9zPN2NgElSpZ4/r1q3KBsY6OrlzQraGhgTp16uL5c8W15x06eMmdo21n1xBAzhFguYHx+0Fxeno6MjMzUb9+A0ilUjx4cE8uMAYAT8/Osn/r6+vD2royIiMj5Y6as7a2gZ6e/kd/lhNR2cPAmJTWh8fWSCQ566Tq1Kkrt/mWm5s7Bgzojfnzf0Pz5oXffEsoFKJixbynLH94hAqQ84n2x9a/RUbmbNAzcuR3eV4Xid5Nz2vcuCnKlzfBkSOhcHBoAolEgqNHD6FNmzYQiUR5/rJOZY+joxksLESIjk7Nc52xmhpgbi6Co6Pi1yMRlV0f/hx0dDTLc8f1mJgYlC9vojD9O3fjvZiYGIV7Cur58+eQSqXo0SPvDzCEQvlfNStWrCi3mRuQ83MzIuKhwr0fO6YsV0xMDIKCluPcuTOyo8Fyfbi+X1NTS+GsapFIL8826enpFWgtOxGVHQyMSSnldWyNtfUTaOexealAIIC9vQN27NiK58+fKfzwyyWR5B1kampq5nuEy+cc7ZIbwE+ePB3GxuUVruduEpb777Zt2+PAgT0YN24ibt++hbi4OHh7eyvcR2WXUCjAzJnNMWjQUaipQS44zv1ynjmzeb5HEBFR2ZPXz0ELCxFmzmz+VdshlUqgpqaGefMW5fkzUUdHfsZLfj838/Kpn7FisRhjxgQgOTkJvXv3Q+XKNtDW1sGrV3GYNWuqws/iwh7T9v5mfkRU9jEwJqWT37E1iYlvYWYGnD37Qm7EGIBs99D09HTZJ84ffpIcExNdfI1+T+7UayMj4wIdI9K+fUds27YJ58+fRVjYeRgZGcHZ2RnJyZnF3VQqRTw9bREU1FbhF2Fz85xfhD09bUuwdUT0NeX3czA6OhWDBh1F9+7yI6dmZma4du0y0tJS5UaNnz59Irv+Tt4fHuf3obKlpRWkUinMzS3kji/7GiIiHuL582f4+eep8PDwlKVfuRL2VdtBRGUDhxdIqXzs2Jpcy5aFQyx+N/qbnZ2Ny5cv/f+YDRuYmZlDKBTi1q3rcvft2bOjuJotp2lTR4hEImzYsCbP40ISEhLkXlerVh1Vq1ZHcPBenD59Am5u7nK7ypLq8PS0xbVrvbBnjxeWL2+DPXu8cO1aLwbFX9nPP0/F0aNnS7oZpKI+9nMwNy0sTH5qdLNmThCLxbKjiXL9/fdmqKmpyR0RpqOjg5QUxSnEOjq5x4/JX3NxcYVQKMTatasURmilUqnCkVdFSSAQKqRJpVLs2LGt2OokorKLv12TUvn4sTU50tLuY+nSrahRwwgJCfE4evQwIiOfoU+f/hCJcnYhbdWqDXbu3A5ADZaWVrhw4axCQFpcRCI9jBs3CTNnTsHAgb3Rpk07GBoaITY2BhcvnkP9+nYYO3aC3D3t23fEkiUL///vDnmUSqpCKBTAycni0xmJqEz61M9BqRRIS8vC+xvUOzm1hL29A1auXIro6ChUq1YDV66E4ezZ0+jWrafcJpI1a9bC1auXsW3bJpiYVIC5uSXq1q0nOwpu5cqlaNOmHdTV1eHk1BKWllYYPNgfK1b8hZiYKLRo0Qq6urqIiorCmTOn4O3tg169+hbLe1G5sg0sLa2wZMlCxMW9hEgkwqlTJ7g2mIg+CwNjUiqfOrYGAExMrmH79pxjPzQ1tVC5cmWMHz8RnTr5yvKMGfMjxOJs7Nu3CxoamnB1dUNAwCj06/d5u3IWVrt27WFiYoJNm9Zj69aNePs2CxUqVICdXSN06KC4frhdu/ZYvnwxLCxyfkEhIiLVVJCfgx8SCASYM2c+goKW4/jxowgJOQAzMwsEBIxCz5595PKOGDEGv/02G6tWLUNmZiY8PDxRt2491K5dF4MHf4d9+3bj0qWLkEgk2LFjP3R0dNC3b39YW1tj+/YtWLt2FQCgYkVTNGnSNM+d4ouKuro65s5dgIULf8fGjeugpaWJFi1aw9e3G/r371ls9RJR2aQm/dguQSpOLJYgPv7jo5PKTl1dACMjERISUpVih+Pz56Pg45P/0Ry59uzxKlOjaomJiejUyR0DBgzB4MFDlarPKIey/V8j9pkyUoU+K4s/B1Wh38oaVewzY2MRN7ks49i7pFRyj63JZw8QqKnl7MpZ1o6tCQk5AIlEInf2IxERqR5V/TlIRFTcGBiTUsk9tgaAwi8FZfHYmmvXrmDXru3YsGENWrRoBXNz5fj0n4iIioeq/RwkIvpa+F2TlE7usTXm5iK5dHNzEYKC2papHXrXrl2FxYsXoHr1Ghgz5oeSbg4REZUCqvRzkIjoa+Ea44/gGuPSTSyWICwsBrGxaTA11YWjo5lKfEKuzH2mythvyod9pnxUrc/Kys9BVeu3skAV+4xrjMs+7kpNSovH1hARkSrjz0EioqLDjz2IiIiIiIhIpTEwJiIiIiIiIpXGwJiIiIiIiIhUGgNjIiIiIiIiUmkMjImIiIiIiEilMTAmIiIiIiIilcbAmIiIiIiIiFQaA2MiIiIiIiJSaQyMiYiIiIiISKWpl3QD3vf06VMEBQXh1q1bePDgAWxtbREcHFyge2NjYzF//nycPn0aaWlpsLS0hL+/P7y9vYu51URERERERKTMSlVg/ODBA5w+fRp2dnaQSCSQSqUFuu/ly5fo3r07qlSpghkzZkBPTw8PHjzA27dvi7nFREREREREpOxKVWDs6uoKNzc3AMDEiRNx586dAt33+++/w8zMDKtXr4ZQKAQANGvWrNjaSURERERERGVHqVpjLBAUvjkpKSkIDQ1Fr169ZEExERERERERUUGVqsD4c/zzzz/IysqCuro6+vTpg7p168LJyQm///47srKySrp5REREREREVMqVqqnUn+PVq1cAgMDAQHTr1g3Dhw9HeHg4Fi1aBIFAgHHjxn1R+erqSv/ZwUcJhQK5v6n0Y58pJ/ab8mGfKR/2mXJivykf9hmVRUofGEskEgBA8+bNMXHiRACAo6MjUlNTsWbNGnz//ffQ1tb+rLIFAjUYGYmKrK2lmYGBTkk3gQqJfaac2G/Kh32mfNhnyon9pnzYZ1SWKH1gbGBgACAnGH5fs2bNsHz5cjx9+hQ1a9b8rLIlEimSktK+uI2lmVAogIGBDpKS0iEWS0q6OVQA7DPlxH5TPuwz5cM+U07sN+Wjin1mYKDDEfIyTukD42rVqn30emZm5heVn52tGv/ZxWKJyjxrWcE+U07sN+XDPlM+7DPlxH5TPuwzKkuU/mMPS0tL1KhRAxcuXJBLv3DhArS1tT8ZOBMREREREZFqK1Ujxunp6Th9+jQA4MWLF0hJScGhQ4cAAE2aNIGxsTG+/fZbREVF4ejRo7L7xowZg4CAAMyaNQutWrXC7du3sWbNGgwaNAi6urol8ixERERERESkHEpVYPz69WuMGjVKLi339YYNG9C0aVNIJBKIxWK5PK6urpg/fz6WLl2KrVu3omLFihgxYgSGDh361dpOREREREREyklNKpVKS7oRpZVYLEF8fGpJN6NYqasLYGQkQkJCKteIKAn2mXJivykf9pnyYZ8pJ/ab8lHFPjM2FnHzrTKOvUtEREREREQqjYExERERERERqTQGxkRERERERKTSGBgTERERERGRSmNgTERERERERCqNgTERERERERGpNAbGRER5GD58KIYPL96z0K9fvwpnZwecPHmsWOshIiIioo9TL+kGEBEBQEjIAcyePQ2amprYvn0vKlSoKHd9+PChePMmERs3/l3osnfv3gFtbW106OAll/74cQROnDiKDh28YG5u8UXtL+ucnR3yTDc2Lo/9+w9/5dZ82sWL53D37j8YNGhYSTeFiIiIlAADYyIqVd6+fYtNm9ZhzJgfi6zMPXt2oFw5Q4XA+MmTCKxduwqNGn2jEBgvWLCkyOovKxo3bor27TvKpWlpaZVQaz7u4sXz2L17BwNjIiIiKhAGxkRUqlSvXgMHDuxF374DYGJSocTaoaGhUWJ1l1aVKlnD3b1DkZebnZ0NqVTK95yIiIhKDANjIipV+vYdiGnTfsamTeswevQPH82bnZ2NTZvWISTkAOLiXqJ8eRO0bdseAwYMgaamJgDAz88LMTHRAN5NB27Y0B4dOnhh9uxpAICRI7+Tlblo0XLY2zvI1hf/9ddKADnrgUeO/A7Tpv2KyMhn2Lt3F968SUT9+nb44YefYGVVSa5tu3b9jW3bNuP161eoWrUqRo0aizVrViIrS4zFi1fI5ZVIpFi/PuijZd66dQM7dmzD3bt3kJAQDyMjY7Rq5Yphw76Hlpa2LN+sWVNx6tRxbNy4A/Pnz8GNG9cgEumhb98B8PXthkePHuLPP+fh7t07KFfOEMOGDUe7du0L3kEfkZAQj+XL/8KFC+eQmpqCSpUqo0eP3vDw8JTliY6OQteu3ggIGAV1dSF27tyOmJhoBAVtRPXqNfH06ROsWrUU165dRWZmBqpUqYoBAwbD2dlFVkZ2djY2bFiDI0dC8fJlLLS1dVC5sg0GDhyCxo0dMWvWVISGBgOQnwJ+7tzVInlOIiIiKnsYGBNRqWJhYYH27Tti//696NOn/0dHjefOnYnQ0GC0atUGPXr0wd27d7Bx41o8efIYv/46DwAwcuQ4LFz4O3R0dNCv30AAgLGxMSwsrODn1wM7d25D374DYGNTBQBkf+dn8+Z1UFMToGfPPkhJScGWLRswbVogVq1aL8uzZ89OLFjwG+zsGqF7956Ijo7Gjz+Og6FhOZQvr/g8BSnz5MljyMzMgI+PHwwMyuHff//Brl1/4+XLl5g5c65ceWKxBOPHj0TDho3g7z8SR4+GYsGC36Cjo4OVK5eiXbv2cHFpjb17d2HWrF9Qr159WFhYfqJncqa5JyYmyqXp6upCU1MTmZkZGDFiGCIjn8PXtxvMzS1w8uRxzJo1FcnJyejWrafcfSEhB/D2bSa8vX2gqakJff1yiIh4hICAQTAxqYg+fb6FtrYOTp48hkmTxmPmzN/g4tIaABAUtAKbNq2Dp2dn1KlTF6mpKbh371/89989NG7siE6duuDVqzhcuXIJkydP/+RzERERETEwJqJSp1+/gTh06CA2bVqP0aPH55nnwYP7CA0NhpdXZ0yYEAgA6NKlK4yMjLF160Zcv34V9vYOaNmyFVatWopy5QwVpgHb2TXEzp3b0LhxU9jb57251Ifevn2LtWu3yKb96usb4M8/5yEi4iFsbashKysLq1cvQ+3adfDnn8ugrp7zbbZGjRqYMeOXPAPjT5UJAP7+I+RGhjt16gJLy0pYuXIJYmJiYGZm9l55mXB390DfvgMAAG3btkfnzu3x66/TMXXqLLRp0w5AzprhXr38EBoaXKC1uMHB+xAcvE8u7aeffkGHDl7Yt28Pnjx5jClTZqBdOw8AQOfOfhg+fChWrVoGT09v6OqKZPfFxcVi27a9MDIykqWNGhUAU1MzrFq1QTbi36VLVwQEDMKyZYtlgfHFi+fRrJkTJkz4Oc921qvXAJUqWePKlUvFMvWbiIiIyh4e10REpY6lpRXc3Ttg//49ePXqVZ55wsLOAwC6d+8tl96jR87rCxfOFUvbOnTwklsLa2fXEAAQFfUCAHDv3l28efMGXl4+sqAYANzdPVCuXLnPKhOAXFCcnp6OxMRE1K/fAFKpFA8e3FMo09Ozs+zf+vr6sLauDG1tHbi6tpWlW1vbQE9PX66ej2nRwgULFiyR+9OkSTMAOf1Rvnx5uLm5y/Krq6vDz6870tPTcOPGdbmyXFxc5YLipKQ3uH79Clq3dkNaWhoSExORmJiIN2/eoEmTZoiMfIa4uJcAAD09PTx+HIHnz58VqN1EREREn8IRYyIqMWKxBGFhMYiNTcPz54ly1779dhAOHw75/1pjxVHjmJhoCAQChbW95cubQE9PX7auuKiZmprJvdbXNwAAJCcny9oFQKFd6urqsLTMe7ryp8rMKTcGQUHLce7cGSQnJ8nlT0lJkXutqaklF3QCgEikh4oVK0JNTU0uXU9PT66ej6lQoSIaN26a57WYmGhYWVlDIJD/vLVy5Sqy6+/7cOp2ZORzSKVSrF69HKtXL8+zjoSEeFSoUBGDB3+HiRPHoWfPLrC1rYqmTZvD3b0DqlWrXqDnICIiIvoQA2MiKhHBwREIDLyAqKhUAICBwX2YmQFnz75ArVp15EaN+/TpX7KNfc+HgV8uqVRabGWKxWKMGROA5OQk9O7dD5Ur20BbWwevXsVh1qypCnULhXmXl189wOe3/XNpasof8ySR5LShZ8++aNLEMc97cj9saNjQHn//vRdnz57G5cthOHBgL/7+ewvGj58EL6/OxdpuIiIiKpsYGBPRVxccHIFBg44ir1hyxoxLMDevCk9PW9mo8ebN6xXymZmZQyKRIDLyudyGWfHxr5GSkgwzM3NZ2oejpJ9K/xK59UZGPpdbt5ydnY0XL17I1gwXRkTEQzx//gw//zxVbofnK1fCvrzBRcTMzByPHj2ARCKRC8CfPXsiu/4xuaPp6urq+Y5Kv8/AoBw6dvRGx47eSEtLw/DhQ7BmzUpZYFwcfUtERERlF9cYE9FXJRZLEBh4Ic+gOFdg4AWIxRLZqPG+fbsRH/9aLo+joxMA4O+/t8ilb9u2GQDQvLmzLE1bW0dhunFuOqA4FflL1KpVB+XKlcOBA3uQnZ0tSz98OBRv3rz5rDIFAqFCmlQqxY4d2z67nUXN0dEJr1+/xvHjR2Rp2dnZ2LlzO3R0dNGokf1H7zcyMkajRt9g377dea4rT0hIkP37zZtEuWu6urqwtKyErKy3srTcvi3oNHEiIiJSbRwxJqKvKiwsRjZ9Oi9SKRAVlYqwsBg4OVmgX7+BOHw4BM+ePUWVKrayfNWr14CHhyf279+DlJQUNGxoj3///QehocFo0aKV3GhtzZq1sXfvTqxbtxpWVpVgZGSMb75pjOrVa0AoFGLz5vVITU2BhoYGvvmmMYyMjD/7+TQ0NDBw4FAsWPA7Ro3yh6urG6KjoxEaGgxra+vPGsmsXNkGlpZWWLJkIeLiXkIkEuHUqROlKujr1MkH+/fvxuzZ0/Dff/dgbm6OkyeP4/btWxg5cpzcjtT5GTt2AgICBuPbb7vDy8sHFhaWiI9/jX/+uY2XL19i/fqtAIA+fbqhUaNvULNmLRgYlMO9e3dx6tRx+Pp2k5VVs2ZtAMDChb+jadNmEAgEchuDEREREb2PgTERfVWxsWmFymdlVQnt2nkgNDRYIc+ECYGwsLBESEgwzpw5CWPj8ujbdwAGDBgil2/AgMGIjY3Gli0bkZaWioYN7fHNN41RvrwJxo+fhI0b12LOnBkQi8VYtGj5FwXGAODr2x1SqRTbtm3GkiV/omrV6vj99wX48895smOICkNdXR1z5y7AwoW/Y+PGddDS0kSLFq3h69sN/fv3/HQBX4GWljYWL16BZcsW49ChYKSmpsLaurLsOKeCqFLFFqtXb8DatasQGnoAb968gZGRMapXr4kBAwbL8vn5dce5c2dw+XIYsrLewszMHEOG+KNXr36yPC4ureHn1x3Hjh3BkSOhkEqlDIyJiIgoX2rSL9kxpowTiyWIj89/ZKssUFcXwMhIhISEVGRnS0q6OVQAyt5n589HwcfnwCfz7dnjBScni6/Qoq9DIAA6dHBDy5at8eOPeZ+/S6WLsv9fU0XsM+XEflM+qthnxsaifDe3pLKBvUtEX5WjoxksLETIb0axmhpgYSGCo6NZ3hmUQGZmpsJO0SEhwUhMTIS9/Tcl1CoiIiIiyg+nUhPRVyUUCjBzZnMMGnQUamqQ24QrN1ieObO5Un8q+88/t7F48Xy0bu0GA4NyuH//Hg4e3I8aNWqgTZu2Jd08IiIiIvoAA2Mi+uo8PW0RFNRW7hxjADA3F2HmzObw9LT9yN2ln7m5BSpWNMXOnduRlPQGBgbl4OHRET/9NBECgYbKTDsjIiIiUhYMjImoRHh62sLDwwZhYTGIjU2DqakuHB3NlHqkOJe5uQXmzl0gl/b+eiwiIiIiKl0YGBNRiREKBWVqgy0iIiIiUk7KPzRDRERERERE9AUYGBMRERGVQtHRUXB2dkBIyKePuMvv3i1bNhZDy4iIyh5OpSYiIiIqYiEhBzB79jS5NENDI1SpYotevfqhWTOnEmqZoosXz+Hu3X8waNCwkm4KEVGJYWBMREREVEwGD/4O5uYWkEqliI+PR2joAfzwwyjMnbsATk4tPnqvmZk5jh8/D3X14v117eLF89i9ewcDYyJSaQyMiYiIiIqJo2Nz1KpVR/ba07MTvL3b4dixw/kGxtnZ2ZBKpdDQ0ICWltbXaioRkUr7rMA4OTkZp06dwt27d/Hy5UtkZmZCS0sLFStWRO3atdGqVSsYGBgUdVuJiIiIlJq+vj60tLQgFAoB5KwF7trVGwEBo6CuLsTOndsRExONoKCN0NPTR9eu3vjpp1/QoYOXrIwTJ45hzZoViIp6AUtLKwwe7I9z507jxo1r2LlTcT3yvn27sXnzesTFvUTVqtUxbtwE1K5dFwAwa9ZUhIYGAwCcnR1k95w7dxUAkJ6ejtWrl+PkyWNISIiHmZk5vLx80LNnH6ipqcnyOzs7oEuXrnBwaIpVq5YiMvI5LC0rYfjw0XB0bF70byQRURErdGC8evVqLF26FGlpaRAIBDA0NISWlhYyMzORmJgIiUQCHR0d+Pv7Y+jQocXRZiIiIiKlkJKSgsTEREilUiQkxGPXru1IT0+Hu7uHXL6QkAN4+zYT3t4+0NTUhL5+OUilEoXyLlw4h19+mQRb22oYNux7JCcnY86cGahQoUKe9R87dghpaWno1KkL1NTUsGXLBvz884/4++99UFdXR6dOXfDqVRyuXLmEyZOny90rlUoxceJYXL9+FZ6enVCtWg1cvnwRS5f+iVevXmLkyHFy+cPDb+H06ZPw8fGDrq4IO3duQ2Dgj9i1Kxjlyhl+2RtJRFTMChUYb9q0CfPmzYOXlxd69+6NunXrQkNDQ3Y9KysLt2/fxtatW7FgwQLo6Oigb9++Rd5oIiIiImUwenSA3GtNTU1MmjQFjRs7yqXHxcVi27a9MDIykqVFR0cplLdixV+oUKEili0Lgq6uLgDgm28aY8SIYTAzM1fIHxsbg61b98hm8llbV8bEieNw6dJFODm1QL16DVCpkjWuXLkEd/cOcveeO3ca165dwZAh/vj220EAAF/fbggMnIAdO7bB17c7LC2tZPmfPn2MTZt2yNLs7R3Qv39PHDt2GL6+3Qv8nhERlYRCBcYbN25E586dMWfOnDyva2howN7eHvb29hAIBNi0aRMDYyIiIlJZY8dOQKVK1gCAhIR4HD4cijlzZkBXVxcuLq6yfC4urnJBcV5evYrDo0cP0bfvAFlQDACNGn2DqlWrITU1VeEeV9d2csvbGjRoBACIinrxybZfvHgeQqEQXbv2kEvv0aMPTp06jrCw83IBr4NDE7lAuVq16hCJRAWqi4iopBUqMI6OjsbgwYMLlNfBwQGhoaGf1SgiIiIiZSIWSxAWFoPY2DSYmupCIpECAOrUqSu3+ZabmzsGDOiN+fN/Q/Pm7zbfsrCw/GQdMTHRAAArq0oK1ywtK+H+/XsK6aampnKvc4Pk5OSkAtQXg/LlTaCrK5JLt7GpIrsuX5eZQhn6+gZITk7+ZF1ERCWtUIGxlZUVzp8/j65du34y77lz52BlZfXJfERERETKLDg4AoGBFxAV9W7E1tr6CbS1FfMKBALY2ztgx46teP78GXR0dAAAmprFs/u0QCDMM10qlRZDXYKvVhcRUVHL+ztYPgYMGIBDhw7B398fZ8+eRXx8vNz1+Ph4nDlzBv7+/jhy5AgGDBhQpI0lIiIiKk2CgyMwaNBRuaAYABIT3wIAzp5VnEYsFmcDyNnxuTBy1xBHRj5XuPbihWJaQb2/u7R8fWZ4/foV0tLkn+3p0yey60REZUWhRoy7du0KsViMhQsX4tSpUwAAoVAIDQ0NZGVlQSwWQyqVoly5cpg8eXKBRpaJiIiIlJFYLEFg4AV8bEB02bJwDBzYBkJhzlhEdnY2Ll++BA0NDdjY2CAp6dNTmnOZmFSArW1VHD4cIrfO+MaNa3j06GGem28VhLZ2zqh1cnIy9PX1ZenNmjlh//492LXrb/Tt+26w4++/N0NNTQ2Ojk6fVR8RUWlU6OOaevToAR8fH4SFheHff/9FXFwcMjIyoK2tjQoVKqB27dpwdHTkgfRERERUpoWFxSiMFH8oLe0+li7diho1jJCQEI+jRw8jMvIZ+vTpD5FIr1CBMQAMHfo9Jk0aB3//QejY0QvJycnYtetv2NpWLfQIdK6aNWsDABYu/B1NmzaDQCCAm5s7nJxawt7eAStXLkV0dBSqVauBK1fCcPbsaXTr1lNuoy0iImVX6MAYALS0tODi4gIXF5eibg8RERGRUoiNTftkHhOTa9i+/RqAnHXElStXxvjxE9Gpk+9n1ens3BJTp87CmjUrsXz5X7CyqoSffvoFhw4F4/HjiM8q08WlNfz8uuPYsSM4ciQUUqkUbm7uEAgEmDNnPoKCluP48aMICTkAMzMLBASMQs+efT6rLiKi0kpN+oU7Irx58wYZGRkQiUTQ09MrqnaVCmKxBPHxH/8kWNmpqwtgZCRCQkIqsrMlJd0cKgD2mXJivykf9pny+dp9dv58FHx8Dnwy3549XnBysijWtvTv3wuGhoZYuHBpsdZTHPh/TfmoYp8ZG4tkSyKobCr0iPHbt2+xY8cOHDx4EP/++y8yMjJk14yNjdG8eXP0798fdevWLdKGEhEREZUmjo5msLAQITo6Nc91xmpqgLm5CI6ORbdJVXZ2zsZd6urvfoW7fv0qHj68jyFD/IusHiIiVVOowDghIQEDBgzAvXv3oKurCx0dHaSnp0NDQwOtW7fGy5cvcejQIYSEhGDUqFEYOnRocbWbiIiIqEQJhQLMnNkcgwYdhZoa5ILj3I2eZ85sXqSjTHFxLzF6dADatfOAiUkFPHv2BHv37kL58uXRufPnTc8mIqJCBsbz5s3D06dPsXz5crRq1QoAEBERgbFjx0JHRwfbtm1DUlIS/vjjDyxYsAA2NjZo165dcbSbiIiIqMR5etoiKKitwjnG5uYizJzZHJ6etkVan76+AWrWrI3g4H1ITEyAtrYOmjVzhr//CJQrZ1ikdRERqZJCrTFu1qwZunXrhjFjxsilX716FX379sWJEydgbp5zVMCgQYOQmpqKbdu2FW2LvyKuMabSiH2mnNhvyod9pnxKss/EYgnCwmIQG5sGU1NdODqacT1iAfH/mvJRxT7jGuOyr1AjxqmpqXke5m5qagqpVIoXL17IAmM3Nzf89ttvRdNKIiIiolJMKBQU+wZbRERUfAr1sUe1atVw7NgxhfRjx45BTU0NVlbvzrMTi8UQCoVf3kIiIiIiIiKiYlSoEeNBgwZh3Lhx6NevHzw8PKCtrY3r169jz549cHV1lRtNvnXrFqpWrVrkDSYiIiIiIiIqSoUKjDt27Ig3b95g4cKFuHz5MgBATU0NHh4emD59ulze6tWrw9PTs+haSkRERERERFQMCn2Oca9evdC1a1c8ePAAb9++ReXKlWFkZKSQj0c1ERERERERkTIo1Brj6dOn48yZM5BKpahTpw4aNmyYZ1BMRERERETKx9nZAfPnzy2y8qKjo+Ds7ICQkANFViZRcSjUiPHNmzexdetWaGtro2nTpnBxcYGLiwssLLgLIxERERFRafbiRSQ2b16PK1cu4/XrOKira6Bq1apo3botOnXygZaWdkk3kajEFCow3r17N+Li4nD69GmcOXMGf/zxB6ZPn45q1arBxcUFrVq1gr29PQQCnvFFRERERFRaXLhwDpMnT4CGhibat+8IW9uqyMrKQnj4TSxd+iceP47AhAk/l3QziUpModcYV6hQAX5+fvDz80N2djauXLmCM2fO4MSJE1i9ejUMDAzg5OSEVq1aoUWLFjA2Ni6OdhMRERERUQFERb3AL7/8BDMzc/z553KYmJjIrvn6dkNk5HNcuHCuBFtIVPIKHRjL3ayujmbNmqFZs2aYMGECIiMjcerUKZw5cwZTpkxBVlYW6tWrhxEjRqBFixZF1WYiIiIiIiqgLVs2ID09DRMnTpYLinNZWVVCt2495dLOnDmFVauWIjLyOSwtK2H48NFwdGwul+fly5dYvnwJLl48j5SUZFhaVkKPHr3h6dnpo+15/foVVqxYgitXLiExMQEGBgaoXbsuRo0aD3Pzd0s0L148j40b1+L+/XtQUxOgYcNG8PcfCVvbd0fCPnz4ANu3b8bNmzfw+nUc9PT04ejYHN9/Pwrlyhl+xrtFquqLAuMPWVlZoU+fPujTpw8yMzMRFhaGU6dOISYmpiirISIiIiKiAjp//iwsLCxRv75dgfKHh9/C6dMn4ePjB11dEXbu3IbAwB+xa1ewLNh89eoVBg/+FkDOqLOhoSHCwi5gzpwZSEtLRbduvfItPzDwRzx+HAFf3+4wNzdHQkICrly5hNjYGFlgfOjQQcyaNRVNmjSDv/8IZGRkYO/eXQgIGIy1azfL8l25cglRUS/QsaMXjI3L4/HjCOzfvxuPH0dg5cp1UFNT+4J3jlRJkQbGueLi4nDw4EHs378fu3fvLo4qiIiIiIjoE1JTUxAX9xItWrgU+J6nTx9j06YdsLS0AgDY2zugf/+eOHbsMHx9uwMAFixYAIlEjPXrt8mC5c6d/fDLLz9hzZqV6NSpS56beSUnJ+P27XAEBIxCr159Zel9+w6Q/TstLQ0LF86Dp2dnuXXPHh6e6NXLFxs2rJWld+nih549+8jVUbduPUyd+jPCw2/Czq5RgZ+bVFuR7ZKVmpqKPXv2YODAgWjVqhXmzJmD5OTkoiqeiIiIiIgKKTU1FQCgq6tb4HscHJrIgmIAqFatOkQiEaKiXgAApFIpjhw5AmfnlpBKgcTERNmfpk2bISUlBf/9dy/PsrW0tKChoYGbN68hKSkpzzxXrlxCSkoy2rZ1lytbIBCiTp16uHHj6nvlvQu+MzMzkZiYiLp16wNAvm0gyssXjRhnZ2fj9OnTOHDgAE6dOoXMzEzUqFEDI0eOhKurK6pXr15U7SQiIiIiogISiyUIC4vBs2evALwLkAvC1NRMIU1f30A26JWQkICkpCTs3bsbe/fmPTs0ISEhz3RNTU34+4/AX38thLd3O9StWx/NmzujffuOKF8+Z/1zZOQzAMDIkd/lWYZIJJL9OynpDdasWYXjx48gISFeLl9qasonnpTonc8KjK9evYr9+/fj8OHDePPmDerWrYuePXti7dq1+P7779GuXbuibicRERERERVAcHAEAgMvICoqJxi2tdXFmTO3EBwcAU9P20/en9/Rq1Kp9P9/SwAA7dt3gLt7xzzzVquW/wBZt2694OTUEmfOnMLlyxexevVybNy4DosWLUONGrUgkeTUM3nydBgbl1e4XygUyv49efIk3LlzC7169UO1ajWgq6sDiUSKceNGQCKRfPJZiXIVKjD+448/cPDgQURFRaFq1ar49ttv0bFjR1SuXBnPnj3D2rVri6udRERERET0CcHBERg06Cj+H8MCAFJSrGFoeA/ff78JQJ8CBccfY2hoBJFIBIlEgsaNm35WGZaWVujZsw969uyD58+fYcCAXti2bTOmTJkhm8ZtZGT80fKTkpJw7dplDBo0DAMGDJGlP3/+7LPaRKqtUGuMV61aBYFAgA0bNuDgwYMICAhA5cqVi6ttRERERERUQGKxBIGBF+SCYgBISLCDRKKOihXPYPLkoxCL5UdSX7yIxN9/by1wPUKhEO7u7jh58jgiIh4qXM9vGjUAZGRkIDMzUy7N0tIKuroivH37FgDQtKkjRCIRNmxYg+zs7HzLFwpzQhnpBw9cmGchylWoEWN3d3ecOnUKgwYNgpOTEzw9PeHq6lqoxfxERERERFT0wsJiZNOn35eVZYDoaFeYmx+HuvoG/PRTDJyd7ZCVlYU7d8Jx8uQxeHh4FqqucePG4cKFixg6tD+8vHxgY1MFSUlJuH//Hq5evYzQ0BN53vf8+VOMGhUAV1c32NhUgVCojjNnTiI+/jXc3HKWY4pEehg3bhJmzpyCgQN7o02bdjA0NEJsbAwuXjyH+vXtMHbsBIhEemjY0B5btmxAdnY2KlSoiMuXwxAdHVX4N49UXqEC4z///BMpKSk4fPgwgoOD8eOPP0JLSwutWrVCo0aNeE4YEREREVEJiY1Ny/daamplPH3qCyOjcNy+HYbLlw9BQ0MTVatWw/Dho+Hl5VOoukxMTLBmzUasXr0Cp0+fwJ49r1GuXDnY2FSFv/+IfO+rWNEUbm7tcO3aFRw+HAKhUAhraxtMnz4HrVq1keVr1649TExMsGnTemzduhFv32ahQoUKsLNrhA4dvGX5fvllJhYs+B27d+8AIEXjxo6YN28ROnduX6jnIVKTfjj3oBBevnyJ4OBgBAcH4+7duwAAR0dH+Pr6wsXFBQYGBkXW0JIgFksQH1/wHfyUkbq6AEZGIiQkpCI7mxsUKAP2mXJivykf9pnyYZ8pJ/Zb0Tl/Pgo+Pgc+mW/PHi84OVl8dj2q2GfGxiLZ1G0qm76odytWrIiBAwdi9+7dOHjwIIYNG4bnz5/jhx9+QPPmzdG3b99PF0JERERERF/M0dEMFhYi5DeJU00NsLAQwdFR8TgmIlVXZB97VK1aFWPGjMHx48exadMm+Pr64sGDB0VVPBERERERfYRQKMDMmc0BQCE4zn09c2ZzjnwS5aFY/lc4ODhg2rRpOHfuXKHue/r0KaZMmYJOnTqhTp068PQs3CYAALBu3TrUrFkTw4YNK/S9RERERETKzNPTFkFBbWFuLpJLNzcXISio7Rcf1URUVhVq8y3g3XbouRttZWVl4eTJkwr5TExMYG9vX6iyHzx4gNOnT8POzg4SiURh6/VPiYuLw5IlS1C+vOJB4EREREREqsDT0xYeHjYIC4tBbGwaTE114ehoxpFioo8oVGD8/PlzdOjwv/buO77m6/Hj+CuTTBIzib2C1iwRxAqxalepUbO1q6jvt7S6KVVVNUqL2qtWlaJiF40qNerboTaxZScy7r2/P/LLrSsJESPjvp+Ph4fe8zmfc8/nc5q473s+n/Npzauvvsrw4cMBiI6OZvjw4djY2FgEWUdHR3744QeKFy+e4fYDAwNp1qwZAGPGjOH3339/mO7x6aefEhgYSGiolmgXEclthg0bAMDMmV8/tfdct24dY8eOZfXq7/HyyvxCNSIiT5udne0jLbAlYm0eKhivXLmSfPnyMWjQoFTb3nzzTSpXrgyA0Whk5MiRrFy5kv/85z8Zbt/WNvPfYv36669s376drVu38sYbb2S6HRGR3OLy5UssW7aIQ4d+4datG9jbO1C2bFmaNAmiffuO5MmT96n15cSJY/zySwhdunTHzc3tib5X585tuXr1ivl1/vwelChRkq5de9CoUZMn+t4iIiKSMz1UMN6/fz8tWrTA0dEx1TZfX1/8/PzMr9u2bcv+/fsfKhhnlsFg4KOPPmLQoEEULlz4ib+fiEh2d+DAPt55500cHBxp2fJ5ypQpS2JiIsePH+XLL7/g7NkzvPnm20+tPydOHGfBgrm0bt32iQdjgPLlK/DSSz0BuHnzBhs2rOPtt//D6NFj6NCh8xN/fxEREclZHioYnz9/npdeesmizNbWFjc3NxwcHCzKS5UqxZo1ax69hxmwfPly4uLi6NOnz2Nv294+d9+LkXKvie45yTk0ZjnT0xy30NDLvP/+WxQt6sWsWV9RsGAh87auXV/i4sULHDiwL93fb0ajkcTERPLkyfPY+mRnZ/P/f9tm+vdqytoWGdm/cOHCPP/8vws4tmnTls6d2/Pttyvo3LlLht7v7rF6lH7L06PfjzmTxi3n0ZhJbvRQwdhgMGBnZ2dRli9fPg4dOpSqroODA0lJSY/Wuwy4desW06dP55NPPklzJvtR2Nra4OHh8uCKuYC7u1NWd0EeksYsZ3oa4zZt2jJiY2OZNGki5cuXSrXdw6MSVatWMr/29fWlR48eVK9ena+++opz584xbdo0Jk6ciK+vL7Nnz7bYPz4+nnr16vH888/z4YcfArBkyRJWrlzJpUuXcHR0pHjx4vTt25e2bdsyY8YMZs6cCUCnTv+G1R07dlCsWDHWrl3Lhg0bOHXqFFFRUZQoUYKePXvSvXt3i/d1cLD7//7f//eynZ0tDg72FvU8PFwoW7Ysf/31Fx4eLvz5558sXLiQQ4cOcf36ddzd3WnYsCH//e9/8fDwSNVmvnxO5va2b9/Ot99+y//+9z/Cw8MpWrQoHTt2ZNCgQan+jTx27BgzZ87k6NGjJCYmUrx4cTp37kzv3r3NdU6fPs0XX3xBSEgIcXFxlC9fnqFDh9K0adP7HqekT78fcyaNW86jMZPc5KGCcaFChThz5kyG6p45c4aCBQtmqlMP44svvsDX15datWoRGRkJQFJSEklJSURGRuLs7Iy9/UMvvg2A0WgiMjL2cXY327Gzs8Xd3YnIyDgMBmNWd0cyQGOWMz3NcduxYyc+PsUoXdqXsLCYDO2zf/8BNm/eTOfOXcmXLz/u7gUICmrJ0qWLOHculHz58t3VfjDR0dE0aRJEWFgM3323jkmTxhMY2IzOnbsSH5/AP/+c4pdfDhMQEEidOgH8/fc/bNu2lREj3iBfvvwA2NrmJSwshqVLl1G6dBnq1g3Azs6Offv28sEHHxATc4fOnbua3zcx0QDwwGMyGIwkJiZZ1EtKSiQ09Aru7vkIC4th+/bdnD17jtat2+LpWYCzZ0/z3Xfr+fPPv5k/fxE2NjYWMyEREXG4uCS39+23a7C3d+Sll3rg5OTM4cOHmD59OrduhfHaayPN+xw8GMLo0a9ToEBBXnzxJQoUKMi5c2cJDt5Bu3bJl3OfOXOaAQP6UqhQYXr27I2TkxM7dgQzdOhQJk78lMaNAzM0fpJMvx9zJo1bzmONY+bu7qQZ8lzuoRKjn58fGzduZPjw4Tg5pf8NUWxsLBs3bqRBgwaP3MEHOXv2LIcOHaJ27dqpttWuXZu5c+fSsGHDTLeflGQdP+wGg9FqjjW30JjlTE963GJiorlx4zoNGjR6qPe5cOE8ixatpHTpf59vaW/vyMKF8wkO/tHivtwtW37Ay8ubZ56pRlKSkf37f6J06TJ8+OGkVO0mJRkpXboc5cr5sm3bVurXb2SxunNSkpEZM76yWAisY8cujBr1GsuXL6VDhxfN5SlPPsjIcSUmJnHz5m0g+R7jJUsWcPv2LTp37kpSkpEOHV6ga9ceFvtUqvQs77//NkeOHKFatRoW2+4et3ff/ciiv+3adcLV1Y21a1fTv/9gHB0dMRgMTJo0gQIFCrJgwXKL+6pNJpO5rc8++5QiRYoyd+5i81VP7dt3ZsiQ/sycOZ2AgMYPPFZJTb8fcyaNW86jMZPc5KG+9ujTpw9hYWEMHDiQ69evp1nn+vXrDB48mPDwcItLxZ6Ut956i8WLF1v8qVixItWrV2fx4sVUrVr1ifdBRCS7iIlJntV0dnZ+qP2qV69pEYoBSpQoSeXKz7Jt21ZzWWRkBCEhBwgKamm+59fV1Y0bN67zxx8nM9Xnu0NmdHQ04eHh1KhRk9DQy0RHR2eqzV9+CaFNm2a0adOMPn26sXv3Dlq0aM3gwa+les/4+HjCw8N55pkqAPz1158Z7m9sbAzh4eFUq1aDO3fucP78OQBOnfqLK1cu06VLt1SLjaWct8jICI4cOUSTJs2IjY0lPDyc8PBwIiIi8POry6VLF7hxI+1/a0VEROTxeqgZY19fX9577z0++OADAgMDqVOnDuXLl8fZ2ZnY2FhOnTrFL7/8gsFg4J133qFixYoP1Zm4uDj27NkDwOXLyR+Itm5N/kDm5+eHp6cnvXv3JjQ0lODgYAAqVaqUqh13d3ecnZ2pU6fOQ72/iEhOZTAYCQm5yoULN4F/A3JGpfeM3pYtn+fzzydz9eoVihb1YufO7SQlJdGyZWtznR49evPrr7/w6qu9KVasOLVr+xMU1IKqVatn6L2PHz/K/Plfc/Lkce7cuWOxLTo6GldX14c6FoDKlZ/l1VcHY2NjQ968eSlZsrRFQI2MjOCbb+ayY8c2wsJuW+wbE3P/MH7mzGnmzp3NkSOHUp3nlH0vX74EQOnSZdNt59Kli5hMJubNm8O8eXPSrBMWdptChfS0BRERkSftoW++7dKlC+XKlWPWrFkcPHiQ/fv3/9uYvT1+fn4MGTKEWrVqPXRnbt26xeuvv25RlvJ68eLF1KlTB6PRiMFgeOi2RURyq02bzjBu3AFCQ5NDWpkyzuzde4xNm87Qpk2ZB+ydLL0VqJs1a86MGVPZtm0LvXr1Y9u2LVSsWJkSJUqZ65QqVZrly9dy4MBPHDz4M3v27GT9+tX07fsq/fsPvO/7Xr58iREjhlCiRCmGDRtJkSJFsLd3ICRkP6tWLcdkytwlevnz56d27fS/HH3nnbH8/vsxunfvRblyFXB2dsJoNPHGG69hNKb/nlFRUbz22gCcnV3p338QPj7FcHR05O+//2T27Bn33fdeRmPypeHdur2Mn59/mnWKFSue4fZEREQk8zK1KlXNmjWZN28e8fHxnD9/nujoaFxcXChZsqTFvccP+01/sWLF+Ouvv+5bZ8mSJQ9sJyN1RERyg02bztC/fzD/f/stANHRJcif/0+GDl0K9MxwOE6Lu3s+6tYNYNu2rTRv3ooTJ44xfPgbqeo5OTnRtGlzmjZtTmJiIm+//R8WL/6Gnj37kCdPHvPlw/fav38vCQkJTJo0laJFi5rLjxz5NdN9fpDIyEgOH/6F/v0H0rfvq+byixcvPHDf3347TEREBBMmfEr16jXN5VeuhFrU8/EpBsDZs6fTDeg+Pj5A8pfK9wvxIiIi8uRlemm17t27c/36dXx9fXnuueeoWLGiRSjes2cPzz///GPppIiIpGYwGBk37oBFKAYIC6uG0WhP4cJ7eeed4FQrhl6+fIlvv12R4fdp0aI1586dYdasL7C1taVZs+YW2yMiwi1eOzg4UKpUaUwmEwZD8mP7nJyS78uNjo6yqGtrm/LP0L8HER0dzebNGzPcv4eVsqqo6Z4Tl5FzktLfu/dNTExk/frVFvUqVKiIl5cP3367gqgoy2NO2dfDw5MaNZ5jw4Z13Lx5M9V7hYWFZeBoRERE5HHI3HOMgIsXL9K+fXveeOMNevbsaS6Pjo5m4sSJrF27lipVqjyWToqISGohIVfNl0/fLTHRnStXAvHy2oG9/WLeeusqAQHVSExM5Pffj7Nr13ZatWqTRotpq1cvgHz58rFr13b8/evh4eFpsX3kyGEUKFCAKlWq4enpyblz51i37lvq1q2Ps3Pys399fZPXg/j66y9p2rQ59vb21K/fED8/fxwcHHjzzZG0a9eJuLhYNm78Dg8PT27dSh0WHwcXF1eqV6/J8uWLSUpKolChwvzyS0iqWd+0VKlSFTc3dyZMeJ/OnbtiY2PDjz9uTvXlhK2tLaNHj+HNN0fSt293WrduS4ECBblw4Rxnz55h6tTk5zqPGvUmQ4a8Qu/eXWnbtiPe3j7cvn2LkydPcP36dRYtyvgXGCIiIpJ5mQ7GP/zwAx988AHjx48nODiYjz/+mPPnzzNu3Dhu3LjBiBEjGDBgwOPsq4iI3OXatfSfsx4TU5Lz51/Aw+M4J06E8MsvW3FwcKRs2XIMGzaCtm07Zvh9HBwcCAxszvr1q2nRonWq7e3bdyI4eCurVi0jLi6OQoUK07lzV3r37m+uU6nSM7zyyiA2bFjHwYM/YzQaWb36e0qUKMVHH33C3LmzmTXrCwoUKECHDi+QP78HEyd++HAn5CG89954Pv/8U9atWw2YqF3bnylTptOhQ8v77pcvX34mT/6cmTOnMXfubNzc3GnevBW1avkxatQwi7p16tRl+vQ5LFgwl5Url2EyGfH2Lka7dh3MdUqXLsO8eYtZsGAuW7ZsJCIiAg8PT8qX96Vv31eewJGLiIhIWmxM915L9pC2bt3Khx9+SGxsLPHx8VSqVImJEyfi6+v7uPqYZQwGI7dvP9zKrjmNvb0tHh4uhIXF6Dl0OYTGLGd6EuO2f38oHTs++JLj9evbUr9+2qtOZ9T06Z+xadP3fP/9j+TNm/fBO+QC+lnLeTRmOZPGLeexxjHz9HQx34ojudMjj26hQoVwdnbmzp07mEwmKlWqRPHiWkVTRORJ8/cvire3C+msa4WNDXh7u+DvXzTtChkUHx/Ptm1baNw40GpCsYiIiFiXTAfjhIQEPvnkE3r16oWLiwtr1qzh9ddf5/vvv6d9+/YcOnTocfZTRETuYWdny/jx9QBSheOU1+PH18v0N9xhYbfZtm0rH3wwjoiICF588aVH6a6IiIhItpXpYNy+fXsWL17MK6+8wpo1a3j22WcZPHgwq1evxtXVld69e/Pxxx8/zr6KiMg92rQpw/z5QXh5uViUe3m5MH9+0CM9quns2TN8+OE4Tpw4xogRoylfPuffIiMi8jR07tyWCRPeN78+cuRXAgJqWTyKLnkRv7ZZ0DsRScsjXUq9YsUKRo4ciYODg7msYsWKrF69mkGDBrF8+fJH7qCIiNxfmzZlOHy4O+vXt2XOnKasX9+Ww4e7P1IoBqhZsxb79v3Kxo3beOGFro+ptyJibdatW01AQC1efbV3pts4e/YM8+d/laHV4x+3v/76k4CAWnz99Zfp1rl48QIBAbWYMWPqU+yZiDxOmV6V+rvvviNPnjxpN2pvz/Dhw2nWrFmmOyYiIhlnZ2f7yAtsiYg8CcHBW/Dy8uaPP05y6dJFihV7+LVozp07w4IFc6lR4zm8vJ7u7zpf34qULFmK7dt/ZMCAIWnWCQ7eCkDz5skr9y9fvvau57SLSE6Q6Z/Y9ELx3SpXrpzZ5kVEREQkhwsNvcyJE8cZNmwk+fN7sG3blqzuUqYEBbUkNPQyv/9+Is3t27f/SMmSpfD1rQiAo6Mj9vaZnn8SkSygr7JERERE5InYtm0Lbm7u1KsXQOPGTdm2bWua9X744Qd69+5OUFBDmjdvRK9eXfn22xUAbN68kXfeGQPA8OGDCAiolep+3XXrVtOzZxeaNKlL+/Yt+eyzT4iKirJ4j2HDBvDyy104e/YMr702kKZN69OhQyuWLVv0wONo3rwVANu3p+7/n3/+wYUL5wkK+vc56PfeY5xRy5cvYdCgfrRu3ZTAwPr069eTXbu2P3Q7IvLwFIxFRERE5IkIDt5Ko0ZNcHBwICioBZcuXeCPP05a1Dl4MIRRo0bh5ubO4MGvMWjQMGrUeI4TJ44BUK1aDTp3Tl4V/+WX+/LOOx/yzjsfUqpUaQDmz/+KqVM/oWDBggwbNoLGjQP5/vt1jBo1lKSkJIv3ioqK4o03XqNcuQoMGzaSkiVLMXv2DH7+ef99j8Pb24cqVaqyc+d2DAZDqmMELIJxZq1Zs5Ly5X3p338gAwcOwc7OjnfeGcOBA/seuW0RuT9d4yEiIiIij92ff/7B+fPnGDHiPwBUrVqdwoWLsG3bVipVesZc78CBn3B1deWLL2ZhMqV+MLuPTzGqVavOmjUrqV27DjVr1jJvCwsLY+nShfj5+TNlynTzfb0lSpTi888n8+OPm3n++Xbm+jdv3mDcuA9o2fJ5ANq0aU/nzm344YcN1K1b/77HExTUiqlTP+Hw4UP4+fkDYDQa2bkzmGefrYqPT7FMnql/rVixljx5/n1e/AsvdKVfvx6sWrWMevUCHrl9EUmfZoxFRERE5LELDt6Cp2cBc5C1sbEhMDCIHTu2Wcy6urq6ERcXxy+/hDz0e/z660ESExN58cVuFotdtWvXERcXF37+2XKm1cnJmRYtWptfOzg4UKnSM4SGXn7gezVtGoS9vb15hhjg6NEj3Lhx/bHMFgMWoTgyMpLo6GiqVq3BX3/9+VjaF5H0acZYRERERB6ZwWAkJOQq167FUqhQHrZv30aNGs9ZPGKpcuVnWblyqcWs6wsvdGH37h2MHPkahQoVpnbtOgQGBuHvX++B73n16lUASpQoaVHu4OCAt7ePeXuKwoULY2NjOSvt5ubO6dP/PPC98uXLj59fXfbu3cXo0WPJkycPwcFbsbOzIzAw6IH7Z8T+/T+xaNF8/vnnbxISEszl9/ZZRB4/BWMREREReSSbNp1h3LgDhIbGAODsfIlixW6yY8c2duzYlqr+tm1bzMHY09OT7777jq1bt7N//34OHjzA5s0badnyecaN++Cx9jO9RyiZTKYM7d+iRSsOHPiJAwd+IiCgEbt378TPzx8PD49H7tuxY78xZswoqlWrwahRb1KgQEHs7e3ZvHmjxSy1iDwZCsYiIiIikmmbNp2hf/9g7s6Wbm7/kJTkxI0b9Rg8uBrPPVfYvG3Pnl3s3bub+Pg75kuHHR0dadCgEXXrNsBoNPLZZ5PYsGEdffq8QrFixdOdMS1atCgAFy6ct7jHNzExkStXQqlVy++xHmtAQEOcnV0IDv4Re3t7oqIiCQpq9Vja3r17J46OjkydOhNHR0dz+ebNGx9L+yJyfwrGIiIiIpIpBoORceMOWIRiG5skXF3PER1dmujoMixdamTkyEDs7JJnawsWLMT27T+yb99emjZtTkREOB4eLub9bW1tKVu2PID5cuK8eZ0AiI6Otnj/WrXq4ODgwJo1q/D3r2cO0Js2bSA6Opq6dR/vglV58uSlYcPG7NwZzJ07d3BycqJBg0aPpW1bW1tsbGwwGo3msitXQvnpp92PpX0RuT8FYxERERHJlJCQq+bLp1O4uJzHzi6R6OiSmEwQGhpDSMhV6tf3BuCZZ6qQP78H27ZtoWnT5nz88UfExkZTrVpNChYsxNWrV1mzZhXly1cwP5KpfPkK2NnZsWzZImJionFwcOC552rj4eFJz559WLBgLm+88Rr16zfk4sXzrF+/hkqVKlsstPW4tGjRiq1bf+CXX36mefNWODk5PZZ269ULYNWqZbzxxmsEBbUgLCyMdetW4+NTnNOnTz2W9xCR9CkYi4iIiEimXLsWm6rM3f0fjEY7YmOLpVnP1taWevUC2LZtCxER4bRo0ZrNmzewdu1qoqOj8PQsQNOmQfTrN8B8T3CBAgUZPXosS5YsYNKkjzAYDEyfPgcPD0/69x9I/vwerFv3LTNmTMXdPR9t23Zk4MCh2Ns//o+6NWvWpkCBgty6dfOxrUYN8NxztRkz5h2WLl3E9OlT8fLyZvDg17hyJVTBWOQpsDFldLUBK2QwGLl9O+bBFXMwe3tbPDxcCAuLISnJ+OAdJMtpzHImjVvOozHLeTRmT9/+/aF07Pjge2DXr29rnjG+l8Yt57HGMfP0dDHfDiC5k0ZXRERERDLF378o3t4upPc0IRsb8PZ2wd+/6NPtmIjIQ1IwFhEREZFMsbOzZfz45OcN3xuOU16PH19PM20iku3pt5SIiIiIZFqbNmWYPz8ILy8Xi3IvLxfmzw+iTZsyWdQzEZGM0+JbIiIiIvJI2rQpQ6tWpQgJucq1a7EUKeKMv39RzRSLSI6hYCwiIiIij8zOzjbdBbbudvHiBaZO/YT//e93YmJi+OSTz+jQoc0T69ewYQMAmDnz6yf2HiKS8ykYi4iISI6xefNGPv74g3S3r1q1ipIlyz+1/ty5c4dlyxZRo8Zz1KxZ66m9b4q0zkf+/B6ULl2G7t17Ubdu/afeJ4B161aTN29eWrdum2rbhAnvc+XKZQYMGIKrqxuVKlXOgh6KiFhSMBYREZEc55VXBuHlZTk7aWtrQ4kSJZ5qP+7cucOCBXMBsiQYp0g5HyaTidu3b7Nly0b+85/X+eSTz6lfv8FT78/69avJly9/qmAcH3+H338/Tq9e/Xjhha5A8qN/RESymoKxiIiI5Dj+/vWoWNFypvHuZ6s+aUajkcTExCf+Phl17/lo06Y97do1Z/v2H9MNxklJSZhMJhwcHJ5WNwkLCwfA1dXtsbUZFxeHk5PTY2tPRKyTvqITERGRXCMxMZHmzRunebl1TEw0gYH1mDlzmrksISGB+fO/omvXDjRpUpdOnZ7nyy+/ICEhwWLfgIBaTJ36Cdu2baFnzy40aVKXDRvW0qZNMwAWLJhLQEAtAgJqMX/+V+b9Dh8+xJAhr9CsWQAtWzZmzJhRnDt31qLt+fO/IiCgFpcuXWTChPdp2bIxLVo04uOPP+DOnTuZOg9ubm7kyZMHOzs7AK5cCSUgoBbLly/h22+X06VLewID63Hu3BkAzp8/x7hx/6VVq0ACA+vRv//L7Nu3x6LNzZs3EhBQi+PHjzJjxlTatGlGs2YBjB07mrCwMHO9zp3bcvbsGY4ePWI+J8OGDWD+/K/o3Dn5XuIvv/yCgIBadO7874zyX3/9yRtvDKd580YEBTXg9dcH8/vvJ9Lsw2+/HWbKlEm0aRNEx46tzds3bFj3/8dWn1df7cWxY79l6vyJiPXRjLGIiIjkONHR0YSHh1uUOTjY4uHhQ6NGTdi1ayf/+c9bFrOhe/fuJiEhgWbNmgPJs75jxozi+PGjtGvXkZIlS3PmzD+sWrWcixcvMHHiZxbtHznyKzt3bueFF7qQL19+ypUrz+jRY5gyZRINGzahUaMmAJQtm3yP86FDBxk9ejje3j706zeA+Ph41q5dxeDB/fnmm6WpLgV/990xeHl5M3DgMP7++082bvyO/Pk9GDJkeIbPh8lkIizsNmvXriIuLo4WLVpZ1Nu8eSMJCfG0a9cRR0dH3NzycebMaYYM6U/BgoXp2bM3efM6sWvXdsaOHc348ZPNx5Vi2rRPcXNzp2/fV7ly5QqrV6/g888n8+GHEwEYPvwNpk37FCcnJ3r16geAp6cnHh4FcHNzY/r0qTRr1oK6devj5OQMwKlTpxg0qD/Ozi507/4y9vb2bNiwnuHDBzJjxtc888yzFn347LNPyJ8/P337vkJcXBwAmzZ9x6effkyVKlXp0qUboaGXefPNUbi7u1O4cJEHnkMRsW4KxiIiIpLjjBgxJFWZo6MjJ06coFmz5mzcuIFffgmxuIx4585gvL19zJccBwdv5ddff2HGjK+pVq26uV7p0mWZMmUiJ04co0qVaubyCxfOs2jRSkqX/ve5vCVKlGLKlEmULVuOFi3+nbmE5FlRd/d8fPXVAtzd8wHQoEFj+vXrwfz5XzFunOWsdvnyvowd+675dUREBD/8sCFDwfje8+Ho6MjYse9Su7a/RfmNG9dYufI7PDw8zGWvvz6EIkWKMnfuYhwdHQHo1OlFhgzpz+zZM1IFY3f3fHz++SxsbGwAMJmMrFmziujoaFxdXWnYsDFz535Jvnz5U50TFxcXpk+fSoUKFS22TZs2jaSkJL78ch4+PsUAaNmyDd27v8Ds2dNTrSjt7u7OF1/MNs+IJyUl8dVXX1K+fAWmT//K/IVIqVJlmDx5goKxiDyQLqUWERGRHGfUqDf5/PNZ9/yZAcBzz9Umf/787Ny5zVw/MjKSQ4cO0rRpc3PZrl3bKVmyFCVLliI8PNz857nnagPJM8R3q169pkUovp+bN29y6tTftGrVxhyKAcqVK0+tWnUICdmfap8OHV6weF2tWnUiIiKIiYl+4PvdfT7effcjatSoxaRJH7Fnz06Leo0aBVqE4sjICI4cOUSTJs2IjY01n4OIiAj8/Opy6dIFbty4btFGu3adzKEYoGrVGhgMBq5evfLAfqbFYDCwf/9+GjZsbA7FAAULFiQoqAXHjx9NdQ7atu1gDsUAf/75P8LCbtO+/QsWVwm0bt0WV1fXTPVLJCeYMWMGvr6+Wd2NDBkzZgyBgYFP5b3WrVuHr68vly5dyvA+mjEWERGRbM1gMBIScpVr12K5eDEcgMqVn0lz8a3kv+1p1CiQ4OAfSUhIwNHRkb17d5KUlERgYJC5/qVLFzl37qz5PuF73X3fLJDq0uf7SQmJJUqUTLWtVKlS/PLLz6kWjSpSpKhFPTc3dwCioqJwcUkOd3efiyJFnDEaTUDq89GsWQv69u3B1KmTqVfv31lzb28fi/e4dOkiJpOJefPmMG/enDSPJSzsNoUKFb5PP93+v5+Rae7/IOHhYcTFxVGyZKlU20qWLI3RaOTatWuUKfNvwL33OFLOd/HilquS29vbp6orOU/KY8kcHR1Zteo7i/8fIflZ1RER4SxZ8m0W9fDJiouLY968efj5+VGnTp0n+l4zZsxg5syZ/Pzzz3h6eqba3qZNGzw8PFiyZMkjv9fTPK6MUDAWERGRbGvTpjOMG3eA0NDklabd3f+maFH46afLqYLx3Zo2bc6GDesICTlAw4aN2bkzeXa4fPkK5jpGo5GyZcsxbNjINNsoUsTy8ts8efI8hiNKn62tXZrlJlNy+L33XACUKHGOvHnTasuWmjVrsXr1Ci5evGAO4I6OlseQEqy7dXsZPz//VO0AFCtW3OK1nV3aFxym9PNpeNJjIdlTQkICS5cuZOTI/2Z1V56quLg4Zs6cybBhw7JFgMysjz76yOL3RHY7LgVjERERyZY2bTpD//7BpJW3PvroIF5eZWnTJu1Lm6tXr0mBAgXZsWMbVatW5/DhQ+aFoFL4+BTjn39OUauWn8WlwQ8jvd2KFvUCku9Lvtf58+fJnz//Qz1iKL1zER6ekO4XBQZDEnD/xxn5+CTPptrb21O79uP7YPow5zN/fg+cnJw4f/5cqm0XLpzD1tY21ZcU90o53xcvXjBfCg/J9x6HhoZSrlz5DPdHsq/y5SuwceN3vPxyXwoWLJTV3ZGH9DQfDZcZusdYREREsh2Dwci4cQfSDMUpxo07gMFgTHObra0tTZo05cCBn/jxxx8wGAwW9xcDBAYGcePGdb7/fn2q/ePj75hXO76fvP8/XRsdbXkPbMGCBSlfvgJbt/5AVFSUufzMmX84dCgEf//6D2w7RUbOxezZxy3ORVJSEr/8chAHBwdKlSqV7n4eHp7UqPEcGzas4+bNm6m233s5eUblzeuU6pykx87Ojvr16/PTT3u4ciXUXH779i2Cg7dStWp186Xk6alYsTL583uwYcNai+dLb968kejoqPvsKTnJyy/3w2AwsHTpwgzV//HHzfTr15PAwPq0ahXIe++N5dq1q+btq1evpGFDP4uf0RUrlhIQUIsZM6aaywwGA7VqPcenn35qLjMajSxatIi2bdtSpUoV/P396d+/PydO/PuIsbVr19KrVy/q1q3Ls88+S+vWrVm+fHmqfp44cYL+/ftTp04dqlatSmBgIGPHjgXg0qVL1K1bF4CZM2fi6+uLr68vM2bMuO+xb9iwgU6dOlG1alX8/PwYOXIkV65kbh2A+zl48CC+vr5s3ryZ2bNn07BhQ6pUqULv3r05f97yi8G77zHOyHGdPn2a4cOH4+fnR5UqVejUqRM7duxI1YdTp07Rq1cvqlatSsOGDfnyyy8xGtP+t+F+NGMsIiIi2U5IyFWLS4bv5ex8kaiocL780oYKFZIXk7K1taFBg7q4uibfFxcYGMSaNauYP/9rypYtR6lSpS3aaNGiNTt3BjNlykSOHPmVqlWrYTAYuXDhHDt3bmfq1Bn3vVwbIE+evJQqVYadO7dRvHgJ3N3dKVOmLGXKlGPIkNcZPXo4gwb15fnn25OQEM+aNatwcXGlX78BGT4Xv/12477nAiA29m++/HIFFSp4EBZ2m+DgH7l06QI9e/bBxcWVyMj07/8dNepNhgx5hd69u9K2bUe8vX24ffsWJ0+e4Pr16yxatCLDfU3h61uJ775bw8KF8yhWrDgeHp4WM7n3GjFiBPv372fIkFfo2LEzdnZ2bNiwjsTERAYPfvCq3Pb29rz66mA+/fRjhg8fRNOmQVy5EsoPP2zUPca5iLe3Ny1bPs/3339Hz5597jtrvGjRfObNm0NgYDPatu1AeHgYa9euYtiwAXzzzTLc3NyoVq06RqOR48ePmlewP378N2xtbTl27Ki5rVOn/iI2Npbatf/9f/jtt99m3bp1NGzYkM6dO2MwGPj11185duwYVapUAWDFihWUL1+ewMBA7O3t2bVrFx988AEmk4kePXoAcOvWLfr374+HhwcDBgzA3d2dS5cuERwcDCQ/6uz999/n/fffJygoiKCg5HUS7rfg1uzZs/niiy9o1aoVnTt35vbt2yxdupQePXrw3Xff4e7unrkBuI+5c+diY2NDv379iI6OZt68eYwePZrVq1enWf9Bx3Xq1Cm6detGkSJFePXVV3F2dmbLli0MHTqUGTNmmOvfuHGDXr16YTAYGDBgAE5OTnz77beZut1CwVhERESynWvXYu+7vWDBwwCsWrXbonzixIk0adICgCpVqlG4cBGuX79msehWCltbWyZO/IxVq5axdesP/PTTbvLkyYu3tw8vvvhSqoWc0jNmzDg+//xTZsyYSmJiIn37vkqZMuWoXbsOn302g/nzv2L+/DnY29tTvXpNBg8e/lBh7ebNB89cFyx4mFWrks+Jo2MeSpYsyejRY2jf/oUH7AmlS5dh3rzFLFgwly1bNhIREYGHhyfly/vSt+8rGe7n3fr2fYVr166wfPkSYmNjqF695n2Dcfny5ZkzZz6zZs1gyZKFmExGKld+lnff/SjVM4zT0759J4xGI8uXL+HLL6dTpkw5PvlkKnPnzs7UMUj21KtXP7Zu/YGlSxcxYsToNOtcvXqFb775mldfHWxxC0WjRk3o27cH69evplevfpQrVwEXFxeOHfuN+vUbYDKZOH78KI0aBbJ37y5iY2Nxdnbm2LHf/v++/ZoAhISEsG7dOl5++WXGjRtnbr9fv34W99AuXbrUfFUJQM+ePenfvz8LFiwwB+PffvuNiIgI5s+fbw7UACNHJq994OzsTIsWLXj//ffx9fWlffv29z0/ly9fZsaMGYwYMYJBgwaZy5s3b07Hjh1Zvny5RfnjEh8fz3fffWd+5Ju7uzsTJkzg77//pkKFCqnqP+i4JkyYgJeXF2vXrjW32b17d7p168aUKVPMwXju3Lncvn2b1atXU7VqVQA6duxI8+aWVwhlhIKxiIiIZDtFijinWR4ZWYHIyH8/ZK1f35b69ZNXi7a3t8XDw4WwsOTZVRsbG9at++G+72Nvb0+PHr3p0aP3fevt2/drutuefbYq8+envUJrrVp+1Krld9+2+/cfSP/+A1OVt27dltat27J/fyhwIvWOWJ6Pu8/Fvby8vO97DD4+xVI9Vzm9/tyrZs1aqdr29CzA5MnTHqofvr4VmTr1/peHpteHFB07dqZjx84WZfc+A1lyNh+fYrRo0Zrvv1///7PGBVPV2bNnJ0ajkcDAIMLDw83lnp4FKV68BEeO/EqvXv2wtbXl2WercezYbwCcO3eWiIgIevbsw549Ozl58ji1a/tz7NhRypcvb55p3bZtGzY2NgwbNizVe999f/3doTgqKorExET8/PzYt28fUVFRuLm5mVd13717NxUrVnzk+3CDg4MxGo20atWK27dvm8sLFixIyZIlOXjw4BMJxp06dTIHWIBatWoBcPHixTSD8f2Eh4cTEhLC8OHDU92SERAQwIwZM7h27RpFihRhz549VK9e3RyKIXk2um3btmletn4/CsYiIiKS7fj7F8Xb24UrV2LSvLfWxga8vFzw9y+aemMuo3Mh1iitx7Sl6N27Pz/+uJmlSxemOWt88WLyY8heeqljmm3b2f0bgapVq84333xNfPwdjh37jQIFCuLrW5Fy5cpz7NhRatf25/jxo7Ru3cq8z4ULFyhcuDD58+e/7zEcPnyYGTNmcPTo0VRrFqQEYz8/P1q0aMHMmTNZuHAhfn5+NGvWjLZt21oEzYw6d+4cJpMp3RlTe/snE/+8vS2/lEv5EuF+t3Gk58KFC5hMJr744gu++OKLNOvcunWLIkWKEBoaSrVq1VJtL126dBp73Z+CsYiIiGQ7dna2jB9fj/79g7GxwSIQpkzIjB9fL91HB+UmOhdibR70mLZ7Z43vZTIZsbGxYcqU6djapv65cHL694qUqlWrk5SUxO+/n+D48aNUq1bj/8trcOzYb5w/f47w8DCee+65hzqGCxcu0KdPH8qUKcOYMWPw8vLCwcGBPXv2sHDhQvPiUDY2NkyfPp2jR4+ya9cufvrpJ9566y0WLFjAqlWrcHFxeaj3NRqTj33u3LnY2aV+BJyzc9pX46RIuTc3Pj4+ze1xcXEULZr6S7i0zjNk7jFuKeemX79+NGjQIM06JUpk7FaXh6FgLCIiItlSmzZlmD8/KNWze728XBg/vl66j2rKjXQuxFpk9DFtKbPGy5YtSlXPx6cYJpMJLy9vSpQoed/3q1TpGRwcHDh27DeOHfuN7t1fBqB69Rps3LieX3/9Bfj30mBIDmX79u0jPDw83VnjnTt3kpCQwOzZsy1mUw8ePJhm/erVq1O9enVGjhzJxo0bGT16NJs3b+bFF198qMeflShRApPJRLFixTI1a5rS17Nnz+Ll5WWxLS4ujqtXr1K/fsZX1b+f9I6rePHkZ6c7ODhQr169+7bh7e2davVrSO7/w9JXiyIiIpJttWlThsOHu7N+fVvmzGnK+vVtOXy4u1UGQZ0Lye0e5jFtKbPGGzas4/btWxZ1GjUKxM7OjgUL5qaasTSZTEREhJtf58mTh4oVK7N9+49cu3aVqlWTZ4yrVatBfHw8a9asxMenGIUKFTbv07x5c0wmEzNnzkzVv5T3S5mtvfv9o6KiWLt2rUX9iIiIVH2sVKkSAAkJCQDm55Bn5LLk5s2bY2dnx8yZM9M89gc9gq1u3bo4ODiwYsWKVI88WrVqFUlJSTRs2PCB/ciI9I6rQIEC+Pn5sWrVKq5fv55qv7vvnW7UqBFHjx7l+PHjFts3btz40P3RjLGIiIhka3Z2tukuKmVtdC4kN3vQY9pMJggNjSEk5Cr163vTq1c/fvxxMxcunKd06X+/IPLxKcYrrwzmq69mcvVqKA0aNMbZ2ZnQ0FD27t1Nu3YdzTPDkByCly5diKurK2XLlgOSn/FdokRJLlw4n2rBN39/f9q3b8+SJUs4f/48DRo0wGg0cvjwYerUqUPPnj2pX78+Dg4ODBo0iJdeeomYmBhWr15NgQIFuHHjhrmt9evXs2LFCpo1a0aJEiWIiYnh22+/xdXV1RxA8+bNS7ly5diyZQulSpUif/78lC9fPs1FrUqUKMGIESP47LPPuHz5Ms2aNcPFxYVLly6xfft2unTpQv/+/dM9xwUKFGDo0KFMmzaNHj16EBgYiJOTE7/99hubNm0iICDA/CziR3W/43rvvffo3r07bdu2pUuXLhQvXpybN29y9OhRrl69yvfffw/AK6+8woYNG3jllVfo1auX+XFN3t7e/PXXXw/VHwVjERERERHJcg96TNu99YoVK07z5q3YsmVTqjovv9yHEiVKsGrVchYsmAtA4cJF8POrQ0CA5YxntWrVWbo0eYX5u++VrVatBhcunKdq1eqp2p84cSK+vr6sWbOGyZMn4+bmxrPPPkuNGskzzmXKlGH69OlMmzaNTz75hIIFC9KtWzc8PT156623zO34+flx4sQJNm/ezM2bN3Fzc6Nq1apMmTLFfEkxwPjx4/noo4+YOHEiiYmJDBs2LN3VngcMGECpUqVYuHAhs2bNAqBo0aLUr18/Q6F28ODB+Pj4sGzZMr788kuSkpIoVqwYr732GgMGDEj3fuLMSO+4ypUrx9q1a5k5cybr168nPDwcT09PKleuzNChQ837Fy5cmMWLFzN+/Hi+/vpr8ufPz0svvUThwoV5++23H6ovNqbM3BFtJQwGI7dvp/+tVW5w96MtkpKMD95BspzGLGfSuOU8GrOcR2OWM2nccp4nNWb794fSseODL4G936PJnhRPTxctcJfLaXRFRERERCTLpTyaLL21pmxswNtbjyaTJ0PBWEREREREslzKo8mAVOFYjyaTJ03/V4mIiIiISLaQ8mgyLy/L5/d6ebkwf36QVmGXJ0aLb4mIiIiISLbRpk0ZWrUqRUjIVa5di6VIEWf8/YtqplieKAVjERERERHJVvRoMnna9LWLiIiIiIiIWDUFYxEREREREbFqCsYiIiIiIiJi1RSMRURERERExKopGIuIiIiIiIhVUzAWERERERERq6ZgLCIiIiIi2caVK6EEBNRi8+aNWd2Vp+7ll1/m5ZdfzupuWCUFYxEREREReWo2b95IQEAt/vzzf1ndFREz+6zugIiIiIiISIqiRb3YsWM/9vaKKvL0aMZYRERERESyDRsbG/LkyYOdnd1Tfd+4uLin+n6SvSgYi4iIiIhItnHvPcbLly8hIKAWV69eSVV3zpyZNG7sT2RkpLns5MnfGTXqNVq0aETTpvUZNmwAx48ftdhv/vyvCAioxdmzZ3j//bdp2bIJQ4b0B2DChPcJCmrA5cuXGDVqGM2aBdCoUUNmzpyJyWSyaCc2NpZJkybRqFEjnn32WVq0aMH8+fNT1UtKSmLWrFk0a9aMZ599lsDAQKZOnUpCQsLjOGXyGCgYi4iIiIhIthUYGISNjQ07dwan2rZzZzB+fv64u7sDcPjwIYYNe5XY2Bj69n2VgQOHEhUVxeuvD+Z///s91f7vvDOG+Pg7DBw4lLZtO5rLDQYjb7wxHA8PTwYPHs4zzzzDjBkzmD59urmOyWRi8ODBLFy4kAYNGjB27FhKly7N5MmTmThxosX7jBs3junTp1O5cmXGjh1L7dq1+eqrrxg5cuTjOk3yiHThvoiIiIiIZFtFixblmWeqsGNHMN279zKX//HHSUJDL9Ov3wAgOah++ulEatSoxWefTcfGxgaA9u070bNnV+bOnc3nn8+yaLtcufK8//6EVO+ZkBCPv39dRoz4DwCvvNKHoUOHMHfuXF5++WU8PT3ZsWMHISEhjBgxgsGDBwPQo0cPhg8fzuLFi+nZsyclSpTgzz//ZP369bz44ouMHz/eXM/T05NvvvmGkJAQ/P39H/+Jk4eiGWMREREREcnWAgOD+OuvP7h8+ZK5bMeOYBwdHWnQoBEAp079xaVLFwgKakFERATh4eGEh4cTF3eHWrVqc+zYbxiNRot2O3R4Id337NSpi/m/bWxs6NGjB4mJifz8888A7N27Fzs7u1SPV+rXrx8mk4m9e/cCsGfPHgD69u2bqt7d2yVracZYRERERESeGIPBSEjIVa5di6VIEWeMRtODd7pHYGAzZs78nB07ttGrV3Lw3LVrO3Xq1MPFxRWAixcvAsn3CKcnOjrafNk1gJeXd5r1bG1t8fb2sSgrXbo0AJcvXzb/XbhwYVxdXS3qlS1bNlU9W1tbSpQoYVGvUKFCuLu7m+tJ1lIwFhERERGRJ2LTpjOMG3eA0NAYc1mJEufIm/fh2ilYsBBVq1Zn587t9OrVj5MnT3Dt2lUGD37NXMdkSp4NHjLkdcqXr5BmO87Ozhav8+R5yI48gpRLuyV7UjAWEREREZHHbtOmM/TvH8w9CzQTHp5A0aLw00+XqVixcobba9q0OZ99NokLF86xY0cwefPmpX79hubtPj7FAHBxcaF27TqP1Hej0Uho6GVKlChpLjt79uz/v4+P+e+ff/6Z6Ohoi1njM2fOpKpnNBo5f/68eTYZ4ObNm0RGRprrSdbKVvcYnz9/nnfffZf27dtTuXJl2rRp88B9rl+/zuTJk2nfvj01atSgYcOGvPHGG7okQUREREQkixgMRsaNO5AqFN9t9uzjGAzG9Cvco3HjQOzs7AgO/pFdu7ZTr14DnJyczNt9fSvh41OMFSuWEhsbm2r/sLCwhzqGdeu+Nf+3yWRi2bJlODg4ULduXQAaNmyIwWBg2bJlFvstXLgQGxsbGjZMDu2NGiXfA71o0SKLegsWLLDYLlkrW80Ynzp1ij179lCtWjWMRmOq53+l5eTJkwQHB/PCCy9QrVo1wsLCmD17Ni+++CKbNm3C09PzKfRcRERERERShIRctbh8Oi0JCUeZMOELSpRwsyhv0KBxmvU9PDypUeM5Vq1aTmxsDE2bBllst7W15c03xzF69Ou8/HIXWrduS6FChblx4zq//XYYZ2cXJk/+PEP9d3TMQ0jIz4wf/x6VKz/LkSMH2b17N4MGDTLni8DAQOrUqcPnn3/O5cuX8fX1Zf/+/ezYsYPevXub7ymuWLEiHTt2ZNWqVURGRlK7dm1OnDjB+vXradasmVakziayVTAODAykWbNmAIwZM4bff0/9rLF7Pffcc2zZsgV7+38PpWbNmjRu3JjvvvvOvNqbiIiIiIg8HdeupZ6xvVf+/H+wbdsfqcpr1KiV7j5Nmzbn119/wdnZBX//+qm216xZi6+++oaFC+exbt23xMXF4elZgMqVn6V9+04Z7r+dnS2ffTadzz6bxJdffoGLiyvDhg1j6NCh5jq2trbMnj2b6dOns3nzZtatW4ePjw///e9/U2WQ8ePHU6xYMdavX8/27dspWLAgAwcOZNiwYRnukzxZNqaMTMtmgZRgvGnTpkztX69ePdq1a8eYMWMy3QeDwcjt2/f/piuns7e3xcPDhbCwGJKSMn4pi2QdjVnOpHHLeTRmOY/GLGfSuOU8GRmz/ftD6dhx4wPbWr++LfXrp70ydFaZMOF9du/eQXDwT+YyT08X7Oyy1V2o8phlqxnjx+Xs2bPcunXL4ub2zLK3z90/ACk/4PpBzzk0ZjmTxi3n0ZjlPBqznEnjlvNkZMwCArzx9nbhypWYNO8ztrEBb29XAgK8s93Yp6wendtzgFjKdcHYZDIxfvx4ChcuzPPPP/9Ibdna2uDh4fKYepa9ubs7PbiSZCsas5xJ45bzaMxyHo1ZzqRxy3keNGYzZjSlc+fvsbHBIhynPLVo+vRAChZ0S3vnLJQnjz02NtaTAyRZrgvGM2bMICQkhHnz5qV6TtnDMhpNREY++P6InMzOzhZ3dyciI+MealVAyToas5xJ45bzaMxyHo1ZzqRxy3kyOmZNmviwcGELxo7dZ7EQl7e3Kx9/XJ8mTXwIC8t+ty3GxydhMpks+ubu7pTtZrbl8cpVwfjbb79l1qxZTJgwwbyM+qOylntdDAaj1RxrbqExy5k0bjmPxizn0ZjlTBq3nCcjY9aqVSmaNy9BSMhVrl2LpUgRZ/z9i2JnZ5ttx/utt97jrbfey7b9kycj1wTj4OBg3n//fYYPH07nzp2zujsiIiIiIkLyDHN2W2BL5F654nqAgwcPMmrUKF588UWLJdRFREREREREHiRbzRjHxcWxZ88eAC5fvkx0dDRbt24FwM/PD09PT3r37k1oaCjBwcEAnD59mqFDh1KqVCnat2/P0aNHze15enqaH6wtIiIiIiIikpZsFYxv3brF66+/blGW8nrx4sXUqVMHo9GIwWAwbz927BhRUVFERUXRrVs3i307duzIpEmTnnzHRUREREREJMeyMZnSerKYQPKCArdvZ7+V8h6njDygXbIXjVnOpHHLeTRmOY/GLGfSuOU81jhmnp4uWpU6l9PoioiIiIiIiFVTMBYRERERERGrpmAsIiIiIiIiVk3BWERERERERKyagrGIiIiIiIhYNQVjERERERERsWoKxiIiIiIiImLVFIxFRERERETEqikYi4iIiIiIiFVTMBYRERERERGrpmAsIiIiIiIiVk3BWERERERERKyagrGIiIiIiIhYNQVjERERERERsWoKxiIiIiIiImLVFIxFRERERETEqikYi4iIiIiIiFVTMBYRERERERGrpmAsIiIiIiIiVk3BWERERERERKyagrGIiIiIiIhYNQVjERERERERsWoKxiIiIiIiImLVFIxFRERERETEqikYi4iIiIiIiFVTMBYRERERERGrpmAsIiIiIiIiVk3BWERERERERKyagrGIiIiIiIhYNQVjERERERERsWoKxiIiIiIiImLVFIxFRERERETEqikYi4iIiIiIiFVTMBYRERERERGrpmAsIiIiIiIiVk3BWERERERERKyagrGIiIiIiIhYNQVjERERERERsWoKxiIiIiIiImLVFIxFRERERETEqikYi4iIiIiIiFVTMBYRERERERGrpmAsIiIiIiIiVk3BWERERERERKyagrGIiIiIiIhYNQVjERERERERsWoKxiIiIiIiImLVFIxFRERERETEqikYi4iIiIiIiFVTMBYRERERERGrpmAsIiIiIiIiVk3BWERERERERKyagrGIiIiIiIhYNQVjERERERERsWoKxiIiIiIiImLVFIxFRERERETEqikYi4iIiIiIiFVTMBYRERERERGrpmAsIiIiIiIiVk3BWERERERERKyagrGIiIiIiIhYNQVjERERERERsWoKxiIiIiIiImLVFIxFRERERETEqikYi4iIiIiIiFVTMBYRERERERGrpmAsIiIi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MVSvXpPnnqtN3rx5mTnza5YsWcCuXdvZuvUHXFxcKF68BP36DcTV1TVT5wIgb968TJkynS1bNrJlyw8sWjSPO3fuULBgIWrWrMV7731EoUKF091/6NChhIaGMm/ePGJiYvDz87MIxs8++yzly5fn9OnTWo06h7ExZfbufCtgMBi5ffvxr1qXndjb2+Lh4fLAe0Qk+9CY5Uwat5xHY5bzaMxyppw8buvW/cOgQTseWG/OnKZ06pS5Z+dmRzl5zDLL09Ml3cXJ7tWhQwfy5cvHokWLnnCv5HHSPcYiIiIiIplQpIjzY60nOd+JEyf4448/6NChQ1Z3RR6SLqUWEREREckEf/+ieHu7cOVKTJr3GdvYgJeXC/7+qZ83LLnL33//zcmTJ/nmm28oVKgQrVu3zuouyUPSjLGIiIiISCbY2dkyfnw9IDkE3y3l9fjx9TJ8Ca7kXD/++CNjx44lKSmJqVOnkidPxp6tLNmHfkpFRERERDKpTZsyzJ8fhJeXi0W5l5cL8+cH0aZNmSzqmTxNr732Gn/++SdbtmzBz88vq7sjmaBLqUVEREREHkGbNmVo1aoUISFXuXYtliJFnPH3L6qZYpEcRMFYREREROQR2dnZZuiRTCKSPelrLBEREREREbFqCsYiIiIiIiJi1RSMRURERERExKopGIuIiIiIiIhVUzAWERERERERq6ZgLCIiIiIiIlZNwVhERERERESsmoKxiIiIiIiIWDUFYxEREREREbFqCsYiIiIiIiJi1RSMRURERERExKopGIuIiIiIiIhVUzAWERERERERq6ZgLCIiIiIiIlZNwVhERERERESsmoKxiIiIiIiIWDUFYxEREREREbFqCsYiIiIiIiJi1RSMRURERERExKopGIuIiIiIiIhVUzAWERERERERq6ZgLCIiIiIiIlZNwVhERERERESsmoKxiIiIiIiIWDUFYxEREREREbFqCsYiIiIiIiJi1RSMRURERERExKopGIuIiIiIiIhVUzAWERERERERq6ZgLCIiIiIiIlZNwVhERERERESsmoKxiIiIiIiIWDUFYxEREREREbFqCsYiIiIiIiJi1RSMRURERERExKopGIuIiIiIiIhVUzAWERERERERq6ZgLCIiIiIiIlZNwVhERERERESsmoKxiIiIiIiIWDUFYxEREREREbFqCsYiIiIiIiJi1RSMRURERERExKopGIuIiIiIiIhVUzAWERERERERq6ZgLCIiIiIiIlZNwVhERERERESsmoKxiIiIiIiIWDUFYxEREREREbFqCsYiIiIiIiJi1RSMRURERERExKopGIuIiIiIiIhVUzAWERERERERq6ZgLCIiIiIiIlZNwVhERERERESsmoKxiIiIiIiIWDUFYxEREREREbFq2S4Ynz59mr59+1K9enXq16/P5MmTSUhIeOB+YWFhvPvuuzRu3Jjq1avTpk0bVqxY8RR6LCIiIiIiIjmZfVZ34G4RERH07t2bUqVKMWPGDK5du8akSZO4c+cO77777n33ff311zlz5gyjRo3Cy8uLvXv38v7772NnZ0eXLl2e0hGIiIiIiIhITpOtgvHKlSuJiYlh5syZ5M+fHwCDwcAHH3zAwIEDKVKkSJr73bhxg4MHDzJx4kQ6deoEQN26dTlx4gQ//PCDgrGIiIiIiIikK1tdSr13717q1q1rDsUArVq1wmg0sn///nT3S0pKAsDNzc2i3NXVFZPJ9ET6KiIiIiIiIrlDtpoxPnPmDC+88IJFmbu7O4UKFeLMmTPp7ufl5UVAQABz5syhdOnSFC1alL1797J//36mTJnySH2yt89W3x08dnZ2thZ/S/anMcuZNG45j8Ys59GY5Uwat5xHYya5UbYKxpGRkbi7u6cqz5cvHxEREffdd8aMGYwcOZLnn38eADs7O8aNG0eLFi0y3R9bWxs8PFwyvX9O4u7ulNVdkIekMcuZNG45j8Ys59GY5Uwat5xHYya5SbYKxpllMpkYO3Ys586d47PPPqNQoUIcOHCAjz/+mHz58pnD8sMyGk1ERsY+5t5mL3Z2tri7OxEZGYfBYMzq7kgGaMxyJo1bzqMxy3k0ZjmTxi3nscYxc3d30gx5LpetgrG7uztRUVGpyiMiIsiXL1+6++3evZutW7fy/fff4+vrC0CdOnW4desWkyZNynQwBkhKso4fdoPBaDXHmltozHImjVvOozHLeTRmOZPGLefRmElukq2+9ihTpkyqe4mjoqK4ceMGZcqUSXe/f/75Bzs7OypUqGBRXqlSJa5fv05cXNwT6a+IiIiIiIjkfNkqGDds2JADBw4QGRlpLtu6dSu2trbUr18/3f18fHwwGAz89ddfFuUnT56kQIECODnp/gcRERERERFJW7YKxi+99BIuLi4M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KB07bnxgvfXr25pnjCVzrPFnzdPTBTs73YWam2l0RURERCTH8/cvire3CzY2aW+3sQFvbxf8/YumXUFErJqCsYiIiIjkeHZ2towfXw8gVThOeT1+fD3N+olImvSbQURERERyhTZtyjB/fhBeXi4W5V5eLsyfH0SbNmWyqGcikt1p8S0RERERyTXatClDq1alCAm5yrVrsRQp4oy/f1HNFIvIfSkYi4iIiEiuYmdnqwW2ROSh6KszERERERERsWoKxiIiIiIiImLVFIxFRERERETEqikYi4iIiIiIiFVTMBYRERERERGrpmAsIiIiIiIiVk3BWERERERERKyagrGIiIiIiIhYNQVjERERERERsWoKxiIiIiIiImLVFIxFRERERETEqikYi4iIiIiIiFVTMBYRERERERGrpmAsIiIiIiIiVk3BWERERERERKyagrGIiIiIiIhYNQVjERERERERsWoKxiIiIiIiImLVFIxFRERERETEqikYi4iIiIiIiFWzMZlMpqzuRHZlMpkwGnP/6bGzs8VgMGZ1N+QhaMxyJo1bzqMxy3k0ZjmTxi3nsbYxs7W1wcbGJqu7IU+QgrGIiIiIiIhYNV1KLSIiIiIiIlZNwVhERERERESsmoKxiIiIiIiIWDUFYxEREREREbFqCsYiIiIiIiJi1RSMRURERERExKopGIuIiIiIiIhVUzAWERERERERq6ZgLCIiIiIiIlZNwVhERERERESsmoKxiIiIiIiIWDUFYxEREREREbFqCsYiIiIiIiJi1RSMc7HTp0/Tt29fqlevTv369Zk8eTIJCQkP3C8sLIx3332Xxo0bU716ddq0acOKFSueQo/l/PnzvPvuu7Rv357KlSvTpk2bDO1nMpn4+uuvady4MVWrVqVr164cPXr0yXZWgMyN2fXr15k8eTLt27enRo0aNGzYkDfeeIPLly8/hR4LZP5n7W4LFy7E19eXgQMHPoEeyr0eZcyuXbvGm2++ib+/P1WrVqVVq1Z8//33T7C3ApkfM30OyTpbtmxh8ODBNGzYkOrVq9O+fXvWrFmDyWS67376HCK5gX1Wd0CejIiICHr37k2pUqWYMWMG165dY9KkSdy5c4d33333vvu+/vrrnDlzhlGjRuHl5cXevXt5//33sbOzo0uXLk/pCKzTqVOn2LNnD9WqVcNoND7wH6IUc+fOZfr06YwePRpfX1+WLVtGv3792LBhA8WLF3/CvbZumRmzkydPEhwczAsvvEC1atUICwtj9uzZvPjii2zatAlPT8+n0HPrltmftRQ3btxg1qxZFChQ4An1UO6V2TG7fv06Xbt2pXTp0nz00Ue4urpy6tSpDH1RLI8ms2OmzyFZZ+HChfj4+DBmzBg8PDw4cOAA77zzDlevXmXYsGHp7qfPIZIrmCRXmjNnjql69eqmsLAwc9nKlStNlSpVMl29ejXd/a5fv26qUKGCae3atRblPXr0MPXq1etJdVf+n8FgMP/3m2++aXr++ecfuM+dO3dMNWvWNH322Wfmsvj4eFOTJk1M77333pPoptwlM2MWERFhSkxMtCi7cuWKydfX1zR//vzH3kdJLTPjdrf//Oc/pv/+97+mnj17mgYMGPC4uydpyOyYjR492tS1a1dTUlLSk+qapCMzY6bPIVnr1q1bqcrGjRtnqlmzpsV43k2fQyS30KXUudTevXupW7cu+fPnN5e1atUKo9HI/v37090vKSkJADc3N4tyV1fXh55RkYdna/vwP5JHjhwhOjqaVq1amcscHR0JCgpi7969j7N7kobMjJm7uzv29pYX7BQtWhRPT0+uX7/+uLom95GZcUvx66+/sn37dt54443H2CN5kMyMWXR0NFu2bKF79+7Y2dk9gV7J/WRmzPQ5JGuldcVSpUqViI6OJjY2Ns199DlEcgsF41zqzJkzlClTxqLM3d2dQoUKcebMmXT38/LyIiAggDlz5vDPP/8QHR3N5s2b2b9/Pz169HjS3ZZMSBnPe8e7bNmyhIaGcufOnazoljyks2fPcuvWLcqWLZvVXZH7MBgMfPTRRwwaNIjChQtndXfkAU6ePEliYiL29vb07NmTZ555hvr16/Ppp5+SmJiY1d2TNOhzSPZz+PBhihQpgqura5rb9TlEcgvdY5xLRUZG4u7unqo8X758RERE3HffGTNmMHLkSJ5//nkA7OzsGDduHC1atHgifZVHExkZiaOjI3ny5LEod3d3x2QyERERQd68ebOod5IRJpOJ8ePHU7hwYfPPnWRPy5cvJy4ujj59+mR1VyQDbt68CcC4cePo0qULw4YN4/jx40yfPh1bW1vN+mdT+hySffz6669s3ryZN998M906+hwiuYWCsVgwmUyMHTuWc+fO8dlnn1GoUCEOHDjAxx9/TL58+fShXeQJmDFjBiEhIcybNw9nZ+es7o6k49atW0yfPp1PPvkER0fHrO6OZIDRaASgXr16jBkzBgB/f39iYmL45ptvGDp0qD6wZzP6HJJ9XL16lZEjR1KnTh169eqV1d0ReeIUjHMpd3d3oqKiUpVHRESQL1++dPfbvXs3W7du5fvvv8fX1xeAOnXqcOvWLSZNmqR/kLIhd3d3EhISiI+Pt/i2NjIyEhsbm/uOt2S9b7/9llmzZjFhwgTq1q2b1d2R+/jiiy/w9fWlVq1aREZGAsn3QyYlJREZGYmzs3Oqe8cla6VcOeXv729RXrduXebMmcP58+fN/9ZJ9qDPIdlDZGQkr776Kvnz52fGjBn3vV9cn0Mkt9A9xrlUmTJlUt1LHBUVxY0bN1LdA3K3f/75Bzs7OypUqGBRXqlSJa5fv05cXNwT6a9kXsp4nj171qL8zJkzeHt7azYkGwsODub9999n+PDhdO7cOau7Iw9w9uxZDh06RO3atc1/jhw5wr59+6hduzYHDhzI6i7KPcqVK3ff7fHx8U+pJ5JR+hyS9e7cucPAgQOJiopi3rx5qRZCu5c+h0huoa+2c6mGDRsyZ84ci3uNt27diq2tLfXr1093Px8fHwwGA3/99RcVK1Y0l588eZICBQrg5OT0xPsuD6dmzZq4urqyZcsW85glJiaybds2GjZsmMW9k/QcPHiQUaNG8eKLLzJ06NCs7o5kwFtvvWWeKU7x8ccfkzdvXkaNGqWZx2zIx8eHChUqcODAAXr27GkuP3DgAHnz5n1gcJanT59DslZSUhIjRozgzJkzLFu2jCJFijxwH30OkdxCwTiXeumll1iyZAlDhw5l4MCBXLt2jcmTJ/PSSy9Z/JLr3bs3oaGhBAcHA8mB2tvbm+HDhzN06FAKFy7Mvn37WL9+Pa+99lpWHY7ViIuLY8+ePQBcvnyZ6Ohotm7dCoCfnx+enp6pxixPnjwMHDiQGTNm4OnpSYUKFVixYgXh4eH0798/y47FWmRmzE6fPs3QoUMpVaoU7du35+jRo+b2PD09KVGixFM/DmuTmXGrVKlSqnbc3d1xdnamTp06T6/zViozYwYwcuRIhgwZwoQJE2jcuDEnTpzgm2++oX///rqn/wnLzJjpc0jW+uCDD9i1axdjxowhOjra4t+nypUr4+joqM8hkmspGOdS+fLlY9GiRXz00UcMHToUFxcXOnfuzMiRIy3qGY1GDAaD+bWrqysLFy7k888/Z8qUKURFRVGsWDHGjBlj8W27PBm3bt3i9ddftyhLeb148WLq1KmTaswAXn31VUwmE9988w23b9+mUqVKzJ8/n+LFiz+1vlurzIzZsWPHiIqKIioqim7dulns27FjRyZNmvTkO27lMvuzJlkns2MWGBjI1KlT+fLLL1mxYgWFCxfmtddeY8CAAU+t79YqM2OmzyFZa//+/QBp/ju0Y8cOihUrps8hkmvZmPS0dBEREREREbFiWnxLRERERERErJqCsYiIiIiIiFg1BWMRERERERGxagrGIiIiIiIiYtUUjEVERERERMSqKRiLiIiIiIiIVVMwFhEREREREaumYCwiIiIiIiJWTcFYRERERERErJqCsYiIWJU///yTsWPHEhgYSJUqVahRowbt27dn8uTJXLx4Mc19/vrrL3x9fTl+/DgAMTExTJgwgYYNG/Lss8/SqlUrli9fnua+kZGRvPPOO/j7+1O9enVefvllTp48+cSOT0RERB6ejclkMmV1J0RERJ6Gb7/9lvfffx8PDw/atm1LmTJlSEpK4tSpU2zbto2IiAiOHTuGnZ2dxX5ff/01CxcuZP/+/RiNRnr06MHvv/9Ojx49KFmyJPv27WPHjh2MHDmSQYMGmfczGo10796dv/76i/79++Ph4cHy5cu5cuUK69ato1SpUk/5DIiIiEhaFIxFRMQqHDlyhJ49e1KzZk3mzJmDq6urxfb4+Hhmz57Na6+9lioY9+jRg+LFizNp0iS2bNnCiBEjmDBhAp07dzbXGT58OLt372bXrl0UKFAAgM2bNzNy5Ei++OILWrZsCcDt27dp0aIFDRs25LPPPnvCRy0iIiIZoUupRUQkR7tz5w4tW7akZcuW3Llzx1weHh5OQEAAL730EgaDgVmzZmFjY8OUKVNShWKAPHnyMGLEiFShODIykt9++41GjRoBcPjwYQCef/55i3qtW7cmPj6eHTt2mMt+/PFHChYsSPPmzc1lnp6etGrVih07dpCQkPDoJ0BEREQemYKxiIjkaHnz5uWTTz7hwoULfP755+byDz/8kKioKCZOnEhCQgIhISH4+flRtGjRh2p/37592NjYEBAQAEBCQgJ2dnY4ODhY1HNycgLg999/N5f98ccfVK5cGVtby39uq1SpQlxcHGfPnn2ovoiIiMiToWAsIiI5XrVq1XjllVdYvHgxv/76K1u3buWHH35g1KhRlC5dmvPnz5OUlET58uVT7RseHs7t27fNf+6dxd29ezc1a9bEzc0NgNKlS2MwGDh69KhFvV9//RWA69evm8tu3LhBoUKFUr1n4cKFU9UVERGRrKNgLCIiucKwYcMoV64cb775Jh988AF+fn706tULgOjoaACcnZ1T7desWTPq1q1r/rNz507zNqPRyE8//WS+jBqgTZs2uLm58fbbb7N//34uXbrEqlWrzKtS33059507d3B0dEz1nill8fHxj+HIRURE5FEpGIuISK7g6OjIxx9/zKVLl4iJieHjjz/GxsYGwHxPcWxsbKr9vvzySxYsWMCbb76ZatuJEye4ffs2jRs3NpcVKlSI2bNnk5CQQL9+/WjatCmTJ0/mnXfeASzDd968edO8jzilLE+ePJk/YBEREXls7LO6AyIiIo/Lvn37gOSZ2PPnz1O8eHEASpQogb29PadOnUq1j5+fH0CqRbcA9uzZg4+PD+XKlbMor127Ntu3b+fvv/8mNjaWihUrmi+LvvsRTIUKFeLGjRup2k2pm3JJtYiIiGQtzRiLiEiu8OeffzJr1iw6depE5cqVGTduHFFRUUDyLK6fnx+HDh3i2rVrGW5z9+7dFpdR383Ozo5KlSrx3HPP4eLiwoEDBwCoV6+euU7FihX53//+h9FotNj3+PHjODk5Ubp06Yc9TBEREXkCFIxFRCTHS0xMZOzYsRQuXJi3336biRMncvPmTT7++GNznaFDh2IwGBg9ejQxMTGp2jCZTBavb968yf/+9z+Ly6jTc/v2bebNm4evr69FMG7ZsiU3b95k27ZtFnW3bt1KkyZN0rz/WERERJ4+XUotIiI53uzZs/njjz9YuHAhrq6uVKxYkaFDhzJt2jRatmxJo0aNqFWrFu+88w7jx4+nRYsWtG3bljJlypCQkMC5c+fYuHEjDg4OFCxYEEi+jDpPnjzUqVMn1fv17NmT6tWrU7JkSW7cuMG3335LbGwsc+bMsXg0U4sWLahevTpjx47ln3/+wcPDgxUrVmAwGHjttdee2vkRERGR+7Mx3fsVuYiISA5y8uRJunTpQrdu3Rg3bpy53GAw0LVrV65du8YPP/yAu7s7gDlA//LLL9y4cQMHBweKFy9O/fr16datGyVKlABg+PDh3Llzh6+//jrVe06cOJEdO3Zw7do1XF1dqVevHiNGjDDf03y3iIgIJk+ezPbt24mPj6dKlSr897//pUqVKk/ojIiIiMjDUjAWERG5R1JSEnXq1GHUqFH06NEjq7sjIiIiT5juMRYREblHREQEffr0ISgoKKu7IiIiIk+BZoxFRERERETEqmnGWERERERERKyagrGIiIiIiIhYNQVjERERERERsWoKxiIiIiIiImLVFIxFRERERETEqikYi4iIiIiIiFVTMBYRERERERGrpmAsIiIiIiIiVk3BWERERERERKyagrGIiIiIiIhYtf8Dtd3jPRwTOPcAAAAASUVORK5CYII=\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "EPL_player_df"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 617
        },
        "id": "wrjHrDmJ8OlM",
        "outputId": "d865e473-3092-44e6-8a9d-a69ee0061ace"
      },
      "execution_count": 59,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "        id            player_name games_x time_x goals_1wks_x  \\\n",
              "0     8260         Erling Haaland      15   1305           14   \n",
              "1     1250          Mohamed Salah      17   1498           11   \n",
              "2      453          Son Heung-Min      17   1469           10   \n",
              "3     1776           Jarrod Bowen      16   1440           10   \n",
              "4     8865          Ollie Watkins      17   1509            9   \n",
              "..     ...                    ...     ...    ...          ...   \n",
              "489  12199            Alex Murphy       1      1            0   \n",
              "490  12200          Amadou Diallo       1      1            0   \n",
              "491  12204  Benicio Baker-Boaitey       2      2            0   \n",
              "492  12215        Michael Ndiweni       1      1            0   \n",
              "493  12251             Sydie Peck       1      6            0   \n",
              "\n",
              "              xG_1wks_x assists_1wks_x           xA_1wks_x shots_1wks_x  \\\n",
              "0    16.727499932050705              4  3.2472310978919268           58   \n",
              "1     10.77229580283165              7   7.441837605088949           53   \n",
              "2     6.780154183506966              4   5.971939321607351           43   \n",
              "3     7.218599982559681              1  2.2795576956123114           43   \n",
              "4    10.049726076424122              6  3.5883569810539484           50   \n",
              "..                  ...            ...                 ...          ...   \n",
              "489                   0              0                   0            0   \n",
              "490                   0              0                   0            0   \n",
              "491                   0              0                   0            0   \n",
              "492                   0              0                   0            0   \n",
              "493                   0              0                   0            0   \n",
              "\n",
              "    key_passes_1wks_x  ... shots_1wks_y key_passes_1wks_y yellow_cards  \\\n",
              "0                  16  ...           58                16            1   \n",
              "1                  41  ...           53                41            1   \n",
              "2                  32  ...           43                32            1   \n",
              "3                  11  ...           43                11            1   \n",
              "4                  26  ...           50                26            3   \n",
              "..                ...  ...          ...               ...          ...   \n",
              "489                 0  ...            0                 0            0   \n",
              "490                 0  ...            0                 0            0   \n",
              "491                 0  ...            0                 0            0   \n",
              "492                 0  ...            0                 0            0   \n",
              "493                 0  ...            0                 0            0   \n",
              "\n",
              "    red_cards position_y      team_title_y npg_1wks_y         npxG_1wks_y  \\\n",
              "0           0          F   Manchester City         11   13.68282476067543   \n",
              "1           0          F         Liverpool          8    7.72769470512867   \n",
              "2           0        F M         Tottenham          9   6.018985345959663   \n",
              "3           0        F M          West Ham         10   7.218599982559681   \n",
              "4           0          F       Aston Villa          9  10.049726076424122   \n",
              "..        ...        ...               ...        ...                 ...   \n",
              "489         0          S  Newcastle United          0                   0   \n",
              "490         0          S  Newcastle United          0                   0   \n",
              "491         0          S          Brighton          0                   0   \n",
              "492         0          S  Newcastle United          0                   0   \n",
              "493         0          S  Sheffield United          0                   0   \n",
              "\n",
              "                xGChain           xGBuildup  \n",
              "0    16.214465029537678  1.3705047406256199  \n",
              "1    14.869610473513603   3.948832482099533  \n",
              "2    14.396287873387337   4.522126642987132  \n",
              "3     8.182679865509272  1.4770999029278755  \n",
              "4    14.428645104169846   2.091627176851034  \n",
              "..                  ...                 ...  \n",
              "489                   0                   0  \n",
              "490                   0                   0  \n",
              "491  0.1531512588262558  0.1531512588262558  \n",
              "492                   0                   0  \n",
              "493                   0                   0  \n",
              "\n",
              "[494 rows x 48 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-14140f4d-bf6d-4f85-946e-723ff7935fab\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>player_name</th>\n",
              "      <th>games_x</th>\n",
              "      <th>time_x</th>\n",
              "      <th>goals_1wks_x</th>\n",
              "      <th>xG_1wks_x</th>\n",
              "      <th>assists_1wks_x</th>\n",
              "      <th>xA_1wks_x</th>\n",
              "      <th>shots_1wks_x</th>\n",
              "      <th>key_passes_1wks_x</th>\n",
              "      <th>...</th>\n",
              "      <th>shots_1wks_y</th>\n",
              "      <th>key_passes_1wks_y</th>\n",
              "      <th>yellow_cards</th>\n",
              "      <th>red_cards</th>\n",
              "      <th>position_y</th>\n",
              "      <th>team_title_y</th>\n",
              "      <th>npg_1wks_y</th>\n",
              "      <th>npxG_1wks_y</th>\n",
              "      <th>xGChain</th>\n",
              "      <th>xGBuildup</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>8260</td>\n",
              "      <td>Erling Haaland</td>\n",
              "      <td>15</td>\n",
              "      <td>1305</td>\n",
              "      <td>14</td>\n",
              "      <td>16.727499932050705</td>\n",
              "      <td>4</td>\n",
              "      <td>3.2472310978919268</td>\n",
              "      <td>58</td>\n",
              "      <td>16</td>\n",
              "      <td>...</td>\n",
              "      <td>58</td>\n",
              "      <td>16</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>F</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>11</td>\n",
              "      <td>13.68282476067543</td>\n",
              "      <td>16.214465029537678</td>\n",
              "      <td>1.3705047406256199</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>1250</td>\n",
              "      <td>Mohamed Salah</td>\n",
              "      <td>17</td>\n",
              "      <td>1498</td>\n",
              "      <td>11</td>\n",
              "      <td>10.77229580283165</td>\n",
              "      <td>7</td>\n",
              "      <td>7.441837605088949</td>\n",
              "      <td>53</td>\n",
              "      <td>41</td>\n",
              "      <td>...</td>\n",
              "      <td>53</td>\n",
              "      <td>41</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>F</td>\n",
              "      <td>Liverpool</td>\n",
              "      <td>8</td>\n",
              "      <td>7.72769470512867</td>\n",
              "      <td>14.869610473513603</td>\n",
              "      <td>3.948832482099533</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>453</td>\n",
              "      <td>Son Heung-Min</td>\n",
              "      <td>17</td>\n",
              "      <td>1469</td>\n",
              "      <td>10</td>\n",
              "      <td>6.780154183506966</td>\n",
              "      <td>4</td>\n",
              "      <td>5.971939321607351</td>\n",
              "      <td>43</td>\n",
              "      <td>32</td>\n",
              "      <td>...</td>\n",
              "      <td>43</td>\n",
              "      <td>32</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>F M</td>\n",
              "      <td>Tottenham</td>\n",
              "      <td>9</td>\n",
              "      <td>6.018985345959663</td>\n",
              "      <td>14.396287873387337</td>\n",
              "      <td>4.522126642987132</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>1776</td>\n",
              "      <td>Jarrod Bowen</td>\n",
              "      <td>16</td>\n",
              "      <td>1440</td>\n",
              "      <td>10</td>\n",
              "      <td>7.218599982559681</td>\n",
              "      <td>1</td>\n",
              "      <td>2.2795576956123114</td>\n",
              "      <td>43</td>\n",
              "      <td>11</td>\n",
              "      <td>...</td>\n",
              "      <td>43</td>\n",
              "      <td>11</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>F M</td>\n",
              "      <td>West Ham</td>\n",
              "      <td>10</td>\n",
              "      <td>7.218599982559681</td>\n",
              "      <td>8.182679865509272</td>\n",
              "      <td>1.4770999029278755</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>8865</td>\n",
              "      <td>Ollie Watkins</td>\n",
              "      <td>17</td>\n",
              "      <td>1509</td>\n",
              "      <td>9</td>\n",
              "      <td>10.049726076424122</td>\n",
              "      <td>6</td>\n",
              "      <td>3.5883569810539484</td>\n",
              "      <td>50</td>\n",
              "      <td>26</td>\n",
              "      <td>...</td>\n",
              "      <td>50</td>\n",
              "      <td>26</td>\n",
              "      <td>3</td>\n",
              "      <td>0</td>\n",
              "      <td>F</td>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>9</td>\n",
              "      <td>10.049726076424122</td>\n",
              "      <td>14.428645104169846</td>\n",
              "      <td>2.091627176851034</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>489</th>\n",
              "      <td>12199</td>\n",
              "      <td>Alex Murphy</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>S</td>\n",
              "      <td>Newcastle United</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>490</th>\n",
              "      <td>12200</td>\n",
              "      <td>Amadou Diallo</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>S</td>\n",
              "      <td>Newcastle United</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>491</th>\n",
              "      <td>12204</td>\n",
              "      <td>Benicio Baker-Boaitey</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>S</td>\n",
              "      <td>Brighton</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.1531512588262558</td>\n",
              "      <td>0.1531512588262558</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>492</th>\n",
              "      <td>12215</td>\n",
              "      <td>Michael Ndiweni</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>S</td>\n",
              "      <td>Newcastle United</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>493</th>\n",
              "      <td>12251</td>\n",
              "      <td>Sydie Peck</td>\n",
              "      <td>1</td>\n",
              "      <td>6</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>S</td>\n",
              "      <td>Sheffield United</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>494 rows × 48 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-14140f4d-bf6d-4f85-946e-723ff7935fab')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-14140f4d-bf6d-4f85-946e-723ff7935fab button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-14140f4d-bf6d-4f85-946e-723ff7935fab');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-73c60d64-78e5-472d-b831-0350453035f5\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-73c60d64-78e5-472d-b831-0350453035f5')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-73c60d64-78e5-472d-b831-0350453035f5 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 59
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "EPL_player_df['goals'] = EPL_player_df['goals_1wks_x'].astype(int)\n",
        "top25goals = EPL_player_df.nlargest(20, 'goals')\n",
        "top25goals"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "id": "3H-vTRXF8VDs",
        "outputId": "b0afb8b1-2dde-43e8-97a8-4fc3d1b5f006"
      },
      "execution_count": 60,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "       id         player_name games_x time_x goals_1wks_x           xG_1wks_x  \\\n",
              "0    8260      Erling Haaland      15   1305           14  16.727499932050705   \n",
              "1    1250       Mohamed Salah      17   1498           11   10.77229580283165   \n",
              "2     453       Son Heung-Min      17   1469           10   6.780154183506966   \n",
              "3    1776        Jarrod Bowen      16   1440           10   7.218599982559681   \n",
              "4    8865       Ollie Watkins      17   1509            9  10.049726076424122   \n",
              "5    1679     Dominic Solanke      16   1438            8   9.721119590103626   \n",
              "6    8845      Hee-Chan Hwang      17   1235            8   5.323231453076005   \n",
              "7     468       Callum Wilson      12    588            7   7.886897064745426   \n",
              "8    5232      Alexander Isak      12    838            7   7.864541232585907   \n",
              "9    6552        Bryan Mbeumo      15   1289            7   7.574615128338337   \n",
              "10  10048     Nicolas Jackson      16   1197            7  10.598645154386759   \n",
              "11   1726  Abdoulaye Doucouré      17   1460            6   7.047202989459038   \n",
              "12   3697     Odsonne Edouard      15   1270            6   6.131767854094505   \n",
              "13   8150      Anthony Gordon      16   1345            6   5.111481446772814   \n",
              "14   8497         Cole Palmer      15    965            6  5.8071994837373495   \n",
              "15  10177       Evan Ferguson      16    939            6  2.8043092247098684   \n",
              "16    618     Raheem Sterling      17   1352            5   4.782666385173798   \n",
              "17   5221         Leon Bailey      15    618            5     2.9558798186481   \n",
              "18   5560     Scott McTominay      14    971            5   3.883523179218173   \n",
              "19   6122        Douglas Luiz      16   1408            5   4.341398486867547   \n",
              "\n",
              "   assists_1wks_x           xA_1wks_x shots_1wks_x key_passes_1wks_x  ...  \\\n",
              "0               4  3.2472310978919268           58                16  ...   \n",
              "1               7   7.441837605088949           53                41  ...   \n",
              "2               4   5.971939321607351           43                32  ...   \n",
              "3               1  2.2795576956123114           43                11  ...   \n",
              "4               6  3.5883569810539484           50                26  ...   \n",
              "5               1  0.9574757218360901           48                13  ...   \n",
              "6               2  2.0973425544798374           29                12  ...   \n",
              "7               1  0.3740509245544672           26                 4  ...   \n",
              "8               0  1.0154497548937798           25                 6  ...   \n",
              "9               3  2.8948017433285713           41                22  ...   \n",
              "10              1  1.3401273358613253           41                11  ...   \n",
              "11              0   2.036896336823702           28                22  ...   \n",
              "12              0   0.864791008643806           39                13  ...   \n",
              "13              4   4.145725706592202           35                19  ...   \n",
              "14              3   4.766410497948527           31                22  ...   \n",
              "15              0  0.6063905879855156           23                 5  ...   \n",
              "16              2  3.1002742629498243           28                20  ...   \n",
              "17              5  3.7413671016693115           21                15  ...   \n",
              "18              0  0.4401202015578747           26                 3  ...   \n",
              "19              2  2.0042906496673822           30                22  ...   \n",
              "\n",
              "   key_passes_1wks_y yellow_cards red_cards position_y  \\\n",
              "0                 16            1         0          F   \n",
              "1                 41            1         0          F   \n",
              "2                 32            1         0        F M   \n",
              "3                 11            1         0        F M   \n",
              "4                 26            3         0          F   \n",
              "5                 13            1         0          F   \n",
              "6                 12            4         0      F M S   \n",
              "7                  4            1         0        F S   \n",
              "8                  6            0         0        F S   \n",
              "9                 22            1         0          F   \n",
              "10                11            7         0        F S   \n",
              "11                22            4         0          M   \n",
              "12                13            3         0          F   \n",
              "13                19            6         0        F S   \n",
              "14                22            4         0      F M S   \n",
              "15                 5            1         0        F S   \n",
              "16                20            4         0      F M S   \n",
              "17                15            2         0        M S   \n",
              "18                 3            0         0        M S   \n",
              "19                22            5         0          M   \n",
              "\n",
              "               team_title_y npg_1wks_y         npxG_1wks_y  \\\n",
              "0           Manchester City         11   13.68282476067543   \n",
              "1                 Liverpool          8    7.72769470512867   \n",
              "2                 Tottenham          9   6.018985345959663   \n",
              "3                  West Ham         10   7.218599982559681   \n",
              "4               Aston Villa          9  10.049726076424122   \n",
              "5               Bournemouth          8   9.721119590103626   \n",
              "6   Wolverhampton Wanderers          7    4.56206258572638   \n",
              "7          Newcastle United          5    6.36455949395895   \n",
              "8          Newcastle United          6   7.103372395038605   \n",
              "9                 Brentford          4   5.291108556091785   \n",
              "10                  Chelsea          7  10.598645154386759   \n",
              "11                  Everton          6   7.047202989459038   \n",
              "12           Crystal Palace          6   6.131767854094505   \n",
              "13         Newcastle United          6   5.111481446772814   \n",
              "14  Chelsea,Manchester City          2  2.7625240366905928   \n",
              "15                 Brighton          6  2.8043092247098684   \n",
              "16                  Chelsea          5   4.782666385173798   \n",
              "17              Aston Villa          5     2.9558798186481   \n",
              "18        Manchester United          5   3.883523179218173   \n",
              "19              Aston Villa          2  2.0578919518738985   \n",
              "\n",
              "               xGChain           xGBuildup goals  \n",
              "0   16.214465029537678  1.3705047406256199    14  \n",
              "1   14.869610473513603   3.948832482099533    11  \n",
              "2   14.396287873387337   4.522126642987132    10  \n",
              "3    8.182679865509272  1.4770999029278755    10  \n",
              "4   14.428645104169846   2.091627176851034     9  \n",
              "5   10.837209552526474  1.8425600491464138     8  \n",
              "6    7.166812987066805  2.0526657747104764     8  \n",
              "7     7.33734935708344  0.8389131352305412     7  \n",
              "8    8.848422676324844    2.38386919349432     7  \n",
              "9    9.410030841827393  3.1749180927872658     7  \n",
              "10  11.679743517190218  1.9156055115163326     7  \n",
              "11   9.405437964946032  3.6784230321645737     6  \n",
              "12    6.33973165974021   1.469034243375063     6  \n",
              "13  12.925105452537537  5.1627094857394695     6  \n",
              "14   9.115981796756387  4.0419192761182785     6  \n",
              "15   5.259531259536743  1.9688059650361538     6  \n",
              "16  11.640973256900907    4.83285385556519     5  \n",
              "17   7.517824597656727   2.416896268725395     5  \n",
              "18   4.406363693997264  1.1067726649343967     5  \n",
              "19   9.534928295761347   7.547718802466989     5  \n",
              "\n",
              "[20 rows x 49 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-e5df3266-13aa-40c8-b5cb-eb9dad1ea027\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>player_name</th>\n",
              "      <th>games_x</th>\n",
              "      <th>time_x</th>\n",
              "      <th>goals_1wks_x</th>\n",
              "      <th>xG_1wks_x</th>\n",
              "      <th>assists_1wks_x</th>\n",
              "      <th>xA_1wks_x</th>\n",
              "      <th>shots_1wks_x</th>\n",
              "      <th>key_passes_1wks_x</th>\n",
              "      <th>...</th>\n",
              "      <th>key_passes_1wks_y</th>\n",
              "      <th>yellow_cards</th>\n",
              "      <th>red_cards</th>\n",
              "      <th>position_y</th>\n",
              "      <th>team_title_y</th>\n",
              "      <th>npg_1wks_y</th>\n",
              "      <th>npxG_1wks_y</th>\n",
              "      <th>xGChain</th>\n",
              "      <th>xGBuildup</th>\n",
              "      <th>goals</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>8260</td>\n",
              "      <td>Erling Haaland</td>\n",
              "      <td>15</td>\n",
              "      <td>1305</td>\n",
              "      <td>14</td>\n",
              "      <td>16.727499932050705</td>\n",
              "      <td>4</td>\n",
              "      <td>3.2472310978919268</td>\n",
              "      <td>58</td>\n",
              "      <td>16</td>\n",
              "      <td>...</td>\n",
              "      <td>16</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>F</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>11</td>\n",
              "      <td>13.68282476067543</td>\n",
              "      <td>16.214465029537678</td>\n",
              "      <td>1.3705047406256199</td>\n",
              "      <td>14</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>1250</td>\n",
              "      <td>Mohamed Salah</td>\n",
              "      <td>17</td>\n",
              "      <td>1498</td>\n",
              "      <td>11</td>\n",
              "      <td>10.77229580283165</td>\n",
              "      <td>7</td>\n",
              "      <td>7.441837605088949</td>\n",
              "      <td>53</td>\n",
              "      <td>41</td>\n",
              "      <td>...</td>\n",
              "      <td>41</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>F</td>\n",
              "      <td>Liverpool</td>\n",
              "      <td>8</td>\n",
              "      <td>7.72769470512867</td>\n",
              "      <td>14.869610473513603</td>\n",
              "      <td>3.948832482099533</td>\n",
              "      <td>11</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>453</td>\n",
              "      <td>Son Heung-Min</td>\n",
              "      <td>17</td>\n",
              "      <td>1469</td>\n",
              "      <td>10</td>\n",
              "      <td>6.780154183506966</td>\n",
              "      <td>4</td>\n",
              "      <td>5.971939321607351</td>\n",
              "      <td>43</td>\n",
              "      <td>32</td>\n",
              "      <td>...</td>\n",
              "      <td>32</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>F M</td>\n",
              "      <td>Tottenham</td>\n",
              "      <td>9</td>\n",
              "      <td>6.018985345959663</td>\n",
              "      <td>14.396287873387337</td>\n",
              "      <td>4.522126642987132</td>\n",
              "      <td>10</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>1776</td>\n",
              "      <td>Jarrod Bowen</td>\n",
              "      <td>16</td>\n",
              "      <td>1440</td>\n",
              "      <td>10</td>\n",
              "      <td>7.218599982559681</td>\n",
              "      <td>1</td>\n",
              "      <td>2.2795576956123114</td>\n",
              "      <td>43</td>\n",
              "      <td>11</td>\n",
              "      <td>...</td>\n",
              "      <td>11</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>F M</td>\n",
              "      <td>West Ham</td>\n",
              "      <td>10</td>\n",
              "      <td>7.218599982559681</td>\n",
              "      <td>8.182679865509272</td>\n",
              "      <td>1.4770999029278755</td>\n",
              "      <td>10</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>8865</td>\n",
              "      <td>Ollie Watkins</td>\n",
              "      <td>17</td>\n",
              "      <td>1509</td>\n",
              "      <td>9</td>\n",
              "      <td>10.049726076424122</td>\n",
              "      <td>6</td>\n",
              "      <td>3.5883569810539484</td>\n",
              "      <td>50</td>\n",
              "      <td>26</td>\n",
              "      <td>...</td>\n",
              "      <td>26</td>\n",
              "      <td>3</td>\n",
              "      <td>0</td>\n",
              "      <td>F</td>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>9</td>\n",
              "      <td>10.049726076424122</td>\n",
              "      <td>14.428645104169846</td>\n",
              "      <td>2.091627176851034</td>\n",
              "      <td>9</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>1679</td>\n",
              "      <td>Dominic Solanke</td>\n",
              "      <td>16</td>\n",
              "      <td>1438</td>\n",
              "      <td>8</td>\n",
              "      <td>9.721119590103626</td>\n",
              "      <td>1</td>\n",
              "      <td>0.9574757218360901</td>\n",
              "      <td>48</td>\n",
              "      <td>13</td>\n",
              "      <td>...</td>\n",
              "      <td>13</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>F</td>\n",
              "      <td>Bournemouth</td>\n",
              "      <td>8</td>\n",
              "      <td>9.721119590103626</td>\n",
              "      <td>10.837209552526474</td>\n",
              "      <td>1.8425600491464138</td>\n",
              "      <td>8</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>8845</td>\n",
              "      <td>Hee-Chan Hwang</td>\n",
              "      <td>17</td>\n",
              "      <td>1235</td>\n",
              "      <td>8</td>\n",
              "      <td>5.323231453076005</td>\n",
              "      <td>2</td>\n",
              "      <td>2.0973425544798374</td>\n",
              "      <td>29</td>\n",
              "      <td>12</td>\n",
              "      <td>...</td>\n",
              "      <td>12</td>\n",
              "      <td>4</td>\n",
              "      <td>0</td>\n",
              "      <td>F M S</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>7</td>\n",
              "      <td>4.56206258572638</td>\n",
              "      <td>7.166812987066805</td>\n",
              "      <td>2.0526657747104764</td>\n",
              "      <td>8</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>468</td>\n",
              "      <td>Callum Wilson</td>\n",
              "      <td>12</td>\n",
              "      <td>588</td>\n",
              "      <td>7</td>\n",
              "      <td>7.886897064745426</td>\n",
              "      <td>1</td>\n",
              "      <td>0.3740509245544672</td>\n",
              "      <td>26</td>\n",
              "      <td>4</td>\n",
              "      <td>...</td>\n",
              "      <td>4</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>F S</td>\n",
              "      <td>Newcastle United</td>\n",
              "      <td>5</td>\n",
              "      <td>6.36455949395895</td>\n",
              "      <td>7.33734935708344</td>\n",
              "      <td>0.8389131352305412</td>\n",
              "      <td>7</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>5232</td>\n",
              "      <td>Alexander Isak</td>\n",
              "      <td>12</td>\n",
              "      <td>838</td>\n",
              "      <td>7</td>\n",
              "      <td>7.864541232585907</td>\n",
              "      <td>0</td>\n",
              "      <td>1.0154497548937798</td>\n",
              "      <td>25</td>\n",
              "      <td>6</td>\n",
              "      <td>...</td>\n",
              "      <td>6</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>F S</td>\n",
              "      <td>Newcastle United</td>\n",
              "      <td>6</td>\n",
              "      <td>7.103372395038605</td>\n",
              "      <td>8.848422676324844</td>\n",
              "      <td>2.38386919349432</td>\n",
              "      <td>7</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>6552</td>\n",
              "      <td>Bryan Mbeumo</td>\n",
              "      <td>15</td>\n",
              "      <td>1289</td>\n",
              "      <td>7</td>\n",
              "      <td>7.574615128338337</td>\n",
              "      <td>3</td>\n",
              "      <td>2.8948017433285713</td>\n",
              "      <td>41</td>\n",
              "      <td>22</td>\n",
              "      <td>...</td>\n",
              "      <td>22</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>F</td>\n",
              "      <td>Brentford</td>\n",
              "      <td>4</td>\n",
              "      <td>5.291108556091785</td>\n",
              "      <td>9.410030841827393</td>\n",
              "      <td>3.1749180927872658</td>\n",
              "      <td>7</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10</th>\n",
              "      <td>10048</td>\n",
              "      <td>Nicolas Jackson</td>\n",
              "      <td>16</td>\n",
              "      <td>1197</td>\n",
              "      <td>7</td>\n",
              "      <td>10.598645154386759</td>\n",
              "      <td>1</td>\n",
              "      <td>1.3401273358613253</td>\n",
              "      <td>41</td>\n",
              "      <td>11</td>\n",
              "      <td>...</td>\n",
              "      <td>11</td>\n",
              "      <td>7</td>\n",
              "      <td>0</td>\n",
              "      <td>F S</td>\n",
              "      <td>Chelsea</td>\n",
              "      <td>7</td>\n",
              "      <td>10.598645154386759</td>\n",
              "      <td>11.679743517190218</td>\n",
              "      <td>1.9156055115163326</td>\n",
              "      <td>7</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>11</th>\n",
              "      <td>1726</td>\n",
              "      <td>Abdoulaye Doucouré</td>\n",
              "      <td>17</td>\n",
              "      <td>1460</td>\n",
              "      <td>6</td>\n",
              "      <td>7.047202989459038</td>\n",
              "      <td>0</td>\n",
              "      <td>2.036896336823702</td>\n",
              "      <td>28</td>\n",
              "      <td>22</td>\n",
              "      <td>...</td>\n",
              "      <td>22</td>\n",
              "      <td>4</td>\n",
              "      <td>0</td>\n",
              "      <td>M</td>\n",
              "      <td>Everton</td>\n",
              "      <td>6</td>\n",
              "      <td>7.047202989459038</td>\n",
              "      <td>9.405437964946032</td>\n",
              "      <td>3.6784230321645737</td>\n",
              "      <td>6</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>12</th>\n",
              "      <td>3697</td>\n",
              "      <td>Odsonne Edouard</td>\n",
              "      <td>15</td>\n",
              "      <td>1270</td>\n",
              "      <td>6</td>\n",
              "      <td>6.131767854094505</td>\n",
              "      <td>0</td>\n",
              "      <td>0.864791008643806</td>\n",
              "      <td>39</td>\n",
              "      <td>13</td>\n",
              "      <td>...</td>\n",
              "      <td>13</td>\n",
              "      <td>3</td>\n",
              "      <td>0</td>\n",
              "      <td>F</td>\n",
              "      <td>Crystal Palace</td>\n",
              "      <td>6</td>\n",
              "      <td>6.131767854094505</td>\n",
              "      <td>6.33973165974021</td>\n",
              "      <td>1.469034243375063</td>\n",
              "      <td>6</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>13</th>\n",
              "      <td>8150</td>\n",
              "      <td>Anthony Gordon</td>\n",
              "      <td>16</td>\n",
              "      <td>1345</td>\n",
              "      <td>6</td>\n",
              "      <td>5.111481446772814</td>\n",
              "      <td>4</td>\n",
              "      <td>4.145725706592202</td>\n",
              "      <td>35</td>\n",
              "      <td>19</td>\n",
              "      <td>...</td>\n",
              "      <td>19</td>\n",
              "      <td>6</td>\n",
              "      <td>0</td>\n",
              "      <td>F S</td>\n",
              "      <td>Newcastle United</td>\n",
              "      <td>6</td>\n",
              "      <td>5.111481446772814</td>\n",
              "      <td>12.925105452537537</td>\n",
              "      <td>5.1627094857394695</td>\n",
              "      <td>6</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>14</th>\n",
              "      <td>8497</td>\n",
              "      <td>Cole Palmer</td>\n",
              "      <td>15</td>\n",
              "      <td>965</td>\n",
              "      <td>6</td>\n",
              "      <td>5.8071994837373495</td>\n",
              "      <td>3</td>\n",
              "      <td>4.766410497948527</td>\n",
              "      <td>31</td>\n",
              "      <td>22</td>\n",
              "      <td>...</td>\n",
              "      <td>22</td>\n",
              "      <td>4</td>\n",
              "      <td>0</td>\n",
              "      <td>F M S</td>\n",
              "      <td>Chelsea,Manchester City</td>\n",
              "      <td>2</td>\n",
              "      <td>2.7625240366905928</td>\n",
              "      <td>9.115981796756387</td>\n",
              "      <td>4.0419192761182785</td>\n",
              "      <td>6</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>15</th>\n",
              "      <td>10177</td>\n",
              "      <td>Evan Ferguson</td>\n",
              "      <td>16</td>\n",
              "      <td>939</td>\n",
              "      <td>6</td>\n",
              "      <td>2.8043092247098684</td>\n",
              "      <td>0</td>\n",
              "      <td>0.6063905879855156</td>\n",
              "      <td>23</td>\n",
              "      <td>5</td>\n",
              "      <td>...</td>\n",
              "      <td>5</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>F S</td>\n",
              "      <td>Brighton</td>\n",
              "      <td>6</td>\n",
              "      <td>2.8043092247098684</td>\n",
              "      <td>5.259531259536743</td>\n",
              "      <td>1.9688059650361538</td>\n",
              "      <td>6</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>16</th>\n",
              "      <td>618</td>\n",
              "      <td>Raheem Sterling</td>\n",
              "      <td>17</td>\n",
              "      <td>1352</td>\n",
              "      <td>5</td>\n",
              "      <td>4.782666385173798</td>\n",
              "      <td>2</td>\n",
              "      <td>3.1002742629498243</td>\n",
              "      <td>28</td>\n",
              "      <td>20</td>\n",
              "      <td>...</td>\n",
              "      <td>20</td>\n",
              "      <td>4</td>\n",
              "      <td>0</td>\n",
              "      <td>F M S</td>\n",
              "      <td>Chelsea</td>\n",
              "      <td>5</td>\n",
              "      <td>4.782666385173798</td>\n",
              "      <td>11.640973256900907</td>\n",
              "      <td>4.83285385556519</td>\n",
              "      <td>5</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>17</th>\n",
              "      <td>5221</td>\n",
              "      <td>Leon Bailey</td>\n",
              "      <td>15</td>\n",
              "      <td>618</td>\n",
              "      <td>5</td>\n",
              "      <td>2.9558798186481</td>\n",
              "      <td>5</td>\n",
              "      <td>3.7413671016693115</td>\n",
              "      <td>21</td>\n",
              "      <td>15</td>\n",
              "      <td>...</td>\n",
              "      <td>15</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>M S</td>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>5</td>\n",
              "      <td>2.9558798186481</td>\n",
              "      <td>7.517824597656727</td>\n",
              "      <td>2.416896268725395</td>\n",
              "      <td>5</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>18</th>\n",
              "      <td>5560</td>\n",
              "      <td>Scott McTominay</td>\n",
              "      <td>14</td>\n",
              "      <td>971</td>\n",
              "      <td>5</td>\n",
              "      <td>3.883523179218173</td>\n",
              "      <td>0</td>\n",
              "      <td>0.4401202015578747</td>\n",
              "      <td>26</td>\n",
              "      <td>3</td>\n",
              "      <td>...</td>\n",
              "      <td>3</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>M S</td>\n",
              "      <td>Manchester United</td>\n",
              "      <td>5</td>\n",
              "      <td>3.883523179218173</td>\n",
              "      <td>4.406363693997264</td>\n",
              "      <td>1.1067726649343967</td>\n",
              "      <td>5</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>19</th>\n",
              "      <td>6122</td>\n",
              "      <td>Douglas Luiz</td>\n",
              "      <td>16</td>\n",
              "      <td>1408</td>\n",
              "      <td>5</td>\n",
              "      <td>4.341398486867547</td>\n",
              "      <td>2</td>\n",
              "      <td>2.0042906496673822</td>\n",
              "      <td>30</td>\n",
              "      <td>22</td>\n",
              "      <td>...</td>\n",
              "      <td>22</td>\n",
              "      <td>5</td>\n",
              "      <td>0</td>\n",
              "      <td>M</td>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>2</td>\n",
              "      <td>2.0578919518738985</td>\n",
              "      <td>9.534928295761347</td>\n",
              "      <td>7.547718802466989</td>\n",
              "      <td>5</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>20 rows × 49 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-e5df3266-13aa-40c8-b5cb-eb9dad1ea027')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-e5df3266-13aa-40c8-b5cb-eb9dad1ea027 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-e5df3266-13aa-40c8-b5cb-eb9dad1ea027');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-8c1b6879-c5a5-45c9-b470-c34bdf7b244e\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-8c1b6879-c5a5-45c9-b470-c34bdf7b244e')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-8c1b6879-c5a5-45c9-b470-c34bdf7b244e button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 60
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "EPL_player_df['assists'] = EPL_player_df['assists_1wks_x'].astype(int)\n",
        "top25assists = EPL_player_df.nlargest(20, 'assists')\n",
        "top25assists"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 986
        },
        "id": "QhNKarUM-fT7",
        "outputId": "eb8b10e3-de2a-4da3-b3fd-653762c42512"
      },
      "execution_count": 61,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "        id        player_name games_x time_x goals_1wks_x           xG_1wks_x  \\\n",
              "1     1250      Mohamed Salah      17   1498           11   10.77229580283165   \n",
              "140   6382         Pedro Neto      10    894            1  1.8730668723583221   \n",
              "232    652    Kieran Trippier      16   1409            0  0.2488715760409832   \n",
              "4     8865      Ollie Watkins      17   1509            9  10.049726076424122   \n",
              "23    7322        Bukayo Saka      16   1412            5   5.912955973297358   \n",
              "17    5221        Leon Bailey      15    618            5     2.9558798186481   \n",
              "37   10720       Darwin Núñez      16    945            4   9.099289217032492   \n",
              "38   10846     Julián Álvarez      17   1441            4   4.791475936770439   \n",
              "41     239        Pascal Groß      15   1280            3  2.6622488014400005   \n",
              "44     843  James Ward-Prowse      16   1428            3  2.8376943841576576   \n",
              "54    6818     James Maddison      11    909            3   2.944616189226508   \n",
              "94    8981        Jéremy Doku      11    721            2  1.2312334701418877   \n",
              "316   6912        Pedro Porro      16   1440            0  1.7443204037845135   \n",
              "375   8965    Vladimir Coufal      17   1529            0  0.0362556017935276   \n",
              "0     8260     Erling Haaland      15   1305           14  16.727499932050705   \n",
              "2      453      Son Heung-Min      17   1469           10   6.780154183506966   \n",
              "13    8150     Anthony Gordon      16   1345            6   5.111481446772814   \n",
              "32    6055         Phil Foden      17   1341            4   4.133061086758971   \n",
              "53    6556       Moussa Diaby      17   1161            3  2.8710350804030895   \n",
              "64   10806       Kaoru Mitoma      16   1223            3   4.068928558379412   \n",
              "\n",
              "    assists_1wks_x           xA_1wks_x shots_1wks_x key_passes_1wks_x  ...  \\\n",
              "1                7   7.441837605088949           53                41  ...   \n",
              "140              7  3.4589802250266075           18                24  ...   \n",
              "232              7  6.4790212493389845            6                46  ...   \n",
              "4                6  3.5883569810539484           50                26  ...   \n",
              "23               6   5.649140641093254           35                40  ...   \n",
              "17               5  3.7413671016693115           21                15  ...   \n",
              "37               5  3.0120091577991843           47                14  ...   \n",
              "38               5   3.743379403837025           41                39  ...   \n",
              "41               5   3.019582520239055           27                39  ...   \n",
              "44               5  4.0053172037005424           21                32  ...   \n",
              "54               5  3.4641558043658733           27                31  ...   \n",
              "94               5   3.068725273013115           22                19  ...   \n",
              "316              5   4.146158324554563           28                30  ...   \n",
              "375              5   2.155784240923822            2                20  ...   \n",
              "0                4  3.2472310978919268           58                16  ...   \n",
              "2                4   5.971939321607351           43                32  ...   \n",
              "13               4   4.145725706592202           35                19  ...   \n",
              "32               4  3.1315846741199493           33                29  ...   \n",
              "53               4   5.130432341247797           28                26  ...   \n",
              "64               4  2.9180683754384518           29                23  ...   \n",
              "\n",
              "    yellow_cards red_cards position_y             team_title_y npg_1wks_y  \\\n",
              "1              1         0          F                Liverpool          8   \n",
              "140            3         0        F M  Wolverhampton Wanderers          1   \n",
              "232            5         0          D         Newcastle United          0   \n",
              "4              3         0          F              Aston Villa          9   \n",
              "23             1         0          F                  Arsenal          3   \n",
              "17             2         0        M S              Aston Villa          5   \n",
              "37             4         0        F S                Liverpool          4   \n",
              "38             2         0        F M          Manchester City          4   \n",
              "41             3         0      D M S                 Brighton          3   \n",
              "44             3         0          M                 West Ham          3   \n",
              "54             2         0          M                Tottenham          3   \n",
              "94             2         0      D M S          Manchester City          2   \n",
              "316            3         0          D                Tottenham          0   \n",
              "375            4         0          D                 West Ham          0   \n",
              "0              1         0          F          Manchester City         11   \n",
              "2              1         0        F M                Tottenham          9   \n",
              "13             6         0        F S         Newcastle United          6   \n",
              "32             1         0      F M S          Manchester City          4   \n",
              "53             0         0      F M S              Aston Villa          3   \n",
              "64             4         0    D F M S                 Brighton          3   \n",
              "\n",
              "            npxG_1wks_y             xGChain           xGBuildup goals assists  \n",
              "1      7.72769470512867  14.869610473513603   3.948832482099533    11       7  \n",
              "140  1.8730668723583221   4.809771712869406  1.1124582178890705     1       7  \n",
              "232  0.2488715760409832  11.438116792589426   8.551653895527124     0       7  \n",
              "4    10.049726076424122  14.428645104169846   2.091627176851034     9       6  \n",
              "23    4.390618350356817  12.864408791065216   6.016305711120367     5       6  \n",
              "17      2.9558798186481   7.517824597656727   2.416896268725395     5       5  \n",
              "37    9.099289217032492  12.052340842783451  1.8790182247757912     4       5  \n",
              "38    4.791475936770439  13.619514219462872   8.040310397744179     4       5  \n",
              "41   2.6622488014400005  10.769563138484955   8.162662891671062     3       5  \n",
              "44   2.8376943841576576   7.606547981500626   4.921757174655795     3       5  \n",
              "54    2.944616189226508    9.78583274781704   5.331316661089659     3       5  \n",
              "94   1.2312334701418877   5.178026407957077  2.0440204814076424     2       5  \n",
              "316  1.7443204037845135  11.182889088988304    8.58791171014309     0       5  \n",
              "375  0.0362556017935276   4.932760905474424   4.074712384492159     0       5  \n",
              "0     13.68282476067543  16.214465029537678  1.3705047406256199    14       4  \n",
              "2     6.018985345959663  14.396287873387337   4.522126642987132    10       4  \n",
              "13    5.111481446772814  12.925105452537537  5.1627094857394695     6       4  \n",
              "32    4.133061086758971  11.913718447089195   6.777823822572827     4       4  \n",
              "53   2.8710350804030895  10.479185570031404   4.910003714263439     3       4  \n",
              "64    4.068928558379412  12.140242606401443    7.32234625890851     3       4  \n",
              "\n",
              "[20 rows x 50 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-31e4c6a2-6a42-44af-b4e3-53114e209cfb\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>player_name</th>\n",
              "      <th>games_x</th>\n",
              "      <th>time_x</th>\n",
              "      <th>goals_1wks_x</th>\n",
              "      <th>xG_1wks_x</th>\n",
              "      <th>assists_1wks_x</th>\n",
              "      <th>xA_1wks_x</th>\n",
              "      <th>shots_1wks_x</th>\n",
              "      <th>key_passes_1wks_x</th>\n",
              "      <th>...</th>\n",
              "      <th>yellow_cards</th>\n",
              "      <th>red_cards</th>\n",
              "      <th>position_y</th>\n",
              "      <th>team_title_y</th>\n",
              "      <th>npg_1wks_y</th>\n",
              "      <th>npxG_1wks_y</th>\n",
              "      <th>xGChain</th>\n",
              "      <th>xGBuildup</th>\n",
              "      <th>goals</th>\n",
              "      <th>assists</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>1250</td>\n",
              "      <td>Mohamed Salah</td>\n",
              "      <td>17</td>\n",
              "      <td>1498</td>\n",
              "      <td>11</td>\n",
              "      <td>10.77229580283165</td>\n",
              "      <td>7</td>\n",
              "      <td>7.441837605088949</td>\n",
              "      <td>53</td>\n",
              "      <td>41</td>\n",
              "      <td>...</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>F</td>\n",
              "      <td>Liverpool</td>\n",
              "      <td>8</td>\n",
              "      <td>7.72769470512867</td>\n",
              "      <td>14.869610473513603</td>\n",
              "      <td>3.948832482099533</td>\n",
              "      <td>11</td>\n",
              "      <td>7</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>140</th>\n",
              "      <td>6382</td>\n",
              "      <td>Pedro Neto</td>\n",
              "      <td>10</td>\n",
              "      <td>894</td>\n",
              "      <td>1</td>\n",
              "      <td>1.8730668723583221</td>\n",
              "      <td>7</td>\n",
              "      <td>3.4589802250266075</td>\n",
              "      <td>18</td>\n",
              "      <td>24</td>\n",
              "      <td>...</td>\n",
              "      <td>3</td>\n",
              "      <td>0</td>\n",
              "      <td>F M</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>1</td>\n",
              "      <td>1.8730668723583221</td>\n",
              "      <td>4.809771712869406</td>\n",
              "      <td>1.1124582178890705</td>\n",
              "      <td>1</td>\n",
              "      <td>7</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>232</th>\n",
              "      <td>652</td>\n",
              "      <td>Kieran Trippier</td>\n",
              "      <td>16</td>\n",
              "      <td>1409</td>\n",
              "      <td>0</td>\n",
              "      <td>0.2488715760409832</td>\n",
              "      <td>7</td>\n",
              "      <td>6.4790212493389845</td>\n",
              "      <td>6</td>\n",
              "      <td>46</td>\n",
              "      <td>...</td>\n",
              "      <td>5</td>\n",
              "      <td>0</td>\n",
              "      <td>D</td>\n",
              "      <td>Newcastle United</td>\n",
              "      <td>0</td>\n",
              "      <td>0.2488715760409832</td>\n",
              "      <td>11.438116792589426</td>\n",
              "      <td>8.551653895527124</td>\n",
              "      <td>0</td>\n",
              "      <td>7</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>8865</td>\n",
              "      <td>Ollie Watkins</td>\n",
              "      <td>17</td>\n",
              "      <td>1509</td>\n",
              "      <td>9</td>\n",
              "      <td>10.049726076424122</td>\n",
              "      <td>6</td>\n",
              "      <td>3.5883569810539484</td>\n",
              "      <td>50</td>\n",
              "      <td>26</td>\n",
              "      <td>...</td>\n",
              "      <td>3</td>\n",
              "      <td>0</td>\n",
              "      <td>F</td>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>9</td>\n",
              "      <td>10.049726076424122</td>\n",
              "      <td>14.428645104169846</td>\n",
              "      <td>2.091627176851034</td>\n",
              "      <td>9</td>\n",
              "      <td>6</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>23</th>\n",
              "      <td>7322</td>\n",
              "      <td>Bukayo Saka</td>\n",
              "      <td>16</td>\n",
              "      <td>1412</td>\n",
              "      <td>5</td>\n",
              "      <td>5.912955973297358</td>\n",
              "      <td>6</td>\n",
              "      <td>5.649140641093254</td>\n",
              "      <td>35</td>\n",
              "      <td>40</td>\n",
              "      <td>...</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>F</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>3</td>\n",
              "      <td>4.390618350356817</td>\n",
              "      <td>12.864408791065216</td>\n",
              "      <td>6.016305711120367</td>\n",
              "      <td>5</td>\n",
              "      <td>6</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>17</th>\n",
              "      <td>5221</td>\n",
              "      <td>Leon Bailey</td>\n",
              "      <td>15</td>\n",
              "      <td>618</td>\n",
              "      <td>5</td>\n",
              "      <td>2.9558798186481</td>\n",
              "      <td>5</td>\n",
              "      <td>3.7413671016693115</td>\n",
              "      <td>21</td>\n",
              "      <td>15</td>\n",
              "      <td>...</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>M S</td>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>5</td>\n",
              "      <td>2.9558798186481</td>\n",
              "      <td>7.517824597656727</td>\n",
              "      <td>2.416896268725395</td>\n",
              "      <td>5</td>\n",
              "      <td>5</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>37</th>\n",
              "      <td>10720</td>\n",
              "      <td>Darwin Núñez</td>\n",
              "      <td>16</td>\n",
              "      <td>945</td>\n",
              "      <td>4</td>\n",
              "      <td>9.099289217032492</td>\n",
              "      <td>5</td>\n",
              "      <td>3.0120091577991843</td>\n",
              "      <td>47</td>\n",
              "      <td>14</td>\n",
              "      <td>...</td>\n",
              "      <td>4</td>\n",
              "      <td>0</td>\n",
              "      <td>F S</td>\n",
              "      <td>Liverpool</td>\n",
              "      <td>4</td>\n",
              "      <td>9.099289217032492</td>\n",
              "      <td>12.052340842783451</td>\n",
              "      <td>1.8790182247757912</td>\n",
              "      <td>4</td>\n",
              "      <td>5</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>38</th>\n",
              "      <td>10846</td>\n",
              "      <td>Julián Álvarez</td>\n",
              "      <td>17</td>\n",
              "      <td>1441</td>\n",
              "      <td>4</td>\n",
              "      <td>4.791475936770439</td>\n",
              "      <td>5</td>\n",
              "      <td>3.743379403837025</td>\n",
              "      <td>41</td>\n",
              "      <td>39</td>\n",
              "      <td>...</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>F M</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>4</td>\n",
              "      <td>4.791475936770439</td>\n",
              "      <td>13.619514219462872</td>\n",
              "      <td>8.040310397744179</td>\n",
              "      <td>4</td>\n",
              "      <td>5</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>41</th>\n",
              "      <td>239</td>\n",
              "      <td>Pascal Groß</td>\n",
              "      <td>15</td>\n",
              "      <td>1280</td>\n",
              "      <td>3</td>\n",
              "      <td>2.6622488014400005</td>\n",
              "      <td>5</td>\n",
              "      <td>3.019582520239055</td>\n",
              "      <td>27</td>\n",
              "      <td>39</td>\n",
              "      <td>...</td>\n",
              "      <td>3</td>\n",
              "      <td>0</td>\n",
              "      <td>D M S</td>\n",
              "      <td>Brighton</td>\n",
              "      <td>3</td>\n",
              "      <td>2.6622488014400005</td>\n",
              "      <td>10.769563138484955</td>\n",
              "      <td>8.162662891671062</td>\n",
              "      <td>3</td>\n",
              "      <td>5</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>44</th>\n",
              "      <td>843</td>\n",
              "      <td>James Ward-Prowse</td>\n",
              "      <td>16</td>\n",
              "      <td>1428</td>\n",
              "      <td>3</td>\n",
              "      <td>2.8376943841576576</td>\n",
              "      <td>5</td>\n",
              "      <td>4.0053172037005424</td>\n",
              "      <td>21</td>\n",
              "      <td>32</td>\n",
              "      <td>...</td>\n",
              "      <td>3</td>\n",
              "      <td>0</td>\n",
              "      <td>M</td>\n",
              "      <td>West Ham</td>\n",
              "      <td>3</td>\n",
              "      <td>2.8376943841576576</td>\n",
              "      <td>7.606547981500626</td>\n",
              "      <td>4.921757174655795</td>\n",
              "      <td>3</td>\n",
              "      <td>5</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>54</th>\n",
              "      <td>6818</td>\n",
              "      <td>James Maddison</td>\n",
              "      <td>11</td>\n",
              "      <td>909</td>\n",
              "      <td>3</td>\n",
              "      <td>2.944616189226508</td>\n",
              "      <td>5</td>\n",
              "      <td>3.4641558043658733</td>\n",
              "      <td>27</td>\n",
              "      <td>31</td>\n",
              "      <td>...</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>M</td>\n",
              "      <td>Tottenham</td>\n",
              "      <td>3</td>\n",
              "      <td>2.944616189226508</td>\n",
              "      <td>9.78583274781704</td>\n",
              "      <td>5.331316661089659</td>\n",
              "      <td>3</td>\n",
              "      <td>5</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>94</th>\n",
              "      <td>8981</td>\n",
              "      <td>Jéremy Doku</td>\n",
              "      <td>11</td>\n",
              "      <td>721</td>\n",
              "      <td>2</td>\n",
              "      <td>1.2312334701418877</td>\n",
              "      <td>5</td>\n",
              "      <td>3.068725273013115</td>\n",
              "      <td>22</td>\n",
              "      <td>19</td>\n",
              "      <td>...</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>D M S</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>2</td>\n",
              "      <td>1.2312334701418877</td>\n",
              "      <td>5.178026407957077</td>\n",
              "      <td>2.0440204814076424</td>\n",
              "      <td>2</td>\n",
              "      <td>5</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>316</th>\n",
              "      <td>6912</td>\n",
              "      <td>Pedro Porro</td>\n",
              "      <td>16</td>\n",
              "      <td>1440</td>\n",
              "      <td>0</td>\n",
              "      <td>1.7443204037845135</td>\n",
              "      <td>5</td>\n",
              "      <td>4.146158324554563</td>\n",
              "      <td>28</td>\n",
              "      <td>30</td>\n",
              "      <td>...</td>\n",
              "      <td>3</td>\n",
              "      <td>0</td>\n",
              "      <td>D</td>\n",
              "      <td>Tottenham</td>\n",
              "      <td>0</td>\n",
              "      <td>1.7443204037845135</td>\n",
              "      <td>11.182889088988304</td>\n",
              "      <td>8.58791171014309</td>\n",
              "      <td>0</td>\n",
              "      <td>5</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>375</th>\n",
              "      <td>8965</td>\n",
              "      <td>Vladimir Coufal</td>\n",
              "      <td>17</td>\n",
              "      <td>1529</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0362556017935276</td>\n",
              "      <td>5</td>\n",
              "      <td>2.155784240923822</td>\n",
              "      <td>2</td>\n",
              "      <td>20</td>\n",
              "      <td>...</td>\n",
              "      <td>4</td>\n",
              "      <td>0</td>\n",
              "      <td>D</td>\n",
              "      <td>West Ham</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0362556017935276</td>\n",
              "      <td>4.932760905474424</td>\n",
              "      <td>4.074712384492159</td>\n",
              "      <td>0</td>\n",
              "      <td>5</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>8260</td>\n",
              "      <td>Erling Haaland</td>\n",
              "      <td>15</td>\n",
              "      <td>1305</td>\n",
              "      <td>14</td>\n",
              "      <td>16.727499932050705</td>\n",
              "      <td>4</td>\n",
              "      <td>3.2472310978919268</td>\n",
              "      <td>58</td>\n",
              "      <td>16</td>\n",
              "      <td>...</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>F</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>11</td>\n",
              "      <td>13.68282476067543</td>\n",
              "      <td>16.214465029537678</td>\n",
              "      <td>1.3705047406256199</td>\n",
              "      <td>14</td>\n",
              "      <td>4</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>453</td>\n",
              "      <td>Son Heung-Min</td>\n",
              "      <td>17</td>\n",
              "      <td>1469</td>\n",
              "      <td>10</td>\n",
              "      <td>6.780154183506966</td>\n",
              "      <td>4</td>\n",
              "      <td>5.971939321607351</td>\n",
              "      <td>43</td>\n",
              "      <td>32</td>\n",
              "      <td>...</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>F M</td>\n",
              "      <td>Tottenham</td>\n",
              "      <td>9</td>\n",
              "      <td>6.018985345959663</td>\n",
              "      <td>14.396287873387337</td>\n",
              "      <td>4.522126642987132</td>\n",
              "      <td>10</td>\n",
              "      <td>4</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>13</th>\n",
              "      <td>8150</td>\n",
              "      <td>Anthony Gordon</td>\n",
              "      <td>16</td>\n",
              "      <td>1345</td>\n",
              "      <td>6</td>\n",
              "      <td>5.111481446772814</td>\n",
              "      <td>4</td>\n",
              "      <td>4.145725706592202</td>\n",
              "      <td>35</td>\n",
              "      <td>19</td>\n",
              "      <td>...</td>\n",
              "      <td>6</td>\n",
              "      <td>0</td>\n",
              "      <td>F S</td>\n",
              "      <td>Newcastle United</td>\n",
              "      <td>6</td>\n",
              "      <td>5.111481446772814</td>\n",
              "      <td>12.925105452537537</td>\n",
              "      <td>5.1627094857394695</td>\n",
              "      <td>6</td>\n",
              "      <td>4</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>32</th>\n",
              "      <td>6055</td>\n",
              "      <td>Phil Foden</td>\n",
              "      <td>17</td>\n",
              "      <td>1341</td>\n",
              "      <td>4</td>\n",
              "      <td>4.133061086758971</td>\n",
              "      <td>4</td>\n",
              "      <td>3.1315846741199493</td>\n",
              "      <td>33</td>\n",
              "      <td>29</td>\n",
              "      <td>...</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>F M S</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>4</td>\n",
              "      <td>4.133061086758971</td>\n",
              "      <td>11.913718447089195</td>\n",
              "      <td>6.777823822572827</td>\n",
              "      <td>4</td>\n",
              "      <td>4</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>53</th>\n",
              "      <td>6556</td>\n",
              "      <td>Moussa Diaby</td>\n",
              "      <td>17</td>\n",
              "      <td>1161</td>\n",
              "      <td>3</td>\n",
              "      <td>2.8710350804030895</td>\n",
              "      <td>4</td>\n",
              "      <td>5.130432341247797</td>\n",
              "      <td>28</td>\n",
              "      <td>26</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>F M S</td>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>3</td>\n",
              "      <td>2.8710350804030895</td>\n",
              "      <td>10.479185570031404</td>\n",
              "      <td>4.910003714263439</td>\n",
              "      <td>3</td>\n",
              "      <td>4</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>64</th>\n",
              "      <td>10806</td>\n",
              "      <td>Kaoru Mitoma</td>\n",
              "      <td>16</td>\n",
              "      <td>1223</td>\n",
              "      <td>3</td>\n",
              "      <td>4.068928558379412</td>\n",
              "      <td>4</td>\n",
              "      <td>2.9180683754384518</td>\n",
              "      <td>29</td>\n",
              "      <td>23</td>\n",
              "      <td>...</td>\n",
              "      <td>4</td>\n",
              "      <td>0</td>\n",
              "      <td>D F M S</td>\n",
              "      <td>Brighton</td>\n",
              "      <td>3</td>\n",
              "      <td>4.068928558379412</td>\n",
              "      <td>12.140242606401443</td>\n",
              "      <td>7.32234625890851</td>\n",
              "      <td>3</td>\n",
              "      <td>4</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>20 rows × 50 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-31e4c6a2-6a42-44af-b4e3-53114e209cfb')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-31e4c6a2-6a42-44af-b4e3-53114e209cfb button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-31e4c6a2-6a42-44af-b4e3-53114e209cfb');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-4a5cdc29-501e-4673-8771-0ce1195bac84\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-4a5cdc29-501e-4673-8771-0ce1195bac84')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-4a5cdc29-501e-4673-8771-0ce1195bac84 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 61
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import pandas as pd\n",
        "import plotly.express as px\n",
        "import plotly.graph_objects as go"
      ],
      "metadata": {
        "id": "t81EQEbg_2jQ"
      },
      "execution_count": 62,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "fig3= go.Figure()\n",
        "fig3.add_trace(go.Scatter(x = top25goals[\"goals\"],\n",
        "                          y = top25goals[\"player_name\"],\n",
        "                          mode = 'markers',\n",
        "                          marker_color = 'darkblue',\n",
        "                          marker_size = 10,\n",
        "                          name = 'goals'))\n",
        "fig3.add_trace(go.Scatter(x = top25goals[\"xG_1wks_x\"],\n",
        "                          y = top25goals[\"player_name\"],\n",
        "                          mode = 'markers',\n",
        "                          marker_color = 'darkorange',\n",
        "                          marker_size = 10,\n",
        "                          name = 'xG'))\n",
        "for i in range(0, len(top25goals)):\n",
        "               fig3.add_shape(type='line',\n",
        "                              x0 = top25goals[\"goals\"][i],\n",
        "                              y0 = i,\n",
        "                              x1 = top25goals[\"xG_1wks_x\"][i],\n",
        "                              y1 = i,\n",
        "                              line=dict(color='crimson', width = 3))\n",
        "fig3.update_layout(title_text =\n",
        "                    \"Goals vs xG\",\n",
        "                    title_font_size = 30)\n",
        "fig3.update_xaxes(range=[0, 30])\n",
        "fig3.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 542
        },
        "id": "pCjmRmyw-6sd",
        "outputId": "39314df4-d22b-4827-8ff9-152a6d87fd6d"
      },
      "execution_count": 63,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<html>\n",
              "<head><meta charset=\"utf-8\" /></head>\n",
              "<body>\n",
              "    <div>            <script src=\"https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.5/MathJax.js?config=TeX-AMS-MML_SVG\"></script><script type=\"text/javascript\">if (window.MathJax && window.MathJax.Hub && window.MathJax.Hub.Config) {window.MathJax.Hub.Config({SVG: {font: \"STIX-Web\"}});}</script>                <script type=\"text/javascript\">window.PlotlyConfig = {MathJaxConfig: 'local'};</script>\n",
              "        <script charset=\"utf-8\" src=\"https://cdn.plot.ly/plotly-2.24.1.min.js\"></script>                <div id=\"459e5bdf-7d8e-449a-9f8f-2be6260bd487\" class=\"plotly-graph-div\" style=\"height:525px; width:100%;\"></div>            <script type=\"text/javascript\">                                    window.PLOTLYENV=window.PLOTLYENV || {};                                    if (document.getElementById(\"459e5bdf-7d8e-449a-9f8f-2be6260bd487\")) {                    Plotly.newPlot(                        \"459e5bdf-7d8e-449a-9f8f-2be6260bd487\",                        [{\"marker\":{\"color\":\"darkblue\",\"size\":10},\"mode\":\"markers\",\"name\":\"goals\",\"x\":[14,11,10,10,9,8,8,7,7,7,7,6,6,6,6,6,5,5,5,5],\"y\":[\"Erling Haaland\",\"Mohamed Salah\",\"Son Heung-Min\",\"Jarrod Bowen\",\"Ollie Watkins\",\"Dominic Solanke\",\"Hee-Chan Hwang\",\"Callum Wilson\",\"Alexander Isak\",\"Bryan Mbeumo\",\"Nicolas Jackson\",\"Abdoulaye Doucour\\u00e9\",\"Odsonne Edouard\",\"Anthony Gordon\",\"Cole Palmer\",\"Evan Ferguson\",\"Raheem Sterling\",\"Leon Bailey\",\"Scott McTominay\",\"Douglas Luiz\"],\"type\":\"scatter\"},{\"marker\":{\"color\":\"darkorange\",\"size\":10},\"mode\":\"markers\",\"name\":\"xG\",\"x\":[\"16.727499932050705\",\"10.77229580283165\",\"6.780154183506966\",\"7.218599982559681\",\"10.049726076424122\",\"9.721119590103626\",\"5.323231453076005\",\"7.886897064745426\",\"7.864541232585907\",\"7.574615128338337\",\"10.598645154386759\",\"7.047202989459038\",\"6.131767854094505\",\"5.111481446772814\",\"5.8071994837373495\",\"2.8043092247098684\",\"4.782666385173798\",\"2.9558798186481\",\"3.883523179218173\",\"4.341398486867547\"],\"y\":[\"Erling Haaland\",\"Mohamed Salah\",\"Son Heung-Min\",\"Jarrod Bowen\",\"Ollie Watkins\",\"Dominic Solanke\",\"Hee-Chan Hwang\",\"Callum Wilson\",\"Alexander Isak\",\"Bryan Mbeumo\",\"Nicolas Jackson\",\"Abdoulaye Doucour\\u00e9\",\"Odsonne Edouard\",\"Anthony Gordon\",\"Cole Palmer\",\"Evan Ferguson\",\"Raheem Sterling\",\"Leon Bailey\",\"Scott McTominay\",\"Douglas Luiz\"],\"type\":\"scatter\"}],                        {\"template\":{\"data\":{\"histogram2dcontour\":[{\"type\":\"histogram2dcontour\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"choropleth\":[{\"type\":\"choropleth\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"histogram2d\":[{\"type\":\"histogram2d\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"heatmap\":[{\"type\":\"heatmap\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"heatmapgl\":[{\"type\":\"heatmapgl\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"contourcarpet\":[{\"type\":\"contourcarpet\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"contour\":[{\"type\":\"contour\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"surface\":[{\"type\":\"surface\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"mesh3d\":[{\"type\":\"mesh3d\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"scatter\":[{\"fillpattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2},\"type\":\"scatter\"}],\"parcoords\":[{\"type\":\"parcoords\",\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterpolargl\":[{\"type\":\"scatterpolargl\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"bar\":[{\"error_x\":{\"color\":\"#2a3f5f\"},\"error_y\":{\"color\":\"#2a3f5f\"},\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"bar\"}],\"scattergeo\":[{\"type\":\"scattergeo\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterpolar\":[{\"type\":\"scatterpolar\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"histogram\":[{\"marker\":{\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"histogram\"}],\"scattergl\":[{\"type\":\"scattergl\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatter3d\":[{\"type\":\"scatter3d\",\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scattermapbox\":[{\"type\":\"scattermapbox\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterternary\":[{\"type\":\"scatterternary\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scattercarpet\":[{\"type\":\"scattercarpet\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"carpet\":[{\"aaxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"baxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"type\":\"carpet\"}],\"table\":[{\"cells\":{\"fill\":{\"color\":\"#EBF0F8\"},\"line\":{\"color\":\"white\"}},\"header\":{\"fill\":{\"color\":\"#C8D4E3\"},\"line\":{\"color\":\"white\"}},\"type\":\"table\"}],\"barpolar\":[{\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"barpolar\"}],\"pie\":[{\"automargin\":true,\"type\":\"pie\"}]},\"layout\":{\"autotypenumbers\":\"strict\",\"colorway\":[\"#636efa\",\"#EF553B\",\"#00cc96\",\"#ab63fa\",\"#FFA15A\",\"#19d3f3\",\"#FF6692\",\"#B6E880\",\"#FF97FF\",\"#FECB52\"],\"font\":{\"color\":\"#2a3f5f\"},\"hovermode\":\"closest\",\"hoverlabel\":{\"align\":\"left\"},\"paper_bgcolor\":\"white\",\"plot_bgcolor\":\"#E5ECF6\",\"polar\":{\"bgcolor\":\"#E5ECF6\",\"angularaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"radialaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"ternary\":{\"bgcolor\":\"#E5ECF6\",\"aaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"baxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"caxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"coloraxis\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"colorscale\":{\"sequential\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"sequentialminus\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"diverging\":[[0,\"#8e0152\"],[0.1,\"#c51b7d\"],[0.2,\"#de77ae\"],[0.3,\"#f1b6da\"],[0.4,\"#fde0ef\"],[0.5,\"#f7f7f7\"],[0.6,\"#e6f5d0\"],[0.7,\"#b8e186\"],[0.8,\"#7fbc41\"],[0.9,\"#4d9221\"],[1,\"#276419\"]]},\"xaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"automargin\":true,\"zerolinewidth\":2},\"yaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"automargin\":true,\"zerolinewidth\":2},\"scene\":{\"xaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2},\"yaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2},\"zaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2}},\"shapedefaults\":{\"line\":{\"color\":\"#2a3f5f\"}},\"annotationdefaults\":{\"arrowcolor\":\"#2a3f5f\",\"arrowhead\":0,\"arrowwidth\":1},\"geo\":{\"bgcolor\":\"white\",\"landcolor\":\"#E5ECF6\",\"subunitcolor\":\"white\",\"showland\":true,\"showlakes\":true,\"lakecolor\":\"white\"},\"title\":{\"x\":0.05},\"mapbox\":{\"style\":\"light\"}}},\"shapes\":[{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":14,\"x1\":\"16.727499932050705\",\"y0\":0,\"y1\":0},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":11,\"x1\":\"10.77229580283165\",\"y0\":1,\"y1\":1},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":10,\"x1\":\"6.780154183506966\",\"y0\":2,\"y1\":2},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":10,\"x1\":\"7.218599982559681\",\"y0\":3,\"y1\":3},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":9,\"x1\":\"10.049726076424122\",\"y0\":4,\"y1\":4},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":8,\"x1\":\"9.721119590103626\",\"y0\":5,\"y1\":5},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":8,\"x1\":\"5.323231453076005\",\"y0\":6,\"y1\":6},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":7,\"x1\":\"7.886897064745426\",\"y0\":7,\"y1\":7},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":7,\"x1\":\"7.864541232585907\",\"y0\":8,\"y1\":8},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":7,\"x1\":\"7.574615128338337\",\"y0\":9,\"y1\":9},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":7,\"x1\":\"10.598645154386759\",\"y0\":10,\"y1\":10},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":6,\"x1\":\"7.047202989459038\",\"y0\":11,\"y1\":11},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":6,\"x1\":\"6.131767854094505\",\"y0\":12,\"y1\":12},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":6,\"x1\":\"5.111481446772814\",\"y0\":13,\"y1\":13},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":6,\"x1\":\"5.8071994837373495\",\"y0\":14,\"y1\":14},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":6,\"x1\":\"2.8043092247098684\",\"y0\":15,\"y1\":15},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":5,\"x1\":\"4.782666385173798\",\"y0\":16,\"y1\":16},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":5,\"x1\":\"2.9558798186481\",\"y0\":17,\"y1\":17},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":5,\"x1\":\"3.883523179218173\",\"y0\":18,\"y1\":18},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":5,\"x1\":\"4.341398486867547\",\"y0\":19,\"y1\":19}],\"title\":{\"font\":{\"size\":30},\"text\":\"Goals vs xG\"},\"xaxis\":{\"range\":[0,30]}},                        {\"responsive\": true}                    ).then(function(){\n",
              "                            \n",
              "var gd = document.getElementById('459e5bdf-7d8e-449a-9f8f-2be6260bd487');\n",
              "var x = new MutationObserver(function (mutations, observer) {{\n",
              "        var display = window.getComputedStyle(gd).display;\n",
              "        if (!display || display === 'none') {{\n",
              "            console.log([gd, 'removed!']);\n",
              "            Plotly.purge(gd);\n",
              "            observer.disconnect();\n",
              "        }}\n",
              "}});\n",
              "\n",
              "// Listen for the removal of the full notebook cells\n",
              "var notebookContainer = gd.closest('#notebook-container');\n",
              "if (notebookContainer) {{\n",
              "    x.observe(notebookContainer, {childList: true});\n",
              "}}\n",
              "\n",
              "// Listen for the clearing of the current output cell\n",
              "var outputEl = gd.closest('.output');\n",
              "if (outputEl) {{\n",
              "    x.observe(outputEl, {childList: true});\n",
              "}}\n",
              "\n",
              "                        })                };                            </script>        </div>\n",
              "</body>\n",
              "</html>"
            ]
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "seasonedit = one_game_df.drop(columns=[ 'yellow_cards','red_cards','time'])"
      ],
      "metadata": {
        "id": "zxhwefRPFQDN"
      },
      "execution_count": 64,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "top25assists.columns"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "wSmCXk6YFSz5",
        "outputId": "ba1328c6-d115-4032-bc06-17756be598bf"
      },
      "execution_count": 65,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Index(['id', 'player_name', 'games_x', 'time_x', 'goals_1wks_x', 'xG_1wks_x',\n",
              "       'assists_1wks_x', 'xA_1wks_x', 'shots_1wks_x', 'key_passes_1wks_x',\n",
              "       'yellow_cards_x', 'red_cards_x', 'position_x', 'team_title_x',\n",
              "       'npg_1wks_x', 'npxG_1wks_x', 'xGChain_x', 'xGBuildup_x', 'games_y',\n",
              "       'time_y', 'goals_season', 'xG_season', 'assists_season', 'xA_season',\n",
              "       'shots_season', 'key_passes_season', 'yellow_cards_y', 'red_cards_y',\n",
              "       'npg_season', 'npxG_season', 'xGChain_y', 'xGBuildup_y', 'games',\n",
              "       'time', 'goals_1wks_y', 'xG_1wks_y', 'assists_1wks_y', 'xA_1wks_y',\n",
              "       'shots_1wks_y', 'key_passes_1wks_y', 'yellow_cards', 'red_cards',\n",
              "       'position_y', 'team_title_y', 'npg_1wks_y', 'npxG_1wks_y', 'xGChain',\n",
              "       'xGBuildup', 'goals', 'assists'],\n",
              "      dtype='object')"
            ]
          },
          "metadata": {},
          "execution_count": 65
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "top20assists = top25assists.drop(columns=[ 'shots_1wks_x', 'key_passes_1wks_x',\n",
        "       'yellow_cards_x', 'red_cards_x', 'position_x', 'team_title_x',\n",
        "       'npg_1wks_x', 'npxG_1wks_x', 'xGChain_x', 'xGBuildup_x', 'games_y',\n",
        "       'time_y', 'goals_season', 'xG_season', 'assists_season', 'xA_season',\n",
        "       'shots_season', 'key_passes_season', 'yellow_cards_y', 'red_cards_y',\n",
        "       'npg_season', 'npxG_season', 'xGChain_y', 'xGBuildup_y', 'games',\n",
        "       'time', 'goals_1wks_y', 'xG_1wks_y', 'assists_1wks_y', 'xA_1wks_y',\n",
        "       'shots_1wks_y', 'key_passes_1wks_y', 'yellow_cards', 'red_cards',\n",
        "       'position_y', 'team_title_y', 'npg_1wks_y', 'npxG_1wks_y', 'xGChain',\n",
        "       'xGBuildup', 'assists_1wks_x', 'games_x', 'time_x', 'goals_1wks_x', 'id' ])\n",
        "\n",
        "top20assists.reset_index(inplace = True,drop = True)\n",
        "top20assists"
      ],
      "metadata": {
        "id": "_Xn659fiFXvb",
        "outputId": "a0e54175-2c1a-48c3-ef69-fadcb658d672",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 677
        }
      },
      "execution_count": 66,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "          player_name           xG_1wks_x           xA_1wks_x  goals  assists\n",
              "0       Mohamed Salah   10.77229580283165   7.441837605088949     11        7\n",
              "1          Pedro Neto  1.8730668723583221  3.4589802250266075      1        7\n",
              "2     Kieran Trippier  0.2488715760409832  6.4790212493389845      0        7\n",
              "3       Ollie Watkins  10.049726076424122  3.5883569810539484      9        6\n",
              "4         Bukayo Saka   5.912955973297358   5.649140641093254      5        6\n",
              "5         Leon Bailey     2.9558798186481  3.7413671016693115      5        5\n",
              "6        Darwin Núñez   9.099289217032492  3.0120091577991843      4        5\n",
              "7      Julián Álvarez   4.791475936770439   3.743379403837025      4        5\n",
              "8         Pascal Groß  2.6622488014400005   3.019582520239055      3        5\n",
              "9   James Ward-Prowse  2.8376943841576576  4.0053172037005424      3        5\n",
              "10     James Maddison   2.944616189226508  3.4641558043658733      3        5\n",
              "11        Jéremy Doku  1.2312334701418877   3.068725273013115      2        5\n",
              "12        Pedro Porro  1.7443204037845135   4.146158324554563      0        5\n",
              "13    Vladimir Coufal  0.0362556017935276   2.155784240923822      0        5\n",
              "14     Erling Haaland  16.727499932050705  3.2472310978919268     14        4\n",
              "15      Son Heung-Min   6.780154183506966   5.971939321607351     10        4\n",
              "16     Anthony Gordon   5.111481446772814   4.145725706592202      6        4\n",
              "17         Phil Foden   4.133061086758971  3.1315846741199493      4        4\n",
              "18       Moussa Diaby  2.8710350804030895   5.130432341247797      3        4\n",
              "19       Kaoru Mitoma   4.068928558379412  2.9180683754384518      3        4"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-96a69eeb-0efe-48c7-b93c-bd503ae9072e\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>player_name</th>\n",
              "      <th>xG_1wks_x</th>\n",
              "      <th>xA_1wks_x</th>\n",
              "      <th>goals</th>\n",
              "      <th>assists</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>Mohamed Salah</td>\n",
              "      <td>10.77229580283165</td>\n",
              "      <td>7.441837605088949</td>\n",
              "      <td>11</td>\n",
              "      <td>7</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Pedro Neto</td>\n",
              "      <td>1.8730668723583221</td>\n",
              "      <td>3.4589802250266075</td>\n",
              "      <td>1</td>\n",
              "      <td>7</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>Kieran Trippier</td>\n",
              "      <td>0.2488715760409832</td>\n",
              "      <td>6.4790212493389845</td>\n",
              "      <td>0</td>\n",
              "      <td>7</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>Ollie Watkins</td>\n",
              "      <td>10.049726076424122</td>\n",
              "      <td>3.5883569810539484</td>\n",
              "      <td>9</td>\n",
              "      <td>6</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>Bukayo Saka</td>\n",
              "      <td>5.912955973297358</td>\n",
              "      <td>5.649140641093254</td>\n",
              "      <td>5</td>\n",
              "      <td>6</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>Leon Bailey</td>\n",
              "      <td>2.9558798186481</td>\n",
              "      <td>3.7413671016693115</td>\n",
              "      <td>5</td>\n",
              "      <td>5</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>Darwin Núñez</td>\n",
              "      <td>9.099289217032492</td>\n",
              "      <td>3.0120091577991843</td>\n",
              "      <td>4</td>\n",
              "      <td>5</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>Julián Álvarez</td>\n",
              "      <td>4.791475936770439</td>\n",
              "      <td>3.743379403837025</td>\n",
              "      <td>4</td>\n",
              "      <td>5</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>Pascal Groß</td>\n",
              "      <td>2.6622488014400005</td>\n",
              "      <td>3.019582520239055</td>\n",
              "      <td>3</td>\n",
              "      <td>5</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>James Ward-Prowse</td>\n",
              "      <td>2.8376943841576576</td>\n",
              "      <td>4.0053172037005424</td>\n",
              "      <td>3</td>\n",
              "      <td>5</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10</th>\n",
              "      <td>James Maddison</td>\n",
              "      <td>2.944616189226508</td>\n",
              "      <td>3.4641558043658733</td>\n",
              "      <td>3</td>\n",
              "      <td>5</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>11</th>\n",
              "      <td>Jéremy Doku</td>\n",
              "      <td>1.2312334701418877</td>\n",
              "      <td>3.068725273013115</td>\n",
              "      <td>2</td>\n",
              "      <td>5</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>12</th>\n",
              "      <td>Pedro Porro</td>\n",
              "      <td>1.7443204037845135</td>\n",
              "      <td>4.146158324554563</td>\n",
              "      <td>0</td>\n",
              "      <td>5</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>13</th>\n",
              "      <td>Vladimir Coufal</td>\n",
              "      <td>0.0362556017935276</td>\n",
              "      <td>2.155784240923822</td>\n",
              "      <td>0</td>\n",
              "      <td>5</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>14</th>\n",
              "      <td>Erling Haaland</td>\n",
              "      <td>16.727499932050705</td>\n",
              "      <td>3.2472310978919268</td>\n",
              "      <td>14</td>\n",
              "      <td>4</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>15</th>\n",
              "      <td>Son Heung-Min</td>\n",
              "      <td>6.780154183506966</td>\n",
              "      <td>5.971939321607351</td>\n",
              "      <td>10</td>\n",
              "      <td>4</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>16</th>\n",
              "      <td>Anthony Gordon</td>\n",
              "      <td>5.111481446772814</td>\n",
              "      <td>4.145725706592202</td>\n",
              "      <td>6</td>\n",
              "      <td>4</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>17</th>\n",
              "      <td>Phil Foden</td>\n",
              "      <td>4.133061086758971</td>\n",
              "      <td>3.1315846741199493</td>\n",
              "      <td>4</td>\n",
              "      <td>4</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>18</th>\n",
              "      <td>Moussa Diaby</td>\n",
              "      <td>2.8710350804030895</td>\n",
              "      <td>5.130432341247797</td>\n",
              "      <td>3</td>\n",
              "      <td>4</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>19</th>\n",
              "      <td>Kaoru Mitoma</td>\n",
              "      <td>4.068928558379412</td>\n",
              "      <td>2.9180683754384518</td>\n",
              "      <td>3</td>\n",
              "      <td>4</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-96a69eeb-0efe-48c7-b93c-bd503ae9072e')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-96a69eeb-0efe-48c7-b93c-bd503ae9072e button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-96a69eeb-0efe-48c7-b93c-bd503ae9072e');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-7fd94e98-7b20-4e14-8688-a3c6e03cd871\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-7fd94e98-7b20-4e14-8688-a3c6e03cd871')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-7fd94e98-7b20-4e14-8688-a3c6e03cd871 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 66
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "fig4= go.Figure()\n",
        "fig4.add_trace(go.Scatter(x = top20assists[\"assists\"],\n",
        "                          y = top20assists[\"player_name\"],\n",
        "                          mode = 'markers',\n",
        "                          marker_color = 'darkblue',\n",
        "                          marker_size = 10,\n",
        "                          name = 'assists'))\n",
        "fig4.add_trace(go.Scatter(x = top20assists[\"xA_1wks_x\"],\n",
        "                          y = top20assists[\"player_name\"],\n",
        "                          mode = 'markers',\n",
        "                          marker_color = 'darkorange',\n",
        "                          marker_size = 10,\n",
        "                          name = 'xA'))\n",
        "for i in range(0, len(top20assists)):\n",
        "               fig4.add_shape(type='line',\n",
        "                              x0 = top20assists['assists'][i],\n",
        "                              y0 = i,\n",
        "                              x1 = top20assists[\"xA_1wks_x\"][i],\n",
        "                              y1 = i,\n",
        "                              line=dict(color='crimson', width = 3))\n",
        "fig4.update_layout(title_text =\n",
        "                    \"assists vs xA\",\n",
        "                    title_font_size = 15)\n",
        "fig4.update_xaxes(range=[0, 15])\n",
        "fig4.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 542
        },
        "id": "P6oVjqCSF4Pw",
        "outputId": "a2793776-7f47-4397-d932-08f3baae93b3"
      },
      "execution_count": 67,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<html>\n",
              "<head><meta charset=\"utf-8\" /></head>\n",
              "<body>\n",
              "    <div>            <script src=\"https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.5/MathJax.js?config=TeX-AMS-MML_SVG\"></script><script type=\"text/javascript\">if (window.MathJax && window.MathJax.Hub && window.MathJax.Hub.Config) {window.MathJax.Hub.Config({SVG: {font: \"STIX-Web\"}});}</script>                <script type=\"text/javascript\">window.PlotlyConfig = {MathJaxConfig: 'local'};</script>\n",
              "        <script charset=\"utf-8\" src=\"https://cdn.plot.ly/plotly-2.24.1.min.js\"></script>                <div id=\"d756ee88-a5b8-4879-aeeb-5edfa8e02699\" class=\"plotly-graph-div\" style=\"height:525px; width:100%;\"></div>            <script type=\"text/javascript\">                                    window.PLOTLYENV=window.PLOTLYENV || {};                                    if (document.getElementById(\"d756ee88-a5b8-4879-aeeb-5edfa8e02699\")) {                    Plotly.newPlot(                        \"d756ee88-a5b8-4879-aeeb-5edfa8e02699\",                        [{\"marker\":{\"color\":\"darkblue\",\"size\":10},\"mode\":\"markers\",\"name\":\"assists\",\"x\":[7,7,7,6,6,5,5,5,5,5,5,5,5,5,4,4,4,4,4,4],\"y\":[\"Mohamed Salah\",\"Pedro Neto\",\"Kieran Trippier\",\"Ollie Watkins\",\"Bukayo Saka\",\"Leon Bailey\",\"Darwin N\\u00fa\\u00f1ez\",\"Juli\\u00e1n \\u00c1lvarez\",\"Pascal Gro\\u00df\",\"James Ward-Prowse\",\"James Maddison\",\"J\\u00e9remy Doku\",\"Pedro Porro\",\"Vladimir Coufal\",\"Erling Haaland\",\"Son Heung-Min\",\"Anthony Gordon\",\"Phil Foden\",\"Moussa Diaby\",\"Kaoru Mitoma\"],\"type\":\"scatter\"},{\"marker\":{\"color\":\"darkorange\",\"size\":10},\"mode\":\"markers\",\"name\":\"xA\",\"x\":[\"7.441837605088949\",\"3.4589802250266075\",\"6.4790212493389845\",\"3.5883569810539484\",\"5.649140641093254\",\"3.7413671016693115\",\"3.0120091577991843\",\"3.743379403837025\",\"3.019582520239055\",\"4.0053172037005424\",\"3.4641558043658733\",\"3.068725273013115\",\"4.146158324554563\",\"2.155784240923822\",\"3.2472310978919268\",\"5.971939321607351\",\"4.145725706592202\",\"3.1315846741199493\",\"5.130432341247797\",\"2.9180683754384518\"],\"y\":[\"Mohamed Salah\",\"Pedro Neto\",\"Kieran Trippier\",\"Ollie Watkins\",\"Bukayo Saka\",\"Leon Bailey\",\"Darwin N\\u00fa\\u00f1ez\",\"Juli\\u00e1n \\u00c1lvarez\",\"Pascal Gro\\u00df\",\"James Ward-Prowse\",\"James Maddison\",\"J\\u00e9remy Doku\",\"Pedro Porro\",\"Vladimir Coufal\",\"Erling Haaland\",\"Son Heung-Min\",\"Anthony Gordon\",\"Phil Foden\",\"Moussa Diaby\",\"Kaoru Mitoma\"],\"type\":\"scatter\"}],                        {\"template\":{\"data\":{\"histogram2dcontour\":[{\"type\":\"histogram2dcontour\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"choropleth\":[{\"type\":\"choropleth\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"histogram2d\":[{\"type\":\"histogram2d\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"heatmap\":[{\"type\":\"heatmap\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"heatmapgl\":[{\"type\":\"heatmapgl\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"contourcarpet\":[{\"type\":\"contourcarpet\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"contour\":[{\"type\":\"contour\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"surface\":[{\"type\":\"surface\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"mesh3d\":[{\"type\":\"mesh3d\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"scatter\":[{\"fillpattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2},\"type\":\"scatter\"}],\"parcoords\":[{\"type\":\"parcoords\",\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterpolargl\":[{\"type\":\"scatterpolargl\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"bar\":[{\"error_x\":{\"color\":\"#2a3f5f\"},\"error_y\":{\"color\":\"#2a3f5f\"},\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"bar\"}],\"scattergeo\":[{\"type\":\"scattergeo\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterpolar\":[{\"type\":\"scatterpolar\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"histogram\":[{\"marker\":{\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"histogram\"}],\"scattergl\":[{\"type\":\"scattergl\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatter3d\":[{\"type\":\"scatter3d\",\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scattermapbox\":[{\"type\":\"scattermapbox\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterternary\":[{\"type\":\"scatterternary\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scattercarpet\":[{\"type\":\"scattercarpet\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"carpet\":[{\"aaxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"baxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"type\":\"carpet\"}],\"table\":[{\"cells\":{\"fill\":{\"color\":\"#EBF0F8\"},\"line\":{\"color\":\"white\"}},\"header\":{\"fill\":{\"color\":\"#C8D4E3\"},\"line\":{\"color\":\"white\"}},\"type\":\"table\"}],\"barpolar\":[{\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"barpolar\"}],\"pie\":[{\"automargin\":true,\"type\":\"pie\"}]},\"layout\":{\"autotypenumbers\":\"strict\",\"colorway\":[\"#636efa\",\"#EF553B\",\"#00cc96\",\"#ab63fa\",\"#FFA15A\",\"#19d3f3\",\"#FF6692\",\"#B6E880\",\"#FF97FF\",\"#FECB52\"],\"font\":{\"color\":\"#2a3f5f\"},\"hovermode\":\"closest\",\"hoverlabel\":{\"align\":\"left\"},\"paper_bgcolor\":\"white\",\"plot_bgcolor\":\"#E5ECF6\",\"polar\":{\"bgcolor\":\"#E5ECF6\",\"angularaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"radialaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"ternary\":{\"bgcolor\":\"#E5ECF6\",\"aaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"baxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"caxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"coloraxis\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"colorscale\":{\"sequential\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"sequentialminus\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"diverging\":[[0,\"#8e0152\"],[0.1,\"#c51b7d\"],[0.2,\"#de77ae\"],[0.3,\"#f1b6da\"],[0.4,\"#fde0ef\"],[0.5,\"#f7f7f7\"],[0.6,\"#e6f5d0\"],[0.7,\"#b8e186\"],[0.8,\"#7fbc41\"],[0.9,\"#4d9221\"],[1,\"#276419\"]]},\"xaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"automargin\":true,\"zerolinewidth\":2},\"yaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"automargin\":true,\"zerolinewidth\":2},\"scene\":{\"xaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2},\"yaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2},\"zaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2}},\"shapedefaults\":{\"line\":{\"color\":\"#2a3f5f\"}},\"annotationdefaults\":{\"arrowcolor\":\"#2a3f5f\",\"arrowhead\":0,\"arrowwidth\":1},\"geo\":{\"bgcolor\":\"white\",\"landcolor\":\"#E5ECF6\",\"subunitcolor\":\"white\",\"showland\":true,\"showlakes\":true,\"lakecolor\":\"white\"},\"title\":{\"x\":0.05},\"mapbox\":{\"style\":\"light\"}}},\"shapes\":[{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":7,\"x1\":\"7.441837605088949\",\"y0\":0,\"y1\":0},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":7,\"x1\":\"3.4589802250266075\",\"y0\":1,\"y1\":1},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":7,\"x1\":\"6.4790212493389845\",\"y0\":2,\"y1\":2},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":6,\"x1\":\"3.5883569810539484\",\"y0\":3,\"y1\":3},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":6,\"x1\":\"5.649140641093254\",\"y0\":4,\"y1\":4},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":5,\"x1\":\"3.7413671016693115\",\"y0\":5,\"y1\":5},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":5,\"x1\":\"3.0120091577991843\",\"y0\":6,\"y1\":6},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":5,\"x1\":\"3.743379403837025\",\"y0\":7,\"y1\":7},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":5,\"x1\":\"3.019582520239055\",\"y0\":8,\"y1\":8},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":5,\"x1\":\"4.0053172037005424\",\"y0\":9,\"y1\":9},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":5,\"x1\":\"3.4641558043658733\",\"y0\":10,\"y1\":10},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":5,\"x1\":\"3.068725273013115\",\"y0\":11,\"y1\":11},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":5,\"x1\":\"4.146158324554563\",\"y0\":12,\"y1\":12},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":5,\"x1\":\"2.155784240923822\",\"y0\":13,\"y1\":13},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":4,\"x1\":\"3.2472310978919268\",\"y0\":14,\"y1\":14},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":4,\"x1\":\"5.971939321607351\",\"y0\":15,\"y1\":15},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":4,\"x1\":\"4.145725706592202\",\"y0\":16,\"y1\":16},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":4,\"x1\":\"3.1315846741199493\",\"y0\":17,\"y1\":17},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":4,\"x1\":\"5.130432341247797\",\"y0\":18,\"y1\":18},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":4,\"x1\":\"2.9180683754384518\",\"y0\":19,\"y1\":19}],\"title\":{\"font\":{\"size\":15},\"text\":\"assists vs xA\"},\"xaxis\":{\"range\":[0,15]}},                        {\"responsive\": true}                    ).then(function(){\n",
              "                            \n",
              "var gd = document.getElementById('d756ee88-a5b8-4879-aeeb-5edfa8e02699');\n",
              "var x = new MutationObserver(function (mutations, observer) {{\n",
              "        var display = window.getComputedStyle(gd).display;\n",
              "        if (!display || display === 'none') {{\n",
              "            console.log([gd, 'removed!']);\n",
              "            Plotly.purge(gd);\n",
              "            observer.disconnect();\n",
              "        }}\n",
              "}});\n",
              "\n",
              "// Listen for the removal of the full notebook cells\n",
              "var notebookContainer = gd.closest('#notebook-container');\n",
              "if (notebookContainer) {{\n",
              "    x.observe(notebookContainer, {childList: true});\n",
              "}}\n",
              "\n",
              "// Listen for the clearing of the current output cell\n",
              "var outputEl = gd.closest('.output');\n",
              "if (outputEl) {{\n",
              "    x.observe(outputEl, {childList: true});\n",
              "}}\n",
              "\n",
              "                        })                };                            </script>        </div>\n",
              "</body>\n",
              "</html>"
            ]
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import pandas as pd\n",
        "import matplotlib.pyplot as plt\n",
        "\n",
        "# Assuming you have already loaded the DataFrame named 'Top50'\n",
        "\n",
        "# Filter the DataFrame by position type\n",
        "midfielders = Top50[Top50['pos'] == 'M']\n",
        "forwards = Top50[Top50['pos'] == 'F']\n",
        "defenders = Top50[Top50['pos'] == 'D']\n",
        "\n",
        "# Sort the filtered DataFrames by '5GW Total' in descending order\n",
        "midfielders = midfielders.sort_values(by='5GW Total', ascending=False)\n",
        "forwards = forwards.sort_values(by='5GW Total', ascending=False)\n",
        "defenders = defenders.sort_values(by='5GW Total', ascending=False)\n",
        "\n",
        "# Plotting the bar charts\n",
        "plt.figure(figsize=(12, 6))\n",
        "\n",
        "# Midfielders chart\n",
        "plt.subplot(131)\n",
        "plt.bar(midfielders['name'][:10], midfielders['5GW Total'][:10])\n",
        "plt.title('Top 10 Midfielders by 5GW Total')\n",
        "plt.xticks(rotation=45)\n",
        "\n",
        "# Forwards chart\n",
        "plt.subplot(132)\n",
        "plt.bar(forwards['name'][:10], forwards['5GW Total'][:10])\n",
        "plt.title('Top 10 Forwards by 5GW Total')\n",
        "plt.xticks(rotation=45)\n",
        "\n",
        "# Defenders chart\n",
        "plt.subplot(133)\n",
        "plt.bar(defenders['name'][:10], defenders['5GW Total'][:10])\n",
        "plt.title('Top 10 Defenders by 5GW Total')\n",
        "plt.xticks(rotation=45)\n",
        "\n",
        "plt.tight_layout()\n",
        "plt.show()\n"
      ],
      "metadata": {
        "id": "FN06IYwSKGLw",
        "outputId": "989dd5ca-25f9-4beb-c135-8dad0fe36c43",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 601
        }
      },
      "execution_count": 68,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1200x600 with 3 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import pandas as pd\n",
        "import matplotlib.pyplot as plt\n",
        "\n",
        "# Assuming you have already loaded the DataFrame named 'Top50'\n",
        "\n",
        "# Filter the DataFrame by position type\n",
        "midfielders = Top50[Top50['pos'] == 'M']\n",
        "forwards = Top50[Top50['pos'] == 'F']\n",
        "defenders = Top50[Top50['pos'] == 'D']\n",
        "\n",
        "# Sort the filtered DataFrames by '5GW Total' in descending order\n",
        "midfielders = midfielders.sort_values(by='5GW Total', ascending=False)\n",
        "forwards = forwards.sort_values(by='5GW Total', ascending=False)\n",
        "defenders = defenders.sort_values(by='5GW Total', ascending=False)\n",
        "\n",
        "# Create a list of colors for each chart\n",
        "colors = ['blue', 'green', 'red']\n",
        "\n",
        "# Plotting the horizontal bar charts with different colors\n",
        "plt.figure(figsize=(10, 6))\n",
        "\n",
        "# Midfielders chart\n",
        "plt.barh(midfielders['name'][:10], midfielders['5GW Total'][:10], color=colors[0])\n",
        "plt.title('Top 10 Midfielders by 5GW Total')\n",
        "plt.xlabel('5GW Total')\n",
        "plt.gca().invert_yaxis()  # Invert y-axis to have higher values at the top\n",
        "\n",
        "# Forwards chart\n",
        "plt.figure(figsize=(10, 6))\n",
        "plt.barh(forwards['name'][:10], forwards['5GW Total'][:10], color=colors[1])\n",
        "plt.title('Top 10 Forwards by 5GW Total')\n",
        "plt.xlabel('5GW Total')\n",
        "plt.gca().invert_yaxis()  # Invert y-axis to have higher values at the top\n",
        "\n",
        "# Defenders chart\n",
        "plt.figure(figsize=(10, 6))\n",
        "plt.barh(defenders['name'][:10], defenders['5GW Total'][:10], color=colors[2])\n",
        "plt.title('Top 10 Defenders by 5GW Total')\n",
        "plt.xlabel('5GW Total')\n",
        "plt.gca().invert_yaxis()  # Invert y-axis to have higher values at the top\n",
        "\n",
        "plt.tight_layout()\n",
        "plt.show()\n"
      ],
      "metadata": {
        "id": "VSYcUse-SrV-",
        "outputId": "3248fa86-53ed-447e-f64b-689876f17749",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        }
      },
      "execution_count": 69,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1000x600 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1000x600 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1000x600 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import pandas as pd\n",
        "import seaborn as sns\n",
        "import matplotlib.pyplot as plt\n",
        "\n",
        "# Assuming you have already loaded the DataFrame named 'gwadjustments26'\n",
        "\n",
        "# Set the index column\n",
        "gw17adjustments.set_index('team', inplace=True)\n",
        "\n",
        "# Create a color map\n",
        "cmap = sns.diverging_palette(240, 10, as_cmap=True)\n",
        "\n",
        "# Plot the heatmap\n",
        "plt.figure(figsize=(8, 6))\n",
        "sns.heatmap(gw17adjustments, annot=True, cmap=cmap, center=0)\n",
        "plt.title('Color-Coded Table of GW Adjustments')\n",
        "plt.show()\n"
      ],
      "metadata": {
        "id": "X2DQdb15YZfr",
        "outputId": "e7411633-cb53-49c1-aa85-7cb4cc51eba4",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 245
        }
      },
      "execution_count": 70,
      "outputs": [
        {
          "output_type": "error",
          "ename": "NameError",
          "evalue": "ignored",
          "traceback": [
            "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
            "\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)",
            "\u001b[0;32m<ipython-input-70-59a431ede14a>\u001b[0m in \u001b[0;36m<cell line: 8>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      6\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      7\u001b[0m \u001b[0;31m# Set the index column\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 8\u001b[0;31m \u001b[0mgw17adjustments\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mset_index\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m'team'\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0minplace\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mTrue\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      9\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     10\u001b[0m \u001b[0;31m# Create a color map\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;31mNameError\u001b[0m: name 'gw17adjustments' is not defined"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "plt.figure(figsize=(10, 6))\n",
        "\n",
        "scores_columns = ['gw17adjustment', 'gw18adjustment', 'gw19adjustment', 'gw20adjustment', 'gw21adjustment']\n",
        "\n",
        "bottom = [0] * len(gwadjustments17)\n",
        "\n",
        "for score_col in scores_columns:\n",
        "    plt.bar(gwadjustments26.index, gwadjustments26[score_col], bottom=bottom, label=score_col)\n",
        "    bottom += gwadjustments26[score_col]\n",
        "\n",
        "plt.xlabel('Teams')\n",
        "plt.ylabel('Score Adjustments')\n",
        "plt.title('Stacked GW Adjustments for Different Teams')\n",
        "plt.xticks(rotation=45)\n",
        "plt.legend()\n",
        "plt.tight_layout()\n",
        "\n",
        "plt.show()\n"
      ],
      "metadata": {
        "id": "z7T7SgQSYyL8"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "plt.figure(figsize=(10, 6))\n",
        "\n",
        "# Calculate the total score adjustments for each team\n",
        "gwadjustments26['Total'] = gwadjustments26.sum(axis=1)\n",
        "\n",
        "# Sort the DataFrame by the 'Total' column in descending order\n",
        "gwadjustments26 = gwadjustments26.sort_values(by='Total', ascending=False)\n",
        "\n",
        "# Get the scores columns\n",
        "scores_columns = ['gw2adjustment', 'gw3adjustment', 'gw4adjustment', 'gw5adjustment', 'gw6adjustment']\n",
        "\n",
        "bottom = [0] * len(gwadjustments26)\n",
        "\n",
        "for score_col in scores_columns:\n",
        "    plt.bar(gwadjustments26.index, gwadjustments26[score_col], bottom=bottom, label=score_col)\n",
        "    bottom += gwadjustments26[score_col]\n",
        "\n",
        "plt.xlabel('Teams')\n",
        "plt.ylabel('Score Adjustments')\n",
        "plt.title('Stacked GW Adjustments for Different Teams')\n",
        "plt.xticks(rotation=45)\n",
        "plt.legend()\n",
        "plt.tight_layout()\n",
        "\n",
        "plt.show()\n"
      ],
      "metadata": {
        "id": "XxE_pa9xZB8N"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "import pandas as pd\n",
        "import seaborn as sns\n",
        "import matplotlib.pyplot as plt\n",
        "\n",
        "# Assuming you have already loaded the DataFrame named 'gwadjustments26'\n",
        "\n",
        "# Set the index column\n",
        "gwadjustments26.set_index('team', inplace=True)\n",
        "\n",
        "# Create a custom color map\n",
        "cmap = sns.diverging_palette(240, 10, n=21, as_cmap=True)\n",
        "colors = ['red', 'orange', 'green']\n",
        "\n",
        "# Define color thresholds\n",
        "color_thresholds = [0.9, 1.1, 2.0]\n",
        "\n",
        "# Normalize values for coloring\n",
        "normalized_values = (gwadjustments26 - 0.9) / (2.0 - 0.9)\n",
        "\n",
        "# Apply color map and thresholds\n",
        "colored_values = pd.cut(normalized_values, bins=color_thresholds, labels=colors)\n",
        "\n",
        "# Plot the heatmap with customized color coding\n",
        "plt.figure(figsize=(8, 6))\n",
        "sns.heatmap(normalized_values, annot=True, cmap=cmap, center=1, cbar=False, fmt=\".2f\", linewidths=0.5, linecolor='white')\n",
        "plt.title('Custom Color-Coded Table of GW Adjustments')\n",
        "plt.xticks(rotation=45)\n",
        "plt.show()\n"
      ],
      "metadata": {
        "id": "_YnxO1yMZekH"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "plt.figure(figsize=(10, 8))\n",
        "\n",
        "# Calculate the total score adjustments for each team\n",
        "gwadjustments26['Total'] = gwadjustments26.sum(axis=1)\n",
        "\n",
        "# Sort the DataFrame by the 'Total' column in descending order\n",
        "gwadjustments26 = gwadjustments26.sort_values(by='Total', ascending=False)\n",
        "\n",
        "# Get the scores columns\n",
        "scores_columns = ['gw2adjustment', 'gw3adjustment', 'gw4adjustment', 'gw5adjustment', 'gw6adjustment']\n",
        "\n",
        "# Define color thresholds and corresponding colors\n",
        "color_thresholds = [0.9, 1.1, 2.0]\n",
        "colors = ['red', 'orange', 'green']\n",
        "\n",
        "bottom = [0] * len(gwadjustments26)\n",
        "\n",
        "for score_col in scores_columns:\n",
        "    adjusted_values = gwadjustments26[score_col]\n",
        "\n",
        "    # Create a color list based on thresholds\n",
        "    colors_for_col = [colors[-1] if val is None else\n",
        "                      colors[0] if val < color_thresholds[0] else\n",
        "                      colors[1] if val <= color_thresholds[1] else\n",
        "                      colors[2]\n",
        "                      for val in adjusted_values]\n",
        "\n",
        "    for i, (val, color) in enumerate(zip(adjusted_values, colors_for_col)):\n",
        "        plt.barh(gwadjustments26.index[i], val, color=color, edgecolor='white')\n",
        "\n",
        "    bottom += adjusted_values\n",
        "\n",
        "plt.xlabel('Score Adjustments')\n",
        "plt.ylabel('Teams')\n",
        "plt.title('Horizontally Stacked GW Adjustments for Different Teams')\n",
        "plt.legend(labels=scores_columns)\n",
        "plt.gca().invert_yaxis()  # Invert y-axis to have higher values at the top\n",
        "plt.tight_layout()\n",
        "\n",
        "plt.show()\n"
      ],
      "metadata": {
        "id": "5agSlfUragM2"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "import requests\n",
        "import pandas as pd\n",
        "from urllib.request import urlopen\n",
        "from json import loads\n",
        "from csv import writer\n",
        "\n",
        "def team_converter(team_id):\n",
        "    '''Converts a team's ID to their actual name'''\n",
        "    team_map = {\n",
        "        1: \"Arsenal\",\n",
        "        2: \"Aston Villa\",\n",
        "        3: \"Bournemouth\",\n",
        "        4: \"Brentford\",\n",
        "        5: \"Brighton\",\n",
        "        6: \"Burnley\",\n",
        "        7: \"Chelsea\",\n",
        "        8: \"Crystal Palace\",\n",
        "        9: \"Everton\",\n",
        "        10: \"Fulham\",\n",
        "        11: \"Liverpool\",\n",
        "        12: \"Luton Town\",\n",
        "        13: \"Manchester City\",\n",
        "        14: \"Manchester United\",\n",
        "        15: \"Newcastle United\",\n",
        "        16: \"Nottingham Forest\",\n",
        "        17: \"Sheffield United\",\n",
        "        18: \"Tottenham\",\n",
        "        19: \"West Ham\",\n",
        "        20: \"Wolverhampton Wanderers\",\n",
        "        None: None\n",
        "    }\n",
        "    return team_map.get(team_id, None)  # Use get to handle missing team IDs\n",
        "\n",
        "def position_converter(position):\n",
        "    '''Converts a player's element_type to their actual position'''\n",
        "    position_map = {\n",
        "        1: \"Goalkeeper\",\n",
        "        2: \"Defender\",\n",
        "        3: \"Midfielder\",\n",
        "        4: \"Forward\"\n",
        "    }\n",
        "    return position_map.get(position, None)  # Use get to handle missing positions\n",
        "\n",
        "def main():\n",
        "    team_entry_id = 6388102\n",
        "    url = f'https://fantasy.premierleague.com/api/entry/{team_entry_id}/transfers'\n",
        "\n",
        "    try:\n",
        "        response = requests.get(url)\n",
        "        response.raise_for_status()  # Check for any HTTP errors\n",
        "\n",
        "        transfers_data = response.json()\n",
        "\n",
        "        # Get player names from the provided API\n",
        "        player_ids_in = [transfer['element_in'] for transfer in transfers_data]\n",
        "        player_ids_out = [transfer.get('element_out', None) for transfer in transfers_data]\n",
        "\n",
        "        all_data = loads(urlopen(\"https://fantasy.premierleague.com/api/bootstrap-static/\").read())\n",
        "        players = all_data[\"elements\"]\n",
        "\n",
        "        # Build a dictionary of player names for players transferred in\n",
        "        player_names_in = {}\n",
        "        for player in players:\n",
        "            if player['id'] in player_ids_in:\n",
        "                player_names_in[player['id']] = f\"{player['first_name']} {player['second_name']}\"\n",
        "\n",
        "        # Build a dictionary of player names for players transferred out\n",
        "        player_names_out = {}\n",
        "        for player in players:\n",
        "            if player['id'] in player_ids_out:\n",
        "                player_names_out[player['id']] = f\"{player['first_name']} {player['second_name']}\"\n",
        "\n",
        "        # Replace player IDs with names and add additional data\n",
        "        transfer_data_with_info = []\n",
        "        for transfer in transfers_data:\n",
        "            player_in_name = player_names_in.get(transfer['element_in'], 'Unknown Player')\n",
        "            player_out_name = player_names_out.get(transfer['element_out'], 'Unknown Player') if transfer['element_out'] is not None else 'N/A'\n",
        "            transfer_info = {\n",
        "                'week': transfer['event'],\n",
        "                'player_in': player_in_name,\n",
        "                'player_out': player_out_name,\n",
        "                'cost_in': transfer['element_in_cost'] / 10,  # Convert to actual cost\n",
        "                'cost_out': transfer.get('element_out_cost', 0) / 10  # Convert to actual cost\n",
        "            }\n",
        "            transfer_data_with_info.append(transfer_info)\n",
        "\n",
        "        # Create a DataFrame\n",
        "        df = pd.DataFrame(transfer_data_with_info)\n",
        "\n",
        "        print(\"Transfers made by team entry\", team_entry_id)\n",
        "        print(df)\n",
        "\n",
        "    except requests.exceptions.HTTPError as errh:\n",
        "        print(\"HTTP Error:\", errh)\n",
        "    except requests.exceptions.ConnectionError as errc:\n",
        "        print(\"Error connecting:\", errc)\n",
        "    except requests.exceptions.Timeout as errt:\n",
        "        print(\"Timeout error:\", errt)\n",
        "    except requests.exceptions.RequestException as err:\n",
        "        print(\"An error occurred:\", err)\n",
        "\n",
        "if __name__ == \"__main__\":\n",
        "    main()\n"
      ],
      "metadata": {
        "id": "syMCbGo_mDoe"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "import requests\n",
        "import pandas as pd\n",
        "from urllib.request import urlopen\n",
        "from json import loads\n",
        "from csv import writer\n",
        "\n",
        "def team_converter(team_id):\n",
        "    '''Converts a team's ID to their actual name'''\n",
        "    team_map = {\n",
        "        1: \"Arsenal\",\n",
        "        2: \"Aston Villa\",\n",
        "        3: \"Bournemouth\",\n",
        "        4: \"Brentford\",\n",
        "        5: \"Brighton\",\n",
        "        6: \"Burnley\",\n",
        "        7: \"Chelsea\",\n",
        "        8: \"Crystal Palace\",\n",
        "        9: \"Everton\",\n",
        "        10: \"Fulham\",\n",
        "        11: \"Liverpool\",\n",
        "        12: \"Luton Town\",\n",
        "        13: \"Manchester City\",\n",
        "        14: \"Manchester United\",\n",
        "        15: \"Newcastle United\",\n",
        "        16: \"Nottingham Forest\",\n",
        "        17: \"Sheffield United\",\n",
        "        18: \"Tottenham\",\n",
        "        19: \"West Ham\",\n",
        "        20: \"Wolverhampton Wanderers\",\n",
        "        None: None\n",
        "    }\n",
        "    return team_map.get(team_id, None)  # Use get to handle missing team IDs\n",
        "\n",
        "def position_converter(position):\n",
        "    '''Converts a player's element_type to their actual position'''\n",
        "    position_map = {\n",
        "        1: \"Goalkeeper\",\n",
        "        2: \"Defender\",\n",
        "        3: \"Midfielder\",\n",
        "        4: \"Forward\"\n",
        "    }\n",
        "    return position_map.get(position, None)  # Use get to handle missing positions\n",
        "\n",
        "def main():\n",
        "    team_entry_id = 275269\n",
        "    url = f'https://fantasy.premierleague.com/api/entry/{team_entry_id}/transfers'\n",
        "\n",
        "    try:\n",
        "        response = requests.get(url)\n",
        "        response.raise_for_status()  # Check for any HTTP errors\n",
        "\n",
        "        transfers_data = response.json()\n",
        "\n",
        "        # Get player names from the provided API\n",
        "        player_ids_in = [transfer['element_in'] for transfer in transfers_data]\n",
        "        player_ids_out = [transfer.get('element_out', None) for transfer in transfers_data]\n",
        "\n",
        "        all_data = loads(urlopen(\"https://fantasy.premierleague.com/api/bootstrap-static/\").read())\n",
        "        players = all_data[\"elements\"]\n",
        "\n",
        "        # Build a dictionary of player names for players transferred in\n",
        "        player_names_in = {}\n",
        "        for player in players:\n",
        "            if player['id'] in player_ids_in:\n",
        "                player_names_in[player['id']] = f\"{player['first_name']} {player['second_name']}\"\n",
        "\n",
        "        # Build a dictionary of player names for players transferred out\n",
        "        player_names_out = {}\n",
        "        for player in players:\n",
        "            if player['id'] in player_ids_out:\n",
        "                player_names_out[player['id']] = f\"{player['first_name']} {player['second_name']}\"\n",
        "\n",
        "        # Replace player IDs with names and add additional data\n",
        "        transfer_data_with_info = []\n",
        "        for transfer in transfers_data:\n",
        "            player_in_name = player_names_in.get(transfer['element_in'], 'Unknown Player')\n",
        "            player_out_name = player_names_out.get(transfer['element_out'], 'Unknown Player') if transfer['element_out'] is not None else 'N/A'\n",
        "            transfer_info = {\n",
        "                'week': transfer['event'],\n",
        "                'player_in': player_in_name,\n",
        "                'player_out': player_out_name,\n",
        "                'cost_in': transfer['element_in_cost'] / 10,  # Convert to actual cost\n",
        "                'cost_out': transfer.get('element_out_cost', 0) / 10  # Convert to actual cost\n",
        "            }\n",
        "            transfer_data_with_info.append(transfer_info)\n",
        "\n",
        "        # Create a DataFrame\n",
        "        df = pd.DataFrame(transfer_data_with_info)\n",
        "\n",
        "        print(\"Transfers made by team entry\", team_entry_id)\n",
        "        print(df)\n",
        "\n",
        "    except requests.exceptions.HTTPError as errh:\n",
        "        print(\"HTTP Error:\", errh)\n",
        "    except requests.exceptions.ConnectionError as errc:\n",
        "        print(\"Error connecting:\", errc)\n",
        "    except requests.exceptions.Timeout as errt:\n",
        "        print(\"Timeout error:\", errt)\n",
        "    except requests.exceptions.RequestException as err:\n",
        "        print(\"An error occurred:\", err)\n",
        "\n",
        "if __name__ == \"__main__\":\n",
        "    main()\n"
      ],
      "metadata": {
        "id": "NxkG0V2Eq5BY"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "import pandas as pd\n",
        "\n",
        "fbref = pd.read_html('https://fbref.com/en/comps/9/Premier-League-Stats')\n",
        "epltable = fbref[0]\n",
        "epltablexGxGc = epltable.drop(columns=[\n",
        " 'Last 5',\n",
        " 'Attendance',\n",
        " 'Top Team Scorer',\n",
        " 'Goalkeeper',\n",
        " 'Notes'])\n",
        "\n",
        "epltablexGxGc = epltablexGxGc.replace('Newcastle Utd', 'Newcastle United')\n",
        "epltablexGxGc = epltablexGxGc.replace('Wolves','Wolverhampton Wanderers')\n",
        "epltablexGxGc = epltablexGxGc.replace('Leeds United','Leeds')\n",
        "epltablexGxGc = epltablexGxGc.replace('Leicester City','Leicester')\n",
        "epltablexGxGc = epltablexGxGc.replace('Manchester Utd','Manchester United')\n",
        "\n",
        "epltablexGxGc['Squad'] = epltablexGxGc['Squad'].str.replace(r\"[\\\"\\',]\", '')\n",
        "epltablexGxGc = epltablexGxGc.replace('Nottham Forest','Nottingham Forest')\n",
        "\n",
        "epltablexGxGc['xCSP'] = (4 - (epltablexGxGc.xGA * 4/23))\n",
        "epltablexGxGc.rename(columns={'Squad': 'Team'}, inplace=True)\n",
        "\n",
        "# Creating the new dataframe \"XGD current season\"\n",
        "xgd_current_season = epltablexGxGc[['Team', 'xGD']]\n",
        "\n",
        "# Displaying the new dataframe\n",
        "xgd_current_season"
      ],
      "metadata": {
        "id": "Wnf4ZUUeY4O6"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "import pandas as pd\n",
        "\n",
        "# Fetching data for XGD current season\n",
        "fbref_current_season = pd.read_html('https://fbref.com/en/comps/9/Premier-League-Stats')\n",
        "epltable_current_season = fbref_current_season[0]\n",
        "epltablexGxGc_current_season = epltable_current_season.drop(columns=[\n",
        " 'Last 5',\n",
        " 'Attendance',\n",
        " 'Top Team Scorer',\n",
        " 'Goalkeeper',\n",
        " 'Notes'])\n",
        "\n",
        "epltablexGxGc_current_season = epltablexGxGc_current_season.replace('Newcastle Utd', 'Newcastle United')\n",
        "epltablexGxGc_current_season = epltablexGxGc_current_season.replace('Wolves','Wolverhampton Wanderers')\n",
        "epltablexGxGc_current_season = epltablexGxGc_current_season.replace('Leeds United','Leeds')\n",
        "epltablexGxGc_current_season = epltablexGxGc_current_season.replace('Leicester City','Leicester')\n",
        "epltablexGxGc_current_season = epltablexGxGc_current_season.replace('Manchester Utd','Manchester United')\n",
        "\n",
        "epltablexGxGc_current_season['Squad'] = epltablexGxGc_current_season['Squad'].str.replace(r\"[\\\"\\',]\", '')\n",
        "epltablexGxGc_current_season = epltablexGxGc_current_season.replace('Nottham Forest','Nottingham Forest')\n",
        "\n",
        "epltablexGxGc_current_season.rename(columns={'Squad': 'Team'}, inplace=True)\n",
        "\n",
        "# Creating the XGD current season dataframe\n",
        "xgd_current_season = epltablexGxGc_current_season[['Team', 'xGD/90']]\n",
        "\n",
        "# Fetching data for XGD Last season\n",
        "fbref_last_season = pd.read_html('https://fbref.com/en/comps/9/2022-2023/2022-2023-Premier-League-Stats')\n",
        "epltable_last_season = fbref_last_season[0]\n",
        "epltablexGxGc_last_season = epltable_last_season.drop(columns=[\n",
        " 'Attendance',\n",
        " 'Top Team Scorer',\n",
        " 'Goalkeeper',\n",
        " 'Notes'])\n",
        "\n",
        "epltablexGxGc_last_season = epltablexGxGc_last_season.replace('Newcastle Utd', 'Newcastle United')\n",
        "epltablexGxGc_last_season = epltablexGxGc_last_season.replace('Wolves','Wolverhampton Wanderers')\n",
        "epltablexGxGc_last_season = epltablexGxGc_last_season.replace('Leeds United','Leeds')\n",
        "epltablexGxGc_last_season = epltablexGxGc_last_season.replace('Leicester City','Leicester')\n",
        "epltablexGxGc_last_season = epltablexGxGc_last_season.replace('Manchester Utd','Manchester United')\n",
        "\n",
        "epltablexGxGc_last_season['Squad'] = epltablexGxGc_last_season['Squad'].str.replace(r\"[\\\"\\',]\", '')\n",
        "epltablexGxGc_last_season = epltablexGxGc_last_season.replace('Nottham Forest','Nottingham Forest')\n",
        "\n",
        "epltablexGxGc_last_season.rename(columns={'Squad': 'Team'}, inplace=True)\n",
        "\n",
        "# Creating the XGD Last season dataframe\n",
        "xgd_last_season = epltablexGxGc_last_season[['Team', 'xGD/90']]\n",
        "\n",
        "# Merging the two dataframes\n",
        "merged_df = pd.merge(xgd_current_season, xgd_last_season, on='Team', suffixes=('_current', '_last'), how='outer')\n",
        "merged_df.fillna(0, inplace=True)\n",
        "\n",
        "# Displaying the merged dataframe\n",
        "merged_df_filtered = merged_df.copy()\n",
        "\n",
        "# Drop rows containing \"Leicester\", \"Leeds\", and \"Southampton\" from the filtered DataFrame\n",
        "merged_df_filtered = merged_df_filtered[~merged_df_filtered['Team'].isin(['Leicester', 'Leeds', 'Southampton'])]\n",
        "merged_df_filtered"
      ],
      "metadata": {
        "id": "vR0LGQqMZuC0"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "import matplotlib.pyplot as plt\n",
        "\n",
        "# Create the YoY difference column\n",
        "merged_df_filtered['YoY difference'] = merged_df_filtered['xGD/90_current'] - merged_df_filtered['xGD/90_last']\n",
        "\n",
        "# Sort the DataFrame by YoY difference in descending order\n",
        "merged_df_filtered_sorted = merged_df_filtered.sort_values('YoY difference', ascending=False)\n",
        "\n",
        "# Generate the horizontal bar chart\n",
        "plt.figure(figsize=(10, 6))\n",
        "plt.barh(merged_df_filtered_sorted['Team'], merged_df_filtered_sorted['YoY difference'])\n",
        "plt.xlabel('YoY difference')\n",
        "plt.ylabel('Team')\n",
        "plt.title('YoY Difference in xGD/90')\n",
        "plt.show()"
      ],
      "metadata": {
        "id": "xeGOFjAIe3e7"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "import matplotlib.pyplot as plt\n",
        "\n",
        "# Create the Derived team strength column\n",
        "merged_df_filtered['Derived team strength'] = (2/3) * merged_df_filtered['xGD/90_current'] + (1/3) * merged_df_filtered['xGD/90_last']\n",
        "\n",
        "# Sort the DataFrame by Derived team strength in descending order\n",
        "merged_df_filtered_sorted = merged_df_filtered.sort_values('Derived team strength', ascending=False)\n",
        "\n",
        "# Generate the horizontal bar chart\n",
        "plt.figure(figsize=(10, 6))\n",
        "plt.barh(merged_df_filtered_sorted['Team'], merged_df_filtered_sorted['Derived team strength'])\n",
        "plt.xlabel('Derived team strength')\n",
        "plt.ylabel('Team')\n",
        "plt.title('Derived Team Strength')\n",
        "plt.show()"
      ],
      "metadata": {
        "id": "QJhYVlGNf0MB"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "homesawayspi"
      ],
      "metadata": {
        "id": "MzKOf0lIgqmG"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "merged_df_filtered"
      ],
      "metadata": {
        "id": "hD36RY8Fg_p1"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "#!/usr/bin/env python3\n",
        "# -*- coding: utf-8 -*-\n",
        "\"\"\"\n",
        "Created on Mar 1 17:50:36 2020\n",
        "@author: doug hagey\n",
        "\"\"\"\n",
        "\n",
        "import pandas as pd\n",
        "import requests\n",
        "\n",
        "def scrape_understat(payload):\n",
        "    #Build request using url, headers (mimicking what Firefox does normally)\n",
        "    #Works best with verify=True as you won't get the ssl errors. Payload is\n",
        "    #taylored for each request\n",
        "    url = 'https://understat.com/main/getPlayersStats/'\n",
        "    headers = {'content-type':'application/json; charset=utf-8',\n",
        "    'Host': 'understat.com',\n",
        "    'User-Agent': 'Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:73.0) Gecko/20100101 Firefox/73.0',\n",
        "    'Accept': 'application/json, text/javascript, */*; q=0.01',\n",
        "    'Accept-Encoding': 'gzip, deflate, br',\n",
        "    'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8',\n",
        "    'X-Requested-With': 'XMLHttpRequest',\n",
        "    'Content-Length': '310',\n",
        "    'Origin': 'https: // understat.com',\n",
        "    'Connection': 'keep - alive',\n",
        "    'Referer': 'https: // understat.com / league / EPL'\n",
        "    }\n",
        "    response = requests.post(url, data=payload, headers = headers, verify=True)\n",
        "    response_json = response.json()\n",
        "    inner_wrapper = response_json['response']\n",
        "    json_player_data = inner_wrapper['players']\n",
        "    return json_player_data\n",
        "\n",
        "def clean_df(player_df, weeks):\n",
        "    # Get rid of the columns that we don't care about\n",
        "    player_df.drop(['yellow_cards','red_cards', 'xGChain','xGBuildup','games','time'], axis=1, inplace=True)\n",
        "    player_df  = player_df.rename(columns={'goals':'goals_'+weeks,'xG':'xG_'+weeks,'assists':'assists_'+weeks, 'xA':'xA_'+weeks, 'shots':'shots_'+weeks, 'key_passes':\n",
        "        'key_passes_'+weeks,'npg':'npg_'+weeks,'npxG':'npxG_'+weeks})\n",
        "    return(player_df)\n",
        "\n",
        "#Creprint('Getting data for last 5 matches')\n",
        "json_player_data = scrape_understat({'league':'EPL', 'season':'2023', 'n_last_matches': '5'})\n",
        "five_game_table = pd.DataFrame(json_player_data)\n",
        "five_game_df = clean_df(five_game_table,'5wks')\n",
        "\n",
        "\n",
        "print('Getting data for the whole season')\n",
        "json_player_data = scrape_understat({'league':'EPL', 'season':'2023'})\n",
        "season_table = pd.DataFrame(json_player_data)\n",
        "season_df = clean_df(season_table, 'season')\n",
        "\n",
        "print('Getting data for last 5 matches')\n",
        "json_player_data = scrape_understat({'league':'EPL', 'season':'2023', 'n_last_matches': '5'})\n",
        "five_game_table = pd.DataFrame(json_player_data)\n",
        "five_game_df = clean_df(five_game_table,'5wks')\n",
        "\n",
        "print('Getting data for the whole season')\n",
        "json_player_data = scrape_understat({'league':'EPL', 'season':'2023'})\n",
        "season_table = pd.DataFrame(json_player_data)\n",
        "season_df = clean_df(season_table, 'season')\n",
        "\n",
        "print('Getting data for last 5 matches')\n",
        "json_player_data = scrape_understat({'league':'EPL', 'season':'2023', 'n_last_matches': '5'})\n",
        "five_game_table = pd.DataFrame(json_player_data)\n",
        "five_game_df = clean_df(five_game_table,'5wks')\n",
        "\n",
        "print('Merging Tables')\n",
        "EPL_player_df = pd.merge(five_game_df, season_df, on=['id','player_name'])\n",
        "EPL_player_df = pd.merge(EPL_player_df, five_game_df, on=['id','player_name'])\n",
        "\n",
        "\n",
        "print('Writing CSV File')\n",
        "EPL_player_df.to_csv('Understat_EPL_Player_Data_Combined 2021.csv', encoding='utf-8', index=False)\n",
        "\n",
        "\n",
        "# Assuming you have a DataFrame named EPL_player_df\n",
        "\n",
        "# Extract relevant columns\n",
        "selected_columns = ['player_name', 'xG_5wks_x', 'xA_5wks_x']\n",
        "subset_df = EPL_player_df[selected_columns]\n",
        "\n",
        "# Rename columns\n",
        "subset_df.rename(columns={'xG_5wks_x': 'xG 5 Weeks', 'xA_5wks_x': 'xA 5 Weeks'}, inplace=True)\n",
        "\n",
        "# Round the numbers to 2 decimal places\n",
        "subset_df = subset_df.round(2)\n",
        "\n",
        "# Sort by xG 5 Weeks in descending order\n",
        "top_10_xG = subset_df.sort_values(by='xG 5 Weeks', ascending=False).head(10)\n",
        "\n",
        "# Sort by xA 5 Weeks in descending order\n",
        "top_10_xA = subset_df.sort_values(by='xA 5 Weeks', ascending=False).head(10)\n",
        "\n",
        "# Display the top 10 for xG 5 Weeks\n",
        "print(\"Top 10 for xG 5 Weeks:\")\n",
        "print(top_10_xG)\n",
        "\n",
        "# Display the top 10 for xA 5 Weeks\n",
        "print(\"\\nTop 10 for xA 5 Weeks:\")\n",
        "print(top_10_xA)\n",
        "\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "HKnT6kU1xmGd",
        "outputId": "2dc13def-0707-4f86-a041-d7b2e3a2adc6"
      },
      "execution_count": 76,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Getting data for the whole season\n",
            "Getting data for last 5 matches\n",
            "Getting data for the whole season\n",
            "Getting data for last 5 matches\n",
            "Merging Tables\n",
            "Writing CSV File\n",
            "Top 10 for xG 5 Weeks:\n",
            "               player_name          xG 5 Weeks           xA 5 Weeks\n",
            "10          Erling Haaland   5.628955155611038   0.6545235216617584\n",
            "0          Dominic Solanke   4.908637315034866   0.4352651983499527\n",
            "1            Callum Wilson   3.735194891691208  0.35815059393644333\n",
            "225  Dominic Calvert-Lewin    2.96817085146904   0.2049887329339981\n",
            "23         Scott McTominay  2.7844261582940817  0.40323200821876526\n",
            "16           Jay Rodriguez  2.7562019675970078  0.10643995925784111\n",
            "86          Miguel Almirón   2.578651189804077   0.4915623515844345\n",
            "22           Gabriel Jesus  2.4748205579817295   0.9513892009854317\n",
            "112        Nicolas Jackson   2.458419159054756   0.6050226129591465\n",
            "20         Odsonne Edouard  2.4065027236938477   0.2121694590896368\n",
            "\n",
            "Top 10 for xA 5 Weeks:\n",
            "                player_name           xG 5 Weeks          xA 5 Weeks\n",
            "15            Son Heung-Min    1.869746707379818  2.9360407441854477\n",
            "19   Trent Alexander-Arnold   0.3806691635400057  2.6944539099931717\n",
            "27         Dejan Kulusevski   1.1832139492034912   2.318517178297043\n",
            "83              Bukayo Saka   1.2579714804887772   2.306226134300232\n",
            "193         Bruno Fernandes   1.4448362104594707    2.21346428245306\n",
            "34         Marcus Tavernier   1.5264517068862915   2.160693268291652\n",
            "57          Martin Odegaard   0.8167409971356392   2.150917451828718\n",
            "412           Ryan Christie   0.3426729068160057   2.058965891599655\n",
            "28            Dwight McNeil   1.1381198689341545  1.9631856009364128\n",
            "183         Andreas Pereira  0.13910089060664177  1.9462616071105003\n"
          ]
        }
      ]
    }
  ]
}