{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "authorship_tag": "ABX9TyN3KyEl/S2khSK3VTQ8KqVk",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/huricane85/FPL-API-Fixture-modeler/blob/main/FPL_Model_v1.2%20API%20data%20only%2028.09.2023\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 1,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "b6S0KMo-gSGQ",
        "outputId": "1fad111b-7c9f-45e7-f8c7-4635cc49eeaf"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Cloning into 'UnderstatScraper'...\n",
            "remote: Enumerating objects: 34, done.\u001b[K\n",
            "remote: Counting objects: 100% (34/34), done.\u001b[K\n",
            "remote: Compressing objects: 100% (31/31), done.\u001b[K\n",
            "remote: Total 34 (delta 11), reused 25 (delta 2), pack-reused 0\u001b[K\n",
            "Receiving objects: 100% (34/34), 268.30 KiB | 10.73 MiB/s, done.\n",
            "Resolving deltas: 100% (11/11), done.\n"
          ]
        }
      ],
      "source": [
        "!git clone https://github.com/doughagey/UnderstatScraper"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#!/usr/bin/env python3\n",
        "# -*- coding: utf-8 -*-\n",
        "\"\"\"\n",
        "Created on Mar 1 17:50:36 2020\n",
        "@author: doug hagey\n",
        "\"\"\"\n",
        "\n",
        "import pandas as pd\n",
        "import requests\n",
        "\n",
        "def scrape_understat(payload):\n",
        "    #Build request using url, headers (mimicking what Firefox does normally)\n",
        "    #Works best with verify=True as you won't get the ssl errors. Payload is\n",
        "    #taylored for each request\n",
        "    url = 'https://understat.com/main/getPlayersStats/'\n",
        "    headers = {'content-type':'application/json; charset=utf-8',\n",
        "    'Host': 'understat.com',\n",
        "    'User-Agent': 'Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:73.0) Gecko/20100101 Firefox/73.0',\n",
        "    'Accept': 'application/json, text/javascript, */*; q=0.01',\n",
        "    'Accept-Encoding': 'gzip, deflate, br',\n",
        "    'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8',\n",
        "    'X-Requested-With': 'XMLHttpRequest',\n",
        "    'Content-Length': '310',\n",
        "    'Origin': 'https: // understat.com',\n",
        "    'Connection': 'keep - alive',\n",
        "    'Referer': 'https: // understat.com / league / EPL'\n",
        "    }\n",
        "    response = requests.post(url, data=payload, headers = headers, verify=True)\n",
        "    response_json = response.json()\n",
        "    inner_wrapper = response_json['response']\n",
        "    json_player_data = inner_wrapper['players']\n",
        "    return json_player_data\n",
        "\n",
        "def clean_df(player_df, weeks):\n",
        "    # Get rid of the columns that we don't care about\n",
        "    #player_df.drop(['yellow_cards','red_cards', 'xGChain','xGBuildup','games','time'], axis=1, inplace=True)\n",
        "    player_df  = player_df.rename(columns={'goals':'goals_'+weeks,'xG':'xG_'+weeks,'assists':'assists_'+weeks, 'xA':'xA_'+weeks, 'shots':'shots_'+weeks, 'key_passes':\n",
        "        'key_passes_'+weeks,'npg':'npg_'+weeks,'npxG':'npxG_'+weeks})\n",
        "    if weeks != '1wks':\n",
        "        player_df.drop(['position','team_title'], axis=1, inplace=True)\n",
        "    return(player_df)\n",
        "\n",
        "#Creprint('Getting data for last 1 matches')\n",
        "json_player_data = scrape_understat({'league':'EPL', 'season':'2023', 'n_last_matches': '6'})\n",
        "one_game_table = pd.DataFrame(json_player_data)\n",
        "one_game_df = clean_df(one_game_table,'6wks')\n",
        "\n",
        "\n",
        "print('Getting data for the whole season')\n",
        "json_player_data = scrape_understat({'league':'EPL', 'season':'2023'})\n",
        "season_table = pd.DataFrame(json_player_data)\n",
        "season_df = clean_df(season_table, 'season')\n",
        "\n",
        "print('Getting data for last 1 matches')\n",
        "json_player_data = scrape_understat({'league':'EPL', 'season':'2023', 'n_last_matches': '6'})\n",
        "one_game_table = pd.DataFrame(json_player_data)\n",
        "one_game_df = clean_df(one_game_table, '1wks')\n",
        "\n",
        "print('Merging Tables')\n",
        "EPL_player_df = pd.merge(one_game_df, season_df, on=['id','player_name'])\n",
        "EPL_player_df = pd.merge(EPL_player_df, one_game_df, on=['id','player_name'])\n",
        "\n",
        "\n",
        "print('Writing CSV File')\n",
        "EPL_player_df.to_csv('Understat_EPL_Player_Data_Combined 2021.csv', encoding='utf-8', index=False)\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "D7aK55NHgZOt",
        "outputId": "c04c70d7-4557-4ce4-d5af-1b5db20c0122"
      },
      "execution_count": 3,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Getting data for the whole season\n",
            "Getting data for last 1 matches\n",
            "Merging Tables\n",
            "Writing CSV File\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "EPL_player_df"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 600
        },
        "id": "n__CYp9pmkGz",
        "outputId": "7164be68-c261-48e5-9e39-eb0ff5adacb2"
      },
      "execution_count": 4,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "        id       player_name games_x time_x goals_1wks_x            xG_1wks_x  \\\n",
              "0     8260    Erling Haaland       6    535            8    8.579197525978088   \n",
              "1      453     Son Heung-Min       6    509            5   2.5317263305187225   \n",
              "2      468     Callum Wilson       6    242            4    4.151702173054218   \n",
              "3     1776      Jarrod Bowen       6    540            4   2.5880690813064575   \n",
              "4     3697   Odsonne Edouard       6    522            4    3.337449833750725   \n",
              "..     ...               ...     ...    ...          ...                  ...   \n",
              "418  11926     Edson Álvarez       5    339            0   0.0643242746591568   \n",
              "419  11984  Youssef Chermiti       2     23            0  0.06607918441295624   \n",
              "420  11998   Hannes Delcroix       3    130            0  0.23279432207345963   \n",
              "421  12027    Mohammed Kudus       3     34            0                    0   \n",
              "422  12094       Mike Trésor       2     83            0  0.04863787442445755   \n",
              "\n",
              "    assists_1wks_x             xA_1wks_x shots_1wks_x key_passes_1wks_x  ...  \\\n",
              "0                1    1.1254648137837648           31                 7  ...   \n",
              "1                0     1.766825806349516           16                11  ...   \n",
              "2                0  0.015900330618023872           15                 1  ...   \n",
              "3                1    0.8080089539289474           16                 4  ...   \n",
              "4                0   0.26749951019883156           20                 5  ...   \n",
              "..             ...                   ...          ...               ...  ...   \n",
              "418              0   0.05303558334708214            1                 1  ...   \n",
              "419              0                     0            1                 0  ...   \n",
              "420              0    0.0830167606472969            4                 2  ...   \n",
              "421              0                     0            0                 0  ...   \n",
              "422              0    0.4080401435494423            1                 2  ...   \n",
              "\n",
              "    shots_1wks_y key_passes_1wks_y yellow_cards red_cards position_y  \\\n",
              "0             31                 7            0         0          F   \n",
              "1             16                11            0         0        F M   \n",
              "2             15                 1            1         0        F S   \n",
              "3             16                 4            1         0          M   \n",
              "4             20                 5            0         0          F   \n",
              "..           ...               ...          ...       ...        ...   \n",
              "418            1                 1            3         0        M S   \n",
              "419            1                 0            1         0          S   \n",
              "420            4                 2            1         0        D S   \n",
              "421            0                 0            0         0          S   \n",
              "422            1                 2            0         0          S   \n",
              "\n",
              "         team_title_y npg_1wks_y          npxG_1wks_y              xGChain  \\\n",
              "0     Manchester City          7    7.056859791278839    7.640112280845642   \n",
              "1           Tottenham          5   2.5317263305187225    5.605026721954346   \n",
              "2    Newcastle United          3    3.390533320605755    3.509474078193307   \n",
              "3            West Ham          4   2.5880690813064575   3.1078141033649445   \n",
              "4      Crystal Palace          4    3.337449833750725     3.16320563852787   \n",
              "..                ...        ...                  ...                  ...   \n",
              "418          West Ham          0   0.0643242746591568   1.3924516029655933   \n",
              "419           Everton          0  0.06607918441295624                    0   \n",
              "420           Burnley          0  0.23279432207345963   0.5750201642513275   \n",
              "421          West Ham          0                    0                    0   \n",
              "422           Burnley          0  0.04863787442445755  0.10748984664678574   \n",
              "\n",
              "                xGBuildup  \n",
              "0      0.7298882678151131  \n",
              "1      2.0503234416246414  \n",
              "2     0.23684066534042358  \n",
              "3      1.2324372678995132  \n",
              "4      0.4057522751390934  \n",
              "..                    ...  \n",
              "418     1.275091726332903  \n",
              "419                     0  \n",
              "420    0.4920034073293209  \n",
              "421                     0  \n",
              "422  0.058851972222328186  \n",
              "\n",
              "[423 rows x 48 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-ec1d3793-58a8-4169-a5ca-aa974721cc9b\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>player_name</th>\n",
              "      <th>games_x</th>\n",
              "      <th>time_x</th>\n",
              "      <th>goals_1wks_x</th>\n",
              "      <th>xG_1wks_x</th>\n",
              "      <th>assists_1wks_x</th>\n",
              "      <th>xA_1wks_x</th>\n",
              "      <th>shots_1wks_x</th>\n",
              "      <th>key_passes_1wks_x</th>\n",
              "      <th>...</th>\n",
              "      <th>shots_1wks_y</th>\n",
              "      <th>key_passes_1wks_y</th>\n",
              "      <th>yellow_cards</th>\n",
              "      <th>red_cards</th>\n",
              "      <th>position_y</th>\n",
              "      <th>team_title_y</th>\n",
              "      <th>npg_1wks_y</th>\n",
              "      <th>npxG_1wks_y</th>\n",
              "      <th>xGChain</th>\n",
              "      <th>xGBuildup</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>8260</td>\n",
              "      <td>Erling Haaland</td>\n",
              "      <td>6</td>\n",
              "      <td>535</td>\n",
              "      <td>8</td>\n",
              "      <td>8.579197525978088</td>\n",
              "      <td>1</td>\n",
              "      <td>1.1254648137837648</td>\n",
              "      <td>31</td>\n",
              "      <td>7</td>\n",
              "      <td>...</td>\n",
              "      <td>31</td>\n",
              "      <td>7</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>F</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>7</td>\n",
              "      <td>7.056859791278839</td>\n",
              "      <td>7.640112280845642</td>\n",
              "      <td>0.7298882678151131</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>453</td>\n",
              "      <td>Son Heung-Min</td>\n",
              "      <td>6</td>\n",
              "      <td>509</td>\n",
              "      <td>5</td>\n",
              "      <td>2.5317263305187225</td>\n",
              "      <td>0</td>\n",
              "      <td>1.766825806349516</td>\n",
              "      <td>16</td>\n",
              "      <td>11</td>\n",
              "      <td>...</td>\n",
              "      <td>16</td>\n",
              "      <td>11</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>F M</td>\n",
              "      <td>Tottenham</td>\n",
              "      <td>5</td>\n",
              "      <td>2.5317263305187225</td>\n",
              "      <td>5.605026721954346</td>\n",
              "      <td>2.0503234416246414</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>468</td>\n",
              "      <td>Callum Wilson</td>\n",
              "      <td>6</td>\n",
              "      <td>242</td>\n",
              "      <td>4</td>\n",
              "      <td>4.151702173054218</td>\n",
              "      <td>0</td>\n",
              "      <td>0.015900330618023872</td>\n",
              "      <td>15</td>\n",
              "      <td>1</td>\n",
              "      <td>...</td>\n",
              "      <td>15</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>F S</td>\n",
              "      <td>Newcastle United</td>\n",
              "      <td>3</td>\n",
              "      <td>3.390533320605755</td>\n",
              "      <td>3.509474078193307</td>\n",
              "      <td>0.23684066534042358</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>1776</td>\n",
              "      <td>Jarrod Bowen</td>\n",
              "      <td>6</td>\n",
              "      <td>540</td>\n",
              "      <td>4</td>\n",
              "      <td>2.5880690813064575</td>\n",
              "      <td>1</td>\n",
              "      <td>0.8080089539289474</td>\n",
              "      <td>16</td>\n",
              "      <td>4</td>\n",
              "      <td>...</td>\n",
              "      <td>16</td>\n",
              "      <td>4</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>M</td>\n",
              "      <td>West Ham</td>\n",
              "      <td>4</td>\n",
              "      <td>2.5880690813064575</td>\n",
              "      <td>3.1078141033649445</td>\n",
              "      <td>1.2324372678995132</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>3697</td>\n",
              "      <td>Odsonne Edouard</td>\n",
              "      <td>6</td>\n",
              "      <td>522</td>\n",
              "      <td>4</td>\n",
              "      <td>3.337449833750725</td>\n",
              "      <td>0</td>\n",
              "      <td>0.26749951019883156</td>\n",
              "      <td>20</td>\n",
              "      <td>5</td>\n",
              "      <td>...</td>\n",
              "      <td>20</td>\n",
              "      <td>5</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>F</td>\n",
              "      <td>Crystal Palace</td>\n",
              "      <td>4</td>\n",
              "      <td>3.337449833750725</td>\n",
              "      <td>3.16320563852787</td>\n",
              "      <td>0.4057522751390934</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>418</th>\n",
              "      <td>11926</td>\n",
              "      <td>Edson Álvarez</td>\n",
              "      <td>5</td>\n",
              "      <td>339</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0643242746591568</td>\n",
              "      <td>0</td>\n",
              "      <td>0.05303558334708214</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>...</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>3</td>\n",
              "      <td>0</td>\n",
              "      <td>M S</td>\n",
              "      <td>West Ham</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0643242746591568</td>\n",
              "      <td>1.3924516029655933</td>\n",
              "      <td>1.275091726332903</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>419</th>\n",
              "      <td>11984</td>\n",
              "      <td>Youssef Chermiti</td>\n",
              "      <td>2</td>\n",
              "      <td>23</td>\n",
              "      <td>0</td>\n",
              "      <td>0.06607918441295624</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>S</td>\n",
              "      <td>Everton</td>\n",
              "      <td>0</td>\n",
              "      <td>0.06607918441295624</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>420</th>\n",
              "      <td>11998</td>\n",
              "      <td>Hannes Delcroix</td>\n",
              "      <td>3</td>\n",
              "      <td>130</td>\n",
              "      <td>0</td>\n",
              "      <td>0.23279432207345963</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0830167606472969</td>\n",
              "      <td>4</td>\n",
              "      <td>2</td>\n",
              "      <td>...</td>\n",
              "      <td>4</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>D S</td>\n",
              "      <td>Burnley</td>\n",
              "      <td>0</td>\n",
              "      <td>0.23279432207345963</td>\n",
              "      <td>0.5750201642513275</td>\n",
              "      <td>0.4920034073293209</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>421</th>\n",
              "      <td>12027</td>\n",
              "      <td>Mohammed Kudus</td>\n",
              "      <td>3</td>\n",
              "      <td>34</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>S</td>\n",
              "      <td>West Ham</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>422</th>\n",
              "      <td>12094</td>\n",
              "      <td>Mike Trésor</td>\n",
              "      <td>2</td>\n",
              "      <td>83</td>\n",
              "      <td>0</td>\n",
              "      <td>0.04863787442445755</td>\n",
              "      <td>0</td>\n",
              "      <td>0.4080401435494423</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>...</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>S</td>\n",
              "      <td>Burnley</td>\n",
              "      <td>0</td>\n",
              "      <td>0.04863787442445755</td>\n",
              "      <td>0.10748984664678574</td>\n",
              "      <td>0.058851972222328186</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>423 rows × 48 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-ec1d3793-58a8-4169-a5ca-aa974721cc9b')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-ec1d3793-58a8-4169-a5ca-aa974721cc9b button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-ec1d3793-58a8-4169-a5ca-aa974721cc9b');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-b08c0e5b-e173-4c28-8702-be2de4247a5d\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-b08c0e5b-e173-4c28-8702-be2de4247a5d')\"\n",
              "            title=\"Suggest charts.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-b08c0e5b-e173-4c28-8702-be2de4247a5d button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 4
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "one_game_df.to_csv('one_game_df.csv', encoding='utf-8', index=False)\n",
        "one_game_df['time'] = one_game_df['time'].astype(int)\n",
        "one_game_df = one_game_df[one_game_df['time'] > 40]\n",
        "one_game_df['goals_1wks'] = one_game_df['goals_1wks'].astype(int)\n",
        "one_game_df['xG_1wks'] = one_game_df['xG_1wks'].astype(float)\n",
        "one_game_df['xgdifference'] = one_game_df.goals_1wks - one_game_df.xG_1wks\n",
        "one_game_df['assists_1wks'] = one_game_df['assists_1wks'].astype(int)\n",
        "one_game_df['xA_1wks'] = one_game_df['xA_1wks'].astype(float)\n",
        "one_game_df['xAdifference'] = one_game_df.assists_1wks - one_game_df.xA_1wks\n",
        "seasonedit = one_game_df.drop(columns=[ 'yellow_cards','red_cards','time'])\n",
        "sortXgDifference = seasonedit.sort_values('xgdifference')\n",
        "sortXgDifference.head(10)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "id": "IrXPzyJNg3ui",
        "outputId": "41bb4668-bb8e-431f-e967-b61be4187964"
      },
      "execution_count": 5,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "<ipython-input-5-30b8c2331977>:4: SettingWithCopyWarning: \n",
            "A value is trying to be set on a copy of a slice from a DataFrame.\n",
            "Try using .loc[row_indexer,col_indexer] = value instead\n",
            "\n",
            "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
            "  one_game_df['goals_1wks'] = one_game_df['goals_1wks'].astype(int)\n",
            "<ipython-input-5-30b8c2331977>:5: SettingWithCopyWarning: \n",
            "A value is trying to be set on a copy of a slice from a DataFrame.\n",
            "Try using .loc[row_indexer,col_indexer] = value instead\n",
            "\n",
            "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
            "  one_game_df['xG_1wks'] = one_game_df['xG_1wks'].astype(float)\n",
            "<ipython-input-5-30b8c2331977>:6: SettingWithCopyWarning: \n",
            "A value is trying to be set on a copy of a slice from a DataFrame.\n",
            "Try using .loc[row_indexer,col_indexer] = value instead\n",
            "\n",
            "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
            "  one_game_df['xgdifference'] = one_game_df.goals_1wks - one_game_df.xG_1wks\n",
            "<ipython-input-5-30b8c2331977>:7: SettingWithCopyWarning: \n",
            "A value is trying to be set on a copy of a slice from a DataFrame.\n",
            "Try using .loc[row_indexer,col_indexer] = value instead\n",
            "\n",
            "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
            "  one_game_df['assists_1wks'] = one_game_df['assists_1wks'].astype(int)\n",
            "<ipython-input-5-30b8c2331977>:8: SettingWithCopyWarning: \n",
            "A value is trying to be set on a copy of a slice from a DataFrame.\n",
            "Try using .loc[row_indexer,col_indexer] = value instead\n",
            "\n",
            "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
            "  one_game_df['xA_1wks'] = one_game_df['xA_1wks'].astype(float)\n",
            "<ipython-input-5-30b8c2331977>:9: SettingWithCopyWarning: \n",
            "A value is trying to be set on a copy of a slice from a DataFrame.\n",
            "Try using .loc[row_indexer,col_indexer] = value instead\n",
            "\n",
            "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
            "  one_game_df['xAdifference'] = one_game_df.assists_1wks - one_game_df.xA_1wks\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "        id                player_name games  goals_1wks   xG_1wks  \\\n",
              "97   10048            Nicolas Jackson     6           1  4.179538   \n",
              "387  11356             Enzo Fernández     6           0  1.805811   \n",
              "371  10809         Keane Lewis-Potter     5           0  1.681717   \n",
              "44     556            Marcus Rashford     6           1  2.675607   \n",
              "87    8865              Ollie Watkins     6           1  2.590313   \n",
              "184   3621                Neal Maupay     3           0  1.387239   \n",
              "81    8066  Arnaut Danjuma Groeneveld     6           1  2.356220   \n",
              "129    672                Jordan Ayew     6           0  1.335297   \n",
              "89    9021                  Pape Sarr     6           1  2.302408   \n",
              "367  10760            Brennan Johnson     5           0  1.229153   \n",
              "\n",
              "     assists_1wks   xA_1wks shots_1wks key_passes_1wks position  \\\n",
              "97              0  0.588600         19               4        F   \n",
              "387             0  1.448496         13              11        M   \n",
              "371             0  0.047711          5               1      F S   \n",
              "44              1  0.711889         26               8      F M   \n",
              "87              2  1.574360         16              10        F   \n",
              "184             0  0.133534          6               1      F S   \n",
              "81              0  0.237589         16               3    F M S   \n",
              "129             2  1.040466         12               7        M   \n",
              "89              1  0.633261         15               6      M S   \n",
              "367             0  0.163901          6               2    F M S   \n",
              "\n",
              "                      team_title npg_1wks           npxG_1wks  \\\n",
              "97                       Chelsea        1   4.179538443684578   \n",
              "387                      Chelsea        0  1.0446425322443247   \n",
              "371                    Brentford        0  1.6817168816924095   \n",
              "44             Manchester United        1  2.6756068989634514   \n",
              "87                   Aston Villa        1  2.5903127640485764   \n",
              "184            Brentford,Everton        0  1.3872387073934078   \n",
              "81                       Everton        1   2.356220342218876   \n",
              "129               Crystal Palace        0  1.3352972716093063   \n",
              "89                     Tottenham        1   2.302408032119274   \n",
              "367  Nottingham Forest,Tottenham        0  1.2291527837514877   \n",
              "\n",
              "                xGChain            xGBuildup  xgdifference  xAdifference  \n",
              "97    5.364910773932934   1.1195539757609367     -3.179538     -0.588600  \n",
              "387   4.678536161780357    3.503820039331913     -1.805811     -1.448496  \n",
              "371  1.2090465873479843                    0     -1.681717     -0.047711  \n",
              "44    4.686238318681717    1.829933524131775     -1.675607      0.288111  \n",
              "87    5.039653241634369   1.1009831968694925     -1.590313      0.425640  \n",
              "184  1.3435240425169468  0.06084267050027847     -1.387239     -0.133534  \n",
              "81     2.57263220846653  0.09537248313426971     -1.356220     -0.237589  \n",
              "129  2.4842421114444733   1.3111906498670578     -1.335297      0.959534  \n",
              "89   5.5357698649168015   3.4231296330690384     -1.302408      0.366739  \n",
              "367  2.4713109135627747   1.1762265041470528     -1.229153     -0.163901  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-e37db3fb-f6c1-4705-a1b0-1a81e6a3ac38\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>player_name</th>\n",
              "      <th>games</th>\n",
              "      <th>goals_1wks</th>\n",
              "      <th>xG_1wks</th>\n",
              "      <th>assists_1wks</th>\n",
              "      <th>xA_1wks</th>\n",
              "      <th>shots_1wks</th>\n",
              "      <th>key_passes_1wks</th>\n",
              "      <th>position</th>\n",
              "      <th>team_title</th>\n",
              "      <th>npg_1wks</th>\n",
              "      <th>npxG_1wks</th>\n",
              "      <th>xGChain</th>\n",
              "      <th>xGBuildup</th>\n",
              "      <th>xgdifference</th>\n",
              "      <th>xAdifference</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>97</th>\n",
              "      <td>10048</td>\n",
              "      <td>Nicolas Jackson</td>\n",
              "      <td>6</td>\n",
              "      <td>1</td>\n",
              "      <td>4.179538</td>\n",
              "      <td>0</td>\n",
              "      <td>0.588600</td>\n",
              "      <td>19</td>\n",
              "      <td>4</td>\n",
              "      <td>F</td>\n",
              "      <td>Chelsea</td>\n",
              "      <td>1</td>\n",
              "      <td>4.179538443684578</td>\n",
              "      <td>5.364910773932934</td>\n",
              "      <td>1.1195539757609367</td>\n",
              "      <td>-3.179538</td>\n",
              "      <td>-0.588600</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>387</th>\n",
              "      <td>11356</td>\n",
              "      <td>Enzo Fernández</td>\n",
              "      <td>6</td>\n",
              "      <td>0</td>\n",
              "      <td>1.805811</td>\n",
              "      <td>0</td>\n",
              "      <td>1.448496</td>\n",
              "      <td>13</td>\n",
              "      <td>11</td>\n",
              "      <td>M</td>\n",
              "      <td>Chelsea</td>\n",
              "      <td>0</td>\n",
              "      <td>1.0446425322443247</td>\n",
              "      <td>4.678536161780357</td>\n",
              "      <td>3.503820039331913</td>\n",
              "      <td>-1.805811</td>\n",
              "      <td>-1.448496</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>371</th>\n",
              "      <td>10809</td>\n",
              "      <td>Keane Lewis-Potter</td>\n",
              "      <td>5</td>\n",
              "      <td>0</td>\n",
              "      <td>1.681717</td>\n",
              "      <td>0</td>\n",
              "      <td>0.047711</td>\n",
              "      <td>5</td>\n",
              "      <td>1</td>\n",
              "      <td>F S</td>\n",
              "      <td>Brentford</td>\n",
              "      <td>0</td>\n",
              "      <td>1.6817168816924095</td>\n",
              "      <td>1.2090465873479843</td>\n",
              "      <td>0</td>\n",
              "      <td>-1.681717</td>\n",
              "      <td>-0.047711</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>44</th>\n",
              "      <td>556</td>\n",
              "      <td>Marcus Rashford</td>\n",
              "      <td>6</td>\n",
              "      <td>1</td>\n",
              "      <td>2.675607</td>\n",
              "      <td>1</td>\n",
              "      <td>0.711889</td>\n",
              "      <td>26</td>\n",
              "      <td>8</td>\n",
              "      <td>F M</td>\n",
              "      <td>Manchester United</td>\n",
              "      <td>1</td>\n",
              "      <td>2.6756068989634514</td>\n",
              "      <td>4.686238318681717</td>\n",
              "      <td>1.829933524131775</td>\n",
              "      <td>-1.675607</td>\n",
              "      <td>0.288111</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>87</th>\n",
              "      <td>8865</td>\n",
              "      <td>Ollie Watkins</td>\n",
              "      <td>6</td>\n",
              "      <td>1</td>\n",
              "      <td>2.590313</td>\n",
              "      <td>2</td>\n",
              "      <td>1.574360</td>\n",
              "      <td>16</td>\n",
              "      <td>10</td>\n",
              "      <td>F</td>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>1</td>\n",
              "      <td>2.5903127640485764</td>\n",
              "      <td>5.039653241634369</td>\n",
              "      <td>1.1009831968694925</td>\n",
              "      <td>-1.590313</td>\n",
              "      <td>0.425640</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>184</th>\n",
              "      <td>3621</td>\n",
              "      <td>Neal Maupay</td>\n",
              "      <td>3</td>\n",
              "      <td>0</td>\n",
              "      <td>1.387239</td>\n",
              "      <td>0</td>\n",
              "      <td>0.133534</td>\n",
              "      <td>6</td>\n",
              "      <td>1</td>\n",
              "      <td>F S</td>\n",
              "      <td>Brentford,Everton</td>\n",
              "      <td>0</td>\n",
              "      <td>1.3872387073934078</td>\n",
              "      <td>1.3435240425169468</td>\n",
              "      <td>0.06084267050027847</td>\n",
              "      <td>-1.387239</td>\n",
              "      <td>-0.133534</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>81</th>\n",
              "      <td>8066</td>\n",
              "      <td>Arnaut Danjuma Groeneveld</td>\n",
              "      <td>6</td>\n",
              "      <td>1</td>\n",
              "      <td>2.356220</td>\n",
              "      <td>0</td>\n",
              "      <td>0.237589</td>\n",
              "      <td>16</td>\n",
              "      <td>3</td>\n",
              "      <td>F M S</td>\n",
              "      <td>Everton</td>\n",
              "      <td>1</td>\n",
              "      <td>2.356220342218876</td>\n",
              "      <td>2.57263220846653</td>\n",
              "      <td>0.09537248313426971</td>\n",
              "      <td>-1.356220</td>\n",
              "      <td>-0.237589</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>129</th>\n",
              "      <td>672</td>\n",
              "      <td>Jordan Ayew</td>\n",
              "      <td>6</td>\n",
              "      <td>0</td>\n",
              "      <td>1.335297</td>\n",
              "      <td>2</td>\n",
              "      <td>1.040466</td>\n",
              "      <td>12</td>\n",
              "      <td>7</td>\n",
              "      <td>M</td>\n",
              "      <td>Crystal Palace</td>\n",
              "      <td>0</td>\n",
              "      <td>1.3352972716093063</td>\n",
              "      <td>2.4842421114444733</td>\n",
              "      <td>1.3111906498670578</td>\n",
              "      <td>-1.335297</td>\n",
              "      <td>0.959534</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>89</th>\n",
              "      <td>9021</td>\n",
              "      <td>Pape Sarr</td>\n",
              "      <td>6</td>\n",
              "      <td>1</td>\n",
              "      <td>2.302408</td>\n",
              "      <td>1</td>\n",
              "      <td>0.633261</td>\n",
              "      <td>15</td>\n",
              "      <td>6</td>\n",
              "      <td>M S</td>\n",
              "      <td>Tottenham</td>\n",
              "      <td>1</td>\n",
              "      <td>2.302408032119274</td>\n",
              "      <td>5.5357698649168015</td>\n",
              "      <td>3.4231296330690384</td>\n",
              "      <td>-1.302408</td>\n",
              "      <td>0.366739</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>367</th>\n",
              "      <td>10760</td>\n",
              "      <td>Brennan Johnson</td>\n",
              "      <td>5</td>\n",
              "      <td>0</td>\n",
              "      <td>1.229153</td>\n",
              "      <td>0</td>\n",
              "      <td>0.163901</td>\n",
              "      <td>6</td>\n",
              "      <td>2</td>\n",
              "      <td>F M S</td>\n",
              "      <td>Nottingham Forest,Tottenham</td>\n",
              "      <td>0</td>\n",
              "      <td>1.2291527837514877</td>\n",
              "      <td>2.4713109135627747</td>\n",
              "      <td>1.1762265041470528</td>\n",
              "      <td>-1.229153</td>\n",
              "      <td>-0.163901</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-e37db3fb-f6c1-4705-a1b0-1a81e6a3ac38')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-e37db3fb-f6c1-4705-a1b0-1a81e6a3ac38 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-e37db3fb-f6c1-4705-a1b0-1a81e6a3ac38');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-cc96ff36-4610-4bff-b7a5-ca1bcce5890b\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-cc96ff36-4610-4bff-b7a5-ca1bcce5890b')\"\n",
              "            title=\"Suggest charts.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-cc96ff36-4610-4bff-b7a5-ca1bcce5890b button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 5
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "sortXgDifference.tail(10)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 484
        },
        "id": "UxuLfRINhwx7",
        "outputId": "251b8022-7a05-4eab-faf9-c5eed6557023"
      },
      "execution_count": 6,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "       id      player_name games  goals_1wks   xG_1wks  assists_1wks  \\\n",
              "77   7430          Emerson     4           1  0.032621             0   \n",
              "94   9558  Hannibal Mejbri     2           1  0.016602             0   \n",
              "33   7218  Cristian Romero     6           2  0.765092             0   \n",
              "16    239      Pascal Groß     5           2  0.670655             0   \n",
              "3    1776     Jarrod Bowen     6           4  2.588069             1   \n",
              "42  11839    Gustavo Hamer     5           2  0.388260             0   \n",
              "6   10177    Evan Ferguson     6           4  2.327735             0   \n",
              "32   7166   Mathias Jensen     6           2  0.233827             0   \n",
              "1     453    Son Heung-Min     6           5  2.531726             0   \n",
              "13   8845   Hee-Chan Hwang     6           3  0.418650             0   \n",
              "\n",
              "     xA_1wks shots_1wks key_passes_1wks position               team_title  \\\n",
              "77  0.000000          1               0      D S                Tottenham   \n",
              "94  0.217534          1               2      M S        Manchester United   \n",
              "33  0.027825          5               1        D                Tottenham   \n",
              "16  1.181119         10              15        M                 Brighton   \n",
              "3   0.808009         16               4        M                 West Ham   \n",
              "42  0.726002          7               8        M         Sheffield United   \n",
              "6   0.189658         15               2      F S                 Brighton   \n",
              "32  1.131021          4              11        M                Brentford   \n",
              "1   1.766826         16              11      F M                Tottenham   \n",
              "13  0.601140          7               1      M S  Wolverhampton Wanderers   \n",
              "\n",
              "   npg_1wks            npxG_1wks              xGChain            xGBuildup  \\\n",
              "77        1  0.03262129798531532  0.42484379559755325  0.39222250133752823   \n",
              "94        1  0.01660188101232052   0.6164471115916967   0.3823116421699524   \n",
              "33        2   0.7650923058390617    4.108992636203766    4.081167757511139   \n",
              "16        2   0.6706545501947403   5.0939019322395325    4.227585554122925   \n",
              "3         4   2.5880690813064575   3.1078141033649445   1.2324372678995132   \n",
              "42        2  0.38825987838208675   0.7189697585999966    0.225465327501297   \n",
              "6         4   2.3277347590774298   3.2969032488763332   0.8994851000607014   \n",
              "32        2   0.2338273487985134   2.5066682919859886    2.048905534669757   \n",
              "1         5   2.5317263305187225    5.605026721954346   2.0503234416246414   \n",
              "13        3   0.4186500832438469    0.880275965668261   0.5792413735762239   \n",
              "\n",
              "    xgdifference  xAdifference  \n",
              "77      0.967379      0.000000  \n",
              "94      0.983398     -0.217534  \n",
              "33      1.234908     -0.027825  \n",
              "16      1.329345     -1.181119  \n",
              "3       1.411931      0.191991  \n",
              "42      1.611740     -0.726002  \n",
              "6       1.672265     -0.189658  \n",
              "32      1.766173     -1.131021  \n",
              "1       2.468274     -1.766826  \n",
              "13      2.581350     -0.601140  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-3ee4eba8-a8c8-4c9b-b3e1-d8bedc690bed\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>player_name</th>\n",
              "      <th>games</th>\n",
              "      <th>goals_1wks</th>\n",
              "      <th>xG_1wks</th>\n",
              "      <th>assists_1wks</th>\n",
              "      <th>xA_1wks</th>\n",
              "      <th>shots_1wks</th>\n",
              "      <th>key_passes_1wks</th>\n",
              "      <th>position</th>\n",
              "      <th>team_title</th>\n",
              "      <th>npg_1wks</th>\n",
              "      <th>npxG_1wks</th>\n",
              "      <th>xGChain</th>\n",
              "      <th>xGBuildup</th>\n",
              "      <th>xgdifference</th>\n",
              "      <th>xAdifference</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>77</th>\n",
              "      <td>7430</td>\n",
              "      <td>Emerson</td>\n",
              "      <td>4</td>\n",
              "      <td>1</td>\n",
              "      <td>0.032621</td>\n",
              "      <td>0</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>D S</td>\n",
              "      <td>Tottenham</td>\n",
              "      <td>1</td>\n",
              "      <td>0.03262129798531532</td>\n",
              "      <td>0.42484379559755325</td>\n",
              "      <td>0.39222250133752823</td>\n",
              "      <td>0.967379</td>\n",
              "      <td>0.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>94</th>\n",
              "      <td>9558</td>\n",
              "      <td>Hannibal Mejbri</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>0.016602</td>\n",
              "      <td>0</td>\n",
              "      <td>0.217534</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>M S</td>\n",
              "      <td>Manchester United</td>\n",
              "      <td>1</td>\n",
              "      <td>0.01660188101232052</td>\n",
              "      <td>0.6164471115916967</td>\n",
              "      <td>0.3823116421699524</td>\n",
              "      <td>0.983398</td>\n",
              "      <td>-0.217534</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>33</th>\n",
              "      <td>7218</td>\n",
              "      <td>Cristian Romero</td>\n",
              "      <td>6</td>\n",
              "      <td>2</td>\n",
              "      <td>0.765092</td>\n",
              "      <td>0</td>\n",
              "      <td>0.027825</td>\n",
              "      <td>5</td>\n",
              "      <td>1</td>\n",
              "      <td>D</td>\n",
              "      <td>Tottenham</td>\n",
              "      <td>2</td>\n",
              "      <td>0.7650923058390617</td>\n",
              "      <td>4.108992636203766</td>\n",
              "      <td>4.081167757511139</td>\n",
              "      <td>1.234908</td>\n",
              "      <td>-0.027825</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>16</th>\n",
              "      <td>239</td>\n",
              "      <td>Pascal Groß</td>\n",
              "      <td>5</td>\n",
              "      <td>2</td>\n",
              "      <td>0.670655</td>\n",
              "      <td>0</td>\n",
              "      <td>1.181119</td>\n",
              "      <td>10</td>\n",
              "      <td>15</td>\n",
              "      <td>M</td>\n",
              "      <td>Brighton</td>\n",
              "      <td>2</td>\n",
              "      <td>0.6706545501947403</td>\n",
              "      <td>5.0939019322395325</td>\n",
              "      <td>4.227585554122925</td>\n",
              "      <td>1.329345</td>\n",
              "      <td>-1.181119</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>1776</td>\n",
              "      <td>Jarrod Bowen</td>\n",
              "      <td>6</td>\n",
              "      <td>4</td>\n",
              "      <td>2.588069</td>\n",
              "      <td>1</td>\n",
              "      <td>0.808009</td>\n",
              "      <td>16</td>\n",
              "      <td>4</td>\n",
              "      <td>M</td>\n",
              "      <td>West Ham</td>\n",
              "      <td>4</td>\n",
              "      <td>2.5880690813064575</td>\n",
              "      <td>3.1078141033649445</td>\n",
              "      <td>1.2324372678995132</td>\n",
              "      <td>1.411931</td>\n",
              "      <td>0.191991</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>42</th>\n",
              "      <td>11839</td>\n",
              "      <td>Gustavo Hamer</td>\n",
              "      <td>5</td>\n",
              "      <td>2</td>\n",
              "      <td>0.388260</td>\n",
              "      <td>0</td>\n",
              "      <td>0.726002</td>\n",
              "      <td>7</td>\n",
              "      <td>8</td>\n",
              "      <td>M</td>\n",
              "      <td>Sheffield United</td>\n",
              "      <td>2</td>\n",
              "      <td>0.38825987838208675</td>\n",
              "      <td>0.7189697585999966</td>\n",
              "      <td>0.225465327501297</td>\n",
              "      <td>1.611740</td>\n",
              "      <td>-0.726002</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>10177</td>\n",
              "      <td>Evan Ferguson</td>\n",
              "      <td>6</td>\n",
              "      <td>4</td>\n",
              "      <td>2.327735</td>\n",
              "      <td>0</td>\n",
              "      <td>0.189658</td>\n",
              "      <td>15</td>\n",
              "      <td>2</td>\n",
              "      <td>F S</td>\n",
              "      <td>Brighton</td>\n",
              "      <td>4</td>\n",
              "      <td>2.3277347590774298</td>\n",
              "      <td>3.2969032488763332</td>\n",
              "      <td>0.8994851000607014</td>\n",
              "      <td>1.672265</td>\n",
              "      <td>-0.189658</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>32</th>\n",
              "      <td>7166</td>\n",
              "      <td>Mathias Jensen</td>\n",
              "      <td>6</td>\n",
              "      <td>2</td>\n",
              "      <td>0.233827</td>\n",
              "      <td>0</td>\n",
              "      <td>1.131021</td>\n",
              "      <td>4</td>\n",
              "      <td>11</td>\n",
              "      <td>M</td>\n",
              "      <td>Brentford</td>\n",
              "      <td>2</td>\n",
              "      <td>0.2338273487985134</td>\n",
              "      <td>2.5066682919859886</td>\n",
              "      <td>2.048905534669757</td>\n",
              "      <td>1.766173</td>\n",
              "      <td>-1.131021</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>453</td>\n",
              "      <td>Son Heung-Min</td>\n",
              "      <td>6</td>\n",
              "      <td>5</td>\n",
              "      <td>2.531726</td>\n",
              "      <td>0</td>\n",
              "      <td>1.766826</td>\n",
              "      <td>16</td>\n",
              "      <td>11</td>\n",
              "      <td>F M</td>\n",
              "      <td>Tottenham</td>\n",
              "      <td>5</td>\n",
              "      <td>2.5317263305187225</td>\n",
              "      <td>5.605026721954346</td>\n",
              "      <td>2.0503234416246414</td>\n",
              "      <td>2.468274</td>\n",
              "      <td>-1.766826</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>13</th>\n",
              "      <td>8845</td>\n",
              "      <td>Hee-Chan Hwang</td>\n",
              "      <td>6</td>\n",
              "      <td>3</td>\n",
              "      <td>0.418650</td>\n",
              "      <td>0</td>\n",
              "      <td>0.601140</td>\n",
              "      <td>7</td>\n",
              "      <td>1</td>\n",
              "      <td>M S</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>3</td>\n",
              "      <td>0.4186500832438469</td>\n",
              "      <td>0.880275965668261</td>\n",
              "      <td>0.5792413735762239</td>\n",
              "      <td>2.581350</td>\n",
              "      <td>-0.601140</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-3ee4eba8-a8c8-4c9b-b3e1-d8bedc690bed')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-3ee4eba8-a8c8-4c9b-b3e1-d8bedc690bed button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-3ee4eba8-a8c8-4c9b-b3e1-d8bedc690bed');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-02ecbcc3-fb84-4b90-8e66-6259767ad2cc\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-02ecbcc3-fb84-4b90-8e66-6259767ad2cc')\"\n",
              "            title=\"Suggest charts.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-02ecbcc3-fb84-4b90-8e66-6259767ad2cc button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 6
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "one_game_df"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 600
        },
        "id": "NDPdgpJUVBBZ",
        "outputId": "64d9161d-3866-4775-b920-696a81b0855f"
      },
      "execution_count": 7,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "        id      player_name games  time  goals_1wks   xG_1wks  assists_1wks  \\\n",
              "0     8260   Erling Haaland     6   535           8  8.579198             1   \n",
              "1      453    Son Heung-Min     6   509           5  2.531726             0   \n",
              "2      468    Callum Wilson     6   242           4  4.151702             0   \n",
              "3     1776     Jarrod Bowen     6   540           4  2.588069             1   \n",
              "4     3697  Odsonne Edouard     6   522           4  3.337450             0   \n",
              "..     ...              ...   ...   ...         ...       ...           ...   \n",
              "410  11728    Calvin Bassey     3   107           0  0.000000             0   \n",
              "411  11729     Bénie Traoré     5   311           0  0.321223             0   \n",
              "418  11926    Edson Álvarez     5   339           0  0.064324             0   \n",
              "420  11998  Hannes Delcroix     3   130           0  0.232794             0   \n",
              "422  12094      Mike Trésor     2    83           0  0.048638             0   \n",
              "\n",
              "      xA_1wks shots_1wks key_passes_1wks yellow_cards red_cards position  \\\n",
              "0    1.125465         31               7            0         0        F   \n",
              "1    1.766826         16              11            0         0      F M   \n",
              "2    0.015900         15               1            1         0      F S   \n",
              "3    0.808009         16               4            1         0        M   \n",
              "4    0.267500         20               5            0         0        F   \n",
              "..        ...        ...             ...          ...       ...      ...   \n",
              "410  0.000000          0               0            0         1      D S   \n",
              "411  0.333616          1               3            0         0    F M S   \n",
              "418  0.053036          1               1            3         0      M S   \n",
              "420  0.083017          4               2            1         0      D S   \n",
              "422  0.408040          1               2            0         0        S   \n",
              "\n",
              "           team_title npg_1wks            npxG_1wks              xGChain  \\\n",
              "0     Manchester City        7    7.056859791278839    7.640112280845642   \n",
              "1           Tottenham        5   2.5317263305187225    5.605026721954346   \n",
              "2    Newcastle United        3    3.390533320605755    3.509474078193307   \n",
              "3            West Ham        4   2.5880690813064575   3.1078141033649445   \n",
              "4      Crystal Palace        4    3.337449833750725     3.16320563852787   \n",
              "..                ...      ...                  ...                  ...   \n",
              "410            Fulham        0                    0                    0   \n",
              "411  Sheffield United        0   0.3212226927280426   1.2498194947838783   \n",
              "418          West Ham        0   0.0643242746591568   1.3924516029655933   \n",
              "420           Burnley        0  0.23279432207345963   0.5750201642513275   \n",
              "422           Burnley        0  0.04863787442445755  0.10748984664678574   \n",
              "\n",
              "                xGBuildup  xgdifference  xAdifference  \n",
              "0      0.7298882678151131     -0.579198     -0.125465  \n",
              "1      2.0503234416246414      2.468274     -1.766826  \n",
              "2     0.23684066534042358     -0.151702     -0.015900  \n",
              "3      1.2324372678995132      1.411931      0.191991  \n",
              "4      0.4057522751390934      0.662550     -0.267500  \n",
              "..                    ...           ...           ...  \n",
              "410                     0      0.000000      0.000000  \n",
              "411    0.6901140883564949     -0.321223     -0.333616  \n",
              "418     1.275091726332903     -0.064324     -0.053036  \n",
              "420    0.4920034073293209     -0.232794     -0.083017  \n",
              "422  0.058851972222328186     -0.048638     -0.408040  \n",
              "\n",
              "[352 rows x 20 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-5317b1fc-432b-4fe8-8222-8a780aab03ae\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>player_name</th>\n",
              "      <th>games</th>\n",
              "      <th>time</th>\n",
              "      <th>goals_1wks</th>\n",
              "      <th>xG_1wks</th>\n",
              "      <th>assists_1wks</th>\n",
              "      <th>xA_1wks</th>\n",
              "      <th>shots_1wks</th>\n",
              "      <th>key_passes_1wks</th>\n",
              "      <th>yellow_cards</th>\n",
              "      <th>red_cards</th>\n",
              "      <th>position</th>\n",
              "      <th>team_title</th>\n",
              "      <th>npg_1wks</th>\n",
              "      <th>npxG_1wks</th>\n",
              "      <th>xGChain</th>\n",
              "      <th>xGBuildup</th>\n",
              "      <th>xgdifference</th>\n",
              "      <th>xAdifference</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>8260</td>\n",
              "      <td>Erling Haaland</td>\n",
              "      <td>6</td>\n",
              "      <td>535</td>\n",
              "      <td>8</td>\n",
              "      <td>8.579198</td>\n",
              "      <td>1</td>\n",
              "      <td>1.125465</td>\n",
              "      <td>31</td>\n",
              "      <td>7</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>F</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>7</td>\n",
              "      <td>7.056859791278839</td>\n",
              "      <td>7.640112280845642</td>\n",
              "      <td>0.7298882678151131</td>\n",
              "      <td>-0.579198</td>\n",
              "      <td>-0.125465</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>453</td>\n",
              "      <td>Son Heung-Min</td>\n",
              "      <td>6</td>\n",
              "      <td>509</td>\n",
              "      <td>5</td>\n",
              "      <td>2.531726</td>\n",
              "      <td>0</td>\n",
              "      <td>1.766826</td>\n",
              "      <td>16</td>\n",
              "      <td>11</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>F M</td>\n",
              "      <td>Tottenham</td>\n",
              "      <td>5</td>\n",
              "      <td>2.5317263305187225</td>\n",
              "      <td>5.605026721954346</td>\n",
              "      <td>2.0503234416246414</td>\n",
              "      <td>2.468274</td>\n",
              "      <td>-1.766826</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>468</td>\n",
              "      <td>Callum Wilson</td>\n",
              "      <td>6</td>\n",
              "      <td>242</td>\n",
              "      <td>4</td>\n",
              "      <td>4.151702</td>\n",
              "      <td>0</td>\n",
              "      <td>0.015900</td>\n",
              "      <td>15</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>F S</td>\n",
              "      <td>Newcastle United</td>\n",
              "      <td>3</td>\n",
              "      <td>3.390533320605755</td>\n",
              "      <td>3.509474078193307</td>\n",
              "      <td>0.23684066534042358</td>\n",
              "      <td>-0.151702</td>\n",
              "      <td>-0.015900</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>1776</td>\n",
              "      <td>Jarrod Bowen</td>\n",
              "      <td>6</td>\n",
              "      <td>540</td>\n",
              "      <td>4</td>\n",
              "      <td>2.588069</td>\n",
              "      <td>1</td>\n",
              "      <td>0.808009</td>\n",
              "      <td>16</td>\n",
              "      <td>4</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>M</td>\n",
              "      <td>West Ham</td>\n",
              "      <td>4</td>\n",
              "      <td>2.5880690813064575</td>\n",
              "      <td>3.1078141033649445</td>\n",
              "      <td>1.2324372678995132</td>\n",
              "      <td>1.411931</td>\n",
              "      <td>0.191991</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>3697</td>\n",
              "      <td>Odsonne Edouard</td>\n",
              "      <td>6</td>\n",
              "      <td>522</td>\n",
              "      <td>4</td>\n",
              "      <td>3.337450</td>\n",
              "      <td>0</td>\n",
              "      <td>0.267500</td>\n",
              "      <td>20</td>\n",
              "      <td>5</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>F</td>\n",
              "      <td>Crystal Palace</td>\n",
              "      <td>4</td>\n",
              "      <td>3.337449833750725</td>\n",
              "      <td>3.16320563852787</td>\n",
              "      <td>0.4057522751390934</td>\n",
              "      <td>0.662550</td>\n",
              "      <td>-0.267500</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>410</th>\n",
              "      <td>11728</td>\n",
              "      <td>Calvin Bassey</td>\n",
              "      <td>3</td>\n",
              "      <td>107</td>\n",
              "      <td>0</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>D S</td>\n",
              "      <td>Fulham</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>411</th>\n",
              "      <td>11729</td>\n",
              "      <td>Bénie Traoré</td>\n",
              "      <td>5</td>\n",
              "      <td>311</td>\n",
              "      <td>0</td>\n",
              "      <td>0.321223</td>\n",
              "      <td>0</td>\n",
              "      <td>0.333616</td>\n",
              "      <td>1</td>\n",
              "      <td>3</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>F M S</td>\n",
              "      <td>Sheffield United</td>\n",
              "      <td>0</td>\n",
              "      <td>0.3212226927280426</td>\n",
              "      <td>1.2498194947838783</td>\n",
              "      <td>0.6901140883564949</td>\n",
              "      <td>-0.321223</td>\n",
              "      <td>-0.333616</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>418</th>\n",
              "      <td>11926</td>\n",
              "      <td>Edson Álvarez</td>\n",
              "      <td>5</td>\n",
              "      <td>339</td>\n",
              "      <td>0</td>\n",
              "      <td>0.064324</td>\n",
              "      <td>0</td>\n",
              "      <td>0.053036</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>3</td>\n",
              "      <td>0</td>\n",
              "      <td>M S</td>\n",
              "      <td>West Ham</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0643242746591568</td>\n",
              "      <td>1.3924516029655933</td>\n",
              "      <td>1.275091726332903</td>\n",
              "      <td>-0.064324</td>\n",
              "      <td>-0.053036</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>420</th>\n",
              "      <td>11998</td>\n",
              "      <td>Hannes Delcroix</td>\n",
              "      <td>3</td>\n",
              "      <td>130</td>\n",
              "      <td>0</td>\n",
              "      <td>0.232794</td>\n",
              "      <td>0</td>\n",
              "      <td>0.083017</td>\n",
              "      <td>4</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>D S</td>\n",
              "      <td>Burnley</td>\n",
              "      <td>0</td>\n",
              "      <td>0.23279432207345963</td>\n",
              "      <td>0.5750201642513275</td>\n",
              "      <td>0.4920034073293209</td>\n",
              "      <td>-0.232794</td>\n",
              "      <td>-0.083017</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>422</th>\n",
              "      <td>12094</td>\n",
              "      <td>Mike Trésor</td>\n",
              "      <td>2</td>\n",
              "      <td>83</td>\n",
              "      <td>0</td>\n",
              "      <td>0.048638</td>\n",
              "      <td>0</td>\n",
              "      <td>0.408040</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>S</td>\n",
              "      <td>Burnley</td>\n",
              "      <td>0</td>\n",
              "      <td>0.04863787442445755</td>\n",
              "      <td>0.10748984664678574</td>\n",
              "      <td>0.058851972222328186</td>\n",
              "      <td>-0.048638</td>\n",
              "      <td>-0.408040</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>352 rows × 20 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-5317b1fc-432b-4fe8-8222-8a780aab03ae')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-5317b1fc-432b-4fe8-8222-8a780aab03ae button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-5317b1fc-432b-4fe8-8222-8a780aab03ae');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-e9ca1071-63f9-42ef-8428-7907091d98d8\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-e9ca1071-63f9-42ef-8428-7907091d98d8')\"\n",
              "            title=\"Suggest charts.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-e9ca1071-63f9-42ef-8428-7907091d98d8 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 7
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "onegamedftidy = one_game_df.drop(columns=[\n",
        " 'time',\n",
        " 'goals_1wks',\n",
        " 'assists_1wks',\n",
        " 'shots_1wks',\n",
        " 'key_passes_1wks',\n",
        " 'yellow_cards',\n",
        " 'red_cards',\n",
        " 'npg_1wks',\n",
        " 'npxG_1wks',\n",
        " 'xGChain',\n",
        " 'xGBuildup',\n",
        " 'xgdifference',\n",
        " 'xAdifference'])\n",
        "onegamedftidy"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 424
        },
        "id": "RKf0tUGEh8FV",
        "outputId": "ac69d92a-375d-4b61-d0de-a0859cbf59c5"
      },
      "execution_count": 8,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "        id      player_name games   xG_1wks   xA_1wks position  \\\n",
              "0     8260   Erling Haaland     6  8.579198  1.125465        F   \n",
              "1      453    Son Heung-Min     6  2.531726  1.766826      F M   \n",
              "2      468    Callum Wilson     6  4.151702  0.015900      F S   \n",
              "3     1776     Jarrod Bowen     6  2.588069  0.808009        M   \n",
              "4     3697  Odsonne Edouard     6  3.337450  0.267500        F   \n",
              "..     ...              ...   ...       ...       ...      ...   \n",
              "410  11728    Calvin Bassey     3  0.000000  0.000000      D S   \n",
              "411  11729     Bénie Traoré     5  0.321223  0.333616    F M S   \n",
              "418  11926    Edson Álvarez     5  0.064324  0.053036      M S   \n",
              "420  11998  Hannes Delcroix     3  0.232794  0.083017      D S   \n",
              "422  12094      Mike Trésor     2  0.048638  0.408040        S   \n",
              "\n",
              "           team_title  \n",
              "0     Manchester City  \n",
              "1           Tottenham  \n",
              "2    Newcastle United  \n",
              "3            West Ham  \n",
              "4      Crystal Palace  \n",
              "..                ...  \n",
              "410            Fulham  \n",
              "411  Sheffield United  \n",
              "418          West Ham  \n",
              "420           Burnley  \n",
              "422           Burnley  \n",
              "\n",
              "[352 rows x 7 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-f3b356eb-070a-43bd-a393-0e2f169c1de0\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>player_name</th>\n",
              "      <th>games</th>\n",
              "      <th>xG_1wks</th>\n",
              "      <th>xA_1wks</th>\n",
              "      <th>position</th>\n",
              "      <th>team_title</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>8260</td>\n",
              "      <td>Erling Haaland</td>\n",
              "      <td>6</td>\n",
              "      <td>8.579198</td>\n",
              "      <td>1.125465</td>\n",
              "      <td>F</td>\n",
              "      <td>Manchester City</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>453</td>\n",
              "      <td>Son Heung-Min</td>\n",
              "      <td>6</td>\n",
              "      <td>2.531726</td>\n",
              "      <td>1.766826</td>\n",
              "      <td>F M</td>\n",
              "      <td>Tottenham</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>468</td>\n",
              "      <td>Callum Wilson</td>\n",
              "      <td>6</td>\n",
              "      <td>4.151702</td>\n",
              "      <td>0.015900</td>\n",
              "      <td>F S</td>\n",
              "      <td>Newcastle United</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>1776</td>\n",
              "      <td>Jarrod Bowen</td>\n",
              "      <td>6</td>\n",
              "      <td>2.588069</td>\n",
              "      <td>0.808009</td>\n",
              "      <td>M</td>\n",
              "      <td>West Ham</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>3697</td>\n",
              "      <td>Odsonne Edouard</td>\n",
              "      <td>6</td>\n",
              "      <td>3.337450</td>\n",
              "      <td>0.267500</td>\n",
              "      <td>F</td>\n",
              "      <td>Crystal Palace</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>410</th>\n",
              "      <td>11728</td>\n",
              "      <td>Calvin Bassey</td>\n",
              "      <td>3</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>D S</td>\n",
              "      <td>Fulham</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>411</th>\n",
              "      <td>11729</td>\n",
              "      <td>Bénie Traoré</td>\n",
              "      <td>5</td>\n",
              "      <td>0.321223</td>\n",
              "      <td>0.333616</td>\n",
              "      <td>F M S</td>\n",
              "      <td>Sheffield United</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>418</th>\n",
              "      <td>11926</td>\n",
              "      <td>Edson Álvarez</td>\n",
              "      <td>5</td>\n",
              "      <td>0.064324</td>\n",
              "      <td>0.053036</td>\n",
              "      <td>M S</td>\n",
              "      <td>West Ham</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>420</th>\n",
              "      <td>11998</td>\n",
              "      <td>Hannes Delcroix</td>\n",
              "      <td>3</td>\n",
              "      <td>0.232794</td>\n",
              "      <td>0.083017</td>\n",
              "      <td>D S</td>\n",
              "      <td>Burnley</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>422</th>\n",
              "      <td>12094</td>\n",
              "      <td>Mike Trésor</td>\n",
              "      <td>2</td>\n",
              "      <td>0.048638</td>\n",
              "      <td>0.408040</td>\n",
              "      <td>S</td>\n",
              "      <td>Burnley</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>352 rows × 7 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-f3b356eb-070a-43bd-a393-0e2f169c1de0')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-f3b356eb-070a-43bd-a393-0e2f169c1de0 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-f3b356eb-070a-43bd-a393-0e2f169c1de0');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-56862319-1017-4e7e-a1d7-aead7253121b\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-56862319-1017-4e7e-a1d7-aead7253121b')\"\n",
              "            title=\"Suggest charts.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-56862319-1017-4e7e-a1d7-aead7253121b button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 8
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "!git clone https://github.com/pratos/fpl-mappers\n",
        "!git clone https://github.com/ChrisMusson/FPL-ID-Map\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "B9kCj8OeiKGn",
        "outputId": "d637c1d3-73e7-4721-a8f6-f0502014528e"
      },
      "execution_count": 9,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Cloning into 'fpl-mappers'...\n",
            "remote: Enumerating objects: 94, done.\u001b[K\n",
            "remote: Counting objects:   1% (1/94)\u001b[K\rremote: Counting objects:   2% (2/94)\u001b[K\rremote: Counting objects:   3% (3/94)\u001b[K\rremote: Counting objects:   4% (4/94)\u001b[K\rremote: Counting objects:   5% (5/94)\u001b[K\rremote: Counting objects:   6% (6/94)\u001b[K\rremote: Counting objects:   7% (7/94)\u001b[K\rremote: Counting objects:   8% (8/94)\u001b[K\rremote: Counting objects:   9% (9/94)\u001b[K\rremote: Counting objects:  10% (10/94)\u001b[K\rremote: Counting objects:  11% (11/94)\u001b[K\rremote: Counting objects:  12% (12/94)\u001b[K\rremote: Counting objects:  13% (13/94)\u001b[K\rremote: Counting objects:  14% (14/94)\u001b[K\rremote: Counting objects:  15% (15/94)\u001b[K\rremote: Counting objects:  17% (16/94)\u001b[K\rremote: Counting objects:  18% (17/94)\u001b[K\rremote: Counting objects:  19% (18/94)\u001b[K\rremote: Counting objects:  20% (19/94)\u001b[K\rremote: Counting objects:  21% (20/94)\u001b[K\rremote: Counting objects:  22% (21/94)\u001b[K\rremote: Counting objects:  23% (22/94)\u001b[K\rremote: Counting objects:  24% (23/94)\u001b[K\rremote: Counting objects:  25% (24/94)\u001b[K\rremote: Counting objects:  26% (25/94)\u001b[K\rremote: Counting objects:  27% (26/94)\u001b[K\rremote: Counting objects:  28% (27/94)\u001b[K\rremote: Counting objects:  29% (28/94)\u001b[K\rremote: Counting objects:  30% (29/94)\u001b[K\rremote: Counting objects:  31% (30/94)\u001b[K\rremote: Counting objects:  32% (31/94)\u001b[K\rremote: Counting objects:  34% (32/94)\u001b[K\rremote: Counting objects:  35% (33/94)\u001b[K\rremote: Counting objects:  36% (34/94)\u001b[K\rremote: Counting objects:  37% (35/94)\u001b[K\rremote: Counting objects:  38% (36/94)\u001b[K\rremote: Counting objects:  39% (37/94)\u001b[K\rremote: Counting objects:  40% (38/94)\u001b[K\rremote: Counting objects:  41% (39/94)\u001b[K\rremote: Counting objects:  42% (40/94)\u001b[K\rremote: Counting objects:  43% (41/94)\u001b[K\rremote: Counting objects:  44% (42/94)\u001b[K\rremote: Counting objects:  45% (43/94)\u001b[K\rremote: Counting objects:  46% (44/94)\u001b[K\rremote: Counting objects:  47% (45/94)\u001b[K\rremote: Counting objects:  48% (46/94)\u001b[K\rremote: Counting objects:  50% (47/94)\u001b[K\rremote: Counting objects:  51% (48/94)\u001b[K\rremote: Counting objects:  52% (49/94)\u001b[K\rremote: Counting objects:  53% (50/94)\u001b[K\rremote: Counting objects:  54% (51/94)\u001b[K\rremote: Counting objects:  55% (52/94)\u001b[K\rremote: Counting objects:  56% (53/94)\u001b[K\rremote: Counting objects:  57% (54/94)\u001b[K\rremote: Counting objects:  58% (55/94)\u001b[K\rremote: Counting objects:  59% (56/94)\u001b[K\rremote: Counting objects:  60% (57/94)\u001b[K\rremote: Counting objects:  61% (58/94)\u001b[K\rremote: Counting objects:  62% (59/94)\u001b[K\rremote: Counting objects:  63% (60/94)\u001b[K\rremote: Counting objects:  64% (61/94)\u001b[K\rremote: Counting objects:  65% (62/94)\u001b[K\rremote: Counting objects:  67% (63/94)\u001b[K\rremote: Counting objects:  68% (64/94)\u001b[K\rremote: Counting objects:  69% (65/94)\u001b[K\rremote: Counting objects:  70% (66/94)\u001b[K\rremote: Counting objects:  71% (67/94)\u001b[K\rremote: Counting objects:  72% (68/94)\u001b[K\rremote: Counting objects:  73% (69/94)\u001b[K\rremote: Counting objects:  74% (70/94)\u001b[K\rremote: Counting objects:  75% (71/94)\u001b[K\rremote: Counting objects:  76% (72/94)\u001b[K\rremote: Counting objects:  77% (73/94)\u001b[K\rremote: Counting objects:  78% (74/94)\u001b[K\rremote: Counting objects:  79% (75/94)\u001b[K\rremote: Counting objects:  80% (76/94)\u001b[K\rremote: Counting objects:  81% (77/94)\u001b[K\rremote: Counting objects:  82% (78/94)\u001b[K\rremote: Counting objects:  84% (79/94)\u001b[K\rremote: Counting objects:  85% (80/94)\u001b[K\rremote: Counting objects:  86% (81/94)\u001b[K\rremote: Counting objects:  87% (82/94)\u001b[K\rremote: Counting objects:  88% (83/94)\u001b[K\rremote: Counting objects:  89% (84/94)\u001b[K\rremote: Counting objects:  90% (85/94)\u001b[K\rremote: Counting objects:  91% (86/94)\u001b[K\rremote: Counting objects:  92% (87/94)\u001b[K\rremote: Counting objects:  93% (88/94)\u001b[K\rremote: Counting objects:  94% (89/94)\u001b[K\rremote: Counting objects:  95% (90/94)\u001b[K\rremote: Counting objects:  96% (91/94)\u001b[K\rremote: Counting objects:  97% (92/94)\u001b[K\rremote: Counting objects:  98% (93/94)\u001b[K\rremote: Counting objects: 100% (94/94)\u001b[K\rremote: Counting objects: 100% (94/94), done.\u001b[K\n",
            "remote: Compressing objects:   1% (1/56)\u001b[K\rremote: Compressing objects:   3% (2/56)\u001b[K\rremote: Compressing objects:   5% (3/56)\u001b[K\rremote: Compressing objects:   7% (4/56)\u001b[K\rremote: Compressing objects:   8% (5/56)\u001b[K\rremote: Compressing objects:  10% (6/56)\u001b[K\rremote: Compressing objects:  12% (7/56)\u001b[K\rremote: Compressing objects:  14% (8/56)\u001b[K\rremote: Compressing objects:  16% (9/56)\u001b[K\rremote: Compressing objects:  17% (10/56)\u001b[K\rremote: Compressing objects:  19% (11/56)\u001b[K\rremote: Compressing objects:  21% (12/56)\u001b[K\rremote: Compressing objects:  23% (13/56)\u001b[K\rremote: Compressing objects:  25% (14/56)\u001b[K\rremote: Compressing objects:  26% (15/56)\u001b[K\rremote: Compressing objects:  28% (16/56)\u001b[K\rremote: Compressing objects:  30% (17/56)\u001b[K\rremote: Compressing objects:  32% (18/56)\u001b[K\rremote: Compressing objects:  33% (19/56)\u001b[K\rremote: Compressing objects:  35% (20/56)\u001b[K\rremote: Compressing objects:  37% (21/56)\u001b[K\rremote: Compressing objects:  39% (22/56)\u001b[K\rremote: Compressing objects:  41% (23/56)\u001b[K\rremote: Compressing objects:  42% (24/56)\u001b[K\rremote: Compressing objects:  44% (25/56)\u001b[K\rremote: Compressing objects:  46% (26/56)\u001b[K\rremote: Compressing objects:  48% (27/56)\u001b[K\rremote: Compressing objects:  50% (28/56)\u001b[K\rremote: Compressing objects:  51% (29/56)\u001b[K\rremote: Compressing objects:  53% (30/56)\u001b[K\rremote: Compressing objects:  55% (31/56)\u001b[K\rremote: Compressing objects:  57% (32/56)\u001b[K\rremote: Compressing objects:  58% (33/56)\u001b[K\rremote: Compressing objects:  60% (34/56)\u001b[K\rremote: Compressing objects:  62% (35/56)\u001b[K\rremote: Compressing objects:  64% (36/56)\u001b[K\rremote: Compressing objects:  66% (37/56)\u001b[K\rremote: Compressing objects:  67% (38/56)\u001b[K\rremote: Compressing objects:  69% (39/56)\u001b[K\rremote: Compressing objects:  71% (40/56)\u001b[K\rremote: Compressing objects:  73% (41/56)\u001b[K\rremote: Compressing objects:  75% (42/56)\u001b[K\rremote: Compressing objects:  76% (43/56)\u001b[K\rremote: Compressing objects:  78% (44/56)\u001b[K\rremote: Compressing objects:  80% (45/56)\u001b[K\rremote: Compressing objects:  82% (46/56)\u001b[K\rremote: Compressing objects:  83% (47/56)\u001b[K\rremote: Compressing objects:  85% (48/56)\u001b[K\rremote: Compressing objects:  87% (49/56)\u001b[K\rremote: Compressing objects:  89% (50/56)\u001b[K\rremote: Compressing objects:  91% (51/56)\u001b[K\rremote: Compressing objects:  92% (52/56)\u001b[K\rremote: Compressing objects:  94% (53/56)\u001b[K\rremote: Compressing objects:  96% (54/56)\u001b[K\rremote: Compressing objects:  98% (55/56)\u001b[K\rremote: Compressing objects: 100% (56/56)\u001b[K\rremote: Compressing objects: 100% (56/56), done.\u001b[K\n",
            "Receiving objects:   1% (1/94)\rReceiving objects:   2% (2/94)\rReceiving objects:   3% (3/94)\rReceiving objects:   4% (4/94)\rReceiving objects:   5% (5/94)\rReceiving objects:   6% (6/94)\rReceiving objects:   7% (7/94)\rReceiving objects:   8% (8/94)\rReceiving objects:   9% (9/94)\rReceiving objects:  10% (10/94)\rReceiving objects:  11% (11/94)\rReceiving objects:  12% (12/94)\rReceiving objects:  13% (13/94)\rReceiving objects:  14% (14/94)\rReceiving objects:  15% (15/94)\rReceiving objects:  17% (16/94)\rReceiving objects:  18% (17/94)\rReceiving objects:  19% (18/94)\rReceiving objects:  20% (19/94)\rReceiving objects:  21% (20/94)\rReceiving objects:  22% (21/94)\rReceiving objects:  23% (22/94)\rReceiving objects:  24% (23/94)\rReceiving objects:  25% (24/94)\rReceiving objects:  26% (25/94)\rReceiving objects:  27% (26/94)\rReceiving objects:  28% (27/94)\rReceiving objects:  29% (28/94)\rReceiving objects:  30% (29/94)\rReceiving objects:  31% (30/94)\rReceiving objects:  32% (31/94)\rReceiving objects:  34% (32/94)\rReceiving objects:  35% (33/94)\rReceiving objects:  36% (34/94)\rReceiving objects:  37% (35/94)\rReceiving objects:  38% (36/94)\rReceiving objects:  39% (37/94)\rReceiving objects:  40% (38/94)\rReceiving objects:  41% (39/94)\rReceiving objects:  42% (40/94)\rReceiving objects:  43% (41/94)\rReceiving objects:  44% (42/94)\rReceiving objects:  45% (43/94)\rReceiving objects:  46% (44/94)\rReceiving objects:  47% (45/94)\rReceiving objects:  48% (46/94)\rReceiving objects:  50% (47/94)\rReceiving objects:  51% (48/94)\rReceiving objects:  52% (49/94)\rReceiving objects:  53% (50/94)\rReceiving objects:  54% (51/94)\rReceiving objects:  55% (52/94)\rReceiving objects:  56% (53/94)\rReceiving objects:  57% (54/94)\rReceiving objects:  58% (55/94)\rReceiving objects:  59% (56/94)\rReceiving objects:  60% (57/94)\rReceiving objects:  61% (58/94)\rReceiving objects:  62% (59/94)\rReceiving objects:  63% (60/94)\rReceiving objects:  64% (61/94)\rReceiving objects:  65% (62/94)\rReceiving objects:  67% (63/94)\rReceiving objects:  68% (64/94)\rReceiving objects:  69% (65/94)\rReceiving objects:  70% (66/94)\rReceiving objects:  71% (67/94)\rReceiving objects:  72% (68/94)\rReceiving objects:  73% (69/94)\rReceiving objects:  74% (70/94)\rReceiving objects:  75% (71/94)\rReceiving objects:  76% (72/94)\rReceiving objects:  77% (73/94)\rReceiving objects:  78% (74/94)\rReceiving objects:  79% (75/94)\rReceiving objects:  80% (76/94)\rReceiving objects:  81% (77/94)\rReceiving objects:  82% (78/94)\rReceiving objects:  84% (79/94)\rReceiving objects:  85% (80/94)\rReceiving objects:  86% (81/94)\rReceiving objects:  87% (82/94)\rReceiving objects:  88% (83/94)\rremote: Total 94 (delta 32), reused 89 (delta 30), pack-reused 0\u001b[K\n",
            "Receiving objects:  89% (84/94)\rReceiving objects:  90% (85/94)\rReceiving objects:  91% (86/94)\rReceiving objects:  92% (87/94)\rReceiving objects:  93% (88/94)\rReceiving objects:  94% (89/94)\rReceiving objects:  95% (90/94)\rReceiving objects:  96% (91/94)\rReceiving objects:  97% (92/94)\rReceiving objects:  98% (93/94)\rReceiving objects: 100% (94/94)\rReceiving objects: 100% (94/94), 217.69 KiB | 12.09 MiB/s, done.\n",
            "Resolving deltas:   0% (0/32)\rResolving deltas:   3% (1/32)\rResolving deltas:   6% (2/32)\rResolving deltas:   9% (3/32)\rResolving deltas:  12% (4/32)\rResolving deltas:  15% (5/32)\rResolving deltas:  18% (6/32)\rResolving deltas:  21% (7/32)\rResolving deltas:  25% (8/32)\rResolving deltas:  28% (9/32)\rResolving deltas:  31% (10/32)\rResolving deltas:  34% (11/32)\rResolving deltas:  37% (12/32)\rResolving deltas:  40% (13/32)\rResolving deltas:  43% (14/32)\rResolving deltas:  46% (15/32)\rResolving deltas:  50% (16/32)\rResolving deltas:  53% (17/32)\rResolving deltas:  56% (18/32)\rResolving deltas:  59% (19/32)\rResolving deltas:  62% (20/32)\rResolving deltas:  65% (21/32)\rResolving deltas:  68% (22/32)\rResolving deltas:  71% (23/32)\rResolving deltas:  75% (24/32)\rResolving deltas:  78% (25/32)\rResolving deltas:  81% (26/32)\rResolving deltas:  84% (27/32)\rResolving deltas:  87% (28/32)\rResolving deltas:  90% (29/32)\rResolving deltas:  93% (30/32)\rResolving deltas:  96% (31/32)\rResolving deltas: 100% (32/32)\rResolving deltas: 100% (32/32), done.\n",
            "Cloning into 'FPL-ID-Map'...\n",
            "remote: Enumerating objects: 242, done.\u001b[K\n",
            "remote: Counting objects: 100% (242/242), done.\u001b[K\n",
            "remote: Compressing objects: 100% (120/120), done.\u001b[K\n",
            "remote: Total 242 (delta 176), reused 188 (delta 122), pack-reused 0\u001b[K\n",
            "Receiving objects: 100% (242/242), 273.05 KiB | 8.81 MiB/s, done.\n",
            "Resolving deltas: 100% (176/176), done.\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "data1 = pd.read_csv('/content/FPL-ID-Map/Understat.csv', on_bad_lines='skip')\n",
        "data2 = pd.read_csv('/content/FPL-ID-Map/FPL/22-23.csv', on_bad_lines='skip')\n",
        "understatwithfplid1 = pd.merge(data2,\n",
        "                     data1,\n",
        "                     on ='code',\n",
        "                     how ='left')\n",
        "understatid = understatwithfplid1.drop(columns=[\n",
        "'code',\n",
        " 'first_name_x',\n",
        " 'second_name_x',\n",
        " 'web_name_x',\n",
        " 'first_name_y',\n",
        " 'second_name_y',\n",
        " 'web_name_y',])\n",
        "one_game_df.rename(columns={'id': 'understat'}, inplace=True)\n",
        "one_game_df"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 600
        },
        "id": "SaX7692EiQA7",
        "outputId": "a1cafec9-ea5a-4f3e-a0f9-b6bf4ba78761"
      },
      "execution_count": 10,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "    understat      player_name games  time  goals_1wks   xG_1wks  \\\n",
              "0        8260   Erling Haaland     6   535           8  8.579198   \n",
              "1         453    Son Heung-Min     6   509           5  2.531726   \n",
              "2         468    Callum Wilson     6   242           4  4.151702   \n",
              "3        1776     Jarrod Bowen     6   540           4  2.588069   \n",
              "4        3697  Odsonne Edouard     6   522           4  3.337450   \n",
              "..        ...              ...   ...   ...         ...       ...   \n",
              "410     11728    Calvin Bassey     3   107           0  0.000000   \n",
              "411     11729     Bénie Traoré     5   311           0  0.321223   \n",
              "418     11926    Edson Álvarez     5   339           0  0.064324   \n",
              "420     11998  Hannes Delcroix     3   130           0  0.232794   \n",
              "422     12094      Mike Trésor     2    83           0  0.048638   \n",
              "\n",
              "     assists_1wks   xA_1wks shots_1wks key_passes_1wks yellow_cards red_cards  \\\n",
              "0               1  1.125465         31               7            0         0   \n",
              "1               0  1.766826         16              11            0         0   \n",
              "2               0  0.015900         15               1            1         0   \n",
              "3               1  0.808009         16               4            1         0   \n",
              "4               0  0.267500         20               5            0         0   \n",
              "..            ...       ...        ...             ...          ...       ...   \n",
              "410             0  0.000000          0               0            0         1   \n",
              "411             0  0.333616          1               3            0         0   \n",
              "418             0  0.053036          1               1            3         0   \n",
              "420             0  0.083017          4               2            1         0   \n",
              "422             0  0.408040          1               2            0         0   \n",
              "\n",
              "    position        team_title npg_1wks            npxG_1wks  \\\n",
              "0          F   Manchester City        7    7.056859791278839   \n",
              "1        F M         Tottenham        5   2.5317263305187225   \n",
              "2        F S  Newcastle United        3    3.390533320605755   \n",
              "3          M          West Ham        4   2.5880690813064575   \n",
              "4          F    Crystal Palace        4    3.337449833750725   \n",
              "..       ...               ...      ...                  ...   \n",
              "410      D S            Fulham        0                    0   \n",
              "411    F M S  Sheffield United        0   0.3212226927280426   \n",
              "418      M S          West Ham        0   0.0643242746591568   \n",
              "420      D S           Burnley        0  0.23279432207345963   \n",
              "422        S           Burnley        0  0.04863787442445755   \n",
              "\n",
              "                 xGChain             xGBuildup  xgdifference  xAdifference  \n",
              "0      7.640112280845642    0.7298882678151131     -0.579198     -0.125465  \n",
              "1      5.605026721954346    2.0503234416246414      2.468274     -1.766826  \n",
              "2      3.509474078193307   0.23684066534042358     -0.151702     -0.015900  \n",
              "3     3.1078141033649445    1.2324372678995132      1.411931      0.191991  \n",
              "4       3.16320563852787    0.4057522751390934      0.662550     -0.267500  \n",
              "..                   ...                   ...           ...           ...  \n",
              "410                    0                     0      0.000000      0.000000  \n",
              "411   1.2498194947838783    0.6901140883564949     -0.321223     -0.333616  \n",
              "418   1.3924516029655933     1.275091726332903     -0.064324     -0.053036  \n",
              "420   0.5750201642513275    0.4920034073293209     -0.232794     -0.083017  \n",
              "422  0.10748984664678574  0.058851972222328186     -0.048638     -0.408040  \n",
              "\n",
              "[352 rows x 20 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-7fc1879f-8261-4239-9f8f-7173844e16ff\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>understat</th>\n",
              "      <th>player_name</th>\n",
              "      <th>games</th>\n",
              "      <th>time</th>\n",
              "      <th>goals_1wks</th>\n",
              "      <th>xG_1wks</th>\n",
              "      <th>assists_1wks</th>\n",
              "      <th>xA_1wks</th>\n",
              "      <th>shots_1wks</th>\n",
              "      <th>key_passes_1wks</th>\n",
              "      <th>yellow_cards</th>\n",
              "      <th>red_cards</th>\n",
              "      <th>position</th>\n",
              "      <th>team_title</th>\n",
              "      <th>npg_1wks</th>\n",
              "      <th>npxG_1wks</th>\n",
              "      <th>xGChain</th>\n",
              "      <th>xGBuildup</th>\n",
              "      <th>xgdifference</th>\n",
              "      <th>xAdifference</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>8260</td>\n",
              "      <td>Erling Haaland</td>\n",
              "      <td>6</td>\n",
              "      <td>535</td>\n",
              "      <td>8</td>\n",
              "      <td>8.579198</td>\n",
              "      <td>1</td>\n",
              "      <td>1.125465</td>\n",
              "      <td>31</td>\n",
              "      <td>7</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>F</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>7</td>\n",
              "      <td>7.056859791278839</td>\n",
              "      <td>7.640112280845642</td>\n",
              "      <td>0.7298882678151131</td>\n",
              "      <td>-0.579198</td>\n",
              "      <td>-0.125465</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>453</td>\n",
              "      <td>Son Heung-Min</td>\n",
              "      <td>6</td>\n",
              "      <td>509</td>\n",
              "      <td>5</td>\n",
              "      <td>2.531726</td>\n",
              "      <td>0</td>\n",
              "      <td>1.766826</td>\n",
              "      <td>16</td>\n",
              "      <td>11</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>F M</td>\n",
              "      <td>Tottenham</td>\n",
              "      <td>5</td>\n",
              "      <td>2.5317263305187225</td>\n",
              "      <td>5.605026721954346</td>\n",
              "      <td>2.0503234416246414</td>\n",
              "      <td>2.468274</td>\n",
              "      <td>-1.766826</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>468</td>\n",
              "      <td>Callum Wilson</td>\n",
              "      <td>6</td>\n",
              "      <td>242</td>\n",
              "      <td>4</td>\n",
              "      <td>4.151702</td>\n",
              "      <td>0</td>\n",
              "      <td>0.015900</td>\n",
              "      <td>15</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>F S</td>\n",
              "      <td>Newcastle United</td>\n",
              "      <td>3</td>\n",
              "      <td>3.390533320605755</td>\n",
              "      <td>3.509474078193307</td>\n",
              "      <td>0.23684066534042358</td>\n",
              "      <td>-0.151702</td>\n",
              "      <td>-0.015900</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>1776</td>\n",
              "      <td>Jarrod Bowen</td>\n",
              "      <td>6</td>\n",
              "      <td>540</td>\n",
              "      <td>4</td>\n",
              "      <td>2.588069</td>\n",
              "      <td>1</td>\n",
              "      <td>0.808009</td>\n",
              "      <td>16</td>\n",
              "      <td>4</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>M</td>\n",
              "      <td>West Ham</td>\n",
              "      <td>4</td>\n",
              "      <td>2.5880690813064575</td>\n",
              "      <td>3.1078141033649445</td>\n",
              "      <td>1.2324372678995132</td>\n",
              "      <td>1.411931</td>\n",
              "      <td>0.191991</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>3697</td>\n",
              "      <td>Odsonne Edouard</td>\n",
              "      <td>6</td>\n",
              "      <td>522</td>\n",
              "      <td>4</td>\n",
              "      <td>3.337450</td>\n",
              "      <td>0</td>\n",
              "      <td>0.267500</td>\n",
              "      <td>20</td>\n",
              "      <td>5</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>F</td>\n",
              "      <td>Crystal Palace</td>\n",
              "      <td>4</td>\n",
              "      <td>3.337449833750725</td>\n",
              "      <td>3.16320563852787</td>\n",
              "      <td>0.4057522751390934</td>\n",
              "      <td>0.662550</td>\n",
              "      <td>-0.267500</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>410</th>\n",
              "      <td>11728</td>\n",
              "      <td>Calvin Bassey</td>\n",
              "      <td>3</td>\n",
              "      <td>107</td>\n",
              "      <td>0</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>D S</td>\n",
              "      <td>Fulham</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>411</th>\n",
              "      <td>11729</td>\n",
              "      <td>Bénie Traoré</td>\n",
              "      <td>5</td>\n",
              "      <td>311</td>\n",
              "      <td>0</td>\n",
              "      <td>0.321223</td>\n",
              "      <td>0</td>\n",
              "      <td>0.333616</td>\n",
              "      <td>1</td>\n",
              "      <td>3</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>F M S</td>\n",
              "      <td>Sheffield United</td>\n",
              "      <td>0</td>\n",
              "      <td>0.3212226927280426</td>\n",
              "      <td>1.2498194947838783</td>\n",
              "      <td>0.6901140883564949</td>\n",
              "      <td>-0.321223</td>\n",
              "      <td>-0.333616</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>418</th>\n",
              "      <td>11926</td>\n",
              "      <td>Edson Álvarez</td>\n",
              "      <td>5</td>\n",
              "      <td>339</td>\n",
              "      <td>0</td>\n",
              "      <td>0.064324</td>\n",
              "      <td>0</td>\n",
              "      <td>0.053036</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>3</td>\n",
              "      <td>0</td>\n",
              "      <td>M S</td>\n",
              "      <td>West Ham</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0643242746591568</td>\n",
              "      <td>1.3924516029655933</td>\n",
              "      <td>1.275091726332903</td>\n",
              "      <td>-0.064324</td>\n",
              "      <td>-0.053036</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>420</th>\n",
              "      <td>11998</td>\n",
              "      <td>Hannes Delcroix</td>\n",
              "      <td>3</td>\n",
              "      <td>130</td>\n",
              "      <td>0</td>\n",
              "      <td>0.232794</td>\n",
              "      <td>0</td>\n",
              "      <td>0.083017</td>\n",
              "      <td>4</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>D S</td>\n",
              "      <td>Burnley</td>\n",
              "      <td>0</td>\n",
              "      <td>0.23279432207345963</td>\n",
              "      <td>0.5750201642513275</td>\n",
              "      <td>0.4920034073293209</td>\n",
              "      <td>-0.232794</td>\n",
              "      <td>-0.083017</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>422</th>\n",
              "      <td>12094</td>\n",
              "      <td>Mike Trésor</td>\n",
              "      <td>2</td>\n",
              "      <td>83</td>\n",
              "      <td>0</td>\n",
              "      <td>0.048638</td>\n",
              "      <td>0</td>\n",
              "      <td>0.408040</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>S</td>\n",
              "      <td>Burnley</td>\n",
              "      <td>0</td>\n",
              "      <td>0.04863787442445755</td>\n",
              "      <td>0.10748984664678574</td>\n",
              "      <td>0.058851972222328186</td>\n",
              "      <td>-0.048638</td>\n",
              "      <td>-0.408040</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>352 rows × 20 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-7fc1879f-8261-4239-9f8f-7173844e16ff')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-7fc1879f-8261-4239-9f8f-7173844e16ff button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-7fc1879f-8261-4239-9f8f-7173844e16ff');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-6ca6adff-e3c5-40a7-8794-1da7c3751027\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-6ca6adff-e3c5-40a7-8794-1da7c3751027')\"\n",
              "            title=\"Suggest charts.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-6ca6adff-e3c5-40a7-8794-1da7c3751027 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 10
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "!git clone https://github.com/huricane85/FPL-API-Fixture-modeler"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "dU1giLdZir3J",
        "outputId": "ae09b715-17c9-4551-d0ca-7e0eea83b359"
      },
      "execution_count": 11,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Cloning into 'FPL-API-Fixture-modeler'...\n",
            "remote: Enumerating objects: 75, done.\u001b[K\n",
            "remote: Counting objects: 100% (75/75), done.\u001b[K\n",
            "remote: Compressing objects: 100% (75/75), done.\u001b[K\n",
            "remote: Total 75 (delta 37), reused 0 (delta 0), pack-reused 0\u001b[K\n",
            "Receiving objects: 100% (75/75), 3.08 MiB | 6.17 MiB/s, done.\n",
            "Resolving deltas: 100% (37/37), done.\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import pandas as pd\n",
        "\n",
        "# read the CSV file from GitHub into a DataFrame\n",
        "url = \"https://raw.githubusercontent.com/ChrisMusson/FPL-ID-Map/main/Master.csv\"\n",
        "df = pd.read_csv(url)\n",
        "\n",
        "# rename the \"22-23\" column to \"id\"\n",
        "df.rename(columns={'22-23': 'id'}, inplace=True)\n",
        "\n",
        "# convert \"id\" and \"understat\" columns to int64 and float64 respectively\n",
        "df['id'] = pd.to_numeric(df['id'], errors='coerce', downcast='integer').astype('Int64')\n",
        "df['understat'] = pd.to_numeric(df['understat'], errors='coerce', downcast='integer').astype('Int64')\n",
        "\n",
        "# filter out rows where \"understat\" is null\n",
        "df = df.dropna(subset=['understat'])\n",
        "\n",
        "# change data type of \"id\" column to float64\n",
        "df['id'] = df['id'].astype('float64')\n",
        "\n",
        "# create a new DataFrame with only the \"understat\" and \"id\" columns\n",
        "new_df = df[['understat', 'id']].dropna(subset=['id']).copy()\n",
        "\n",
        "# display the new DataFrame\n",
        "\n",
        "new_df\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 424
        },
        "id": "WRijWphEVPuN",
        "outputId": "5c5be35b-d531-41de-d77c-14268b0d74fa"
      },
      "execution_count": 12,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "      understat     id\n",
              "37         7821  760.0\n",
              "38         1697  627.0\n",
              "55         2371  326.0\n",
              "62          489  274.0\n",
              "77         8158  502.0\n",
              "...         ...    ...\n",
              "1933      11301  695.0\n",
              "1934      11146  632.0\n",
              "1935      11189  646.0\n",
              "1936      11302  696.0\n",
              "1937      11195  650.0\n",
              "\n",
              "[763 rows x 2 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-8da3ce7e-9ee4-4c96-8e5a-f75e3e21ba5c\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>understat</th>\n",
              "      <th>id</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>37</th>\n",
              "      <td>7821</td>\n",
              "      <td>760.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>38</th>\n",
              "      <td>1697</td>\n",
              "      <td>627.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>55</th>\n",
              "      <td>2371</td>\n",
              "      <td>326.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>62</th>\n",
              "      <td>489</td>\n",
              "      <td>274.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>77</th>\n",
              "      <td>8158</td>\n",
              "      <td>502.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1933</th>\n",
              "      <td>11301</td>\n",
              "      <td>695.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1934</th>\n",
              "      <td>11146</td>\n",
              "      <td>632.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1935</th>\n",
              "      <td>11189</td>\n",
              "      <td>646.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1936</th>\n",
              "      <td>11302</td>\n",
              "      <td>696.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1937</th>\n",
              "      <td>11195</td>\n",
              "      <td>650.0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>763 rows × 2 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-8da3ce7e-9ee4-4c96-8e5a-f75e3e21ba5c')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-8da3ce7e-9ee4-4c96-8e5a-f75e3e21ba5c button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-8da3ce7e-9ee4-4c96-8e5a-f75e3e21ba5c');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-d1a0c0c1-684f-4432-a2fd-f1f01e241478\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-d1a0c0c1-684f-4432-a2fd-f1f01e241478')\"\n",
              "            title=\"Suggest charts.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-d1a0c0c1-684f-4432-a2fd-f1f01e241478 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 12
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "new_df"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 424
        },
        "id": "NhQ4dZKdUv36",
        "outputId": "c4b45dbc-d1e9-4590-b098-9e4051d539ff"
      },
      "execution_count": 13,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "      understat     id\n",
              "37         7821  760.0\n",
              "38         1697  627.0\n",
              "55         2371  326.0\n",
              "62          489  274.0\n",
              "77         8158  502.0\n",
              "...         ...    ...\n",
              "1933      11301  695.0\n",
              "1934      11146  632.0\n",
              "1935      11189  646.0\n",
              "1936      11302  696.0\n",
              "1937      11195  650.0\n",
              "\n",
              "[763 rows x 2 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-9fc6092b-f746-4a0c-af76-ccb2eb12968b\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>understat</th>\n",
              "      <th>id</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>37</th>\n",
              "      <td>7821</td>\n",
              "      <td>760.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>38</th>\n",
              "      <td>1697</td>\n",
              "      <td>627.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>55</th>\n",
              "      <td>2371</td>\n",
              "      <td>326.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>62</th>\n",
              "      <td>489</td>\n",
              "      <td>274.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>77</th>\n",
              "      <td>8158</td>\n",
              "      <td>502.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1933</th>\n",
              "      <td>11301</td>\n",
              "      <td>695.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1934</th>\n",
              "      <td>11146</td>\n",
              "      <td>632.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1935</th>\n",
              "      <td>11189</td>\n",
              "      <td>646.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1936</th>\n",
              "      <td>11302</td>\n",
              "      <td>696.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1937</th>\n",
              "      <td>11195</td>\n",
              "      <td>650.0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>763 rows × 2 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-9fc6092b-f746-4a0c-af76-ccb2eb12968b')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-9fc6092b-f746-4a0c-af76-ccb2eb12968b button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-9fc6092b-f746-4a0c-af76-ccb2eb12968b');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-b46da880-92ac-4714-9b3e-73e2d12dd444\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-b46da880-92ac-4714-9b3e-73e2d12dd444')\"\n",
              "            title=\"Suggest charts.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-b46da880-92ac-4714-9b3e-73e2d12dd444 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 13
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "one_game_df[\"understat\"] = one_game_df[\"understat\"].astype(str).astype(int)\n",
        "understatid2 = new_df\n",
        "understatwithfplid = pd.merge(one_game_df,\n",
        "                     understatid2,\n",
        "                     on ='understat',\n",
        "                     how ='left')\n",
        "understatwithfplid"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 600
        },
        "id": "KmDbXEnfi2v1",
        "outputId": "3db0532c-c8d1-4974-bc4a-fa6be3b703c2"
      },
      "execution_count": 14,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "     understat      player_name games  time  goals_1wks   xG_1wks  \\\n",
              "0         8260   Erling Haaland     6   535           8  8.579198   \n",
              "1          453    Son Heung-Min     6   509           5  2.531726   \n",
              "2          468    Callum Wilson     6   242           4  4.151702   \n",
              "3         1776     Jarrod Bowen     6   540           4  2.588069   \n",
              "4         3697  Odsonne Edouard     6   522           4  3.337450   \n",
              "..         ...              ...   ...   ...         ...       ...   \n",
              "347      11728    Calvin Bassey     3   107           0  0.000000   \n",
              "348      11729     Bénie Traoré     5   311           0  0.321223   \n",
              "349      11926    Edson Álvarez     5   339           0  0.064324   \n",
              "350      11998  Hannes Delcroix     3   130           0  0.232794   \n",
              "351      12094      Mike Trésor     2    83           0  0.048638   \n",
              "\n",
              "     assists_1wks   xA_1wks shots_1wks key_passes_1wks  ... red_cards  \\\n",
              "0               1  1.125465         31               7  ...         0   \n",
              "1               0  1.766826         16              11  ...         0   \n",
              "2               0  0.015900         15               1  ...         0   \n",
              "3               1  0.808009         16               4  ...         0   \n",
              "4               0  0.267500         20               5  ...         0   \n",
              "..            ...       ...        ...             ...  ...       ...   \n",
              "347             0  0.000000          0               0  ...         1   \n",
              "348             0  0.333616          1               3  ...         0   \n",
              "349             0  0.053036          1               1  ...         0   \n",
              "350             0  0.083017          4               2  ...         0   \n",
              "351             0  0.408040          1               2  ...         0   \n",
              "\n",
              "    position        team_title npg_1wks            npxG_1wks  \\\n",
              "0          F   Manchester City        7    7.056859791278839   \n",
              "1        F M         Tottenham        5   2.5317263305187225   \n",
              "2        F S  Newcastle United        3    3.390533320605755   \n",
              "3          M          West Ham        4   2.5880690813064575   \n",
              "4          F    Crystal Palace        4    3.337449833750725   \n",
              "..       ...               ...      ...                  ...   \n",
              "347      D S            Fulham        0                    0   \n",
              "348    F M S  Sheffield United        0   0.3212226927280426   \n",
              "349      M S          West Ham        0   0.0643242746591568   \n",
              "350      D S           Burnley        0  0.23279432207345963   \n",
              "351        S           Burnley        0  0.04863787442445755   \n",
              "\n",
              "                 xGChain             xGBuildup xgdifference  xAdifference  \\\n",
              "0      7.640112280845642    0.7298882678151131    -0.579198     -0.125465   \n",
              "1      5.605026721954346    2.0503234416246414     2.468274     -1.766826   \n",
              "2      3.509474078193307   0.23684066534042358    -0.151702     -0.015900   \n",
              "3     3.1078141033649445    1.2324372678995132     1.411931      0.191991   \n",
              "4       3.16320563852787    0.4057522751390934     0.662550     -0.267500   \n",
              "..                   ...                   ...          ...           ...   \n",
              "347                    0                     0     0.000000      0.000000   \n",
              "348   1.2498194947838783    0.6901140883564949    -0.321223     -0.333616   \n",
              "349   1.3924516029655933     1.275091726332903    -0.064324     -0.053036   \n",
              "350   0.5750201642513275    0.4920034073293209    -0.232794     -0.083017   \n",
              "351  0.10748984664678574  0.058851972222328186    -0.048638     -0.408040   \n",
              "\n",
              "        id  \n",
              "0    318.0  \n",
              "1    428.0  \n",
              "2    356.0  \n",
              "3    465.0  \n",
              "4    166.0  \n",
              "..     ...  \n",
              "347    NaN  \n",
              "348    NaN  \n",
              "349    NaN  \n",
              "350    NaN  \n",
              "351    NaN  \n",
              "\n",
              "[352 rows x 21 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-b3fd393c-eb0c-4295-94f8-964221639457\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>understat</th>\n",
              "      <th>player_name</th>\n",
              "      <th>games</th>\n",
              "      <th>time</th>\n",
              "      <th>goals_1wks</th>\n",
              "      <th>xG_1wks</th>\n",
              "      <th>assists_1wks</th>\n",
              "      <th>xA_1wks</th>\n",
              "      <th>shots_1wks</th>\n",
              "      <th>key_passes_1wks</th>\n",
              "      <th>...</th>\n",
              "      <th>red_cards</th>\n",
              "      <th>position</th>\n",
              "      <th>team_title</th>\n",
              "      <th>npg_1wks</th>\n",
              "      <th>npxG_1wks</th>\n",
              "      <th>xGChain</th>\n",
              "      <th>xGBuildup</th>\n",
              "      <th>xgdifference</th>\n",
              "      <th>xAdifference</th>\n",
              "      <th>id</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>8260</td>\n",
              "      <td>Erling Haaland</td>\n",
              "      <td>6</td>\n",
              "      <td>535</td>\n",
              "      <td>8</td>\n",
              "      <td>8.579198</td>\n",
              "      <td>1</td>\n",
              "      <td>1.125465</td>\n",
              "      <td>31</td>\n",
              "      <td>7</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>F</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>7</td>\n",
              "      <td>7.056859791278839</td>\n",
              "      <td>7.640112280845642</td>\n",
              "      <td>0.7298882678151131</td>\n",
              "      <td>-0.579198</td>\n",
              "      <td>-0.125465</td>\n",
              "      <td>318.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>453</td>\n",
              "      <td>Son Heung-Min</td>\n",
              "      <td>6</td>\n",
              "      <td>509</td>\n",
              "      <td>5</td>\n",
              "      <td>2.531726</td>\n",
              "      <td>0</td>\n",
              "      <td>1.766826</td>\n",
              "      <td>16</td>\n",
              "      <td>11</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>F M</td>\n",
              "      <td>Tottenham</td>\n",
              "      <td>5</td>\n",
              "      <td>2.5317263305187225</td>\n",
              "      <td>5.605026721954346</td>\n",
              "      <td>2.0503234416246414</td>\n",
              "      <td>2.468274</td>\n",
              "      <td>-1.766826</td>\n",
              "      <td>428.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>468</td>\n",
              "      <td>Callum Wilson</td>\n",
              "      <td>6</td>\n",
              "      <td>242</td>\n",
              "      <td>4</td>\n",
              "      <td>4.151702</td>\n",
              "      <td>0</td>\n",
              "      <td>0.015900</td>\n",
              "      <td>15</td>\n",
              "      <td>1</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>F S</td>\n",
              "      <td>Newcastle United</td>\n",
              "      <td>3</td>\n",
              "      <td>3.390533320605755</td>\n",
              "      <td>3.509474078193307</td>\n",
              "      <td>0.23684066534042358</td>\n",
              "      <td>-0.151702</td>\n",
              "      <td>-0.015900</td>\n",
              "      <td>356.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>1776</td>\n",
              "      <td>Jarrod Bowen</td>\n",
              "      <td>6</td>\n",
              "      <td>540</td>\n",
              "      <td>4</td>\n",
              "      <td>2.588069</td>\n",
              "      <td>1</td>\n",
              "      <td>0.808009</td>\n",
              "      <td>16</td>\n",
              "      <td>4</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>M</td>\n",
              "      <td>West Ham</td>\n",
              "      <td>4</td>\n",
              "      <td>2.5880690813064575</td>\n",
              "      <td>3.1078141033649445</td>\n",
              "      <td>1.2324372678995132</td>\n",
              "      <td>1.411931</td>\n",
              "      <td>0.191991</td>\n",
              "      <td>465.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>3697</td>\n",
              "      <td>Odsonne Edouard</td>\n",
              "      <td>6</td>\n",
              "      <td>522</td>\n",
              "      <td>4</td>\n",
              "      <td>3.337450</td>\n",
              "      <td>0</td>\n",
              "      <td>0.267500</td>\n",
              "      <td>20</td>\n",
              "      <td>5</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>F</td>\n",
              "      <td>Crystal Palace</td>\n",
              "      <td>4</td>\n",
              "      <td>3.337449833750725</td>\n",
              "      <td>3.16320563852787</td>\n",
              "      <td>0.4057522751390934</td>\n",
              "      <td>0.662550</td>\n",
              "      <td>-0.267500</td>\n",
              "      <td>166.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>347</th>\n",
              "      <td>11728</td>\n",
              "      <td>Calvin Bassey</td>\n",
              "      <td>3</td>\n",
              "      <td>107</td>\n",
              "      <td>0</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>1</td>\n",
              "      <td>D S</td>\n",
              "      <td>Fulham</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>348</th>\n",
              "      <td>11729</td>\n",
              "      <td>Bénie Traoré</td>\n",
              "      <td>5</td>\n",
              "      <td>311</td>\n",
              "      <td>0</td>\n",
              "      <td>0.321223</td>\n",
              "      <td>0</td>\n",
              "      <td>0.333616</td>\n",
              "      <td>1</td>\n",
              "      <td>3</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>F M S</td>\n",
              "      <td>Sheffield United</td>\n",
              "      <td>0</td>\n",
              "      <td>0.3212226927280426</td>\n",
              "      <td>1.2498194947838783</td>\n",
              "      <td>0.6901140883564949</td>\n",
              "      <td>-0.321223</td>\n",
              "      <td>-0.333616</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>349</th>\n",
              "      <td>11926</td>\n",
              "      <td>Edson Álvarez</td>\n",
              "      <td>5</td>\n",
              "      <td>339</td>\n",
              "      <td>0</td>\n",
              "      <td>0.064324</td>\n",
              "      <td>0</td>\n",
              "      <td>0.053036</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>M S</td>\n",
              "      <td>West Ham</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0643242746591568</td>\n",
              "      <td>1.3924516029655933</td>\n",
              "      <td>1.275091726332903</td>\n",
              "      <td>-0.064324</td>\n",
              "      <td>-0.053036</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>350</th>\n",
              "      <td>11998</td>\n",
              "      <td>Hannes Delcroix</td>\n",
              "      <td>3</td>\n",
              "      <td>130</td>\n",
              "      <td>0</td>\n",
              "      <td>0.232794</td>\n",
              "      <td>0</td>\n",
              "      <td>0.083017</td>\n",
              "      <td>4</td>\n",
              "      <td>2</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>D S</td>\n",
              "      <td>Burnley</td>\n",
              "      <td>0</td>\n",
              "      <td>0.23279432207345963</td>\n",
              "      <td>0.5750201642513275</td>\n",
              "      <td>0.4920034073293209</td>\n",
              "      <td>-0.232794</td>\n",
              "      <td>-0.083017</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>351</th>\n",
              "      <td>12094</td>\n",
              "      <td>Mike Trésor</td>\n",
              "      <td>2</td>\n",
              "      <td>83</td>\n",
              "      <td>0</td>\n",
              "      <td>0.048638</td>\n",
              "      <td>0</td>\n",
              "      <td>0.408040</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>S</td>\n",
              "      <td>Burnley</td>\n",
              "      <td>0</td>\n",
              "      <td>0.04863787442445755</td>\n",
              "      <td>0.10748984664678574</td>\n",
              "      <td>0.058851972222328186</td>\n",
              "      <td>-0.048638</td>\n",
              "      <td>-0.408040</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>352 rows × 21 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-b3fd393c-eb0c-4295-94f8-964221639457')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-b3fd393c-eb0c-4295-94f8-964221639457 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-b3fd393c-eb0c-4295-94f8-964221639457');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-3ef98f41-92f8-4059-9cb4-592c12164b6c\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-3ef98f41-92f8-4059-9cb4-592c12164b6c')\"\n",
              "            title=\"Suggest charts.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-3ef98f41-92f8-4059-9cb4-592c12164b6c button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 14
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "from urllib.request import urlopen\n",
        "from json import loads\n",
        "from csv import writer\n",
        "\n",
        "\n",
        "def team_converter(team_id):\n",
        "    '''Converts a team's ID to their actual name'''\n",
        "    team_map = {\n",
        "        1: \"Arsenal\",\n",
        "        2: \"Aston Villa\",\n",
        "        3: \"Bournemouth\",\n",
        "        4: \"Brentford\",\n",
        "        5: \"Brighton\",\n",
        "        6: \"Burnley\",\n",
        "        7: \"Chelsea\",\n",
        "        8: \"Crystal Palace\",\n",
        "        9: \"Everton\",\n",
        "        10: \"Fulham\",\n",
        "        11: \"Liverpool\",\n",
        "        12: \"Luton Town\",\n",
        "        13: \"Manchester City\",\n",
        "        14: \"Manchester United\",\n",
        "        15: \"Newcastle United\",\n",
        "        16: \"Nottingham Forest\",\n",
        "        17: \"Sheffield United\",\n",
        "        18: \"Tottenham\",\n",
        "        19: \"West Ham\",\n",
        "        20: \"Wolverhampton Wanderers\",\n",
        "        None: None\n",
        "    }\n",
        "    return team_map[team_id]\n",
        "\n",
        "\n",
        "def position_converter(position):\n",
        "    '''Converts a player's element_type to their actual position'''\n",
        "    position_map = {\n",
        "        1: \"Goalkeeper\",\n",
        "        2: \"Defender\",\n",
        "        3: \"Midfielder\",\n",
        "        4: \"Forward\"\n",
        "    }\n",
        "    return position_map[position]\n",
        "\n",
        "\n",
        "def main():\n",
        "    all_data = loads(urlopen(\"https://fantasy.premierleague.com/api/fixtures/\").read())\n",
        "    fixtures = all_data\n",
        "\n",
        "    important_data = [\n",
        "        [\n",
        "            x[\"event\"],\n",
        "            team_converter(x[\"team_h\"]),\n",
        "            team_converter(x[\"team_a\"]),\n",
        "            x[\"kickoff_time\"],\n",
        "\n",
        "        ]\n",
        "        for x in fixtures\n",
        "    ]\n",
        "\n",
        "    with open(\"/fixtures_data.csv\", \"w\", encoding=\"utf-8\", newline=\"\") as out:\n",
        "        headers = [\"event\",\"team_h\",\"team_a\",\"kickoff_time\"]\n",
        "        w = writer(out)\n",
        "        w.writerow(headers)\n",
        "        w.writerows(important_data)\n",
        "\n",
        "if __name__ == \"__main__\":\n",
        "    main()"
      ],
      "metadata": {
        "id": "Y_cV1kyak7XX"
      },
      "execution_count": 15,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "import pandas as pd\n",
        "import scipy\n",
        "import numpy as np\n",
        "from numpy import random\n",
        "import matplotlib.pyplot as plt\n",
        "import seaborn as sns\n",
        "import matplotlib"
      ],
      "metadata": {
        "id": "DXejj-4jjUI-"
      },
      "execution_count": 16,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "from urllib.request import urlopen\n",
        "from json import loads\n",
        "from csv import writer\n",
        "\n",
        "\n",
        "def team_converter(team_id):\n",
        "    '''Converts a team's ID to their actual name'''\n",
        "    team_map = {\n",
        "        1: \"Arsenal\",\n",
        "        2: \"Aston Villa\",\n",
        "        3: \"Bournemouth\",\n",
        "        4: \"Brentford\",\n",
        "        5: \"Brighton\",\n",
        "        6: \"Burnley\",\n",
        "        7: \"Chelsea\",\n",
        "        8: \"Crystal Palace\",\n",
        "        9: \"Everton\",\n",
        "        10: \"Fulham\",\n",
        "        11: \"Liverpool\",\n",
        "        12: \"Luton Town\",\n",
        "        13: \"Manchester City\",\n",
        "        14: \"Manchester United\",\n",
        "        15: \"Newcastle United\",\n",
        "        16: \"Nottingham Forest\",\n",
        "        17: \"Sheffield United\",\n",
        "        18: \"Tottenham\",\n",
        "        19: \"West Ham\",\n",
        "        20: \"Wolverhampton Wanderers\",\n",
        "        None: None\n",
        "    }\n",
        "    return team_map[team_id]\n",
        "\n",
        "\n",
        "def position_converter(position):\n",
        "    '''Converts a player's element_type to their actual position'''\n",
        "    position_map = {\n",
        "        1: \"Goalkeeper\",\n",
        "        2: \"Defender\",\n",
        "        3: \"Midfielder\",\n",
        "        4: \"Forward\"\n",
        "    }\n",
        "    return position_map[position]\n",
        "\n",
        "\n",
        "def main():\n",
        "    all_data = loads(urlopen(\"https://fantasy.premierleague.com/api/bootstrap-static/\").read())\n",
        "    players = all_data[\"elements\"]\n",
        "\n",
        "    important_data = [\n",
        "        [\n",
        "            x[\"id\"],\n",
        "            team_converter(x[\"team\"]),\n",
        "            position_converter(x[\"element_type\"])[0],\n",
        "            x[\"web_name\"],\n",
        "            x[\"now_cost\"] / 10,\n",
        "            x[\"selected_by_percent\"],\n",
        "            float(x[\"expected_goals\"]),  # Convert to float\n",
        "            float(x[\"expected_assists\"]),  # Convert to float\n",
        "            x[\"goals_scored\"],\n",
        "            x[\"assists\"],\n",
        "            x[\"bps\"],\n",
        "            x[\"ict_index\"],\n",
        "            x[\"total_points\"],\n",
        "            x[\"points_per_game\"],\n",
        "            x[\"minutes\"]\n",
        "        ]\n",
        "        for x in players\n",
        "    ]\n",
        "\n",
        "    with open(\"players_data.csv\", \"w\", encoding=\"utf-8\", newline=\"\") as out:\n",
        "        headers = [\"id\",\"team\", \"pos\", \"name\", \"cost\", \"selected_by_percent\", \"expected_goals\", \"expected_assists\", \"goals_scored\", \"assists\", \"bps\", \"ict_index\",\"points\", \"points_per_game\", \"minutes\"]\n",
        "        w = writer(out)\n",
        "        w.writerow(headers)\n",
        "        w.writerows(important_data)\n",
        "\n",
        "if __name__ == \"__main__\":\n",
        "    main()"
      ],
      "metadata": {
        "id": "CKZZPD0xQGLu"
      },
      "execution_count": 17,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "import pandas as pd\n",
        "playerdata = pd.read_csv(\"/content/players_data.csv\")\n",
        "master = playerdata\n",
        "#master = master.dropna()\n",
        "master['apppoint'] = 2\n",
        "master['assistvalue'] = 3\n",
        "#master['BPS90'] = master.bps/(master.minutes/90)\n",
        "master"
      ],
      "metadata": {
        "id": "VOx8tP0bjttO",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 424
        },
        "outputId": "5e6a60e7-10e1-46fc-95d8-db600d1ecd88"
      },
      "execution_count": 18,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "      id                     team pos          name  cost  \\\n",
              "0      1                  Arsenal   F       Balogun   4.4   \n",
              "1      2                  Arsenal   D        Cédric   3.9   \n",
              "2      3                  Arsenal   M      M.Elneny   4.4   \n",
              "3      4                  Arsenal   M  Fábio Vieira   5.4   \n",
              "4      5                  Arsenal   D       Gabriel   4.7   \n",
              "..   ...                      ...  ..           ...   ...   \n",
              "713  598  Wolverhampton Wanderers   D       Doherty   4.3   \n",
              "714  697  Wolverhampton Wanderers   D       S.Bueno   4.5   \n",
              "715  698  Wolverhampton Wanderers   M      González   5.0   \n",
              "716  704  Wolverhampton Wanderers   F        Fraser   4.5   \n",
              "717  715  Wolverhampton Wanderers   M    Bellegarde   5.0   \n",
              "\n",
              "     selected_by_percent  expected_goals  expected_assists  goals_scored  \\\n",
              "0                    0.3            0.00              0.00             0   \n",
              "1                    0.4            0.00              0.00             0   \n",
              "2                    0.1            0.00              0.00             0   \n",
              "3                    0.2            0.41              0.29             0   \n",
              "4                   12.8            0.07              0.04             0   \n",
              "..                   ...             ...               ...           ...   \n",
              "713                  0.2            0.12              0.05             0   \n",
              "714                  0.0            0.00              0.00             0   \n",
              "715                  0.0            0.00              0.00             0   \n",
              "716                  0.0            0.00              0.00             0   \n",
              "717                  0.0            0.04              0.02             0   \n",
              "\n",
              "     assists  bps  ict_index  points  points_per_game  minutes  apppoint  \\\n",
              "0          0    0        0.0       0              0.0        0         2   \n",
              "1          0    0        0.0       0              0.0        0         2   \n",
              "2          0    0        0.0       0              0.0        0         2   \n",
              "3          3   43       13.9      15              3.8      171         2   \n",
              "4          0   57        7.8      10              2.0      294         2   \n",
              "..       ...  ...        ...     ...              ...      ...       ...   \n",
              "713        0    6        3.3       1              0.5       75         2   \n",
              "714        0    0        0.0       0              0.0        0         2   \n",
              "715        0    0        0.0       0              0.0        0         2   \n",
              "716        0    0        0.0       0              0.0        0         2   \n",
              "717        0    0        3.2       0              0.0      114         2   \n",
              "\n",
              "     assistvalue  \n",
              "0              3  \n",
              "1              3  \n",
              "2              3  \n",
              "3              3  \n",
              "4              3  \n",
              "..           ...  \n",
              "713            3  \n",
              "714            3  \n",
              "715            3  \n",
              "716            3  \n",
              "717            3  \n",
              "\n",
              "[718 rows x 17 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-996c10c2-13ca-4657-be52-0640eed353c3\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>team</th>\n",
              "      <th>pos</th>\n",
              "      <th>name</th>\n",
              "      <th>cost</th>\n",
              "      <th>selected_by_percent</th>\n",
              "      <th>expected_goals</th>\n",
              "      <th>expected_assists</th>\n",
              "      <th>goals_scored</th>\n",
              "      <th>assists</th>\n",
              "      <th>bps</th>\n",
              "      <th>ict_index</th>\n",
              "      <th>points</th>\n",
              "      <th>points_per_game</th>\n",
              "      <th>minutes</th>\n",
              "      <th>apppoint</th>\n",
              "      <th>assistvalue</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>1</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>F</td>\n",
              "      <td>Balogun</td>\n",
              "      <td>4.4</td>\n",
              "      <td>0.3</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>2</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>D</td>\n",
              "      <td>Cédric</td>\n",
              "      <td>3.9</td>\n",
              "      <td>0.4</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>3</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>M</td>\n",
              "      <td>M.Elneny</td>\n",
              "      <td>4.4</td>\n",
              "      <td>0.1</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>4</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>M</td>\n",
              "      <td>Fábio Vieira</td>\n",
              "      <td>5.4</td>\n",
              "      <td>0.2</td>\n",
              "      <td>0.41</td>\n",
              "      <td>0.29</td>\n",
              "      <td>0</td>\n",
              "      <td>3</td>\n",
              "      <td>43</td>\n",
              "      <td>13.9</td>\n",
              "      <td>15</td>\n",
              "      <td>3.8</td>\n",
              "      <td>171</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>5</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>D</td>\n",
              "      <td>Gabriel</td>\n",
              "      <td>4.7</td>\n",
              "      <td>12.8</td>\n",
              "      <td>0.07</td>\n",
              "      <td>0.04</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>57</td>\n",
              "      <td>7.8</td>\n",
              "      <td>10</td>\n",
              "      <td>2.0</td>\n",
              "      <td>294</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>713</th>\n",
              "      <td>598</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>D</td>\n",
              "      <td>Doherty</td>\n",
              "      <td>4.3</td>\n",
              "      <td>0.2</td>\n",
              "      <td>0.12</td>\n",
              "      <td>0.05</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>6</td>\n",
              "      <td>3.3</td>\n",
              "      <td>1</td>\n",
              "      <td>0.5</td>\n",
              "      <td>75</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>714</th>\n",
              "      <td>697</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>D</td>\n",
              "      <td>S.Bueno</td>\n",
              "      <td>4.5</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>715</th>\n",
              "      <td>698</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>M</td>\n",
              "      <td>González</td>\n",
              "      <td>5.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>716</th>\n",
              "      <td>704</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>F</td>\n",
              "      <td>Fraser</td>\n",
              "      <td>4.5</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>717</th>\n",
              "      <td>715</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>M</td>\n",
              "      <td>Bellegarde</td>\n",
              "      <td>5.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.04</td>\n",
              "      <td>0.02</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>3.2</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>114</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>718 rows × 17 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-996c10c2-13ca-4657-be52-0640eed353c3')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-996c10c2-13ca-4657-be52-0640eed353c3 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-996c10c2-13ca-4657-be52-0640eed353c3');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-4834b7fb-c614-46a2-9115-923a0e1fcfe1\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-4834b7fb-c614-46a2-9115-923a0e1fcfe1')\"\n",
              "            title=\"Suggest charts.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-4834b7fb-c614-46a2-9115-923a0e1fcfe1 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 18
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import pandas as pd\n",
        "gwfixtures = pd.read_csv(\"/fixtures_data.csv\")\n",
        "import requests\n",
        "import pandas as pd\n",
        "url = 'https://projects.fivethirtyeight.com/soccer-api/club/spi_global_rankings.csv'\n",
        "r = requests.get(url)\n",
        "open('temp.csv', 'wb').write(r.content)\n",
        "spi = pd.read_csv('temp.csv')\n",
        "spi['team_h'] = spi['name']\n",
        "spi['team_a'] = spi['name']\n",
        "spi= spi.replace('Newcastle', 'Newcastle United')\n",
        "spi= spi.replace('Wolverhampton','Wolverhampton Wanderers')\n",
        "spi= spi.replace('Tottenham Hotspur','Tottenham')\n",
        "spi= spi.replace('Leeds United','Leeds')\n",
        "spi= spi.replace('Leicester City','Leicester')\n",
        "spi= spi.replace('West Ham United','West Ham')\n",
        "spi= spi.replace('Brighton and Hove Albion','Brighton')\n",
        "spi= spi.replace('Norwich City','Norwich')\n",
        "spi= spi.replace('AFC Bournemouth','Bournemouth')\n",
        "Left_join = pd.merge(gwfixtures,\n",
        "                     spi,\n",
        "                     on ='team_h',\n",
        "                     how ='left')\n",
        "homespi = Left_join.drop(columns=[\n",
        " 'rank',\n",
        " 'prev_rank',\n",
        " 'league',\n",
        "  'off',\n",
        " 'def',\n",
        " 'name',\n",
        " 'team_a_y',])\n",
        "homespi.rename(columns = {'team_a_x':'team_a', 'spi':'Home SPI'}, inplace = True)\n",
        "away_join = pd.merge(homespi,\n",
        "                     spi,\n",
        "                     on ='team_a',\n",
        "                     how ='left')\n",
        "homesawayspi = away_join.drop(columns=[\n",
        " 'rank',\n",
        " 'prev_rank',\n",
        " 'name',\n",
        " 'league',\n",
        " 'off',\n",
        " 'def',\n",
        " 'team_h_y'])\n",
        "homesawayspi.rename(columns = {'team_h_x':'team_h', 'spi':'Away SPI'}, inplace = True)\n",
        "homesawayspi['Event'] = homesawayspi['event'].astype(str)\n",
        "gw7 = homesawayspi.query('Event==\"7.0\"')\n",
        "PLSPI = spi.query('league==\"Barclays Premier League\"')\n",
        "PLSPI['League Average']  = PLSPI[\"spi\"].mean()\n",
        "laverage = PLSPI[\"spi\"].mean()\n",
        "PLSPI['League Average'].astype(int)\n",
        "gw7['League_Average']  = laverage\n",
        "gw7.rename(columns = {'Home SPI':'HomeSPI', 'Away SPI':'AwaySPI'}, inplace = True)\n",
        "gw7['home_difference'] = gw7.HomeSPI - gw7.League_Average\n",
        "gw7['away_difference'] = gw7.AwaySPI - gw7.League_Average\n",
        "gw7['home_adjustment'] = (gw7.home_difference + gw7.League_Average)/gw7.League_Average\n",
        "gw7['away_adjustment'] = (gw7.away_difference + gw7.League_Average)/gw7.League_Average\n",
        "gw7adjustments = gw7[['team_h', 'home_adjustment']].append(gw7[['team_a','away_adjustment']].set_axis(['team_h', 'home_adjustment'], axis=1)).reset_index(drop=True)\n",
        "gw7adjustments.rename(columns = {'team_h':'team'}, inplace = True)\n",
        "gw7adjustments"
      ],
      "metadata": {
        "id": "0oqPsFQJjyR0",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "outputId": "bea61366-8066-4ec7-e2d2-b4472ba83919"
      },
      "execution_count": 19,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "<ipython-input-19-4a9206aa7a50>:49: SettingWithCopyWarning: \n",
            "A value is trying to be set on a copy of a slice from a DataFrame.\n",
            "Try using .loc[row_indexer,col_indexer] = value instead\n",
            "\n",
            "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
            "  PLSPI['League Average']  = PLSPI[\"spi\"].mean()\n",
            "<ipython-input-19-4a9206aa7a50>:52: SettingWithCopyWarning: \n",
            "A value is trying to be set on a copy of a slice from a DataFrame.\n",
            "Try using .loc[row_indexer,col_indexer] = value instead\n",
            "\n",
            "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
            "  gw7['League_Average']  = laverage\n",
            "<ipython-input-19-4a9206aa7a50>:53: SettingWithCopyWarning: \n",
            "A value is trying to be set on a copy of a slice from a DataFrame\n",
            "\n",
            "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
            "  gw7.rename(columns = {'Home SPI':'HomeSPI', 'Away SPI':'AwaySPI'}, inplace = True)\n",
            "<ipython-input-19-4a9206aa7a50>:54: SettingWithCopyWarning: \n",
            "A value is trying to be set on a copy of a slice from a DataFrame.\n",
            "Try using .loc[row_indexer,col_indexer] = value instead\n",
            "\n",
            "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
            "  gw7['home_difference'] = gw7.HomeSPI - gw7.League_Average\n",
            "<ipython-input-19-4a9206aa7a50>:55: SettingWithCopyWarning: \n",
            "A value is trying to be set on a copy of a slice from a DataFrame.\n",
            "Try using .loc[row_indexer,col_indexer] = value instead\n",
            "\n",
            "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
            "  gw7['away_difference'] = gw7.AwaySPI - gw7.League_Average\n",
            "<ipython-input-19-4a9206aa7a50>:56: SettingWithCopyWarning: \n",
            "A value is trying to be set on a copy of a slice from a DataFrame.\n",
            "Try using .loc[row_indexer,col_indexer] = value instead\n",
            "\n",
            "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
            "  gw7['home_adjustment'] = (gw7.home_difference + gw7.League_Average)/gw7.League_Average\n",
            "<ipython-input-19-4a9206aa7a50>:57: SettingWithCopyWarning: \n",
            "A value is trying to be set on a copy of a slice from a DataFrame.\n",
            "Try using .loc[row_indexer,col_indexer] = value instead\n",
            "\n",
            "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
            "  gw7['away_adjustment'] = (gw7.away_difference + gw7.League_Average)/gw7.League_Average\n",
            "<ipython-input-19-4a9206aa7a50>:58: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  gw7adjustments = gw7[['team_h', 'home_adjustment']].append(gw7[['team_a','away_adjustment']].set_axis(['team_h', 'home_adjustment'], axis=1)).reset_index(drop=True)\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                       team  home_adjustment\n",
              "0               Aston Villa         1.101978\n",
              "1               Bournemouth         0.827943\n",
              "2                   Everton         0.884223\n",
              "3         Manchester United         1.098921\n",
              "4          Newcastle United         1.163122\n",
              "5                  West Ham         0.988306\n",
              "6   Wolverhampton Wanderers         0.820717\n",
              "7                 Tottenham         1.002480\n",
              "8         Nottingham Forest         0.780000\n",
              "9                    Fulham         0.948007\n",
              "10               Luton Town         0.770968\n",
              "11                 Brighton         1.123934\n",
              "12                  Arsenal         1.166179\n",
              "13               Luton Town         0.770968\n",
              "14           Crystal Palace         1.020824\n",
              "15                  Burnley         0.874634\n",
              "16         Sheffield United         0.786115\n",
              "17          Manchester City         1.278461\n",
              "18                Liverpool         1.166318\n",
              "19                Brentford         1.071962\n",
              "20                  Chelsea         1.053063\n",
              "21                  Burnley         0.874634"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-293c3c67-5e67-4c15-95d6-bd3ca33ad6a9\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>team</th>\n",
              "      <th>home_adjustment</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>1.101978</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Bournemouth</td>\n",
              "      <td>0.827943</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>Everton</td>\n",
              "      <td>0.884223</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>Manchester United</td>\n",
              "      <td>1.098921</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>Newcastle United</td>\n",
              "      <td>1.163122</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>West Ham</td>\n",
              "      <td>0.988306</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>0.820717</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>Tottenham</td>\n",
              "      <td>1.002480</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>Nottingham Forest</td>\n",
              "      <td>0.780000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>Fulham</td>\n",
              "      <td>0.948007</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10</th>\n",
              "      <td>Luton Town</td>\n",
              "      <td>0.770968</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>11</th>\n",
              "      <td>Brighton</td>\n",
              "      <td>1.123934</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>12</th>\n",
              "      <td>Arsenal</td>\n",
              "      <td>1.166179</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>13</th>\n",
              "      <td>Luton Town</td>\n",
              "      <td>0.770968</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>14</th>\n",
              "      <td>Crystal Palace</td>\n",
              "      <td>1.020824</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>15</th>\n",
              "      <td>Burnley</td>\n",
              "      <td>0.874634</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>16</th>\n",
              "      <td>Sheffield United</td>\n",
              "      <td>0.786115</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>17</th>\n",
              "      <td>Manchester City</td>\n",
              "      <td>1.278461</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>18</th>\n",
              "      <td>Liverpool</td>\n",
              "      <td>1.166318</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>19</th>\n",
              "      <td>Brentford</td>\n",
              "      <td>1.071962</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>20</th>\n",
              "      <td>Chelsea</td>\n",
              "      <td>1.053063</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>21</th>\n",
              "      <td>Burnley</td>\n",
              "      <td>0.874634</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-293c3c67-5e67-4c15-95d6-bd3ca33ad6a9')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-293c3c67-5e67-4c15-95d6-bd3ca33ad6a9 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-293c3c67-5e67-4c15-95d6-bd3ca33ad6a9');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-f75b9003-f44a-4cda-809e-0245f9571de0\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-f75b9003-f44a-4cda-809e-0245f9571de0')\"\n",
              "            title=\"Suggest charts.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-f75b9003-f44a-4cda-809e-0245f9571de0 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 19
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "rawdf = pd.merge(master,\n",
        "                     gw7adjustments,\n",
        "                     on ='team',\n",
        "                     how ='left')\n",
        "rawfwd = rawdf.query('pos==\"F\"')\n",
        "rawfwd['xP'] = ((rawfwd.expected_goals * 4/6)+(rawfwd.expected_assists * 3/6) + (rawfwd.apppoint)) * rawfwd.home_adjustment\n",
        "rawfwd = rawfwd.drop(columns=[\n",
        " 'expected_goals',\n",
        " 'team',\n",
        " 'expected_assists',\n",
        " 'apppoint',\n",
        " 'assistvalue',\n",
        "'home_adjustment'])\n",
        "rawmd = rawdf.query('pos==\"M\"')\n",
        "rawmd['xP'] = ((rawmd.expected_goals * 5/6)+(rawmd.expected_assists * 3/6) + (rawmd.apppoint)) * rawmd.home_adjustment\n",
        "rawmd = rawmd.drop(columns=[\n",
        " 'expected_goals',\n",
        " 'team',\n",
        " 'expected_assists',\n",
        " 'apppoint',\n",
        " 'assistvalue',\n",
        "'home_adjustment'])\n",
        "fbref = pd.read_html('https://fbref.com/en/comps/9/Premier-League-Stats')\n",
        "epltable = fbref[0]\n",
        "epltabledef = epltable.drop(columns=[ 'Rk',\n",
        " 'MP',\n",
        " 'W',\n",
        " 'D',\n",
        " 'L',\n",
        " 'GF',\n",
        " 'GA',\n",
        " 'GD',\n",
        " 'xG',\n",
        " 'xGD',\n",
        " 'xGD/90',\n",
        " 'Pts',\n",
        " 'Pts/MP',\n",
        " 'Last 5',\n",
        " 'Attendance',\n",
        " 'Top Team Scorer',\n",
        " 'Goalkeeper',\n",
        " 'Notes'])\n",
        "epltabledef= epltabledef.replace('Newcastle Utd', 'Newcastle United')\n",
        "epltabledef= epltabledef.replace('Wolves','Wolverhampton Wanderers')\n",
        "epltabledef= epltabledef.replace('Leeds United','Leeds')\n",
        "epltabledef= epltabledef.replace('Leicester City','Leicester')\n",
        "epltabledef= epltabledef.replace('Manchester Utd','Manchester United')\n",
        "epltabledef['Squad'] = epltabledef['Squad'].str.replace(r\"[\\\"\\',]\", '')\n",
        "epltabledef= epltabledef.replace('Nottham Forest','Nottingham Forest')\n",
        "epltabledef['xCSP'] = (4 - (epltabledef.xGA * 4/6))\n",
        "epltabledef.rename(columns={'Squad': 'team'}, inplace=True)\n",
        "rawdfcs = pd.merge(rawdf,\n",
        "                     epltabledef,\n",
        "                     on ='team',\n",
        "                     how ='left')\n",
        "rawgk= rawdfcs.query('pos==\"G\"')\n",
        "rawgk['xP'] = ((rawgk.xCSP)+ (rawgk.apppoint)) * rawgk.home_adjustment\n",
        "#rawgk['xP'] = rawgk.apppoint * rawgk.home_adjustment\n",
        "rawgk = rawgk.drop(columns=[\n",
        " 'expected_goals',\n",
        " 'team',\n",
        " 'expected_assists',\n",
        " 'apppoint',\n",
        " 'assistvalue',\n",
        "  'xGA',\n",
        "'home_adjustment'])\n",
        "rawdef= rawdfcs.query('pos==\"D\"')\n",
        "rawdef['xP'] = ((rawdef.expected_goals * 6/6)+(rawdef.expected_assists * 3/6) +(rawdef.xCSP)+ (rawdef.apppoint) * rawdef.home_adjustment)\n",
        "#rawdef['xP'] = ((rawdef.expected_goals * 6/3)+(rawdef.expected_assists * 3/3) + (rawdef.apppoint) * rawdef.home_adjustment)\n",
        "rawdef = rawdef.drop(columns=[\n",
        " 'expected_goals',\n",
        " 'team',\n",
        " 'expected_assists',\n",
        " 'apppoint',\n",
        " 'assistvalue',\n",
        "  'xGA',\n",
        " 'home_adjustment'])\n",
        "rawallplayers = pd.concat([rawfwd, rawmd, rawdef, rawgk], ignore_index=True)\n",
        "rawallplayers\n",
        "\n",
        "\n",
        "\n"
      ],
      "metadata": {
        "id": "AWnYpVh5kDzO",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 875
        },
        "outputId": "5772062b-824e-4622-e18d-deaf72d1aa12"
      },
      "execution_count": 21,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "<ipython-input-21-1611348aca20>:6: SettingWithCopyWarning: \n",
            "A value is trying to be set on a copy of a slice from a DataFrame.\n",
            "Try using .loc[row_indexer,col_indexer] = value instead\n",
            "\n",
            "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
            "  rawfwd['xP'] = ((rawfwd.expected_goals * 4/6)+(rawfwd.expected_assists * 3/6) + (rawfwd.apppoint)) * rawfwd.home_adjustment\n",
            "<ipython-input-21-1611348aca20>:15: SettingWithCopyWarning: \n",
            "A value is trying to be set on a copy of a slice from a DataFrame.\n",
            "Try using .loc[row_indexer,col_indexer] = value instead\n",
            "\n",
            "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
            "  rawmd['xP'] = ((rawmd.expected_goals * 5/6)+(rawmd.expected_assists * 3/6) + (rawmd.apppoint)) * rawmd.home_adjustment\n",
            "<ipython-input-21-1611348aca20>:48: FutureWarning: The default value of regex will change from True to False in a future version.\n",
            "  epltabledef['Squad'] = epltabledef['Squad'].str.replace(r\"[\\\"\\',]\", '')\n",
            "<ipython-input-21-1611348aca20>:57: SettingWithCopyWarning: \n",
            "A value is trying to be set on a copy of a slice from a DataFrame.\n",
            "Try using .loc[row_indexer,col_indexer] = value instead\n",
            "\n",
            "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
            "  rawgk['xP'] = ((rawgk.xCSP)+ (rawgk.apppoint)) * rawgk.home_adjustment\n",
            "<ipython-input-21-1611348aca20>:68: SettingWithCopyWarning: \n",
            "A value is trying to be set on a copy of a slice from a DataFrame.\n",
            "Try using .loc[row_indexer,col_indexer] = value instead\n",
            "\n",
            "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
            "  rawdef['xP'] = ((rawdef.expected_goals * 6/6)+(rawdef.expected_assists * 3/6) +(rawdef.xCSP)+ (rawdef.apppoint) * rawdef.home_adjustment)\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "      id pos     name  cost  selected_by_percent  goals_scored  assists  bps  \\\n",
              "0      1   F  Balogun   4.4                  0.3             0        0    0   \n",
              "1      8   F  G.Jesus   7.9                  3.5             1        0   26   \n",
              "2     13   F  Nketiah   5.5                  5.6             2        1   67   \n",
              "3     39   F    Davis   4.9                  0.2             0        0    0   \n",
              "4     44   F    Duran   5.0                  0.3             2        0   56   \n",
              "..   ...  ..      ...   ...                  ...           ...      ...  ...   \n",
              "795  647   G    Anang   4.0                  0.0             0        0    0   \n",
              "796  546   G  Bentley   4.0                  0.4             0        0    0   \n",
              "797  564   G     King   4.0                  0.8             0        0    0   \n",
              "798  569   G  José Sá   5.0                  1.7             0        0  125   \n",
              "799  571   G   Šarkić   4.0                  0.4             0        0    0   \n",
              "\n",
              "     ict_index  points  points_per_game  minutes        xP      xCSP  \n",
              "0          0.0       0              0.0        0  2.332358       NaN  \n",
              "1         15.5      10              2.5      115  3.385807       NaN  \n",
              "2         27.6      23              3.8      425  3.762871       NaN  \n",
              "3          0.0       0              0.0        0  2.203956       NaN  \n",
              "4         13.6      15              3.0       57  2.745762       NaN  \n",
              "..         ...     ...              ...      ...       ...       ...  \n",
              "795        0.0       0              0.0        0 -2.833145 -4.866667  \n",
              "796        0.0       0              0.0        0 -1.915005 -4.333333  \n",
              "797        0.0       0              0.0        0 -1.915005 -4.333333  \n",
              "798       20.7      22              3.7      540 -1.915005 -4.333333  \n",
              "799        0.0       0              0.0        0 -1.915005 -4.333333  \n",
              "\n",
              "[800 rows x 14 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-814fc5f4-3e4b-47d2-b50b-55ec34aba8f6\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>pos</th>\n",
              "      <th>name</th>\n",
              "      <th>cost</th>\n",
              "      <th>selected_by_percent</th>\n",
              "      <th>goals_scored</th>\n",
              "      <th>assists</th>\n",
              "      <th>bps</th>\n",
              "      <th>ict_index</th>\n",
              "      <th>points</th>\n",
              "      <th>points_per_game</th>\n",
              "      <th>minutes</th>\n",
              "      <th>xP</th>\n",
              "      <th>xCSP</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>1</td>\n",
              "      <td>F</td>\n",
              "      <td>Balogun</td>\n",
              "      <td>4.4</td>\n",
              "      <td>0.3</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>2.332358</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>8</td>\n",
              "      <td>F</td>\n",
              "      <td>G.Jesus</td>\n",
              "      <td>7.9</td>\n",
              "      <td>3.5</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>26</td>\n",
              "      <td>15.5</td>\n",
              "      <td>10</td>\n",
              "      <td>2.5</td>\n",
              "      <td>115</td>\n",
              "      <td>3.385807</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>13</td>\n",
              "      <td>F</td>\n",
              "      <td>Nketiah</td>\n",
              "      <td>5.5</td>\n",
              "      <td>5.6</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>67</td>\n",
              "      <td>27.6</td>\n",
              "      <td>23</td>\n",
              "      <td>3.8</td>\n",
              "      <td>425</td>\n",
              "      <td>3.762871</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>39</td>\n",
              "      <td>F</td>\n",
              "      <td>Davis</td>\n",
              "      <td>4.9</td>\n",
              "      <td>0.2</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>2.203956</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>44</td>\n",
              "      <td>F</td>\n",
              "      <td>Duran</td>\n",
              "      <td>5.0</td>\n",
              "      <td>0.3</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>56</td>\n",
              "      <td>13.6</td>\n",
              "      <td>15</td>\n",
              "      <td>3.0</td>\n",
              "      <td>57</td>\n",
              "      <td>2.745762</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>795</th>\n",
              "      <td>647</td>\n",
              "      <td>G</td>\n",
              "      <td>Anang</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>-2.833145</td>\n",
              "      <td>-4.866667</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>796</th>\n",
              "      <td>546</td>\n",
              "      <td>G</td>\n",
              "      <td>Bentley</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.4</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>-1.915005</td>\n",
              "      <td>-4.333333</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>797</th>\n",
              "      <td>564</td>\n",
              "      <td>G</td>\n",
              "      <td>King</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.8</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>-1.915005</td>\n",
              "      <td>-4.333333</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>798</th>\n",
              "      <td>569</td>\n",
              "      <td>G</td>\n",
              "      <td>José Sá</td>\n",
              "      <td>5.0</td>\n",
              "      <td>1.7</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>125</td>\n",
              "      <td>20.7</td>\n",
              "      <td>22</td>\n",
              "      <td>3.7</td>\n",
              "      <td>540</td>\n",
              "      <td>-1.915005</td>\n",
              "      <td>-4.333333</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>799</th>\n",
              "      <td>571</td>\n",
              "      <td>G</td>\n",
              "      <td>Šarkić</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.4</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>-1.915005</td>\n",
              "      <td>-4.333333</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>800 rows × 14 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-814fc5f4-3e4b-47d2-b50b-55ec34aba8f6')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-814fc5f4-3e4b-47d2-b50b-55ec34aba8f6 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-814fc5f4-3e4b-47d2-b50b-55ec34aba8f6');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-af8fc53e-d009-4131-a779-0d4cf32391c9\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-af8fc53e-d009-4131-a779-0d4cf32391c9')\"\n",
              "            title=\"Suggest charts.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-af8fc53e-d009-4131-a779-0d4cf32391c9 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 21
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "rawgk1= rawdfcs.query('pos==\"G\"')\n",
        "rawgk1"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 493
        },
        "id": "z3FgmhoCb3GG",
        "outputId": "9733658a-505d-495e-ff7e-510b0865062a"
      },
      "execution_count": 22,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "      id                     team pos       name  cost  selected_by_percent  \\\n",
              "15    17                  Arsenal   G   Ramsdale   4.9                 13.0   \n",
              "16    18                  Arsenal   G  Rúnarsson   4.0                  0.1   \n",
              "26   113                  Arsenal   G       Raya   4.8                  2.9   \n",
              "30   646                  Arsenal   G       Hein   4.0                  0.0   \n",
              "47    49              Aston Villa   G   Martinez   4.9                  6.4   \n",
              "..   ...                      ...  ..        ...   ...                  ...   \n",
              "762  647                 West Ham   G      Anang   4.0                  0.0   \n",
              "768  546  Wolverhampton Wanderers   G    Bentley   4.0                  0.4   \n",
              "784  564  Wolverhampton Wanderers   G       King   4.0                  0.8   \n",
              "788  569  Wolverhampton Wanderers   G    José Sá   5.0                  1.7   \n",
              "790  571  Wolverhampton Wanderers   G     Šarkić   4.0                  0.4   \n",
              "\n",
              "     expected_goals  expected_assists  goals_scored  assists  bps  ict_index  \\\n",
              "15              0.0              0.01             0        0   55        5.1   \n",
              "16              0.0              0.00             0        0    0        0.0   \n",
              "26              0.0              0.00             0        0   45        3.6   \n",
              "30              0.0              0.00             0        0    0        0.0   \n",
              "47              0.0              0.00             0        0  105       14.1   \n",
              "..              ...               ...           ...      ...  ...        ...   \n",
              "762             0.0              0.00             0        0    0        0.0   \n",
              "768             0.0              0.00             0        0    0        0.0   \n",
              "784             0.0              0.00             0        0    0        0.0   \n",
              "788             0.0              0.00             0        0  125       20.7   \n",
              "790             0.0              0.00             0        0    0        0.0   \n",
              "\n",
              "     points  points_per_game  minutes  apppoint  assistvalue  home_adjustment  \\\n",
              "15       11              2.8      360         2            3         1.166179   \n",
              "16        0              0.0        0         2            3         1.166179   \n",
              "26       10              5.0      180         2            3         1.166179   \n",
              "30        0              0.0        0         2            3         1.166179   \n",
              "47       18              3.6      450         2            3         1.101978   \n",
              "..      ...              ...      ...       ...          ...              ...   \n",
              "762       0              0.0        0         2            3         0.988306   \n",
              "768       0              0.0        0         2            3         0.820717   \n",
              "784       0              0.0        0         2            3         0.820717   \n",
              "788      22              3.7      540         2            3         0.820717   \n",
              "790       0              0.0        0         2            3         0.820717   \n",
              "\n",
              "      xGA      xCSP  \n",
              "15    5.5  0.333333  \n",
              "16    5.5  0.333333  \n",
              "26    5.5  0.333333  \n",
              "30    5.5  0.333333  \n",
              "47    9.6 -2.400000  \n",
              "..    ...       ...  \n",
              "762  13.3 -4.866667  \n",
              "768  12.5 -4.333333  \n",
              "784  12.5 -4.333333  \n",
              "788  12.5 -4.333333  \n",
              "790  12.5 -4.333333  \n",
              "\n",
              "[95 rows x 20 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-75e4c9fc-73cb-4015-a48e-b449d8b0a488\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>team</th>\n",
              "      <th>pos</th>\n",
              "      <th>name</th>\n",
              "      <th>cost</th>\n",
              "      <th>selected_by_percent</th>\n",
              "      <th>expected_goals</th>\n",
              "      <th>expected_assists</th>\n",
              "      <th>goals_scored</th>\n",
              "      <th>assists</th>\n",
              "      <th>bps</th>\n",
              "      <th>ict_index</th>\n",
              "      <th>points</th>\n",
              "      <th>points_per_game</th>\n",
              "      <th>minutes</th>\n",
              "      <th>apppoint</th>\n",
              "      <th>assistvalue</th>\n",
              "      <th>home_adjustment</th>\n",
              "      <th>xGA</th>\n",
              "      <th>xCSP</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>15</th>\n",
              "      <td>17</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>G</td>\n",
              "      <td>Ramsdale</td>\n",
              "      <td>4.9</td>\n",
              "      <td>13.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.01</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>55</td>\n",
              "      <td>5.1</td>\n",
              "      <td>11</td>\n",
              "      <td>2.8</td>\n",
              "      <td>360</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "      <td>1.166179</td>\n",
              "      <td>5.5</td>\n",
              "      <td>0.333333</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>16</th>\n",
              "      <td>18</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>G</td>\n",
              "      <td>Rúnarsson</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.1</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "      <td>1.166179</td>\n",
              "      <td>5.5</td>\n",
              "      <td>0.333333</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>26</th>\n",
              "      <td>113</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>G</td>\n",
              "      <td>Raya</td>\n",
              "      <td>4.8</td>\n",
              "      <td>2.9</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>45</td>\n",
              "      <td>3.6</td>\n",
              "      <td>10</td>\n",
              "      <td>5.0</td>\n",
              "      <td>180</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "      <td>1.166179</td>\n",
              "      <td>5.5</td>\n",
              "      <td>0.333333</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>30</th>\n",
              "      <td>646</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>G</td>\n",
              "      <td>Hein</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "      <td>1.166179</td>\n",
              "      <td>5.5</td>\n",
              "      <td>0.333333</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>47</th>\n",
              "      <td>49</td>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>G</td>\n",
              "      <td>Martinez</td>\n",
              "      <td>4.9</td>\n",
              "      <td>6.4</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>105</td>\n",
              "      <td>14.1</td>\n",
              "      <td>18</td>\n",
              "      <td>3.6</td>\n",
              "      <td>450</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "      <td>1.101978</td>\n",
              "      <td>9.6</td>\n",
              "      <td>-2.400000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>762</th>\n",
              "      <td>647</td>\n",
              "      <td>West Ham</td>\n",
              "      <td>G</td>\n",
              "      <td>Anang</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "      <td>0.988306</td>\n",
              "      <td>13.3</td>\n",
              "      <td>-4.866667</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>768</th>\n",
              "      <td>546</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>G</td>\n",
              "      <td>Bentley</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.4</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "      <td>0.820717</td>\n",
              "      <td>12.5</td>\n",
              "      <td>-4.333333</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>784</th>\n",
              "      <td>564</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>G</td>\n",
              "      <td>King</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.8</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "      <td>0.820717</td>\n",
              "      <td>12.5</td>\n",
              "      <td>-4.333333</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>788</th>\n",
              "      <td>569</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>G</td>\n",
              "      <td>José Sá</td>\n",
              "      <td>5.0</td>\n",
              "      <td>1.7</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>125</td>\n",
              "      <td>20.7</td>\n",
              "      <td>22</td>\n",
              "      <td>3.7</td>\n",
              "      <td>540</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "      <td>0.820717</td>\n",
              "      <td>12.5</td>\n",
              "      <td>-4.333333</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>790</th>\n",
              "      <td>571</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>G</td>\n",
              "      <td>Šarkić</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.4</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "      <td>0.820717</td>\n",
              "      <td>12.5</td>\n",
              "      <td>-4.333333</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>95 rows × 20 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-75e4c9fc-73cb-4015-a48e-b449d8b0a488')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-75e4c9fc-73cb-4015-a48e-b449d8b0a488 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-75e4c9fc-73cb-4015-a48e-b449d8b0a488');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-dd9ec34d-3e68-46ca-9bbc-cb7819b4df67\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-dd9ec34d-3e68-46ca-9bbc-cb7819b4df67')\"\n",
              "            title=\"Suggest charts.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-dd9ec34d-3e68-46ca-9bbc-cb7819b4df67 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 22
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "from pandas import ExcelWriter"
      ],
      "metadata": {
        "id": "ONZy1SvCDu6y"
      },
      "execution_count": 23,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "writer = ExcelWriter('notes.xlsx')"
      ],
      "metadata": {
        "id": "iubZBRlVEhiz"
      },
      "execution_count": 24,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "rawallplayers.to_excel(writer, sheet_name='Sheet1')\n",
        "gw7adjustments.to_excel(writer, sheet_name='Sheet2')\n",
        "#fplwithunderstat.to_excel(writer, sheet_name='Sheet3')\n",
        "\n",
        "# Close the Pandas Excel writer and output the Excel file.\n",
        "writer.save()"
      ],
      "metadata": {
        "id": "slYEIma_E0uP",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "a29e00e3-42ae-4891-f25d-1d8af39f702a"
      },
      "execution_count": 26,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "<ipython-input-26-84257aa5e0d6>:6: FutureWarning: save is not part of the public API, usage can give unexpected results and will be removed in a future version\n",
            "  writer.save()\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "gwfixtures"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 424
        },
        "id": "3udskoGrT73A",
        "outputId": "30de5528-2a22-4e72-c64e-c7a0052188a7"
      },
      "execution_count": 27,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "     event            team_h                   team_a          kickoff_time\n",
              "0      NaN   Manchester City                Brentford                   NaN\n",
              "1      1.0           Burnley          Manchester City  2023-08-11T19:00:00Z\n",
              "2      1.0           Arsenal        Nottingham Forest  2023-08-12T12:00:00Z\n",
              "3      1.0       Bournemouth                 West Ham  2023-08-12T14:00:00Z\n",
              "4      1.0          Brighton               Luton Town  2023-08-12T14:00:00Z\n",
              "..     ...               ...                      ...                   ...\n",
              "375   38.0    Crystal Palace              Aston Villa  2024-05-19T15:00:00Z\n",
              "376   38.0         Liverpool  Wolverhampton Wanderers  2024-05-19T15:00:00Z\n",
              "377   38.0        Luton Town                   Fulham  2024-05-19T15:00:00Z\n",
              "378   38.0   Manchester City                 West Ham  2024-05-19T15:00:00Z\n",
              "379   38.0  Sheffield United                Tottenham  2024-05-19T15:00:00Z\n",
              "\n",
              "[380 rows x 4 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-cd3ae20a-69b4-4c62-a6d8-889d797af7e5\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>event</th>\n",
              "      <th>team_h</th>\n",
              "      <th>team_a</th>\n",
              "      <th>kickoff_time</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>NaN</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>Brentford</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>1.0</td>\n",
              "      <td>Burnley</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>2023-08-11T19:00:00Z</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>1.0</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>Nottingham Forest</td>\n",
              "      <td>2023-08-12T12:00:00Z</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>1.0</td>\n",
              "      <td>Bournemouth</td>\n",
              "      <td>West Ham</td>\n",
              "      <td>2023-08-12T14:00:00Z</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>1.0</td>\n",
              "      <td>Brighton</td>\n",
              "      <td>Luton Town</td>\n",
              "      <td>2023-08-12T14:00:00Z</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>375</th>\n",
              "      <td>38.0</td>\n",
              "      <td>Crystal Palace</td>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>2024-05-19T15:00:00Z</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>376</th>\n",
              "      <td>38.0</td>\n",
              "      <td>Liverpool</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>2024-05-19T15:00:00Z</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>377</th>\n",
              "      <td>38.0</td>\n",
              "      <td>Luton Town</td>\n",
              "      <td>Fulham</td>\n",
              "      <td>2024-05-19T15:00:00Z</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>378</th>\n",
              "      <td>38.0</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>West Ham</td>\n",
              "      <td>2024-05-19T15:00:00Z</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>379</th>\n",
              "      <td>38.0</td>\n",
              "      <td>Sheffield United</td>\n",
              "      <td>Tottenham</td>\n",
              "      <td>2024-05-19T15:00:00Z</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>380 rows × 4 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-cd3ae20a-69b4-4c62-a6d8-889d797af7e5')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-cd3ae20a-69b4-4c62-a6d8-889d797af7e5 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-cd3ae20a-69b4-4c62-a6d8-889d797af7e5');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-7c45b112-4606-44a0-952c-161e90e803e9\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-7c45b112-4606-44a0-952c-161e90e803e9')\"\n",
              "            title=\"Suggest charts.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-7c45b112-4606-44a0-952c-161e90e803e9 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 27
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "rawdfallgw = pd.merge(master,\n",
        "                     gw7adjustments,\n",
        "                     on ='team',\n",
        "                     how ='left')\n",
        "rawfwdallgw = rawdfallgw.query('pos==\"F\"')\n",
        "rawfwdallgw['xPallgw'] = ((rawfwdallgw.expected_goals * 4/6)+(rawfwdallgw.expected_assists * 3/6) + (rawfwdallgw.apppoint))\n",
        "rawfwdallgw = rawfwdallgw.drop(columns=[\n",
        " 'expected_goals',\n",
        " 'expected_assists',\n",
        " 'apppoint',\n",
        " 'assistvalue',\n",
        "])\n",
        "rawmdallgw = rawdfallgw.query('pos==\"M\"')\n",
        "rawmdallgw['xPallgw'] = ((rawmdallgw.expected_goals * 5/6)+(rawmdallgw.expected_assists * 3/6) + (rawmdallgw.apppoint))\n",
        "rawmdallgw = rawmdallgw.drop(columns=[\n",
        " 'expected_goals',\n",
        " 'expected_assists',\n",
        " 'apppoint',\n",
        " 'assistvalue',\n",
        "])\n",
        "fbref = pd.read_html('https://fbref.com/en/comps/9/Premier-League-Stats')\n",
        "epltable = fbref[0]\n",
        "epltabledef = epltable.drop(columns=[ 'Rk',\n",
        " 'MP',\n",
        " 'W',\n",
        " 'D',\n",
        " 'L',\n",
        " 'GF',\n",
        " 'GA',\n",
        " 'GD',\n",
        " 'xG',\n",
        " 'xGD',\n",
        " 'xGD/90',\n",
        " 'Pts',\n",
        " 'Pts/MP',\n",
        " 'Last 5',\n",
        " 'Attendance',\n",
        " 'Top Team Scorer',\n",
        " 'Goalkeeper',\n",
        " 'Notes'])\n",
        "epltabledef= epltabledef.replace('Newcastle Utd', 'Newcastle United')\n",
        "epltabledef= epltabledef.replace('Wolves','Wolverhampton Wanderers')\n",
        "epltabledef= epltabledef.replace('Leeds United','Leeds')\n",
        "epltabledef= epltabledef.replace('Leicester City','Leicester')\n",
        "epltabledef= epltabledef.replace('Manchester Utd','Manchester United')\n",
        "epltabledef['Squad'] = epltabledef['Squad'].str.replace(r\"[\\\"\\',]\", '')\n",
        "epltabledef= epltabledef.replace('Nottham Forest','Nottingham Forest')\n",
        "epltabledef['xCSP'] = (4 - (epltabledef.xGA * 4/6))\n",
        "epltabledef.rename(columns={'Squad': 'team'}, inplace=True)\n",
        "rawdfcs = pd.merge(rawdf,\n",
        "                     epltabledef,\n",
        "                     on ='team',\n",
        "                     how ='left')\n",
        "rawgkallgw= rawdfcs.query('pos==\"G\"')\n",
        "#rawgkallgw['xPallgw'] = (rawgkallgw.apppoint)\n",
        "rawgkallgw['xPallgw'] = ((rawgkallgw.xCSP)+ (rawgkallgw.apppoint))\n",
        "rawgkallgw = rawgkallgw.drop(columns=[\n",
        " 'expected_goals',\n",
        "  'expected_assists',\n",
        " 'apppoint',\n",
        " 'assistvalue',\n",
        "  'xGA',\n",
        "])\n",
        "rawdefallgw= rawdfcs.query('pos==\"D\"')\n",
        "rawdefallgw['xPallgw'] = (rawdefallgw.expected_goals * 6/6)+(rawdefallgw.expected_assists * 3/6) +(rawdefallgw.xCSP)+ (rawdefallgw.apppoint)\n",
        "#rawdefallgw['xPallgw'] = (rawdefallgw.expected_goals * 6/3)+(rawdefallgw.expected_assists * 3/3) + (rawdefallgw.apppoint)\n",
        "rawdefallgw = rawdefallgw.drop(columns=[\n",
        " 'expected_goals',\n",
        " 'expected_assists',\n",
        " 'apppoint',\n",
        " 'assistvalue',\n",
        "  'xGA',])\n",
        "rawallplayersallgw = pd.concat([rawfwdallgw, rawmdallgw, rawdefallgw, rawgkallgw], ignore_index=True)\n",
        "rawallplayersallgw\n",
        "\n",
        "\n",
        "\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 875
        },
        "id": "xxPTwE3TZZC0",
        "outputId": "5de23ce5-21ca-4acb-96a4-0fe99862329b"
      },
      "execution_count": 28,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "<ipython-input-28-fd8cb31c1281>:6: SettingWithCopyWarning: \n",
            "A value is trying to be set on a copy of a slice from a DataFrame.\n",
            "Try using .loc[row_indexer,col_indexer] = value instead\n",
            "\n",
            "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
            "  rawfwdallgw['xPallgw'] = ((rawfwdallgw.expected_goals * 4/6)+(rawfwdallgw.expected_assists * 3/6) + (rawfwdallgw.apppoint))\n",
            "<ipython-input-28-fd8cb31c1281>:14: SettingWithCopyWarning: \n",
            "A value is trying to be set on a copy of a slice from a DataFrame.\n",
            "Try using .loc[row_indexer,col_indexer] = value instead\n",
            "\n",
            "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
            "  rawmdallgw['xPallgw'] = ((rawmdallgw.expected_goals * 5/6)+(rawmdallgw.expected_assists * 3/6) + (rawmdallgw.apppoint))\n",
            "<ipython-input-28-fd8cb31c1281>:46: FutureWarning: The default value of regex will change from True to False in a future version.\n",
            "  epltabledef['Squad'] = epltabledef['Squad'].str.replace(r\"[\\\"\\',]\", '')\n",
            "<ipython-input-28-fd8cb31c1281>:56: SettingWithCopyWarning: \n",
            "A value is trying to be set on a copy of a slice from a DataFrame.\n",
            "Try using .loc[row_indexer,col_indexer] = value instead\n",
            "\n",
            "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
            "  rawgkallgw['xPallgw'] = ((rawgkallgw.xCSP)+ (rawgkallgw.apppoint))\n",
            "<ipython-input-28-fd8cb31c1281>:65: SettingWithCopyWarning: \n",
            "A value is trying to be set on a copy of a slice from a DataFrame.\n",
            "Try using .loc[row_indexer,col_indexer] = value instead\n",
            "\n",
            "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
            "  rawdefallgw['xPallgw'] = (rawdefallgw.expected_goals * 6/6)+(rawdefallgw.expected_assists * 3/6) +(rawdefallgw.xCSP)+ (rawdefallgw.apppoint)\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "      id                     team pos     name  cost  selected_by_percent  \\\n",
              "0      1                  Arsenal   F  Balogun   4.4                  0.3   \n",
              "1      8                  Arsenal   F  G.Jesus   7.9                  3.5   \n",
              "2     13                  Arsenal   F  Nketiah   5.5                  5.6   \n",
              "3     39              Aston Villa   F    Davis   4.9                  0.2   \n",
              "4     44              Aston Villa   F    Duran   5.0                  0.3   \n",
              "..   ...                      ...  ..      ...   ...                  ...   \n",
              "795  647                 West Ham   G    Anang   4.0                  0.0   \n",
              "796  546  Wolverhampton Wanderers   G  Bentley   4.0                  0.4   \n",
              "797  564  Wolverhampton Wanderers   G     King   4.0                  0.8   \n",
              "798  569  Wolverhampton Wanderers   G  José Sá   5.0                  1.7   \n",
              "799  571  Wolverhampton Wanderers   G   Šarkić   4.0                  0.4   \n",
              "\n",
              "     goals_scored  assists  bps  ict_index  points  points_per_game  minutes  \\\n",
              "0               0        0    0        0.0       0              0.0        0   \n",
              "1               1        0   26       15.5      10              2.5      115   \n",
              "2               2        1   67       27.6      23              3.8      425   \n",
              "3               0        0    0        0.0       0              0.0        0   \n",
              "4               2        0   56       13.6      15              3.0       57   \n",
              "..            ...      ...  ...        ...     ...              ...      ...   \n",
              "795             0        0    0        0.0       0              0.0        0   \n",
              "796             0        0    0        0.0       0              0.0        0   \n",
              "797             0        0    0        0.0       0              0.0        0   \n",
              "798             0        0  125       20.7      22              3.7      540   \n",
              "799             0        0    0        0.0       0              0.0        0   \n",
              "\n",
              "     home_adjustment   xPallgw      xCSP  \n",
              "0           1.166179  2.000000       NaN  \n",
              "1           1.166179  2.903333       NaN  \n",
              "2           1.166179  3.226667       NaN  \n",
              "3           1.101978  2.000000       NaN  \n",
              "4           1.101978  2.491667       NaN  \n",
              "..               ...       ...       ...  \n",
              "795         0.988306 -2.866667 -4.866667  \n",
              "796         0.820717 -2.333333 -4.333333  \n",
              "797         0.820717 -2.333333 -4.333333  \n",
              "798         0.820717 -2.333333 -4.333333  \n",
              "799         0.820717 -2.333333 -4.333333  \n",
              "\n",
              "[800 rows x 16 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-6dafbb8b-8dde-4baa-9f5b-cdca6f72cd12\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>team</th>\n",
              "      <th>pos</th>\n",
              "      <th>name</th>\n",
              "      <th>cost</th>\n",
              "      <th>selected_by_percent</th>\n",
              "      <th>goals_scored</th>\n",
              "      <th>assists</th>\n",
              "      <th>bps</th>\n",
              "      <th>ict_index</th>\n",
              "      <th>points</th>\n",
              "      <th>points_per_game</th>\n",
              "      <th>minutes</th>\n",
              "      <th>home_adjustment</th>\n",
              "      <th>xPallgw</th>\n",
              "      <th>xCSP</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>1</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>F</td>\n",
              "      <td>Balogun</td>\n",
              "      <td>4.4</td>\n",
              "      <td>0.3</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>1.166179</td>\n",
              "      <td>2.000000</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>8</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>F</td>\n",
              "      <td>G.Jesus</td>\n",
              "      <td>7.9</td>\n",
              "      <td>3.5</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>26</td>\n",
              "      <td>15.5</td>\n",
              "      <td>10</td>\n",
              "      <td>2.5</td>\n",
              "      <td>115</td>\n",
              "      <td>1.166179</td>\n",
              "      <td>2.903333</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>13</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>F</td>\n",
              "      <td>Nketiah</td>\n",
              "      <td>5.5</td>\n",
              "      <td>5.6</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>67</td>\n",
              "      <td>27.6</td>\n",
              "      <td>23</td>\n",
              "      <td>3.8</td>\n",
              "      <td>425</td>\n",
              "      <td>1.166179</td>\n",
              "      <td>3.226667</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>39</td>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>F</td>\n",
              "      <td>Davis</td>\n",
              "      <td>4.9</td>\n",
              "      <td>0.2</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>1.101978</td>\n",
              "      <td>2.000000</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>44</td>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>F</td>\n",
              "      <td>Duran</td>\n",
              "      <td>5.0</td>\n",
              "      <td>0.3</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>56</td>\n",
              "      <td>13.6</td>\n",
              "      <td>15</td>\n",
              "      <td>3.0</td>\n",
              "      <td>57</td>\n",
              "      <td>1.101978</td>\n",
              "      <td>2.491667</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>795</th>\n",
              "      <td>647</td>\n",
              "      <td>West Ham</td>\n",
              "      <td>G</td>\n",
              "      <td>Anang</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.988306</td>\n",
              "      <td>-2.866667</td>\n",
              "      <td>-4.866667</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>796</th>\n",
              "      <td>546</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>G</td>\n",
              "      <td>Bentley</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.4</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.820717</td>\n",
              "      <td>-2.333333</td>\n",
              "      <td>-4.333333</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>797</th>\n",
              "      <td>564</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>G</td>\n",
              "      <td>King</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.8</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.820717</td>\n",
              "      <td>-2.333333</td>\n",
              "      <td>-4.333333</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>798</th>\n",
              "      <td>569</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>G</td>\n",
              "      <td>José Sá</td>\n",
              "      <td>5.0</td>\n",
              "      <td>1.7</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>125</td>\n",
              "      <td>20.7</td>\n",
              "      <td>22</td>\n",
              "      <td>3.7</td>\n",
              "      <td>540</td>\n",
              "      <td>0.820717</td>\n",
              "      <td>-2.333333</td>\n",
              "      <td>-4.333333</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>799</th>\n",
              "      <td>571</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>G</td>\n",
              "      <td>Šarkić</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.4</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.820717</td>\n",
              "      <td>-2.333333</td>\n",
              "      <td>-4.333333</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>800 rows × 16 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-6dafbb8b-8dde-4baa-9f5b-cdca6f72cd12')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-6dafbb8b-8dde-4baa-9f5b-cdca6f72cd12 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-6dafbb8b-8dde-4baa-9f5b-cdca6f72cd12');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-b86150c8-22d5-4622-b2ff-fbe401f3622c\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-b86150c8-22d5-4622-b2ff-fbe401f3622c')\"\n",
              "            title=\"Suggest charts.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-b86150c8-22d5-4622-b2ff-fbe401f3622c button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 28
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "rawmdallgw"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 424
        },
        "id": "ZtNrmQMhefCc",
        "outputId": "2bb74e76-1f20-45e4-b4ec-004633f8d62e"
      },
      "execution_count": 29,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "      id                     team pos             name  cost  \\\n",
              "2      3                  Arsenal   M         M.Elneny   4.4   \n",
              "3      4                  Arsenal   M     Fábio Vieira   5.4   \n",
              "5      6                  Arsenal   M          Havertz   7.1   \n",
              "7      9                  Arsenal   M         Jorginho   5.4   \n",
              "9     11                  Arsenal   M       Marquinhos   4.5   \n",
              "..   ...                      ...  ..              ...   ...   \n",
              "787  568  Wolverhampton Wanderers   M          Podence   5.3   \n",
              "789  570  Wolverhampton Wanderers   M          Sarabia   5.0   \n",
              "793  574  Wolverhampton Wanderers   M  Boubacar Traore   4.4   \n",
              "797  698  Wolverhampton Wanderers   M         González   5.0   \n",
              "799  715  Wolverhampton Wanderers   M       Bellegarde   5.0   \n",
              "\n",
              "     selected_by_percent  goals_scored  assists  bps  ict_index  points  \\\n",
              "2                    0.1             0        0    0        0.0       0   \n",
              "3                    0.2             0        3   43       13.9      15   \n",
              "5                    1.7             0        0   20       17.2       8   \n",
              "7                    0.2             0        0   11        2.2       4   \n",
              "9                    0.1             0        0    0        0.0       0   \n",
              "..                   ...           ...      ...  ...        ...     ...   \n",
              "787                  0.1             0        0    0        0.0       0   \n",
              "789                  0.1             0        1   33       19.1       9   \n",
              "793                  0.5             0        0    4        1.2       3   \n",
              "797                  0.0             0        0    0        0.0       0   \n",
              "799                  0.0             0        0    0        3.2       0   \n",
              "\n",
              "     points_per_game  minutes  home_adjustment   xPallgw  \n",
              "2                0.0        0         1.166179  2.000000  \n",
              "3                3.8      171         1.166179  2.486667  \n",
              "5                1.3      366         1.166179  2.873333  \n",
              "7                1.0       63         1.166179  2.025000  \n",
              "9                0.0        0         1.166179  2.000000  \n",
              "..               ...      ...              ...       ...  \n",
              "787              0.0        0         0.820717  2.000000  \n",
              "789              2.2      172         0.820717  2.676667  \n",
              "793              1.0       47         0.820717  2.005000  \n",
              "797              0.0        0         0.820717  2.000000  \n",
              "799              0.0      114         0.820717  2.043333  \n",
              "\n",
              "[343 rows x 15 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-c1aff4af-c34d-4447-b10a-7f5bcb95663b\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>team</th>\n",
              "      <th>pos</th>\n",
              "      <th>name</th>\n",
              "      <th>cost</th>\n",
              "      <th>selected_by_percent</th>\n",
              "      <th>goals_scored</th>\n",
              "      <th>assists</th>\n",
              "      <th>bps</th>\n",
              "      <th>ict_index</th>\n",
              "      <th>points</th>\n",
              "      <th>points_per_game</th>\n",
              "      <th>minutes</th>\n",
              "      <th>home_adjustment</th>\n",
              "      <th>xPallgw</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>3</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>M</td>\n",
              "      <td>M.Elneny</td>\n",
              "      <td>4.4</td>\n",
              "      <td>0.1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>1.166179</td>\n",
              "      <td>2.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>4</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>M</td>\n",
              "      <td>Fábio Vieira</td>\n",
              "      <td>5.4</td>\n",
              "      <td>0.2</td>\n",
              "      <td>0</td>\n",
              "      <td>3</td>\n",
              "      <td>43</td>\n",
              "      <td>13.9</td>\n",
              "      <td>15</td>\n",
              "      <td>3.8</td>\n",
              "      <td>171</td>\n",
              "      <td>1.166179</td>\n",
              "      <td>2.486667</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>6</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>M</td>\n",
              "      <td>Havertz</td>\n",
              "      <td>7.1</td>\n",
              "      <td>1.7</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>20</td>\n",
              "      <td>17.2</td>\n",
              "      <td>8</td>\n",
              "      <td>1.3</td>\n",
              "      <td>366</td>\n",
              "      <td>1.166179</td>\n",
              "      <td>2.873333</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>9</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>M</td>\n",
              "      <td>Jorginho</td>\n",
              "      <td>5.4</td>\n",
              "      <td>0.2</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>11</td>\n",
              "      <td>2.2</td>\n",
              "      <td>4</td>\n",
              "      <td>1.0</td>\n",
              "      <td>63</td>\n",
              "      <td>1.166179</td>\n",
              "      <td>2.025000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>11</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>M</td>\n",
              "      <td>Marquinhos</td>\n",
              "      <td>4.5</td>\n",
              "      <td>0.1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>1.166179</td>\n",
              "      <td>2.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>787</th>\n",
              "      <td>568</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>M</td>\n",
              "      <td>Podence</td>\n",
              "      <td>5.3</td>\n",
              "      <td>0.1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.820717</td>\n",
              "      <td>2.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>789</th>\n",
              "      <td>570</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>M</td>\n",
              "      <td>Sarabia</td>\n",
              "      <td>5.0</td>\n",
              "      <td>0.1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>33</td>\n",
              "      <td>19.1</td>\n",
              "      <td>9</td>\n",
              "      <td>2.2</td>\n",
              "      <td>172</td>\n",
              "      <td>0.820717</td>\n",
              "      <td>2.676667</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>793</th>\n",
              "      <td>574</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>M</td>\n",
              "      <td>Boubacar Traore</td>\n",
              "      <td>4.4</td>\n",
              "      <td>0.5</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>4</td>\n",
              "      <td>1.2</td>\n",
              "      <td>3</td>\n",
              "      <td>1.0</td>\n",
              "      <td>47</td>\n",
              "      <td>0.820717</td>\n",
              "      <td>2.005000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>797</th>\n",
              "      <td>698</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>M</td>\n",
              "      <td>González</td>\n",
              "      <td>5.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.820717</td>\n",
              "      <td>2.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>799</th>\n",
              "      <td>715</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>M</td>\n",
              "      <td>Bellegarde</td>\n",
              "      <td>5.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>3.2</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>114</td>\n",
              "      <td>0.820717</td>\n",
              "      <td>2.043333</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>343 rows × 15 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-c1aff4af-c34d-4447-b10a-7f5bcb95663b')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-c1aff4af-c34d-4447-b10a-7f5bcb95663b button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-c1aff4af-c34d-4447-b10a-7f5bcb95663b');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-8ab20754-707f-4c95-a896-3352df56cd73\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-8ab20754-707f-4c95-a896-3352df56cd73')\"\n",
              "            title=\"Suggest charts.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-8ab20754-707f-4c95-a896-3352df56cd73 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 29
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "gw2blanks = [['Burnley', 0], ['Luton Town', 0]]\n",
        "\n",
        "# Create the pandas DataFrame\n",
        "blanks2 = pd.DataFrame(gw2blanks, columns=['team', 'gw2adjustment'])\n",
        "blanks2"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 112
        },
        "id": "xkGffHD0iXWI",
        "outputId": "84f8467e-b3c1-4463-b06a-9ddab36d04c4"
      },
      "execution_count": 30,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "         team  gw2adjustment\n",
              "0     Burnley              0\n",
              "1  Luton Town              0"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-c97d1885-8ae9-4eeb-ad12-eb3dda76099e\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>team</th>\n",
              "      <th>gw2adjustment</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>Burnley</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Luton Town</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-c97d1885-8ae9-4eeb-ad12-eb3dda76099e')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-c97d1885-8ae9-4eeb-ad12-eb3dda76099e button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-c97d1885-8ae9-4eeb-ad12-eb3dda76099e');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-a565b16d-ff00-4610-baf6-f6cd5c151a2a\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-a565b16d-ff00-4610-baf6-f6cd5c151a2a')\"\n",
              "            title=\"Suggest charts.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-a565b16d-ff00-4610-baf6-f6cd5c151a2a button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 30
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#gw2adjustments = pd.concat([gw2adjustments, blanks2])\n",
        "#gw2adjustments = gw2adjustments.reset_index(drop=True)\n",
        "#gw2adjustments"
      ],
      "metadata": {
        "id": "JNr3eV5Rir58"
      },
      "execution_count": 31,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "##gw3blanks = [['Newcastle United', 0], ['Manchester United', 0], ['Brentford', 0], ['Brighton', 0]]\n",
        "\n",
        "# Create the pandas DataFrame\n",
        "##blanks = pd.DataFrame(gw3blanks, columns=['team', 'gw3adjustment'])\n",
        "##blanks"
      ],
      "metadata": {
        "id": "iCizQgwMD84B"
      },
      "execution_count": 32,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "gw9 = homesawayspi.query('Event==\"9.0\"')\n",
        "pd.options.mode.chained_assignment = None  # default='warn'\n",
        "PLSPI = spi.query('league==\"Barclays Premier League\"')\n",
        "PLSPI['League Average']  = PLSPI[\"spi\"].mean()\n",
        "laverage = PLSPI[\"spi\"].mean()\n",
        "PLSPI['League Average'].astype(int)\n",
        "gw9['League_Average']  = laverage\n",
        "gw9.rename(columns = {'Home SPI':'HomeSPI', 'Away SPI':'AwaySPI'}, inplace = True)\n",
        "gw9['home_difference'] = gw9.HomeSPI - gw9.League_Average\n",
        "gw9['away_difference'] = gw9.AwaySPI - gw9.League_Average\n",
        "gw9['home_adjustment'] = (gw9.home_difference - gw9.away_difference + gw9.League_Average)/gw9.League_Average\n",
        "gw9['away_adjustment'] = (gw9.away_difference - gw9.home_difference+ gw9.League_Average)/gw9.League_Average\n",
        "gw9adjustments = gw9[['team_h', 'home_adjustment']].append(gw9[['team_a','away_adjustment']].set_axis(['team_h', 'home_adjustment'], axis=1)).reset_index(drop=True)\n",
        "gw9adjustments.rename(columns = {'team_h':'team'}, inplace = True)\n",
        "gw9adjustments.rename(columns = {'home_adjustment':'gw9adjustment'}, inplace = True)\n",
        "gw9adjustments"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 711
        },
        "id": "pzyah3Z-kgct",
        "outputId": "bd2a7850-07aa-4b8f-d312-39b35fc989b1"
      },
      "execution_count": 33,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "<ipython-input-33-5b7600c0bba0>:13: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  gw9adjustments = gw9[['team_h', 'home_adjustment']].append(gw9[['team_a','away_adjustment']].set_axis(['team_h', 'home_adjustment'], axis=1)).reset_index(drop=True)\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                       team  gw9adjustment\n",
              "0                 Liverpool       1.282095\n",
              "1               Bournemouth       1.007226\n",
              "2                 Brentford       1.197328\n",
              "3           Manchester City       1.154527\n",
              "4          Newcastle United       1.142298\n",
              "5         Nottingham Forest       1.009033\n",
              "6                   Chelsea       0.886884\n",
              "7          Sheffield United       0.687194\n",
              "8               Aston Villa       1.113672\n",
              "9                 Tottenham       1.054474\n",
              "10                  Everton       0.717905\n",
              "11  Wolverhampton Wanderers       0.992774\n",
              "12                  Burnley       0.802672\n",
              "13                 Brighton       0.845473\n",
              "14           Crystal Palace       0.857702\n",
              "15               Luton Town       0.990967\n",
              "16                  Arsenal       1.113116\n",
              "17        Manchester United       1.312806\n",
              "18                 West Ham       0.886328\n",
              "19                   Fulham       0.945526"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-8332649b-3c9d-4d00-b486-b6f6f26debbd\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>team</th>\n",
              "      <th>gw9adjustment</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>Liverpool</td>\n",
              "      <td>1.282095</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Bournemouth</td>\n",
              "      <td>1.007226</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>Brentford</td>\n",
              "      <td>1.197328</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>Manchester City</td>\n",
              "      <td>1.154527</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>Newcastle United</td>\n",
              "      <td>1.142298</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>Nottingham Forest</td>\n",
              "      <td>1.009033</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>Chelsea</td>\n",
              "      <td>0.886884</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>Sheffield United</td>\n",
              "      <td>0.687194</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>1.113672</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>Tottenham</td>\n",
              "      <td>1.054474</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10</th>\n",
              "      <td>Everton</td>\n",
              "      <td>0.717905</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>11</th>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>0.992774</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>12</th>\n",
              "      <td>Burnley</td>\n",
              "      <td>0.802672</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>13</th>\n",
              "      <td>Brighton</td>\n",
              "      <td>0.845473</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>14</th>\n",
              "      <td>Crystal Palace</td>\n",
              "      <td>0.857702</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>15</th>\n",
              "      <td>Luton Town</td>\n",
              "      <td>0.990967</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>16</th>\n",
              "      <td>Arsenal</td>\n",
              "      <td>1.113116</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>17</th>\n",
              "      <td>Manchester United</td>\n",
              "      <td>1.312806</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>18</th>\n",
              "      <td>West Ham</td>\n",
              "      <td>0.886328</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>19</th>\n",
              "      <td>Fulham</td>\n",
              "      <td>0.945526</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-8332649b-3c9d-4d00-b486-b6f6f26debbd')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-8332649b-3c9d-4d00-b486-b6f6f26debbd button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-8332649b-3c9d-4d00-b486-b6f6f26debbd');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-e0d16aa8-55b6-48e0-a557-09540dc1536b\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-e0d16aa8-55b6-48e0-a557-09540dc1536b')\"\n",
              "            title=\"Suggest charts.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-e0d16aa8-55b6-48e0-a557-09540dc1536b button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 33
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "gw2 = homesawayspi.query('Event==\"2.0\"')\n",
        "pd.options.mode.chained_assignment = None  # default='warn'\n",
        "PLSPI = spi.query('league==\"Barclays Premier League\"')\n",
        "PLSPI['League Average']  = PLSPI[\"spi\"].mean()\n",
        "laverage = PLSPI[\"spi\"].mean()\n",
        "PLSPI['League Average'].astype(int)\n",
        "gw2['League_Average']  = laverage\n",
        "gw2.rename(columns = {'Home SPI':'HomeSPI', 'Away SPI':'AwaySPI'}, inplace = True)\n",
        "gw2['home_difference'] = gw2.HomeSPI - gw2.League_Average\n",
        "gw2['away_difference'] = gw2.AwaySPI - gw2.League_Average\n",
        "gw2['home_adjustment'] = (gw2.home_difference - gw2.away_difference + gw2.League_Average)/gw2.League_Average\n",
        "gw2['away_adjustment'] = (gw2.away_difference - gw2.home_difference+ gw2.League_Average)/gw2.League_Average\n",
        "gw2adjustments = gw2[['team_h', 'home_adjustment']].append(gw2[['team_a','away_adjustment']].set_axis(['team_h', 'home_adjustment'], axis=1)).reset_index(drop=True)\n",
        "gw2adjustments.rename(columns = {'team_h':'team'}, inplace = True)\n",
        "gw2adjustments.rename(columns = {'home_adjustment':'gw2adjustment'}, inplace = True)\n",
        "gw2adjustments = gw2adjustments.groupby('team', as_index=False)['gw2adjustment'].aggregate('sum')\n",
        "gw2adjustments"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 649
        },
        "id": "nL5rLLG4kOqM",
        "outputId": "4408fce6-2a30-45f7-e2eb-d97db936a5f1"
      },
      "execution_count": 34,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "<ipython-input-34-cc71a582ca3c>:13: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  gw2adjustments = gw2[['team_h', 'home_adjustment']].append(gw2[['team_a','away_adjustment']].set_axis(['team_h', 'home_adjustment'], axis=1)).reset_index(drop=True)\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                       team  gw2adjustment\n",
              "0                   Arsenal       1.145356\n",
              "1               Aston Villa       1.217755\n",
              "2               Bournemouth       0.661625\n",
              "3                 Brentford       1.123955\n",
              "4                  Brighton       1.303218\n",
              "5                   Chelsea       1.064757\n",
              "6            Crystal Palace       0.854644\n",
              "7                   Everton       0.782245\n",
              "8                    Fulham       0.876045\n",
              "9                 Liverpool       1.338375\n",
              "10          Manchester City       1.115339\n",
              "11        Manchester United       1.096440\n",
              "12         Newcastle United       0.884661\n",
              "13        Nottingham Forest       0.993886\n",
              "14         Sheffield United       1.006114\n",
              "15                Tottenham       0.903560\n",
              "16                 West Ham       0.935243\n",
              "17  Wolverhampton Wanderers       0.696782"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-ac244c59-6719-4c02-8930-b3ae08b2e1ff\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>team</th>\n",
              "      <th>gw2adjustment</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>Arsenal</td>\n",
              "      <td>1.145356</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>1.217755</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>Bournemouth</td>\n",
              "      <td>0.661625</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>Brentford</td>\n",
              "      <td>1.123955</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>Brighton</td>\n",
              "      <td>1.303218</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>Chelsea</td>\n",
              "      <td>1.064757</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>Crystal Palace</td>\n",
              "      <td>0.854644</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>Everton</td>\n",
              "      <td>0.782245</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>Fulham</td>\n",
              "      <td>0.876045</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>Liverpool</td>\n",
              "      <td>1.338375</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10</th>\n",
              "      <td>Manchester City</td>\n",
              "      <td>1.115339</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>11</th>\n",
              "      <td>Manchester United</td>\n",
              "      <td>1.096440</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>12</th>\n",
              "      <td>Newcastle United</td>\n",
              "      <td>0.884661</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>13</th>\n",
              "      <td>Nottingham Forest</td>\n",
              "      <td>0.993886</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>14</th>\n",
              "      <td>Sheffield United</td>\n",
              "      <td>1.006114</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>15</th>\n",
              "      <td>Tottenham</td>\n",
              "      <td>0.903560</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>16</th>\n",
              "      <td>West Ham</td>\n",
              "      <td>0.935243</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>17</th>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>0.696782</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-ac244c59-6719-4c02-8930-b3ae08b2e1ff')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-ac244c59-6719-4c02-8930-b3ae08b2e1ff button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-ac244c59-6719-4c02-8930-b3ae08b2e1ff');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-29eeb921-b09a-4ea8-a47b-aa7b1bda4a48\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-29eeb921-b09a-4ea8-a47b-aa7b1bda4a48')\"\n",
              "            title=\"Suggest charts.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-29eeb921-b09a-4ea8-a47b-aa7b1bda4a48 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 34
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "gw3 = homesawayspi.query('Event==\"3.0\"')\n",
        "pd.options.mode.chained_assignment = None  # default='warn'\n",
        "PLSPI = spi.query('league==\"Barclays Premier League\"')\n",
        "PLSPI['League Average']  = PLSPI[\"spi\"].mean()\n",
        "laverage = PLSPI[\"spi\"].mean()\n",
        "PLSPI['League Average'].astype(int)\n",
        "gw3['League_Average']  = laverage\n",
        "gw3.rename(columns = {'Home SPI':'HomeSPI', 'Away SPI':'AwaySPI'}, inplace = True)\n",
        "gw3['home_difference'] = gw3.HomeSPI - gw3.League_Average\n",
        "gw3['away_difference'] = gw3.AwaySPI - gw3.League_Average\n",
        "gw3['home_adjustment'] = (gw3.home_difference - gw3.away_difference + gw3.League_Average)/gw3.League_Average\n",
        "gw3['away_adjustment'] = (gw3.away_difference - gw3.home_difference+ gw3.League_Average)/gw3.League_Average\n",
        "gw3adjustments = gw3[['team_h', 'home_adjustment']].append(gw3[['team_a','away_adjustment']].set_axis(['team_h', 'home_adjustment'], axis=1)).reset_index(drop=True)\n",
        "gw3adjustments.rename(columns = {'team_h':'team'}, inplace = True)\n",
        "gw3adjustments.rename(columns = {'home_adjustment':'gw3adjustment'}, inplace = True)\n",
        "gw3adjustments"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 711
        },
        "id": "bg97rds1kb73",
        "outputId": "61ec704d-9c94-48dc-8fbd-645903ca4849"
      },
      "execution_count": 35,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "<ipython-input-35-a2637fad4f3e>:13: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  gw3adjustments = gw3[['team_h', 'home_adjustment']].append(gw3[['team_a','away_adjustment']].set_axis(['team_h', 'home_adjustment'], axis=1)).reset_index(drop=True)\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                       team  gw3adjustment\n",
              "0                   Chelsea       1.282095\n",
              "1               Bournemouth       0.825462\n",
              "2                   Arsenal       1.218172\n",
              "3                 Brentford       1.051138\n",
              "4                   Everton       1.063506\n",
              "5         Manchester United       1.318921\n",
              "6                  Brighton       1.135628\n",
              "7                   Burnley       0.772656\n",
              "8          Sheffield United       0.507653\n",
              "9          Newcastle United       0.996804\n",
              "10               Luton Town       0.717905\n",
              "11                Tottenham       1.174538\n",
              "12                   Fulham       0.781828\n",
              "13           Crystal Palace       0.948862\n",
              "14  Wolverhampton Wanderers       0.936494\n",
              "15        Nottingham Forest       0.681079\n",
              "16                 West Ham       0.864372\n",
              "17              Aston Villa       1.227344\n",
              "18          Manchester City       1.492347\n",
              "19                Liverpool       1.003196"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-6748a36e-8563-4f84-90d8-4bb82efe1801\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>team</th>\n",
              "      <th>gw3adjustment</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>Chelsea</td>\n",
              "      <td>1.282095</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Bournemouth</td>\n",
              "      <td>0.825462</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>Arsenal</td>\n",
              "      <td>1.218172</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>Brentford</td>\n",
              "      <td>1.051138</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>Everton</td>\n",
              "      <td>1.063506</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>Manchester United</td>\n",
              "      <td>1.318921</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>Brighton</td>\n",
              "      <td>1.135628</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>Burnley</td>\n",
              "      <td>0.772656</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>Sheffield United</td>\n",
              "      <td>0.507653</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>Newcastle United</td>\n",
              "      <td>0.996804</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10</th>\n",
              "      <td>Luton Town</td>\n",
              "      <td>0.717905</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>11</th>\n",
              "      <td>Tottenham</td>\n",
              "      <td>1.174538</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>12</th>\n",
              "      <td>Fulham</td>\n",
              "      <td>0.781828</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>13</th>\n",
              "      <td>Crystal Palace</td>\n",
              "      <td>0.948862</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>14</th>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>0.936494</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>15</th>\n",
              "      <td>Nottingham Forest</td>\n",
              "      <td>0.681079</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>16</th>\n",
              "      <td>West Ham</td>\n",
              "      <td>0.864372</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>17</th>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>1.227344</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>18</th>\n",
              "      <td>Manchester City</td>\n",
              "      <td>1.492347</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>19</th>\n",
              "      <td>Liverpool</td>\n",
              "      <td>1.003196</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-6748a36e-8563-4f84-90d8-4bb82efe1801')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-6748a36e-8563-4f84-90d8-4bb82efe1801 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-6748a36e-8563-4f84-90d8-4bb82efe1801');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-b69a1f57-8124-4a3c-9799-7913f26b399d\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-b69a1f57-8124-4a3c-9799-7913f26b399d')\"\n",
              "            title=\"Suggest charts.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-b69a1f57-8124-4a3c-9799-7913f26b399d button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 35
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "gw10 = homesawayspi.query('Event==\"10.0\"')\n",
        "pd.options.mode.chained_assignment = None  # default='warn'\n",
        "PLSPI = spi.query('league==\"Barclays Premier League\"')\n",
        "PLSPI['League Average']  = PLSPI[\"spi\"].mean()\n",
        "laverage = PLSPI[\"spi\"].mean()\n",
        "PLSPI['League Average'].astype(int)\n",
        "gw10['League_Average']  = laverage\n",
        "gw10.rename(columns = {'Home SPI':'HomeSPI', 'Away SPI':'AwaySPI'}, inplace = True)\n",
        "gw10['home_difference'] = gw10.HomeSPI - gw10.League_Average\n",
        "gw10['away_difference'] = gw10.AwaySPI - gw10.League_Average\n",
        "gw10['home_adjustment'] = (gw10.home_difference - gw10.away_difference + gw10.League_Average)/gw10.League_Average\n",
        "gw10['away_adjustment'] = (gw10.away_difference - gw10.home_difference+ gw10.League_Average)/gw10.League_Average\n",
        "gw10adjustments = gw10[['team_h', 'home_adjustment']].append(gw10[['team_a','away_adjustment']].set_axis(['team_h', 'home_adjustment'], axis=1)).reset_index(drop=True)\n",
        "gw10adjustments.rename(columns = {'team_h':'team'}, inplace = True)\n",
        "gw10adjustments.rename(columns = {'home_adjustment':'gw10adjustment'}, inplace = True)\n",
        "gw10adjustments"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 711
        },
        "id": "7uE1H7R4Gems",
        "outputId": "8297f6cb-0175-4e01-9728-42f07a7fdc88"
      },
      "execution_count": 36,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "<ipython-input-36-6a37dd411c1c>:13: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  gw10adjustments = gw10[['team_h', 'home_adjustment']].append(gw10[['team_a','away_adjustment']].set_axis(['team_h', 'home_adjustment'], axis=1)).reset_index(drop=True)\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                       team  gw10adjustment\n",
              "0            Crystal Palace        1.018343\n",
              "1                   Chelsea        0.981101\n",
              "2                   Arsenal        1.380064\n",
              "3               Bournemouth        0.953308\n",
              "4   Wolverhampton Wanderers        0.657595\n",
              "5                  West Ham        1.104083\n",
              "6               Aston Villa        1.331010\n",
              "7                  Brighton        1.175927\n",
              "8                 Liverpool        1.386318\n",
              "9         Manchester United        0.820460\n",
              "10                Tottenham        0.981657\n",
              "11                Brentford        1.018899\n",
              "12         Sheffield United        0.619936\n",
              "13                  Burnley        1.046692\n",
              "14         Newcastle United        1.342405\n",
              "15                  Everton        0.895917\n",
              "16               Luton Town        0.668990\n",
              "17                   Fulham        0.824073\n",
              "18        Nottingham Forest        0.613682\n",
              "19          Manchester City        1.179540"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-0af82610-8561-4e38-ad60-a8e7cd0336b0\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>team</th>\n",
              "      <th>gw10adjustment</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>Crystal Palace</td>\n",
              "      <td>1.018343</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Chelsea</td>\n",
              "      <td>0.981101</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>Arsenal</td>\n",
              "      <td>1.380064</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>Bournemouth</td>\n",
              "      <td>0.953308</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>0.657595</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>West Ham</td>\n",
              "      <td>1.104083</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>1.331010</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>Brighton</td>\n",
              "      <td>1.175927</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>Liverpool</td>\n",
              "      <td>1.386318</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>Manchester United</td>\n",
              "      <td>0.820460</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10</th>\n",
              "      <td>Tottenham</td>\n",
              "      <td>0.981657</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>11</th>\n",
              "      <td>Brentford</td>\n",
              "      <td>1.018899</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>12</th>\n",
              "      <td>Sheffield United</td>\n",
              "      <td>0.619936</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>13</th>\n",
              "      <td>Burnley</td>\n",
              "      <td>1.046692</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>14</th>\n",
              "      <td>Newcastle United</td>\n",
              "      <td>1.342405</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>15</th>\n",
              "      <td>Everton</td>\n",
              "      <td>0.895917</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>16</th>\n",
              "      <td>Luton Town</td>\n",
              "      <td>0.668990</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>17</th>\n",
              "      <td>Fulham</td>\n",
              "      <td>0.824073</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>18</th>\n",
              "      <td>Nottingham Forest</td>\n",
              "      <td>0.613682</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>19</th>\n",
              "      <td>Manchester City</td>\n",
              "      <td>1.179540</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-0af82610-8561-4e38-ad60-a8e7cd0336b0')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-0af82610-8561-4e38-ad60-a8e7cd0336b0 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-0af82610-8561-4e38-ad60-a8e7cd0336b0');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-2167c039-4616-4782-8b51-53bf0c8c20a1\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-2167c039-4616-4782-8b51-53bf0c8c20a1')\"\n",
              "            title=\"Suggest charts.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-2167c039-4616-4782-8b51-53bf0c8c20a1 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 36
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#gw5blanks = [['Chelsea', 0], ['Manchester United', 0], ['Manchester City', 0], ['Brighton', 0]]\n",
        "\n",
        "# Create the pandas DataFrame\n",
        "#blanks32 = pd.DataFrame(gw5blanks, columns=['team', 'gw5adjustment'])\n",
        "#blanks32"
      ],
      "metadata": {
        "id": "p00QYlZ7UbAu"
      },
      "execution_count": 37,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "#gw5adjustments = pd.concat([gw5adjustments, blanks32])\n",
        "#gw5adjustments = gw5adjustments.reset_index(drop=True)\n",
        "#gw5adjustments"
      ],
      "metadata": {
        "id": "xh_AhxKJU0VW"
      },
      "execution_count": 38,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "gw11= homesawayspi.query('Event==\"11.0\"')\n",
        "pd.options.mode.chained_assignment = None  # default='warn'\n",
        "PLSPI = spi.query('league==\"Barclays Premier League\"')\n",
        "PLSPI['League Average']  = PLSPI[\"spi\"].mean()\n",
        "laverage = PLSPI[\"spi\"].mean()\n",
        "PLSPI['League Average'].astype(int)\n",
        "gw11['League_Average']  = laverage\n",
        "gw11.rename(columns = {'Home SPI':'HomeSPI', 'Away SPI':'AwaySPI'}, inplace = True)\n",
        "gw11['home_difference'] = gw11.HomeSPI - gw11.League_Average\n",
        "gw11['away_difference'] = gw11.AwaySPI - gw11.League_Average\n",
        "gw11['home_adjustment'] = (gw11.home_difference - gw11.away_difference + gw11.League_Average)/gw11.League_Average\n",
        "gw11['away_adjustment'] = (gw11.away_difference - gw11.home_difference+ gw11.League_Average)/gw11.League_Average\n",
        "gw11adjustments = gw11[['team_h', 'home_adjustment']].append(gw11[['team_a','away_adjustment']].set_axis(['team_h', 'home_adjustment'], axis=1)).reset_index(drop=True)\n",
        "gw11adjustments.rename(columns = {'team_h':'team'}, inplace = True)\n",
        "gw11adjustments.rename(columns = {'home_adjustment':'gw11adjustment'}, inplace = True)\n",
        "gw11adjustments"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 711
        },
        "id": "OPB6Pz8sGZNe",
        "outputId": "e9dcb32c-42c2-4eb1-cb9d-2590dab928a4"
      },
      "execution_count": 39,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "<ipython-input-39-2c677dd1fce9>:13: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  gw11adjustments = gw11[['team_h', 'home_adjustment']].append(gw11[['team_a','away_adjustment']].set_axis(['team_h', 'home_adjustment'], axis=1)).reset_index(drop=True)\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                       team  gw11adjustment\n",
              "0                    Fulham        0.849086\n",
              "1                 Brentford        1.083656\n",
              "2                   Burnley        0.853811\n",
              "3                   Everton        0.760288\n",
              "4           Manchester City        1.450519\n",
              "5          Sheffield United        0.965398\n",
              "6          Newcastle United        0.996943\n",
              "7         Nottingham Forest        0.678022\n",
              "8                Luton Town        0.604650\n",
              "9                 Tottenham        0.949417\n",
              "10        Manchester United        1.150914\n",
              "11                 West Ham        0.916344\n",
              "12           Crystal Palace        1.146189\n",
              "13                 Brighton        1.239712\n",
              "14              Bournemouth        0.549481\n",
              "15  Wolverhampton Wanderers        1.034602\n",
              "16                  Arsenal        1.003057\n",
              "17              Aston Villa        1.321978\n",
              "18                Liverpool        1.395350\n",
              "19                  Chelsea        1.050583"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-8721658d-9a6e-47cd-86d6-f959498178f0\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>team</th>\n",
              "      <th>gw11adjustment</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>Fulham</td>\n",
              "      <td>0.849086</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Brentford</td>\n",
              "      <td>1.083656</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>Burnley</td>\n",
              "      <td>0.853811</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>Everton</td>\n",
              "      <td>0.760288</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>Manchester City</td>\n",
              "      <td>1.450519</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>Sheffield United</td>\n",
              "      <td>0.965398</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>Newcastle United</td>\n",
              "      <td>0.996943</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>Nottingham Forest</td>\n",
              "      <td>0.678022</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>Luton Town</td>\n",
              "      <td>0.604650</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>Tottenham</td>\n",
              "      <td>0.949417</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10</th>\n",
              "      <td>Manchester United</td>\n",
              "      <td>1.150914</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>11</th>\n",
              "      <td>West Ham</td>\n",
              "      <td>0.916344</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>12</th>\n",
              "      <td>Crystal Palace</td>\n",
              "      <td>1.146189</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>13</th>\n",
              "      <td>Brighton</td>\n",
              "      <td>1.239712</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>14</th>\n",
              "      <td>Bournemouth</td>\n",
              "      <td>0.549481</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>15</th>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>1.034602</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>16</th>\n",
              "      <td>Arsenal</td>\n",
              "      <td>1.003057</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>17</th>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>1.321978</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>18</th>\n",
              "      <td>Liverpool</td>\n",
              "      <td>1.395350</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>19</th>\n",
              "      <td>Chelsea</td>\n",
              "      <td>1.050583</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-8721658d-9a6e-47cd-86d6-f959498178f0')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-8721658d-9a6e-47cd-86d6-f959498178f0 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-8721658d-9a6e-47cd-86d6-f959498178f0');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-6981dc31-a86b-44d9-b189-1ebffcc07ad7\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-6981dc31-a86b-44d9-b189-1ebffcc07ad7')\"\n",
              "            title=\"Suggest charts.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-6981dc31-a86b-44d9-b189-1ebffcc07ad7 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 39
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "gw7= homesawayspi.query('Event==\"7.0\"')\n",
        "pd.options.mode.chained_assignment = None  # default='warn'\n",
        "PLSPI = spi.query('league==\"Barclays Premier League\"')\n",
        "PLSPI['League Average']  = PLSPI[\"spi\"].mean()\n",
        "laverage = PLSPI[\"spi\"].mean()\n",
        "PLSPI['League Average'].astype(int)\n",
        "gw7['League_Average']  = laverage\n",
        "gw7.rename(columns = {'Home SPI':'HomeSPI', 'Away SPI':'AwaySPI'}, inplace = True)\n",
        "gw7['home_difference'] = gw7.HomeSPI - gw7.League_Average\n",
        "gw7['away_difference'] = gw7.AwaySPI - gw7.League_Average\n",
        "gw7['home_adjustment'] = (gw7.home_difference - gw7.away_difference + gw7.League_Average)/gw7.League_Average\n",
        "gw7['away_adjustment'] = (gw7.away_difference - gw7.home_difference+ gw7.League_Average)/gw7.League_Average\n",
        "gw7adjustments = gw7[['team_h', 'home_adjustment']].append(gw7[['team_a','away_adjustment']].set_axis(['team_h', 'home_adjustment'], axis=1)).reset_index(drop=True)\n",
        "gw7adjustments.rename(columns = {'team_h':'team'}, inplace = True)\n",
        "gw7adjustments.rename(columns = {'home_adjustment':'gw7adjustment'}, inplace = True)\n",
        "gw7adjustments = gw7adjustments.groupby('team', as_index=False)['gw7adjustment'].aggregate('sum')\n",
        "gw7adjustments"
      ],
      "metadata": {
        "id": "Ns7V93Gobs3z",
        "outputId": "8a90ed0b-8c46-487a-8788-c4fa659a0417",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 711
        }
      },
      "execution_count": 41,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "<ipython-input-41-bc3b05104655>:13: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  gw7adjustments = gw7[['team_h', 'home_adjustment']].append(gw7[['team_a','away_adjustment']].set_axis(['team_h', 'home_adjustment'], axis=1)).reset_index(drop=True)\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                       team  gw7adjustment\n",
              "0                   Arsenal       1.338236\n",
              "1               Aston Villa       0.978044\n",
              "2               Bournemouth       0.661764\n",
              "3                 Brentford       1.291962\n",
              "4                  Brighton       1.021956\n",
              "5                   Burnley       1.815179\n",
              "6                   Chelsea       1.105056\n",
              "7            Crystal Palace       0.921903\n",
              "8                   Everton       1.113255\n",
              "9                    Fulham       0.894944\n",
              "10                Liverpool       1.163838\n",
              "11               Luton Town       1.783078\n",
              "12          Manchester City       1.457745\n",
              "13        Manchester United       1.078097\n",
              "14         Newcastle United       1.288488\n",
              "15        Nottingham Forest       0.708038\n",
              "16         Sheffield United       0.797809\n",
              "17                Tottenham       0.836162\n",
              "18                 West Ham       1.202191\n",
              "19  Wolverhampton Wanderers       0.542255"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-6b84e000-8ad3-4ccd-b48f-ea4889d52256\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>team</th>\n",
              "      <th>gw7adjustment</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>Arsenal</td>\n",
              "      <td>1.338236</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>0.978044</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>Bournemouth</td>\n",
              "      <td>0.661764</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>Brentford</td>\n",
              "      <td>1.291962</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>Brighton</td>\n",
              "      <td>1.021956</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>Burnley</td>\n",
              "      <td>1.815179</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>Chelsea</td>\n",
              "      <td>1.105056</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>Crystal Palace</td>\n",
              "      <td>0.921903</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>Everton</td>\n",
              "      <td>1.113255</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>Fulham</td>\n",
              "      <td>0.894944</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10</th>\n",
              "      <td>Liverpool</td>\n",
              "      <td>1.163838</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>11</th>\n",
              "      <td>Luton Town</td>\n",
              "      <td>1.783078</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>12</th>\n",
              "      <td>Manchester City</td>\n",
              "      <td>1.457745</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>13</th>\n",
              "      <td>Manchester United</td>\n",
              "      <td>1.078097</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>14</th>\n",
              "      <td>Newcastle United</td>\n",
              "      <td>1.288488</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>15</th>\n",
              "      <td>Nottingham Forest</td>\n",
              "      <td>0.708038</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>16</th>\n",
              "      <td>Sheffield United</td>\n",
              "      <td>0.797809</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>17</th>\n",
              "      <td>Tottenham</td>\n",
              "      <td>0.836162</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>18</th>\n",
              "      <td>West Ham</td>\n",
              "      <td>1.202191</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>19</th>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>0.542255</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-6b84e000-8ad3-4ccd-b48f-ea4889d52256')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-6b84e000-8ad3-4ccd-b48f-ea4889d52256 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-6b84e000-8ad3-4ccd-b48f-ea4889d52256');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-e18d9462-0542-417a-a695-713ce6a5bb14\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-e18d9462-0542-417a-a695-713ce6a5bb14')\"\n",
              "            title=\"Suggest charts.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-e18d9462-0542-417a-a695-713ce6a5bb14 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 41
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "gw8= homesawayspi.query('Event==\"8.0\"')\n",
        "pd.options.mode.chained_assignment = None  # default='warn'\n",
        "PLSPI = spi.query('league==\"Barclays Premier League\"')\n",
        "PLSPI['League Average']  = PLSPI[\"spi\"].mean()\n",
        "laverage = PLSPI[\"spi\"].mean()\n",
        "PLSPI['League Average'].astype(int)\n",
        "gw8['League_Average']  = laverage\n",
        "gw8.rename(columns = {'Home SPI':'HomeSPI', 'Away SPI':'AwaySPI'}, inplace = True)\n",
        "gw8['home_difference'] = gw8.HomeSPI - gw8.League_Average\n",
        "gw8['away_difference'] = gw8.AwaySPI - gw8.League_Average\n",
        "gw8['home_adjustment'] = (gw8.home_difference - gw8.away_difference + gw8.League_Average)/gw8.League_Average\n",
        "gw8['away_adjustment'] = (gw8.away_difference - gw8.home_difference+ gw8.League_Average)/gw8.League_Average\n",
        "gw8adjustments = gw8[['team_h', 'home_adjustment']].append(gw8[['team_a','away_adjustment']].set_axis(['team_h', 'home_adjustment'], axis=1)).reset_index(drop=True)\n",
        "gw8adjustments.rename(columns = {'team_h':'team'}, inplace = True)\n",
        "gw8adjustments.rename(columns = {'home_adjustment':'gw8adjustment'}, inplace = True)\n",
        "gw8adjustments"
      ],
      "metadata": {
        "id": "wlvV4OeQb34Z",
        "outputId": "97b70642-87c9-40dd-a01c-37df5cdd330a",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 711
        }
      },
      "execution_count": 42,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "<ipython-input-42-5ca60b495158>:13: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  gw8adjustments = gw8[['team_h', 'home_adjustment']].append(gw8[['team_a','away_adjustment']].set_axis(['team_h', 'home_adjustment'], axis=1)).reset_index(drop=True)\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                       team  gw8adjustment\n",
              "0                Luton Town       0.768487\n",
              "1                   Burnley       0.821571\n",
              "2                   Everton       1.056280\n",
              "3                    Fulham       1.161892\n",
              "4         Manchester United       1.026959\n",
              "5            Crystal Palace       1.240823\n",
              "6                  Brighton       0.957616\n",
              "7                  West Ham       0.825184\n",
              "8   Wolverhampton Wanderers       0.718738\n",
              "9                   Arsenal       0.887718\n",
              "10                Tottenham       1.231513\n",
              "11                  Chelsea       1.178429\n",
              "12              Bournemouth       0.943720\n",
              "13         Sheffield United       0.838108\n",
              "14                Brentford       0.973041\n",
              "15        Nottingham Forest       0.759177\n",
              "16                Liverpool       1.042384\n",
              "17         Newcastle United       1.174816\n",
              "18              Aston Villa       1.281262\n",
              "19          Manchester City       1.112282"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-9f8bb5e6-81b9-4707-847e-3bfa39f5d84c\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>team</th>\n",
              "      <th>gw8adjustment</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>Luton Town</td>\n",
              "      <td>0.768487</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Burnley</td>\n",
              "      <td>0.821571</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>Everton</td>\n",
              "      <td>1.056280</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>Fulham</td>\n",
              "      <td>1.161892</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>Manchester United</td>\n",
              "      <td>1.026959</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>Crystal Palace</td>\n",
              "      <td>1.240823</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>Brighton</td>\n",
              "      <td>0.957616</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>West Ham</td>\n",
              "      <td>0.825184</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>0.718738</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>Arsenal</td>\n",
              "      <td>0.887718</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10</th>\n",
              "      <td>Tottenham</td>\n",
              "      <td>1.231513</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>11</th>\n",
              "      <td>Chelsea</td>\n",
              "      <td>1.178429</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>12</th>\n",
              "      <td>Bournemouth</td>\n",
              "      <td>0.943720</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>13</th>\n",
              "      <td>Sheffield United</td>\n",
              "      <td>0.838108</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>14</th>\n",
              "      <td>Brentford</td>\n",
              "      <td>0.973041</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>15</th>\n",
              "      <td>Nottingham Forest</td>\n",
              "      <td>0.759177</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>16</th>\n",
              "      <td>Liverpool</td>\n",
              "      <td>1.042384</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>17</th>\n",
              "      <td>Newcastle United</td>\n",
              "      <td>1.174816</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>18</th>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>1.281262</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>19</th>\n",
              "      <td>Manchester City</td>\n",
              "      <td>1.112282</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-9f8bb5e6-81b9-4707-847e-3bfa39f5d84c')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-9f8bb5e6-81b9-4707-847e-3bfa39f5d84c button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-9f8bb5e6-81b9-4707-847e-3bfa39f5d84c');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-f5560839-19f4-44fa-9aba-d1373d5f4e5b\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-f5560839-19f4-44fa-9aba-d1373d5f4e5b')\"\n",
              "            title=\"Suggest charts.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-f5560839-19f4-44fa-9aba-d1373d5f4e5b button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 42
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "gwadjustments711 = pd.merge(gw7adjustments,gw8adjustments, on ='team')\n",
        "gwadjustments711 = pd.merge(gwadjustments711,gw9adjustments, on ='team')\n",
        "gwadjustments711 = pd.merge(gwadjustments711,gw10adjustments, on ='team')\n",
        "gwadjustments711 = pd.merge(gwadjustments711,gw11adjustments, on ='team')\n",
        "gwadjustments711"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 677
        },
        "id": "P6_WVsnNkztJ",
        "outputId": "5f7db1e9-b69c-4843-d705-fd18fe91a18f"
      },
      "execution_count": 50,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                       team  gw7adjustment  gw8adjustment  gw9adjustment  \\\n",
              "0                   Arsenal       1.338236       0.887718       1.113116   \n",
              "1               Aston Villa       0.978044       1.281262       1.113672   \n",
              "2               Bournemouth       0.661764       0.943720       1.007226   \n",
              "3                 Brentford       1.291962       0.973041       1.197328   \n",
              "4                  Brighton       1.021956       0.957616       0.845473   \n",
              "5                   Burnley       1.815179       0.821571       0.802672   \n",
              "6                   Chelsea       1.105056       1.178429       0.886884   \n",
              "7            Crystal Palace       0.921903       1.240823       0.857702   \n",
              "8                   Everton       1.113255       1.056280       0.717905   \n",
              "9                    Fulham       0.894944       1.161892       0.945526   \n",
              "10                Liverpool       1.163838       1.042384       1.282095   \n",
              "11               Luton Town       1.783078       0.768487       0.990967   \n",
              "12          Manchester City       1.457745       1.112282       1.154527   \n",
              "13        Manchester United       1.078097       1.026959       1.312806   \n",
              "14         Newcastle United       1.288488       1.174816       1.142298   \n",
              "15        Nottingham Forest       0.708038       0.759177       1.009033   \n",
              "16         Sheffield United       0.797809       0.838108       0.687194   \n",
              "17                Tottenham       0.836162       1.231513       1.054474   \n",
              "18                 West Ham       1.202191       0.825184       0.886328   \n",
              "19  Wolverhampton Wanderers       0.542255       0.718738       0.992774   \n",
              "\n",
              "    gw10adjustment  gw11adjustment  \n",
              "0         1.380064        1.003057  \n",
              "1         1.331010        1.321978  \n",
              "2         0.953308        0.549481  \n",
              "3         1.018899        1.083656  \n",
              "4         1.175927        1.239712  \n",
              "5         1.046692        0.853811  \n",
              "6         0.981101        1.050583  \n",
              "7         1.018343        1.146189  \n",
              "8         0.895917        0.760288  \n",
              "9         0.824073        0.849086  \n",
              "10        1.386318        1.395350  \n",
              "11        0.668990        0.604650  \n",
              "12        1.179540        1.450519  \n",
              "13        0.820460        1.150914  \n",
              "14        1.342405        0.996943  \n",
              "15        0.613682        0.678022  \n",
              "16        0.619936        0.965398  \n",
              "17        0.981657        0.949417  \n",
              "18        1.104083        0.916344  \n",
              "19        0.657595        1.034602  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-064d3907-76bc-4942-8dd0-dadcd375b794\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>team</th>\n",
              "      <th>gw7adjustment</th>\n",
              "      <th>gw8adjustment</th>\n",
              "      <th>gw9adjustment</th>\n",
              "      <th>gw10adjustment</th>\n",
              "      <th>gw11adjustment</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>Arsenal</td>\n",
              "      <td>1.338236</td>\n",
              "      <td>0.887718</td>\n",
              "      <td>1.113116</td>\n",
              "      <td>1.380064</td>\n",
              "      <td>1.003057</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>0.978044</td>\n",
              "      <td>1.281262</td>\n",
              "      <td>1.113672</td>\n",
              "      <td>1.331010</td>\n",
              "      <td>1.321978</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>Bournemouth</td>\n",
              "      <td>0.661764</td>\n",
              "      <td>0.943720</td>\n",
              "      <td>1.007226</td>\n",
              "      <td>0.953308</td>\n",
              "      <td>0.549481</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>Brentford</td>\n",
              "      <td>1.291962</td>\n",
              "      <td>0.973041</td>\n",
              "      <td>1.197328</td>\n",
              "      <td>1.018899</td>\n",
              "      <td>1.083656</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>Brighton</td>\n",
              "      <td>1.021956</td>\n",
              "      <td>0.957616</td>\n",
              "      <td>0.845473</td>\n",
              "      <td>1.175927</td>\n",
              "      <td>1.239712</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>Burnley</td>\n",
              "      <td>1.815179</td>\n",
              "      <td>0.821571</td>\n",
              "      <td>0.802672</td>\n",
              "      <td>1.046692</td>\n",
              "      <td>0.853811</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>Chelsea</td>\n",
              "      <td>1.105056</td>\n",
              "      <td>1.178429</td>\n",
              "      <td>0.886884</td>\n",
              "      <td>0.981101</td>\n",
              "      <td>1.050583</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>Crystal Palace</td>\n",
              "      <td>0.921903</td>\n",
              "      <td>1.240823</td>\n",
              "      <td>0.857702</td>\n",
              "      <td>1.018343</td>\n",
              "      <td>1.146189</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>Everton</td>\n",
              "      <td>1.113255</td>\n",
              "      <td>1.056280</td>\n",
              "      <td>0.717905</td>\n",
              "      <td>0.895917</td>\n",
              "      <td>0.760288</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>Fulham</td>\n",
              "      <td>0.894944</td>\n",
              "      <td>1.161892</td>\n",
              "      <td>0.945526</td>\n",
              "      <td>0.824073</td>\n",
              "      <td>0.849086</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10</th>\n",
              "      <td>Liverpool</td>\n",
              "      <td>1.163838</td>\n",
              "      <td>1.042384</td>\n",
              "      <td>1.282095</td>\n",
              "      <td>1.386318</td>\n",
              "      <td>1.395350</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>11</th>\n",
              "      <td>Luton Town</td>\n",
              "      <td>1.783078</td>\n",
              "      <td>0.768487</td>\n",
              "      <td>0.990967</td>\n",
              "      <td>0.668990</td>\n",
              "      <td>0.604650</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>12</th>\n",
              "      <td>Manchester City</td>\n",
              "      <td>1.457745</td>\n",
              "      <td>1.112282</td>\n",
              "      <td>1.154527</td>\n",
              "      <td>1.179540</td>\n",
              "      <td>1.450519</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>13</th>\n",
              "      <td>Manchester United</td>\n",
              "      <td>1.078097</td>\n",
              "      <td>1.026959</td>\n",
              "      <td>1.312806</td>\n",
              "      <td>0.820460</td>\n",
              "      <td>1.150914</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>14</th>\n",
              "      <td>Newcastle United</td>\n",
              "      <td>1.288488</td>\n",
              "      <td>1.174816</td>\n",
              "      <td>1.142298</td>\n",
              "      <td>1.342405</td>\n",
              "      <td>0.996943</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>15</th>\n",
              "      <td>Nottingham Forest</td>\n",
              "      <td>0.708038</td>\n",
              "      <td>0.759177</td>\n",
              "      <td>1.009033</td>\n",
              "      <td>0.613682</td>\n",
              "      <td>0.678022</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>16</th>\n",
              "      <td>Sheffield United</td>\n",
              "      <td>0.797809</td>\n",
              "      <td>0.838108</td>\n",
              "      <td>0.687194</td>\n",
              "      <td>0.619936</td>\n",
              "      <td>0.965398</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>17</th>\n",
              "      <td>Tottenham</td>\n",
              "      <td>0.836162</td>\n",
              "      <td>1.231513</td>\n",
              "      <td>1.054474</td>\n",
              "      <td>0.981657</td>\n",
              "      <td>0.949417</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>18</th>\n",
              "      <td>West Ham</td>\n",
              "      <td>1.202191</td>\n",
              "      <td>0.825184</td>\n",
              "      <td>0.886328</td>\n",
              "      <td>1.104083</td>\n",
              "      <td>0.916344</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>19</th>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>0.542255</td>\n",
              "      <td>0.718738</td>\n",
              "      <td>0.992774</td>\n",
              "      <td>0.657595</td>\n",
              "      <td>1.034602</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-064d3907-76bc-4942-8dd0-dadcd375b794')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-064d3907-76bc-4942-8dd0-dadcd375b794 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-064d3907-76bc-4942-8dd0-dadcd375b794');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-3bd78c2d-a65c-4e20-801e-10b8297d8da9\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-3bd78c2d-a65c-4e20-801e-10b8297d8da9')\"\n",
              "            title=\"Suggest charts.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-3bd78c2d-a65c-4e20-801e-10b8297d8da9 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 50
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "rawdfgw228x = pd.merge(rawallplayersallgw,\n",
        "                     gwadjustments711,\n",
        "                     on ='team',\n",
        "                     how ='left')\n",
        "#rawdfgw228x.rename(columns = {'gw3adjustment_y':'gw3adjustment'}, inplace = True)\n",
        "rawdfgw228x = rawdfgw228x.round(1)\n",
        "rawdfgw228x"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 513
        },
        "id": "-b-0jux2PKIX",
        "outputId": "e5c1cae2-9889-4a07-eebe-6f34774e021b"
      },
      "execution_count": 51,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "      id                     team pos     name  cost  selected_by_percent  \\\n",
              "0      1                  Arsenal   F  Balogun   4.4                  0.3   \n",
              "1      8                  Arsenal   F  G.Jesus   7.9                  3.5   \n",
              "2     13                  Arsenal   F  Nketiah   5.5                  5.6   \n",
              "3     39              Aston Villa   F    Davis   4.9                  0.2   \n",
              "4     44              Aston Villa   F    Duran   5.0                  0.3   \n",
              "..   ...                      ...  ..      ...   ...                  ...   \n",
              "795  647                 West Ham   G    Anang   4.0                  0.0   \n",
              "796  546  Wolverhampton Wanderers   G  Bentley   4.0                  0.4   \n",
              "797  564  Wolverhampton Wanderers   G     King   4.0                  0.8   \n",
              "798  569  Wolverhampton Wanderers   G  José Sá   5.0                  1.7   \n",
              "799  571  Wolverhampton Wanderers   G   Šarkić   4.0                  0.4   \n",
              "\n",
              "     goals_scored  assists  bps  ict_index  ...  points_per_game  minutes  \\\n",
              "0               0        0    0        0.0  ...              0.0        0   \n",
              "1               1        0   26       15.5  ...              2.5      115   \n",
              "2               2        1   67       27.6  ...              3.8      425   \n",
              "3               0        0    0        0.0  ...              0.0        0   \n",
              "4               2        0   56       13.6  ...              3.0       57   \n",
              "..            ...      ...  ...        ...  ...              ...      ...   \n",
              "795             0        0    0        0.0  ...              0.0        0   \n",
              "796             0        0    0        0.0  ...              0.0        0   \n",
              "797             0        0    0        0.0  ...              0.0        0   \n",
              "798             0        0  125       20.7  ...              3.7      540   \n",
              "799             0        0    0        0.0  ...              0.0        0   \n",
              "\n",
              "     home_adjustment  xPallgw  xCSP  gw7adjustment  gw8adjustment  \\\n",
              "0                1.2      2.0   NaN            1.3            0.9   \n",
              "1                1.2      2.9   NaN            1.3            0.9   \n",
              "2                1.2      3.2   NaN            1.3            0.9   \n",
              "3                1.1      2.0   NaN            1.0            1.3   \n",
              "4                1.1      2.5   NaN            1.0            1.3   \n",
              "..               ...      ...   ...            ...            ...   \n",
              "795              1.0     -2.9  -4.9            1.2            0.8   \n",
              "796              0.8     -2.3  -4.3            0.5            0.7   \n",
              "797              0.8     -2.3  -4.3            0.5            0.7   \n",
              "798              0.8     -2.3  -4.3            0.5            0.7   \n",
              "799              0.8     -2.3  -4.3            0.5            0.7   \n",
              "\n",
              "     gw9adjustment  gw10adjustment  gw11adjustment  \n",
              "0              1.1             1.4             1.0  \n",
              "1              1.1             1.4             1.0  \n",
              "2              1.1             1.4             1.0  \n",
              "3              1.1             1.3             1.3  \n",
              "4              1.1             1.3             1.3  \n",
              "..             ...             ...             ...  \n",
              "795            0.9             1.1             0.9  \n",
              "796            1.0             0.7             1.0  \n",
              "797            1.0             0.7             1.0  \n",
              "798            1.0             0.7             1.0  \n",
              "799            1.0             0.7             1.0  \n",
              "\n",
              "[800 rows x 21 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-ce2bc07a-b6e9-4e7e-8806-898c684d68d1\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>team</th>\n",
              "      <th>pos</th>\n",
              "      <th>name</th>\n",
              "      <th>cost</th>\n",
              "      <th>selected_by_percent</th>\n",
              "      <th>goals_scored</th>\n",
              "      <th>assists</th>\n",
              "      <th>bps</th>\n",
              "      <th>ict_index</th>\n",
              "      <th>...</th>\n",
              "      <th>points_per_game</th>\n",
              "      <th>minutes</th>\n",
              "      <th>home_adjustment</th>\n",
              "      <th>xPallgw</th>\n",
              "      <th>xCSP</th>\n",
              "      <th>gw7adjustment</th>\n",
              "      <th>gw8adjustment</th>\n",
              "      <th>gw9adjustment</th>\n",
              "      <th>gw10adjustment</th>\n",
              "      <th>gw11adjustment</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>1</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>F</td>\n",
              "      <td>Balogun</td>\n",
              "      <td>4.4</td>\n",
              "      <td>0.3</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>1.2</td>\n",
              "      <td>2.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1.3</td>\n",
              "      <td>0.9</td>\n",
              "      <td>1.1</td>\n",
              "      <td>1.4</td>\n",
              "      <td>1.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>8</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>F</td>\n",
              "      <td>G.Jesus</td>\n",
              "      <td>7.9</td>\n",
              "      <td>3.5</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>26</td>\n",
              "      <td>15.5</td>\n",
              "      <td>...</td>\n",
              "      <td>2.5</td>\n",
              "      <td>115</td>\n",
              "      <td>1.2</td>\n",
              "      <td>2.9</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1.3</td>\n",
              "      <td>0.9</td>\n",
              "      <td>1.1</td>\n",
              "      <td>1.4</td>\n",
              "      <td>1.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>13</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>F</td>\n",
              "      <td>Nketiah</td>\n",
              "      <td>5.5</td>\n",
              "      <td>5.6</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>67</td>\n",
              "      <td>27.6</td>\n",
              "      <td>...</td>\n",
              "      <td>3.8</td>\n",
              "      <td>425</td>\n",
              "      <td>1.2</td>\n",
              "      <td>3.2</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1.3</td>\n",
              "      <td>0.9</td>\n",
              "      <td>1.1</td>\n",
              "      <td>1.4</td>\n",
              "      <td>1.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>39</td>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>F</td>\n",
              "      <td>Davis</td>\n",
              "      <td>4.9</td>\n",
              "      <td>0.2</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>1.1</td>\n",
              "      <td>2.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1.0</td>\n",
              "      <td>1.3</td>\n",
              "      <td>1.1</td>\n",
              "      <td>1.3</td>\n",
              "      <td>1.3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>44</td>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>F</td>\n",
              "      <td>Duran</td>\n",
              "      <td>5.0</td>\n",
              "      <td>0.3</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>56</td>\n",
              "      <td>13.6</td>\n",
              "      <td>...</td>\n",
              "      <td>3.0</td>\n",
              "      <td>57</td>\n",
              "      <td>1.1</td>\n",
              "      <td>2.5</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1.0</td>\n",
              "      <td>1.3</td>\n",
              "      <td>1.1</td>\n",
              "      <td>1.3</td>\n",
              "      <td>1.3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>795</th>\n",
              "      <td>647</td>\n",
              "      <td>West Ham</td>\n",
              "      <td>G</td>\n",
              "      <td>Anang</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>-2.9</td>\n",
              "      <td>-4.9</td>\n",
              "      <td>1.2</td>\n",
              "      <td>0.8</td>\n",
              "      <td>0.9</td>\n",
              "      <td>1.1</td>\n",
              "      <td>0.9</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>796</th>\n",
              "      <td>546</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>G</td>\n",
              "      <td>Bentley</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.4</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.8</td>\n",
              "      <td>-2.3</td>\n",
              "      <td>-4.3</td>\n",
              "      <td>0.5</td>\n",
              "      <td>0.7</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.7</td>\n",
              "      <td>1.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>797</th>\n",
              "      <td>564</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>G</td>\n",
              "      <td>King</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.8</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.8</td>\n",
              "      <td>-2.3</td>\n",
              "      <td>-4.3</td>\n",
              "      <td>0.5</td>\n",
              "      <td>0.7</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.7</td>\n",
              "      <td>1.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>798</th>\n",
              "      <td>569</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>G</td>\n",
              "      <td>José Sá</td>\n",
              "      <td>5.0</td>\n",
              "      <td>1.7</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>125</td>\n",
              "      <td>20.7</td>\n",
              "      <td>...</td>\n",
              "      <td>3.7</td>\n",
              "      <td>540</td>\n",
              "      <td>0.8</td>\n",
              "      <td>-2.3</td>\n",
              "      <td>-4.3</td>\n",
              "      <td>0.5</td>\n",
              "      <td>0.7</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.7</td>\n",
              "      <td>1.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>799</th>\n",
              "      <td>571</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>G</td>\n",
              "      <td>Šarkić</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.4</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.8</td>\n",
              "      <td>-2.3</td>\n",
              "      <td>-4.3</td>\n",
              "      <td>0.5</td>\n",
              "      <td>0.7</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.7</td>\n",
              "      <td>1.0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>800 rows × 21 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-ce2bc07a-b6e9-4e7e-8806-898c684d68d1')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-ce2bc07a-b6e9-4e7e-8806-898c684d68d1 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-ce2bc07a-b6e9-4e7e-8806-898c684d68d1');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-4c6e599b-4f82-441d-b0ee-040e150be8f3\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-4c6e599b-4f82-441d-b0ee-040e150be8f3')\"\n",
              "            title=\"Suggest charts.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-4c6e599b-4f82-441d-b0ee-040e150be8f3 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 51
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "gw3adjustments = gw3adjustments.groupby('team', as_index=False)['gw3adjustment'].aggregate('sum')\n",
        "gw3adjustments"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 677
        },
        "id": "6x3Lj7jPTCVC",
        "outputId": "300ff8c5-d4fa-4ab6-ac5c-a61b4a2d4d63"
      },
      "execution_count": 46,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                       team  gw3adjustment\n",
              "0                   Arsenal       1.218172\n",
              "1               Aston Villa       1.227344\n",
              "2               Bournemouth       0.825462\n",
              "3                 Brentford       1.051138\n",
              "4                  Brighton       1.135628\n",
              "5                   Burnley       0.772656\n",
              "6                   Chelsea       1.282095\n",
              "7            Crystal Palace       0.948862\n",
              "8                   Everton       1.063506\n",
              "9                    Fulham       0.781828\n",
              "10                Liverpool       1.003196\n",
              "11               Luton Town       0.717905\n",
              "12          Manchester City       1.492347\n",
              "13        Manchester United       1.318921\n",
              "14         Newcastle United       0.996804\n",
              "15        Nottingham Forest       0.681079\n",
              "16         Sheffield United       0.507653\n",
              "17                Tottenham       1.174538\n",
              "18                 West Ham       0.864372\n",
              "19  Wolverhampton Wanderers       0.936494"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-06410898-9747-4d1d-a0cc-6b126fb69ce1\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>team</th>\n",
              "      <th>gw3adjustment</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>Arsenal</td>\n",
              "      <td>1.218172</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>1.227344</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>Bournemouth</td>\n",
              "      <td>0.825462</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>Brentford</td>\n",
              "      <td>1.051138</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>Brighton</td>\n",
              "      <td>1.135628</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>Burnley</td>\n",
              "      <td>0.772656</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>Chelsea</td>\n",
              "      <td>1.282095</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>Crystal Palace</td>\n",
              "      <td>0.948862</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>Everton</td>\n",
              "      <td>1.063506</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>Fulham</td>\n",
              "      <td>0.781828</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10</th>\n",
              "      <td>Liverpool</td>\n",
              "      <td>1.003196</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>11</th>\n",
              "      <td>Luton Town</td>\n",
              "      <td>0.717905</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>12</th>\n",
              "      <td>Manchester City</td>\n",
              "      <td>1.492347</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>13</th>\n",
              "      <td>Manchester United</td>\n",
              "      <td>1.318921</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>14</th>\n",
              "      <td>Newcastle United</td>\n",
              "      <td>0.996804</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>15</th>\n",
              "      <td>Nottingham Forest</td>\n",
              "      <td>0.681079</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>16</th>\n",
              "      <td>Sheffield United</td>\n",
              "      <td>0.507653</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>17</th>\n",
              "      <td>Tottenham</td>\n",
              "      <td>1.174538</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>18</th>\n",
              "      <td>West Ham</td>\n",
              "      <td>0.864372</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>19</th>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>0.936494</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-06410898-9747-4d1d-a0cc-6b126fb69ce1')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-06410898-9747-4d1d-a0cc-6b126fb69ce1 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-06410898-9747-4d1d-a0cc-6b126fb69ce1');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-8b4479eb-ceaa-4c19-b6f9-4f53c07cd10a\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-8b4479eb-ceaa-4c19-b6f9-4f53c07cd10a')\"\n",
              "            title=\"Suggest charts.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-8b4479eb-ceaa-4c19-b6f9-4f53c07cd10a button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 46
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "rawdfgw228x['gw7'] = (((rawdfgw228x.xPallgw - 2)*rawdfgw228x.gw7adjustment)+2)\n",
        "rawdfgw228x['gw9'] = (((rawdfgw228x.xPallgw - 2)*rawdfgw228x.gw9adjustment)+2)\n",
        "rawdfgw228x['gw8'] = (((rawdfgw228x.xPallgw - 2)*rawdfgw228x.gw8adjustment)+2)\n",
        "rawdfgw228x['gw10'] = (((rawdfgw228x.xPallgw - 2)*rawdfgw228x.gw10adjustment)+2)\n",
        "rawdfgw228x['gw11'] = (((rawdfgw228x.xPallgw - 2)*rawdfgw228x.gw11adjustment)+2)\n",
        "rawdfgw228x['5GW Total'] = rawdfgw228x.gw7 + rawdfgw228x.gw10 + rawdfgw228x.gw11 + rawdfgw228x.gw9 + rawdfgw228x.gw8\n",
        "rawdfgw228x = rawdfgw228x.drop(columns=[\n",
        "  'gw10adjustment',\n",
        "  'gw11adjustment',\n",
        "  'gw7adjustment',\n",
        "  'gw9adjustment',\n",
        "  'gw8adjustment'\n",
        "  ])\n",
        "rawdfgw228x"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 424
        },
        "id": "Dgw1xB0YUN9D",
        "outputId": "c4127aaa-fcb4-4956-ea76-fac111cf1373"
      },
      "execution_count": 52,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "      id                     team pos     name  cost  selected_by_percent  \\\n",
              "0      1                  Arsenal   F  Balogun   4.4                  0.3   \n",
              "1      8                  Arsenal   F  G.Jesus   7.9                  3.5   \n",
              "2     13                  Arsenal   F  Nketiah   5.5                  5.6   \n",
              "3     39              Aston Villa   F    Davis   4.9                  0.2   \n",
              "4     44              Aston Villa   F    Duran   5.0                  0.3   \n",
              "..   ...                      ...  ..      ...   ...                  ...   \n",
              "795  647                 West Ham   G    Anang   4.0                  0.0   \n",
              "796  546  Wolverhampton Wanderers   G  Bentley   4.0                  0.4   \n",
              "797  564  Wolverhampton Wanderers   G     King   4.0                  0.8   \n",
              "798  569  Wolverhampton Wanderers   G  José Sá   5.0                  1.7   \n",
              "799  571  Wolverhampton Wanderers   G   Šarkić   4.0                  0.4   \n",
              "\n",
              "     goals_scored  assists  bps  ict_index  ...  minutes  home_adjustment  \\\n",
              "0               0        0    0        0.0  ...        0              1.2   \n",
              "1               1        0   26       15.5  ...      115              1.2   \n",
              "2               2        1   67       27.6  ...      425              1.2   \n",
              "3               0        0    0        0.0  ...        0              1.1   \n",
              "4               2        0   56       13.6  ...       57              1.1   \n",
              "..            ...      ...  ...        ...  ...      ...              ...   \n",
              "795             0        0    0        0.0  ...        0              1.0   \n",
              "796             0        0    0        0.0  ...        0              0.8   \n",
              "797             0        0    0        0.0  ...        0              0.8   \n",
              "798             0        0  125       20.7  ...      540              0.8   \n",
              "799             0        0    0        0.0  ...        0              0.8   \n",
              "\n",
              "     xPallgw  xCSP   gw7   gw9   gw8  gw10  gw11  5GW Total  \n",
              "0        2.0   NaN  2.00  2.00  2.00  2.00  2.00      10.00  \n",
              "1        2.9   NaN  3.17  2.99  2.81  3.26  2.90      15.13  \n",
              "2        3.2   NaN  3.56  3.32  3.08  3.68  3.20      16.84  \n",
              "3        2.0   NaN  2.00  2.00  2.00  2.00  2.00      10.00  \n",
              "4        2.5   NaN  2.50  2.55  2.65  2.65  2.65      13.00  \n",
              "..       ...   ...   ...   ...   ...   ...   ...        ...  \n",
              "795     -2.9  -4.9 -3.88 -2.41 -1.92 -3.39 -2.41     -14.01  \n",
              "796     -2.3  -4.3 -0.15 -2.30 -1.01 -1.01 -2.30      -6.77  \n",
              "797     -2.3  -4.3 -0.15 -2.30 -1.01 -1.01 -2.30      -6.77  \n",
              "798     -2.3  -4.3 -0.15 -2.30 -1.01 -1.01 -2.30      -6.77  \n",
              "799     -2.3  -4.3 -0.15 -2.30 -1.01 -1.01 -2.30      -6.77  \n",
              "\n",
              "[800 rows x 22 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-d2e68461-7e74-4c86-afe1-ae66a088b01c\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>team</th>\n",
              "      <th>pos</th>\n",
              "      <th>name</th>\n",
              "      <th>cost</th>\n",
              "      <th>selected_by_percent</th>\n",
              "      <th>goals_scored</th>\n",
              "      <th>assists</th>\n",
              "      <th>bps</th>\n",
              "      <th>ict_index</th>\n",
              "      <th>...</th>\n",
              "      <th>minutes</th>\n",
              "      <th>home_adjustment</th>\n",
              "      <th>xPallgw</th>\n",
              "      <th>xCSP</th>\n",
              "      <th>gw7</th>\n",
              "      <th>gw9</th>\n",
              "      <th>gw8</th>\n",
              "      <th>gw10</th>\n",
              "      <th>gw11</th>\n",
              "      <th>5GW Total</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>1</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>F</td>\n",
              "      <td>Balogun</td>\n",
              "      <td>4.4</td>\n",
              "      <td>0.3</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>1.2</td>\n",
              "      <td>2.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>10.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>8</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>F</td>\n",
              "      <td>G.Jesus</td>\n",
              "      <td>7.9</td>\n",
              "      <td>3.5</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>26</td>\n",
              "      <td>15.5</td>\n",
              "      <td>...</td>\n",
              "      <td>115</td>\n",
              "      <td>1.2</td>\n",
              "      <td>2.9</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.17</td>\n",
              "      <td>2.99</td>\n",
              "      <td>2.81</td>\n",
              "      <td>3.26</td>\n",
              "      <td>2.90</td>\n",
              "      <td>15.13</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>13</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>F</td>\n",
              "      <td>Nketiah</td>\n",
              "      <td>5.5</td>\n",
              "      <td>5.6</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>67</td>\n",
              "      <td>27.6</td>\n",
              "      <td>...</td>\n",
              "      <td>425</td>\n",
              "      <td>1.2</td>\n",
              "      <td>3.2</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.56</td>\n",
              "      <td>3.32</td>\n",
              "      <td>3.08</td>\n",
              "      <td>3.68</td>\n",
              "      <td>3.20</td>\n",
              "      <td>16.84</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>39</td>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>F</td>\n",
              "      <td>Davis</td>\n",
              "      <td>4.9</td>\n",
              "      <td>0.2</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>1.1</td>\n",
              "      <td>2.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>10.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>44</td>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>F</td>\n",
              "      <td>Duran</td>\n",
              "      <td>5.0</td>\n",
              "      <td>0.3</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>56</td>\n",
              "      <td>13.6</td>\n",
              "      <td>...</td>\n",
              "      <td>57</td>\n",
              "      <td>1.1</td>\n",
              "      <td>2.5</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2.50</td>\n",
              "      <td>2.55</td>\n",
              "      <td>2.65</td>\n",
              "      <td>2.65</td>\n",
              "      <td>2.65</td>\n",
              "      <td>13.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>795</th>\n",
              "      <td>647</td>\n",
              "      <td>West Ham</td>\n",
              "      <td>G</td>\n",
              "      <td>Anang</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>-2.9</td>\n",
              "      <td>-4.9</td>\n",
              "      <td>-3.88</td>\n",
              "      <td>-2.41</td>\n",
              "      <td>-1.92</td>\n",
              "      <td>-3.39</td>\n",
              "      <td>-2.41</td>\n",
              "      <td>-14.01</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>796</th>\n",
              "      <td>546</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>G</td>\n",
              "      <td>Bentley</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.4</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0.8</td>\n",
              "      <td>-2.3</td>\n",
              "      <td>-4.3</td>\n",
              "      <td>-0.15</td>\n",
              "      <td>-2.30</td>\n",
              "      <td>-1.01</td>\n",
              "      <td>-1.01</td>\n",
              "      <td>-2.30</td>\n",
              "      <td>-6.77</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>797</th>\n",
              "      <td>564</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>G</td>\n",
              "      <td>King</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.8</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0.8</td>\n",
              "      <td>-2.3</td>\n",
              "      <td>-4.3</td>\n",
              "      <td>-0.15</td>\n",
              "      <td>-2.30</td>\n",
              "      <td>-1.01</td>\n",
              "      <td>-1.01</td>\n",
              "      <td>-2.30</td>\n",
              "      <td>-6.77</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>798</th>\n",
              "      <td>569</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>G</td>\n",
              "      <td>José Sá</td>\n",
              "      <td>5.0</td>\n",
              "      <td>1.7</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>125</td>\n",
              "      <td>20.7</td>\n",
              "      <td>...</td>\n",
              "      <td>540</td>\n",
              "      <td>0.8</td>\n",
              "      <td>-2.3</td>\n",
              "      <td>-4.3</td>\n",
              "      <td>-0.15</td>\n",
              "      <td>-2.30</td>\n",
              "      <td>-1.01</td>\n",
              "      <td>-1.01</td>\n",
              "      <td>-2.30</td>\n",
              "      <td>-6.77</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>799</th>\n",
              "      <td>571</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>G</td>\n",
              "      <td>Šarkić</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.4</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0.8</td>\n",
              "      <td>-2.3</td>\n",
              "      <td>-4.3</td>\n",
              "      <td>-0.15</td>\n",
              "      <td>-2.30</td>\n",
              "      <td>-1.01</td>\n",
              "      <td>-1.01</td>\n",
              "      <td>-2.30</td>\n",
              "      <td>-6.77</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>800 rows × 22 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-d2e68461-7e74-4c86-afe1-ae66a088b01c')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-d2e68461-7e74-4c86-afe1-ae66a088b01c button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-d2e68461-7e74-4c86-afe1-ae66a088b01c');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-267cdf8e-d5a5-42ae-a60a-64cccd6ce192\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-267cdf8e-d5a5-42ae-a60a-64cccd6ce192')\"\n",
              "            title=\"Suggest charts.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-267cdf8e-d5a5-42ae-a60a-64cccd6ce192 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 52
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "rawdfgw228x.drop_duplicates(subset='name', keep='last', inplace=True)\n",
        "rawdfgw228x"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 424
        },
        "id": "Jud88GRHgLWf",
        "outputId": "12b8ff1f-9519-478a-c92a-6bdeae30cd7a"
      },
      "execution_count": 53,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "      id                     team pos     name  cost  selected_by_percent  \\\n",
              "0      1                  Arsenal   F  Balogun   4.4                  0.3   \n",
              "1      8                  Arsenal   F  G.Jesus   7.9                  3.5   \n",
              "2     13                  Arsenal   F  Nketiah   5.5                  5.6   \n",
              "3     39              Aston Villa   F    Davis   4.9                  0.2   \n",
              "4     44              Aston Villa   F    Duran   5.0                  0.3   \n",
              "..   ...                      ...  ..      ...   ...                  ...   \n",
              "795  647                 West Ham   G    Anang   4.0                  0.0   \n",
              "796  546  Wolverhampton Wanderers   G  Bentley   4.0                  0.4   \n",
              "797  564  Wolverhampton Wanderers   G     King   4.0                  0.8   \n",
              "798  569  Wolverhampton Wanderers   G  José Sá   5.0                  1.7   \n",
              "799  571  Wolverhampton Wanderers   G   Šarkić   4.0                  0.4   \n",
              "\n",
              "     goals_scored  assists  bps  ict_index  ...  minutes  home_adjustment  \\\n",
              "0               0        0    0        0.0  ...        0              1.2   \n",
              "1               1        0   26       15.5  ...      115              1.2   \n",
              "2               2        1   67       27.6  ...      425              1.2   \n",
              "3               0        0    0        0.0  ...        0              1.1   \n",
              "4               2        0   56       13.6  ...       57              1.1   \n",
              "..            ...      ...  ...        ...  ...      ...              ...   \n",
              "795             0        0    0        0.0  ...        0              1.0   \n",
              "796             0        0    0        0.0  ...        0              0.8   \n",
              "797             0        0    0        0.0  ...        0              0.8   \n",
              "798             0        0  125       20.7  ...      540              0.8   \n",
              "799             0        0    0        0.0  ...        0              0.8   \n",
              "\n",
              "     xPallgw  xCSP   gw7   gw9   gw8  gw10  gw11  5GW Total  \n",
              "0        2.0   NaN  2.00  2.00  2.00  2.00  2.00      10.00  \n",
              "1        2.9   NaN  3.17  2.99  2.81  3.26  2.90      15.13  \n",
              "2        3.2   NaN  3.56  3.32  3.08  3.68  3.20      16.84  \n",
              "3        2.0   NaN  2.00  2.00  2.00  2.00  2.00      10.00  \n",
              "4        2.5   NaN  2.50  2.55  2.65  2.65  2.65      13.00  \n",
              "..       ...   ...   ...   ...   ...   ...   ...        ...  \n",
              "795     -2.9  -4.9 -3.88 -2.41 -1.92 -3.39 -2.41     -14.01  \n",
              "796     -2.3  -4.3 -0.15 -2.30 -1.01 -1.01 -2.30      -6.77  \n",
              "797     -2.3  -4.3 -0.15 -2.30 -1.01 -1.01 -2.30      -6.77  \n",
              "798     -2.3  -4.3 -0.15 -2.30 -1.01 -1.01 -2.30      -6.77  \n",
              "799     -2.3  -4.3 -0.15 -2.30 -1.01 -1.01 -2.30      -6.77  \n",
              "\n",
              "[697 rows x 22 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-b7f0608b-5cb8-4e0f-98e8-1de386a9d99e\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>team</th>\n",
              "      <th>pos</th>\n",
              "      <th>name</th>\n",
              "      <th>cost</th>\n",
              "      <th>selected_by_percent</th>\n",
              "      <th>goals_scored</th>\n",
              "      <th>assists</th>\n",
              "      <th>bps</th>\n",
              "      <th>ict_index</th>\n",
              "      <th>...</th>\n",
              "      <th>minutes</th>\n",
              "      <th>home_adjustment</th>\n",
              "      <th>xPallgw</th>\n",
              "      <th>xCSP</th>\n",
              "      <th>gw7</th>\n",
              "      <th>gw9</th>\n",
              "      <th>gw8</th>\n",
              "      <th>gw10</th>\n",
              "      <th>gw11</th>\n",
              "      <th>5GW Total</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>1</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>F</td>\n",
              "      <td>Balogun</td>\n",
              "      <td>4.4</td>\n",
              "      <td>0.3</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>1.2</td>\n",
              "      <td>2.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>10.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>8</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>F</td>\n",
              "      <td>G.Jesus</td>\n",
              "      <td>7.9</td>\n",
              "      <td>3.5</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>26</td>\n",
              "      <td>15.5</td>\n",
              "      <td>...</td>\n",
              "      <td>115</td>\n",
              "      <td>1.2</td>\n",
              "      <td>2.9</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.17</td>\n",
              "      <td>2.99</td>\n",
              "      <td>2.81</td>\n",
              "      <td>3.26</td>\n",
              "      <td>2.90</td>\n",
              "      <td>15.13</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>13</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>F</td>\n",
              "      <td>Nketiah</td>\n",
              "      <td>5.5</td>\n",
              "      <td>5.6</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>67</td>\n",
              "      <td>27.6</td>\n",
              "      <td>...</td>\n",
              "      <td>425</td>\n",
              "      <td>1.2</td>\n",
              "      <td>3.2</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.56</td>\n",
              "      <td>3.32</td>\n",
              "      <td>3.08</td>\n",
              "      <td>3.68</td>\n",
              "      <td>3.20</td>\n",
              "      <td>16.84</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>39</td>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>F</td>\n",
              "      <td>Davis</td>\n",
              "      <td>4.9</td>\n",
              "      <td>0.2</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>1.1</td>\n",
              "      <td>2.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>10.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>44</td>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>F</td>\n",
              "      <td>Duran</td>\n",
              "      <td>5.0</td>\n",
              "      <td>0.3</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>56</td>\n",
              "      <td>13.6</td>\n",
              "      <td>...</td>\n",
              "      <td>57</td>\n",
              "      <td>1.1</td>\n",
              "      <td>2.5</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2.50</td>\n",
              "      <td>2.55</td>\n",
              "      <td>2.65</td>\n",
              "      <td>2.65</td>\n",
              "      <td>2.65</td>\n",
              "      <td>13.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>795</th>\n",
              "      <td>647</td>\n",
              "      <td>West Ham</td>\n",
              "      <td>G</td>\n",
              "      <td>Anang</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>-2.9</td>\n",
              "      <td>-4.9</td>\n",
              "      <td>-3.88</td>\n",
              "      <td>-2.41</td>\n",
              "      <td>-1.92</td>\n",
              "      <td>-3.39</td>\n",
              "      <td>-2.41</td>\n",
              "      <td>-14.01</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>796</th>\n",
              "      <td>546</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>G</td>\n",
              "      <td>Bentley</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.4</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0.8</td>\n",
              "      <td>-2.3</td>\n",
              "      <td>-4.3</td>\n",
              "      <td>-0.15</td>\n",
              "      <td>-2.30</td>\n",
              "      <td>-1.01</td>\n",
              "      <td>-1.01</td>\n",
              "      <td>-2.30</td>\n",
              "      <td>-6.77</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>797</th>\n",
              "      <td>564</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>G</td>\n",
              "      <td>King</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.8</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0.8</td>\n",
              "      <td>-2.3</td>\n",
              "      <td>-4.3</td>\n",
              "      <td>-0.15</td>\n",
              "      <td>-2.30</td>\n",
              "      <td>-1.01</td>\n",
              "      <td>-1.01</td>\n",
              "      <td>-2.30</td>\n",
              "      <td>-6.77</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>798</th>\n",
              "      <td>569</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>G</td>\n",
              "      <td>José Sá</td>\n",
              "      <td>5.0</td>\n",
              "      <td>1.7</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>125</td>\n",
              "      <td>20.7</td>\n",
              "      <td>...</td>\n",
              "      <td>540</td>\n",
              "      <td>0.8</td>\n",
              "      <td>-2.3</td>\n",
              "      <td>-4.3</td>\n",
              "      <td>-0.15</td>\n",
              "      <td>-2.30</td>\n",
              "      <td>-1.01</td>\n",
              "      <td>-1.01</td>\n",
              "      <td>-2.30</td>\n",
              "      <td>-6.77</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>799</th>\n",
              "      <td>571</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>G</td>\n",
              "      <td>Šarkić</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.4</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0.8</td>\n",
              "      <td>-2.3</td>\n",
              "      <td>-4.3</td>\n",
              "      <td>-0.15</td>\n",
              "      <td>-2.30</td>\n",
              "      <td>-1.01</td>\n",
              "      <td>-1.01</td>\n",
              "      <td>-2.30</td>\n",
              "      <td>-6.77</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>697 rows × 22 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-b7f0608b-5cb8-4e0f-98e8-1de386a9d99e')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-b7f0608b-5cb8-4e0f-98e8-1de386a9d99e button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-b7f0608b-5cb8-4e0f-98e8-1de386a9d99e');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-20cea141-e411-4ecf-bb6a-81fad40ef79b\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-20cea141-e411-4ecf-bb6a-81fad40ef79b')\"\n",
              "            title=\"Suggest charts.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-20cea141-e411-4ecf-bb6a-81fad40ef79b button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 53
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "from pandas import ExcelWriter\n",
        "writer = ExcelWriter('API model.xlsx')\n",
        "rawdfgw228x.to_excel(writer, sheet_name='Sheet1')\n",
        "gwadjustments711.to_excel(writer, sheet_name='Sheet2')\n",
        "#fplwithunderstat.to_excel(writer, sheet_name='Sheet3')\n",
        "\n",
        "# Close the Pandas Excel writer and output the Excel file.\n",
        "writer.save()"
      ],
      "metadata": {
        "id": "tdXsMsuwaWa4",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "0c10f7e1-d2d6-4318-f4ae-e9a510d973db"
      },
      "execution_count": 54,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "<ipython-input-54-2d1981096810>:8: FutureWarning: save is not part of the public API, usage can give unexpected results and will be removed in a future version\n",
            "  writer.save()\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#from google.colab import drive\n",
        "#drive.mount('/content/drive')"
      ],
      "metadata": {
        "id": "GzSzE5_Ckuq3"
      },
      "execution_count": 55,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "import shutil"
      ],
      "metadata": {
        "id": "xSIwXnyAk2op"
      },
      "execution_count": 56,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "#shutil.copy(\"/content/API model.xlsx\",\"/content/drive/MyDrive/FPL\")"
      ],
      "metadata": {
        "id": "O724A90vk3b4"
      },
      "execution_count": 57,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "rawdfgw228x.nlargest(50, '5GW Total')"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "id": "4ULMO_eqJXIT",
        "outputId": "59b43ab6-dcc3-468e-9338-ecb7a7b579da"
      },
      "execution_count": 58,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "      id               team pos             name  cost  selected_by_percent  \\\n",
              "74   355    Manchester City   F          Haaland  14.1                 92.4   \n",
              "293  308          Liverpool   M            Salah  12.5                 30.2   \n",
              "163  108          Brentford   M           Mbeumo   6.9                 29.5   \n",
              "115   19            Arsenal   M             Saka   8.7                 64.8   \n",
              "347  373  Manchester United   M      B.Fernandes   8.4                 20.1   \n",
              "34   211            Chelsea   F        N.Jackson   6.9                  8.0   \n",
              "73   343    Manchester City   F        J.Alvarez   7.0                 31.2   \n",
              "356  396  Manchester United   M         Rashford   8.9                 30.3   \n",
              "248  226     Crystal Palace   M              Eze   6.3                  8.2   \n",
              "423  526           West Ham   M            Bowen   7.1                 10.4   \n",
              "415  504          Tottenham   M         Maddison   7.9                 31.2   \n",
              "53   293          Liverpool   F           Darwin   7.4                 12.1   \n",
              "184  143           Brighton   M           Mitoma   6.6                 42.8   \n",
              "420  516          Tottenham   M              Son   9.2                 18.6   \n",
              "291  303          Liverpool   M        Luis Díaz   7.6                 10.1   \n",
              "366  412   Newcastle United   M           Gordon   5.6                  4.5   \n",
              "12   119          Brentford   F            Wissa   6.0                 12.1   \n",
              "341  365    Manchester City   M          Rodrigo   5.7                  8.9   \n",
              "125   43        Aston Villa   M     Douglas Luiz   5.4                  2.0   \n",
              "230  199            Chelsea   M             Enzo   4.9                  3.6   \n",
              "235  216            Chelsea   M         Sterling   7.1                 12.7   \n",
              "15   132           Brighton   F         Ferguson   6.0                  7.8   \n",
              "39   225     Crystal Palace   F          Edouard   5.6                  5.8   \n",
              "600  342    Manchester City   D              Aké   5.1                  7.0   \n",
              "112   14            Arsenal   M         Ødegaard   8.5                 21.1   \n",
              "5     60        Aston Villa   F          Watkins   7.9                 17.6   \n",
              "60   326         Luton Town   F           Morris   5.5                  5.1   \n",
              "607  369    Manchester City   D           Walker   5.3                 15.1   \n",
              "134  599        Aston Villa   M            Diaby   6.6                 11.1   \n",
              "428  539           West Ham   M        L.Paquetá   6.0                  1.8   \n",
              "258  249            Everton   M       A.Doucoure   5.5                  0.6   \n",
              "121   34        Aston Villa   M           Bailey   5.5                  1.5   \n",
              "432  664           West Ham   M      Ward-Prowse   6.3                 11.8   \n",
              "78   415   Newcastle United   F             Isak   7.6                 22.4   \n",
              "9     85        Bournemouth   F          Solanke   6.4                  2.4   \n",
              "286  294          Liverpool   M         Diogo J.   7.8                  2.1   \n",
              "418  513          Tottenham   M             Sarr   4.6                  3.4   \n",
              "16   135           Brighton   F       João Pedro   5.4                 11.5   \n",
              "182  140           Brighton   M            March   6.5                  7.6   \n",
              "335  353    Manchester City   M            Foden   7.6                 13.7   \n",
              "602  350    Manchester City   D            Rúben   5.5                  8.7   \n",
              "608  616    Manchester City   D         Gvardiol   5.1                  5.5   \n",
              "348  376  Manchester United   M         Casemiro   5.4                  3.8   \n",
              "265  601            Everton   M          Danjuma   5.5                  0.2   \n",
              "599  341    Manchester City   D           Akanji   5.0                  8.3   \n",
              "603  357    Manchester City   D          Laporte   4.9                  0.1   \n",
              "54   297          Liverpool   F            Gakpo   7.3                  3.1   \n",
              "274  270             Fulham   M  De Cordova-Reid   5.5                  0.2   \n",
              "525  195            Chelsea   D         Chilwell   5.6                 22.5   \n",
              "2     13            Arsenal   F          Nketiah   5.5                  5.6   \n",
              "\n",
              "     goals_scored  assists  bps  ict_index  ...  minutes  home_adjustment  \\\n",
              "74              8        1  200       77.7  ...      529              1.3   \n",
              "293             3        4  146       69.8  ...      521              1.2   \n",
              "163             4        0   98       50.7  ...      540              1.1   \n",
              "115             3        3  166       73.1  ...      538              1.2   \n",
              "347             2        1  113       59.0  ...      540              1.1   \n",
              "34              1        0   24       38.4  ...      509              1.1   \n",
              "73              2        5  157       57.2  ...      505              1.3   \n",
              "356             1        2   60       42.7  ...      531              1.1   \n",
              "248             1        0   87       56.6  ...      540              1.0   \n",
              "423             4        1  118       50.8  ...      540              1.0   \n",
              "415             2        4  149       68.1  ...      504              1.0   \n",
              "53              3        2   95       29.0  ...      219              1.2   \n",
              "184             3        3  131       61.2  ...      485              1.1   \n",
              "420             5        0  150       55.1  ...      482              1.0   \n",
              "291             2        0   61       33.0  ...      382              1.2   \n",
              "366             2        3  107       39.5  ...      451              1.2   \n",
              "12              2        1   79       35.1  ...      509              1.1   \n",
              "341             2        1  125       44.1  ...      480              1.3   \n",
              "125             2        0  121       31.0  ...      489              1.1   \n",
              "230             0        0   58       36.0  ...      507              1.1   \n",
              "235             2        1   84       51.6  ...      530              1.1   \n",
              "15              4        0  107       37.9  ...      255              1.1   \n",
              "39              4        0  114       51.8  ...      518              1.0   \n",
              "600             1        0   84       13.6  ...      292              1.3   \n",
              "112             2        0   90       42.2  ...      532              1.2   \n",
              "5               1        4   85       40.8  ...      500              1.1   \n",
              "60              2        1   80       29.0  ...      433              0.8   \n",
              "607             0        1  136       23.9  ...      540              1.3   \n",
              "134             2        2  102       41.5  ...      481              1.1   \n",
              "428             1        1  102       32.7  ...      530              1.0   \n",
              "258             2        0   83       44.2  ...      529              0.9   \n",
              "121             2        1   64       20.7  ...      201              1.1   \n",
              "432             2        3  136       39.1  ...      440              1.0   \n",
              "78              3        0   97       25.6  ...      296              1.2   \n",
              "9               3        1   80       42.9  ...      540              0.8   \n",
              "286             2        2   77       30.4  ...      261              1.2   \n",
              "418             1        1   78       36.7  ...      384              1.0   \n",
              "16              2        0   75       36.7  ...      279              1.1   \n",
              "182             3        0   85       35.5  ...      314              1.1   \n",
              "335             1        3  130       49.9  ...      425              1.3   \n",
              "602             0        0   91       15.6  ...      450              1.3   \n",
              "608             0        0   89       15.5  ...      371              1.3   \n",
              "348             1        0   86       31.9  ...      513              1.1   \n",
              "265             1        0   30       26.8  ...      353              0.9   \n",
              "599             0        0  107       15.8  ...      450              1.3   \n",
              "603             0        0    4        2.9  ...       11              1.3   \n",
              "54              1        0   41       17.9  ...      273              1.2   \n",
              "274             1        1   54       18.5  ...      359              0.9   \n",
              "525             0        1   66       28.1  ...      334              1.1   \n",
              "2               2        1   67       27.6  ...      425              1.2   \n",
              "\n",
              "     xPallgw  xCSP   gw7   gw9   gw8  gw10  gw11  5GW Total  \n",
              "74       7.3   NaN  9.95  8.36  7.83  8.36  9.95      44.45  \n",
              "293      6.3   NaN  7.16  7.59  6.30  8.02  8.02      37.09  \n",
              "163      6.1   NaN  7.33  6.92  6.10  6.10  6.51      32.96  \n",
              "115      5.5   NaN  6.55  5.85  5.15  6.90  5.50      29.95  \n",
              "347      5.2   NaN  5.52  6.16  5.20  4.56  5.84      27.28  \n",
              "34       4.8   NaN  5.08  4.52  5.36  4.80  5.08      24.84  \n",
              "73       4.2   NaN  5.30  4.64  4.42  4.64  5.30      24.30  \n",
              "356      4.5   NaN  4.75  5.25  4.50  4.00  5.00      23.50  \n",
              "248      4.6   NaN  4.34  4.34  5.12  4.60  4.86      23.26  \n",
              "423      4.7   NaN  5.24  4.43  4.16  4.97  4.43      23.23  \n",
              "415      4.6   NaN  4.08  4.86  5.12  4.60  4.34      23.00  \n",
              "53       4.0   NaN  4.40  4.60  4.00  4.80  4.80      22.60  \n",
              "184      4.3   NaN  4.30  3.84  4.30  4.76  4.76      21.96  \n",
              "420      4.3   NaN  3.84  4.53  4.76  4.30  4.07      21.50  \n",
              "291      3.8   NaN  4.16  4.34  3.80  4.52  4.52      21.34  \n",
              "366      3.9   NaN  4.47  4.09  4.28  4.47  3.90      21.21  \n",
              "12       4.0   NaN  4.60  4.40  4.00  4.00  4.20      21.20  \n",
              "341      3.7   NaN  4.55  4.04  3.87  4.04  4.55      21.05  \n",
              "125      3.8   NaN  3.80  3.98  4.34  4.34  4.34      20.80  \n",
              "230      4.0   NaN  4.20  3.80  4.40  4.00  4.20      20.60  \n",
              "235      4.0   NaN  4.20  3.80  4.40  4.00  4.20      20.60  \n",
              "15       4.0   NaN  4.00  3.60  4.00  4.40  4.40      20.40  \n",
              "39       4.0   NaN  3.80  3.80  4.40  4.00  4.20      20.20  \n",
              "600      3.5   0.9  4.25  3.80  3.65  3.80  4.25      19.75  \n",
              "112      3.7   NaN  4.21  3.87  3.53  4.38  3.70      19.69  \n",
              "5        3.6   NaN  3.60  3.76  4.08  4.08  4.08      19.60  \n",
              "60       3.9   NaN  5.42  3.90  3.52  3.33  3.14      19.31  \n",
              "607      3.4   0.9  4.10  3.68  3.54  3.68  4.10      19.10  \n",
              "134      3.5   NaN  3.50  3.65  3.95  3.95  3.95      19.00  \n",
              "428      3.8   NaN  4.16  3.62  3.44  3.98  3.62      18.82  \n",
              "258      3.9   NaN  4.09  3.33  4.09  3.71  3.52      18.74  \n",
              "121      3.4   NaN  3.40  3.54  3.82  3.82  3.82      18.40  \n",
              "432      3.7   NaN  4.04  3.53  3.36  3.87  3.53      18.33  \n",
              "78       3.4   NaN  3.82  3.54  3.68  3.82  3.40      18.26  \n",
              "9        4.0   NaN  3.40  4.00  3.80  4.00  3.00      18.20  \n",
              "286      3.3   NaN  3.56  3.69  3.30  3.82  3.82      18.19  \n",
              "418      3.6   NaN  3.28  3.76  3.92  3.60  3.44      18.00  \n",
              "16       3.5   NaN  3.50  3.20  3.50  3.80  3.80      17.80  \n",
              "182      3.5   NaN  3.50  3.20  3.50  3.80  3.80      17.80  \n",
              "335      3.2   NaN  3.80  3.44  3.32  3.44  3.80      17.80  \n",
              "602      3.2   0.9  3.80  3.44  3.32  3.44  3.80      17.80  \n",
              "608      3.2   0.9  3.80  3.44  3.32  3.44  3.80      17.80  \n",
              "348      3.4   NaN  3.54  3.82  3.40  3.12  3.68      17.56  \n",
              "265      3.6   NaN  3.76  3.12  3.76  3.44  3.28      17.36  \n",
              "599      3.1   0.9  3.65  3.32  3.21  3.32  3.65      17.15  \n",
              "603      3.1   0.9  3.65  3.32  3.21  3.32  3.65      17.15  \n",
              "54       3.1   NaN  3.32  3.43  3.10  3.54  3.54      16.93  \n",
              "274      3.5   NaN  3.35  3.35  3.80  3.20  3.20      16.90  \n",
              "525      3.3  -0.2  3.43  3.17  3.56  3.30  3.43      16.89  \n",
              "2        3.2   NaN  3.56  3.32  3.08  3.68  3.20      16.84  \n",
              "\n",
              "[50 rows x 22 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-2b9579e9-dc00-43fe-a6e6-d6e030a751c4\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>team</th>\n",
              "      <th>pos</th>\n",
              "      <th>name</th>\n",
              "      <th>cost</th>\n",
              "      <th>selected_by_percent</th>\n",
              "      <th>goals_scored</th>\n",
              "      <th>assists</th>\n",
              "      <th>bps</th>\n",
              "      <th>ict_index</th>\n",
              "      <th>...</th>\n",
              "      <th>minutes</th>\n",
              "      <th>home_adjustment</th>\n",
              "      <th>xPallgw</th>\n",
              "      <th>xCSP</th>\n",
              "      <th>gw7</th>\n",
              "      <th>gw9</th>\n",
              "      <th>gw8</th>\n",
              "      <th>gw10</th>\n",
              "      <th>gw11</th>\n",
              "      <th>5GW Total</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>74</th>\n",
              "      <td>355</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>F</td>\n",
              "      <td>Haaland</td>\n",
              "      <td>14.1</td>\n",
              "      <td>92.4</td>\n",
              "      <td>8</td>\n",
              "      <td>1</td>\n",
              "      <td>200</td>\n",
              "      <td>77.7</td>\n",
              "      <td>...</td>\n",
              "      <td>529</td>\n",
              "      <td>1.3</td>\n",
              "      <td>7.3</td>\n",
              "      <td>NaN</td>\n",
              "      <td>9.95</td>\n",
              "      <td>8.36</td>\n",
              "      <td>7.83</td>\n",
              "      <td>8.36</td>\n",
              "      <td>9.95</td>\n",
              "      <td>44.45</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>293</th>\n",
              "      <td>308</td>\n",
              "      <td>Liverpool</td>\n",
              "      <td>M</td>\n",
              "      <td>Salah</td>\n",
              "      <td>12.5</td>\n",
              "      <td>30.2</td>\n",
              "      <td>3</td>\n",
              "      <td>4</td>\n",
              "      <td>146</td>\n",
              "      <td>69.8</td>\n",
              "      <td>...</td>\n",
              "      <td>521</td>\n",
              "      <td>1.2</td>\n",
              "      <td>6.3</td>\n",
              "      <td>NaN</td>\n",
              "      <td>7.16</td>\n",
              "      <td>7.59</td>\n",
              "      <td>6.30</td>\n",
              "      <td>8.02</td>\n",
              "      <td>8.02</td>\n",
              "      <td>37.09</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>163</th>\n",
              "      <td>108</td>\n",
              "      <td>Brentford</td>\n",
              "      <td>M</td>\n",
              "      <td>Mbeumo</td>\n",
              "      <td>6.9</td>\n",
              "      <td>29.5</td>\n",
              "      <td>4</td>\n",
              "      <td>0</td>\n",
              "      <td>98</td>\n",
              "      <td>50.7</td>\n",
              "      <td>...</td>\n",
              "      <td>540</td>\n",
              "      <td>1.1</td>\n",
              "      <td>6.1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>7.33</td>\n",
              "      <td>6.92</td>\n",
              "      <td>6.10</td>\n",
              "      <td>6.10</td>\n",
              "      <td>6.51</td>\n",
              "      <td>32.96</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>115</th>\n",
              "      <td>19</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>M</td>\n",
              "      <td>Saka</td>\n",
              "      <td>8.7</td>\n",
              "      <td>64.8</td>\n",
              "      <td>3</td>\n",
              "      <td>3</td>\n",
              "      <td>166</td>\n",
              "      <td>73.1</td>\n",
              "      <td>...</td>\n",
              "      <td>538</td>\n",
              "      <td>1.2</td>\n",
              "      <td>5.5</td>\n",
              "      <td>NaN</td>\n",
              "      <td>6.55</td>\n",
              "      <td>5.85</td>\n",
              "      <td>5.15</td>\n",
              "      <td>6.90</td>\n",
              "      <td>5.50</td>\n",
              "      <td>29.95</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>347</th>\n",
              "      <td>373</td>\n",
              "      <td>Manchester United</td>\n",
              "      <td>M</td>\n",
              "      <td>B.Fernandes</td>\n",
              "      <td>8.4</td>\n",
              "      <td>20.1</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>113</td>\n",
              "      <td>59.0</td>\n",
              "      <td>...</td>\n",
              "      <td>540</td>\n",
              "      <td>1.1</td>\n",
              "      <td>5.2</td>\n",
              "      <td>NaN</td>\n",
              "      <td>5.52</td>\n",
              "      <td>6.16</td>\n",
              "      <td>5.20</td>\n",
              "      <td>4.56</td>\n",
              "      <td>5.84</td>\n",
              "      <td>27.28</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>34</th>\n",
              "      <td>211</td>\n",
              "      <td>Chelsea</td>\n",
              "      <td>F</td>\n",
              "      <td>N.Jackson</td>\n",
              "      <td>6.9</td>\n",
              "      <td>8.0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>24</td>\n",
              "      <td>38.4</td>\n",
              "      <td>...</td>\n",
              "      <td>509</td>\n",
              "      <td>1.1</td>\n",
              "      <td>4.8</td>\n",
              "      <td>NaN</td>\n",
              "      <td>5.08</td>\n",
              "      <td>4.52</td>\n",
              "      <td>5.36</td>\n",
              "      <td>4.80</td>\n",
              "      <td>5.08</td>\n",
              "      <td>24.84</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>73</th>\n",
              "      <td>343</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>F</td>\n",
              "      <td>J.Alvarez</td>\n",
              "      <td>7.0</td>\n",
              "      <td>31.2</td>\n",
              "      <td>2</td>\n",
              "      <td>5</td>\n",
              "      <td>157</td>\n",
              "      <td>57.2</td>\n",
              "      <td>...</td>\n",
              "      <td>505</td>\n",
              "      <td>1.3</td>\n",
              "      <td>4.2</td>\n",
              "      <td>NaN</td>\n",
              "      <td>5.30</td>\n",
              "      <td>4.64</td>\n",
              "      <td>4.42</td>\n",
              "      <td>4.64</td>\n",
              "      <td>5.30</td>\n",
              "      <td>24.30</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>356</th>\n",
              "      <td>396</td>\n",
              "      <td>Manchester United</td>\n",
              "      <td>M</td>\n",
              "      <td>Rashford</td>\n",
              "      <td>8.9</td>\n",
              "      <td>30.3</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>60</td>\n",
              "      <td>42.7</td>\n",
              "      <td>...</td>\n",
              "      <td>531</td>\n",
              "      <td>1.1</td>\n",
              "      <td>4.5</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4.75</td>\n",
              "      <td>5.25</td>\n",
              "      <td>4.50</td>\n",
              "      <td>4.00</td>\n",
              "      <td>5.00</td>\n",
              "      <td>23.50</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>248</th>\n",
              "      <td>226</td>\n",
              "      <td>Crystal Palace</td>\n",
              "      <td>M</td>\n",
              "      <td>Eze</td>\n",
              "      <td>6.3</td>\n",
              "      <td>8.2</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>87</td>\n",
              "      <td>56.6</td>\n",
              "      <td>...</td>\n",
              "      <td>540</td>\n",
              "      <td>1.0</td>\n",
              "      <td>4.6</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4.34</td>\n",
              "      <td>4.34</td>\n",
              "      <td>5.12</td>\n",
              "      <td>4.60</td>\n",
              "      <td>4.86</td>\n",
              "      <td>23.26</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>423</th>\n",
              "      <td>526</td>\n",
              "      <td>West Ham</td>\n",
              "      <td>M</td>\n",
              "      <td>Bowen</td>\n",
              "      <td>7.1</td>\n",
              "      <td>10.4</td>\n",
              "      <td>4</td>\n",
              "      <td>1</td>\n",
              "      <td>118</td>\n",
              "      <td>50.8</td>\n",
              "      <td>...</td>\n",
              "      <td>540</td>\n",
              "      <td>1.0</td>\n",
              "      <td>4.7</td>\n",
              "      <td>NaN</td>\n",
              "      <td>5.24</td>\n",
              "      <td>4.43</td>\n",
              "      <td>4.16</td>\n",
              "      <td>4.97</td>\n",
              "      <td>4.43</td>\n",
              "      <td>23.23</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>415</th>\n",
              "      <td>504</td>\n",
              "      <td>Tottenham</td>\n",
              "      <td>M</td>\n",
              "      <td>Maddison</td>\n",
              "      <td>7.9</td>\n",
              "      <td>31.2</td>\n",
              "      <td>2</td>\n",
              "      <td>4</td>\n",
              "      <td>149</td>\n",
              "      <td>68.1</td>\n",
              "      <td>...</td>\n",
              "      <td>504</td>\n",
              "      <td>1.0</td>\n",
              "      <td>4.6</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4.08</td>\n",
              "      <td>4.86</td>\n",
              "      <td>5.12</td>\n",
              "      <td>4.60</td>\n",
              "      <td>4.34</td>\n",
              "      <td>23.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>53</th>\n",
              "      <td>293</td>\n",
              "      <td>Liverpool</td>\n",
              "      <td>F</td>\n",
              "      <td>Darwin</td>\n",
              "      <td>7.4</td>\n",
              "      <td>12.1</td>\n",
              "      <td>3</td>\n",
              "      <td>2</td>\n",
              "      <td>95</td>\n",
              "      <td>29.0</td>\n",
              "      <td>...</td>\n",
              "      <td>219</td>\n",
              "      <td>1.2</td>\n",
              "      <td>4.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4.40</td>\n",
              "      <td>4.60</td>\n",
              "      <td>4.00</td>\n",
              "      <td>4.80</td>\n",
              "      <td>4.80</td>\n",
              "      <td>22.60</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>184</th>\n",
              "      <td>143</td>\n",
              "      <td>Brighton</td>\n",
              "      <td>M</td>\n",
              "      <td>Mitoma</td>\n",
              "      <td>6.6</td>\n",
              "      <td>42.8</td>\n",
              "      <td>3</td>\n",
              "      <td>3</td>\n",
              "      <td>131</td>\n",
              "      <td>61.2</td>\n",
              "      <td>...</td>\n",
              "      <td>485</td>\n",
              "      <td>1.1</td>\n",
              "      <td>4.3</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4.30</td>\n",
              "      <td>3.84</td>\n",
              "      <td>4.30</td>\n",
              "      <td>4.76</td>\n",
              "      <td>4.76</td>\n",
              "      <td>21.96</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>420</th>\n",
              "      <td>516</td>\n",
              "      <td>Tottenham</td>\n",
              "      <td>M</td>\n",
              "      <td>Son</td>\n",
              "      <td>9.2</td>\n",
              "      <td>18.6</td>\n",
              "      <td>5</td>\n",
              "      <td>0</td>\n",
              "      <td>150</td>\n",
              "      <td>55.1</td>\n",
              "      <td>...</td>\n",
              "      <td>482</td>\n",
              "      <td>1.0</td>\n",
              "      <td>4.3</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.84</td>\n",
              "      <td>4.53</td>\n",
              "      <td>4.76</td>\n",
              "      <td>4.30</td>\n",
              "      <td>4.07</td>\n",
              "      <td>21.50</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>291</th>\n",
              "      <td>303</td>\n",
              "      <td>Liverpool</td>\n",
              "      <td>M</td>\n",
              "      <td>Luis Díaz</td>\n",
              "      <td>7.6</td>\n",
              "      <td>10.1</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>61</td>\n",
              "      <td>33.0</td>\n",
              "      <td>...</td>\n",
              "      <td>382</td>\n",
              "      <td>1.2</td>\n",
              "      <td>3.8</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4.16</td>\n",
              "      <td>4.34</td>\n",
              "      <td>3.80</td>\n",
              "      <td>4.52</td>\n",
              "      <td>4.52</td>\n",
              "      <td>21.34</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>366</th>\n",
              "      <td>412</td>\n",
              "      <td>Newcastle United</td>\n",
              "      <td>M</td>\n",
              "      <td>Gordon</td>\n",
              "      <td>5.6</td>\n",
              "      <td>4.5</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "      <td>107</td>\n",
              "      <td>39.5</td>\n",
              "      <td>...</td>\n",
              "      <td>451</td>\n",
              "      <td>1.2</td>\n",
              "      <td>3.9</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4.47</td>\n",
              "      <td>4.09</td>\n",
              "      <td>4.28</td>\n",
              "      <td>4.47</td>\n",
              "      <td>3.90</td>\n",
              "      <td>21.21</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>12</th>\n",
              "      <td>119</td>\n",
              "      <td>Brentford</td>\n",
              "      <td>F</td>\n",
              "      <td>Wissa</td>\n",
              "      <td>6.0</td>\n",
              "      <td>12.1</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>79</td>\n",
              "      <td>35.1</td>\n",
              "      <td>...</td>\n",
              "      <td>509</td>\n",
              "      <td>1.1</td>\n",
              "      <td>4.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4.60</td>\n",
              "      <td>4.40</td>\n",
              "      <td>4.00</td>\n",
              "      <td>4.00</td>\n",
              "      <td>4.20</td>\n",
              "      <td>21.20</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>341</th>\n",
              "      <td>365</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>M</td>\n",
              "      <td>Rodrigo</td>\n",
              "      <td>5.7</td>\n",
              "      <td>8.9</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>125</td>\n",
              "      <td>44.1</td>\n",
              "      <td>...</td>\n",
              "      <td>480</td>\n",
              "      <td>1.3</td>\n",
              "      <td>3.7</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4.55</td>\n",
              "      <td>4.04</td>\n",
              "      <td>3.87</td>\n",
              "      <td>4.04</td>\n",
              "      <td>4.55</td>\n",
              "      <td>21.05</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>125</th>\n",
              "      <td>43</td>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>M</td>\n",
              "      <td>Douglas Luiz</td>\n",
              "      <td>5.4</td>\n",
              "      <td>2.0</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>121</td>\n",
              "      <td>31.0</td>\n",
              "      <td>...</td>\n",
              "      <td>489</td>\n",
              "      <td>1.1</td>\n",
              "      <td>3.8</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.80</td>\n",
              "      <td>3.98</td>\n",
              "      <td>4.34</td>\n",
              "      <td>4.34</td>\n",
              "      <td>4.34</td>\n",
              "      <td>20.80</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>230</th>\n",
              "      <td>199</td>\n",
              "      <td>Chelsea</td>\n",
              "      <td>M</td>\n",
              "      <td>Enzo</td>\n",
              "      <td>4.9</td>\n",
              "      <td>3.6</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>58</td>\n",
              "      <td>36.0</td>\n",
              "      <td>...</td>\n",
              "      <td>507</td>\n",
              "      <td>1.1</td>\n",
              "      <td>4.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4.20</td>\n",
              "      <td>3.80</td>\n",
              "      <td>4.40</td>\n",
              "      <td>4.00</td>\n",
              "      <td>4.20</td>\n",
              "      <td>20.60</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>235</th>\n",
              "      <td>216</td>\n",
              "      <td>Chelsea</td>\n",
              "      <td>M</td>\n",
              "      <td>Sterling</td>\n",
              "      <td>7.1</td>\n",
              "      <td>12.7</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>84</td>\n",
              "      <td>51.6</td>\n",
              "      <td>...</td>\n",
              "      <td>530</td>\n",
              "      <td>1.1</td>\n",
              "      <td>4.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4.20</td>\n",
              "      <td>3.80</td>\n",
              "      <td>4.40</td>\n",
              "      <td>4.00</td>\n",
              "      <td>4.20</td>\n",
              "      <td>20.60</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>15</th>\n",
              "      <td>132</td>\n",
              "      <td>Brighton</td>\n",
              "      <td>F</td>\n",
              "      <td>Ferguson</td>\n",
              "      <td>6.0</td>\n",
              "      <td>7.8</td>\n",
              "      <td>4</td>\n",
              "      <td>0</td>\n",
              "      <td>107</td>\n",
              "      <td>37.9</td>\n",
              "      <td>...</td>\n",
              "      <td>255</td>\n",
              "      <td>1.1</td>\n",
              "      <td>4.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4.00</td>\n",
              "      <td>3.60</td>\n",
              "      <td>4.00</td>\n",
              "      <td>4.40</td>\n",
              "      <td>4.40</td>\n",
              "      <td>20.40</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>39</th>\n",
              "      <td>225</td>\n",
              "      <td>Crystal Palace</td>\n",
              "      <td>F</td>\n",
              "      <td>Edouard</td>\n",
              "      <td>5.6</td>\n",
              "      <td>5.8</td>\n",
              "      <td>4</td>\n",
              "      <td>0</td>\n",
              "      <td>114</td>\n",
              "      <td>51.8</td>\n",
              "      <td>...</td>\n",
              "      <td>518</td>\n",
              "      <td>1.0</td>\n",
              "      <td>4.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.80</td>\n",
              "      <td>3.80</td>\n",
              "      <td>4.40</td>\n",
              "      <td>4.00</td>\n",
              "      <td>4.20</td>\n",
              "      <td>20.20</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>600</th>\n",
              "      <td>342</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>D</td>\n",
              "      <td>Aké</td>\n",
              "      <td>5.1</td>\n",
              "      <td>7.0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>84</td>\n",
              "      <td>13.6</td>\n",
              "      <td>...</td>\n",
              "      <td>292</td>\n",
              "      <td>1.3</td>\n",
              "      <td>3.5</td>\n",
              "      <td>0.9</td>\n",
              "      <td>4.25</td>\n",
              "      <td>3.80</td>\n",
              "      <td>3.65</td>\n",
              "      <td>3.80</td>\n",
              "      <td>4.25</td>\n",
              "      <td>19.75</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>112</th>\n",
              "      <td>14</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>M</td>\n",
              "      <td>Ødegaard</td>\n",
              "      <td>8.5</td>\n",
              "      <td>21.1</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>90</td>\n",
              "      <td>42.2</td>\n",
              "      <td>...</td>\n",
              "      <td>532</td>\n",
              "      <td>1.2</td>\n",
              "      <td>3.7</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4.21</td>\n",
              "      <td>3.87</td>\n",
              "      <td>3.53</td>\n",
              "      <td>4.38</td>\n",
              "      <td>3.70</td>\n",
              "      <td>19.69</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>60</td>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>F</td>\n",
              "      <td>Watkins</td>\n",
              "      <td>7.9</td>\n",
              "      <td>17.6</td>\n",
              "      <td>1</td>\n",
              "      <td>4</td>\n",
              "      <td>85</td>\n",
              "      <td>40.8</td>\n",
              "      <td>...</td>\n",
              "      <td>500</td>\n",
              "      <td>1.1</td>\n",
              "      <td>3.6</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.60</td>\n",
              "      <td>3.76</td>\n",
              "      <td>4.08</td>\n",
              "      <td>4.08</td>\n",
              "      <td>4.08</td>\n",
              "      <td>19.60</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>60</th>\n",
              "      <td>326</td>\n",
              "      <td>Luton Town</td>\n",
              "      <td>F</td>\n",
              "      <td>Morris</td>\n",
              "      <td>5.5</td>\n",
              "      <td>5.1</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>80</td>\n",
              "      <td>29.0</td>\n",
              "      <td>...</td>\n",
              "      <td>433</td>\n",
              "      <td>0.8</td>\n",
              "      <td>3.9</td>\n",
              "      <td>NaN</td>\n",
              "      <td>5.42</td>\n",
              "      <td>3.90</td>\n",
              "      <td>3.52</td>\n",
              "      <td>3.33</td>\n",
              "      <td>3.14</td>\n",
              "      <td>19.31</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>607</th>\n",
              "      <td>369</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>D</td>\n",
              "      <td>Walker</td>\n",
              "      <td>5.3</td>\n",
              "      <td>15.1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>136</td>\n",
              "      <td>23.9</td>\n",
              "      <td>...</td>\n",
              "      <td>540</td>\n",
              "      <td>1.3</td>\n",
              "      <td>3.4</td>\n",
              "      <td>0.9</td>\n",
              "      <td>4.10</td>\n",
              "      <td>3.68</td>\n",
              "      <td>3.54</td>\n",
              "      <td>3.68</td>\n",
              "      <td>4.10</td>\n",
              "      <td>19.10</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>134</th>\n",
              "      <td>599</td>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>M</td>\n",
              "      <td>Diaby</td>\n",
              "      <td>6.6</td>\n",
              "      <td>11.1</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>102</td>\n",
              "      <td>41.5</td>\n",
              "      <td>...</td>\n",
              "      <td>481</td>\n",
              "      <td>1.1</td>\n",
              "      <td>3.5</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.50</td>\n",
              "      <td>3.65</td>\n",
              "      <td>3.95</td>\n",
              "      <td>3.95</td>\n",
              "      <td>3.95</td>\n",
              "      <td>19.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>428</th>\n",
              "      <td>539</td>\n",
              "      <td>West Ham</td>\n",
              "      <td>M</td>\n",
              "      <td>L.Paquetá</td>\n",
              "      <td>6.0</td>\n",
              "      <td>1.8</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>102</td>\n",
              "      <td>32.7</td>\n",
              "      <td>...</td>\n",
              "      <td>530</td>\n",
              "      <td>1.0</td>\n",
              "      <td>3.8</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4.16</td>\n",
              "      <td>3.62</td>\n",
              "      <td>3.44</td>\n",
              "      <td>3.98</td>\n",
              "      <td>3.62</td>\n",
              "      <td>18.82</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>258</th>\n",
              "      <td>249</td>\n",
              "      <td>Everton</td>\n",
              "      <td>M</td>\n",
              "      <td>A.Doucoure</td>\n",
              "      <td>5.5</td>\n",
              "      <td>0.6</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>83</td>\n",
              "      <td>44.2</td>\n",
              "      <td>...</td>\n",
              "      <td>529</td>\n",
              "      <td>0.9</td>\n",
              "      <td>3.9</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4.09</td>\n",
              "      <td>3.33</td>\n",
              "      <td>4.09</td>\n",
              "      <td>3.71</td>\n",
              "      <td>3.52</td>\n",
              "      <td>18.74</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>121</th>\n",
              "      <td>34</td>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>M</td>\n",
              "      <td>Bailey</td>\n",
              "      <td>5.5</td>\n",
              "      <td>1.5</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>64</td>\n",
              "      <td>20.7</td>\n",
              "      <td>...</td>\n",
              "      <td>201</td>\n",
              "      <td>1.1</td>\n",
              "      <td>3.4</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.40</td>\n",
              "      <td>3.54</td>\n",
              "      <td>3.82</td>\n",
              "      <td>3.82</td>\n",
              "      <td>3.82</td>\n",
              "      <td>18.40</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>432</th>\n",
              "      <td>664</td>\n",
              "      <td>West Ham</td>\n",
              "      <td>M</td>\n",
              "      <td>Ward-Prowse</td>\n",
              "      <td>6.3</td>\n",
              "      <td>11.8</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "      <td>136</td>\n",
              "      <td>39.1</td>\n",
              "      <td>...</td>\n",
              "      <td>440</td>\n",
              "      <td>1.0</td>\n",
              "      <td>3.7</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4.04</td>\n",
              "      <td>3.53</td>\n",
              "      <td>3.36</td>\n",
              "      <td>3.87</td>\n",
              "      <td>3.53</td>\n",
              "      <td>18.33</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>78</th>\n",
              "      <td>415</td>\n",
              "      <td>Newcastle United</td>\n",
              "      <td>F</td>\n",
              "      <td>Isak</td>\n",
              "      <td>7.6</td>\n",
              "      <td>22.4</td>\n",
              "      <td>3</td>\n",
              "      <td>0</td>\n",
              "      <td>97</td>\n",
              "      <td>25.6</td>\n",
              "      <td>...</td>\n",
              "      <td>296</td>\n",
              "      <td>1.2</td>\n",
              "      <td>3.4</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.82</td>\n",
              "      <td>3.54</td>\n",
              "      <td>3.68</td>\n",
              "      <td>3.82</td>\n",
              "      <td>3.40</td>\n",
              "      <td>18.26</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>85</td>\n",
              "      <td>Bournemouth</td>\n",
              "      <td>F</td>\n",
              "      <td>Solanke</td>\n",
              "      <td>6.4</td>\n",
              "      <td>2.4</td>\n",
              "      <td>3</td>\n",
              "      <td>1</td>\n",
              "      <td>80</td>\n",
              "      <td>42.9</td>\n",
              "      <td>...</td>\n",
              "      <td>540</td>\n",
              "      <td>0.8</td>\n",
              "      <td>4.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.40</td>\n",
              "      <td>4.00</td>\n",
              "      <td>3.80</td>\n",
              "      <td>4.00</td>\n",
              "      <td>3.00</td>\n",
              "      <td>18.20</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>286</th>\n",
              "      <td>294</td>\n",
              "      <td>Liverpool</td>\n",
              "      <td>M</td>\n",
              "      <td>Diogo J.</td>\n",
              "      <td>7.8</td>\n",
              "      <td>2.1</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>77</td>\n",
              "      <td>30.4</td>\n",
              "      <td>...</td>\n",
              "      <td>261</td>\n",
              "      <td>1.2</td>\n",
              "      <td>3.3</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.56</td>\n",
              "      <td>3.69</td>\n",
              "      <td>3.30</td>\n",
              "      <td>3.82</td>\n",
              "      <td>3.82</td>\n",
              "      <td>18.19</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>418</th>\n",
              "      <td>513</td>\n",
              "      <td>Tottenham</td>\n",
              "      <td>M</td>\n",
              "      <td>Sarr</td>\n",
              "      <td>4.6</td>\n",
              "      <td>3.4</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>78</td>\n",
              "      <td>36.7</td>\n",
              "      <td>...</td>\n",
              "      <td>384</td>\n",
              "      <td>1.0</td>\n",
              "      <td>3.6</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.28</td>\n",
              "      <td>3.76</td>\n",
              "      <td>3.92</td>\n",
              "      <td>3.60</td>\n",
              "      <td>3.44</td>\n",
              "      <td>18.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>16</th>\n",
              "      <td>135</td>\n",
              "      <td>Brighton</td>\n",
              "      <td>F</td>\n",
              "      <td>João Pedro</td>\n",
              "      <td>5.4</td>\n",
              "      <td>11.5</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>75</td>\n",
              "      <td>36.7</td>\n",
              "      <td>...</td>\n",
              "      <td>279</td>\n",
              "      <td>1.1</td>\n",
              "      <td>3.5</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.50</td>\n",
              "      <td>3.20</td>\n",
              "      <td>3.50</td>\n",
              "      <td>3.80</td>\n",
              "      <td>3.80</td>\n",
              "      <td>17.80</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>182</th>\n",
              "      <td>140</td>\n",
              "      <td>Brighton</td>\n",
              "      <td>M</td>\n",
              "      <td>March</td>\n",
              "      <td>6.5</td>\n",
              "      <td>7.6</td>\n",
              "      <td>3</td>\n",
              "      <td>0</td>\n",
              "      <td>85</td>\n",
              "      <td>35.5</td>\n",
              "      <td>...</td>\n",
              "      <td>314</td>\n",
              "      <td>1.1</td>\n",
              "      <td>3.5</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.50</td>\n",
              "      <td>3.20</td>\n",
              "      <td>3.50</td>\n",
              "      <td>3.80</td>\n",
              "      <td>3.80</td>\n",
              "      <td>17.80</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>335</th>\n",
              "      <td>353</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>M</td>\n",
              "      <td>Foden</td>\n",
              "      <td>7.6</td>\n",
              "      <td>13.7</td>\n",
              "      <td>1</td>\n",
              "      <td>3</td>\n",
              "      <td>130</td>\n",
              "      <td>49.9</td>\n",
              "      <td>...</td>\n",
              "      <td>425</td>\n",
              "      <td>1.3</td>\n",
              "      <td>3.2</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.80</td>\n",
              "      <td>3.44</td>\n",
              "      <td>3.32</td>\n",
              "      <td>3.44</td>\n",
              "      <td>3.80</td>\n",
              "      <td>17.80</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>602</th>\n",
              "      <td>350</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>D</td>\n",
              "      <td>Rúben</td>\n",
              "      <td>5.5</td>\n",
              "      <td>8.7</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>91</td>\n",
              "      <td>15.6</td>\n",
              "      <td>...</td>\n",
              "      <td>450</td>\n",
              "      <td>1.3</td>\n",
              "      <td>3.2</td>\n",
              "      <td>0.9</td>\n",
              "      <td>3.80</td>\n",
              "      <td>3.44</td>\n",
              "      <td>3.32</td>\n",
              "      <td>3.44</td>\n",
              "      <td>3.80</td>\n",
              "      <td>17.80</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>608</th>\n",
              "      <td>616</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>D</td>\n",
              "      <td>Gvardiol</td>\n",
              "      <td>5.1</td>\n",
              "      <td>5.5</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>89</td>\n",
              "      <td>15.5</td>\n",
              "      <td>...</td>\n",
              "      <td>371</td>\n",
              "      <td>1.3</td>\n",
              "      <td>3.2</td>\n",
              "      <td>0.9</td>\n",
              "      <td>3.80</td>\n",
              "      <td>3.44</td>\n",
              "      <td>3.32</td>\n",
              "      <td>3.44</td>\n",
              "      <td>3.80</td>\n",
              "      <td>17.80</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>348</th>\n",
              "      <td>376</td>\n",
              "      <td>Manchester United</td>\n",
              "      <td>M</td>\n",
              "      <td>Casemiro</td>\n",
              "      <td>5.4</td>\n",
              "      <td>3.8</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>86</td>\n",
              "      <td>31.9</td>\n",
              "      <td>...</td>\n",
              "      <td>513</td>\n",
              "      <td>1.1</td>\n",
              "      <td>3.4</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.54</td>\n",
              "      <td>3.82</td>\n",
              "      <td>3.40</td>\n",
              "      <td>3.12</td>\n",
              "      <td>3.68</td>\n",
              "      <td>17.56</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>265</th>\n",
              "      <td>601</td>\n",
              "      <td>Everton</td>\n",
              "      <td>M</td>\n",
              "      <td>Danjuma</td>\n",
              "      <td>5.5</td>\n",
              "      <td>0.2</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>30</td>\n",
              "      <td>26.8</td>\n",
              "      <td>...</td>\n",
              "      <td>353</td>\n",
              "      <td>0.9</td>\n",
              "      <td>3.6</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.76</td>\n",
              "      <td>3.12</td>\n",
              "      <td>3.76</td>\n",
              "      <td>3.44</td>\n",
              "      <td>3.28</td>\n",
              "      <td>17.36</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>599</th>\n",
              "      <td>341</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>D</td>\n",
              "      <td>Akanji</td>\n",
              "      <td>5.0</td>\n",
              "      <td>8.3</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>107</td>\n",
              "      <td>15.8</td>\n",
              "      <td>...</td>\n",
              "      <td>450</td>\n",
              "      <td>1.3</td>\n",
              "      <td>3.1</td>\n",
              "      <td>0.9</td>\n",
              "      <td>3.65</td>\n",
              "      <td>3.32</td>\n",
              "      <td>3.21</td>\n",
              "      <td>3.32</td>\n",
              "      <td>3.65</td>\n",
              "      <td>17.15</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>603</th>\n",
              "      <td>357</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>D</td>\n",
              "      <td>Laporte</td>\n",
              "      <td>4.9</td>\n",
              "      <td>0.1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>4</td>\n",
              "      <td>2.9</td>\n",
              "      <td>...</td>\n",
              "      <td>11</td>\n",
              "      <td>1.3</td>\n",
              "      <td>3.1</td>\n",
              "      <td>0.9</td>\n",
              "      <td>3.65</td>\n",
              "      <td>3.32</td>\n",
              "      <td>3.21</td>\n",
              "      <td>3.32</td>\n",
              "      <td>3.65</td>\n",
              "      <td>17.15</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>54</th>\n",
              "      <td>297</td>\n",
              "      <td>Liverpool</td>\n",
              "      <td>F</td>\n",
              "      <td>Gakpo</td>\n",
              "      <td>7.3</td>\n",
              "      <td>3.1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>41</td>\n",
              "      <td>17.9</td>\n",
              "      <td>...</td>\n",
              "      <td>273</td>\n",
              "      <td>1.2</td>\n",
              "      <td>3.1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.32</td>\n",
              "      <td>3.43</td>\n",
              "      <td>3.10</td>\n",
              "      <td>3.54</td>\n",
              "      <td>3.54</td>\n",
              "      <td>16.93</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>274</th>\n",
              "      <td>270</td>\n",
              "      <td>Fulham</td>\n",
              "      <td>M</td>\n",
              "      <td>De Cordova-Reid</td>\n",
              "      <td>5.5</td>\n",
              "      <td>0.2</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>54</td>\n",
              "      <td>18.5</td>\n",
              "      <td>...</td>\n",
              "      <td>359</td>\n",
              "      <td>0.9</td>\n",
              "      <td>3.5</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.35</td>\n",
              "      <td>3.35</td>\n",
              "      <td>3.80</td>\n",
              "      <td>3.20</td>\n",
              "      <td>3.20</td>\n",
              "      <td>16.90</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>525</th>\n",
              "      <td>195</td>\n",
              "      <td>Chelsea</td>\n",
              "      <td>D</td>\n",
              "      <td>Chilwell</td>\n",
              "      <td>5.6</td>\n",
              "      <td>22.5</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>66</td>\n",
              "      <td>28.1</td>\n",
              "      <td>...</td>\n",
              "      <td>334</td>\n",
              "      <td>1.1</td>\n",
              "      <td>3.3</td>\n",
              "      <td>-0.2</td>\n",
              "      <td>3.43</td>\n",
              "      <td>3.17</td>\n",
              "      <td>3.56</td>\n",
              "      <td>3.30</td>\n",
              "      <td>3.43</td>\n",
              "      <td>16.89</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>13</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>F</td>\n",
              "      <td>Nketiah</td>\n",
              "      <td>5.5</td>\n",
              "      <td>5.6</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>67</td>\n",
              "      <td>27.6</td>\n",
              "      <td>...</td>\n",
              "      <td>425</td>\n",
              "      <td>1.2</td>\n",
              "      <td>3.2</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.56</td>\n",
              "      <td>3.32</td>\n",
              "      <td>3.08</td>\n",
              "      <td>3.68</td>\n",
              "      <td>3.20</td>\n",
              "      <td>16.84</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>50 rows × 22 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-2b9579e9-dc00-43fe-a6e6-d6e030a751c4')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-2b9579e9-dc00-43fe-a6e6-d6e030a751c4 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-2b9579e9-dc00-43fe-a6e6-d6e030a751c4');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-0e6a2109-ed64-4677-80ec-2d44444f4d1b\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-0e6a2109-ed64-4677-80ec-2d44444f4d1b')\"\n",
              "            title=\"Suggest charts.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-0e6a2109-ed64-4677-80ec-2d44444f4d1b button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 58
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "Top50 = rawdfgw228x.nlargest(50, '5GW Total')\n",
        "Top50"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "id": "Vuuihhw-Jx7s",
        "outputId": "97bbf562-b83c-44fc-cb66-5fbd25ad9039"
      },
      "execution_count": 60,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "      id               team pos             name  cost  selected_by_percent  \\\n",
              "74   355    Manchester City   F          Haaland  14.1                 92.4   \n",
              "293  308          Liverpool   M            Salah  12.5                 30.2   \n",
              "163  108          Brentford   M           Mbeumo   6.9                 29.5   \n",
              "115   19            Arsenal   M             Saka   8.7                 64.8   \n",
              "347  373  Manchester United   M      B.Fernandes   8.4                 20.1   \n",
              "34   211            Chelsea   F        N.Jackson   6.9                  8.0   \n",
              "73   343    Manchester City   F        J.Alvarez   7.0                 31.2   \n",
              "356  396  Manchester United   M         Rashford   8.9                 30.3   \n",
              "248  226     Crystal Palace   M              Eze   6.3                  8.2   \n",
              "423  526           West Ham   M            Bowen   7.1                 10.4   \n",
              "415  504          Tottenham   M         Maddison   7.9                 31.2   \n",
              "53   293          Liverpool   F           Darwin   7.4                 12.1   \n",
              "184  143           Brighton   M           Mitoma   6.6                 42.8   \n",
              "420  516          Tottenham   M              Son   9.2                 18.6   \n",
              "291  303          Liverpool   M        Luis Díaz   7.6                 10.1   \n",
              "366  412   Newcastle United   M           Gordon   5.6                  4.5   \n",
              "12   119          Brentford   F            Wissa   6.0                 12.1   \n",
              "341  365    Manchester City   M          Rodrigo   5.7                  8.9   \n",
              "125   43        Aston Villa   M     Douglas Luiz   5.4                  2.0   \n",
              "230  199            Chelsea   M             Enzo   4.9                  3.6   \n",
              "235  216            Chelsea   M         Sterling   7.1                 12.7   \n",
              "15   132           Brighton   F         Ferguson   6.0                  7.8   \n",
              "39   225     Crystal Palace   F          Edouard   5.6                  5.8   \n",
              "600  342    Manchester City   D              Aké   5.1                  7.0   \n",
              "112   14            Arsenal   M         Ødegaard   8.5                 21.1   \n",
              "5     60        Aston Villa   F          Watkins   7.9                 17.6   \n",
              "60   326         Luton Town   F           Morris   5.5                  5.1   \n",
              "607  369    Manchester City   D           Walker   5.3                 15.1   \n",
              "134  599        Aston Villa   M            Diaby   6.6                 11.1   \n",
              "428  539           West Ham   M        L.Paquetá   6.0                  1.8   \n",
              "258  249            Everton   M       A.Doucoure   5.5                  0.6   \n",
              "121   34        Aston Villa   M           Bailey   5.5                  1.5   \n",
              "432  664           West Ham   M      Ward-Prowse   6.3                 11.8   \n",
              "78   415   Newcastle United   F             Isak   7.6                 22.4   \n",
              "9     85        Bournemouth   F          Solanke   6.4                  2.4   \n",
              "286  294          Liverpool   M         Diogo J.   7.8                  2.1   \n",
              "418  513          Tottenham   M             Sarr   4.6                  3.4   \n",
              "16   135           Brighton   F       João Pedro   5.4                 11.5   \n",
              "182  140           Brighton   M            March   6.5                  7.6   \n",
              "335  353    Manchester City   M            Foden   7.6                 13.7   \n",
              "602  350    Manchester City   D            Rúben   5.5                  8.7   \n",
              "608  616    Manchester City   D         Gvardiol   5.1                  5.5   \n",
              "348  376  Manchester United   M         Casemiro   5.4                  3.8   \n",
              "265  601            Everton   M          Danjuma   5.5                  0.2   \n",
              "599  341    Manchester City   D           Akanji   5.0                  8.3   \n",
              "603  357    Manchester City   D          Laporte   4.9                  0.1   \n",
              "54   297          Liverpool   F            Gakpo   7.3                  3.1   \n",
              "274  270             Fulham   M  De Cordova-Reid   5.5                  0.2   \n",
              "525  195            Chelsea   D         Chilwell   5.6                 22.5   \n",
              "2     13            Arsenal   F          Nketiah   5.5                  5.6   \n",
              "\n",
              "     goals_scored  assists  bps  ict_index  ...  minutes  home_adjustment  \\\n",
              "74              8        1  200       77.7  ...      529              1.3   \n",
              "293             3        4  146       69.8  ...      521              1.2   \n",
              "163             4        0   98       50.7  ...      540              1.1   \n",
              "115             3        3  166       73.1  ...      538              1.2   \n",
              "347             2        1  113       59.0  ...      540              1.1   \n",
              "34              1        0   24       38.4  ...      509              1.1   \n",
              "73              2        5  157       57.2  ...      505              1.3   \n",
              "356             1        2   60       42.7  ...      531              1.1   \n",
              "248             1        0   87       56.6  ...      540              1.0   \n",
              "423             4        1  118       50.8  ...      540              1.0   \n",
              "415             2        4  149       68.1  ...      504              1.0   \n",
              "53              3        2   95       29.0  ...      219              1.2   \n",
              "184             3        3  131       61.2  ...      485              1.1   \n",
              "420             5        0  150       55.1  ...      482              1.0   \n",
              "291             2        0   61       33.0  ...      382              1.2   \n",
              "366             2        3  107       39.5  ...      451              1.2   \n",
              "12              2        1   79       35.1  ...      509              1.1   \n",
              "341             2        1  125       44.1  ...      480              1.3   \n",
              "125             2        0  121       31.0  ...      489              1.1   \n",
              "230             0        0   58       36.0  ...      507              1.1   \n",
              "235             2        1   84       51.6  ...      530              1.1   \n",
              "15              4        0  107       37.9  ...      255              1.1   \n",
              "39              4        0  114       51.8  ...      518              1.0   \n",
              "600             1        0   84       13.6  ...      292              1.3   \n",
              "112             2        0   90       42.2  ...      532              1.2   \n",
              "5               1        4   85       40.8  ...      500              1.1   \n",
              "60              2        1   80       29.0  ...      433              0.8   \n",
              "607             0        1  136       23.9  ...      540              1.3   \n",
              "134             2        2  102       41.5  ...      481              1.1   \n",
              "428             1        1  102       32.7  ...      530              1.0   \n",
              "258             2        0   83       44.2  ...      529              0.9   \n",
              "121             2        1   64       20.7  ...      201              1.1   \n",
              "432             2        3  136       39.1  ...      440              1.0   \n",
              "78              3        0   97       25.6  ...      296              1.2   \n",
              "9               3        1   80       42.9  ...      540              0.8   \n",
              "286             2        2   77       30.4  ...      261              1.2   \n",
              "418             1        1   78       36.7  ...      384              1.0   \n",
              "16              2        0   75       36.7  ...      279              1.1   \n",
              "182             3        0   85       35.5  ...      314              1.1   \n",
              "335             1        3  130       49.9  ...      425              1.3   \n",
              "602             0        0   91       15.6  ...      450              1.3   \n",
              "608             0        0   89       15.5  ...      371              1.3   \n",
              "348             1        0   86       31.9  ...      513              1.1   \n",
              "265             1        0   30       26.8  ...      353              0.9   \n",
              "599             0        0  107       15.8  ...      450              1.3   \n",
              "603             0        0    4        2.9  ...       11              1.3   \n",
              "54              1        0   41       17.9  ...      273              1.2   \n",
              "274             1        1   54       18.5  ...      359              0.9   \n",
              "525             0        1   66       28.1  ...      334              1.1   \n",
              "2               2        1   67       27.6  ...      425              1.2   \n",
              "\n",
              "     xPallgw  xCSP   gw7   gw9   gw8  gw10  gw11  5GW Total  \n",
              "74       7.3   NaN  9.95  8.36  7.83  8.36  9.95      44.45  \n",
              "293      6.3   NaN  7.16  7.59  6.30  8.02  8.02      37.09  \n",
              "163      6.1   NaN  7.33  6.92  6.10  6.10  6.51      32.96  \n",
              "115      5.5   NaN  6.55  5.85  5.15  6.90  5.50      29.95  \n",
              "347      5.2   NaN  5.52  6.16  5.20  4.56  5.84      27.28  \n",
              "34       4.8   NaN  5.08  4.52  5.36  4.80  5.08      24.84  \n",
              "73       4.2   NaN  5.30  4.64  4.42  4.64  5.30      24.30  \n",
              "356      4.5   NaN  4.75  5.25  4.50  4.00  5.00      23.50  \n",
              "248      4.6   NaN  4.34  4.34  5.12  4.60  4.86      23.26  \n",
              "423      4.7   NaN  5.24  4.43  4.16  4.97  4.43      23.23  \n",
              "415      4.6   NaN  4.08  4.86  5.12  4.60  4.34      23.00  \n",
              "53       4.0   NaN  4.40  4.60  4.00  4.80  4.80      22.60  \n",
              "184      4.3   NaN  4.30  3.84  4.30  4.76  4.76      21.96  \n",
              "420      4.3   NaN  3.84  4.53  4.76  4.30  4.07      21.50  \n",
              "291      3.8   NaN  4.16  4.34  3.80  4.52  4.52      21.34  \n",
              "366      3.9   NaN  4.47  4.09  4.28  4.47  3.90      21.21  \n",
              "12       4.0   NaN  4.60  4.40  4.00  4.00  4.20      21.20  \n",
              "341      3.7   NaN  4.55  4.04  3.87  4.04  4.55      21.05  \n",
              "125      3.8   NaN  3.80  3.98  4.34  4.34  4.34      20.80  \n",
              "230      4.0   NaN  4.20  3.80  4.40  4.00  4.20      20.60  \n",
              "235      4.0   NaN  4.20  3.80  4.40  4.00  4.20      20.60  \n",
              "15       4.0   NaN  4.00  3.60  4.00  4.40  4.40      20.40  \n",
              "39       4.0   NaN  3.80  3.80  4.40  4.00  4.20      20.20  \n",
              "600      3.5   0.9  4.25  3.80  3.65  3.80  4.25      19.75  \n",
              "112      3.7   NaN  4.21  3.87  3.53  4.38  3.70      19.69  \n",
              "5        3.6   NaN  3.60  3.76  4.08  4.08  4.08      19.60  \n",
              "60       3.9   NaN  5.42  3.90  3.52  3.33  3.14      19.31  \n",
              "607      3.4   0.9  4.10  3.68  3.54  3.68  4.10      19.10  \n",
              "134      3.5   NaN  3.50  3.65  3.95  3.95  3.95      19.00  \n",
              "428      3.8   NaN  4.16  3.62  3.44  3.98  3.62      18.82  \n",
              "258      3.9   NaN  4.09  3.33  4.09  3.71  3.52      18.74  \n",
              "121      3.4   NaN  3.40  3.54  3.82  3.82  3.82      18.40  \n",
              "432      3.7   NaN  4.04  3.53  3.36  3.87  3.53      18.33  \n",
              "78       3.4   NaN  3.82  3.54  3.68  3.82  3.40      18.26  \n",
              "9        4.0   NaN  3.40  4.00  3.80  4.00  3.00      18.20  \n",
              "286      3.3   NaN  3.56  3.69  3.30  3.82  3.82      18.19  \n",
              "418      3.6   NaN  3.28  3.76  3.92  3.60  3.44      18.00  \n",
              "16       3.5   NaN  3.50  3.20  3.50  3.80  3.80      17.80  \n",
              "182      3.5   NaN  3.50  3.20  3.50  3.80  3.80      17.80  \n",
              "335      3.2   NaN  3.80  3.44  3.32  3.44  3.80      17.80  \n",
              "602      3.2   0.9  3.80  3.44  3.32  3.44  3.80      17.80  \n",
              "608      3.2   0.9  3.80  3.44  3.32  3.44  3.80      17.80  \n",
              "348      3.4   NaN  3.54  3.82  3.40  3.12  3.68      17.56  \n",
              "265      3.6   NaN  3.76  3.12  3.76  3.44  3.28      17.36  \n",
              "599      3.1   0.9  3.65  3.32  3.21  3.32  3.65      17.15  \n",
              "603      3.1   0.9  3.65  3.32  3.21  3.32  3.65      17.15  \n",
              "54       3.1   NaN  3.32  3.43  3.10  3.54  3.54      16.93  \n",
              "274      3.5   NaN  3.35  3.35  3.80  3.20  3.20      16.90  \n",
              "525      3.3  -0.2  3.43  3.17  3.56  3.30  3.43      16.89  \n",
              "2        3.2   NaN  3.56  3.32  3.08  3.68  3.20      16.84  \n",
              "\n",
              "[50 rows x 22 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-7a438ee0-3a39-42f3-a0b4-e94995f7173b\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>team</th>\n",
              "      <th>pos</th>\n",
              "      <th>name</th>\n",
              "      <th>cost</th>\n",
              "      <th>selected_by_percent</th>\n",
              "      <th>goals_scored</th>\n",
              "      <th>assists</th>\n",
              "      <th>bps</th>\n",
              "      <th>ict_index</th>\n",
              "      <th>...</th>\n",
              "      <th>minutes</th>\n",
              "      <th>home_adjustment</th>\n",
              "      <th>xPallgw</th>\n",
              "      <th>xCSP</th>\n",
              "      <th>gw7</th>\n",
              "      <th>gw9</th>\n",
              "      <th>gw8</th>\n",
              "      <th>gw10</th>\n",
              "      <th>gw11</th>\n",
              "      <th>5GW Total</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>74</th>\n",
              "      <td>355</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>F</td>\n",
              "      <td>Haaland</td>\n",
              "      <td>14.1</td>\n",
              "      <td>92.4</td>\n",
              "      <td>8</td>\n",
              "      <td>1</td>\n",
              "      <td>200</td>\n",
              "      <td>77.7</td>\n",
              "      <td>...</td>\n",
              "      <td>529</td>\n",
              "      <td>1.3</td>\n",
              "      <td>7.3</td>\n",
              "      <td>NaN</td>\n",
              "      <td>9.95</td>\n",
              "      <td>8.36</td>\n",
              "      <td>7.83</td>\n",
              "      <td>8.36</td>\n",
              "      <td>9.95</td>\n",
              "      <td>44.45</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>293</th>\n",
              "      <td>308</td>\n",
              "      <td>Liverpool</td>\n",
              "      <td>M</td>\n",
              "      <td>Salah</td>\n",
              "      <td>12.5</td>\n",
              "      <td>30.2</td>\n",
              "      <td>3</td>\n",
              "      <td>4</td>\n",
              "      <td>146</td>\n",
              "      <td>69.8</td>\n",
              "      <td>...</td>\n",
              "      <td>521</td>\n",
              "      <td>1.2</td>\n",
              "      <td>6.3</td>\n",
              "      <td>NaN</td>\n",
              "      <td>7.16</td>\n",
              "      <td>7.59</td>\n",
              "      <td>6.30</td>\n",
              "      <td>8.02</td>\n",
              "      <td>8.02</td>\n",
              "      <td>37.09</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>163</th>\n",
              "      <td>108</td>\n",
              "      <td>Brentford</td>\n",
              "      <td>M</td>\n",
              "      <td>Mbeumo</td>\n",
              "      <td>6.9</td>\n",
              "      <td>29.5</td>\n",
              "      <td>4</td>\n",
              "      <td>0</td>\n",
              "      <td>98</td>\n",
              "      <td>50.7</td>\n",
              "      <td>...</td>\n",
              "      <td>540</td>\n",
              "      <td>1.1</td>\n",
              "      <td>6.1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>7.33</td>\n",
              "      <td>6.92</td>\n",
              "      <td>6.10</td>\n",
              "      <td>6.10</td>\n",
              "      <td>6.51</td>\n",
              "      <td>32.96</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>115</th>\n",
              "      <td>19</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>M</td>\n",
              "      <td>Saka</td>\n",
              "      <td>8.7</td>\n",
              "      <td>64.8</td>\n",
              "      <td>3</td>\n",
              "      <td>3</td>\n",
              "      <td>166</td>\n",
              "      <td>73.1</td>\n",
              "      <td>...</td>\n",
              "      <td>538</td>\n",
              "      <td>1.2</td>\n",
              "      <td>5.5</td>\n",
              "      <td>NaN</td>\n",
              "      <td>6.55</td>\n",
              "      <td>5.85</td>\n",
              "      <td>5.15</td>\n",
              "      <td>6.90</td>\n",
              "      <td>5.50</td>\n",
              "      <td>29.95</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>347</th>\n",
              "      <td>373</td>\n",
              "      <td>Manchester United</td>\n",
              "      <td>M</td>\n",
              "      <td>B.Fernandes</td>\n",
              "      <td>8.4</td>\n",
              "      <td>20.1</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>113</td>\n",
              "      <td>59.0</td>\n",
              "      <td>...</td>\n",
              "      <td>540</td>\n",
              "      <td>1.1</td>\n",
              "      <td>5.2</td>\n",
              "      <td>NaN</td>\n",
              "      <td>5.52</td>\n",
              "      <td>6.16</td>\n",
              "      <td>5.20</td>\n",
              "      <td>4.56</td>\n",
              "      <td>5.84</td>\n",
              "      <td>27.28</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>34</th>\n",
              "      <td>211</td>\n",
              "      <td>Chelsea</td>\n",
              "      <td>F</td>\n",
              "      <td>N.Jackson</td>\n",
              "      <td>6.9</td>\n",
              "      <td>8.0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>24</td>\n",
              "      <td>38.4</td>\n",
              "      <td>...</td>\n",
              "      <td>509</td>\n",
              "      <td>1.1</td>\n",
              "      <td>4.8</td>\n",
              "      <td>NaN</td>\n",
              "      <td>5.08</td>\n",
              "      <td>4.52</td>\n",
              "      <td>5.36</td>\n",
              "      <td>4.80</td>\n",
              "      <td>5.08</td>\n",
              "      <td>24.84</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>73</th>\n",
              "      <td>343</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>F</td>\n",
              "      <td>J.Alvarez</td>\n",
              "      <td>7.0</td>\n",
              "      <td>31.2</td>\n",
              "      <td>2</td>\n",
              "      <td>5</td>\n",
              "      <td>157</td>\n",
              "      <td>57.2</td>\n",
              "      <td>...</td>\n",
              "      <td>505</td>\n",
              "      <td>1.3</td>\n",
              "      <td>4.2</td>\n",
              "      <td>NaN</td>\n",
              "      <td>5.30</td>\n",
              "      <td>4.64</td>\n",
              "      <td>4.42</td>\n",
              "      <td>4.64</td>\n",
              "      <td>5.30</td>\n",
              "      <td>24.30</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>356</th>\n",
              "      <td>396</td>\n",
              "      <td>Manchester United</td>\n",
              "      <td>M</td>\n",
              "      <td>Rashford</td>\n",
              "      <td>8.9</td>\n",
              "      <td>30.3</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>60</td>\n",
              "      <td>42.7</td>\n",
              "      <td>...</td>\n",
              "      <td>531</td>\n",
              "      <td>1.1</td>\n",
              "      <td>4.5</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4.75</td>\n",
              "      <td>5.25</td>\n",
              "      <td>4.50</td>\n",
              "      <td>4.00</td>\n",
              "      <td>5.00</td>\n",
              "      <td>23.50</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>248</th>\n",
              "      <td>226</td>\n",
              "      <td>Crystal Palace</td>\n",
              "      <td>M</td>\n",
              "      <td>Eze</td>\n",
              "      <td>6.3</td>\n",
              "      <td>8.2</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>87</td>\n",
              "      <td>56.6</td>\n",
              "      <td>...</td>\n",
              "      <td>540</td>\n",
              "      <td>1.0</td>\n",
              "      <td>4.6</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4.34</td>\n",
              "      <td>4.34</td>\n",
              "      <td>5.12</td>\n",
              "      <td>4.60</td>\n",
              "      <td>4.86</td>\n",
              "      <td>23.26</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>423</th>\n",
              "      <td>526</td>\n",
              "      <td>West Ham</td>\n",
              "      <td>M</td>\n",
              "      <td>Bowen</td>\n",
              "      <td>7.1</td>\n",
              "      <td>10.4</td>\n",
              "      <td>4</td>\n",
              "      <td>1</td>\n",
              "      <td>118</td>\n",
              "      <td>50.8</td>\n",
              "      <td>...</td>\n",
              "      <td>540</td>\n",
              "      <td>1.0</td>\n",
              "      <td>4.7</td>\n",
              "      <td>NaN</td>\n",
              "      <td>5.24</td>\n",
              "      <td>4.43</td>\n",
              "      <td>4.16</td>\n",
              "      <td>4.97</td>\n",
              "      <td>4.43</td>\n",
              "      <td>23.23</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>415</th>\n",
              "      <td>504</td>\n",
              "      <td>Tottenham</td>\n",
              "      <td>M</td>\n",
              "      <td>Maddison</td>\n",
              "      <td>7.9</td>\n",
              "      <td>31.2</td>\n",
              "      <td>2</td>\n",
              "      <td>4</td>\n",
              "      <td>149</td>\n",
              "      <td>68.1</td>\n",
              "      <td>...</td>\n",
              "      <td>504</td>\n",
              "      <td>1.0</td>\n",
              "      <td>4.6</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4.08</td>\n",
              "      <td>4.86</td>\n",
              "      <td>5.12</td>\n",
              "      <td>4.60</td>\n",
              "      <td>4.34</td>\n",
              "      <td>23.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>53</th>\n",
              "      <td>293</td>\n",
              "      <td>Liverpool</td>\n",
              "      <td>F</td>\n",
              "      <td>Darwin</td>\n",
              "      <td>7.4</td>\n",
              "      <td>12.1</td>\n",
              "      <td>3</td>\n",
              "      <td>2</td>\n",
              "      <td>95</td>\n",
              "      <td>29.0</td>\n",
              "      <td>...</td>\n",
              "      <td>219</td>\n",
              "      <td>1.2</td>\n",
              "      <td>4.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4.40</td>\n",
              "      <td>4.60</td>\n",
              "      <td>4.00</td>\n",
              "      <td>4.80</td>\n",
              "      <td>4.80</td>\n",
              "      <td>22.60</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>184</th>\n",
              "      <td>143</td>\n",
              "      <td>Brighton</td>\n",
              "      <td>M</td>\n",
              "      <td>Mitoma</td>\n",
              "      <td>6.6</td>\n",
              "      <td>42.8</td>\n",
              "      <td>3</td>\n",
              "      <td>3</td>\n",
              "      <td>131</td>\n",
              "      <td>61.2</td>\n",
              "      <td>...</td>\n",
              "      <td>485</td>\n",
              "      <td>1.1</td>\n",
              "      <td>4.3</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4.30</td>\n",
              "      <td>3.84</td>\n",
              "      <td>4.30</td>\n",
              "      <td>4.76</td>\n",
              "      <td>4.76</td>\n",
              "      <td>21.96</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>420</th>\n",
              "      <td>516</td>\n",
              "      <td>Tottenham</td>\n",
              "      <td>M</td>\n",
              "      <td>Son</td>\n",
              "      <td>9.2</td>\n",
              "      <td>18.6</td>\n",
              "      <td>5</td>\n",
              "      <td>0</td>\n",
              "      <td>150</td>\n",
              "      <td>55.1</td>\n",
              "      <td>...</td>\n",
              "      <td>482</td>\n",
              "      <td>1.0</td>\n",
              "      <td>4.3</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.84</td>\n",
              "      <td>4.53</td>\n",
              "      <td>4.76</td>\n",
              "      <td>4.30</td>\n",
              "      <td>4.07</td>\n",
              "      <td>21.50</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>291</th>\n",
              "      <td>303</td>\n",
              "      <td>Liverpool</td>\n",
              "      <td>M</td>\n",
              "      <td>Luis Díaz</td>\n",
              "      <td>7.6</td>\n",
              "      <td>10.1</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>61</td>\n",
              "      <td>33.0</td>\n",
              "      <td>...</td>\n",
              "      <td>382</td>\n",
              "      <td>1.2</td>\n",
              "      <td>3.8</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4.16</td>\n",
              "      <td>4.34</td>\n",
              "      <td>3.80</td>\n",
              "      <td>4.52</td>\n",
              "      <td>4.52</td>\n",
              "      <td>21.34</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>366</th>\n",
              "      <td>412</td>\n",
              "      <td>Newcastle United</td>\n",
              "      <td>M</td>\n",
              "      <td>Gordon</td>\n",
              "      <td>5.6</td>\n",
              "      <td>4.5</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "      <td>107</td>\n",
              "      <td>39.5</td>\n",
              "      <td>...</td>\n",
              "      <td>451</td>\n",
              "      <td>1.2</td>\n",
              "      <td>3.9</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4.47</td>\n",
              "      <td>4.09</td>\n",
              "      <td>4.28</td>\n",
              "      <td>4.47</td>\n",
              "      <td>3.90</td>\n",
              "      <td>21.21</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>12</th>\n",
              "      <td>119</td>\n",
              "      <td>Brentford</td>\n",
              "      <td>F</td>\n",
              "      <td>Wissa</td>\n",
              "      <td>6.0</td>\n",
              "      <td>12.1</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>79</td>\n",
              "      <td>35.1</td>\n",
              "      <td>...</td>\n",
              "      <td>509</td>\n",
              "      <td>1.1</td>\n",
              "      <td>4.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4.60</td>\n",
              "      <td>4.40</td>\n",
              "      <td>4.00</td>\n",
              "      <td>4.00</td>\n",
              "      <td>4.20</td>\n",
              "      <td>21.20</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>341</th>\n",
              "      <td>365</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>M</td>\n",
              "      <td>Rodrigo</td>\n",
              "      <td>5.7</td>\n",
              "      <td>8.9</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>125</td>\n",
              "      <td>44.1</td>\n",
              "      <td>...</td>\n",
              "      <td>480</td>\n",
              "      <td>1.3</td>\n",
              "      <td>3.7</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4.55</td>\n",
              "      <td>4.04</td>\n",
              "      <td>3.87</td>\n",
              "      <td>4.04</td>\n",
              "      <td>4.55</td>\n",
              "      <td>21.05</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>125</th>\n",
              "      <td>43</td>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>M</td>\n",
              "      <td>Douglas Luiz</td>\n",
              "      <td>5.4</td>\n",
              "      <td>2.0</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>121</td>\n",
              "      <td>31.0</td>\n",
              "      <td>...</td>\n",
              "      <td>489</td>\n",
              "      <td>1.1</td>\n",
              "      <td>3.8</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.80</td>\n",
              "      <td>3.98</td>\n",
              "      <td>4.34</td>\n",
              "      <td>4.34</td>\n",
              "      <td>4.34</td>\n",
              "      <td>20.80</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>230</th>\n",
              "      <td>199</td>\n",
              "      <td>Chelsea</td>\n",
              "      <td>M</td>\n",
              "      <td>Enzo</td>\n",
              "      <td>4.9</td>\n",
              "      <td>3.6</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>58</td>\n",
              "      <td>36.0</td>\n",
              "      <td>...</td>\n",
              "      <td>507</td>\n",
              "      <td>1.1</td>\n",
              "      <td>4.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4.20</td>\n",
              "      <td>3.80</td>\n",
              "      <td>4.40</td>\n",
              "      <td>4.00</td>\n",
              "      <td>4.20</td>\n",
              "      <td>20.60</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>235</th>\n",
              "      <td>216</td>\n",
              "      <td>Chelsea</td>\n",
              "      <td>M</td>\n",
              "      <td>Sterling</td>\n",
              "      <td>7.1</td>\n",
              "      <td>12.7</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>84</td>\n",
              "      <td>51.6</td>\n",
              "      <td>...</td>\n",
              "      <td>530</td>\n",
              "      <td>1.1</td>\n",
              "      <td>4.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4.20</td>\n",
              "      <td>3.80</td>\n",
              "      <td>4.40</td>\n",
              "      <td>4.00</td>\n",
              "      <td>4.20</td>\n",
              "      <td>20.60</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>15</th>\n",
              "      <td>132</td>\n",
              "      <td>Brighton</td>\n",
              "      <td>F</td>\n",
              "      <td>Ferguson</td>\n",
              "      <td>6.0</td>\n",
              "      <td>7.8</td>\n",
              "      <td>4</td>\n",
              "      <td>0</td>\n",
              "      <td>107</td>\n",
              "      <td>37.9</td>\n",
              "      <td>...</td>\n",
              "      <td>255</td>\n",
              "      <td>1.1</td>\n",
              "      <td>4.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4.00</td>\n",
              "      <td>3.60</td>\n",
              "      <td>4.00</td>\n",
              "      <td>4.40</td>\n",
              "      <td>4.40</td>\n",
              "      <td>20.40</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>39</th>\n",
              "      <td>225</td>\n",
              "      <td>Crystal Palace</td>\n",
              "      <td>F</td>\n",
              "      <td>Edouard</td>\n",
              "      <td>5.6</td>\n",
              "      <td>5.8</td>\n",
              "      <td>4</td>\n",
              "      <td>0</td>\n",
              "      <td>114</td>\n",
              "      <td>51.8</td>\n",
              "      <td>...</td>\n",
              "      <td>518</td>\n",
              "      <td>1.0</td>\n",
              "      <td>4.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.80</td>\n",
              "      <td>3.80</td>\n",
              "      <td>4.40</td>\n",
              "      <td>4.00</td>\n",
              "      <td>4.20</td>\n",
              "      <td>20.20</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>600</th>\n",
              "      <td>342</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>D</td>\n",
              "      <td>Aké</td>\n",
              "      <td>5.1</td>\n",
              "      <td>7.0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>84</td>\n",
              "      <td>13.6</td>\n",
              "      <td>...</td>\n",
              "      <td>292</td>\n",
              "      <td>1.3</td>\n",
              "      <td>3.5</td>\n",
              "      <td>0.9</td>\n",
              "      <td>4.25</td>\n",
              "      <td>3.80</td>\n",
              "      <td>3.65</td>\n",
              "      <td>3.80</td>\n",
              "      <td>4.25</td>\n",
              "      <td>19.75</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>112</th>\n",
              "      <td>14</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>M</td>\n",
              "      <td>Ødegaard</td>\n",
              "      <td>8.5</td>\n",
              "      <td>21.1</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>90</td>\n",
              "      <td>42.2</td>\n",
              "      <td>...</td>\n",
              "      <td>532</td>\n",
              "      <td>1.2</td>\n",
              "      <td>3.7</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4.21</td>\n",
              "      <td>3.87</td>\n",
              "      <td>3.53</td>\n",
              "      <td>4.38</td>\n",
              "      <td>3.70</td>\n",
              "      <td>19.69</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>60</td>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>F</td>\n",
              "      <td>Watkins</td>\n",
              "      <td>7.9</td>\n",
              "      <td>17.6</td>\n",
              "      <td>1</td>\n",
              "      <td>4</td>\n",
              "      <td>85</td>\n",
              "      <td>40.8</td>\n",
              "      <td>...</td>\n",
              "      <td>500</td>\n",
              "      <td>1.1</td>\n",
              "      <td>3.6</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.60</td>\n",
              "      <td>3.76</td>\n",
              "      <td>4.08</td>\n",
              "      <td>4.08</td>\n",
              "      <td>4.08</td>\n",
              "      <td>19.60</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>60</th>\n",
              "      <td>326</td>\n",
              "      <td>Luton Town</td>\n",
              "      <td>F</td>\n",
              "      <td>Morris</td>\n",
              "      <td>5.5</td>\n",
              "      <td>5.1</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>80</td>\n",
              "      <td>29.0</td>\n",
              "      <td>...</td>\n",
              "      <td>433</td>\n",
              "      <td>0.8</td>\n",
              "      <td>3.9</td>\n",
              "      <td>NaN</td>\n",
              "      <td>5.42</td>\n",
              "      <td>3.90</td>\n",
              "      <td>3.52</td>\n",
              "      <td>3.33</td>\n",
              "      <td>3.14</td>\n",
              "      <td>19.31</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>607</th>\n",
              "      <td>369</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>D</td>\n",
              "      <td>Walker</td>\n",
              "      <td>5.3</td>\n",
              "      <td>15.1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>136</td>\n",
              "      <td>23.9</td>\n",
              "      <td>...</td>\n",
              "      <td>540</td>\n",
              "      <td>1.3</td>\n",
              "      <td>3.4</td>\n",
              "      <td>0.9</td>\n",
              "      <td>4.10</td>\n",
              "      <td>3.68</td>\n",
              "      <td>3.54</td>\n",
              "      <td>3.68</td>\n",
              "      <td>4.10</td>\n",
              "      <td>19.10</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>134</th>\n",
              "      <td>599</td>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>M</td>\n",
              "      <td>Diaby</td>\n",
              "      <td>6.6</td>\n",
              "      <td>11.1</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>102</td>\n",
              "      <td>41.5</td>\n",
              "      <td>...</td>\n",
              "      <td>481</td>\n",
              "      <td>1.1</td>\n",
              "      <td>3.5</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.50</td>\n",
              "      <td>3.65</td>\n",
              "      <td>3.95</td>\n",
              "      <td>3.95</td>\n",
              "      <td>3.95</td>\n",
              "      <td>19.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>428</th>\n",
              "      <td>539</td>\n",
              "      <td>West Ham</td>\n",
              "      <td>M</td>\n",
              "      <td>L.Paquetá</td>\n",
              "      <td>6.0</td>\n",
              "      <td>1.8</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>102</td>\n",
              "      <td>32.7</td>\n",
              "      <td>...</td>\n",
              "      <td>530</td>\n",
              "      <td>1.0</td>\n",
              "      <td>3.8</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4.16</td>\n",
              "      <td>3.62</td>\n",
              "      <td>3.44</td>\n",
              "      <td>3.98</td>\n",
              "      <td>3.62</td>\n",
              "      <td>18.82</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>258</th>\n",
              "      <td>249</td>\n",
              "      <td>Everton</td>\n",
              "      <td>M</td>\n",
              "      <td>A.Doucoure</td>\n",
              "      <td>5.5</td>\n",
              "      <td>0.6</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>83</td>\n",
              "      <td>44.2</td>\n",
              "      <td>...</td>\n",
              "      <td>529</td>\n",
              "      <td>0.9</td>\n",
              "      <td>3.9</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4.09</td>\n",
              "      <td>3.33</td>\n",
              "      <td>4.09</td>\n",
              "      <td>3.71</td>\n",
              "      <td>3.52</td>\n",
              "      <td>18.74</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>121</th>\n",
              "      <td>34</td>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>M</td>\n",
              "      <td>Bailey</td>\n",
              "      <td>5.5</td>\n",
              "      <td>1.5</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>64</td>\n",
              "      <td>20.7</td>\n",
              "      <td>...</td>\n",
              "      <td>201</td>\n",
              "      <td>1.1</td>\n",
              "      <td>3.4</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.40</td>\n",
              "      <td>3.54</td>\n",
              "      <td>3.82</td>\n",
              "      <td>3.82</td>\n",
              "      <td>3.82</td>\n",
              "      <td>18.40</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>432</th>\n",
              "      <td>664</td>\n",
              "      <td>West Ham</td>\n",
              "      <td>M</td>\n",
              "      <td>Ward-Prowse</td>\n",
              "      <td>6.3</td>\n",
              "      <td>11.8</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "      <td>136</td>\n",
              "      <td>39.1</td>\n",
              "      <td>...</td>\n",
              "      <td>440</td>\n",
              "      <td>1.0</td>\n",
              "      <td>3.7</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4.04</td>\n",
              "      <td>3.53</td>\n",
              "      <td>3.36</td>\n",
              "      <td>3.87</td>\n",
              "      <td>3.53</td>\n",
              "      <td>18.33</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>78</th>\n",
              "      <td>415</td>\n",
              "      <td>Newcastle United</td>\n",
              "      <td>F</td>\n",
              "      <td>Isak</td>\n",
              "      <td>7.6</td>\n",
              "      <td>22.4</td>\n",
              "      <td>3</td>\n",
              "      <td>0</td>\n",
              "      <td>97</td>\n",
              "      <td>25.6</td>\n",
              "      <td>...</td>\n",
              "      <td>296</td>\n",
              "      <td>1.2</td>\n",
              "      <td>3.4</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.82</td>\n",
              "      <td>3.54</td>\n",
              "      <td>3.68</td>\n",
              "      <td>3.82</td>\n",
              "      <td>3.40</td>\n",
              "      <td>18.26</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>85</td>\n",
              "      <td>Bournemouth</td>\n",
              "      <td>F</td>\n",
              "      <td>Solanke</td>\n",
              "      <td>6.4</td>\n",
              "      <td>2.4</td>\n",
              "      <td>3</td>\n",
              "      <td>1</td>\n",
              "      <td>80</td>\n",
              "      <td>42.9</td>\n",
              "      <td>...</td>\n",
              "      <td>540</td>\n",
              "      <td>0.8</td>\n",
              "      <td>4.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.40</td>\n",
              "      <td>4.00</td>\n",
              "      <td>3.80</td>\n",
              "      <td>4.00</td>\n",
              "      <td>3.00</td>\n",
              "      <td>18.20</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>286</th>\n",
              "      <td>294</td>\n",
              "      <td>Liverpool</td>\n",
              "      <td>M</td>\n",
              "      <td>Diogo J.</td>\n",
              "      <td>7.8</td>\n",
              "      <td>2.1</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>77</td>\n",
              "      <td>30.4</td>\n",
              "      <td>...</td>\n",
              "      <td>261</td>\n",
              "      <td>1.2</td>\n",
              "      <td>3.3</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.56</td>\n",
              "      <td>3.69</td>\n",
              "      <td>3.30</td>\n",
              "      <td>3.82</td>\n",
              "      <td>3.82</td>\n",
              "      <td>18.19</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>418</th>\n",
              "      <td>513</td>\n",
              "      <td>Tottenham</td>\n",
              "      <td>M</td>\n",
              "      <td>Sarr</td>\n",
              "      <td>4.6</td>\n",
              "      <td>3.4</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>78</td>\n",
              "      <td>36.7</td>\n",
              "      <td>...</td>\n",
              "      <td>384</td>\n",
              "      <td>1.0</td>\n",
              "      <td>3.6</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.28</td>\n",
              "      <td>3.76</td>\n",
              "      <td>3.92</td>\n",
              "      <td>3.60</td>\n",
              "      <td>3.44</td>\n",
              "      <td>18.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>16</th>\n",
              "      <td>135</td>\n",
              "      <td>Brighton</td>\n",
              "      <td>F</td>\n",
              "      <td>João Pedro</td>\n",
              "      <td>5.4</td>\n",
              "      <td>11.5</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>75</td>\n",
              "      <td>36.7</td>\n",
              "      <td>...</td>\n",
              "      <td>279</td>\n",
              "      <td>1.1</td>\n",
              "      <td>3.5</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.50</td>\n",
              "      <td>3.20</td>\n",
              "      <td>3.50</td>\n",
              "      <td>3.80</td>\n",
              "      <td>3.80</td>\n",
              "      <td>17.80</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>182</th>\n",
              "      <td>140</td>\n",
              "      <td>Brighton</td>\n",
              "      <td>M</td>\n",
              "      <td>March</td>\n",
              "      <td>6.5</td>\n",
              "      <td>7.6</td>\n",
              "      <td>3</td>\n",
              "      <td>0</td>\n",
              "      <td>85</td>\n",
              "      <td>35.5</td>\n",
              "      <td>...</td>\n",
              "      <td>314</td>\n",
              "      <td>1.1</td>\n",
              "      <td>3.5</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.50</td>\n",
              "      <td>3.20</td>\n",
              "      <td>3.50</td>\n",
              "      <td>3.80</td>\n",
              "      <td>3.80</td>\n",
              "      <td>17.80</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>335</th>\n",
              "      <td>353</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>M</td>\n",
              "      <td>Foden</td>\n",
              "      <td>7.6</td>\n",
              "      <td>13.7</td>\n",
              "      <td>1</td>\n",
              "      <td>3</td>\n",
              "      <td>130</td>\n",
              "      <td>49.9</td>\n",
              "      <td>...</td>\n",
              "      <td>425</td>\n",
              "      <td>1.3</td>\n",
              "      <td>3.2</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.80</td>\n",
              "      <td>3.44</td>\n",
              "      <td>3.32</td>\n",
              "      <td>3.44</td>\n",
              "      <td>3.80</td>\n",
              "      <td>17.80</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>602</th>\n",
              "      <td>350</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>D</td>\n",
              "      <td>Rúben</td>\n",
              "      <td>5.5</td>\n",
              "      <td>8.7</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>91</td>\n",
              "      <td>15.6</td>\n",
              "      <td>...</td>\n",
              "      <td>450</td>\n",
              "      <td>1.3</td>\n",
              "      <td>3.2</td>\n",
              "      <td>0.9</td>\n",
              "      <td>3.80</td>\n",
              "      <td>3.44</td>\n",
              "      <td>3.32</td>\n",
              "      <td>3.44</td>\n",
              "      <td>3.80</td>\n",
              "      <td>17.80</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>608</th>\n",
              "      <td>616</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>D</td>\n",
              "      <td>Gvardiol</td>\n",
              "      <td>5.1</td>\n",
              "      <td>5.5</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>89</td>\n",
              "      <td>15.5</td>\n",
              "      <td>...</td>\n",
              "      <td>371</td>\n",
              "      <td>1.3</td>\n",
              "      <td>3.2</td>\n",
              "      <td>0.9</td>\n",
              "      <td>3.80</td>\n",
              "      <td>3.44</td>\n",
              "      <td>3.32</td>\n",
              "      <td>3.44</td>\n",
              "      <td>3.80</td>\n",
              "      <td>17.80</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>348</th>\n",
              "      <td>376</td>\n",
              "      <td>Manchester United</td>\n",
              "      <td>M</td>\n",
              "      <td>Casemiro</td>\n",
              "      <td>5.4</td>\n",
              "      <td>3.8</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>86</td>\n",
              "      <td>31.9</td>\n",
              "      <td>...</td>\n",
              "      <td>513</td>\n",
              "      <td>1.1</td>\n",
              "      <td>3.4</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.54</td>\n",
              "      <td>3.82</td>\n",
              "      <td>3.40</td>\n",
              "      <td>3.12</td>\n",
              "      <td>3.68</td>\n",
              "      <td>17.56</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>265</th>\n",
              "      <td>601</td>\n",
              "      <td>Everton</td>\n",
              "      <td>M</td>\n",
              "      <td>Danjuma</td>\n",
              "      <td>5.5</td>\n",
              "      <td>0.2</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>30</td>\n",
              "      <td>26.8</td>\n",
              "      <td>...</td>\n",
              "      <td>353</td>\n",
              "      <td>0.9</td>\n",
              "      <td>3.6</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.76</td>\n",
              "      <td>3.12</td>\n",
              "      <td>3.76</td>\n",
              "      <td>3.44</td>\n",
              "      <td>3.28</td>\n",
              "      <td>17.36</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>599</th>\n",
              "      <td>341</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>D</td>\n",
              "      <td>Akanji</td>\n",
              "      <td>5.0</td>\n",
              "      <td>8.3</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>107</td>\n",
              "      <td>15.8</td>\n",
              "      <td>...</td>\n",
              "      <td>450</td>\n",
              "      <td>1.3</td>\n",
              "      <td>3.1</td>\n",
              "      <td>0.9</td>\n",
              "      <td>3.65</td>\n",
              "      <td>3.32</td>\n",
              "      <td>3.21</td>\n",
              "      <td>3.32</td>\n",
              "      <td>3.65</td>\n",
              "      <td>17.15</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>603</th>\n",
              "      <td>357</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>D</td>\n",
              "      <td>Laporte</td>\n",
              "      <td>4.9</td>\n",
              "      <td>0.1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>4</td>\n",
              "      <td>2.9</td>\n",
              "      <td>...</td>\n",
              "      <td>11</td>\n",
              "      <td>1.3</td>\n",
              "      <td>3.1</td>\n",
              "      <td>0.9</td>\n",
              "      <td>3.65</td>\n",
              "      <td>3.32</td>\n",
              "      <td>3.21</td>\n",
              "      <td>3.32</td>\n",
              "      <td>3.65</td>\n",
              "      <td>17.15</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>54</th>\n",
              "      <td>297</td>\n",
              "      <td>Liverpool</td>\n",
              "      <td>F</td>\n",
              "      <td>Gakpo</td>\n",
              "      <td>7.3</td>\n",
              "      <td>3.1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>41</td>\n",
              "      <td>17.9</td>\n",
              "      <td>...</td>\n",
              "      <td>273</td>\n",
              "      <td>1.2</td>\n",
              "      <td>3.1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.32</td>\n",
              "      <td>3.43</td>\n",
              "      <td>3.10</td>\n",
              "      <td>3.54</td>\n",
              "      <td>3.54</td>\n",
              "      <td>16.93</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>274</th>\n",
              "      <td>270</td>\n",
              "      <td>Fulham</td>\n",
              "      <td>M</td>\n",
              "      <td>De Cordova-Reid</td>\n",
              "      <td>5.5</td>\n",
              "      <td>0.2</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>54</td>\n",
              "      <td>18.5</td>\n",
              "      <td>...</td>\n",
              "      <td>359</td>\n",
              "      <td>0.9</td>\n",
              "      <td>3.5</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.35</td>\n",
              "      <td>3.35</td>\n",
              "      <td>3.80</td>\n",
              "      <td>3.20</td>\n",
              "      <td>3.20</td>\n",
              "      <td>16.90</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>525</th>\n",
              "      <td>195</td>\n",
              "      <td>Chelsea</td>\n",
              "      <td>D</td>\n",
              "      <td>Chilwell</td>\n",
              "      <td>5.6</td>\n",
              "      <td>22.5</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>66</td>\n",
              "      <td>28.1</td>\n",
              "      <td>...</td>\n",
              "      <td>334</td>\n",
              "      <td>1.1</td>\n",
              "      <td>3.3</td>\n",
              "      <td>-0.2</td>\n",
              "      <td>3.43</td>\n",
              "      <td>3.17</td>\n",
              "      <td>3.56</td>\n",
              "      <td>3.30</td>\n",
              "      <td>3.43</td>\n",
              "      <td>16.89</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>13</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>F</td>\n",
              "      <td>Nketiah</td>\n",
              "      <td>5.5</td>\n",
              "      <td>5.6</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>67</td>\n",
              "      <td>27.6</td>\n",
              "      <td>...</td>\n",
              "      <td>425</td>\n",
              "      <td>1.2</td>\n",
              "      <td>3.2</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.56</td>\n",
              "      <td>3.32</td>\n",
              "      <td>3.08</td>\n",
              "      <td>3.68</td>\n",
              "      <td>3.20</td>\n",
              "      <td>16.84</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>50 rows × 22 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-7a438ee0-3a39-42f3-a0b4-e94995f7173b')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-7a438ee0-3a39-42f3-a0b4-e94995f7173b button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-7a438ee0-3a39-42f3-a0b4-e94995f7173b');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-8a4d4e53-b312-4ad3-9aec-d3e7eb8bebae\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-8a4d4e53-b312-4ad3-9aec-d3e7eb8bebae')\"\n",
              "            title=\"Suggest charts.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-8a4d4e53-b312-4ad3-9aec-d3e7eb8bebae button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 60
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import matplotlib.pyplot as plt\n",
        "import pandas as pd\n",
        "import numpy as np\n",
        "import string"
      ],
      "metadata": {
        "id": "JSw3vk9PJvps"
      },
      "execution_count": 61,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "fig, ax = plt.subplots(1, figsize=(10,8))\n",
        "ax.scatter(x=Top50['cost'],y=Top50['5GW Total'],c='DarkBlue')\n",
        "# set labels\n",
        "ax.set_xlabel('cost')\n",
        "ax.set_ylabel('5GW Total')\n",
        "\n",
        "# annotate points in axis\n",
        "for idx, row in Top50.iterrows():\n",
        "    ax.annotate(row['name'], (row['cost'], row['5GW Total']) )\n",
        "# force matplotlib to draw the graph\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 696
        },
        "id": "435FV-_ocWOi",
        "outputId": "700ac70e-43a8-4e8a-d8e6-453d653a1ad5"
      },
      "execution_count": 62,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1000x800 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "rawdfgw228x"
      ],
      "metadata": {
        "id": "mQ58vdHpUd8O",
        "outputId": "ac1c18a3-eff8-44aa-e9f8-4b3366a7a0c2",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 424
        }
      },
      "execution_count": 63,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "      id                     team pos     name  cost  selected_by_percent  \\\n",
              "0      1                  Arsenal   F  Balogun   4.4                  0.3   \n",
              "1      8                  Arsenal   F  G.Jesus   7.9                  3.5   \n",
              "2     13                  Arsenal   F  Nketiah   5.5                  5.6   \n",
              "3     39              Aston Villa   F    Davis   4.9                  0.2   \n",
              "4     44              Aston Villa   F    Duran   5.0                  0.3   \n",
              "..   ...                      ...  ..      ...   ...                  ...   \n",
              "795  647                 West Ham   G    Anang   4.0                  0.0   \n",
              "796  546  Wolverhampton Wanderers   G  Bentley   4.0                  0.4   \n",
              "797  564  Wolverhampton Wanderers   G     King   4.0                  0.8   \n",
              "798  569  Wolverhampton Wanderers   G  José Sá   5.0                  1.7   \n",
              "799  571  Wolverhampton Wanderers   G   Šarkić   4.0                  0.4   \n",
              "\n",
              "     goals_scored  assists  bps  ict_index  ...  minutes  home_adjustment  \\\n",
              "0               0        0    0        0.0  ...        0              1.2   \n",
              "1               1        0   26       15.5  ...      115              1.2   \n",
              "2               2        1   67       27.6  ...      425              1.2   \n",
              "3               0        0    0        0.0  ...        0              1.1   \n",
              "4               2        0   56       13.6  ...       57              1.1   \n",
              "..            ...      ...  ...        ...  ...      ...              ...   \n",
              "795             0        0    0        0.0  ...        0              1.0   \n",
              "796             0        0    0        0.0  ...        0              0.8   \n",
              "797             0        0    0        0.0  ...        0              0.8   \n",
              "798             0        0  125       20.7  ...      540              0.8   \n",
              "799             0        0    0        0.0  ...        0              0.8   \n",
              "\n",
              "     xPallgw  xCSP   gw7   gw9   gw8  gw10  gw11  5GW Total  \n",
              "0        2.0   NaN  2.00  2.00  2.00  2.00  2.00      10.00  \n",
              "1        2.9   NaN  3.17  2.99  2.81  3.26  2.90      15.13  \n",
              "2        3.2   NaN  3.56  3.32  3.08  3.68  3.20      16.84  \n",
              "3        2.0   NaN  2.00  2.00  2.00  2.00  2.00      10.00  \n",
              "4        2.5   NaN  2.50  2.55  2.65  2.65  2.65      13.00  \n",
              "..       ...   ...   ...   ...   ...   ...   ...        ...  \n",
              "795     -2.9  -4.9 -3.88 -2.41 -1.92 -3.39 -2.41     -14.01  \n",
              "796     -2.3  -4.3 -0.15 -2.30 -1.01 -1.01 -2.30      -6.77  \n",
              "797     -2.3  -4.3 -0.15 -2.30 -1.01 -1.01 -2.30      -6.77  \n",
              "798     -2.3  -4.3 -0.15 -2.30 -1.01 -1.01 -2.30      -6.77  \n",
              "799     -2.3  -4.3 -0.15 -2.30 -1.01 -1.01 -2.30      -6.77  \n",
              "\n",
              "[697 rows x 22 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-6f512d69-c6f8-4ade-9113-59352cb46e5b\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>team</th>\n",
              "      <th>pos</th>\n",
              "      <th>name</th>\n",
              "      <th>cost</th>\n",
              "      <th>selected_by_percent</th>\n",
              "      <th>goals_scored</th>\n",
              "      <th>assists</th>\n",
              "      <th>bps</th>\n",
              "      <th>ict_index</th>\n",
              "      <th>...</th>\n",
              "      <th>minutes</th>\n",
              "      <th>home_adjustment</th>\n",
              "      <th>xPallgw</th>\n",
              "      <th>xCSP</th>\n",
              "      <th>gw7</th>\n",
              "      <th>gw9</th>\n",
              "      <th>gw8</th>\n",
              "      <th>gw10</th>\n",
              "      <th>gw11</th>\n",
              "      <th>5GW Total</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>1</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>F</td>\n",
              "      <td>Balogun</td>\n",
              "      <td>4.4</td>\n",
              "      <td>0.3</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>1.2</td>\n",
              "      <td>2.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>10.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>8</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>F</td>\n",
              "      <td>G.Jesus</td>\n",
              "      <td>7.9</td>\n",
              "      <td>3.5</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>26</td>\n",
              "      <td>15.5</td>\n",
              "      <td>...</td>\n",
              "      <td>115</td>\n",
              "      <td>1.2</td>\n",
              "      <td>2.9</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.17</td>\n",
              "      <td>2.99</td>\n",
              "      <td>2.81</td>\n",
              "      <td>3.26</td>\n",
              "      <td>2.90</td>\n",
              "      <td>15.13</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>13</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>F</td>\n",
              "      <td>Nketiah</td>\n",
              "      <td>5.5</td>\n",
              "      <td>5.6</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>67</td>\n",
              "      <td>27.6</td>\n",
              "      <td>...</td>\n",
              "      <td>425</td>\n",
              "      <td>1.2</td>\n",
              "      <td>3.2</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.56</td>\n",
              "      <td>3.32</td>\n",
              "      <td>3.08</td>\n",
              "      <td>3.68</td>\n",
              "      <td>3.20</td>\n",
              "      <td>16.84</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>39</td>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>F</td>\n",
              "      <td>Davis</td>\n",
              "      <td>4.9</td>\n",
              "      <td>0.2</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>1.1</td>\n",
              "      <td>2.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>10.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>44</td>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>F</td>\n",
              "      <td>Duran</td>\n",
              "      <td>5.0</td>\n",
              "      <td>0.3</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>56</td>\n",
              "      <td>13.6</td>\n",
              "      <td>...</td>\n",
              "      <td>57</td>\n",
              "      <td>1.1</td>\n",
              "      <td>2.5</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2.50</td>\n",
              "      <td>2.55</td>\n",
              "      <td>2.65</td>\n",
              "      <td>2.65</td>\n",
              "      <td>2.65</td>\n",
              "      <td>13.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>795</th>\n",
              "      <td>647</td>\n",
              "      <td>West Ham</td>\n",
              "      <td>G</td>\n",
              "      <td>Anang</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>-2.9</td>\n",
              "      <td>-4.9</td>\n",
              "      <td>-3.88</td>\n",
              "      <td>-2.41</td>\n",
              "      <td>-1.92</td>\n",
              "      <td>-3.39</td>\n",
              "      <td>-2.41</td>\n",
              "      <td>-14.01</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>796</th>\n",
              "      <td>546</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>G</td>\n",
              "      <td>Bentley</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.4</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0.8</td>\n",
              "      <td>-2.3</td>\n",
              "      <td>-4.3</td>\n",
              "      <td>-0.15</td>\n",
              "      <td>-2.30</td>\n",
              "      <td>-1.01</td>\n",
              "      <td>-1.01</td>\n",
              "      <td>-2.30</td>\n",
              "      <td>-6.77</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>797</th>\n",
              "      <td>564</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>G</td>\n",
              "      <td>King</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.8</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0.8</td>\n",
              "      <td>-2.3</td>\n",
              "      <td>-4.3</td>\n",
              "      <td>-0.15</td>\n",
              "      <td>-2.30</td>\n",
              "      <td>-1.01</td>\n",
              "      <td>-1.01</td>\n",
              "      <td>-2.30</td>\n",
              "      <td>-6.77</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>798</th>\n",
              "      <td>569</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>G</td>\n",
              "      <td>José Sá</td>\n",
              "      <td>5.0</td>\n",
              "      <td>1.7</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>125</td>\n",
              "      <td>20.7</td>\n",
              "      <td>...</td>\n",
              "      <td>540</td>\n",
              "      <td>0.8</td>\n",
              "      <td>-2.3</td>\n",
              "      <td>-4.3</td>\n",
              "      <td>-0.15</td>\n",
              "      <td>-2.30</td>\n",
              "      <td>-1.01</td>\n",
              "      <td>-1.01</td>\n",
              "      <td>-2.30</td>\n",
              "      <td>-6.77</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>799</th>\n",
              "      <td>571</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>G</td>\n",
              "      <td>Šarkić</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.4</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0.8</td>\n",
              "      <td>-2.3</td>\n",
              "      <td>-4.3</td>\n",
              "      <td>-0.15</td>\n",
              "      <td>-2.30</td>\n",
              "      <td>-1.01</td>\n",
              "      <td>-1.01</td>\n",
              "      <td>-2.30</td>\n",
              "      <td>-6.77</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>697 rows × 22 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-6f512d69-c6f8-4ade-9113-59352cb46e5b')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-6f512d69-c6f8-4ade-9113-59352cb46e5b button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-6f512d69-c6f8-4ade-9113-59352cb46e5b');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-2d2d792d-a365-42f6-98f1-b0c69464b55d\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-2d2d792d-a365-42f6-98f1-b0c69464b55d')\"\n",
              "            title=\"Suggest charts.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-2d2d792d-a365-42f6-98f1-b0c69464b55d button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 63
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "apiplayers = master"
      ],
      "metadata": {
        "id": "3bvpGcxtVMyS"
      },
      "execution_count": 64,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "Mostselected = apiplayers.nlargest(20, 'selected_by_percent')\n",
        "Mostselected"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 677
        },
        "id": "O-wNiNtosYZU",
        "outputId": "04e210f4-1ab8-4cb5-9a4e-03e9452bb43b"
      },
      "execution_count": 65,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "      id               team pos         name  cost  selected_by_percent  \\\n",
              "441  355    Manchester City   F      Haaland  14.1                 92.4   \n",
              "17    19            Arsenal   M         Saka   8.7                 64.8   \n",
              "144  131           Brighton   D    Estupiñan   5.3                 62.4   \n",
              "156  143           Brighton   M       Mitoma   6.6                 42.8   \n",
              "525  430   Newcastle United   D     Trippier   6.6                 36.2   \n",
              "430  343    Manchester City   F    J.Alvarez   7.0                 31.2   \n",
              "634  504          Tottenham   M     Maddison   7.9                 31.2   \n",
              "658  524           West Ham   G       Areola   4.2                 31.0   \n",
              "481  396  Manchester United   M     Rashford   8.9                 30.3   \n",
              "375  308          Liverpool   M        Salah  12.5                 30.2   \n",
              "119  108          Brentford   M       Mbeumo   6.9                 29.5   \n",
              "18    20            Arsenal   D       Saliba   5.2                 28.8   \n",
              "500  405   Newcastle United   D       Botman   4.7                 23.7   \n",
              "224  195            Chelsea   D     Chilwell   5.6                 22.5   \n",
              "510  415   Newcastle United   F         Isak   7.6                 22.4   \n",
              "12    14            Arsenal   M     Ødegaard   8.5                 21.1   \n",
              "438  352    Manchester City   G   Ederson M.   5.6                 21.0   \n",
              "488  597  Manchester United   G        Onana   4.9                 21.0   \n",
              "461  373  Manchester United   M  B.Fernandes   8.4                 20.1   \n",
              "645  516          Tottenham   M          Son   9.2                 18.6   \n",
              "\n",
              "     expected_goals  expected_assists  goals_scored  assists  bps  ict_index  \\\n",
              "441            7.79              0.22             8        1  200       77.7   \n",
              "17             3.02              2.01             3        3  166       73.1   \n",
              "144            0.41              1.45             1        3  120       43.0   \n",
              "156            1.68              1.89             3        3  131       61.2   \n",
              "525            0.01              1.43             0        3  164       45.1   \n",
              "430            2.55              1.04             2        5  157       57.2   \n",
              "634            1.78              2.24             2        4  149       68.1   \n",
              "658            0.00              0.00             0        0  128       22.4   \n",
              "481            2.25              1.26             1        2   60       42.7   \n",
              "375            3.74              2.35             3        4  146       69.8   \n",
              "119            4.26              1.12             4        0   98       50.7   \n",
              "18             0.04              0.10             0        1  120       19.0   \n",
              "500            0.29              0.28             1        1  127       19.0   \n",
              "224            0.85              1.27             0        1   66       28.1   \n",
              "510            2.01              0.11             3        0   97       25.6   \n",
              "12             1.74              0.51             2        0   90       42.2   \n",
              "438            0.00              0.02             0        0  111       11.5   \n",
              "488            0.00              0.00             0        0  115       19.7   \n",
              "461            2.39              2.44             2        1  113       59.0   \n",
              "645            2.04              1.16             5        0  150       55.1   \n",
              "\n",
              "     points  points_per_game  minutes  apppoint  assistvalue  \n",
              "441      51              8.5      529         2            3  \n",
              "17       44              7.3      538         2            3  \n",
              "144      27              5.4      450         2            3  \n",
              "156      39              6.5      485         2            3  \n",
              "525      31              5.2      519         2            3  \n",
              "430      38              6.3      505         2            3  \n",
              "634      39              6.5      504         2            3  \n",
              "658      26              4.3      540         2            3  \n",
              "481      24              4.0      531         2            3  \n",
              "375      43              7.2      521         2            3  \n",
              "119      36              6.0      540         2            3  \n",
              "18       23              3.8      540         2            3  \n",
              "500      30              6.0      446         2            3  \n",
              "224      15              2.5      334         2            3  \n",
              "510      24              4.8      296         2            3  \n",
              "12       26              4.3      532         2            3  \n",
              "438      25              4.2      540         2            3  \n",
              "488      20              3.3      540         2            3  \n",
              "461      29              4.8      540         2            3  \n",
              "645      44              7.3      482         2            3  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-34f7af13-8cca-49c3-a714-8cc74d6fc84a\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>team</th>\n",
              "      <th>pos</th>\n",
              "      <th>name</th>\n",
              "      <th>cost</th>\n",
              "      <th>selected_by_percent</th>\n",
              "      <th>expected_goals</th>\n",
              "      <th>expected_assists</th>\n",
              "      <th>goals_scored</th>\n",
              "      <th>assists</th>\n",
              "      <th>bps</th>\n",
              "      <th>ict_index</th>\n",
              "      <th>points</th>\n",
              "      <th>points_per_game</th>\n",
              "      <th>minutes</th>\n",
              "      <th>apppoint</th>\n",
              "      <th>assistvalue</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>441</th>\n",
              "      <td>355</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>F</td>\n",
              "      <td>Haaland</td>\n",
              "      <td>14.1</td>\n",
              "      <td>92.4</td>\n",
              "      <td>7.79</td>\n",
              "      <td>0.22</td>\n",
              "      <td>8</td>\n",
              "      <td>1</td>\n",
              "      <td>200</td>\n",
              "      <td>77.7</td>\n",
              "      <td>51</td>\n",
              "      <td>8.5</td>\n",
              "      <td>529</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>17</th>\n",
              "      <td>19</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>M</td>\n",
              "      <td>Saka</td>\n",
              "      <td>8.7</td>\n",
              "      <td>64.8</td>\n",
              "      <td>3.02</td>\n",
              "      <td>2.01</td>\n",
              "      <td>3</td>\n",
              "      <td>3</td>\n",
              "      <td>166</td>\n",
              "      <td>73.1</td>\n",
              "      <td>44</td>\n",
              "      <td>7.3</td>\n",
              "      <td>538</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>144</th>\n",
              "      <td>131</td>\n",
              "      <td>Brighton</td>\n",
              "      <td>D</td>\n",
              "      <td>Estupiñan</td>\n",
              "      <td>5.3</td>\n",
              "      <td>62.4</td>\n",
              "      <td>0.41</td>\n",
              "      <td>1.45</td>\n",
              "      <td>1</td>\n",
              "      <td>3</td>\n",
              "      <td>120</td>\n",
              "      <td>43.0</td>\n",
              "      <td>27</td>\n",
              "      <td>5.4</td>\n",
              "      <td>450</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>156</th>\n",
              "      <td>143</td>\n",
              "      <td>Brighton</td>\n",
              "      <td>M</td>\n",
              "      <td>Mitoma</td>\n",
              "      <td>6.6</td>\n",
              "      <td>42.8</td>\n",
              "      <td>1.68</td>\n",
              "      <td>1.89</td>\n",
              "      <td>3</td>\n",
              "      <td>3</td>\n",
              "      <td>131</td>\n",
              "      <td>61.2</td>\n",
              "      <td>39</td>\n",
              "      <td>6.5</td>\n",
              "      <td>485</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>525</th>\n",
              "      <td>430</td>\n",
              "      <td>Newcastle United</td>\n",
              "      <td>D</td>\n",
              "      <td>Trippier</td>\n",
              "      <td>6.6</td>\n",
              "      <td>36.2</td>\n",
              "      <td>0.01</td>\n",
              "      <td>1.43</td>\n",
              "      <td>0</td>\n",
              "      <td>3</td>\n",
              "      <td>164</td>\n",
              "      <td>45.1</td>\n",
              "      <td>31</td>\n",
              "      <td>5.2</td>\n",
              "      <td>519</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>430</th>\n",
              "      <td>343</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>F</td>\n",
              "      <td>J.Alvarez</td>\n",
              "      <td>7.0</td>\n",
              "      <td>31.2</td>\n",
              "      <td>2.55</td>\n",
              "      <td>1.04</td>\n",
              "      <td>2</td>\n",
              "      <td>5</td>\n",
              "      <td>157</td>\n",
              "      <td>57.2</td>\n",
              "      <td>38</td>\n",
              "      <td>6.3</td>\n",
              "      <td>505</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>634</th>\n",
              "      <td>504</td>\n",
              "      <td>Tottenham</td>\n",
              "      <td>M</td>\n",
              "      <td>Maddison</td>\n",
              "      <td>7.9</td>\n",
              "      <td>31.2</td>\n",
              "      <td>1.78</td>\n",
              "      <td>2.24</td>\n",
              "      <td>2</td>\n",
              "      <td>4</td>\n",
              "      <td>149</td>\n",
              "      <td>68.1</td>\n",
              "      <td>39</td>\n",
              "      <td>6.5</td>\n",
              "      <td>504</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>658</th>\n",
              "      <td>524</td>\n",
              "      <td>West Ham</td>\n",
              "      <td>G</td>\n",
              "      <td>Areola</td>\n",
              "      <td>4.2</td>\n",
              "      <td>31.0</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>128</td>\n",
              "      <td>22.4</td>\n",
              "      <td>26</td>\n",
              "      <td>4.3</td>\n",
              "      <td>540</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>481</th>\n",
              "      <td>396</td>\n",
              "      <td>Manchester United</td>\n",
              "      <td>M</td>\n",
              "      <td>Rashford</td>\n",
              "      <td>8.9</td>\n",
              "      <td>30.3</td>\n",
              "      <td>2.25</td>\n",
              "      <td>1.26</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>60</td>\n",
              "      <td>42.7</td>\n",
              "      <td>24</td>\n",
              "      <td>4.0</td>\n",
              "      <td>531</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>375</th>\n",
              "      <td>308</td>\n",
              "      <td>Liverpool</td>\n",
              "      <td>M</td>\n",
              "      <td>Salah</td>\n",
              "      <td>12.5</td>\n",
              "      <td>30.2</td>\n",
              "      <td>3.74</td>\n",
              "      <td>2.35</td>\n",
              "      <td>3</td>\n",
              "      <td>4</td>\n",
              "      <td>146</td>\n",
              "      <td>69.8</td>\n",
              "      <td>43</td>\n",
              "      <td>7.2</td>\n",
              "      <td>521</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>119</th>\n",
              "      <td>108</td>\n",
              "      <td>Brentford</td>\n",
              "      <td>M</td>\n",
              "      <td>Mbeumo</td>\n",
              "      <td>6.9</td>\n",
              "      <td>29.5</td>\n",
              "      <td>4.26</td>\n",
              "      <td>1.12</td>\n",
              "      <td>4</td>\n",
              "      <td>0</td>\n",
              "      <td>98</td>\n",
              "      <td>50.7</td>\n",
              "      <td>36</td>\n",
              "      <td>6.0</td>\n",
              "      <td>540</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>18</th>\n",
              "      <td>20</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>D</td>\n",
              "      <td>Saliba</td>\n",
              "      <td>5.2</td>\n",
              "      <td>28.8</td>\n",
              "      <td>0.04</td>\n",
              "      <td>0.10</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>120</td>\n",
              "      <td>19.0</td>\n",
              "      <td>23</td>\n",
              "      <td>3.8</td>\n",
              "      <td>540</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>500</th>\n",
              "      <td>405</td>\n",
              "      <td>Newcastle United</td>\n",
              "      <td>D</td>\n",
              "      <td>Botman</td>\n",
              "      <td>4.7</td>\n",
              "      <td>23.7</td>\n",
              "      <td>0.29</td>\n",
              "      <td>0.28</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>127</td>\n",
              "      <td>19.0</td>\n",
              "      <td>30</td>\n",
              "      <td>6.0</td>\n",
              "      <td>446</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>224</th>\n",
              "      <td>195</td>\n",
              "      <td>Chelsea</td>\n",
              "      <td>D</td>\n",
              "      <td>Chilwell</td>\n",
              "      <td>5.6</td>\n",
              "      <td>22.5</td>\n",
              "      <td>0.85</td>\n",
              "      <td>1.27</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>66</td>\n",
              "      <td>28.1</td>\n",
              "      <td>15</td>\n",
              "      <td>2.5</td>\n",
              "      <td>334</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>510</th>\n",
              "      <td>415</td>\n",
              "      <td>Newcastle United</td>\n",
              "      <td>F</td>\n",
              "      <td>Isak</td>\n",
              "      <td>7.6</td>\n",
              "      <td>22.4</td>\n",
              "      <td>2.01</td>\n",
              "      <td>0.11</td>\n",
              "      <td>3</td>\n",
              "      <td>0</td>\n",
              "      <td>97</td>\n",
              "      <td>25.6</td>\n",
              "      <td>24</td>\n",
              "      <td>4.8</td>\n",
              "      <td>296</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>12</th>\n",
              "      <td>14</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>M</td>\n",
              "      <td>Ødegaard</td>\n",
              "      <td>8.5</td>\n",
              "      <td>21.1</td>\n",
              "      <td>1.74</td>\n",
              "      <td>0.51</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>90</td>\n",
              "      <td>42.2</td>\n",
              "      <td>26</td>\n",
              "      <td>4.3</td>\n",
              "      <td>532</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>438</th>\n",
              "      <td>352</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>G</td>\n",
              "      <td>Ederson M.</td>\n",
              "      <td>5.6</td>\n",
              "      <td>21.0</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.02</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>111</td>\n",
              "      <td>11.5</td>\n",
              "      <td>25</td>\n",
              "      <td>4.2</td>\n",
              "      <td>540</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>488</th>\n",
              "      <td>597</td>\n",
              "      <td>Manchester United</td>\n",
              "      <td>G</td>\n",
              "      <td>Onana</td>\n",
              "      <td>4.9</td>\n",
              "      <td>21.0</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>115</td>\n",
              "      <td>19.7</td>\n",
              "      <td>20</td>\n",
              "      <td>3.3</td>\n",
              "      <td>540</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>461</th>\n",
              "      <td>373</td>\n",
              "      <td>Manchester United</td>\n",
              "      <td>M</td>\n",
              "      <td>B.Fernandes</td>\n",
              "      <td>8.4</td>\n",
              "      <td>20.1</td>\n",
              "      <td>2.39</td>\n",
              "      <td>2.44</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>113</td>\n",
              "      <td>59.0</td>\n",
              "      <td>29</td>\n",
              "      <td>4.8</td>\n",
              "      <td>540</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>645</th>\n",
              "      <td>516</td>\n",
              "      <td>Tottenham</td>\n",
              "      <td>M</td>\n",
              "      <td>Son</td>\n",
              "      <td>9.2</td>\n",
              "      <td>18.6</td>\n",
              "      <td>2.04</td>\n",
              "      <td>1.16</td>\n",
              "      <td>5</td>\n",
              "      <td>0</td>\n",
              "      <td>150</td>\n",
              "      <td>55.1</td>\n",
              "      <td>44</td>\n",
              "      <td>7.3</td>\n",
              "      <td>482</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-34f7af13-8cca-49c3-a714-8cc74d6fc84a')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-34f7af13-8cca-49c3-a714-8cc74d6fc84a button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-34f7af13-8cca-49c3-a714-8cc74d6fc84a');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-6ef5abdd-ff73-4e98-be09-066e39bae04e\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-6ef5abdd-ff73-4e98-be09-066e39bae04e')\"\n",
              "            title=\"Suggest charts.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-6ef5abdd-ff73-4e98-be09-066e39bae04e button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 65
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "ax = sns.barplot(x='selected_by_percent', y='name', data=Mostselected, hue='pos', dodge=False)\n",
        "sns.set(rc={'figure.figsize':(11.7,8.27)})\n",
        "plt.title(\"Most Selected\")\n",
        "plt.xticks(rotation=90)\n",
        "plt.ylabel(\"selected_by_percent\")\n",
        "plt.legend(bbox_to_anchor=(1.05, 1), loc='upper left', borderaxespad=0)\n",
        "plt.gcf().set_size_inches(30,10)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 601
        },
        "id": "8PBz92opthgG",
        "outputId": "2efe7848-5482-49cc-ffd4-7836d0553eed"
      },
      "execution_count": 66,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 3000x1000 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "fbref = pd.read_html('https://fbref.com/en/comps/9/Premier-League-Stats')\n",
        "epltable = fbref[0]\n",
        "epltablexGxGc = epltable.drop(columns=[\n",
        " 'Last 5',\n",
        " 'Attendance',\n",
        " 'Top Team Scorer',\n",
        " 'Goalkeeper',\n",
        " 'Notes'])\n",
        "epltablexGxGc= epltablexGxGc.replace('Newcastle Utd', 'Newcastle United')\n",
        "epltablexGxGc= epltablexGxGc.replace('Wolves','Wolverhampton Wanderers')\n",
        "epltablexGxGc= epltablexGxGc.replace('Leeds United','Leeds')\n",
        "epltablexGxGc= epltablexGxGc.replace('Leicester City','Leicester')\n",
        "epltablexGxGc= epltablexGxGc.replace('Manchester Utd','Manchester United')\n",
        "epltablexGxGc['Squad'] = epltablexGxGc['Squad'].str.replace(r\"[\\\"\\',]\", '')\n",
        "epltablexGxGc= epltablexGxGc.replace('Nottham Forest','Nottingham Forest')\n",
        "epltablexGxGc['xCSP'] = (4 - (epltablexGxGc.xGA * 4/23))\n",
        "epltablexGxGc.rename(columns={'Squad': 'team'}, inplace=True)\n",
        "epltablexGxGc['xG/90'] = (epltablexGxGc.xG / epltablexGxGc.MP)\n",
        "epltablexGxGc['xGA/90'] = (epltablexGxGc.xGA / epltablexGxGc.MP)\n",
        "epltablexGxGc"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 711
        },
        "id": "D8nuKObbLt5s",
        "outputId": "bc1a458f-4445-41a6-f02c-a5c6554e25f1"
      },
      "execution_count": 67,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "<ipython-input-67-f34def3770e4>:14: FutureWarning: The default value of regex will change from True to False in a future version.\n",
            "  epltablexGxGc['Squad'] = epltablexGxGc['Squad'].str.replace(r\"[\\\"\\',]\", '')\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "    Rk                     team  MP  W  D  L  GF  GA  GD  Pts  Pts/MP    xG  \\\n",
              "0    1          Manchester City   6  6  0  0  16   3  13   18    3.00  13.5   \n",
              "1    2                Liverpool   6  5  1  0  15   5  10   16    2.67  13.2   \n",
              "2    3                 Brighton   6  5  0  1  18   8  10   15    2.50  12.5   \n",
              "3    4                Tottenham   6  4  2  0  15   7   8   14    2.33  10.9   \n",
              "4    5                  Arsenal   6  4  2  0  11   6   5   14    2.33  11.1   \n",
              "5    6              Aston Villa   6  4  0  2  12  10   2   12    2.00  11.9   \n",
              "6    7                 West Ham   6  3  1  2  11  10   1   10    1.67   9.0   \n",
              "7    8         Newcastle United   6  3  0  3  16   7   9    9    1.50  12.1   \n",
              "8    9        Manchester United   6  3  0  3   7  10  -3    9    1.50   9.9   \n",
              "9   10           Crystal Palace   6  2  2  2   6   7  -1    8    1.33   7.2   \n",
              "10  11                   Fulham   6  2  2  2   5  10  -5    8    1.33   5.4   \n",
              "11  12        Nottingham Forest   6  2  1  3   7   9  -2    7    1.17   6.3   \n",
              "12  13                Brentford   6  1  3  2   9   9   0    6    1.00  11.2   \n",
              "13  14                  Chelsea   6  1  2  3   5   6  -1    5    0.83  11.5   \n",
              "14  15                  Everton   6  1  1  4   5  10  -5    4    0.67   9.4   \n",
              "15  16  Wolverhampton Wanderers   6  1  1  4   6  12  -6    4    0.67   7.7   \n",
              "16  17              Bournemouth   6  0  3  3   5  11  -6    3    0.50   7.5   \n",
              "17  18               Luton Town   5  0  1  4   3  11  -8    1    0.20   6.5   \n",
              "18  19                  Burnley   5  0  1  4   4  13  -9    1    0.20   4.0   \n",
              "19  20            Sheffield Utd   6  0  1  5   5  17 -12    1    0.17   4.5   \n",
              "\n",
              "     xGA   xGD  xGD/90      xCSP     xG/90    xGA/90  \n",
              "0    4.6   8.9    1.48  3.200000  2.250000  0.766667  \n",
              "1    7.0   6.2    1.03  2.782609  2.200000  1.166667  \n",
              "2    9.9   2.6    0.44  2.278261  2.083333  1.650000  \n",
              "3    8.7   2.2    0.36  2.486957  1.816667  1.450000  \n",
              "4    5.5   5.6    0.94  3.043478  1.850000  0.916667  \n",
              "5    9.6   2.3    0.38  2.330435  1.983333  1.600000  \n",
              "6   13.3  -4.3   -0.72  1.686957  1.500000  2.216667  \n",
              "7    6.4   5.8    0.96  2.886957  2.016667  1.066667  \n",
              "8   10.2  -0.3   -0.05  2.226087  1.650000  1.700000  \n",
              "9    8.3  -1.0   -0.17  2.556522  1.200000  1.383333  \n",
              "10  13.1  -7.6   -1.27  1.721739  0.900000  2.183333  \n",
              "11   8.3  -2.0   -0.34  2.556522  1.050000  1.383333  \n",
              "12   7.9   3.3    0.55  2.626087  1.866667  1.316667  \n",
              "13   6.3   5.2    0.87  2.904348  1.916667  1.050000  \n",
              "14   8.7   0.7    0.12  2.486957  1.566667  1.450000  \n",
              "15  12.5  -4.8   -0.79  1.826087  1.283333  2.083333  \n",
              "16  12.8  -5.3   -0.88  1.773913  1.250000  2.133333  \n",
              "17   8.8  -2.3   -0.45  2.469565  1.300000  1.760000  \n",
              "18   8.3  -4.3   -0.86  2.556522  0.800000  1.660000  \n",
              "19  15.3 -10.8   -1.80  1.339130  0.750000  2.550000  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-18f3729d-d5ce-431e-9483-47f6832c2362\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Rk</th>\n",
              "      <th>team</th>\n",
              "      <th>MP</th>\n",
              "      <th>W</th>\n",
              "      <th>D</th>\n",
              "      <th>L</th>\n",
              "      <th>GF</th>\n",
              "      <th>GA</th>\n",
              "      <th>GD</th>\n",
              "      <th>Pts</th>\n",
              "      <th>Pts/MP</th>\n",
              "      <th>xG</th>\n",
              "      <th>xGA</th>\n",
              "      <th>xGD</th>\n",
              "      <th>xGD/90</th>\n",
              "      <th>xCSP</th>\n",
              "      <th>xG/90</th>\n",
              "      <th>xGA/90</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>1</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>6</td>\n",
              "      <td>6</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>16</td>\n",
              "      <td>3</td>\n",
              "      <td>13</td>\n",
              "      <td>18</td>\n",
              "      <td>3.00</td>\n",
              "      <td>13.5</td>\n",
              "      <td>4.6</td>\n",
              "      <td>8.9</td>\n",
              "      <td>1.48</td>\n",
              "      <td>3.200000</td>\n",
              "      <td>2.250000</td>\n",
              "      <td>0.766667</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>2</td>\n",
              "      <td>Liverpool</td>\n",
              "      <td>6</td>\n",
              "      <td>5</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>15</td>\n",
              "      <td>5</td>\n",
              "      <td>10</td>\n",
              "      <td>16</td>\n",
              "      <td>2.67</td>\n",
              "      <td>13.2</td>\n",
              "      <td>7.0</td>\n",
              "      <td>6.2</td>\n",
              "      <td>1.03</td>\n",
              "      <td>2.782609</td>\n",
              "      <td>2.200000</td>\n",
              "      <td>1.166667</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>3</td>\n",
              "      <td>Brighton</td>\n",
              "      <td>6</td>\n",
              "      <td>5</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>18</td>\n",
              "      <td>8</td>\n",
              "      <td>10</td>\n",
              "      <td>15</td>\n",
              "      <td>2.50</td>\n",
              "      <td>12.5</td>\n",
              "      <td>9.9</td>\n",
              "      <td>2.6</td>\n",
              "      <td>0.44</td>\n",
              "      <td>2.278261</td>\n",
              "      <td>2.083333</td>\n",
              "      <td>1.650000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>4</td>\n",
              "      <td>Tottenham</td>\n",
              "      <td>6</td>\n",
              "      <td>4</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>15</td>\n",
              "      <td>7</td>\n",
              "      <td>8</td>\n",
              "      <td>14</td>\n",
              "      <td>2.33</td>\n",
              "      <td>10.9</td>\n",
              "      <td>8.7</td>\n",
              "      <td>2.2</td>\n",
              "      <td>0.36</td>\n",
              "      <td>2.486957</td>\n",
              "      <td>1.816667</td>\n",
              "      <td>1.450000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>5</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>6</td>\n",
              "      <td>4</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>11</td>\n",
              "      <td>6</td>\n",
              "      <td>5</td>\n",
              "      <td>14</td>\n",
              "      <td>2.33</td>\n",
              "      <td>11.1</td>\n",
              "      <td>5.5</td>\n",
              "      <td>5.6</td>\n",
              "      <td>0.94</td>\n",
              "      <td>3.043478</td>\n",
              "      <td>1.850000</td>\n",
              "      <td>0.916667</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>6</td>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>6</td>\n",
              "      <td>4</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>12</td>\n",
              "      <td>10</td>\n",
              "      <td>2</td>\n",
              "      <td>12</td>\n",
              "      <td>2.00</td>\n",
              "      <td>11.9</td>\n",
              "      <td>9.6</td>\n",
              "      <td>2.3</td>\n",
              "      <td>0.38</td>\n",
              "      <td>2.330435</td>\n",
              "      <td>1.983333</td>\n",
              "      <td>1.600000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>7</td>\n",
              "      <td>West Ham</td>\n",
              "      <td>6</td>\n",
              "      <td>3</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>11</td>\n",
              "      <td>10</td>\n",
              "      <td>1</td>\n",
              "      <td>10</td>\n",
              "      <td>1.67</td>\n",
              "      <td>9.0</td>\n",
              "      <td>13.3</td>\n",
              "      <td>-4.3</td>\n",
              "      <td>-0.72</td>\n",
              "      <td>1.686957</td>\n",
              "      <td>1.500000</td>\n",
              "      <td>2.216667</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>8</td>\n",
              "      <td>Newcastle United</td>\n",
              "      <td>6</td>\n",
              "      <td>3</td>\n",
              "      <td>0</td>\n",
              "      <td>3</td>\n",
              "      <td>16</td>\n",
              "      <td>7</td>\n",
              "      <td>9</td>\n",
              "      <td>9</td>\n",
              "      <td>1.50</td>\n",
              "      <td>12.1</td>\n",
              "      <td>6.4</td>\n",
              "      <td>5.8</td>\n",
              "      <td>0.96</td>\n",
              "      <td>2.886957</td>\n",
              "      <td>2.016667</td>\n",
              "      <td>1.066667</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>9</td>\n",
              "      <td>Manchester United</td>\n",
              "      <td>6</td>\n",
              "      <td>3</td>\n",
              "      <td>0</td>\n",
              "      <td>3</td>\n",
              "      <td>7</td>\n",
              "      <td>10</td>\n",
              "      <td>-3</td>\n",
              "      <td>9</td>\n",
              "      <td>1.50</td>\n",
              "      <td>9.9</td>\n",
              "      <td>10.2</td>\n",
              "      <td>-0.3</td>\n",
              "      <td>-0.05</td>\n",
              "      <td>2.226087</td>\n",
              "      <td>1.650000</td>\n",
              "      <td>1.700000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>10</td>\n",
              "      <td>Crystal Palace</td>\n",
              "      <td>6</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>6</td>\n",
              "      <td>7</td>\n",
              "      <td>-1</td>\n",
              "      <td>8</td>\n",
              "      <td>1.33</td>\n",
              "      <td>7.2</td>\n",
              "      <td>8.3</td>\n",
              "      <td>-1.0</td>\n",
              "      <td>-0.17</td>\n",
              "      <td>2.556522</td>\n",
              "      <td>1.200000</td>\n",
              "      <td>1.383333</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10</th>\n",
              "      <td>11</td>\n",
              "      <td>Fulham</td>\n",
              "      <td>6</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>5</td>\n",
              "      <td>10</td>\n",
              "      <td>-5</td>\n",
              "      <td>8</td>\n",
              "      <td>1.33</td>\n",
              "      <td>5.4</td>\n",
              "      <td>13.1</td>\n",
              "      <td>-7.6</td>\n",
              "      <td>-1.27</td>\n",
              "      <td>1.721739</td>\n",
              "      <td>0.900000</td>\n",
              "      <td>2.183333</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>11</th>\n",
              "      <td>12</td>\n",
              "      <td>Nottingham Forest</td>\n",
              "      <td>6</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>3</td>\n",
              "      <td>7</td>\n",
              "      <td>9</td>\n",
              "      <td>-2</td>\n",
              "      <td>7</td>\n",
              "      <td>1.17</td>\n",
              "      <td>6.3</td>\n",
              "      <td>8.3</td>\n",
              "      <td>-2.0</td>\n",
              "      <td>-0.34</td>\n",
              "      <td>2.556522</td>\n",
              "      <td>1.050000</td>\n",
              "      <td>1.383333</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>12</th>\n",
              "      <td>13</td>\n",
              "      <td>Brentford</td>\n",
              "      <td>6</td>\n",
              "      <td>1</td>\n",
              "      <td>3</td>\n",
              "      <td>2</td>\n",
              "      <td>9</td>\n",
              "      <td>9</td>\n",
              "      <td>0</td>\n",
              "      <td>6</td>\n",
              "      <td>1.00</td>\n",
              "      <td>11.2</td>\n",
              "      <td>7.9</td>\n",
              "      <td>3.3</td>\n",
              "      <td>0.55</td>\n",
              "      <td>2.626087</td>\n",
              "      <td>1.866667</td>\n",
              "      <td>1.316667</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>13</th>\n",
              "      <td>14</td>\n",
              "      <td>Chelsea</td>\n",
              "      <td>6</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "      <td>5</td>\n",
              "      <td>6</td>\n",
              "      <td>-1</td>\n",
              "      <td>5</td>\n",
              "      <td>0.83</td>\n",
              "      <td>11.5</td>\n",
              "      <td>6.3</td>\n",
              "      <td>5.2</td>\n",
              "      <td>0.87</td>\n",
              "      <td>2.904348</td>\n",
              "      <td>1.916667</td>\n",
              "      <td>1.050000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>14</th>\n",
              "      <td>15</td>\n",
              "      <td>Everton</td>\n",
              "      <td>6</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>4</td>\n",
              "      <td>5</td>\n",
              "      <td>10</td>\n",
              "      <td>-5</td>\n",
              "      <td>4</td>\n",
              "      <td>0.67</td>\n",
              "      <td>9.4</td>\n",
              "      <td>8.7</td>\n",
              "      <td>0.7</td>\n",
              "      <td>0.12</td>\n",
              "      <td>2.486957</td>\n",
              "      <td>1.566667</td>\n",
              "      <td>1.450000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>15</th>\n",
              "      <td>16</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>6</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>4</td>\n",
              "      <td>6</td>\n",
              "      <td>12</td>\n",
              "      <td>-6</td>\n",
              "      <td>4</td>\n",
              "      <td>0.67</td>\n",
              "      <td>7.7</td>\n",
              "      <td>12.5</td>\n",
              "      <td>-4.8</td>\n",
              "      <td>-0.79</td>\n",
              "      <td>1.826087</td>\n",
              "      <td>1.283333</td>\n",
              "      <td>2.083333</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>16</th>\n",
              "      <td>17</td>\n",
              "      <td>Bournemouth</td>\n",
              "      <td>6</td>\n",
              "      <td>0</td>\n",
              "      <td>3</td>\n",
              "      <td>3</td>\n",
              "      <td>5</td>\n",
              "      <td>11</td>\n",
              "      <td>-6</td>\n",
              "      <td>3</td>\n",
              "      <td>0.50</td>\n",
              "      <td>7.5</td>\n",
              "      <td>12.8</td>\n",
              "      <td>-5.3</td>\n",
              "      <td>-0.88</td>\n",
              "      <td>1.773913</td>\n",
              "      <td>1.250000</td>\n",
              "      <td>2.133333</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>17</th>\n",
              "      <td>18</td>\n",
              "      <td>Luton Town</td>\n",
              "      <td>5</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>4</td>\n",
              "      <td>3</td>\n",
              "      <td>11</td>\n",
              "      <td>-8</td>\n",
              "      <td>1</td>\n",
              "      <td>0.20</td>\n",
              "      <td>6.5</td>\n",
              "      <td>8.8</td>\n",
              "      <td>-2.3</td>\n",
              "      <td>-0.45</td>\n",
              "      <td>2.469565</td>\n",
              "      <td>1.300000</td>\n",
              "      <td>1.760000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>18</th>\n",
              "      <td>19</td>\n",
              "      <td>Burnley</td>\n",
              "      <td>5</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>4</td>\n",
              "      <td>4</td>\n",
              "      <td>13</td>\n",
              "      <td>-9</td>\n",
              "      <td>1</td>\n",
              "      <td>0.20</td>\n",
              "      <td>4.0</td>\n",
              "      <td>8.3</td>\n",
              "      <td>-4.3</td>\n",
              "      <td>-0.86</td>\n",
              "      <td>2.556522</td>\n",
              "      <td>0.800000</td>\n",
              "      <td>1.660000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>19</th>\n",
              "      <td>20</td>\n",
              "      <td>Sheffield Utd</td>\n",
              "      <td>6</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>5</td>\n",
              "      <td>5</td>\n",
              "      <td>17</td>\n",
              "      <td>-12</td>\n",
              "      <td>1</td>\n",
              "      <td>0.17</td>\n",
              "      <td>4.5</td>\n",
              "      <td>15.3</td>\n",
              "      <td>-10.8</td>\n",
              "      <td>-1.80</td>\n",
              "      <td>1.339130</td>\n",
              "      <td>0.750000</td>\n",
              "      <td>2.550000</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-18f3729d-d5ce-431e-9483-47f6832c2362')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-18f3729d-d5ce-431e-9483-47f6832c2362 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-18f3729d-d5ce-431e-9483-47f6832c2362');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-7dbf068c-4015-4706-bbcf-42f52950c090\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-7dbf068c-4015-4706-bbcf-42f52950c090')\"\n",
              "            title=\"Suggest charts.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-7dbf068c-4015-4706-bbcf-42f52950c090 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 67
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "fig, ax = plt.subplots(1, figsize=(10,8))\n",
        "ax.scatter(x=epltablexGxGc['xG/90'],y=epltablexGxGc['xGA/90'],c='DarkBlue')\n",
        "# set labels\n",
        "ax.set_xlabel('xG/90')\n",
        "ax.set_ylabel('xGA/90')\n",
        "\n",
        "# annotate points in axis\n",
        "for idx, row in epltablexGxGc.iterrows():\n",
        "    ax.annotate(row['team'], (row['xG/90'], row['xGA/90']) )\n",
        "# force matplotlib to draw the graph\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 704
        },
        "id": "TYn5yVsCNlLv",
        "outputId": "9e653070-abf8-4f7a-cbbd-9b458de49bc2"
      },
      "execution_count": 68,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1000x800 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "EPL_player_df"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 600
        },
        "id": "wrjHrDmJ8OlM",
        "outputId": "c84ca884-d06d-44e7-e889-a7716cc19788"
      },
      "execution_count": 69,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "        id       player_name games_x time_x goals_1wks_x            xG_1wks_x  \\\n",
              "0     8260    Erling Haaland       6    535            8    8.579197525978088   \n",
              "1      453     Son Heung-Min       6    509            5   2.5317263305187225   \n",
              "2      468     Callum Wilson       6    242            4    4.151702173054218   \n",
              "3     1776      Jarrod Bowen       6    540            4   2.5880690813064575   \n",
              "4     3697   Odsonne Edouard       6    522            4    3.337449833750725   \n",
              "..     ...               ...     ...    ...          ...                  ...   \n",
              "418  11926     Edson Álvarez       5    339            0   0.0643242746591568   \n",
              "419  11984  Youssef Chermiti       2     23            0  0.06607918441295624   \n",
              "420  11998   Hannes Delcroix       3    130            0  0.23279432207345963   \n",
              "421  12027    Mohammed Kudus       3     34            0                    0   \n",
              "422  12094       Mike Trésor       2     83            0  0.04863787442445755   \n",
              "\n",
              "    assists_1wks_x             xA_1wks_x shots_1wks_x key_passes_1wks_x  ...  \\\n",
              "0                1    1.1254648137837648           31                 7  ...   \n",
              "1                0     1.766825806349516           16                11  ...   \n",
              "2                0  0.015900330618023872           15                 1  ...   \n",
              "3                1    0.8080089539289474           16                 4  ...   \n",
              "4                0   0.26749951019883156           20                 5  ...   \n",
              "..             ...                   ...          ...               ...  ...   \n",
              "418              0   0.05303558334708214            1                 1  ...   \n",
              "419              0                     0            1                 0  ...   \n",
              "420              0    0.0830167606472969            4                 2  ...   \n",
              "421              0                     0            0                 0  ...   \n",
              "422              0    0.4080401435494423            1                 2  ...   \n",
              "\n",
              "    shots_1wks_y key_passes_1wks_y yellow_cards red_cards position_y  \\\n",
              "0             31                 7            0         0          F   \n",
              "1             16                11            0         0        F M   \n",
              "2             15                 1            1         0        F S   \n",
              "3             16                 4            1         0          M   \n",
              "4             20                 5            0         0          F   \n",
              "..           ...               ...          ...       ...        ...   \n",
              "418            1                 1            3         0        M S   \n",
              "419            1                 0            1         0          S   \n",
              "420            4                 2            1         0        D S   \n",
              "421            0                 0            0         0          S   \n",
              "422            1                 2            0         0          S   \n",
              "\n",
              "         team_title_y npg_1wks_y          npxG_1wks_y              xGChain  \\\n",
              "0     Manchester City          7    7.056859791278839    7.640112280845642   \n",
              "1           Tottenham          5   2.5317263305187225    5.605026721954346   \n",
              "2    Newcastle United          3    3.390533320605755    3.509474078193307   \n",
              "3            West Ham          4   2.5880690813064575   3.1078141033649445   \n",
              "4      Crystal Palace          4    3.337449833750725     3.16320563852787   \n",
              "..                ...        ...                  ...                  ...   \n",
              "418          West Ham          0   0.0643242746591568   1.3924516029655933   \n",
              "419           Everton          0  0.06607918441295624                    0   \n",
              "420           Burnley          0  0.23279432207345963   0.5750201642513275   \n",
              "421          West Ham          0                    0                    0   \n",
              "422           Burnley          0  0.04863787442445755  0.10748984664678574   \n",
              "\n",
              "                xGBuildup  \n",
              "0      0.7298882678151131  \n",
              "1      2.0503234416246414  \n",
              "2     0.23684066534042358  \n",
              "3      1.2324372678995132  \n",
              "4      0.4057522751390934  \n",
              "..                    ...  \n",
              "418     1.275091726332903  \n",
              "419                     0  \n",
              "420    0.4920034073293209  \n",
              "421                     0  \n",
              "422  0.058851972222328186  \n",
              "\n",
              "[423 rows x 48 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-7e91970f-a5bb-49d9-82fe-769cd62514a7\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>player_name</th>\n",
              "      <th>games_x</th>\n",
              "      <th>time_x</th>\n",
              "      <th>goals_1wks_x</th>\n",
              "      <th>xG_1wks_x</th>\n",
              "      <th>assists_1wks_x</th>\n",
              "      <th>xA_1wks_x</th>\n",
              "      <th>shots_1wks_x</th>\n",
              "      <th>key_passes_1wks_x</th>\n",
              "      <th>...</th>\n",
              "      <th>shots_1wks_y</th>\n",
              "      <th>key_passes_1wks_y</th>\n",
              "      <th>yellow_cards</th>\n",
              "      <th>red_cards</th>\n",
              "      <th>position_y</th>\n",
              "      <th>team_title_y</th>\n",
              "      <th>npg_1wks_y</th>\n",
              "      <th>npxG_1wks_y</th>\n",
              "      <th>xGChain</th>\n",
              "      <th>xGBuildup</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>8260</td>\n",
              "      <td>Erling Haaland</td>\n",
              "      <td>6</td>\n",
              "      <td>535</td>\n",
              "      <td>8</td>\n",
              "      <td>8.579197525978088</td>\n",
              "      <td>1</td>\n",
              "      <td>1.1254648137837648</td>\n",
              "      <td>31</td>\n",
              "      <td>7</td>\n",
              "      <td>...</td>\n",
              "      <td>31</td>\n",
              "      <td>7</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>F</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>7</td>\n",
              "      <td>7.056859791278839</td>\n",
              "      <td>7.640112280845642</td>\n",
              "      <td>0.7298882678151131</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>453</td>\n",
              "      <td>Son Heung-Min</td>\n",
              "      <td>6</td>\n",
              "      <td>509</td>\n",
              "      <td>5</td>\n",
              "      <td>2.5317263305187225</td>\n",
              "      <td>0</td>\n",
              "      <td>1.766825806349516</td>\n",
              "      <td>16</td>\n",
              "      <td>11</td>\n",
              "      <td>...</td>\n",
              "      <td>16</td>\n",
              "      <td>11</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>F M</td>\n",
              "      <td>Tottenham</td>\n",
              "      <td>5</td>\n",
              "      <td>2.5317263305187225</td>\n",
              "      <td>5.605026721954346</td>\n",
              "      <td>2.0503234416246414</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>468</td>\n",
              "      <td>Callum Wilson</td>\n",
              "      <td>6</td>\n",
              "      <td>242</td>\n",
              "      <td>4</td>\n",
              "      <td>4.151702173054218</td>\n",
              "      <td>0</td>\n",
              "      <td>0.015900330618023872</td>\n",
              "      <td>15</td>\n",
              "      <td>1</td>\n",
              "      <td>...</td>\n",
              "      <td>15</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>F S</td>\n",
              "      <td>Newcastle United</td>\n",
              "      <td>3</td>\n",
              "      <td>3.390533320605755</td>\n",
              "      <td>3.509474078193307</td>\n",
              "      <td>0.23684066534042358</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>1776</td>\n",
              "      <td>Jarrod Bowen</td>\n",
              "      <td>6</td>\n",
              "      <td>540</td>\n",
              "      <td>4</td>\n",
              "      <td>2.5880690813064575</td>\n",
              "      <td>1</td>\n",
              "      <td>0.8080089539289474</td>\n",
              "      <td>16</td>\n",
              "      <td>4</td>\n",
              "      <td>...</td>\n",
              "      <td>16</td>\n",
              "      <td>4</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>M</td>\n",
              "      <td>West Ham</td>\n",
              "      <td>4</td>\n",
              "      <td>2.5880690813064575</td>\n",
              "      <td>3.1078141033649445</td>\n",
              "      <td>1.2324372678995132</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>3697</td>\n",
              "      <td>Odsonne Edouard</td>\n",
              "      <td>6</td>\n",
              "      <td>522</td>\n",
              "      <td>4</td>\n",
              "      <td>3.337449833750725</td>\n",
              "      <td>0</td>\n",
              "      <td>0.26749951019883156</td>\n",
              "      <td>20</td>\n",
              "      <td>5</td>\n",
              "      <td>...</td>\n",
              "      <td>20</td>\n",
              "      <td>5</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>F</td>\n",
              "      <td>Crystal Palace</td>\n",
              "      <td>4</td>\n",
              "      <td>3.337449833750725</td>\n",
              "      <td>3.16320563852787</td>\n",
              "      <td>0.4057522751390934</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>418</th>\n",
              "      <td>11926</td>\n",
              "      <td>Edson Álvarez</td>\n",
              "      <td>5</td>\n",
              "      <td>339</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0643242746591568</td>\n",
              "      <td>0</td>\n",
              "      <td>0.05303558334708214</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>...</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>3</td>\n",
              "      <td>0</td>\n",
              "      <td>M S</td>\n",
              "      <td>West Ham</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0643242746591568</td>\n",
              "      <td>1.3924516029655933</td>\n",
              "      <td>1.275091726332903</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>419</th>\n",
              "      <td>11984</td>\n",
              "      <td>Youssef Chermiti</td>\n",
              "      <td>2</td>\n",
              "      <td>23</td>\n",
              "      <td>0</td>\n",
              "      <td>0.06607918441295624</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>S</td>\n",
              "      <td>Everton</td>\n",
              "      <td>0</td>\n",
              "      <td>0.06607918441295624</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>420</th>\n",
              "      <td>11998</td>\n",
              "      <td>Hannes Delcroix</td>\n",
              "      <td>3</td>\n",
              "      <td>130</td>\n",
              "      <td>0</td>\n",
              "      <td>0.23279432207345963</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0830167606472969</td>\n",
              "      <td>4</td>\n",
              "      <td>2</td>\n",
              "      <td>...</td>\n",
              "      <td>4</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>D S</td>\n",
              "      <td>Burnley</td>\n",
              "      <td>0</td>\n",
              "      <td>0.23279432207345963</td>\n",
              "      <td>0.5750201642513275</td>\n",
              "      <td>0.4920034073293209</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>421</th>\n",
              "      <td>12027</td>\n",
              "      <td>Mohammed Kudus</td>\n",
              "      <td>3</td>\n",
              "      <td>34</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>S</td>\n",
              "      <td>West Ham</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>422</th>\n",
              "      <td>12094</td>\n",
              "      <td>Mike Trésor</td>\n",
              "      <td>2</td>\n",
              "      <td>83</td>\n",
              "      <td>0</td>\n",
              "      <td>0.04863787442445755</td>\n",
              "      <td>0</td>\n",
              "      <td>0.4080401435494423</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>...</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>S</td>\n",
              "      <td>Burnley</td>\n",
              "      <td>0</td>\n",
              "      <td>0.04863787442445755</td>\n",
              "      <td>0.10748984664678574</td>\n",
              "      <td>0.058851972222328186</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>423 rows × 48 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-7e91970f-a5bb-49d9-82fe-769cd62514a7')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-7e91970f-a5bb-49d9-82fe-769cd62514a7 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-7e91970f-a5bb-49d9-82fe-769cd62514a7');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-4d31f22e-2844-446c-9254-184797675ff0\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-4d31f22e-2844-446c-9254-184797675ff0')\"\n",
              "            title=\"Suggest charts.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-4d31f22e-2844-446c-9254-184797675ff0 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 69
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "EPL_player_df['goals'] = EPL_player_df['goals_1wks_x'].astype(int)\n",
        "top25goals = EPL_player_df.nlargest(20, 'goals')\n",
        "top25goals"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "id": "3H-vTRXF8VDs",
        "outputId": "0715924d-eb3a-43c2-8d6e-3a8bfe6d0265"
      },
      "execution_count": 70,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "       id        player_name games_x time_x goals_1wks_x           xG_1wks_x  \\\n",
              "0    8260     Erling Haaland       6    535            8   8.579197525978088   \n",
              "1     453      Son Heung-Min       6    509            5  2.5317263305187225   \n",
              "2     468      Callum Wilson       6    242            4   4.151702173054218   \n",
              "3    1776       Jarrod Bowen       6    540            4  2.5880690813064575   \n",
              "4    3697    Odsonne Edouard       6    522            4   3.337449833750725   \n",
              "5    6552       Bryan Mbeumo       6    540            4   4.030633717775345   \n",
              "6   10177      Evan Ferguson       6    256            4  2.3277347590774298   \n",
              "7    1250      Mohamed Salah       6    534            3  4.1228694170713425   \n",
              "8    1679    Dominic Solanke       6    540            3  3.1444294676184654   \n",
              "9    5232     Alexander Isak       5    314            3  2.3263931274414062   \n",
              "10   6049        Solly March       4    324            3   2.172745257616043   \n",
              "11   7322        Bukayo Saka       6    540            3   3.165238469839096   \n",
              "12   7814      Taiwo Awoniyi       6    423            3   2.686458572745323   \n",
              "13   8845     Hee-Chan Hwang       6    246            3  0.4186500832438469   \n",
              "14  10720       Darwin Núñez       6    213            3  3.6055014580488205   \n",
              "15  10806       Kaoru Mitoma       6    484            3  2.4873876832425594   \n",
              "16    239        Pascal Groß       5    443            2  0.6706545501947403   \n",
              "17    531    Michail Antonio       6    476            2  1.2180450707674026   \n",
              "18    618    Raheem Sterling       6    538            2  2.3850797787308693   \n",
              "19    843  James Ward-Prowse       5    450            2  1.5923993084579706   \n",
              "\n",
              "   assists_1wks_x             xA_1wks_x shots_1wks_x key_passes_1wks_x  ...  \\\n",
              "0               1    1.1254648137837648           31                 7  ...   \n",
              "1               0     1.766825806349516           16                11  ...   \n",
              "2               0  0.015900330618023872           15                 1  ...   \n",
              "3               1    0.8080089539289474           16                 4  ...   \n",
              "4               0   0.26749951019883156           20                 5  ...   \n",
              "5               0    0.5042923986911774           13                 6  ...   \n",
              "6               0   0.18965790420770645           15                 2  ...   \n",
              "7               4    4.0291087329387665           20                14  ...   \n",
              "8               1   0.24999123811721802           16                 6  ...   \n",
              "9               0   0.04466302692890167            9                 1  ...   \n",
              "10              0    0.1520106978714466           11                 5  ...   \n",
              "11              2    1.6839852184057236           15                18  ...   \n",
              "12              2     0.575734082609415            9                 7  ...   \n",
              "13              0    0.6011396646499634            7                 1  ...   \n",
              "14              1    0.5849390625953674           14                 1  ...   \n",
              "15              3    2.0108523070812225           11                14  ...   \n",
              "16              0     1.181119142100215           10                15  ...   \n",
              "17              0    0.3325394243001938            6                 2  ...   \n",
              "18              0    1.0941349938511848           14                 9  ...   \n",
              "19              3    1.5058446452021599            6                 8  ...   \n",
              "\n",
              "   key_passes_1wks_y yellow_cards red_cards position_y  \\\n",
              "0                  7            0         0          F   \n",
              "1                 11            0         0        F M   \n",
              "2                  1            1         0        F S   \n",
              "3                  4            1         0          M   \n",
              "4                  5            0         0          F   \n",
              "5                  6            1         0          F   \n",
              "6                  2            0         0        F S   \n",
              "7                 14            0         0          F   \n",
              "8                  6            0         0          F   \n",
              "9                  1            0         0        F S   \n",
              "10                 5            0         0          M   \n",
              "11                18            1         0          F   \n",
              "12                 7            1         0        F S   \n",
              "13                 1            1         0        M S   \n",
              "14                 1            1         0        F S   \n",
              "15                14            2         0        M S   \n",
              "16                15            1         0          M   \n",
              "17                 2            1         0          F   \n",
              "18                 9            1         0          M   \n",
              "19                 8            1         0          M   \n",
              "\n",
              "               team_title_y npg_1wks_y         npxG_1wks_y  \\\n",
              "0           Manchester City          7   7.056859791278839   \n",
              "1                 Tottenham          5  2.5317263305187225   \n",
              "2          Newcastle United          3   3.390533320605755   \n",
              "3                  West Ham          4  2.5880690813064575   \n",
              "4            Crystal Palace          4   3.337449833750725   \n",
              "5                 Brentford          2  2.5082959830760956   \n",
              "6                  Brighton          4  2.3277347590774298   \n",
              "7                 Liverpool          2  2.6005317866802216   \n",
              "8               Bournemouth          3  3.1444294676184654   \n",
              "9          Newcastle United          3  2.3263931274414062   \n",
              "10                 Brighton          3   2.172745257616043   \n",
              "11                  Arsenal          1  1.6429008468985558   \n",
              "12        Nottingham Forest          3   2.686458572745323   \n",
              "13  Wolverhampton Wanderers          3  0.4186500832438469   \n",
              "14                Liverpool          3  3.6055014580488205   \n",
              "15                 Brighton          3  2.4873876832425594   \n",
              "16                 Brighton          2  0.6706545501947403   \n",
              "17                 West Ham          2  1.2180450707674026   \n",
              "18                  Chelsea          2  2.3850797787308693   \n",
              "19                 West Ham          2  1.5923993084579706   \n",
              "\n",
              "               xGChain            xGBuildup goals  \n",
              "0    7.640112280845642   0.7298882678151131     8  \n",
              "1    5.605026721954346   2.0503234416246414     5  \n",
              "2    3.509474078193307  0.23684066534042358     4  \n",
              "3   3.1078141033649445   1.2324372678995132     4  \n",
              "4     3.16320563852787   0.4057522751390934     4  \n",
              "5    3.617050915956497    1.166298694908619     4  \n",
              "6   3.2969032488763332   0.8994851000607014     4  \n",
              "7    6.172559082508087   1.7774320244789124     3  \n",
              "8   3.3420777916908264   0.2234213650226593     3  \n",
              "9   2.5631474554538727   0.7165845483541489     3  \n",
              "10   3.237823724746704   1.1398873031139374     3  \n",
              "11  3.4526992440223694    1.445137981325388     3  \n",
              "12  2.6330780684947968  0.04454548377543688     3  \n",
              "13   0.880275965668261   0.5792413735762239     3  \n",
              "14   3.756332203745842   0.4496759697794914     3  \n",
              "15   7.103270053863525    3.257947612553835     3  \n",
              "16  5.0939019322395325    4.227585554122925     2  \n",
              "17   2.786684215068817   1.2360997051000595     2  \n",
              "18   6.070981562137604    3.135519750416279     2  \n",
              "19  2.5155444350093603   0.9718883950263262     2  \n",
              "\n",
              "[20 rows x 49 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-eef69506-7775-400c-9a20-e93c1bcca805\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>player_name</th>\n",
              "      <th>games_x</th>\n",
              "      <th>time_x</th>\n",
              "      <th>goals_1wks_x</th>\n",
              "      <th>xG_1wks_x</th>\n",
              "      <th>assists_1wks_x</th>\n",
              "      <th>xA_1wks_x</th>\n",
              "      <th>shots_1wks_x</th>\n",
              "      <th>key_passes_1wks_x</th>\n",
              "      <th>...</th>\n",
              "      <th>key_passes_1wks_y</th>\n",
              "      <th>yellow_cards</th>\n",
              "      <th>red_cards</th>\n",
              "      <th>position_y</th>\n",
              "      <th>team_title_y</th>\n",
              "      <th>npg_1wks_y</th>\n",
              "      <th>npxG_1wks_y</th>\n",
              "      <th>xGChain</th>\n",
              "      <th>xGBuildup</th>\n",
              "      <th>goals</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>8260</td>\n",
              "      <td>Erling Haaland</td>\n",
              "      <td>6</td>\n",
              "      <td>535</td>\n",
              "      <td>8</td>\n",
              "      <td>8.579197525978088</td>\n",
              "      <td>1</td>\n",
              "      <td>1.1254648137837648</td>\n",
              "      <td>31</td>\n",
              "      <td>7</td>\n",
              "      <td>...</td>\n",
              "      <td>7</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>F</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>7</td>\n",
              "      <td>7.056859791278839</td>\n",
              "      <td>7.640112280845642</td>\n",
              "      <td>0.7298882678151131</td>\n",
              "      <td>8</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>453</td>\n",
              "      <td>Son Heung-Min</td>\n",
              "      <td>6</td>\n",
              "      <td>509</td>\n",
              "      <td>5</td>\n",
              "      <td>2.5317263305187225</td>\n",
              "      <td>0</td>\n",
              "      <td>1.766825806349516</td>\n",
              "      <td>16</td>\n",
              "      <td>11</td>\n",
              "      <td>...</td>\n",
              "      <td>11</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>F M</td>\n",
              "      <td>Tottenham</td>\n",
              "      <td>5</td>\n",
              "      <td>2.5317263305187225</td>\n",
              "      <td>5.605026721954346</td>\n",
              "      <td>2.0503234416246414</td>\n",
              "      <td>5</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>468</td>\n",
              "      <td>Callum Wilson</td>\n",
              "      <td>6</td>\n",
              "      <td>242</td>\n",
              "      <td>4</td>\n",
              "      <td>4.151702173054218</td>\n",
              "      <td>0</td>\n",
              "      <td>0.015900330618023872</td>\n",
              "      <td>15</td>\n",
              "      <td>1</td>\n",
              "      <td>...</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>F S</td>\n",
              "      <td>Newcastle United</td>\n",
              "      <td>3</td>\n",
              "      <td>3.390533320605755</td>\n",
              "      <td>3.509474078193307</td>\n",
              "      <td>0.23684066534042358</td>\n",
              "      <td>4</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>1776</td>\n",
              "      <td>Jarrod Bowen</td>\n",
              "      <td>6</td>\n",
              "      <td>540</td>\n",
              "      <td>4</td>\n",
              "      <td>2.5880690813064575</td>\n",
              "      <td>1</td>\n",
              "      <td>0.8080089539289474</td>\n",
              "      <td>16</td>\n",
              "      <td>4</td>\n",
              "      <td>...</td>\n",
              "      <td>4</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>M</td>\n",
              "      <td>West Ham</td>\n",
              "      <td>4</td>\n",
              "      <td>2.5880690813064575</td>\n",
              "      <td>3.1078141033649445</td>\n",
              "      <td>1.2324372678995132</td>\n",
              "      <td>4</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>3697</td>\n",
              "      <td>Odsonne Edouard</td>\n",
              "      <td>6</td>\n",
              "      <td>522</td>\n",
              "      <td>4</td>\n",
              "      <td>3.337449833750725</td>\n",
              "      <td>0</td>\n",
              "      <td>0.26749951019883156</td>\n",
              "      <td>20</td>\n",
              "      <td>5</td>\n",
              "      <td>...</td>\n",
              "      <td>5</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>F</td>\n",
              "      <td>Crystal Palace</td>\n",
              "      <td>4</td>\n",
              "      <td>3.337449833750725</td>\n",
              "      <td>3.16320563852787</td>\n",
              "      <td>0.4057522751390934</td>\n",
              "      <td>4</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>6552</td>\n",
              "      <td>Bryan Mbeumo</td>\n",
              "      <td>6</td>\n",
              "      <td>540</td>\n",
              "      <td>4</td>\n",
              "      <td>4.030633717775345</td>\n",
              "      <td>0</td>\n",
              "      <td>0.5042923986911774</td>\n",
              "      <td>13</td>\n",
              "      <td>6</td>\n",
              "      <td>...</td>\n",
              "      <td>6</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>F</td>\n",
              "      <td>Brentford</td>\n",
              "      <td>2</td>\n",
              "      <td>2.5082959830760956</td>\n",
              "      <td>3.617050915956497</td>\n",
              "      <td>1.166298694908619</td>\n",
              "      <td>4</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>10177</td>\n",
              "      <td>Evan Ferguson</td>\n",
              "      <td>6</td>\n",
              "      <td>256</td>\n",
              "      <td>4</td>\n",
              "      <td>2.3277347590774298</td>\n",
              "      <td>0</td>\n",
              "      <td>0.18965790420770645</td>\n",
              "      <td>15</td>\n",
              "      <td>2</td>\n",
              "      <td>...</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>F S</td>\n",
              "      <td>Brighton</td>\n",
              "      <td>4</td>\n",
              "      <td>2.3277347590774298</td>\n",
              "      <td>3.2969032488763332</td>\n",
              "      <td>0.8994851000607014</td>\n",
              "      <td>4</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>1250</td>\n",
              "      <td>Mohamed Salah</td>\n",
              "      <td>6</td>\n",
              "      <td>534</td>\n",
              "      <td>3</td>\n",
              "      <td>4.1228694170713425</td>\n",
              "      <td>4</td>\n",
              "      <td>4.0291087329387665</td>\n",
              "      <td>20</td>\n",
              "      <td>14</td>\n",
              "      <td>...</td>\n",
              "      <td>14</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>F</td>\n",
              "      <td>Liverpool</td>\n",
              "      <td>2</td>\n",
              "      <td>2.6005317866802216</td>\n",
              "      <td>6.172559082508087</td>\n",
              "      <td>1.7774320244789124</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>1679</td>\n",
              "      <td>Dominic Solanke</td>\n",
              "      <td>6</td>\n",
              "      <td>540</td>\n",
              "      <td>3</td>\n",
              "      <td>3.1444294676184654</td>\n",
              "      <td>1</td>\n",
              "      <td>0.24999123811721802</td>\n",
              "      <td>16</td>\n",
              "      <td>6</td>\n",
              "      <td>...</td>\n",
              "      <td>6</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>F</td>\n",
              "      <td>Bournemouth</td>\n",
              "      <td>3</td>\n",
              "      <td>3.1444294676184654</td>\n",
              "      <td>3.3420777916908264</td>\n",
              "      <td>0.2234213650226593</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>5232</td>\n",
              "      <td>Alexander Isak</td>\n",
              "      <td>5</td>\n",
              "      <td>314</td>\n",
              "      <td>3</td>\n",
              "      <td>2.3263931274414062</td>\n",
              "      <td>0</td>\n",
              "      <td>0.04466302692890167</td>\n",
              "      <td>9</td>\n",
              "      <td>1</td>\n",
              "      <td>...</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>F S</td>\n",
              "      <td>Newcastle United</td>\n",
              "      <td>3</td>\n",
              "      <td>2.3263931274414062</td>\n",
              "      <td>2.5631474554538727</td>\n",
              "      <td>0.7165845483541489</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10</th>\n",
              "      <td>6049</td>\n",
              "      <td>Solly March</td>\n",
              "      <td>4</td>\n",
              "      <td>324</td>\n",
              "      <td>3</td>\n",
              "      <td>2.172745257616043</td>\n",
              "      <td>0</td>\n",
              "      <td>0.1520106978714466</td>\n",
              "      <td>11</td>\n",
              "      <td>5</td>\n",
              "      <td>...</td>\n",
              "      <td>5</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>M</td>\n",
              "      <td>Brighton</td>\n",
              "      <td>3</td>\n",
              "      <td>2.172745257616043</td>\n",
              "      <td>3.237823724746704</td>\n",
              "      <td>1.1398873031139374</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>11</th>\n",
              "      <td>7322</td>\n",
              "      <td>Bukayo Saka</td>\n",
              "      <td>6</td>\n",
              "      <td>540</td>\n",
              "      <td>3</td>\n",
              "      <td>3.165238469839096</td>\n",
              "      <td>2</td>\n",
              "      <td>1.6839852184057236</td>\n",
              "      <td>15</td>\n",
              "      <td>18</td>\n",
              "      <td>...</td>\n",
              "      <td>18</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>F</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>1</td>\n",
              "      <td>1.6429008468985558</td>\n",
              "      <td>3.4526992440223694</td>\n",
              "      <td>1.445137981325388</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>12</th>\n",
              "      <td>7814</td>\n",
              "      <td>Taiwo Awoniyi</td>\n",
              "      <td>6</td>\n",
              "      <td>423</td>\n",
              "      <td>3</td>\n",
              "      <td>2.686458572745323</td>\n",
              "      <td>2</td>\n",
              "      <td>0.575734082609415</td>\n",
              "      <td>9</td>\n",
              "      <td>7</td>\n",
              "      <td>...</td>\n",
              "      <td>7</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>F S</td>\n",
              "      <td>Nottingham Forest</td>\n",
              "      <td>3</td>\n",
              "      <td>2.686458572745323</td>\n",
              "      <td>2.6330780684947968</td>\n",
              "      <td>0.04454548377543688</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>13</th>\n",
              "      <td>8845</td>\n",
              "      <td>Hee-Chan Hwang</td>\n",
              "      <td>6</td>\n",
              "      <td>246</td>\n",
              "      <td>3</td>\n",
              "      <td>0.4186500832438469</td>\n",
              "      <td>0</td>\n",
              "      <td>0.6011396646499634</td>\n",
              "      <td>7</td>\n",
              "      <td>1</td>\n",
              "      <td>...</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>M S</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>3</td>\n",
              "      <td>0.4186500832438469</td>\n",
              "      <td>0.880275965668261</td>\n",
              "      <td>0.5792413735762239</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>14</th>\n",
              "      <td>10720</td>\n",
              "      <td>Darwin Núñez</td>\n",
              "      <td>6</td>\n",
              "      <td>213</td>\n",
              "      <td>3</td>\n",
              "      <td>3.6055014580488205</td>\n",
              "      <td>1</td>\n",
              "      <td>0.5849390625953674</td>\n",
              "      <td>14</td>\n",
              "      <td>1</td>\n",
              "      <td>...</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>F S</td>\n",
              "      <td>Liverpool</td>\n",
              "      <td>3</td>\n",
              "      <td>3.6055014580488205</td>\n",
              "      <td>3.756332203745842</td>\n",
              "      <td>0.4496759697794914</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>15</th>\n",
              "      <td>10806</td>\n",
              "      <td>Kaoru Mitoma</td>\n",
              "      <td>6</td>\n",
              "      <td>484</td>\n",
              "      <td>3</td>\n",
              "      <td>2.4873876832425594</td>\n",
              "      <td>3</td>\n",
              "      <td>2.0108523070812225</td>\n",
              "      <td>11</td>\n",
              "      <td>14</td>\n",
              "      <td>...</td>\n",
              "      <td>14</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>M S</td>\n",
              "      <td>Brighton</td>\n",
              "      <td>3</td>\n",
              "      <td>2.4873876832425594</td>\n",
              "      <td>7.103270053863525</td>\n",
              "      <td>3.257947612553835</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>16</th>\n",
              "      <td>239</td>\n",
              "      <td>Pascal Groß</td>\n",
              "      <td>5</td>\n",
              "      <td>443</td>\n",
              "      <td>2</td>\n",
              "      <td>0.6706545501947403</td>\n",
              "      <td>0</td>\n",
              "      <td>1.181119142100215</td>\n",
              "      <td>10</td>\n",
              "      <td>15</td>\n",
              "      <td>...</td>\n",
              "      <td>15</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>M</td>\n",
              "      <td>Brighton</td>\n",
              "      <td>2</td>\n",
              "      <td>0.6706545501947403</td>\n",
              "      <td>5.0939019322395325</td>\n",
              "      <td>4.227585554122925</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>17</th>\n",
              "      <td>531</td>\n",
              "      <td>Michail Antonio</td>\n",
              "      <td>6</td>\n",
              "      <td>476</td>\n",
              "      <td>2</td>\n",
              "      <td>1.2180450707674026</td>\n",
              "      <td>0</td>\n",
              "      <td>0.3325394243001938</td>\n",
              "      <td>6</td>\n",
              "      <td>2</td>\n",
              "      <td>...</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>F</td>\n",
              "      <td>West Ham</td>\n",
              "      <td>2</td>\n",
              "      <td>1.2180450707674026</td>\n",
              "      <td>2.786684215068817</td>\n",
              "      <td>1.2360997051000595</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>18</th>\n",
              "      <td>618</td>\n",
              "      <td>Raheem Sterling</td>\n",
              "      <td>6</td>\n",
              "      <td>538</td>\n",
              "      <td>2</td>\n",
              "      <td>2.3850797787308693</td>\n",
              "      <td>0</td>\n",
              "      <td>1.0941349938511848</td>\n",
              "      <td>14</td>\n",
              "      <td>9</td>\n",
              "      <td>...</td>\n",
              "      <td>9</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>M</td>\n",
              "      <td>Chelsea</td>\n",
              "      <td>2</td>\n",
              "      <td>2.3850797787308693</td>\n",
              "      <td>6.070981562137604</td>\n",
              "      <td>3.135519750416279</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>19</th>\n",
              "      <td>843</td>\n",
              "      <td>James Ward-Prowse</td>\n",
              "      <td>5</td>\n",
              "      <td>450</td>\n",
              "      <td>2</td>\n",
              "      <td>1.5923993084579706</td>\n",
              "      <td>3</td>\n",
              "      <td>1.5058446452021599</td>\n",
              "      <td>6</td>\n",
              "      <td>8</td>\n",
              "      <td>...</td>\n",
              "      <td>8</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>M</td>\n",
              "      <td>West Ham</td>\n",
              "      <td>2</td>\n",
              "      <td>1.5923993084579706</td>\n",
              "      <td>2.5155444350093603</td>\n",
              "      <td>0.9718883950263262</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>20 rows × 49 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-eef69506-7775-400c-9a20-e93c1bcca805')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-eef69506-7775-400c-9a20-e93c1bcca805 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-eef69506-7775-400c-9a20-e93c1bcca805');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-04b7f0f9-820c-4365-8ce6-7fa9da230a20\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-04b7f0f9-820c-4365-8ce6-7fa9da230a20')\"\n",
              "            title=\"Suggest charts.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-04b7f0f9-820c-4365-8ce6-7fa9da230a20 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 70
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "EPL_player_df['assists'] = EPL_player_df['assists_1wks_x'].astype(int)\n",
        "top25assists = EPL_player_df.nlargest(20, 'assists')\n",
        "top25assists"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "id": "QhNKarUM-fT7",
        "outputId": "79115097-440b-4a1c-b6a9-970aa5972aa2"
      },
      "execution_count": 71,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "        id           player_name games_x time_x goals_1wks_x  \\\n",
              "7     1250         Mohamed Salah       6    534            3   \n",
              "30    6818        James Maddison       6    520            2   \n",
              "62    6382            Pedro Neto       6    540            1   \n",
              "15   10806          Kaoru Mitoma       6    484            3   \n",
              "19     843     James Ward-Prowse       5    450            2   \n",
              "39   10846        Julián Álvarez       6    512            2   \n",
              "55    5136             Estupiñán       5    450            1   \n",
              "60    6055            Phil Foden       6    430            1   \n",
              "126    652       Kieran Trippier       6    526            0   \n",
              "201   5735  Jean-Philippe Mateta       4    116            0   \n",
              "11    7322           Bukayo Saka       6    540            3   \n",
              "12    7814         Taiwo Awoniyi       6    423            3   \n",
              "28    6556          Moussa Diaby       6    502            2   \n",
              "35    8150        Anthony Gordon       6    473            2   \n",
              "87    8865         Ollie Watkins       6    519            1   \n",
              "129    672           Jordan Ayew       6    474            0   \n",
              "169   1823           Lucas Digne       6    534            0   \n",
              "183   3600          Serge Aurier       5    408            0   \n",
              "263   7752    Gabriel Martinelli       5    365            0   \n",
              "276   8226         Tariq Lamptey       3     92            0   \n",
              "\n",
              "                xG_1wks_x assists_1wks_x            xA_1wks_x shots_1wks_x  \\\n",
              "7      4.1228694170713425              4   4.0291087329387665           20   \n",
              "30     1.7259051259607077              4    2.172846231609583           16   \n",
              "62     0.9463459253311157              4   2.4093276858329773           11   \n",
              "15     2.4873876832425594              3   2.0108523070812225           11   \n",
              "19     1.5923993084579706              3   1.5058446452021599            6   \n",
              "39      2.704055093228817              3   1.4385859072208405           20   \n",
              "55     0.6494380263611674              3    2.586997412145138            7   \n",
              "60     0.8010636642575264              3   1.2462816648185253           13   \n",
              "126  0.011364758014678955              3   2.2047189939767122            1   \n",
              "201   0.12148869782686234              3   0.9034757018089294            1   \n",
              "11      3.165238469839096              2   1.6839852184057236           15   \n",
              "12      2.686458572745323              2    0.575734082609415            9   \n",
              "28     1.3126200884580612              2   2.7922986894845963           13   \n",
              "35     1.2908078134059906              2   2.3695434629917145           12   \n",
              "87     2.5903127640485764              2   1.5743603855371475           16   \n",
              "129    1.3352972716093063              2    1.040465697646141           12   \n",
              "169   0.11631829477846622              2   0.8520027101039886            4   \n",
              "183  0.022981125861406326              2    0.566937267780304            1   \n",
              "263     0.666835606098175              2   0.2102539911866188            9   \n",
              "276   0.01694534160196781              2  0.22285597026348114            1   \n",
              "\n",
              "    key_passes_1wks_x  ... yellow_cards red_cards position_y  \\\n",
              "7                  14  ...            0         0          F   \n",
              "30                 17  ...            2         0          M   \n",
              "62                 18  ...            1         0          M   \n",
              "15                 14  ...            2         0        M S   \n",
              "19                  8  ...            1         0          M   \n",
              "39                 16  ...            1         0          M   \n",
              "55                 13  ...            2         0          D   \n",
              "60                 15  ...            0         0        M S   \n",
              "126                18  ...            1         0          D   \n",
              "201                 3  ...            0         0          S   \n",
              "11                 18  ...            1         0          F   \n",
              "12                  7  ...            1         0        F S   \n",
              "28                 10  ...            0         0        F M   \n",
              "35                  8  ...            4         0        F S   \n",
              "87                 10  ...            0         0          F   \n",
              "129                 7  ...            2         0          M   \n",
              "169                12  ...            3         0          D   \n",
              "183                 2  ...            2         0          D   \n",
              "263                 4  ...            0         0          F   \n",
              "276                 2  ...            2         0        D S   \n",
              "\n",
              "                team_title_y npg_1wks_y           npxG_1wks_y  \\\n",
              "7                  Liverpool          2    2.6005317866802216   \n",
              "30                 Tottenham          2    1.7259051259607077   \n",
              "62   Wolverhampton Wanderers          1    0.9463459253311157   \n",
              "15                  Brighton          3    2.4873876832425594   \n",
              "19                  West Ham          2    1.5923993084579706   \n",
              "39           Manchester City          2     2.704055093228817   \n",
              "55                  Brighton          1    0.6494380263611674   \n",
              "60           Manchester City          1    0.8010636642575264   \n",
              "126         Newcastle United          0  0.011364758014678955   \n",
              "201           Crystal Palace          0   0.12148869782686234   \n",
              "11                   Arsenal          1    1.6429008468985558   \n",
              "12         Nottingham Forest          3     2.686458572745323   \n",
              "28               Aston Villa          2    1.3126200884580612   \n",
              "35          Newcastle United          2    1.2908078134059906   \n",
              "87               Aston Villa          1    2.5903127640485764   \n",
              "129           Crystal Palace          0    1.3352972716093063   \n",
              "169              Aston Villa          0   0.11631829477846622   \n",
              "183        Nottingham Forest          0  0.022981125861406326   \n",
              "263                  Arsenal          0     0.666835606098175   \n",
              "276                 Brighton          0   0.01694534160196781   \n",
              "\n",
              "                 xGChain            xGBuildup goals assists  \n",
              "7      6.172559082508087   1.7774320244789124     3       4  \n",
              "30     6.148197948932648   3.3459045588970184     2       4  \n",
              "62     3.190813288092613   0.4787079580128193     1       4  \n",
              "15     7.103270053863525    3.257947612553835     3       3  \n",
              "19    2.5155444350093603   0.9718883950263262     2       3  \n",
              "39     6.323403298854828    3.581193447113037     2       3  \n",
              "55    5.1189524829387665   3.5554743763059378     1       3  \n",
              "60     3.908411867916584   2.9026260152459145     1       3  \n",
              "126    4.099502220749855   3.0875226110219955     0       3  \n",
              "201   1.0617512241005898  0.15994777902960777     0       3  \n",
              "11    3.4526992440223694    1.445137981325388     3       2  \n",
              "12    2.6330780684947968  0.04454548377543688     3       2  \n",
              "28     4.868376150727272    2.633648296818137     2       2  \n",
              "35    4.7087570279836655    1.964593606069684     2       2  \n",
              "87     5.039653241634369   1.1009831968694925     1       2  \n",
              "129   2.4842421114444733   1.3111906498670578     0       2  \n",
              "169   1.8326681181788445   1.4727216772735119     0       2  \n",
              "183    1.259076088666916    0.692138809710741     0       2  \n",
              "263   2.5816489160060883    2.073520690202713     0       2  \n",
              "276  0.27053070068359375   0.2535853683948517     0       2  \n",
              "\n",
              "[20 rows x 50 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-8ebb9fe9-2c71-4e0c-a418-1e9388636f24\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>player_name</th>\n",
              "      <th>games_x</th>\n",
              "      <th>time_x</th>\n",
              "      <th>goals_1wks_x</th>\n",
              "      <th>xG_1wks_x</th>\n",
              "      <th>assists_1wks_x</th>\n",
              "      <th>xA_1wks_x</th>\n",
              "      <th>shots_1wks_x</th>\n",
              "      <th>key_passes_1wks_x</th>\n",
              "      <th>...</th>\n",
              "      <th>yellow_cards</th>\n",
              "      <th>red_cards</th>\n",
              "      <th>position_y</th>\n",
              "      <th>team_title_y</th>\n",
              "      <th>npg_1wks_y</th>\n",
              "      <th>npxG_1wks_y</th>\n",
              "      <th>xGChain</th>\n",
              "      <th>xGBuildup</th>\n",
              "      <th>goals</th>\n",
              "      <th>assists</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>1250</td>\n",
              "      <td>Mohamed Salah</td>\n",
              "      <td>6</td>\n",
              "      <td>534</td>\n",
              "      <td>3</td>\n",
              "      <td>4.1228694170713425</td>\n",
              "      <td>4</td>\n",
              "      <td>4.0291087329387665</td>\n",
              "      <td>20</td>\n",
              "      <td>14</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>F</td>\n",
              "      <td>Liverpool</td>\n",
              "      <td>2</td>\n",
              "      <td>2.6005317866802216</td>\n",
              "      <td>6.172559082508087</td>\n",
              "      <td>1.7774320244789124</td>\n",
              "      <td>3</td>\n",
              "      <td>4</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>30</th>\n",
              "      <td>6818</td>\n",
              "      <td>James Maddison</td>\n",
              "      <td>6</td>\n",
              "      <td>520</td>\n",
              "      <td>2</td>\n",
              "      <td>1.7259051259607077</td>\n",
              "      <td>4</td>\n",
              "      <td>2.172846231609583</td>\n",
              "      <td>16</td>\n",
              "      <td>17</td>\n",
              "      <td>...</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>M</td>\n",
              "      <td>Tottenham</td>\n",
              "      <td>2</td>\n",
              "      <td>1.7259051259607077</td>\n",
              "      <td>6.148197948932648</td>\n",
              "      <td>3.3459045588970184</td>\n",
              "      <td>2</td>\n",
              "      <td>4</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>62</th>\n",
              "      <td>6382</td>\n",
              "      <td>Pedro Neto</td>\n",
              "      <td>6</td>\n",
              "      <td>540</td>\n",
              "      <td>1</td>\n",
              "      <td>0.9463459253311157</td>\n",
              "      <td>4</td>\n",
              "      <td>2.4093276858329773</td>\n",
              "      <td>11</td>\n",
              "      <td>18</td>\n",
              "      <td>...</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>M</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>1</td>\n",
              "      <td>0.9463459253311157</td>\n",
              "      <td>3.190813288092613</td>\n",
              "      <td>0.4787079580128193</td>\n",
              "      <td>1</td>\n",
              "      <td>4</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>15</th>\n",
              "      <td>10806</td>\n",
              "      <td>Kaoru Mitoma</td>\n",
              "      <td>6</td>\n",
              "      <td>484</td>\n",
              "      <td>3</td>\n",
              "      <td>2.4873876832425594</td>\n",
              "      <td>3</td>\n",
              "      <td>2.0108523070812225</td>\n",
              "      <td>11</td>\n",
              "      <td>14</td>\n",
              "      <td>...</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>M S</td>\n",
              "      <td>Brighton</td>\n",
              "      <td>3</td>\n",
              "      <td>2.4873876832425594</td>\n",
              "      <td>7.103270053863525</td>\n",
              "      <td>3.257947612553835</td>\n",
              "      <td>3</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>19</th>\n",
              "      <td>843</td>\n",
              "      <td>James Ward-Prowse</td>\n",
              "      <td>5</td>\n",
              "      <td>450</td>\n",
              "      <td>2</td>\n",
              "      <td>1.5923993084579706</td>\n",
              "      <td>3</td>\n",
              "      <td>1.5058446452021599</td>\n",
              "      <td>6</td>\n",
              "      <td>8</td>\n",
              "      <td>...</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>M</td>\n",
              "      <td>West Ham</td>\n",
              "      <td>2</td>\n",
              "      <td>1.5923993084579706</td>\n",
              "      <td>2.5155444350093603</td>\n",
              "      <td>0.9718883950263262</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>39</th>\n",
              "      <td>10846</td>\n",
              "      <td>Julián Álvarez</td>\n",
              "      <td>6</td>\n",
              "      <td>512</td>\n",
              "      <td>2</td>\n",
              "      <td>2.704055093228817</td>\n",
              "      <td>3</td>\n",
              "      <td>1.4385859072208405</td>\n",
              "      <td>20</td>\n",
              "      <td>16</td>\n",
              "      <td>...</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>M</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>2</td>\n",
              "      <td>2.704055093228817</td>\n",
              "      <td>6.323403298854828</td>\n",
              "      <td>3.581193447113037</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>55</th>\n",
              "      <td>5136</td>\n",
              "      <td>Estupiñán</td>\n",
              "      <td>5</td>\n",
              "      <td>450</td>\n",
              "      <td>1</td>\n",
              "      <td>0.6494380263611674</td>\n",
              "      <td>3</td>\n",
              "      <td>2.586997412145138</td>\n",
              "      <td>7</td>\n",
              "      <td>13</td>\n",
              "      <td>...</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>D</td>\n",
              "      <td>Brighton</td>\n",
              "      <td>1</td>\n",
              "      <td>0.6494380263611674</td>\n",
              "      <td>5.1189524829387665</td>\n",
              "      <td>3.5554743763059378</td>\n",
              "      <td>1</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>60</th>\n",
              "      <td>6055</td>\n",
              "      <td>Phil Foden</td>\n",
              "      <td>6</td>\n",
              "      <td>430</td>\n",
              "      <td>1</td>\n",
              "      <td>0.8010636642575264</td>\n",
              "      <td>3</td>\n",
              "      <td>1.2462816648185253</td>\n",
              "      <td>13</td>\n",
              "      <td>15</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>M S</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>1</td>\n",
              "      <td>0.8010636642575264</td>\n",
              "      <td>3.908411867916584</td>\n",
              "      <td>2.9026260152459145</td>\n",
              "      <td>1</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>126</th>\n",
              "      <td>652</td>\n",
              "      <td>Kieran Trippier</td>\n",
              "      <td>6</td>\n",
              "      <td>526</td>\n",
              "      <td>0</td>\n",
              "      <td>0.011364758014678955</td>\n",
              "      <td>3</td>\n",
              "      <td>2.2047189939767122</td>\n",
              "      <td>1</td>\n",
              "      <td>18</td>\n",
              "      <td>...</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>D</td>\n",
              "      <td>Newcastle United</td>\n",
              "      <td>0</td>\n",
              "      <td>0.011364758014678955</td>\n",
              "      <td>4.099502220749855</td>\n",
              "      <td>3.0875226110219955</td>\n",
              "      <td>0</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>201</th>\n",
              "      <td>5735</td>\n",
              "      <td>Jean-Philippe Mateta</td>\n",
              "      <td>4</td>\n",
              "      <td>116</td>\n",
              "      <td>0</td>\n",
              "      <td>0.12148869782686234</td>\n",
              "      <td>3</td>\n",
              "      <td>0.9034757018089294</td>\n",
              "      <td>1</td>\n",
              "      <td>3</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>S</td>\n",
              "      <td>Crystal Palace</td>\n",
              "      <td>0</td>\n",
              "      <td>0.12148869782686234</td>\n",
              "      <td>1.0617512241005898</td>\n",
              "      <td>0.15994777902960777</td>\n",
              "      <td>0</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>11</th>\n",
              "      <td>7322</td>\n",
              "      <td>Bukayo Saka</td>\n",
              "      <td>6</td>\n",
              "      <td>540</td>\n",
              "      <td>3</td>\n",
              "      <td>3.165238469839096</td>\n",
              "      <td>2</td>\n",
              "      <td>1.6839852184057236</td>\n",
              "      <td>15</td>\n",
              "      <td>18</td>\n",
              "      <td>...</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>F</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>1</td>\n",
              "      <td>1.6429008468985558</td>\n",
              "      <td>3.4526992440223694</td>\n",
              "      <td>1.445137981325388</td>\n",
              "      <td>3</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>12</th>\n",
              "      <td>7814</td>\n",
              "      <td>Taiwo Awoniyi</td>\n",
              "      <td>6</td>\n",
              "      <td>423</td>\n",
              "      <td>3</td>\n",
              "      <td>2.686458572745323</td>\n",
              "      <td>2</td>\n",
              "      <td>0.575734082609415</td>\n",
              "      <td>9</td>\n",
              "      <td>7</td>\n",
              "      <td>...</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>F S</td>\n",
              "      <td>Nottingham Forest</td>\n",
              "      <td>3</td>\n",
              "      <td>2.686458572745323</td>\n",
              "      <td>2.6330780684947968</td>\n",
              "      <td>0.04454548377543688</td>\n",
              "      <td>3</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>28</th>\n",
              "      <td>6556</td>\n",
              "      <td>Moussa Diaby</td>\n",
              "      <td>6</td>\n",
              "      <td>502</td>\n",
              "      <td>2</td>\n",
              "      <td>1.3126200884580612</td>\n",
              "      <td>2</td>\n",
              "      <td>2.7922986894845963</td>\n",
              "      <td>13</td>\n",
              "      <td>10</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>F M</td>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>2</td>\n",
              "      <td>1.3126200884580612</td>\n",
              "      <td>4.868376150727272</td>\n",
              "      <td>2.633648296818137</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>35</th>\n",
              "      <td>8150</td>\n",
              "      <td>Anthony Gordon</td>\n",
              "      <td>6</td>\n",
              "      <td>473</td>\n",
              "      <td>2</td>\n",
              "      <td>1.2908078134059906</td>\n",
              "      <td>2</td>\n",
              "      <td>2.3695434629917145</td>\n",
              "      <td>12</td>\n",
              "      <td>8</td>\n",
              "      <td>...</td>\n",
              "      <td>4</td>\n",
              "      <td>0</td>\n",
              "      <td>F S</td>\n",
              "      <td>Newcastle United</td>\n",
              "      <td>2</td>\n",
              "      <td>1.2908078134059906</td>\n",
              "      <td>4.7087570279836655</td>\n",
              "      <td>1.964593606069684</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>87</th>\n",
              "      <td>8865</td>\n",
              "      <td>Ollie Watkins</td>\n",
              "      <td>6</td>\n",
              "      <td>519</td>\n",
              "      <td>1</td>\n",
              "      <td>2.5903127640485764</td>\n",
              "      <td>2</td>\n",
              "      <td>1.5743603855371475</td>\n",
              "      <td>16</td>\n",
              "      <td>10</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>F</td>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>1</td>\n",
              "      <td>2.5903127640485764</td>\n",
              "      <td>5.039653241634369</td>\n",
              "      <td>1.1009831968694925</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>129</th>\n",
              "      <td>672</td>\n",
              "      <td>Jordan Ayew</td>\n",
              "      <td>6</td>\n",
              "      <td>474</td>\n",
              "      <td>0</td>\n",
              "      <td>1.3352972716093063</td>\n",
              "      <td>2</td>\n",
              "      <td>1.040465697646141</td>\n",
              "      <td>12</td>\n",
              "      <td>7</td>\n",
              "      <td>...</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>M</td>\n",
              "      <td>Crystal Palace</td>\n",
              "      <td>0</td>\n",
              "      <td>1.3352972716093063</td>\n",
              "      <td>2.4842421114444733</td>\n",
              "      <td>1.3111906498670578</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>169</th>\n",
              "      <td>1823</td>\n",
              "      <td>Lucas Digne</td>\n",
              "      <td>6</td>\n",
              "      <td>534</td>\n",
              "      <td>0</td>\n",
              "      <td>0.11631829477846622</td>\n",
              "      <td>2</td>\n",
              "      <td>0.8520027101039886</td>\n",
              "      <td>4</td>\n",
              "      <td>12</td>\n",
              "      <td>...</td>\n",
              "      <td>3</td>\n",
              "      <td>0</td>\n",
              "      <td>D</td>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>0</td>\n",
              "      <td>0.11631829477846622</td>\n",
              "      <td>1.8326681181788445</td>\n",
              "      <td>1.4727216772735119</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>183</th>\n",
              "      <td>3600</td>\n",
              "      <td>Serge Aurier</td>\n",
              "      <td>5</td>\n",
              "      <td>408</td>\n",
              "      <td>0</td>\n",
              "      <td>0.022981125861406326</td>\n",
              "      <td>2</td>\n",
              "      <td>0.566937267780304</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>...</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>D</td>\n",
              "      <td>Nottingham Forest</td>\n",
              "      <td>0</td>\n",
              "      <td>0.022981125861406326</td>\n",
              "      <td>1.259076088666916</td>\n",
              "      <td>0.692138809710741</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>263</th>\n",
              "      <td>7752</td>\n",
              "      <td>Gabriel Martinelli</td>\n",
              "      <td>5</td>\n",
              "      <td>365</td>\n",
              "      <td>0</td>\n",
              "      <td>0.666835606098175</td>\n",
              "      <td>2</td>\n",
              "      <td>0.2102539911866188</td>\n",
              "      <td>9</td>\n",
              "      <td>4</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>F</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>0</td>\n",
              "      <td>0.666835606098175</td>\n",
              "      <td>2.5816489160060883</td>\n",
              "      <td>2.073520690202713</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>276</th>\n",
              "      <td>8226</td>\n",
              "      <td>Tariq Lamptey</td>\n",
              "      <td>3</td>\n",
              "      <td>92</td>\n",
              "      <td>0</td>\n",
              "      <td>0.01694534160196781</td>\n",
              "      <td>2</td>\n",
              "      <td>0.22285597026348114</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>...</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>D S</td>\n",
              "      <td>Brighton</td>\n",
              "      <td>0</td>\n",
              "      <td>0.01694534160196781</td>\n",
              "      <td>0.27053070068359375</td>\n",
              "      <td>0.2535853683948517</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>20 rows × 50 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-8ebb9fe9-2c71-4e0c-a418-1e9388636f24')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-8ebb9fe9-2c71-4e0c-a418-1e9388636f24 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-8ebb9fe9-2c71-4e0c-a418-1e9388636f24');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-939ff7b0-66db-4326-a0f7-258b2b001cbb\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-939ff7b0-66db-4326-a0f7-258b2b001cbb')\"\n",
              "            title=\"Suggest charts.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-939ff7b0-66db-4326-a0f7-258b2b001cbb button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 71
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import pandas as pd\n",
        "import plotly.express as px\n",
        "import plotly.graph_objects as go"
      ],
      "metadata": {
        "id": "t81EQEbg_2jQ"
      },
      "execution_count": 72,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "fig3= go.Figure()\n",
        "fig3.add_trace(go.Scatter(x = top25goals[\"goals\"],\n",
        "                          y = top25goals[\"player_name\"],\n",
        "                          mode = 'markers',\n",
        "                          marker_color = 'darkblue',\n",
        "                          marker_size = 10,\n",
        "                          name = 'goals'))\n",
        "fig3.add_trace(go.Scatter(x = top25goals[\"xG_1wks_x\"],\n",
        "                          y = top25goals[\"player_name\"],\n",
        "                          mode = 'markers',\n",
        "                          marker_color = 'darkorange',\n",
        "                          marker_size = 10,\n",
        "                          name = 'xG'))\n",
        "for i in range(0, len(top25goals)):\n",
        "               fig3.add_shape(type='line',\n",
        "                              x0 = top25goals[\"goals\"][i],\n",
        "                              y0 = i,\n",
        "                              x1 = top25goals[\"xG_1wks_x\"][i],\n",
        "                              y1 = i,\n",
        "                              line=dict(color='crimson', width = 3))\n",
        "fig3.update_layout(title_text =\n",
        "                    \"Goals vs xG\",\n",
        "                    title_font_size = 30)\n",
        "fig3.update_xaxes(range=[0, 30])\n",
        "fig3.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 542
        },
        "id": "pCjmRmyw-6sd",
        "outputId": "a4e5e655-3133-4cae-cc1d-806cfd847656"
      },
      "execution_count": 73,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<html>\n",
              "<head><meta charset=\"utf-8\" /></head>\n",
              "<body>\n",
              "    <div>            <script src=\"https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.5/MathJax.js?config=TeX-AMS-MML_SVG\"></script><script type=\"text/javascript\">if (window.MathJax && window.MathJax.Hub && window.MathJax.Hub.Config) {window.MathJax.Hub.Config({SVG: {font: \"STIX-Web\"}});}</script>                <script type=\"text/javascript\">window.PlotlyConfig = {MathJaxConfig: 'local'};</script>\n",
              "        <script charset=\"utf-8\" src=\"https://cdn.plot.ly/plotly-2.24.1.min.js\"></script>                <div id=\"4df32591-eeb1-4fda-869b-77ec2a1d12fc\" class=\"plotly-graph-div\" style=\"height:525px; width:100%;\"></div>            <script type=\"text/javascript\">                                    window.PLOTLYENV=window.PLOTLYENV || {};                                    if (document.getElementById(\"4df32591-eeb1-4fda-869b-77ec2a1d12fc\")) {                    Plotly.newPlot(                        \"4df32591-eeb1-4fda-869b-77ec2a1d12fc\",                        [{\"marker\":{\"color\":\"darkblue\",\"size\":10},\"mode\":\"markers\",\"name\":\"goals\",\"x\":[8,5,4,4,4,4,4,3,3,3,3,3,3,3,3,3,2,2,2,2],\"y\":[\"Erling Haaland\",\"Son Heung-Min\",\"Callum Wilson\",\"Jarrod Bowen\",\"Odsonne Edouard\",\"Bryan Mbeumo\",\"Evan Ferguson\",\"Mohamed Salah\",\"Dominic Solanke\",\"Alexander Isak\",\"Solly March\",\"Bukayo Saka\",\"Taiwo Awoniyi\",\"Hee-Chan Hwang\",\"Darwin N\\u00fa\\u00f1ez\",\"Kaoru Mitoma\",\"Pascal Gro\\u00df\",\"Michail Antonio\",\"Raheem Sterling\",\"James Ward-Prowse\"],\"type\":\"scatter\"},{\"marker\":{\"color\":\"darkorange\",\"size\":10},\"mode\":\"markers\",\"name\":\"xG\",\"x\":[\"8.579197525978088\",\"2.5317263305187225\",\"4.151702173054218\",\"2.5880690813064575\",\"3.337449833750725\",\"4.030633717775345\",\"2.3277347590774298\",\"4.1228694170713425\",\"3.1444294676184654\",\"2.3263931274414062\",\"2.172745257616043\",\"3.165238469839096\",\"2.686458572745323\",\"0.4186500832438469\",\"3.6055014580488205\",\"2.4873876832425594\",\"0.6706545501947403\",\"1.2180450707674026\",\"2.3850797787308693\",\"1.5923993084579706\"],\"y\":[\"Erling Haaland\",\"Son Heung-Min\",\"Callum Wilson\",\"Jarrod Bowen\",\"Odsonne Edouard\",\"Bryan Mbeumo\",\"Evan Ferguson\",\"Mohamed Salah\",\"Dominic Solanke\",\"Alexander Isak\",\"Solly March\",\"Bukayo Saka\",\"Taiwo Awoniyi\",\"Hee-Chan Hwang\",\"Darwin N\\u00fa\\u00f1ez\",\"Kaoru Mitoma\",\"Pascal Gro\\u00df\",\"Michail Antonio\",\"Raheem Sterling\",\"James Ward-Prowse\"],\"type\":\"scatter\"}],                        {\"template\":{\"data\":{\"histogram2dcontour\":[{\"type\":\"histogram2dcontour\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"choropleth\":[{\"type\":\"choropleth\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"histogram2d\":[{\"type\":\"histogram2d\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"heatmap\":[{\"type\":\"heatmap\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"heatmapgl\":[{\"type\":\"heatmapgl\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"contourcarpet\":[{\"type\":\"contourcarpet\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"contour\":[{\"type\":\"contour\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"surface\":[{\"type\":\"surface\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"mesh3d\":[{\"type\":\"mesh3d\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"scatter\":[{\"fillpattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2},\"type\":\"scatter\"}],\"parcoords\":[{\"type\":\"parcoords\",\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterpolargl\":[{\"type\":\"scatterpolargl\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"bar\":[{\"error_x\":{\"color\":\"#2a3f5f\"},\"error_y\":{\"color\":\"#2a3f5f\"},\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"bar\"}],\"scattergeo\":[{\"type\":\"scattergeo\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterpolar\":[{\"type\":\"scatterpolar\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"histogram\":[{\"marker\":{\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"histogram\"}],\"scattergl\":[{\"type\":\"scattergl\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatter3d\":[{\"type\":\"scatter3d\",\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scattermapbox\":[{\"type\":\"scattermapbox\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterternary\":[{\"type\":\"scatterternary\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scattercarpet\":[{\"type\":\"scattercarpet\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"carpet\":[{\"aaxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"baxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"type\":\"carpet\"}],\"table\":[{\"cells\":{\"fill\":{\"color\":\"#EBF0F8\"},\"line\":{\"color\":\"white\"}},\"header\":{\"fill\":{\"color\":\"#C8D4E3\"},\"line\":{\"color\":\"white\"}},\"type\":\"table\"}],\"barpolar\":[{\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"barpolar\"}],\"pie\":[{\"automargin\":true,\"type\":\"pie\"}]},\"layout\":{\"autotypenumbers\":\"strict\",\"colorway\":[\"#636efa\",\"#EF553B\",\"#00cc96\",\"#ab63fa\",\"#FFA15A\",\"#19d3f3\",\"#FF6692\",\"#B6E880\",\"#FF97FF\",\"#FECB52\"],\"font\":{\"color\":\"#2a3f5f\"},\"hovermode\":\"closest\",\"hoverlabel\":{\"align\":\"left\"},\"paper_bgcolor\":\"white\",\"plot_bgcolor\":\"#E5ECF6\",\"polar\":{\"bgcolor\":\"#E5ECF6\",\"angularaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"radialaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"ternary\":{\"bgcolor\":\"#E5ECF6\",\"aaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"baxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"caxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"coloraxis\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"colorscale\":{\"sequential\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"sequentialminus\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"diverging\":[[0,\"#8e0152\"],[0.1,\"#c51b7d\"],[0.2,\"#de77ae\"],[0.3,\"#f1b6da\"],[0.4,\"#fde0ef\"],[0.5,\"#f7f7f7\"],[0.6,\"#e6f5d0\"],[0.7,\"#b8e186\"],[0.8,\"#7fbc41\"],[0.9,\"#4d9221\"],[1,\"#276419\"]]},\"xaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"automargin\":true,\"zerolinewidth\":2},\"yaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"automargin\":true,\"zerolinewidth\":2},\"scene\":{\"xaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2},\"yaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2},\"zaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2}},\"shapedefaults\":{\"line\":{\"color\":\"#2a3f5f\"}},\"annotationdefaults\":{\"arrowcolor\":\"#2a3f5f\",\"arrowhead\":0,\"arrowwidth\":1},\"geo\":{\"bgcolor\":\"white\",\"landcolor\":\"#E5ECF6\",\"subunitcolor\":\"white\",\"showland\":true,\"showlakes\":true,\"lakecolor\":\"white\"},\"title\":{\"x\":0.05},\"mapbox\":{\"style\":\"light\"}}},\"shapes\":[{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":8,\"x1\":\"8.579197525978088\",\"y0\":0,\"y1\":0},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":5,\"x1\":\"2.5317263305187225\",\"y0\":1,\"y1\":1},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":4,\"x1\":\"4.151702173054218\",\"y0\":2,\"y1\":2},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":4,\"x1\":\"2.5880690813064575\",\"y0\":3,\"y1\":3},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":4,\"x1\":\"3.337449833750725\",\"y0\":4,\"y1\":4},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":4,\"x1\":\"4.030633717775345\",\"y0\":5,\"y1\":5},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":4,\"x1\":\"2.3277347590774298\",\"y0\":6,\"y1\":6},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":3,\"x1\":\"4.1228694170713425\",\"y0\":7,\"y1\":7},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":3,\"x1\":\"3.1444294676184654\",\"y0\":8,\"y1\":8},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":3,\"x1\":\"2.3263931274414062\",\"y0\":9,\"y1\":9},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":3,\"x1\":\"2.172745257616043\",\"y0\":10,\"y1\":10},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":3,\"x1\":\"3.165238469839096\",\"y0\":11,\"y1\":11},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":3,\"x1\":\"2.686458572745323\",\"y0\":12,\"y1\":12},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":3,\"x1\":\"0.4186500832438469\",\"y0\":13,\"y1\":13},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":3,\"x1\":\"3.6055014580488205\",\"y0\":14,\"y1\":14},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":3,\"x1\":\"2.4873876832425594\",\"y0\":15,\"y1\":15},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":2,\"x1\":\"0.6706545501947403\",\"y0\":16,\"y1\":16},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":2,\"x1\":\"1.2180450707674026\",\"y0\":17,\"y1\":17},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":2,\"x1\":\"2.3850797787308693\",\"y0\":18,\"y1\":18},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":2,\"x1\":\"1.5923993084579706\",\"y0\":19,\"y1\":19}],\"title\":{\"font\":{\"size\":30},\"text\":\"Goals vs xG\"},\"xaxis\":{\"range\":[0,30]}},                        {\"responsive\": true}                    ).then(function(){\n",
              "                            \n",
              "var gd = document.getElementById('4df32591-eeb1-4fda-869b-77ec2a1d12fc');\n",
              "var x = new MutationObserver(function (mutations, observer) {{\n",
              "        var display = window.getComputedStyle(gd).display;\n",
              "        if (!display || display === 'none') {{\n",
              "            console.log([gd, 'removed!']);\n",
              "            Plotly.purge(gd);\n",
              "            observer.disconnect();\n",
              "        }}\n",
              "}});\n",
              "\n",
              "// Listen for the removal of the full notebook cells\n",
              "var notebookContainer = gd.closest('#notebook-container');\n",
              "if (notebookContainer) {{\n",
              "    x.observe(notebookContainer, {childList: true});\n",
              "}}\n",
              "\n",
              "// Listen for the clearing of the current output cell\n",
              "var outputEl = gd.closest('.output');\n",
              "if (outputEl) {{\n",
              "    x.observe(outputEl, {childList: true});\n",
              "}}\n",
              "\n",
              "                        })                };                            </script>        </div>\n",
              "</body>\n",
              "</html>"
            ]
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "seasonedit = one_game_df.drop(columns=[ 'yellow_cards','red_cards','time'])"
      ],
      "metadata": {
        "id": "zxhwefRPFQDN"
      },
      "execution_count": 74,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "top25assists.columns"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "wSmCXk6YFSz5",
        "outputId": "76b90ed8-6614-407f-fdb6-fec895f3a345"
      },
      "execution_count": 75,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Index(['id', 'player_name', 'games_x', 'time_x', 'goals_1wks_x', 'xG_1wks_x',\n",
              "       'assists_1wks_x', 'xA_1wks_x', 'shots_1wks_x', 'key_passes_1wks_x',\n",
              "       'yellow_cards_x', 'red_cards_x', 'position_x', 'team_title_x',\n",
              "       'npg_1wks_x', 'npxG_1wks_x', 'xGChain_x', 'xGBuildup_x', 'games_y',\n",
              "       'time_y', 'goals_season', 'xG_season', 'assists_season', 'xA_season',\n",
              "       'shots_season', 'key_passes_season', 'yellow_cards_y', 'red_cards_y',\n",
              "       'npg_season', 'npxG_season', 'xGChain_y', 'xGBuildup_y', 'games',\n",
              "       'time', 'goals_1wks_y', 'xG_1wks_y', 'assists_1wks_y', 'xA_1wks_y',\n",
              "       'shots_1wks_y', 'key_passes_1wks_y', 'yellow_cards', 'red_cards',\n",
              "       'position_y', 'team_title_y', 'npg_1wks_y', 'npxG_1wks_y', 'xGChain',\n",
              "       'xGBuildup', 'goals', 'assists'],\n",
              "      dtype='object')"
            ]
          },
          "metadata": {},
          "execution_count": 75
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "top20assists = top25assists.drop(columns=[ 'shots_1wks_x', 'key_passes_1wks_x',\n",
        "       'yellow_cards_x', 'red_cards_x', 'position_x', 'team_title_x',\n",
        "       'npg_1wks_x', 'npxG_1wks_x', 'xGChain_x', 'xGBuildup_x', 'games_y',\n",
        "       'time_y', 'goals_season', 'xG_season', 'assists_season', 'xA_season',\n",
        "       'shots_season', 'key_passes_season', 'yellow_cards_y', 'red_cards_y',\n",
        "       'npg_season', 'npxG_season', 'xGChain_y', 'xGBuildup_y', 'games',\n",
        "       'time', 'goals_1wks_y', 'xG_1wks_y', 'assists_1wks_y', 'xA_1wks_y',\n",
        "       'shots_1wks_y', 'key_passes_1wks_y', 'yellow_cards', 'red_cards',\n",
        "       'position_y', 'team_title_y', 'npg_1wks_y', 'npxG_1wks_y', 'xGChain',\n",
        "       'xGBuildup', 'assists_1wks_x', 'games_x', 'time_x', 'goals_1wks_x', 'id' ])\n",
        "\n",
        "top20assists.reset_index(inplace = True,drop = True)\n",
        "top20assists"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 677
        },
        "id": "_Xn659fiFXvb",
        "outputId": "5d917efc-1276-46eb-99e9-4751e266c7be"
      },
      "execution_count": 76,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "             player_name             xG_1wks_x            xA_1wks_x  goals  \\\n",
              "0          Mohamed Salah    4.1228694170713425   4.0291087329387665      3   \n",
              "1         James Maddison    1.7259051259607077    2.172846231609583      2   \n",
              "2             Pedro Neto    0.9463459253311157   2.4093276858329773      1   \n",
              "3           Kaoru Mitoma    2.4873876832425594   2.0108523070812225      3   \n",
              "4      James Ward-Prowse    1.5923993084579706   1.5058446452021599      2   \n",
              "5         Julián Álvarez     2.704055093228817   1.4385859072208405      2   \n",
              "6              Estupiñán    0.6494380263611674    2.586997412145138      1   \n",
              "7             Phil Foden    0.8010636642575264   1.2462816648185253      1   \n",
              "8        Kieran Trippier  0.011364758014678955   2.2047189939767122      0   \n",
              "9   Jean-Philippe Mateta   0.12148869782686234   0.9034757018089294      0   \n",
              "10           Bukayo Saka     3.165238469839096   1.6839852184057236      3   \n",
              "11         Taiwo Awoniyi     2.686458572745323    0.575734082609415      3   \n",
              "12          Moussa Diaby    1.3126200884580612   2.7922986894845963      2   \n",
              "13        Anthony Gordon    1.2908078134059906   2.3695434629917145      2   \n",
              "14         Ollie Watkins    2.5903127640485764   1.5743603855371475      1   \n",
              "15           Jordan Ayew    1.3352972716093063    1.040465697646141      0   \n",
              "16           Lucas Digne   0.11631829477846622   0.8520027101039886      0   \n",
              "17          Serge Aurier  0.022981125861406326    0.566937267780304      0   \n",
              "18    Gabriel Martinelli     0.666835606098175   0.2102539911866188      0   \n",
              "19         Tariq Lamptey   0.01694534160196781  0.22285597026348114      0   \n",
              "\n",
              "    assists  \n",
              "0         4  \n",
              "1         4  \n",
              "2         4  \n",
              "3         3  \n",
              "4         3  \n",
              "5         3  \n",
              "6         3  \n",
              "7         3  \n",
              "8         3  \n",
              "9         3  \n",
              "10        2  \n",
              "11        2  \n",
              "12        2  \n",
              "13        2  \n",
              "14        2  \n",
              "15        2  \n",
              "16        2  \n",
              "17        2  \n",
              "18        2  \n",
              "19        2  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-0bf8eb66-b85c-41db-b980-35faacb355f5\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>player_name</th>\n",
              "      <th>xG_1wks_x</th>\n",
              "      <th>xA_1wks_x</th>\n",
              "      <th>goals</th>\n",
              "      <th>assists</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>Mohamed Salah</td>\n",
              "      <td>4.1228694170713425</td>\n",
              "      <td>4.0291087329387665</td>\n",
              "      <td>3</td>\n",
              "      <td>4</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>James Maddison</td>\n",
              "      <td>1.7259051259607077</td>\n",
              "      <td>2.172846231609583</td>\n",
              "      <td>2</td>\n",
              "      <td>4</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>Pedro Neto</td>\n",
              "      <td>0.9463459253311157</td>\n",
              "      <td>2.4093276858329773</td>\n",
              "      <td>1</td>\n",
              "      <td>4</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>Kaoru Mitoma</td>\n",
              "      <td>2.4873876832425594</td>\n",
              "      <td>2.0108523070812225</td>\n",
              "      <td>3</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>James Ward-Prowse</td>\n",
              "      <td>1.5923993084579706</td>\n",
              "      <td>1.5058446452021599</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>Julián Álvarez</td>\n",
              "      <td>2.704055093228817</td>\n",
              "      <td>1.4385859072208405</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>Estupiñán</td>\n",
              "      <td>0.6494380263611674</td>\n",
              "      <td>2.586997412145138</td>\n",
              "      <td>1</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>Phil Foden</td>\n",
              "      <td>0.8010636642575264</td>\n",
              "      <td>1.2462816648185253</td>\n",
              "      <td>1</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>Kieran Trippier</td>\n",
              "      <td>0.011364758014678955</td>\n",
              "      <td>2.2047189939767122</td>\n",
              "      <td>0</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>Jean-Philippe Mateta</td>\n",
              "      <td>0.12148869782686234</td>\n",
              "      <td>0.9034757018089294</td>\n",
              "      <td>0</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10</th>\n",
              "      <td>Bukayo Saka</td>\n",
              "      <td>3.165238469839096</td>\n",
              "      <td>1.6839852184057236</td>\n",
              "      <td>3</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>11</th>\n",
              "      <td>Taiwo Awoniyi</td>\n",
              "      <td>2.686458572745323</td>\n",
              "      <td>0.575734082609415</td>\n",
              "      <td>3</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>12</th>\n",
              "      <td>Moussa Diaby</td>\n",
              "      <td>1.3126200884580612</td>\n",
              "      <td>2.7922986894845963</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>13</th>\n",
              "      <td>Anthony Gordon</td>\n",
              "      <td>1.2908078134059906</td>\n",
              "      <td>2.3695434629917145</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>14</th>\n",
              "      <td>Ollie Watkins</td>\n",
              "      <td>2.5903127640485764</td>\n",
              "      <td>1.5743603855371475</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>15</th>\n",
              "      <td>Jordan Ayew</td>\n",
              "      <td>1.3352972716093063</td>\n",
              "      <td>1.040465697646141</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>16</th>\n",
              "      <td>Lucas Digne</td>\n",
              "      <td>0.11631829477846622</td>\n",
              "      <td>0.8520027101039886</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>17</th>\n",
              "      <td>Serge Aurier</td>\n",
              "      <td>0.022981125861406326</td>\n",
              "      <td>0.566937267780304</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>18</th>\n",
              "      <td>Gabriel Martinelli</td>\n",
              "      <td>0.666835606098175</td>\n",
              "      <td>0.2102539911866188</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>19</th>\n",
              "      <td>Tariq Lamptey</td>\n",
              "      <td>0.01694534160196781</td>\n",
              "      <td>0.22285597026348114</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-0bf8eb66-b85c-41db-b980-35faacb355f5')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-0bf8eb66-b85c-41db-b980-35faacb355f5 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-0bf8eb66-b85c-41db-b980-35faacb355f5');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-6bfd730f-48c8-4f93-a276-157d72a3a233\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-6bfd730f-48c8-4f93-a276-157d72a3a233')\"\n",
              "            title=\"Suggest charts.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-6bfd730f-48c8-4f93-a276-157d72a3a233 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 76
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "fig4= go.Figure()\n",
        "fig4.add_trace(go.Scatter(x = top20assists[\"assists\"],\n",
        "                          y = top20assists[\"player_name\"],\n",
        "                          mode = 'markers',\n",
        "                          marker_color = 'darkblue',\n",
        "                          marker_size = 10,\n",
        "                          name = 'assists'))\n",
        "fig4.add_trace(go.Scatter(x = top20assists[\"xA_1wks_x\"],\n",
        "                          y = top20assists[\"player_name\"],\n",
        "                          mode = 'markers',\n",
        "                          marker_color = 'darkorange',\n",
        "                          marker_size = 10,\n",
        "                          name = 'xA'))\n",
        "for i in range(0, len(top20assists)):\n",
        "               fig4.add_shape(type='line',\n",
        "                              x0 = top20assists['assists'][i],\n",
        "                              y0 = i,\n",
        "                              x1 = top20assists[\"xA_1wks_x\"][i],\n",
        "                              y1 = i,\n",
        "                              line=dict(color='crimson', width = 3))\n",
        "fig4.update_layout(title_text =\n",
        "                    \"assists vs xG\",\n",
        "                    title_font_size = 15)\n",
        "fig4.update_xaxes(range=[0, 15])\n",
        "fig4.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 542
        },
        "id": "P6oVjqCSF4Pw",
        "outputId": "d599eb03-6638-44a2-9a28-92ebe8da96b2"
      },
      "execution_count": 77,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<html>\n",
              "<head><meta charset=\"utf-8\" /></head>\n",
              "<body>\n",
              "    <div>            <script src=\"https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.5/MathJax.js?config=TeX-AMS-MML_SVG\"></script><script type=\"text/javascript\">if (window.MathJax && window.MathJax.Hub && window.MathJax.Hub.Config) {window.MathJax.Hub.Config({SVG: {font: \"STIX-Web\"}});}</script>                <script type=\"text/javascript\">window.PlotlyConfig = {MathJaxConfig: 'local'};</script>\n",
              "        <script charset=\"utf-8\" src=\"https://cdn.plot.ly/plotly-2.24.1.min.js\"></script>                <div id=\"eb7b4962-2a51-459f-be82-38a96b1170bc\" class=\"plotly-graph-div\" style=\"height:525px; width:100%;\"></div>            <script type=\"text/javascript\">                                    window.PLOTLYENV=window.PLOTLYENV || {};                                    if (document.getElementById(\"eb7b4962-2a51-459f-be82-38a96b1170bc\")) {                    Plotly.newPlot(                        \"eb7b4962-2a51-459f-be82-38a96b1170bc\",                        [{\"marker\":{\"color\":\"darkblue\",\"size\":10},\"mode\":\"markers\",\"name\":\"assists\",\"x\":[4,4,4,3,3,3,3,3,3,3,2,2,2,2,2,2,2,2,2,2],\"y\":[\"Mohamed Salah\",\"James Maddison\",\"Pedro Neto\",\"Kaoru Mitoma\",\"James Ward-Prowse\",\"Juli\\u00e1n \\u00c1lvarez\",\"Estupi\\u00f1\\u00e1n\",\"Phil Foden\",\"Kieran Trippier\",\"Jean-Philippe Mateta\",\"Bukayo Saka\",\"Taiwo Awoniyi\",\"Moussa Diaby\",\"Anthony Gordon\",\"Ollie Watkins\",\"Jordan Ayew\",\"Lucas Digne\",\"Serge Aurier\",\"Gabriel Martinelli\",\"Tariq Lamptey\"],\"type\":\"scatter\"},{\"marker\":{\"color\":\"darkorange\",\"size\":10},\"mode\":\"markers\",\"name\":\"xA\",\"x\":[\"4.0291087329387665\",\"2.172846231609583\",\"2.4093276858329773\",\"2.0108523070812225\",\"1.5058446452021599\",\"1.4385859072208405\",\"2.586997412145138\",\"1.2462816648185253\",\"2.2047189939767122\",\"0.9034757018089294\",\"1.6839852184057236\",\"0.575734082609415\",\"2.7922986894845963\",\"2.3695434629917145\",\"1.5743603855371475\",\"1.040465697646141\",\"0.8520027101039886\",\"0.566937267780304\",\"0.2102539911866188\",\"0.22285597026348114\"],\"y\":[\"Mohamed Salah\",\"James Maddison\",\"Pedro Neto\",\"Kaoru Mitoma\",\"James Ward-Prowse\",\"Juli\\u00e1n \\u00c1lvarez\",\"Estupi\\u00f1\\u00e1n\",\"Phil Foden\",\"Kieran Trippier\",\"Jean-Philippe Mateta\",\"Bukayo Saka\",\"Taiwo Awoniyi\",\"Moussa Diaby\",\"Anthony Gordon\",\"Ollie Watkins\",\"Jordan Ayew\",\"Lucas Digne\",\"Serge Aurier\",\"Gabriel Martinelli\",\"Tariq Lamptey\"],\"type\":\"scatter\"}],                        {\"template\":{\"data\":{\"histogram2dcontour\":[{\"type\":\"histogram2dcontour\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"choropleth\":[{\"type\":\"choropleth\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"histogram2d\":[{\"type\":\"histogram2d\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"heatmap\":[{\"type\":\"heatmap\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"heatmapgl\":[{\"type\":\"heatmapgl\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"contourcarpet\":[{\"type\":\"contourcarpet\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"contour\":[{\"type\":\"contour\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"surface\":[{\"type\":\"surface\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"mesh3d\":[{\"type\":\"mesh3d\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"scatter\":[{\"fillpattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2},\"type\":\"scatter\"}],\"parcoords\":[{\"type\":\"parcoords\",\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterpolargl\":[{\"type\":\"scatterpolargl\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"bar\":[{\"error_x\":{\"color\":\"#2a3f5f\"},\"error_y\":{\"color\":\"#2a3f5f\"},\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"bar\"}],\"scattergeo\":[{\"type\":\"scattergeo\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterpolar\":[{\"type\":\"scatterpolar\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"histogram\":[{\"marker\":{\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"histogram\"}],\"scattergl\":[{\"type\":\"scattergl\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatter3d\":[{\"type\":\"scatter3d\",\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scattermapbox\":[{\"type\":\"scattermapbox\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterternary\":[{\"type\":\"scatterternary\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scattercarpet\":[{\"type\":\"scattercarpet\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"carpet\":[{\"aaxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"baxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"type\":\"carpet\"}],\"table\":[{\"cells\":{\"fill\":{\"color\":\"#EBF0F8\"},\"line\":{\"color\":\"white\"}},\"header\":{\"fill\":{\"color\":\"#C8D4E3\"},\"line\":{\"color\":\"white\"}},\"type\":\"table\"}],\"barpolar\":[{\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"barpolar\"}],\"pie\":[{\"automargin\":true,\"type\":\"pie\"}]},\"layout\":{\"autotypenumbers\":\"strict\",\"colorway\":[\"#636efa\",\"#EF553B\",\"#00cc96\",\"#ab63fa\",\"#FFA15A\",\"#19d3f3\",\"#FF6692\",\"#B6E880\",\"#FF97FF\",\"#FECB52\"],\"font\":{\"color\":\"#2a3f5f\"},\"hovermode\":\"closest\",\"hoverlabel\":{\"align\":\"left\"},\"paper_bgcolor\":\"white\",\"plot_bgcolor\":\"#E5ECF6\",\"polar\":{\"bgcolor\":\"#E5ECF6\",\"angularaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"radialaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"ternary\":{\"bgcolor\":\"#E5ECF6\",\"aaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"baxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"caxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"coloraxis\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"colorscale\":{\"sequential\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"sequentialminus\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"diverging\":[[0,\"#8e0152\"],[0.1,\"#c51b7d\"],[0.2,\"#de77ae\"],[0.3,\"#f1b6da\"],[0.4,\"#fde0ef\"],[0.5,\"#f7f7f7\"],[0.6,\"#e6f5d0\"],[0.7,\"#b8e186\"],[0.8,\"#7fbc41\"],[0.9,\"#4d9221\"],[1,\"#276419\"]]},\"xaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"automargin\":true,\"zerolinewidth\":2},\"yaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"automargin\":true,\"zerolinewidth\":2},\"scene\":{\"xaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2},\"yaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2},\"zaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2}},\"shapedefaults\":{\"line\":{\"color\":\"#2a3f5f\"}},\"annotationdefaults\":{\"arrowcolor\":\"#2a3f5f\",\"arrowhead\":0,\"arrowwidth\":1},\"geo\":{\"bgcolor\":\"white\",\"landcolor\":\"#E5ECF6\",\"subunitcolor\":\"white\",\"showland\":true,\"showlakes\":true,\"lakecolor\":\"white\"},\"title\":{\"x\":0.05},\"mapbox\":{\"style\":\"light\"}}},\"shapes\":[{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":4,\"x1\":\"4.0291087329387665\",\"y0\":0,\"y1\":0},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":4,\"x1\":\"2.172846231609583\",\"y0\":1,\"y1\":1},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":4,\"x1\":\"2.4093276858329773\",\"y0\":2,\"y1\":2},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":3,\"x1\":\"2.0108523070812225\",\"y0\":3,\"y1\":3},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":3,\"x1\":\"1.5058446452021599\",\"y0\":4,\"y1\":4},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":3,\"x1\":\"1.4385859072208405\",\"y0\":5,\"y1\":5},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":3,\"x1\":\"2.586997412145138\",\"y0\":6,\"y1\":6},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":3,\"x1\":\"1.2462816648185253\",\"y0\":7,\"y1\":7},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":3,\"x1\":\"2.2047189939767122\",\"y0\":8,\"y1\":8},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":3,\"x1\":\"0.9034757018089294\",\"y0\":9,\"y1\":9},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":2,\"x1\":\"1.6839852184057236\",\"y0\":10,\"y1\":10},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":2,\"x1\":\"0.575734082609415\",\"y0\":11,\"y1\":11},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":2,\"x1\":\"2.7922986894845963\",\"y0\":12,\"y1\":12},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":2,\"x1\":\"2.3695434629917145\",\"y0\":13,\"y1\":13},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":2,\"x1\":\"1.5743603855371475\",\"y0\":14,\"y1\":14},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":2,\"x1\":\"1.040465697646141\",\"y0\":15,\"y1\":15},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":2,\"x1\":\"0.8520027101039886\",\"y0\":16,\"y1\":16},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":2,\"x1\":\"0.566937267780304\",\"y0\":17,\"y1\":17},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":2,\"x1\":\"0.2102539911866188\",\"y0\":18,\"y1\":18},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":2,\"x1\":\"0.22285597026348114\",\"y0\":19,\"y1\":19}],\"title\":{\"font\":{\"size\":15},\"text\":\"assists vs xG\"},\"xaxis\":{\"range\":[0,15]}},                        {\"responsive\": true}                    ).then(function(){\n",
              "                            \n",
              "var gd = document.getElementById('eb7b4962-2a51-459f-be82-38a96b1170bc');\n",
              "var x = new MutationObserver(function (mutations, observer) {{\n",
              "        var display = window.getComputedStyle(gd).display;\n",
              "        if (!display || display === 'none') {{\n",
              "            console.log([gd, 'removed!']);\n",
              "            Plotly.purge(gd);\n",
              "            observer.disconnect();\n",
              "        }}\n",
              "}});\n",
              "\n",
              "// Listen for the removal of the full notebook cells\n",
              "var notebookContainer = gd.closest('#notebook-container');\n",
              "if (notebookContainer) {{\n",
              "    x.observe(notebookContainer, {childList: true});\n",
              "}}\n",
              "\n",
              "// Listen for the clearing of the current output cell\n",
              "var outputEl = gd.closest('.output');\n",
              "if (outputEl) {{\n",
              "    x.observe(outputEl, {childList: true});\n",
              "}}\n",
              "\n",
              "                        })                };                            </script>        </div>\n",
              "</body>\n",
              "</html>"
            ]
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import pandas as pd\n",
        "import matplotlib.pyplot as plt\n",
        "\n",
        "# Assuming you have already loaded the DataFrame named 'Top50'\n",
        "\n",
        "# Filter the DataFrame by position type\n",
        "midfielders = Top50[Top50['pos'] == 'M']\n",
        "forwards = Top50[Top50['pos'] == 'F']\n",
        "defenders = Top50[Top50['pos'] == 'D']\n",
        "\n",
        "# Sort the filtered DataFrames by '5GW Total' in descending order\n",
        "midfielders = midfielders.sort_values(by='5GW Total', ascending=False)\n",
        "forwards = forwards.sort_values(by='5GW Total', ascending=False)\n",
        "defenders = defenders.sort_values(by='5GW Total', ascending=False)\n",
        "\n",
        "# Plotting the bar charts\n",
        "plt.figure(figsize=(12, 6))\n",
        "\n",
        "# Midfielders chart\n",
        "plt.subplot(131)\n",
        "plt.bar(midfielders['name'][:10], midfielders['5GW Total'][:10])\n",
        "plt.title('Top 10 Midfielders by 5GW Total')\n",
        "plt.xticks(rotation=45)\n",
        "\n",
        "# Forwards chart\n",
        "plt.subplot(132)\n",
        "plt.bar(forwards['name'][:10], forwards['5GW Total'][:10])\n",
        "plt.title('Top 10 Forwards by 5GW Total')\n",
        "plt.xticks(rotation=45)\n",
        "\n",
        "# Defenders chart\n",
        "plt.subplot(133)\n",
        "plt.bar(defenders['name'][:10], defenders['5GW Total'][:10])\n",
        "plt.title('Top 10 Defenders by 5GW Total')\n",
        "plt.xticks(rotation=45)\n",
        "\n",
        "plt.tight_layout()\n",
        "plt.show()\n"
      ],
      "metadata": {
        "id": "FN06IYwSKGLw",
        "outputId": "eeefb6ae-26e2-43c7-d724-d3d380a0f323",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 601
        }
      },
      "execution_count": 78,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1200x600 with 3 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import pandas as pd\n",
        "import matplotlib.pyplot as plt\n",
        "\n",
        "# Assuming you have already loaded the DataFrame named 'Top50'\n",
        "\n",
        "# Filter the DataFrame by position type\n",
        "midfielders = Top50[Top50['pos'] == 'M']\n",
        "forwards = Top50[Top50['pos'] == 'F']\n",
        "defenders = Top50[Top50['pos'] == 'D']\n",
        "\n",
        "# Sort the filtered DataFrames by '5GW Total' in descending order\n",
        "midfielders = midfielders.sort_values(by='5GW Total', ascending=False)\n",
        "forwards = forwards.sort_values(by='5GW Total', ascending=False)\n",
        "defenders = defenders.sort_values(by='5GW Total', ascending=False)\n",
        "\n",
        "# Create a list of colors for each chart\n",
        "colors = ['blue', 'green', 'red']\n",
        "\n",
        "# Plotting the horizontal bar charts with different colors\n",
        "plt.figure(figsize=(10, 6))\n",
        "\n",
        "# Midfielders chart\n",
        "plt.barh(midfielders['name'][:10], midfielders['5GW Total'][:10], color=colors[0])\n",
        "plt.title('Top 10 Midfielders by 5GW Total')\n",
        "plt.xlabel('5GW Total')\n",
        "plt.gca().invert_yaxis()  # Invert y-axis to have higher values at the top\n",
        "\n",
        "# Forwards chart\n",
        "plt.figure(figsize=(10, 6))\n",
        "plt.barh(forwards['name'][:10], forwards['5GW Total'][:10], color=colors[1])\n",
        "plt.title('Top 10 Forwards by 5GW Total')\n",
        "plt.xlabel('5GW Total')\n",
        "plt.gca().invert_yaxis()  # Invert y-axis to have higher values at the top\n",
        "\n",
        "# Defenders chart\n",
        "plt.figure(figsize=(10, 6))\n",
        "plt.barh(defenders['name'][:10], defenders['5GW Total'][:10], color=colors[2])\n",
        "plt.title('Top 10 Defenders by 5GW Total')\n",
        "plt.xlabel('5GW Total')\n",
        "plt.gca().invert_yaxis()  # Invert y-axis to have higher values at the top\n",
        "\n",
        "plt.tight_layout()\n",
        "plt.show()\n"
      ],
      "metadata": {
        "id": "VSYcUse-SrV-",
        "outputId": "c782147b-be7a-45dd-8242-190cdf8a84ac",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        }
      },
      "execution_count": 79,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1000x600 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1000x600 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1000x600 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import pandas as pd\n",
        "import seaborn as sns\n",
        "import matplotlib.pyplot as plt\n",
        "\n",
        "# Assuming you have already loaded the DataFrame named 'gwadjustments26'\n",
        "\n",
        "# Set the index column\n",
        "gwadjustments26.set_index('team', inplace=True)\n",
        "\n",
        "# Create a color map\n",
        "cmap = sns.diverging_palette(240, 10, as_cmap=True)\n",
        "\n",
        "# Plot the heatmap\n",
        "plt.figure(figsize=(8, 6))\n",
        "sns.heatmap(gwadjustments26, annot=True, cmap=cmap, center=0)\n",
        "plt.title('Color-Coded Table of GW Adjustments')\n",
        "plt.show()\n"
      ],
      "metadata": {
        "id": "X2DQdb15YZfr",
        "outputId": "37ac1741-0565-43d3-e8bf-415ff17cbd7d",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 245
        }
      },
      "execution_count": 80,
      "outputs": [
        {
          "output_type": "error",
          "ename": "NameError",
          "evalue": "ignored",
          "traceback": [
            "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
            "\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)",
            "\u001b[0;32m<ipython-input-80-41580282a9ec>\u001b[0m in \u001b[0;36m<cell line: 8>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      6\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      7\u001b[0m \u001b[0;31m# Set the index column\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 8\u001b[0;31m \u001b[0mgwadjustments26\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mset_index\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m'team'\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0minplace\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mTrue\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      9\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     10\u001b[0m \u001b[0;31m# Create a color map\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;31mNameError\u001b[0m: name 'gwadjustments26' is not defined"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "plt.figure(figsize=(10, 6))\n",
        "\n",
        "scores_columns = ['gw2adjustment', 'gw3adjustment', 'gw4adjustment', 'gw5adjustment', 'gw6adjustment']\n",
        "\n",
        "bottom = [0] * len(gwadjustments26)\n",
        "\n",
        "for score_col in scores_columns:\n",
        "    plt.bar(gwadjustments26.index, gwadjustments26[score_col], bottom=bottom, label=score_col)\n",
        "    bottom += gwadjustments26[score_col]\n",
        "\n",
        "plt.xlabel('Teams')\n",
        "plt.ylabel('Score Adjustments')\n",
        "plt.title('Stacked GW Adjustments for Different Teams')\n",
        "plt.xticks(rotation=45)\n",
        "plt.legend()\n",
        "plt.tight_layout()\n",
        "\n",
        "plt.show()\n"
      ],
      "metadata": {
        "id": "z7T7SgQSYyL8"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "plt.figure(figsize=(10, 6))\n",
        "\n",
        "# Calculate the total score adjustments for each team\n",
        "gwadjustments26['Total'] = gwadjustments26.sum(axis=1)\n",
        "\n",
        "# Sort the DataFrame by the 'Total' column in descending order\n",
        "gwadjustments26 = gwadjustments26.sort_values(by='Total', ascending=False)\n",
        "\n",
        "# Get the scores columns\n",
        "scores_columns = ['gw2adjustment', 'gw3adjustment', 'gw4adjustment', 'gw5adjustment', 'gw6adjustment']\n",
        "\n",
        "bottom = [0] * len(gwadjustments26)\n",
        "\n",
        "for score_col in scores_columns:\n",
        "    plt.bar(gwadjustments26.index, gwadjustments26[score_col], bottom=bottom, label=score_col)\n",
        "    bottom += gwadjustments26[score_col]\n",
        "\n",
        "plt.xlabel('Teams')\n",
        "plt.ylabel('Score Adjustments')\n",
        "plt.title('Stacked GW Adjustments for Different Teams')\n",
        "plt.xticks(rotation=45)\n",
        "plt.legend()\n",
        "plt.tight_layout()\n",
        "\n",
        "plt.show()\n"
      ],
      "metadata": {
        "id": "XxE_pa9xZB8N"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "import pandas as pd\n",
        "import seaborn as sns\n",
        "import matplotlib.pyplot as plt\n",
        "\n",
        "# Assuming you have already loaded the DataFrame named 'gwadjustments26'\n",
        "\n",
        "# Set the index column\n",
        "gwadjustments26.set_index('team', inplace=True)\n",
        "\n",
        "# Create a custom color map\n",
        "cmap = sns.diverging_palette(240, 10, n=21, as_cmap=True)\n",
        "colors = ['red', 'orange', 'green']\n",
        "\n",
        "# Define color thresholds\n",
        "color_thresholds = [0.9, 1.1, 2.0]\n",
        "\n",
        "# Normalize values for coloring\n",
        "normalized_values = (gwadjustments26 - 0.9) / (2.0 - 0.9)\n",
        "\n",
        "# Apply color map and thresholds\n",
        "colored_values = pd.cut(normalized_values, bins=color_thresholds, labels=colors)\n",
        "\n",
        "# Plot the heatmap with customized color coding\n",
        "plt.figure(figsize=(8, 6))\n",
        "sns.heatmap(normalized_values, annot=True, cmap=cmap, center=1, cbar=False, fmt=\".2f\", linewidths=0.5, linecolor='white')\n",
        "plt.title('Custom Color-Coded Table of GW Adjustments')\n",
        "plt.xticks(rotation=45)\n",
        "plt.show()\n"
      ],
      "metadata": {
        "id": "_YnxO1yMZekH"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "plt.figure(figsize=(10, 8))\n",
        "\n",
        "# Calculate the total score adjustments for each team\n",
        "gwadjustments26['Total'] = gwadjustments26.sum(axis=1)\n",
        "\n",
        "# Sort the DataFrame by the 'Total' column in descending order\n",
        "gwadjustments26 = gwadjustments26.sort_values(by='Total', ascending=False)\n",
        "\n",
        "# Get the scores columns\n",
        "scores_columns = ['gw2adjustment', 'gw3adjustment', 'gw4adjustment', 'gw5adjustment', 'gw6adjustment']\n",
        "\n",
        "# Define color thresholds and corresponding colors\n",
        "color_thresholds = [0.9, 1.1, 2.0]\n",
        "colors = ['red', 'orange', 'green']\n",
        "\n",
        "bottom = [0] * len(gwadjustments26)\n",
        "\n",
        "for score_col in scores_columns:\n",
        "    adjusted_values = gwadjustments26[score_col]\n",
        "\n",
        "    # Create a color list based on thresholds\n",
        "    colors_for_col = [colors[-1] if val is None else\n",
        "                      colors[0] if val < color_thresholds[0] else\n",
        "                      colors[1] if val <= color_thresholds[1] else\n",
        "                      colors[2]\n",
        "                      for val in adjusted_values]\n",
        "\n",
        "    for i, (val, color) in enumerate(zip(adjusted_values, colors_for_col)):\n",
        "        plt.barh(gwadjustments26.index[i], val, color=color, edgecolor='white')\n",
        "\n",
        "    bottom += adjusted_values\n",
        "\n",
        "plt.xlabel('Score Adjustments')\n",
        "plt.ylabel('Teams')\n",
        "plt.title('Horizontally Stacked GW Adjustments for Different Teams')\n",
        "plt.legend(labels=scores_columns)\n",
        "plt.gca().invert_yaxis()  # Invert y-axis to have higher values at the top\n",
        "plt.tight_layout()\n",
        "\n",
        "plt.show()\n"
      ],
      "metadata": {
        "id": "5agSlfUragM2"
      },
      "execution_count": null,
      "outputs": []
    }
  ]
}